package tencentcloud

import "github.com/pulumi/pulumi-terraform-bridge/v3/pkg/tfbridge"

var ResourceInfo = map[string]*tfbridge.ResourceInfo{
	"tencentcloud_emr_cluster":                    {Tok: tfbridge.MakeResource(mainPkg, "Emr", "Cluster")},
	"tencentcloud_instance":                       {Tok: tfbridge.MakeResource(mainPkg, "Cvm", "Instance")},
	"tencentcloud_reserved_instance":              {Tok: tfbridge.MakeResource(mainPkg, "Cvm", "ReservedInstance")},
	"tencentcloud_key_pair":                       {Tok: tfbridge.MakeResource(mainPkg, "Key", "Pair")},
	"tencentcloud_placement_group":                {Tok: tfbridge.MakeResource(mainPkg, "Placement", "Group")},
	"tencentcloud_cbs_snapshot":                   {Tok: tfbridge.MakeResource(mainPkg, "Cbs", "Snapshot")},
	"tencentcloud_cbs_snapshot_policy":            {Tok: tfbridge.MakeResource(mainPkg, "Cbs", "SnapshotPolicy")},
	"tencentcloud_cbs_storage":                    {Tok: tfbridge.MakeResource(mainPkg, "Cbs", "Storage")},
	"tencentcloud_cbs_storage_attachment":         {Tok: tfbridge.MakeResource(mainPkg, "Cbs", "StorageAttachment")},
	"tencentcloud_cbs_snapshot_policy_attachment": {Tok: tfbridge.MakeResource(mainPkg, "Cbs", "SnapshotPolicyAttachment")},
	"tencentcloud_vpc":                            {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "Instance")},
	"tencentcloud_vpc_acl":                        {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "ACL")},
	"tencentcloud_vpc_acl_attachment":             {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "AclAttachment")},
	"tencentcloud_subnet":                         {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "Subnet")},
	"tencentcloud_route_entry":                    {Tok: tfbridge.MakeResource(mainPkg, "Route", "Entry")},
	"tencentcloud_route_table_entry":              {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "RouteEntry")},
	"tencentcloud_route_table":                    {Tok: tfbridge.MakeResource(mainPkg, "Vpc", "RouteTable")},
	"tencentcloud_dnat":                           {Tok: tfbridge.MakeResource(mainPkg, "Dnat", "Instance")},
	"tencentcloud_nat_gateway":                    {Tok: tfbridge.MakeResource(mainPkg, "Nat", "Gateway")},
	"tencentcloud_nat_gateway_snat":               {Tok: tfbridge.MakeResource(mainPkg, "Nat", "GatewaySnat")},
	"tencentcloud_eip":                            {Tok: tfbridge.MakeResource(mainPkg, "Eip", "Instance")},
	"tencentcloud_eip_association":                {Tok: tfbridge.MakeResource(mainPkg, "Eip", "Association")},
	"tencentcloud_eni":                            {Tok: tfbridge.MakeResource(mainPkg, "Eni", "Instance")},
	"tencentcloud_eni_attachment":                 {Tok: tfbridge.MakeResource(mainPkg, "Eni", "Attachment")},
	"tencentcloud_ccn":                            {Tok: tfbridge.MakeResource(mainPkg, "Ccn", "Instance")},
	"tencentcloud_ccn_attachment":                 {Tok: tfbridge.MakeResource(mainPkg, "Ccn", "Attachment")},
	"tencentcloud_ccn_bandwidth_limit":            {Tok: tfbridge.MakeResource(mainPkg, "Ccn", "CcnBandwidthLimit")},
	"tencentcloud_dcx":                            {Tok: tfbridge.MakeResource(mainPkg, "Dcx", "Instance")},
	"tencentcloud_dc_gateway":                     {Tok: tfbridge.MakeResource(mainPkg, "Dc", "GatewayInstance")},
	"tencentcloud_dc_gateway_ccn_route":           {Tok: tfbridge.MakeResource(mainPkg, "Dc", "GatewayCcnRouteInstance")},
	"tencentcloud_vpn_customer_gateway":           {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "CustomerGateway")},
	"tencentcloud_vpn_gateway":                    {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "Gateway")},
	"tencentcloud_vpn_gateway_route":              {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "GatewayRoute")},
	"tencentcloud_vpn_connection":                 {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "Connection")},
	"tencentcloud_vpn_ssl_server":                 {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "SslServer")},
	"tencentcloud_vpn_ssl_client":                 {Tok: tfbridge.MakeResource(mainPkg, "Vpn", "SslClient")},
	"tencentcloud_ha_vip":                         {Tok: tfbridge.MakeResource(mainPkg, "Ha", "HaVip")},
	"tencentcloud_ha_vip_eip_attachment":          {Tok: tfbridge.MakeResource(mainPkg, "Ha", "VipEipAttachment")},
	"tencentcloud_security_group":                 {Tok: tfbridge.MakeResource(mainPkg, "Security", "Group")},
	"tencentcloud_security_group_rule":            {Tok: tfbridge.MakeResource(mainPkg, "Security", "GroupRule")},
	"tencentcloud_security_group_lite_rule":       {Tok: tfbridge.MakeResource(mainPkg, "Security", "GroupLiteRule")},
	//"tencentcloud_lb":                                      {Tok: tfbridge.MakeResource(mainPkg, "LB","Instance")},
	//"tencentcloud_alb_server_attachment":                   {Tok: tfbridge.MakeResource(mainPkg, "Alb", "ServerAttachment")},
	"tencentcloud_clb_instance":                            {Tok: tfbridge.MakeResource(mainPkg, "Clb", "Instance")},
	"tencentcloud_clb_listener":                            {Tok: tfbridge.MakeResource(mainPkg, "Clb", "Listener")},
	"tencentcloud_clb_listener_rule":                       {Tok: tfbridge.MakeResource(mainPkg, "Clb", "ListenerRule")},
	"tencentcloud_clb_attachment":                          {Tok: tfbridge.MakeResource(mainPkg, "Clb", "ServerAttachment")},
	"tencentcloud_clb_redirection":                         {Tok: tfbridge.MakeResource(mainPkg, "Clb", "Redirection")},
	"tencentcloud_clb_target_group":                        {Tok: tfbridge.MakeResource(mainPkg, "Clb", "TargetGroup")},
	"tencentcloud_clb_target_group_instance_attachment":    {Tok: tfbridge.MakeResource(mainPkg, "Clb", "TGAttachmentInstance")},
	"tencentcloud_clb_target_group_attachment":             {Tok: tfbridge.MakeResource(mainPkg, "Clb", "TargetGroupAttachment")},
	"tencentcloud_clb_log_set":                             {Tok: tfbridge.MakeResource(mainPkg, "Clb", "LogSet")},
	"tencentcloud_clb_log_topic":                           {Tok: tfbridge.MakeResource(mainPkg, "Clb", "LogTopic")},
	"tencentcloud_clb_customized_config":                   {Tok: tfbridge.MakeResource(mainPkg, "Clb", "CustomizedConfig")},
	"tencentcloud_container_cluster":                       {Tok: tfbridge.MakeResource(mainPkg, "Container", "Cluster")},
	"tencentcloud_container_cluster_instance":              {Tok: tfbridge.MakeResource(mainPkg, "Container", "ClusterInstance")},
	"tencentcloud_kubernetes_cluster":                      {Tok: tfbridge.MakeResource(mainPkg, "Tke", "Cluster")},
	"tencentcloud_eks_cluster":                             {Tok: tfbridge.MakeResource(mainPkg, "Eks", "Cluster")},
	"tencentcloud_eks_container_instance":                  {Tok: tfbridge.MakeResource(mainPkg, "Eks", "ContainerInstance")},
	"tencentcloud_kubernetes_addon_attachment":             {Tok: tfbridge.MakeResource(mainPkg, "Tke", "AddonAttachment")},
	"tencentcloud_kubernetes_auth_attachment":              {Tok: tfbridge.MakeResource(mainPkg, "Tke", "AuthAttachment")},
	"tencentcloud_kubernetes_as_scaling_group":             {Tok: tfbridge.MakeResource(mainPkg, "Tke", "AsScalingGroup")},
	"tencentcloud_kubernetes_scale_worker":                 {Tok: tfbridge.MakeResource(mainPkg, "Tke", "ScaleWorker")},
	"tencentcloud_kubernetes_cluster_attachment":           {Tok: tfbridge.MakeResource(mainPkg, "Tke", "ClusterAttachment")},
	"tencentcloud_kubernetes_node_pool":                    {Tok: tfbridge.MakeResource(mainPkg, "Tke", "NodePool")},
	"tencentcloud_mysql_backup_policy":                     {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "BackupPolicy")},
	"tencentcloud_mysql_account":                           {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "Account")},
	"tencentcloud_mysql_account_privilege":                 {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "AccountPrivilege")},
	"tencentcloud_mysql_privilege":                         {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "Privilege")},
	"tencentcloud_mysql_instance":                          {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "Instance")},
	"tencentcloud_mysql_readonly_instance":                 {Tok: tfbridge.MakeResource(mainPkg, "Mysql", "ReadonlyInstance")},
	"tencentcloud_cos_bucket":                              {Tok: tfbridge.MakeResource(mainPkg, "Cos", "CosBucket")},
	"tencentcloud_cos_bucket_object":                       {Tok: tfbridge.MakeResource(mainPkg, "Cos", "BucketObject")},
	"tencentcloud_cfs_file_system":                         {Tok: tfbridge.MakeResource(mainPkg, "Cfs", "FileSystem")},
	"tencentcloud_cfs_access_group":                        {Tok: tfbridge.MakeResource(mainPkg, "Cfs", "AccessGroup")},
	"tencentcloud_cfs_access_rule":                         {Tok: tfbridge.MakeResource(mainPkg, "Cfs", "AccessRule")},
	"tencentcloud_redis_instance":                          {Tok: tfbridge.MakeResource(mainPkg, "Redis", "Instance")},
	"tencentcloud_redis_backup_config":                     {Tok: tfbridge.MakeResource(mainPkg, "Redis", "BackupConfig")},
	"tencentcloud_as_scaling_config":                       {Tok: tfbridge.MakeResource(mainPkg, "As", "ScalingConfig")},
	"tencentcloud_as_scaling_group":                        {Tok: tfbridge.MakeResource(mainPkg, "As", "ScalingGroup")},
	"tencentcloud_as_attachment":                           {Tok: tfbridge.MakeResource(mainPkg, "As", "Attachment")},
	"tencentcloud_as_scaling_policy":                       {Tok: tfbridge.MakeResource(mainPkg, "As", "ScalingPolicy")},
	"tencentcloud_as_schedule":                             {Tok: tfbridge.MakeResource(mainPkg, "As", "Schedule")},
	"tencentcloud_as_lifecycle_hook":                       {Tok: tfbridge.MakeResource(mainPkg, "As", "LifecycleHook")},
	"tencentcloud_as_notification":                         {Tok: tfbridge.MakeResource(mainPkg, "As", "Notification")},
	"tencentcloud_mongodb_instance":                        {Tok: tfbridge.MakeResource(mainPkg, "Mongodb", "Instance")},
	"tencentcloud_mongodb_sharding_instance":               {Tok: tfbridge.MakeResource(mainPkg, "Mongodb", "ShardingInstance")},
	"tencentcloud_dayu_cc_http_policy":                     {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "CCHttpPolicy")},
	"tencentcloud_dayu_cc_https_policy":                    {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "CCHttpsPolicy")},
	"tencentcloud_dayu_ddos_policy":                        {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "DdosPolicy")},
	"tencentcloud_dayu_cc_policy_v2":                       {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "CCPolicyV2")},
	"tencentcloud_dayu_ddos_policy_v2":                     {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "DdosPolicyV2")},
	"tencentcloud_dayu_ddos_policy_case":                   {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "DdosPolicyCase")},
	"tencentcloud_dayu_ddos_policy_attachment":             {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "DdosPolicyAttachment")},
	"tencentcloud_dayu_l4_rule":                            {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "L4Rule")},
	"tencentcloud_dayu_l4_rule_v2":                         {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "L4RuleV2")},
	"tencentcloud_dayu_l7_rule":                            {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "L7Rule")},
	"tencentcloud_dayu_l7_rule_v2":                         {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "L7RuleV2")},
	"tencentcloud_dayu_eip":                                {Tok: tfbridge.MakeResource(mainPkg, "Dayu", "DayuEipEip")},
	"tencentcloud_gaap_proxy":                              {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "Proxy")},
	"tencentcloud_gaap_realserver":                         {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "Realserver")},
	"tencentcloud_gaap_layer4_listener":                    {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "Layer4Listener")},
	"tencentcloud_gaap_layer7_listener":                    {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "Layer7Listener")},
	"tencentcloud_gaap_http_domain":                        {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "HttpDomain")},
	"tencentcloud_gaap_http_rule":                          {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "HttpRule")},
	"tencentcloud_gaap_certificate":                        {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "Certificate")},
	"tencentcloud_gaap_security_policy":                    {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "SecurityPolicy")},
	"tencentcloud_gaap_security_rule":                      {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "SecurityRule")},
	"tencentcloud_gaap_domain_error_page":                  {Tok: tfbridge.MakeResource(mainPkg, "Gaap", "DomainErrorPageInfo")},
	"tencentcloud_ssl_certificate":                         {Tok: tfbridge.MakeResource(mainPkg, "Ssl", "Certificate")},
	"tencentcloud_ssl_pay_certificate":                     {Tok: tfbridge.MakeResource(mainPkg, "Ssl", "Instance")},
	"tencentcloud_cam_role":                                {Tok: tfbridge.MakeResource(mainPkg, "Cam", "Role")},
	"tencentcloud_cam_user":                                {Tok: tfbridge.MakeResource(mainPkg, "Cam", "User")},
	"tencentcloud_cam_policy":                              {Tok: tfbridge.MakeResource(mainPkg, "Cam", "Policy")},
	"tencentcloud_cam_role_policy_attachment":              {Tok: tfbridge.MakeResource(mainPkg, "Cam", "RolePolicyAttachment")},
	"tencentcloud_cam_user_policy_attachment":              {Tok: tfbridge.MakeResource(mainPkg, "Cam", "UserPolicyAttachment")},
	"tencentcloud_cam_group_policy_attachment":             {Tok: tfbridge.MakeResource(mainPkg, "Cam", "GroupPolicyAttachment")},
	"tencentcloud_cam_group":                               {Tok: tfbridge.MakeResource(mainPkg, "Cam", "Group")},
	"tencentcloud_cam_oidc_sso":                            {Tok: tfbridge.MakeResource(mainPkg, "Cam", "OIDCSSO")},
	"tencentcloud_cam_role_sso":                            {Tok: tfbridge.MakeResource(mainPkg, "Cam", "RoleSSO")},
	"tencentcloud_cam_group_membership":                    {Tok: tfbridge.MakeResource(mainPkg, "Cam", "GroupMembership")},
	"tencentcloud_cam_saml_provider":                       {Tok: tfbridge.MakeResource(mainPkg, "Cam", "SAMLProvider")},
	"tencentcloud_scf_function":                            {Tok: tfbridge.MakeResource(mainPkg, "Scf", "Function")},
	"tencentcloud_scf_namespace":                           {Tok: tfbridge.MakeResource(mainPkg, "Scf", "ScfNamespace")},
	"tencentcloud_scf_layer":                               {Tok: tfbridge.MakeResource(mainPkg, "Scf", "Layer")},
	"tencentcloud_tcaplus_cluster":                         {Tok: tfbridge.MakeResource(mainPkg, "Tcaplus", "Cluster")},
	"tencentcloud_tcaplus_tablegroup":                      {Tok: tfbridge.MakeResource(mainPkg, "Tcaplus", "TableGroup")},
	"tencentcloud_tcaplus_idl":                             {Tok: tfbridge.MakeResource(mainPkg, "Tcaplus", "Idl")},
	"tencentcloud_tcaplus_table":                           {Tok: tfbridge.MakeResource(mainPkg, "Tcaplus", "Table")},
	"tencentcloud_cdn_domain":                              {Tok: tfbridge.MakeResource(mainPkg, "Cdn", "CdnDomain")},
	"tencentcloud_monitor_policy_group":                    {Tok: tfbridge.MakeResource(mainPkg, "Monitor", "PolicyGroup")},
	"tencentcloud_monitor_binding_object":                  {Tok: tfbridge.MakeResource(mainPkg, "Monitor", "BindingObject")},
	"tencentcloud_monitor_policy_binding_object":           {Tok: tfbridge.MakeResource(mainPkg, "Monitor", "PolicyBindingObject")},
	"tencentcloud_monitor_binding_receiver":                {Tok: tfbridge.MakeResource(mainPkg, "Monitor", "BindingAlarmReceiver")},
	"tencentcloud_monitor_alarm_policy":                    {Tok: tfbridge.MakeResource(mainPkg, "Monitor", "AlarmPolicy")},
	"tencentcloud_mongodb_standby_instance":                {Tok: tfbridge.MakeResource(mainPkg, "Mongodb", "StandbyInstance")},
	"tencentcloud_elasticsearch_instance":                  {Tok: tfbridge.MakeResource(mainPkg, "Elasticsearch", "Instance")},
	"tencentcloud_postgresql_instance":                     {Tok: tfbridge.MakeResource(mainPkg, "Postgresql", "Instance")},
	"tencentcloud_postgresql_readonly_instance":            {Tok: tfbridge.MakeResource(mainPkg, "Postgresql", "ReadonlyInstance")},
	"tencentcloud_postgresql_readonly_group":               {Tok: tfbridge.MakeResource(mainPkg, "Postgresql", "ReadonlyGroup")},
	"tencentcloud_postgresql_readonly_attachment":          {Tok: tfbridge.MakeResource(mainPkg, "Postgresql", "ReadonlyAttachment")},
	"tencentcloud_sqlserver_instance":                      {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "Instance")},
	"tencentcloud_sqlserver_db":                            {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "DB")},
	"tencentcloud_sqlserver_account":                       {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "Account")},
	"tencentcloud_sqlserver_account_db_attachment":         {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "AccountDBAttachment")},
	"tencentcloud_sqlserver_readonly_instance":             {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "ReadonlyInstance")},
	"tencentcloud_ckafka_instance":                         {Tok: tfbridge.MakeResource(mainPkg, "Ckafka", "Instance")},
	"tencentcloud_ckafka_user":                             {Tok: tfbridge.MakeResource(mainPkg, "Ckafka", "User")},
	"tencentcloud_ckafka_acl":                              {Tok: tfbridge.MakeResource(mainPkg, "Ckafka", "Acl")},
	"tencentcloud_ckafka_topic":                            {Tok: tfbridge.MakeResource(mainPkg, "Ckafka", "Topic")},
	"tencentcloud_audit":                                   {Tok: tfbridge.MakeResource(mainPkg, "Audit", "Instance")},
	"tencentcloud_image":                                   {Tok: tfbridge.MakeResource(mainPkg, "Image", "Instance")},
	"tencentcloud_cynosdb_cluster":                         {Tok: tfbridge.MakeResource(mainPkg, "Cynosdb", "Cluster")},
	"tencentcloud_cynosdb_readonly_instance":               {Tok: tfbridge.MakeResource(mainPkg, "Cynosdb", "ReadonlyInstance")},
	"tencentcloud_vod_adaptive_dynamic_streaming_template": {Tok: tfbridge.MakeResource(mainPkg, "Vod", "AdaptiveDynamicStreamingTemplate")},
	"tencentcloud_vod_image_sprite_template":               {Tok: tfbridge.MakeResource(mainPkg, "Vod", "ImageSpriteTemplate")},
	"tencentcloud_vod_procedure_template":                  {Tok: tfbridge.MakeResource(mainPkg, "Vod", "ProcedureTemplate")},
	"tencentcloud_vod_snapshot_by_time_offset_template":    {Tok: tfbridge.MakeResource(mainPkg, "Vod", "SnapshotByTimeOffsetTemplate")},
	"tencentcloud_vod_super_player_config":                 {Tok: tfbridge.MakeResource(mainPkg, "Vod", "SuperPlayerConfig")},
	"tencentcloud_vod_sub_application":                     {Tok: tfbridge.MakeResource(mainPkg, "Vod", "SubApplication")},
	"tencentcloud_sqlserver_publish_subscribe":             {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "PublishSubscribe")},
	"tencentcloud_api_gateway_usage_plan":                  {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "UsagePlan")},
	"tencentcloud_api_gateway_usage_plan_attachment":       {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "UsagePlanAttachment")},
	"tencentcloud_api_gateway_api":                         {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "API")},
	"tencentcloud_api_gateway_service":                     {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "Service")},
	"tencentcloud_api_gateway_custom_domain":               {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "CustomDomain")},
	"tencentcloud_api_gateway_ip_strategy":                 {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "IPStrategy")},
	"tencentcloud_api_gateway_strategy_attachment":         {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "StrategyAttachment")},
	"tencentcloud_api_gateway_api_key":                     {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "APIKey")},
	"tencentcloud_api_gateway_api_key_attachment":          {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "APIKeyAttachment")},
	"tencentcloud_api_gateway_service_release":             {Tok: tfbridge.MakeResource(mainPkg, "APIGateway", "ServiceRelease")},
	"tencentcloud_sqlserver_basic_instance":                {Tok: tfbridge.MakeResource(mainPkg, "Sqlserver", "BasicInstance")},
	"tencentcloud_tcr_instance":                            {Tok: tfbridge.MakeResource(mainPkg, "Tcr", "Instance")},
	"tencentcloud_tcr_namespace":                           {Tok: tfbridge.MakeResource(mainPkg, "Tcr", "Namespace")},
	"tencentcloud_tcr_repository":                          {Tok: tfbridge.MakeResource(mainPkg, "Tcr", "Repository")},
	"tencentcloud_tcr_token":                               {Tok: tfbridge.MakeResource(mainPkg, "Tcr", "TcrToken")},
	"tencentcloud_tcr_vpc_attachment":                      {Tok: tfbridge.MakeResource(mainPkg, "Tcr", "VpcAttachment")},
	"tencentcloud_tdmq_instance":                           {Tok: tfbridge.MakeResource(mainPkg, "Tdmq", "Instance")},
	"tencentcloud_tdmq_namespace":                          {Tok: tfbridge.MakeResource(mainPkg, "Tdmq", "Namespace")},
	"tencentcloud_tdmq_topic":                              {Tok: tfbridge.MakeResource(mainPkg, "Tdmq", "Topic")},
	"tencentcloud_tdmq_role":                               {Tok: tfbridge.MakeResource(mainPkg, "Tdmq", "Role")},
	"tencentcloud_tdmq_namespace_role_attachment":          {Tok: tfbridge.MakeResource(mainPkg, "Tdmq", "NamespaceRoleAttachment")},
	"tencentcloud_cos_bucket_policy":                       {Tok: tfbridge.MakeResource(mainPkg, "Cos", "BucketPolicy")},
	"tencentcloud_address_template":                        {Tok: tfbridge.MakeResource(mainPkg, "Address", "Template")},
	"tencentcloud_address_template_group":                  {Tok: tfbridge.MakeResource(mainPkg, "Address", "TemplateGroup")},
	"tencentcloud_protocol_template":                       {Tok: tfbridge.MakeResource(mainPkg, "Protocol", "Template")},
	"tencentcloud_protocol_template_group":                 {Tok: tfbridge.MakeResource(mainPkg, "Protocol", "TemplateGroup")},
	"tencentcloud_kms_key":                                 {Tok: tfbridge.MakeResource(mainPkg, "Kms", "KmsKey")},
	"tencentcloud_kms_external_key":                        {Tok: tfbridge.MakeResource(mainPkg, "Kms", "ExternalKey")},
	"tencentcloud_ssm_secret":                              {Tok: tfbridge.MakeResource(mainPkg, "Ssm", "Secret")},
	"tencentcloud_ssm_secret_version":                      {Tok: tfbridge.MakeResource(mainPkg, "Ssm", "SecretVersion")},
	"tencentcloud_cdh_instance":                            {Tok: tfbridge.MakeResource(mainPkg, "Cdh", "Instance")},
	"tencentcloud_dnspod_domain_instance":                  {Tok: tfbridge.MakeResource(mainPkg, "Dnspod", "DomainInstance")},
	"tencentcloud_dnspod_record":                           {Tok: tfbridge.MakeResource(mainPkg, "Dnspod", "Record")},
	"tencentcloud_private_dns_zone":                        {Tok: tfbridge.MakeResource(mainPkg, "PrivateDns", "Zone")},
	"tencentcloud_private_dns_record":                      {Tok: tfbridge.MakeResource(mainPkg, "PrivateDns", "Record")},
	"tencentcloud_cls_logset":                              {Tok: tfbridge.MakeResource(mainPkg, "Cls", "Logset")},
	"tencentcloud_cls_topic":                               {Tok: tfbridge.MakeResource(mainPkg, "Cls", "Topic")},
	"tencentcloud_cls_config":                              {Tok: tfbridge.MakeResource(mainPkg, "Cls", "Config")},
	"tencentcloud_cls_config_extra":                        {Tok: tfbridge.MakeResource(mainPkg, "Cls", "ConfigExtra")},
	"tencentcloud_cls_config_attachment":                   {Tok: tfbridge.MakeResource(mainPkg, "Cls", "ConfigAttachment")},
	"tencentcloud_cls_machine_group":                       {Tok: tfbridge.MakeResource(mainPkg, "Cls", "MachineGroup")},
	"tencentcloud_cls_cos_shipper":                         {Tok: tfbridge.MakeResource(mainPkg, "Cls", "CosShipper")},
}
