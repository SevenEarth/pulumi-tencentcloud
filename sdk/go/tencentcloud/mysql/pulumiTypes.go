// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackupListList struct {
	BackupId    int    `pulumi:"backupId"`
	BackupModel string `pulumi:"backupModel"`
	Creator     string `pulumi:"creator"`
	FinishTime  string `pulumi:"finishTime"`
	InternetUrl string `pulumi:"internetUrl"`
	IntranetUrl string `pulumi:"intranetUrl"`
	Size        int    `pulumi:"size"`
	Time        string `pulumi:"time"`
}

// BackupListListInput is an input type that accepts BackupListListArgs and BackupListListOutput values.
// You can construct a concrete instance of `BackupListListInput` via:
//
//          BackupListListArgs{...}
type BackupListListInput interface {
	pulumi.Input

	ToBackupListListOutput() BackupListListOutput
	ToBackupListListOutputWithContext(context.Context) BackupListListOutput
}

type BackupListListArgs struct {
	BackupId    pulumi.IntInput    `pulumi:"backupId"`
	BackupModel pulumi.StringInput `pulumi:"backupModel"`
	Creator     pulumi.StringInput `pulumi:"creator"`
	FinishTime  pulumi.StringInput `pulumi:"finishTime"`
	InternetUrl pulumi.StringInput `pulumi:"internetUrl"`
	IntranetUrl pulumi.StringInput `pulumi:"intranetUrl"`
	Size        pulumi.IntInput    `pulumi:"size"`
	Time        pulumi.StringInput `pulumi:"time"`
}

func (BackupListListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupListList)(nil)).Elem()
}

func (i BackupListListArgs) ToBackupListListOutput() BackupListListOutput {
	return i.ToBackupListListOutputWithContext(context.Background())
}

func (i BackupListListArgs) ToBackupListListOutputWithContext(ctx context.Context) BackupListListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupListListOutput)
}

// BackupListListArrayInput is an input type that accepts BackupListListArray and BackupListListArrayOutput values.
// You can construct a concrete instance of `BackupListListArrayInput` via:
//
//          BackupListListArray{ BackupListListArgs{...} }
type BackupListListArrayInput interface {
	pulumi.Input

	ToBackupListListArrayOutput() BackupListListArrayOutput
	ToBackupListListArrayOutputWithContext(context.Context) BackupListListArrayOutput
}

type BackupListListArray []BackupListListInput

func (BackupListListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupListList)(nil)).Elem()
}

func (i BackupListListArray) ToBackupListListArrayOutput() BackupListListArrayOutput {
	return i.ToBackupListListArrayOutputWithContext(context.Background())
}

func (i BackupListListArray) ToBackupListListArrayOutputWithContext(ctx context.Context) BackupListListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupListListArrayOutput)
}

type BackupListListOutput struct{ *pulumi.OutputState }

func (BackupListListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupListList)(nil)).Elem()
}

func (o BackupListListOutput) ToBackupListListOutput() BackupListListOutput {
	return o
}

func (o BackupListListOutput) ToBackupListListOutputWithContext(ctx context.Context) BackupListListOutput {
	return o
}

func (o BackupListListOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupListList) int { return v.BackupId }).(pulumi.IntOutput)
}

func (o BackupListListOutput) BackupModel() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.BackupModel }).(pulumi.StringOutput)
}

func (o BackupListListOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.Creator }).(pulumi.StringOutput)
}

func (o BackupListListOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.FinishTime }).(pulumi.StringOutput)
}

func (o BackupListListOutput) InternetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.InternetUrl }).(pulumi.StringOutput)
}

func (o BackupListListOutput) IntranetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.IntranetUrl }).(pulumi.StringOutput)
}

func (o BackupListListOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v BackupListList) int { return v.Size }).(pulumi.IntOutput)
}

func (o BackupListListOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListList) string { return v.Time }).(pulumi.StringOutput)
}

type BackupListListArrayOutput struct{ *pulumi.OutputState }

func (BackupListListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupListList)(nil)).Elem()
}

func (o BackupListListArrayOutput) ToBackupListListArrayOutput() BackupListListArrayOutput {
	return o
}

func (o BackupListListArrayOutput) ToBackupListListArrayOutputWithContext(ctx context.Context) BackupListListArrayOutput {
	return o
}

func (o BackupListListArrayOutput) Index(i pulumi.IntInput) BackupListListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupListList {
		return vs[0].([]BackupListList)[vs[1].(int)]
	}).(BackupListListOutput)
}

type DefaultParamsParamList struct {
	CurrentValue string   `pulumi:"currentValue"`
	Default      string   `pulumi:"default"`
	Description  string   `pulumi:"description"`
	EnumValues   []string `pulumi:"enumValues"`
	Max          int      `pulumi:"max"`
	Min          int      `pulumi:"min"`
	Name         string   `pulumi:"name"`
	NeedReboot   int      `pulumi:"needReboot"`
	ParamType    string   `pulumi:"paramType"`
}

// DefaultParamsParamListInput is an input type that accepts DefaultParamsParamListArgs and DefaultParamsParamListOutput values.
// You can construct a concrete instance of `DefaultParamsParamListInput` via:
//
//          DefaultParamsParamListArgs{...}
type DefaultParamsParamListInput interface {
	pulumi.Input

	ToDefaultParamsParamListOutput() DefaultParamsParamListOutput
	ToDefaultParamsParamListOutputWithContext(context.Context) DefaultParamsParamListOutput
}

type DefaultParamsParamListArgs struct {
	CurrentValue pulumi.StringInput      `pulumi:"currentValue"`
	Default      pulumi.StringInput      `pulumi:"default"`
	Description  pulumi.StringInput      `pulumi:"description"`
	EnumValues   pulumi.StringArrayInput `pulumi:"enumValues"`
	Max          pulumi.IntInput         `pulumi:"max"`
	Min          pulumi.IntInput         `pulumi:"min"`
	Name         pulumi.StringInput      `pulumi:"name"`
	NeedReboot   pulumi.IntInput         `pulumi:"needReboot"`
	ParamType    pulumi.StringInput      `pulumi:"paramType"`
}

func (DefaultParamsParamListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultParamsParamList)(nil)).Elem()
}

func (i DefaultParamsParamListArgs) ToDefaultParamsParamListOutput() DefaultParamsParamListOutput {
	return i.ToDefaultParamsParamListOutputWithContext(context.Background())
}

func (i DefaultParamsParamListArgs) ToDefaultParamsParamListOutputWithContext(ctx context.Context) DefaultParamsParamListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultParamsParamListOutput)
}

// DefaultParamsParamListArrayInput is an input type that accepts DefaultParamsParamListArray and DefaultParamsParamListArrayOutput values.
// You can construct a concrete instance of `DefaultParamsParamListArrayInput` via:
//
//          DefaultParamsParamListArray{ DefaultParamsParamListArgs{...} }
type DefaultParamsParamListArrayInput interface {
	pulumi.Input

	ToDefaultParamsParamListArrayOutput() DefaultParamsParamListArrayOutput
	ToDefaultParamsParamListArrayOutputWithContext(context.Context) DefaultParamsParamListArrayOutput
}

type DefaultParamsParamListArray []DefaultParamsParamListInput

func (DefaultParamsParamListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultParamsParamList)(nil)).Elem()
}

func (i DefaultParamsParamListArray) ToDefaultParamsParamListArrayOutput() DefaultParamsParamListArrayOutput {
	return i.ToDefaultParamsParamListArrayOutputWithContext(context.Background())
}

func (i DefaultParamsParamListArray) ToDefaultParamsParamListArrayOutputWithContext(ctx context.Context) DefaultParamsParamListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultParamsParamListArrayOutput)
}

type DefaultParamsParamListOutput struct{ *pulumi.OutputState }

func (DefaultParamsParamListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultParamsParamList)(nil)).Elem()
}

func (o DefaultParamsParamListOutput) ToDefaultParamsParamListOutput() DefaultParamsParamListOutput {
	return o
}

func (o DefaultParamsParamListOutput) ToDefaultParamsParamListOutputWithContext(ctx context.Context) DefaultParamsParamListOutput {
	return o
}

func (o DefaultParamsParamListOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultParamsParamList) string { return v.CurrentValue }).(pulumi.StringOutput)
}

func (o DefaultParamsParamListOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultParamsParamList) string { return v.Default }).(pulumi.StringOutput)
}

func (o DefaultParamsParamListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultParamsParamList) string { return v.Description }).(pulumi.StringOutput)
}

func (o DefaultParamsParamListOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultParamsParamList) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

func (o DefaultParamsParamListOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultParamsParamList) int { return v.Max }).(pulumi.IntOutput)
}

func (o DefaultParamsParamListOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultParamsParamList) int { return v.Min }).(pulumi.IntOutput)
}

func (o DefaultParamsParamListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultParamsParamList) string { return v.Name }).(pulumi.StringOutput)
}

func (o DefaultParamsParamListOutput) NeedReboot() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultParamsParamList) int { return v.NeedReboot }).(pulumi.IntOutput)
}

func (o DefaultParamsParamListOutput) ParamType() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultParamsParamList) string { return v.ParamType }).(pulumi.StringOutput)
}

type DefaultParamsParamListArrayOutput struct{ *pulumi.OutputState }

func (DefaultParamsParamListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultParamsParamList)(nil)).Elem()
}

func (o DefaultParamsParamListArrayOutput) ToDefaultParamsParamListArrayOutput() DefaultParamsParamListArrayOutput {
	return o
}

func (o DefaultParamsParamListArrayOutput) ToDefaultParamsParamListArrayOutputWithContext(ctx context.Context) DefaultParamsParamListArrayOutput {
	return o
}

func (o DefaultParamsParamListArrayOutput) Index(i pulumi.IntInput) DefaultParamsParamListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultParamsParamList {
		return vs[0].([]DefaultParamsParamList)[vs[1].(int)]
	}).(DefaultParamsParamListOutput)
}

type InstancesInstanceList struct {
	AutoRenewFlag    int      `pulumi:"autoRenewFlag"`
	ChargeType       string   `pulumi:"chargeType"`
	CpuCoreCount     int      `pulumi:"cpuCoreCount"`
	CreateTime       string   `pulumi:"createTime"`
	DeadLineTime     string   `pulumi:"deadLineTime"`
	DeviceType       string   `pulumi:"deviceType"`
	DrInstanceIds    []string `pulumi:"drInstanceIds"`
	EngineVersion    string   `pulumi:"engineVersion"`
	InitFlag         int      `pulumi:"initFlag"`
	InstanceName     string   `pulumi:"instanceName"`
	InstanceRole     string   `pulumi:"instanceRole"`
	InternetHost     string   `pulumi:"internetHost"`
	InternetPort     int      `pulumi:"internetPort"`
	InternetStatus   int      `pulumi:"internetStatus"`
	IntranetIp       string   `pulumi:"intranetIp"`
	IntranetPort     int      `pulumi:"intranetPort"`
	MasterInstanceId string   `pulumi:"masterInstanceId"`
	MemorySize       int      `pulumi:"memorySize"`
	MysqlId          string   `pulumi:"mysqlId"`
	PayType          int      `pulumi:"payType"`
	ProjectId        int      `pulumi:"projectId"`
	RoInstanceIds    []string `pulumi:"roInstanceIds"`
	SlaveSyncMode    int      `pulumi:"slaveSyncMode"`
	Status           int      `pulumi:"status"`
	SubnetId         string   `pulumi:"subnetId"`
	VolumeSize       int      `pulumi:"volumeSize"`
	VpcId            string   `pulumi:"vpcId"`
	Zone             string   `pulumi:"zone"`
}

// InstancesInstanceListInput is an input type that accepts InstancesInstanceListArgs and InstancesInstanceListOutput values.
// You can construct a concrete instance of `InstancesInstanceListInput` via:
//
//          InstancesInstanceListArgs{...}
type InstancesInstanceListInput interface {
	pulumi.Input

	ToInstancesInstanceListOutput() InstancesInstanceListOutput
	ToInstancesInstanceListOutputWithContext(context.Context) InstancesInstanceListOutput
}

type InstancesInstanceListArgs struct {
	AutoRenewFlag    pulumi.IntInput         `pulumi:"autoRenewFlag"`
	ChargeType       pulumi.StringInput      `pulumi:"chargeType"`
	CpuCoreCount     pulumi.IntInput         `pulumi:"cpuCoreCount"`
	CreateTime       pulumi.StringInput      `pulumi:"createTime"`
	DeadLineTime     pulumi.StringInput      `pulumi:"deadLineTime"`
	DeviceType       pulumi.StringInput      `pulumi:"deviceType"`
	DrInstanceIds    pulumi.StringArrayInput `pulumi:"drInstanceIds"`
	EngineVersion    pulumi.StringInput      `pulumi:"engineVersion"`
	InitFlag         pulumi.IntInput         `pulumi:"initFlag"`
	InstanceName     pulumi.StringInput      `pulumi:"instanceName"`
	InstanceRole     pulumi.StringInput      `pulumi:"instanceRole"`
	InternetHost     pulumi.StringInput      `pulumi:"internetHost"`
	InternetPort     pulumi.IntInput         `pulumi:"internetPort"`
	InternetStatus   pulumi.IntInput         `pulumi:"internetStatus"`
	IntranetIp       pulumi.StringInput      `pulumi:"intranetIp"`
	IntranetPort     pulumi.IntInput         `pulumi:"intranetPort"`
	MasterInstanceId pulumi.StringInput      `pulumi:"masterInstanceId"`
	MemorySize       pulumi.IntInput         `pulumi:"memorySize"`
	MysqlId          pulumi.StringInput      `pulumi:"mysqlId"`
	PayType          pulumi.IntInput         `pulumi:"payType"`
	ProjectId        pulumi.IntInput         `pulumi:"projectId"`
	RoInstanceIds    pulumi.StringArrayInput `pulumi:"roInstanceIds"`
	SlaveSyncMode    pulumi.IntInput         `pulumi:"slaveSyncMode"`
	Status           pulumi.IntInput         `pulumi:"status"`
	SubnetId         pulumi.StringInput      `pulumi:"subnetId"`
	VolumeSize       pulumi.IntInput         `pulumi:"volumeSize"`
	VpcId            pulumi.StringInput      `pulumi:"vpcId"`
	Zone             pulumi.StringInput      `pulumi:"zone"`
}

func (InstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return i.ToInstancesInstanceListOutputWithContext(context.Background())
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListOutput)
}

// InstancesInstanceListArrayInput is an input type that accepts InstancesInstanceListArray and InstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListArrayInput` via:
//
//          InstancesInstanceListArray{ InstancesInstanceListArgs{...} }
type InstancesInstanceListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput
	ToInstancesInstanceListArrayOutputWithContext(context.Context) InstancesInstanceListArrayOutput
}

type InstancesInstanceListArray []InstancesInstanceListInput

func (InstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return i.ToInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListArrayOutput)
}

type InstancesInstanceListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) DeadLineTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.DeadLineTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.DeviceType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) DrInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstanceList) []string { return v.DrInstanceIds }).(pulumi.StringArrayOutput)
}

func (o InstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InitFlag() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.InitFlag }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceRole() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceRole }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InternetHost() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InternetHost }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InternetPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.InternetPort }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) InternetStatus() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.InternetStatus }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) IntranetIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.IntranetIp }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) IntranetPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.IntranetPort }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.MemorySize }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) MysqlId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.MysqlId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) PayType() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.PayType }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) RoInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstanceList) []string { return v.RoInstanceIds }).(pulumi.StringArrayOutput)
}

func (o InstancesInstanceListOutput) SlaveSyncMode() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.SlaveSyncMode }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Zone }).(pulumi.StringOutput)
}

type InstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceList {
		return vs[0].([]InstancesInstanceList)[vs[1].(int)]
	}).(InstancesInstanceListOutput)
}

type ParameterListParameterList struct {
	CurrentValue  string   `pulumi:"currentValue"`
	DefaultValue  string   `pulumi:"defaultValue"`
	Description   string   `pulumi:"description"`
	EnumValues    []string `pulumi:"enumValues"`
	Max           int      `pulumi:"max"`
	Min           int      `pulumi:"min"`
	NeedReboot    int      `pulumi:"needReboot"`
	ParameterName string   `pulumi:"parameterName"`
	ParameterType string   `pulumi:"parameterType"`
}

// ParameterListParameterListInput is an input type that accepts ParameterListParameterListArgs and ParameterListParameterListOutput values.
// You can construct a concrete instance of `ParameterListParameterListInput` via:
//
//          ParameterListParameterListArgs{...}
type ParameterListParameterListInput interface {
	pulumi.Input

	ToParameterListParameterListOutput() ParameterListParameterListOutput
	ToParameterListParameterListOutputWithContext(context.Context) ParameterListParameterListOutput
}

type ParameterListParameterListArgs struct {
	CurrentValue  pulumi.StringInput      `pulumi:"currentValue"`
	DefaultValue  pulumi.StringInput      `pulumi:"defaultValue"`
	Description   pulumi.StringInput      `pulumi:"description"`
	EnumValues    pulumi.StringArrayInput `pulumi:"enumValues"`
	Max           pulumi.IntInput         `pulumi:"max"`
	Min           pulumi.IntInput         `pulumi:"min"`
	NeedReboot    pulumi.IntInput         `pulumi:"needReboot"`
	ParameterName pulumi.StringInput      `pulumi:"parameterName"`
	ParameterType pulumi.StringInput      `pulumi:"parameterType"`
}

func (ParameterListParameterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterListParameterList)(nil)).Elem()
}

func (i ParameterListParameterListArgs) ToParameterListParameterListOutput() ParameterListParameterListOutput {
	return i.ToParameterListParameterListOutputWithContext(context.Background())
}

func (i ParameterListParameterListArgs) ToParameterListParameterListOutputWithContext(ctx context.Context) ParameterListParameterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterListParameterListOutput)
}

// ParameterListParameterListArrayInput is an input type that accepts ParameterListParameterListArray and ParameterListParameterListArrayOutput values.
// You can construct a concrete instance of `ParameterListParameterListArrayInput` via:
//
//          ParameterListParameterListArray{ ParameterListParameterListArgs{...} }
type ParameterListParameterListArrayInput interface {
	pulumi.Input

	ToParameterListParameterListArrayOutput() ParameterListParameterListArrayOutput
	ToParameterListParameterListArrayOutputWithContext(context.Context) ParameterListParameterListArrayOutput
}

type ParameterListParameterListArray []ParameterListParameterListInput

func (ParameterListParameterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterListParameterList)(nil)).Elem()
}

func (i ParameterListParameterListArray) ToParameterListParameterListArrayOutput() ParameterListParameterListArrayOutput {
	return i.ToParameterListParameterListArrayOutputWithContext(context.Background())
}

func (i ParameterListParameterListArray) ToParameterListParameterListArrayOutputWithContext(ctx context.Context) ParameterListParameterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterListParameterListArrayOutput)
}

type ParameterListParameterListOutput struct{ *pulumi.OutputState }

func (ParameterListParameterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterListParameterList)(nil)).Elem()
}

func (o ParameterListParameterListOutput) ToParameterListParameterListOutput() ParameterListParameterListOutput {
	return o
}

func (o ParameterListParameterListOutput) ToParameterListParameterListOutputWithContext(ctx context.Context) ParameterListParameterListOutput {
	return o
}

func (o ParameterListParameterListOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterListParameterList) string { return v.CurrentValue }).(pulumi.StringOutput)
}

func (o ParameterListParameterListOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterListParameterList) string { return v.DefaultValue }).(pulumi.StringOutput)
}

func (o ParameterListParameterListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterListParameterList) string { return v.Description }).(pulumi.StringOutput)
}

func (o ParameterListParameterListOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterListParameterList) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

func (o ParameterListParameterListOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterListParameterList) int { return v.Max }).(pulumi.IntOutput)
}

func (o ParameterListParameterListOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterListParameterList) int { return v.Min }).(pulumi.IntOutput)
}

func (o ParameterListParameterListOutput) NeedReboot() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterListParameterList) int { return v.NeedReboot }).(pulumi.IntOutput)
}

func (o ParameterListParameterListOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterListParameterList) string { return v.ParameterName }).(pulumi.StringOutput)
}

func (o ParameterListParameterListOutput) ParameterType() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterListParameterList) string { return v.ParameterType }).(pulumi.StringOutput)
}

type ParameterListParameterListArrayOutput struct{ *pulumi.OutputState }

func (ParameterListParameterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterListParameterList)(nil)).Elem()
}

func (o ParameterListParameterListArrayOutput) ToParameterListParameterListArrayOutput() ParameterListParameterListArrayOutput {
	return o
}

func (o ParameterListParameterListArrayOutput) ToParameterListParameterListArrayOutputWithContext(ctx context.Context) ParameterListParameterListArrayOutput {
	return o
}

func (o ParameterListParameterListArrayOutput) Index(i pulumi.IntInput) ParameterListParameterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterListParameterList {
		return vs[0].([]ParameterListParameterList)[vs[1].(int)]
	}).(ParameterListParameterListOutput)
}

type PrivilegeColumn struct {
	ColumnName   string   `pulumi:"columnName"`
	DatabaseName string   `pulumi:"databaseName"`
	Privileges   []string `pulumi:"privileges"`
	TableName    string   `pulumi:"tableName"`
}

// PrivilegeColumnInput is an input type that accepts PrivilegeColumnArgs and PrivilegeColumnOutput values.
// You can construct a concrete instance of `PrivilegeColumnInput` via:
//
//          PrivilegeColumnArgs{...}
type PrivilegeColumnInput interface {
	pulumi.Input

	ToPrivilegeColumnOutput() PrivilegeColumnOutput
	ToPrivilegeColumnOutputWithContext(context.Context) PrivilegeColumnOutput
}

type PrivilegeColumnArgs struct {
	ColumnName   pulumi.StringInput      `pulumi:"columnName"`
	DatabaseName pulumi.StringInput      `pulumi:"databaseName"`
	Privileges   pulumi.StringArrayInput `pulumi:"privileges"`
	TableName    pulumi.StringInput      `pulumi:"tableName"`
}

func (PrivilegeColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeColumn)(nil)).Elem()
}

func (i PrivilegeColumnArgs) ToPrivilegeColumnOutput() PrivilegeColumnOutput {
	return i.ToPrivilegeColumnOutputWithContext(context.Background())
}

func (i PrivilegeColumnArgs) ToPrivilegeColumnOutputWithContext(ctx context.Context) PrivilegeColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeColumnOutput)
}

// PrivilegeColumnArrayInput is an input type that accepts PrivilegeColumnArray and PrivilegeColumnArrayOutput values.
// You can construct a concrete instance of `PrivilegeColumnArrayInput` via:
//
//          PrivilegeColumnArray{ PrivilegeColumnArgs{...} }
type PrivilegeColumnArrayInput interface {
	pulumi.Input

	ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput
	ToPrivilegeColumnArrayOutputWithContext(context.Context) PrivilegeColumnArrayOutput
}

type PrivilegeColumnArray []PrivilegeColumnInput

func (PrivilegeColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeColumn)(nil)).Elem()
}

func (i PrivilegeColumnArray) ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput {
	return i.ToPrivilegeColumnArrayOutputWithContext(context.Background())
}

func (i PrivilegeColumnArray) ToPrivilegeColumnArrayOutputWithContext(ctx context.Context) PrivilegeColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeColumnArrayOutput)
}

type PrivilegeColumnOutput struct{ *pulumi.OutputState }

func (PrivilegeColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeColumn)(nil)).Elem()
}

func (o PrivilegeColumnOutput) ToPrivilegeColumnOutput() PrivilegeColumnOutput {
	return o
}

func (o PrivilegeColumnOutput) ToPrivilegeColumnOutputWithContext(ctx context.Context) PrivilegeColumnOutput {
	return o
}

func (o PrivilegeColumnOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.ColumnName }).(pulumi.StringOutput)
}

func (o PrivilegeColumnOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o PrivilegeColumnOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeColumn) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

func (o PrivilegeColumnOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.TableName }).(pulumi.StringOutput)
}

type PrivilegeColumnArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeColumn)(nil)).Elem()
}

func (o PrivilegeColumnArrayOutput) ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput {
	return o
}

func (o PrivilegeColumnArrayOutput) ToPrivilegeColumnArrayOutputWithContext(ctx context.Context) PrivilegeColumnArrayOutput {
	return o
}

func (o PrivilegeColumnArrayOutput) Index(i pulumi.IntInput) PrivilegeColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeColumn {
		return vs[0].([]PrivilegeColumn)[vs[1].(int)]
	}).(PrivilegeColumnOutput)
}

type PrivilegeDatabase struct {
	DatabaseName string   `pulumi:"databaseName"`
	Privileges   []string `pulumi:"privileges"`
}

// PrivilegeDatabaseInput is an input type that accepts PrivilegeDatabaseArgs and PrivilegeDatabaseOutput values.
// You can construct a concrete instance of `PrivilegeDatabaseInput` via:
//
//          PrivilegeDatabaseArgs{...}
type PrivilegeDatabaseInput interface {
	pulumi.Input

	ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput
	ToPrivilegeDatabaseOutputWithContext(context.Context) PrivilegeDatabaseOutput
}

type PrivilegeDatabaseArgs struct {
	DatabaseName pulumi.StringInput      `pulumi:"databaseName"`
	Privileges   pulumi.StringArrayInput `pulumi:"privileges"`
}

func (PrivilegeDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeDatabase)(nil)).Elem()
}

func (i PrivilegeDatabaseArgs) ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput {
	return i.ToPrivilegeDatabaseOutputWithContext(context.Background())
}

func (i PrivilegeDatabaseArgs) ToPrivilegeDatabaseOutputWithContext(ctx context.Context) PrivilegeDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeDatabaseOutput)
}

// PrivilegeDatabaseArrayInput is an input type that accepts PrivilegeDatabaseArray and PrivilegeDatabaseArrayOutput values.
// You can construct a concrete instance of `PrivilegeDatabaseArrayInput` via:
//
//          PrivilegeDatabaseArray{ PrivilegeDatabaseArgs{...} }
type PrivilegeDatabaseArrayInput interface {
	pulumi.Input

	ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput
	ToPrivilegeDatabaseArrayOutputWithContext(context.Context) PrivilegeDatabaseArrayOutput
}

type PrivilegeDatabaseArray []PrivilegeDatabaseInput

func (PrivilegeDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeDatabase)(nil)).Elem()
}

func (i PrivilegeDatabaseArray) ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput {
	return i.ToPrivilegeDatabaseArrayOutputWithContext(context.Background())
}

func (i PrivilegeDatabaseArray) ToPrivilegeDatabaseArrayOutputWithContext(ctx context.Context) PrivilegeDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeDatabaseArrayOutput)
}

type PrivilegeDatabaseOutput struct{ *pulumi.OutputState }

func (PrivilegeDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeDatabase)(nil)).Elem()
}

func (o PrivilegeDatabaseOutput) ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput {
	return o
}

func (o PrivilegeDatabaseOutput) ToPrivilegeDatabaseOutputWithContext(ctx context.Context) PrivilegeDatabaseOutput {
	return o
}

func (o PrivilegeDatabaseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeDatabase) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o PrivilegeDatabaseOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeDatabase) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

type PrivilegeDatabaseArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeDatabase)(nil)).Elem()
}

func (o PrivilegeDatabaseArrayOutput) ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput {
	return o
}

func (o PrivilegeDatabaseArrayOutput) ToPrivilegeDatabaseArrayOutputWithContext(ctx context.Context) PrivilegeDatabaseArrayOutput {
	return o
}

func (o PrivilegeDatabaseArrayOutput) Index(i pulumi.IntInput) PrivilegeDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeDatabase {
		return vs[0].([]PrivilegeDatabase)[vs[1].(int)]
	}).(PrivilegeDatabaseOutput)
}

type PrivilegeTable struct {
	DatabaseName string   `pulumi:"databaseName"`
	Privileges   []string `pulumi:"privileges"`
	TableName    string   `pulumi:"tableName"`
}

// PrivilegeTableInput is an input type that accepts PrivilegeTableArgs and PrivilegeTableOutput values.
// You can construct a concrete instance of `PrivilegeTableInput` via:
//
//          PrivilegeTableArgs{...}
type PrivilegeTableInput interface {
	pulumi.Input

	ToPrivilegeTableOutput() PrivilegeTableOutput
	ToPrivilegeTableOutputWithContext(context.Context) PrivilegeTableOutput
}

type PrivilegeTableArgs struct {
	DatabaseName pulumi.StringInput      `pulumi:"databaseName"`
	Privileges   pulumi.StringArrayInput `pulumi:"privileges"`
	TableName    pulumi.StringInput      `pulumi:"tableName"`
}

func (PrivilegeTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeTable)(nil)).Elem()
}

func (i PrivilegeTableArgs) ToPrivilegeTableOutput() PrivilegeTableOutput {
	return i.ToPrivilegeTableOutputWithContext(context.Background())
}

func (i PrivilegeTableArgs) ToPrivilegeTableOutputWithContext(ctx context.Context) PrivilegeTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeTableOutput)
}

// PrivilegeTableArrayInput is an input type that accepts PrivilegeTableArray and PrivilegeTableArrayOutput values.
// You can construct a concrete instance of `PrivilegeTableArrayInput` via:
//
//          PrivilegeTableArray{ PrivilegeTableArgs{...} }
type PrivilegeTableArrayInput interface {
	pulumi.Input

	ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput
	ToPrivilegeTableArrayOutputWithContext(context.Context) PrivilegeTableArrayOutput
}

type PrivilegeTableArray []PrivilegeTableInput

func (PrivilegeTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeTable)(nil)).Elem()
}

func (i PrivilegeTableArray) ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput {
	return i.ToPrivilegeTableArrayOutputWithContext(context.Background())
}

func (i PrivilegeTableArray) ToPrivilegeTableArrayOutputWithContext(ctx context.Context) PrivilegeTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeTableArrayOutput)
}

type PrivilegeTableOutput struct{ *pulumi.OutputState }

func (PrivilegeTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeTable)(nil)).Elem()
}

func (o PrivilegeTableOutput) ToPrivilegeTableOutput() PrivilegeTableOutput {
	return o
}

func (o PrivilegeTableOutput) ToPrivilegeTableOutputWithContext(ctx context.Context) PrivilegeTableOutput {
	return o
}

func (o PrivilegeTableOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeTable) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o PrivilegeTableOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeTable) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

func (o PrivilegeTableOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeTable) string { return v.TableName }).(pulumi.StringOutput)
}

type PrivilegeTableArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeTable)(nil)).Elem()
}

func (o PrivilegeTableArrayOutput) ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput {
	return o
}

func (o PrivilegeTableArrayOutput) ToPrivilegeTableArrayOutputWithContext(ctx context.Context) PrivilegeTableArrayOutput {
	return o
}

func (o PrivilegeTableArrayOutput) Index(i pulumi.IntInput) PrivilegeTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeTable {
		return vs[0].([]PrivilegeTable)[vs[1].(int)]
	}).(PrivilegeTableOutput)
}

type ZoneConfigList struct {
	DisasterRecoveryZones     []string             `pulumi:"disasterRecoveryZones"`
	EngineVersions            []string             `pulumi:"engineVersions"`
	FirstSlaveZones           []string             `pulumi:"firstSlaveZones"`
	HourInstanceSaleMaxNum    int                  `pulumi:"hourInstanceSaleMaxNum"`
	IsDefault                 int                  `pulumi:"isDefault"`
	IsSupportDisasterRecovery int                  `pulumi:"isSupportDisasterRecovery"`
	IsSupportVpc              int                  `pulumi:"isSupportVpc"`
	Name                      string               `pulumi:"name"`
	PayTypes                  []int                `pulumi:"payTypes"`
	RemoteRoZones             []string             `pulumi:"remoteRoZones"`
	SecondSlaveZones          []string             `pulumi:"secondSlaveZones"`
	Sells                     []ZoneConfigListSell `pulumi:"sells"`
	SlaveDeployModes          []int                `pulumi:"slaveDeployModes"`
	SupportSlaveSyncModes     []int                `pulumi:"supportSlaveSyncModes"`
}

// ZoneConfigListInput is an input type that accepts ZoneConfigListArgs and ZoneConfigListOutput values.
// You can construct a concrete instance of `ZoneConfigListInput` via:
//
//          ZoneConfigListArgs{...}
type ZoneConfigListInput interface {
	pulumi.Input

	ToZoneConfigListOutput() ZoneConfigListOutput
	ToZoneConfigListOutputWithContext(context.Context) ZoneConfigListOutput
}

type ZoneConfigListArgs struct {
	DisasterRecoveryZones     pulumi.StringArrayInput      `pulumi:"disasterRecoveryZones"`
	EngineVersions            pulumi.StringArrayInput      `pulumi:"engineVersions"`
	FirstSlaveZones           pulumi.StringArrayInput      `pulumi:"firstSlaveZones"`
	HourInstanceSaleMaxNum    pulumi.IntInput              `pulumi:"hourInstanceSaleMaxNum"`
	IsDefault                 pulumi.IntInput              `pulumi:"isDefault"`
	IsSupportDisasterRecovery pulumi.IntInput              `pulumi:"isSupportDisasterRecovery"`
	IsSupportVpc              pulumi.IntInput              `pulumi:"isSupportVpc"`
	Name                      pulumi.StringInput           `pulumi:"name"`
	PayTypes                  pulumi.IntArrayInput         `pulumi:"payTypes"`
	RemoteRoZones             pulumi.StringArrayInput      `pulumi:"remoteRoZones"`
	SecondSlaveZones          pulumi.StringArrayInput      `pulumi:"secondSlaveZones"`
	Sells                     ZoneConfigListSellArrayInput `pulumi:"sells"`
	SlaveDeployModes          pulumi.IntArrayInput         `pulumi:"slaveDeployModes"`
	SupportSlaveSyncModes     pulumi.IntArrayInput         `pulumi:"supportSlaveSyncModes"`
}

func (ZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigList)(nil)).Elem()
}

func (i ZoneConfigListArgs) ToZoneConfigListOutput() ZoneConfigListOutput {
	return i.ToZoneConfigListOutputWithContext(context.Background())
}

func (i ZoneConfigListArgs) ToZoneConfigListOutputWithContext(ctx context.Context) ZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListOutput)
}

// ZoneConfigListArrayInput is an input type that accepts ZoneConfigListArray and ZoneConfigListArrayOutput values.
// You can construct a concrete instance of `ZoneConfigListArrayInput` via:
//
//          ZoneConfigListArray{ ZoneConfigListArgs{...} }
type ZoneConfigListArrayInput interface {
	pulumi.Input

	ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput
	ToZoneConfigListArrayOutputWithContext(context.Context) ZoneConfigListArrayOutput
}

type ZoneConfigListArray []ZoneConfigListInput

func (ZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigList)(nil)).Elem()
}

func (i ZoneConfigListArray) ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput {
	return i.ToZoneConfigListArrayOutputWithContext(context.Background())
}

func (i ZoneConfigListArray) ToZoneConfigListArrayOutputWithContext(ctx context.Context) ZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListArrayOutput)
}

type ZoneConfigListOutput struct{ *pulumi.OutputState }

func (ZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigList)(nil)).Elem()
}

func (o ZoneConfigListOutput) ToZoneConfigListOutput() ZoneConfigListOutput {
	return o
}

func (o ZoneConfigListOutput) ToZoneConfigListOutputWithContext(ctx context.Context) ZoneConfigListOutput {
	return o
}

func (o ZoneConfigListOutput) DisasterRecoveryZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []string { return v.DisasterRecoveryZones }).(pulumi.StringArrayOutput)
}

func (o ZoneConfigListOutput) EngineVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []string { return v.EngineVersions }).(pulumi.StringArrayOutput)
}

func (o ZoneConfigListOutput) FirstSlaveZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []string { return v.FirstSlaveZones }).(pulumi.StringArrayOutput)
}

func (o ZoneConfigListOutput) HourInstanceSaleMaxNum() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.HourInstanceSaleMaxNum }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) IsDefault() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.IsDefault }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) IsSupportDisasterRecovery() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.IsSupportDisasterRecovery }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) IsSupportVpc() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.IsSupportVpc }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigList) string { return v.Name }).(pulumi.StringOutput)
}

func (o ZoneConfigListOutput) PayTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []int { return v.PayTypes }).(pulumi.IntArrayOutput)
}

func (o ZoneConfigListOutput) RemoteRoZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []string { return v.RemoteRoZones }).(pulumi.StringArrayOutput)
}

func (o ZoneConfigListOutput) SecondSlaveZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []string { return v.SecondSlaveZones }).(pulumi.StringArrayOutput)
}

func (o ZoneConfigListOutput) Sells() ZoneConfigListSellArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []ZoneConfigListSell { return v.Sells }).(ZoneConfigListSellArrayOutput)
}

func (o ZoneConfigListOutput) SlaveDeployModes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []int { return v.SlaveDeployModes }).(pulumi.IntArrayOutput)
}

func (o ZoneConfigListOutput) SupportSlaveSyncModes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZoneConfigList) []int { return v.SupportSlaveSyncModes }).(pulumi.IntArrayOutput)
}

type ZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (ZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigList)(nil)).Elem()
}

func (o ZoneConfigListArrayOutput) ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput {
	return o
}

func (o ZoneConfigListArrayOutput) ToZoneConfigListArrayOutputWithContext(ctx context.Context) ZoneConfigListArrayOutput {
	return o
}

func (o ZoneConfigListArrayOutput) Index(i pulumi.IntInput) ZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneConfigList {
		return vs[0].([]ZoneConfigList)[vs[1].(int)]
	}).(ZoneConfigListOutput)
}

type ZoneConfigListSell struct {
	CdbType       string `pulumi:"cdbType"`
	MaxVolumeSize int    `pulumi:"maxVolumeSize"`
	MemSize       int    `pulumi:"memSize"`
	MinVolumeSize int    `pulumi:"minVolumeSize"`
	Qps           int    `pulumi:"qps"`
	VolumeStep    int    `pulumi:"volumeStep"`
}

// ZoneConfigListSellInput is an input type that accepts ZoneConfigListSellArgs and ZoneConfigListSellOutput values.
// You can construct a concrete instance of `ZoneConfigListSellInput` via:
//
//          ZoneConfigListSellArgs{...}
type ZoneConfigListSellInput interface {
	pulumi.Input

	ToZoneConfigListSellOutput() ZoneConfigListSellOutput
	ToZoneConfigListSellOutputWithContext(context.Context) ZoneConfigListSellOutput
}

type ZoneConfigListSellArgs struct {
	CdbType       pulumi.StringInput `pulumi:"cdbType"`
	MaxVolumeSize pulumi.IntInput    `pulumi:"maxVolumeSize"`
	MemSize       pulumi.IntInput    `pulumi:"memSize"`
	MinVolumeSize pulumi.IntInput    `pulumi:"minVolumeSize"`
	Qps           pulumi.IntInput    `pulumi:"qps"`
	VolumeStep    pulumi.IntInput    `pulumi:"volumeStep"`
}

func (ZoneConfigListSellArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigListSell)(nil)).Elem()
}

func (i ZoneConfigListSellArgs) ToZoneConfigListSellOutput() ZoneConfigListSellOutput {
	return i.ToZoneConfigListSellOutputWithContext(context.Background())
}

func (i ZoneConfigListSellArgs) ToZoneConfigListSellOutputWithContext(ctx context.Context) ZoneConfigListSellOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListSellOutput)
}

// ZoneConfigListSellArrayInput is an input type that accepts ZoneConfigListSellArray and ZoneConfigListSellArrayOutput values.
// You can construct a concrete instance of `ZoneConfigListSellArrayInput` via:
//
//          ZoneConfigListSellArray{ ZoneConfigListSellArgs{...} }
type ZoneConfigListSellArrayInput interface {
	pulumi.Input

	ToZoneConfigListSellArrayOutput() ZoneConfigListSellArrayOutput
	ToZoneConfigListSellArrayOutputWithContext(context.Context) ZoneConfigListSellArrayOutput
}

type ZoneConfigListSellArray []ZoneConfigListSellInput

func (ZoneConfigListSellArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigListSell)(nil)).Elem()
}

func (i ZoneConfigListSellArray) ToZoneConfigListSellArrayOutput() ZoneConfigListSellArrayOutput {
	return i.ToZoneConfigListSellArrayOutputWithContext(context.Background())
}

func (i ZoneConfigListSellArray) ToZoneConfigListSellArrayOutputWithContext(ctx context.Context) ZoneConfigListSellArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListSellArrayOutput)
}

type ZoneConfigListSellOutput struct{ *pulumi.OutputState }

func (ZoneConfigListSellOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigListSell)(nil)).Elem()
}

func (o ZoneConfigListSellOutput) ToZoneConfigListSellOutput() ZoneConfigListSellOutput {
	return o
}

func (o ZoneConfigListSellOutput) ToZoneConfigListSellOutputWithContext(ctx context.Context) ZoneConfigListSellOutput {
	return o
}

func (o ZoneConfigListSellOutput) CdbType() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigListSell) string { return v.CdbType }).(pulumi.StringOutput)
}

func (o ZoneConfigListSellOutput) MaxVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigListSell) int { return v.MaxVolumeSize }).(pulumi.IntOutput)
}

func (o ZoneConfigListSellOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigListSell) int { return v.MemSize }).(pulumi.IntOutput)
}

func (o ZoneConfigListSellOutput) MinVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigListSell) int { return v.MinVolumeSize }).(pulumi.IntOutput)
}

func (o ZoneConfigListSellOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigListSell) int { return v.Qps }).(pulumi.IntOutput)
}

func (o ZoneConfigListSellOutput) VolumeStep() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigListSell) int { return v.VolumeStep }).(pulumi.IntOutput)
}

type ZoneConfigListSellArrayOutput struct{ *pulumi.OutputState }

func (ZoneConfigListSellArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigListSell)(nil)).Elem()
}

func (o ZoneConfigListSellArrayOutput) ToZoneConfigListSellArrayOutput() ZoneConfigListSellArrayOutput {
	return o
}

func (o ZoneConfigListSellArrayOutput) ToZoneConfigListSellArrayOutputWithContext(ctx context.Context) ZoneConfigListSellArrayOutput {
	return o
}

func (o ZoneConfigListSellArrayOutput) Index(i pulumi.IntInput) ZoneConfigListSellOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneConfigListSell {
		return vs[0].([]ZoneConfigListSell)[vs[1].(int)]
	}).(ZoneConfigListSellOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupListListInput)(nil)).Elem(), BackupListListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupListListArrayInput)(nil)).Elem(), BackupListListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultParamsParamListInput)(nil)).Elem(), DefaultParamsParamListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultParamsParamListArrayInput)(nil)).Elem(), DefaultParamsParamListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListInput)(nil)).Elem(), InstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListArrayInput)(nil)).Elem(), InstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterListParameterListInput)(nil)).Elem(), ParameterListParameterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterListParameterListArrayInput)(nil)).Elem(), ParameterListParameterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeColumnInput)(nil)).Elem(), PrivilegeColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeColumnArrayInput)(nil)).Elem(), PrivilegeColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeDatabaseInput)(nil)).Elem(), PrivilegeDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeDatabaseArrayInput)(nil)).Elem(), PrivilegeDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeTableInput)(nil)).Elem(), PrivilegeTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeTableArrayInput)(nil)).Elem(), PrivilegeTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListInput)(nil)).Elem(), ZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListArrayInput)(nil)).Elem(), ZoneConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListSellInput)(nil)).Elem(), ZoneConfigListSellArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListSellArrayInput)(nil)).Elem(), ZoneConfigListSellArray{})
	pulumi.RegisterOutputType(BackupListListOutput{})
	pulumi.RegisterOutputType(BackupListListArrayOutput{})
	pulumi.RegisterOutputType(DefaultParamsParamListOutput{})
	pulumi.RegisterOutputType(DefaultParamsParamListArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(ParameterListParameterListOutput{})
	pulumi.RegisterOutputType(ParameterListParameterListArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeColumnOutput{})
	pulumi.RegisterOutputType(PrivilegeColumnArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeDatabaseOutput{})
	pulumi.RegisterOutputType(PrivilegeDatabaseArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeTableOutput{})
	pulumi.RegisterOutputType(PrivilegeTableArrayOutput{})
	pulumi.RegisterOutputType(ZoneConfigListOutput{})
	pulumi.RegisterOutputType(ZoneConfigListArrayOutput{})
	pulumi.RegisterOutputType(ZoneConfigListSellOutput{})
	pulumi.RegisterOutputType(ZoneConfigListSellArrayOutput{})
}
