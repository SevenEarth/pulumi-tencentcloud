// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuditLogFileFilter struct {
	// Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
	AffectRows *int `pulumi:"affectRows"`
	// Database name.
	DbNames []string `pulumi:"dbNames"`
	// Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
	ExecTime *int `pulumi:"execTime"`
	// Client address.
	Hosts []string `pulumi:"hosts"`
	// The name of policy.
	PolicyNames []string `pulumi:"policyNames"`
	// SQL statement. support fuzzy matching.
	Sql *string `pulumi:"sql"`
	// SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
	SqlType *string `pulumi:"sqlType"`
	// SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
	SqlTypes []string `pulumi:"sqlTypes"`
	// SQL statement. Support passing multiple sql statements.
	Sqls []string `pulumi:"sqls"`
	// Table name.
	TableNames []string `pulumi:"tableNames"`
	// User name.
	Users []string `pulumi:"users"`
}

// AuditLogFileFilterInput is an input type that accepts AuditLogFileFilterArgs and AuditLogFileFilterOutput values.
// You can construct a concrete instance of `AuditLogFileFilterInput` via:
//
//          AuditLogFileFilterArgs{...}
type AuditLogFileFilterInput interface {
	pulumi.Input

	ToAuditLogFileFilterOutput() AuditLogFileFilterOutput
	ToAuditLogFileFilterOutputWithContext(context.Context) AuditLogFileFilterOutput
}

type AuditLogFileFilterArgs struct {
	// Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
	AffectRows pulumi.IntPtrInput `pulumi:"affectRows"`
	// Database name.
	DbNames pulumi.StringArrayInput `pulumi:"dbNames"`
	// Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
	ExecTime pulumi.IntPtrInput `pulumi:"execTime"`
	// Client address.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// The name of policy.
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
	// SQL statement. support fuzzy matching.
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
	SqlType pulumi.StringPtrInput `pulumi:"sqlType"`
	// SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
	SqlTypes pulumi.StringArrayInput `pulumi:"sqlTypes"`
	// SQL statement. Support passing multiple sql statements.
	Sqls pulumi.StringArrayInput `pulumi:"sqls"`
	// Table name.
	TableNames pulumi.StringArrayInput `pulumi:"tableNames"`
	// User name.
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (AuditLogFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogFileFilter)(nil)).Elem()
}

func (i AuditLogFileFilterArgs) ToAuditLogFileFilterOutput() AuditLogFileFilterOutput {
	return i.ToAuditLogFileFilterOutputWithContext(context.Background())
}

func (i AuditLogFileFilterArgs) ToAuditLogFileFilterOutputWithContext(ctx context.Context) AuditLogFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogFileFilterOutput)
}

func (i AuditLogFileFilterArgs) ToAuditLogFileFilterPtrOutput() AuditLogFileFilterPtrOutput {
	return i.ToAuditLogFileFilterPtrOutputWithContext(context.Background())
}

func (i AuditLogFileFilterArgs) ToAuditLogFileFilterPtrOutputWithContext(ctx context.Context) AuditLogFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogFileFilterOutput).ToAuditLogFileFilterPtrOutputWithContext(ctx)
}

// AuditLogFileFilterPtrInput is an input type that accepts AuditLogFileFilterArgs, AuditLogFileFilterPtr and AuditLogFileFilterPtrOutput values.
// You can construct a concrete instance of `AuditLogFileFilterPtrInput` via:
//
//          AuditLogFileFilterArgs{...}
//
//  or:
//
//          nil
type AuditLogFileFilterPtrInput interface {
	pulumi.Input

	ToAuditLogFileFilterPtrOutput() AuditLogFileFilterPtrOutput
	ToAuditLogFileFilterPtrOutputWithContext(context.Context) AuditLogFileFilterPtrOutput
}

type auditLogFileFilterPtrType AuditLogFileFilterArgs

func AuditLogFileFilterPtr(v *AuditLogFileFilterArgs) AuditLogFileFilterPtrInput {
	return (*auditLogFileFilterPtrType)(v)
}

func (*auditLogFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogFileFilter)(nil)).Elem()
}

func (i *auditLogFileFilterPtrType) ToAuditLogFileFilterPtrOutput() AuditLogFileFilterPtrOutput {
	return i.ToAuditLogFileFilterPtrOutputWithContext(context.Background())
}

func (i *auditLogFileFilterPtrType) ToAuditLogFileFilterPtrOutputWithContext(ctx context.Context) AuditLogFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogFileFilterPtrOutput)
}

type AuditLogFileFilterOutput struct{ *pulumi.OutputState }

func (AuditLogFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogFileFilter)(nil)).Elem()
}

func (o AuditLogFileFilterOutput) ToAuditLogFileFilterOutput() AuditLogFileFilterOutput {
	return o
}

func (o AuditLogFileFilterOutput) ToAuditLogFileFilterOutputWithContext(ctx context.Context) AuditLogFileFilterOutput {
	return o
}

func (o AuditLogFileFilterOutput) ToAuditLogFileFilterPtrOutput() AuditLogFileFilterPtrOutput {
	return o.ToAuditLogFileFilterPtrOutputWithContext(context.Background())
}

func (o AuditLogFileFilterOutput) ToAuditLogFileFilterPtrOutputWithContext(ctx context.Context) AuditLogFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogFileFilter) *AuditLogFileFilter {
		return &v
	}).(AuditLogFileFilterPtrOutput)
}

// Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
func (o AuditLogFileFilterOutput) AffectRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuditLogFileFilter) *int { return v.AffectRows }).(pulumi.IntPtrOutput)
}

// Database name.
func (o AuditLogFileFilterOutput) DbNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.DbNames }).(pulumi.StringArrayOutput)
}

// Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
func (o AuditLogFileFilterOutput) ExecTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuditLogFileFilter) *int { return v.ExecTime }).(pulumi.IntPtrOutput)
}

// Client address.
func (o AuditLogFileFilterOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The name of policy.
func (o AuditLogFileFilterOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

// SQL statement. support fuzzy matching.
func (o AuditLogFileFilterOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditLogFileFilter) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
func (o AuditLogFileFilterOutput) SqlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditLogFileFilter) *string { return v.SqlType }).(pulumi.StringPtrOutput)
}

// SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
func (o AuditLogFileFilterOutput) SqlTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.SqlTypes }).(pulumi.StringArrayOutput)
}

// SQL statement. Support passing multiple sql statements.
func (o AuditLogFileFilterOutput) Sqls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.Sqls }).(pulumi.StringArrayOutput)
}

// Table name.
func (o AuditLogFileFilterOutput) TableNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.TableNames }).(pulumi.StringArrayOutput)
}

// User name.
func (o AuditLogFileFilterOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogFileFilter) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type AuditLogFileFilterPtrOutput struct{ *pulumi.OutputState }

func (AuditLogFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogFileFilter)(nil)).Elem()
}

func (o AuditLogFileFilterPtrOutput) ToAuditLogFileFilterPtrOutput() AuditLogFileFilterPtrOutput {
	return o
}

func (o AuditLogFileFilterPtrOutput) ToAuditLogFileFilterPtrOutputWithContext(ctx context.Context) AuditLogFileFilterPtrOutput {
	return o
}

func (o AuditLogFileFilterPtrOutput) Elem() AuditLogFileFilterOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) AuditLogFileFilter {
		if v != nil {
			return *v
		}
		var ret AuditLogFileFilter
		return ret
	}).(AuditLogFileFilterOutput)
}

// Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
func (o AuditLogFileFilterPtrOutput) AffectRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) *int {
		if v == nil {
			return nil
		}
		return v.AffectRows
	}).(pulumi.IntPtrOutput)
}

// Database name.
func (o AuditLogFileFilterPtrOutput) DbNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.DbNames
	}).(pulumi.StringArrayOutput)
}

// Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
func (o AuditLogFileFilterPtrOutput) ExecTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) *int {
		if v == nil {
			return nil
		}
		return v.ExecTime
	}).(pulumi.IntPtrOutput)
}

// Client address.
func (o AuditLogFileFilterPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// The name of policy.
func (o AuditLogFileFilterPtrOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.PolicyNames
	}).(pulumi.StringArrayOutput)
}

// SQL statement. support fuzzy matching.
func (o AuditLogFileFilterPtrOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Sql
	}).(pulumi.StringPtrOutput)
}

// SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
func (o AuditLogFileFilterPtrOutput) SqlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.SqlType
	}).(pulumi.StringPtrOutput)
}

// SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
func (o AuditLogFileFilterPtrOutput) SqlTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.SqlTypes
	}).(pulumi.StringArrayOutput)
}

// SQL statement. Support passing multiple sql statements.
func (o AuditLogFileFilterPtrOutput) Sqls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.Sqls
	}).(pulumi.StringArrayOutput)
}

// Table name.
func (o AuditLogFileFilterPtrOutput) TableNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.TableNames
	}).(pulumi.StringArrayOutput)
}

// User name.
func (o AuditLogFileFilterPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditLogFileFilter) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type ParamTemplateParamList struct {
	// The value of parameter.
	CurrentValue *string `pulumi:"currentValue"`
	// The name of parameter template.
	Name *string `pulumi:"name"`
}

// ParamTemplateParamListInput is an input type that accepts ParamTemplateParamListArgs and ParamTemplateParamListOutput values.
// You can construct a concrete instance of `ParamTemplateParamListInput` via:
//
//          ParamTemplateParamListArgs{...}
type ParamTemplateParamListInput interface {
	pulumi.Input

	ToParamTemplateParamListOutput() ParamTemplateParamListOutput
	ToParamTemplateParamListOutputWithContext(context.Context) ParamTemplateParamListOutput
}

type ParamTemplateParamListArgs struct {
	// The value of parameter.
	CurrentValue pulumi.StringPtrInput `pulumi:"currentValue"`
	// The name of parameter template.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ParamTemplateParamListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParamTemplateParamList)(nil)).Elem()
}

func (i ParamTemplateParamListArgs) ToParamTemplateParamListOutput() ParamTemplateParamListOutput {
	return i.ToParamTemplateParamListOutputWithContext(context.Background())
}

func (i ParamTemplateParamListArgs) ToParamTemplateParamListOutputWithContext(ctx context.Context) ParamTemplateParamListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParamTemplateParamListOutput)
}

// ParamTemplateParamListArrayInput is an input type that accepts ParamTemplateParamListArray and ParamTemplateParamListArrayOutput values.
// You can construct a concrete instance of `ParamTemplateParamListArrayInput` via:
//
//          ParamTemplateParamListArray{ ParamTemplateParamListArgs{...} }
type ParamTemplateParamListArrayInput interface {
	pulumi.Input

	ToParamTemplateParamListArrayOutput() ParamTemplateParamListArrayOutput
	ToParamTemplateParamListArrayOutputWithContext(context.Context) ParamTemplateParamListArrayOutput
}

type ParamTemplateParamListArray []ParamTemplateParamListInput

func (ParamTemplateParamListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParamTemplateParamList)(nil)).Elem()
}

func (i ParamTemplateParamListArray) ToParamTemplateParamListArrayOutput() ParamTemplateParamListArrayOutput {
	return i.ToParamTemplateParamListArrayOutputWithContext(context.Background())
}

func (i ParamTemplateParamListArray) ToParamTemplateParamListArrayOutputWithContext(ctx context.Context) ParamTemplateParamListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParamTemplateParamListArrayOutput)
}

type ParamTemplateParamListOutput struct{ *pulumi.OutputState }

func (ParamTemplateParamListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParamTemplateParamList)(nil)).Elem()
}

func (o ParamTemplateParamListOutput) ToParamTemplateParamListOutput() ParamTemplateParamListOutput {
	return o
}

func (o ParamTemplateParamListOutput) ToParamTemplateParamListOutputWithContext(ctx context.Context) ParamTemplateParamListOutput {
	return o
}

// The value of parameter.
func (o ParamTemplateParamListOutput) CurrentValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParamTemplateParamList) *string { return v.CurrentValue }).(pulumi.StringPtrOutput)
}

// The name of parameter template.
func (o ParamTemplateParamListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParamTemplateParamList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ParamTemplateParamListArrayOutput struct{ *pulumi.OutputState }

func (ParamTemplateParamListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParamTemplateParamList)(nil)).Elem()
}

func (o ParamTemplateParamListArrayOutput) ToParamTemplateParamListArrayOutput() ParamTemplateParamListArrayOutput {
	return o
}

func (o ParamTemplateParamListArrayOutput) ToParamTemplateParamListArrayOutputWithContext(ctx context.Context) ParamTemplateParamListArrayOutput {
	return o
}

func (o ParamTemplateParamListArrayOutput) Index(i pulumi.IntInput) ParamTemplateParamListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParamTemplateParamList {
		return vs[0].([]ParamTemplateParamList)[vs[1].(int)]
	}).(ParamTemplateParamListOutput)
}

type PrivilegeColumn struct {
	// Column name.
	ColumnName string `pulumi:"columnName"`
	// Database name.
	DatabaseName string `pulumi:"databaseName"`
	// Column privilege.available values for Privileges:SELECT,INSERT,UPDATE,REFERENCES.
	Privileges []string `pulumi:"privileges"`
	// Table name.
	TableName string `pulumi:"tableName"`
}

// PrivilegeColumnInput is an input type that accepts PrivilegeColumnArgs and PrivilegeColumnOutput values.
// You can construct a concrete instance of `PrivilegeColumnInput` via:
//
//          PrivilegeColumnArgs{...}
type PrivilegeColumnInput interface {
	pulumi.Input

	ToPrivilegeColumnOutput() PrivilegeColumnOutput
	ToPrivilegeColumnOutputWithContext(context.Context) PrivilegeColumnOutput
}

type PrivilegeColumnArgs struct {
	// Column name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// Database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Column privilege.available values for Privileges:SELECT,INSERT,UPDATE,REFERENCES.
	Privileges pulumi.StringArrayInput `pulumi:"privileges"`
	// Table name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (PrivilegeColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeColumn)(nil)).Elem()
}

func (i PrivilegeColumnArgs) ToPrivilegeColumnOutput() PrivilegeColumnOutput {
	return i.ToPrivilegeColumnOutputWithContext(context.Background())
}

func (i PrivilegeColumnArgs) ToPrivilegeColumnOutputWithContext(ctx context.Context) PrivilegeColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeColumnOutput)
}

// PrivilegeColumnArrayInput is an input type that accepts PrivilegeColumnArray and PrivilegeColumnArrayOutput values.
// You can construct a concrete instance of `PrivilegeColumnArrayInput` via:
//
//          PrivilegeColumnArray{ PrivilegeColumnArgs{...} }
type PrivilegeColumnArrayInput interface {
	pulumi.Input

	ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput
	ToPrivilegeColumnArrayOutputWithContext(context.Context) PrivilegeColumnArrayOutput
}

type PrivilegeColumnArray []PrivilegeColumnInput

func (PrivilegeColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeColumn)(nil)).Elem()
}

func (i PrivilegeColumnArray) ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput {
	return i.ToPrivilegeColumnArrayOutputWithContext(context.Background())
}

func (i PrivilegeColumnArray) ToPrivilegeColumnArrayOutputWithContext(ctx context.Context) PrivilegeColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeColumnArrayOutput)
}

type PrivilegeColumnOutput struct{ *pulumi.OutputState }

func (PrivilegeColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeColumn)(nil)).Elem()
}

func (o PrivilegeColumnOutput) ToPrivilegeColumnOutput() PrivilegeColumnOutput {
	return o
}

func (o PrivilegeColumnOutput) ToPrivilegeColumnOutputWithContext(ctx context.Context) PrivilegeColumnOutput {
	return o
}

// Column name.
func (o PrivilegeColumnOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.ColumnName }).(pulumi.StringOutput)
}

// Database name.
func (o PrivilegeColumnOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Column privilege.available values for Privileges:SELECT,INSERT,UPDATE,REFERENCES.
func (o PrivilegeColumnOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeColumn) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

// Table name.
func (o PrivilegeColumnOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeColumn) string { return v.TableName }).(pulumi.StringOutput)
}

type PrivilegeColumnArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeColumn)(nil)).Elem()
}

func (o PrivilegeColumnArrayOutput) ToPrivilegeColumnArrayOutput() PrivilegeColumnArrayOutput {
	return o
}

func (o PrivilegeColumnArrayOutput) ToPrivilegeColumnArrayOutputWithContext(ctx context.Context) PrivilegeColumnArrayOutput {
	return o
}

func (o PrivilegeColumnArrayOutput) Index(i pulumi.IntInput) PrivilegeColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeColumn {
		return vs[0].([]PrivilegeColumn)[vs[1].(int)]
	}).(PrivilegeColumnOutput)
}

type PrivilegeDatabase struct {
	// Database name.
	DatabaseName string `pulumi:"databaseName"`
	// Database privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER.
	Privileges []string `pulumi:"privileges"`
}

// PrivilegeDatabaseInput is an input type that accepts PrivilegeDatabaseArgs and PrivilegeDatabaseOutput values.
// You can construct a concrete instance of `PrivilegeDatabaseInput` via:
//
//          PrivilegeDatabaseArgs{...}
type PrivilegeDatabaseInput interface {
	pulumi.Input

	ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput
	ToPrivilegeDatabaseOutputWithContext(context.Context) PrivilegeDatabaseOutput
}

type PrivilegeDatabaseArgs struct {
	// Database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Database privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER.
	Privileges pulumi.StringArrayInput `pulumi:"privileges"`
}

func (PrivilegeDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeDatabase)(nil)).Elem()
}

func (i PrivilegeDatabaseArgs) ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput {
	return i.ToPrivilegeDatabaseOutputWithContext(context.Background())
}

func (i PrivilegeDatabaseArgs) ToPrivilegeDatabaseOutputWithContext(ctx context.Context) PrivilegeDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeDatabaseOutput)
}

// PrivilegeDatabaseArrayInput is an input type that accepts PrivilegeDatabaseArray and PrivilegeDatabaseArrayOutput values.
// You can construct a concrete instance of `PrivilegeDatabaseArrayInput` via:
//
//          PrivilegeDatabaseArray{ PrivilegeDatabaseArgs{...} }
type PrivilegeDatabaseArrayInput interface {
	pulumi.Input

	ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput
	ToPrivilegeDatabaseArrayOutputWithContext(context.Context) PrivilegeDatabaseArrayOutput
}

type PrivilegeDatabaseArray []PrivilegeDatabaseInput

func (PrivilegeDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeDatabase)(nil)).Elem()
}

func (i PrivilegeDatabaseArray) ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput {
	return i.ToPrivilegeDatabaseArrayOutputWithContext(context.Background())
}

func (i PrivilegeDatabaseArray) ToPrivilegeDatabaseArrayOutputWithContext(ctx context.Context) PrivilegeDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeDatabaseArrayOutput)
}

type PrivilegeDatabaseOutput struct{ *pulumi.OutputState }

func (PrivilegeDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeDatabase)(nil)).Elem()
}

func (o PrivilegeDatabaseOutput) ToPrivilegeDatabaseOutput() PrivilegeDatabaseOutput {
	return o
}

func (o PrivilegeDatabaseOutput) ToPrivilegeDatabaseOutputWithContext(ctx context.Context) PrivilegeDatabaseOutput {
	return o
}

// Database name.
func (o PrivilegeDatabaseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeDatabase) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Database privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER.
func (o PrivilegeDatabaseOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeDatabase) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

type PrivilegeDatabaseArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeDatabase)(nil)).Elem()
}

func (o PrivilegeDatabaseArrayOutput) ToPrivilegeDatabaseArrayOutput() PrivilegeDatabaseArrayOutput {
	return o
}

func (o PrivilegeDatabaseArrayOutput) ToPrivilegeDatabaseArrayOutputWithContext(ctx context.Context) PrivilegeDatabaseArrayOutput {
	return o
}

func (o PrivilegeDatabaseArrayOutput) Index(i pulumi.IntInput) PrivilegeDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeDatabase {
		return vs[0].([]PrivilegeDatabase)[vs[1].(int)]
	}).(PrivilegeDatabaseOutput)
}

type PrivilegeTable struct {
	// Database name.
	DatabaseName string `pulumi:"databaseName"`
	// Table privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW,TRIGGER.
	Privileges []string `pulumi:"privileges"`
	// Table name.
	TableName string `pulumi:"tableName"`
}

// PrivilegeTableInput is an input type that accepts PrivilegeTableArgs and PrivilegeTableOutput values.
// You can construct a concrete instance of `PrivilegeTableInput` via:
//
//          PrivilegeTableArgs{...}
type PrivilegeTableInput interface {
	pulumi.Input

	ToPrivilegeTableOutput() PrivilegeTableOutput
	ToPrivilegeTableOutputWithContext(context.Context) PrivilegeTableOutput
}

type PrivilegeTableArgs struct {
	// Database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Table privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW,TRIGGER.
	Privileges pulumi.StringArrayInput `pulumi:"privileges"`
	// Table name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (PrivilegeTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeTable)(nil)).Elem()
}

func (i PrivilegeTableArgs) ToPrivilegeTableOutput() PrivilegeTableOutput {
	return i.ToPrivilegeTableOutputWithContext(context.Background())
}

func (i PrivilegeTableArgs) ToPrivilegeTableOutputWithContext(ctx context.Context) PrivilegeTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeTableOutput)
}

// PrivilegeTableArrayInput is an input type that accepts PrivilegeTableArray and PrivilegeTableArrayOutput values.
// You can construct a concrete instance of `PrivilegeTableArrayInput` via:
//
//          PrivilegeTableArray{ PrivilegeTableArgs{...} }
type PrivilegeTableArrayInput interface {
	pulumi.Input

	ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput
	ToPrivilegeTableArrayOutputWithContext(context.Context) PrivilegeTableArrayOutput
}

type PrivilegeTableArray []PrivilegeTableInput

func (PrivilegeTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeTable)(nil)).Elem()
}

func (i PrivilegeTableArray) ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput {
	return i.ToPrivilegeTableArrayOutputWithContext(context.Background())
}

func (i PrivilegeTableArray) ToPrivilegeTableArrayOutputWithContext(ctx context.Context) PrivilegeTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeTableArrayOutput)
}

type PrivilegeTableOutput struct{ *pulumi.OutputState }

func (PrivilegeTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeTable)(nil)).Elem()
}

func (o PrivilegeTableOutput) ToPrivilegeTableOutput() PrivilegeTableOutput {
	return o
}

func (o PrivilegeTableOutput) ToPrivilegeTableOutputWithContext(ctx context.Context) PrivilegeTableOutput {
	return o
}

// Database name.
func (o PrivilegeTableOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeTable) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Table privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW,TRIGGER.
func (o PrivilegeTableOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeTable) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

// Table name.
func (o PrivilegeTableOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegeTable) string { return v.TableName }).(pulumi.StringOutput)
}

type PrivilegeTableArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeTable)(nil)).Elem()
}

func (o PrivilegeTableArrayOutput) ToPrivilegeTableArrayOutput() PrivilegeTableArrayOutput {
	return o
}

func (o PrivilegeTableArrayOutput) ToPrivilegeTableArrayOutputWithContext(ctx context.Context) PrivilegeTableArrayOutput {
	return o
}

func (o PrivilegeTableArrayOutput) Index(i pulumi.IntInput) PrivilegeTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeTable {
		return vs[0].([]PrivilegeTable)[vs[1].(int)]
	}).(PrivilegeTableOutput)
}

type GetBackupListList struct {
	// ID of Backup task.
	BackupId int `pulumi:"backupId"`
	// Backup method. Supported values include: `physical` - physical backup, and `logical` - logical backup.
	BackupModel string `pulumi:"backupModel"`
	// The owner of the backup files.
	Creator string `pulumi:"creator"`
	// The time at which the backup finishes.
	FinishTime string `pulumi:"finishTime"`
	// URL for downloads externally.
	InternetUrl string `pulumi:"internetUrl"`
	// URL for downloads internally.
	IntranetUrl string `pulumi:"intranetUrl"`
	// the size of backup file.
	Size int `pulumi:"size"`
	// The earliest time at which the backup starts. For example, `2` indicates 2:00 am.
	Time string `pulumi:"time"`
}

// GetBackupListListInput is an input type that accepts GetBackupListListArgs and GetBackupListListOutput values.
// You can construct a concrete instance of `GetBackupListListInput` via:
//
//          GetBackupListListArgs{...}
type GetBackupListListInput interface {
	pulumi.Input

	ToGetBackupListListOutput() GetBackupListListOutput
	ToGetBackupListListOutputWithContext(context.Context) GetBackupListListOutput
}

type GetBackupListListArgs struct {
	// ID of Backup task.
	BackupId pulumi.IntInput `pulumi:"backupId"`
	// Backup method. Supported values include: `physical` - physical backup, and `logical` - logical backup.
	BackupModel pulumi.StringInput `pulumi:"backupModel"`
	// The owner of the backup files.
	Creator pulumi.StringInput `pulumi:"creator"`
	// The time at which the backup finishes.
	FinishTime pulumi.StringInput `pulumi:"finishTime"`
	// URL for downloads externally.
	InternetUrl pulumi.StringInput `pulumi:"internetUrl"`
	// URL for downloads internally.
	IntranetUrl pulumi.StringInput `pulumi:"intranetUrl"`
	// the size of backup file.
	Size pulumi.IntInput `pulumi:"size"`
	// The earliest time at which the backup starts. For example, `2` indicates 2:00 am.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetBackupListListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupListList)(nil)).Elem()
}

func (i GetBackupListListArgs) ToGetBackupListListOutput() GetBackupListListOutput {
	return i.ToGetBackupListListOutputWithContext(context.Background())
}

func (i GetBackupListListArgs) ToGetBackupListListOutputWithContext(ctx context.Context) GetBackupListListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupListListOutput)
}

// GetBackupListListArrayInput is an input type that accepts GetBackupListListArray and GetBackupListListArrayOutput values.
// You can construct a concrete instance of `GetBackupListListArrayInput` via:
//
//          GetBackupListListArray{ GetBackupListListArgs{...} }
type GetBackupListListArrayInput interface {
	pulumi.Input

	ToGetBackupListListArrayOutput() GetBackupListListArrayOutput
	ToGetBackupListListArrayOutputWithContext(context.Context) GetBackupListListArrayOutput
}

type GetBackupListListArray []GetBackupListListInput

func (GetBackupListListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupListList)(nil)).Elem()
}

func (i GetBackupListListArray) ToGetBackupListListArrayOutput() GetBackupListListArrayOutput {
	return i.ToGetBackupListListArrayOutputWithContext(context.Background())
}

func (i GetBackupListListArray) ToGetBackupListListArrayOutputWithContext(ctx context.Context) GetBackupListListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupListListArrayOutput)
}

type GetBackupListListOutput struct{ *pulumi.OutputState }

func (GetBackupListListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupListList)(nil)).Elem()
}

func (o GetBackupListListOutput) ToGetBackupListListOutput() GetBackupListListOutput {
	return o
}

func (o GetBackupListListOutput) ToGetBackupListListOutputWithContext(ctx context.Context) GetBackupListListOutput {
	return o
}

// ID of Backup task.
func (o GetBackupListListOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupListList) int { return v.BackupId }).(pulumi.IntOutput)
}

// Backup method. Supported values include: `physical` - physical backup, and `logical` - logical backup.
func (o GetBackupListListOutput) BackupModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.BackupModel }).(pulumi.StringOutput)
}

// The owner of the backup files.
func (o GetBackupListListOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.Creator }).(pulumi.StringOutput)
}

// The time at which the backup finishes.
func (o GetBackupListListOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.FinishTime }).(pulumi.StringOutput)
}

// URL for downloads externally.
func (o GetBackupListListOutput) InternetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.InternetUrl }).(pulumi.StringOutput)
}

// URL for downloads internally.
func (o GetBackupListListOutput) IntranetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.IntranetUrl }).(pulumi.StringOutput)
}

// the size of backup file.
func (o GetBackupListListOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupListList) int { return v.Size }).(pulumi.IntOutput)
}

// The earliest time at which the backup starts. For example, `2` indicates 2:00 am.
func (o GetBackupListListOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupListList) string { return v.Time }).(pulumi.StringOutput)
}

type GetBackupListListArrayOutput struct{ *pulumi.OutputState }

func (GetBackupListListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupListList)(nil)).Elem()
}

func (o GetBackupListListArrayOutput) ToGetBackupListListArrayOutput() GetBackupListListArrayOutput {
	return o
}

func (o GetBackupListListArrayOutput) ToGetBackupListListArrayOutputWithContext(ctx context.Context) GetBackupListListArrayOutput {
	return o
}

func (o GetBackupListListArrayOutput) Index(i pulumi.IntInput) GetBackupListListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupListList {
		return vs[0].([]GetBackupListList)[vs[1].(int)]
	}).(GetBackupListListOutput)
}

type GetBackupSummariesItem struct {
	// The number of automatic data backups for this instance.
	AutoBackupCount int `pulumi:"autoBackupCount"`
	// The automatic data backup capacity of this instance.
	AutoBackupVolume int `pulumi:"autoBackupVolume"`
	// The total backup (including data backup and log backup) of the instance occupies capacity.
	BackupVolume int `pulumi:"backupVolume"`
	// The number of log backups for this instance.
	BinlogBackupCount int `pulumi:"binlogBackupCount"`
	// The capacity of the instance log backup.
	BinlogBackupVolume int `pulumi:"binlogBackupVolume"`
	// The total number of data backups (including automatic backups and manual backups) of the instance.
	DataBackupCount int `pulumi:"dataBackupCount"`
	// The total data backup capacity of this instance.
	DataBackupVolume int `pulumi:"dataBackupVolume"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The number of manual data backups for this instance.
	ManualBackupCount int `pulumi:"manualBackupCount"`
	// The capacity of manual data backup for this instance.
	ManualBackupVolume int `pulumi:"manualBackupVolume"`
}

// GetBackupSummariesItemInput is an input type that accepts GetBackupSummariesItemArgs and GetBackupSummariesItemOutput values.
// You can construct a concrete instance of `GetBackupSummariesItemInput` via:
//
//          GetBackupSummariesItemArgs{...}
type GetBackupSummariesItemInput interface {
	pulumi.Input

	ToGetBackupSummariesItemOutput() GetBackupSummariesItemOutput
	ToGetBackupSummariesItemOutputWithContext(context.Context) GetBackupSummariesItemOutput
}

type GetBackupSummariesItemArgs struct {
	// The number of automatic data backups for this instance.
	AutoBackupCount pulumi.IntInput `pulumi:"autoBackupCount"`
	// The automatic data backup capacity of this instance.
	AutoBackupVolume pulumi.IntInput `pulumi:"autoBackupVolume"`
	// The total backup (including data backup and log backup) of the instance occupies capacity.
	BackupVolume pulumi.IntInput `pulumi:"backupVolume"`
	// The number of log backups for this instance.
	BinlogBackupCount pulumi.IntInput `pulumi:"binlogBackupCount"`
	// The capacity of the instance log backup.
	BinlogBackupVolume pulumi.IntInput `pulumi:"binlogBackupVolume"`
	// The total number of data backups (including automatic backups and manual backups) of the instance.
	DataBackupCount pulumi.IntInput `pulumi:"dataBackupCount"`
	// The total data backup capacity of this instance.
	DataBackupVolume pulumi.IntInput `pulumi:"dataBackupVolume"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The number of manual data backups for this instance.
	ManualBackupCount pulumi.IntInput `pulumi:"manualBackupCount"`
	// The capacity of manual data backup for this instance.
	ManualBackupVolume pulumi.IntInput `pulumi:"manualBackupVolume"`
}

func (GetBackupSummariesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupSummariesItem)(nil)).Elem()
}

func (i GetBackupSummariesItemArgs) ToGetBackupSummariesItemOutput() GetBackupSummariesItemOutput {
	return i.ToGetBackupSummariesItemOutputWithContext(context.Background())
}

func (i GetBackupSummariesItemArgs) ToGetBackupSummariesItemOutputWithContext(ctx context.Context) GetBackupSummariesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupSummariesItemOutput)
}

// GetBackupSummariesItemArrayInput is an input type that accepts GetBackupSummariesItemArray and GetBackupSummariesItemArrayOutput values.
// You can construct a concrete instance of `GetBackupSummariesItemArrayInput` via:
//
//          GetBackupSummariesItemArray{ GetBackupSummariesItemArgs{...} }
type GetBackupSummariesItemArrayInput interface {
	pulumi.Input

	ToGetBackupSummariesItemArrayOutput() GetBackupSummariesItemArrayOutput
	ToGetBackupSummariesItemArrayOutputWithContext(context.Context) GetBackupSummariesItemArrayOutput
}

type GetBackupSummariesItemArray []GetBackupSummariesItemInput

func (GetBackupSummariesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupSummariesItem)(nil)).Elem()
}

func (i GetBackupSummariesItemArray) ToGetBackupSummariesItemArrayOutput() GetBackupSummariesItemArrayOutput {
	return i.ToGetBackupSummariesItemArrayOutputWithContext(context.Background())
}

func (i GetBackupSummariesItemArray) ToGetBackupSummariesItemArrayOutputWithContext(ctx context.Context) GetBackupSummariesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupSummariesItemArrayOutput)
}

type GetBackupSummariesItemOutput struct{ *pulumi.OutputState }

func (GetBackupSummariesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupSummariesItem)(nil)).Elem()
}

func (o GetBackupSummariesItemOutput) ToGetBackupSummariesItemOutput() GetBackupSummariesItemOutput {
	return o
}

func (o GetBackupSummariesItemOutput) ToGetBackupSummariesItemOutputWithContext(ctx context.Context) GetBackupSummariesItemOutput {
	return o
}

// The number of automatic data backups for this instance.
func (o GetBackupSummariesItemOutput) AutoBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.AutoBackupCount }).(pulumi.IntOutput)
}

// The automatic data backup capacity of this instance.
func (o GetBackupSummariesItemOutput) AutoBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.AutoBackupVolume }).(pulumi.IntOutput)
}

// The total backup (including data backup and log backup) of the instance occupies capacity.
func (o GetBackupSummariesItemOutput) BackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.BackupVolume }).(pulumi.IntOutput)
}

// The number of log backups for this instance.
func (o GetBackupSummariesItemOutput) BinlogBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.BinlogBackupCount }).(pulumi.IntOutput)
}

// The capacity of the instance log backup.
func (o GetBackupSummariesItemOutput) BinlogBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.BinlogBackupVolume }).(pulumi.IntOutput)
}

// The total number of data backups (including automatic backups and manual backups) of the instance.
func (o GetBackupSummariesItemOutput) DataBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.DataBackupCount }).(pulumi.IntOutput)
}

// The total data backup capacity of this instance.
func (o GetBackupSummariesItemOutput) DataBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.DataBackupVolume }).(pulumi.IntOutput)
}

// Instance ID.
func (o GetBackupSummariesItemOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The number of manual data backups for this instance.
func (o GetBackupSummariesItemOutput) ManualBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.ManualBackupCount }).(pulumi.IntOutput)
}

// The capacity of manual data backup for this instance.
func (o GetBackupSummariesItemOutput) ManualBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupSummariesItem) int { return v.ManualBackupVolume }).(pulumi.IntOutput)
}

type GetBackupSummariesItemArrayOutput struct{ *pulumi.OutputState }

func (GetBackupSummariesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupSummariesItem)(nil)).Elem()
}

func (o GetBackupSummariesItemArrayOutput) ToGetBackupSummariesItemArrayOutput() GetBackupSummariesItemArrayOutput {
	return o
}

func (o GetBackupSummariesItemArrayOutput) ToGetBackupSummariesItemArrayOutputWithContext(ctx context.Context) GetBackupSummariesItemArrayOutput {
	return o
}

func (o GetBackupSummariesItemArrayOutput) Index(i pulumi.IntInput) GetBackupSummariesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupSummariesItem {
		return vs[0].([]GetBackupSummariesItem)[vs[1].(int)]
	}).(GetBackupSummariesItemOutput)
}

type GetBinLogItem struct {
	// binlog file deadline.
	BinlogFinishTime string `pulumi:"binlogFinishTime"`
	// Binlog file start time.
	BinlogStartTime string `pulumi:"binlogStartTime"`
	// Storage method, 0-regular storage, 1-archive storage, the default is 0.
	CosStorageType int `pulumi:"cosStorageType"`
	// File storage time, time format: 2016-03-17 02:10:37.
	Date string `pulumi:"date"`
	// Instance ID, in the format: cdb-c1nl9rpv. Same instance ID as displayed in the ApsaraDB for Console page.
	InstanceId string `pulumi:"instanceId"`
	// download link.
	InternetUrl string `pulumi:"internetUrl"`
	// download link.
	IntranetUrl string `pulumi:"intranetUrl"`
	// binlog log backup file name.
	Name string `pulumi:"name"`
	// The region where remote backup is located.
	Region string `pulumi:"region"`
	// Binlog remote backup details.
	RemoteInfos []GetBinLogItemRemoteInfo `pulumi:"remoteInfos"`
	// Backup file size, unit: Byte.
	Size int `pulumi:"size"`
	// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
	Status string `pulumi:"status"`
	// Specific log type, possible values are: binlog - binary log.
	Type string `pulumi:"type"`
}

// GetBinLogItemInput is an input type that accepts GetBinLogItemArgs and GetBinLogItemOutput values.
// You can construct a concrete instance of `GetBinLogItemInput` via:
//
//          GetBinLogItemArgs{...}
type GetBinLogItemInput interface {
	pulumi.Input

	ToGetBinLogItemOutput() GetBinLogItemOutput
	ToGetBinLogItemOutputWithContext(context.Context) GetBinLogItemOutput
}

type GetBinLogItemArgs struct {
	// binlog file deadline.
	BinlogFinishTime pulumi.StringInput `pulumi:"binlogFinishTime"`
	// Binlog file start time.
	BinlogStartTime pulumi.StringInput `pulumi:"binlogStartTime"`
	// Storage method, 0-regular storage, 1-archive storage, the default is 0.
	CosStorageType pulumi.IntInput `pulumi:"cosStorageType"`
	// File storage time, time format: 2016-03-17 02:10:37.
	Date pulumi.StringInput `pulumi:"date"`
	// Instance ID, in the format: cdb-c1nl9rpv. Same instance ID as displayed in the ApsaraDB for Console page.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// download link.
	InternetUrl pulumi.StringInput `pulumi:"internetUrl"`
	// download link.
	IntranetUrl pulumi.StringInput `pulumi:"intranetUrl"`
	// binlog log backup file name.
	Name pulumi.StringInput `pulumi:"name"`
	// The region where remote backup is located.
	Region pulumi.StringInput `pulumi:"region"`
	// Binlog remote backup details.
	RemoteInfos GetBinLogItemRemoteInfoArrayInput `pulumi:"remoteInfos"`
	// Backup file size, unit: Byte.
	Size pulumi.IntInput `pulumi:"size"`
	// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
	Status pulumi.StringInput `pulumi:"status"`
	// Specific log type, possible values are: binlog - binary log.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBinLogItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinLogItem)(nil)).Elem()
}

func (i GetBinLogItemArgs) ToGetBinLogItemOutput() GetBinLogItemOutput {
	return i.ToGetBinLogItemOutputWithContext(context.Background())
}

func (i GetBinLogItemArgs) ToGetBinLogItemOutputWithContext(ctx context.Context) GetBinLogItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBinLogItemOutput)
}

// GetBinLogItemArrayInput is an input type that accepts GetBinLogItemArray and GetBinLogItemArrayOutput values.
// You can construct a concrete instance of `GetBinLogItemArrayInput` via:
//
//          GetBinLogItemArray{ GetBinLogItemArgs{...} }
type GetBinLogItemArrayInput interface {
	pulumi.Input

	ToGetBinLogItemArrayOutput() GetBinLogItemArrayOutput
	ToGetBinLogItemArrayOutputWithContext(context.Context) GetBinLogItemArrayOutput
}

type GetBinLogItemArray []GetBinLogItemInput

func (GetBinLogItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBinLogItem)(nil)).Elem()
}

func (i GetBinLogItemArray) ToGetBinLogItemArrayOutput() GetBinLogItemArrayOutput {
	return i.ToGetBinLogItemArrayOutputWithContext(context.Background())
}

func (i GetBinLogItemArray) ToGetBinLogItemArrayOutputWithContext(ctx context.Context) GetBinLogItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBinLogItemArrayOutput)
}

type GetBinLogItemOutput struct{ *pulumi.OutputState }

func (GetBinLogItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinLogItem)(nil)).Elem()
}

func (o GetBinLogItemOutput) ToGetBinLogItemOutput() GetBinLogItemOutput {
	return o
}

func (o GetBinLogItemOutput) ToGetBinLogItemOutputWithContext(ctx context.Context) GetBinLogItemOutput {
	return o
}

// binlog file deadline.
func (o GetBinLogItemOutput) BinlogFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.BinlogFinishTime }).(pulumi.StringOutput)
}

// Binlog file start time.
func (o GetBinLogItemOutput) BinlogStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.BinlogStartTime }).(pulumi.StringOutput)
}

// Storage method, 0-regular storage, 1-archive storage, the default is 0.
func (o GetBinLogItemOutput) CosStorageType() pulumi.IntOutput {
	return o.ApplyT(func(v GetBinLogItem) int { return v.CosStorageType }).(pulumi.IntOutput)
}

// File storage time, time format: 2016-03-17 02:10:37.
func (o GetBinLogItemOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.Date }).(pulumi.StringOutput)
}

// Instance ID, in the format: cdb-c1nl9rpv. Same instance ID as displayed in the ApsaraDB for Console page.
func (o GetBinLogItemOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.InstanceId }).(pulumi.StringOutput)
}

// download link.
func (o GetBinLogItemOutput) InternetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.InternetUrl }).(pulumi.StringOutput)
}

// download link.
func (o GetBinLogItemOutput) IntranetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.IntranetUrl }).(pulumi.StringOutput)
}

// binlog log backup file name.
func (o GetBinLogItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.Name }).(pulumi.StringOutput)
}

// The region where remote backup is located.
func (o GetBinLogItemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.Region }).(pulumi.StringOutput)
}

// Binlog remote backup details.
func (o GetBinLogItemOutput) RemoteInfos() GetBinLogItemRemoteInfoArrayOutput {
	return o.ApplyT(func(v GetBinLogItem) []GetBinLogItemRemoteInfo { return v.RemoteInfos }).(GetBinLogItemRemoteInfoArrayOutput)
}

// Backup file size, unit: Byte.
func (o GetBinLogItemOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBinLogItem) int { return v.Size }).(pulumi.IntOutput)
}

// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
func (o GetBinLogItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.Status }).(pulumi.StringOutput)
}

// Specific log type, possible values are: binlog - binary log.
func (o GetBinLogItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetBinLogItemArrayOutput struct{ *pulumi.OutputState }

func (GetBinLogItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBinLogItem)(nil)).Elem()
}

func (o GetBinLogItemArrayOutput) ToGetBinLogItemArrayOutput() GetBinLogItemArrayOutput {
	return o
}

func (o GetBinLogItemArrayOutput) ToGetBinLogItemArrayOutputWithContext(ctx context.Context) GetBinLogItemArrayOutput {
	return o
}

func (o GetBinLogItemArrayOutput) Index(i pulumi.IntInput) GetBinLogItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBinLogItem {
		return vs[0].([]GetBinLogItem)[vs[1].(int)]
	}).(GetBinLogItemOutput)
}

type GetBinLogItemRemoteInfo struct {
	// End time of remote backup task.
	FinishTime string `pulumi:"finishTime"`
	// The region where remote backup is located.
	Region string `pulumi:"region"`
	// Start time of remote backup task.
	StartTime string `pulumi:"startTime"`
	// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
	Status string `pulumi:"status"`
	// The ID of the remote backup subtask.
	SubBackupIds []int `pulumi:"subBackupIds"`
	// download link.
	Url string `pulumi:"url"`
}

// GetBinLogItemRemoteInfoInput is an input type that accepts GetBinLogItemRemoteInfoArgs and GetBinLogItemRemoteInfoOutput values.
// You can construct a concrete instance of `GetBinLogItemRemoteInfoInput` via:
//
//          GetBinLogItemRemoteInfoArgs{...}
type GetBinLogItemRemoteInfoInput interface {
	pulumi.Input

	ToGetBinLogItemRemoteInfoOutput() GetBinLogItemRemoteInfoOutput
	ToGetBinLogItemRemoteInfoOutputWithContext(context.Context) GetBinLogItemRemoteInfoOutput
}

type GetBinLogItemRemoteInfoArgs struct {
	// End time of remote backup task.
	FinishTime pulumi.StringInput `pulumi:"finishTime"`
	// The region where remote backup is located.
	Region pulumi.StringInput `pulumi:"region"`
	// Start time of remote backup task.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the remote backup subtask.
	SubBackupIds pulumi.IntArrayInput `pulumi:"subBackupIds"`
	// download link.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetBinLogItemRemoteInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinLogItemRemoteInfo)(nil)).Elem()
}

func (i GetBinLogItemRemoteInfoArgs) ToGetBinLogItemRemoteInfoOutput() GetBinLogItemRemoteInfoOutput {
	return i.ToGetBinLogItemRemoteInfoOutputWithContext(context.Background())
}

func (i GetBinLogItemRemoteInfoArgs) ToGetBinLogItemRemoteInfoOutputWithContext(ctx context.Context) GetBinLogItemRemoteInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBinLogItemRemoteInfoOutput)
}

// GetBinLogItemRemoteInfoArrayInput is an input type that accepts GetBinLogItemRemoteInfoArray and GetBinLogItemRemoteInfoArrayOutput values.
// You can construct a concrete instance of `GetBinLogItemRemoteInfoArrayInput` via:
//
//          GetBinLogItemRemoteInfoArray{ GetBinLogItemRemoteInfoArgs{...} }
type GetBinLogItemRemoteInfoArrayInput interface {
	pulumi.Input

	ToGetBinLogItemRemoteInfoArrayOutput() GetBinLogItemRemoteInfoArrayOutput
	ToGetBinLogItemRemoteInfoArrayOutputWithContext(context.Context) GetBinLogItemRemoteInfoArrayOutput
}

type GetBinLogItemRemoteInfoArray []GetBinLogItemRemoteInfoInput

func (GetBinLogItemRemoteInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBinLogItemRemoteInfo)(nil)).Elem()
}

func (i GetBinLogItemRemoteInfoArray) ToGetBinLogItemRemoteInfoArrayOutput() GetBinLogItemRemoteInfoArrayOutput {
	return i.ToGetBinLogItemRemoteInfoArrayOutputWithContext(context.Background())
}

func (i GetBinLogItemRemoteInfoArray) ToGetBinLogItemRemoteInfoArrayOutputWithContext(ctx context.Context) GetBinLogItemRemoteInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBinLogItemRemoteInfoArrayOutput)
}

type GetBinLogItemRemoteInfoOutput struct{ *pulumi.OutputState }

func (GetBinLogItemRemoteInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinLogItemRemoteInfo)(nil)).Elem()
}

func (o GetBinLogItemRemoteInfoOutput) ToGetBinLogItemRemoteInfoOutput() GetBinLogItemRemoteInfoOutput {
	return o
}

func (o GetBinLogItemRemoteInfoOutput) ToGetBinLogItemRemoteInfoOutputWithContext(ctx context.Context) GetBinLogItemRemoteInfoOutput {
	return o
}

// End time of remote backup task.
func (o GetBinLogItemRemoteInfoOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) string { return v.FinishTime }).(pulumi.StringOutput)
}

// The region where remote backup is located.
func (o GetBinLogItemRemoteInfoOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) string { return v.Region }).(pulumi.StringOutput)
}

// Start time of remote backup task.
func (o GetBinLogItemRemoteInfoOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) string { return v.StartTime }).(pulumi.StringOutput)
}

// Backup task status. Possible values are `SUCCESS`: backup succeeded, `FAILED`: backup failed, `RUNNING`: backup in progress.
func (o GetBinLogItemRemoteInfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the remote backup subtask.
func (o GetBinLogItemRemoteInfoOutput) SubBackupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) []int { return v.SubBackupIds }).(pulumi.IntArrayOutput)
}

// download link.
func (o GetBinLogItemRemoteInfoOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinLogItemRemoteInfo) string { return v.Url }).(pulumi.StringOutput)
}

type GetBinLogItemRemoteInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBinLogItemRemoteInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBinLogItemRemoteInfo)(nil)).Elem()
}

func (o GetBinLogItemRemoteInfoArrayOutput) ToGetBinLogItemRemoteInfoArrayOutput() GetBinLogItemRemoteInfoArrayOutput {
	return o
}

func (o GetBinLogItemRemoteInfoArrayOutput) ToGetBinLogItemRemoteInfoArrayOutputWithContext(ctx context.Context) GetBinLogItemRemoteInfoArrayOutput {
	return o
}

func (o GetBinLogItemRemoteInfoArrayOutput) Index(i pulumi.IntInput) GetBinLogItemRemoteInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBinLogItemRemoteInfo {
		return vs[0].([]GetBinLogItemRemoteInfo)[vs[1].(int)]
	}).(GetBinLogItemRemoteInfoOutput)
}

type GetCloneListItem struct {
	// Id of the task list corresponding to the clone task.
	CloneJobId int `pulumi:"cloneJobId"`
	// The newly spawned instance Id of the clone task.
	DstInstanceId string `pulumi:"dstInstanceId"`
	// Task end time.
	EndTime string `pulumi:"endTime"`
	// Id of the region where the cloned instance is located.
	NewRegionId int `pulumi:"newRegionId"`
	// The strategy used by the clone instance includes the following types: timepoint: specify the point-in-time rollback, backupset: specify the backup file rollback.
	RollbackStrategy string `pulumi:"rollbackStrategy"`
	// The time point when the clone instance is rolled back.
	RollbackTargetTime string `pulumi:"rollbackTargetTime"`
	// The source instance Id of the clone task.
	SrcInstanceId string `pulumi:"srcInstanceId"`
	// Id of the region where the source instance is located.
	SrcRegionId int `pulumi:"srcRegionId"`
	// Task start time.
	StartTime string `pulumi:"startTime"`
	// Task status, including the following status: initial, running, wait_complete, success, failed.
	TaskStatus string `pulumi:"taskStatus"`
}

// GetCloneListItemInput is an input type that accepts GetCloneListItemArgs and GetCloneListItemOutput values.
// You can construct a concrete instance of `GetCloneListItemInput` via:
//
//          GetCloneListItemArgs{...}
type GetCloneListItemInput interface {
	pulumi.Input

	ToGetCloneListItemOutput() GetCloneListItemOutput
	ToGetCloneListItemOutputWithContext(context.Context) GetCloneListItemOutput
}

type GetCloneListItemArgs struct {
	// Id of the task list corresponding to the clone task.
	CloneJobId pulumi.IntInput `pulumi:"cloneJobId"`
	// The newly spawned instance Id of the clone task.
	DstInstanceId pulumi.StringInput `pulumi:"dstInstanceId"`
	// Task end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Id of the region where the cloned instance is located.
	NewRegionId pulumi.IntInput `pulumi:"newRegionId"`
	// The strategy used by the clone instance includes the following types: timepoint: specify the point-in-time rollback, backupset: specify the backup file rollback.
	RollbackStrategy pulumi.StringInput `pulumi:"rollbackStrategy"`
	// The time point when the clone instance is rolled back.
	RollbackTargetTime pulumi.StringInput `pulumi:"rollbackTargetTime"`
	// The source instance Id of the clone task.
	SrcInstanceId pulumi.StringInput `pulumi:"srcInstanceId"`
	// Id of the region where the source instance is located.
	SrcRegionId pulumi.IntInput `pulumi:"srcRegionId"`
	// Task start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Task status, including the following status: initial, running, wait_complete, success, failed.
	TaskStatus pulumi.StringInput `pulumi:"taskStatus"`
}

func (GetCloneListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloneListItem)(nil)).Elem()
}

func (i GetCloneListItemArgs) ToGetCloneListItemOutput() GetCloneListItemOutput {
	return i.ToGetCloneListItemOutputWithContext(context.Background())
}

func (i GetCloneListItemArgs) ToGetCloneListItemOutputWithContext(ctx context.Context) GetCloneListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloneListItemOutput)
}

// GetCloneListItemArrayInput is an input type that accepts GetCloneListItemArray and GetCloneListItemArrayOutput values.
// You can construct a concrete instance of `GetCloneListItemArrayInput` via:
//
//          GetCloneListItemArray{ GetCloneListItemArgs{...} }
type GetCloneListItemArrayInput interface {
	pulumi.Input

	ToGetCloneListItemArrayOutput() GetCloneListItemArrayOutput
	ToGetCloneListItemArrayOutputWithContext(context.Context) GetCloneListItemArrayOutput
}

type GetCloneListItemArray []GetCloneListItemInput

func (GetCloneListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloneListItem)(nil)).Elem()
}

func (i GetCloneListItemArray) ToGetCloneListItemArrayOutput() GetCloneListItemArrayOutput {
	return i.ToGetCloneListItemArrayOutputWithContext(context.Background())
}

func (i GetCloneListItemArray) ToGetCloneListItemArrayOutputWithContext(ctx context.Context) GetCloneListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloneListItemArrayOutput)
}

type GetCloneListItemOutput struct{ *pulumi.OutputState }

func (GetCloneListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloneListItem)(nil)).Elem()
}

func (o GetCloneListItemOutput) ToGetCloneListItemOutput() GetCloneListItemOutput {
	return o
}

func (o GetCloneListItemOutput) ToGetCloneListItemOutputWithContext(ctx context.Context) GetCloneListItemOutput {
	return o
}

// Id of the task list corresponding to the clone task.
func (o GetCloneListItemOutput) CloneJobId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloneListItem) int { return v.CloneJobId }).(pulumi.IntOutput)
}

// The newly spawned instance Id of the clone task.
func (o GetCloneListItemOutput) DstInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.DstInstanceId }).(pulumi.StringOutput)
}

// Task end time.
func (o GetCloneListItemOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.EndTime }).(pulumi.StringOutput)
}

// Id of the region where the cloned instance is located.
func (o GetCloneListItemOutput) NewRegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloneListItem) int { return v.NewRegionId }).(pulumi.IntOutput)
}

// The strategy used by the clone instance includes the following types: timepoint: specify the point-in-time rollback, backupset: specify the backup file rollback.
func (o GetCloneListItemOutput) RollbackStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.RollbackStrategy }).(pulumi.StringOutput)
}

// The time point when the clone instance is rolled back.
func (o GetCloneListItemOutput) RollbackTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.RollbackTargetTime }).(pulumi.StringOutput)
}

// The source instance Id of the clone task.
func (o GetCloneListItemOutput) SrcInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.SrcInstanceId }).(pulumi.StringOutput)
}

// Id of the region where the source instance is located.
func (o GetCloneListItemOutput) SrcRegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloneListItem) int { return v.SrcRegionId }).(pulumi.IntOutput)
}

// Task start time.
func (o GetCloneListItemOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.StartTime }).(pulumi.StringOutput)
}

// Task status, including the following status: initial, running, wait_complete, success, failed.
func (o GetCloneListItemOutput) TaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloneListItem) string { return v.TaskStatus }).(pulumi.StringOutput)
}

type GetCloneListItemArrayOutput struct{ *pulumi.OutputState }

func (GetCloneListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloneListItem)(nil)).Elem()
}

func (o GetCloneListItemArrayOutput) ToGetCloneListItemArrayOutput() GetCloneListItemArrayOutput {
	return o
}

func (o GetCloneListItemArrayOutput) ToGetCloneListItemArrayOutputWithContext(ctx context.Context) GetCloneListItemArrayOutput {
	return o
}

func (o GetCloneListItemArrayOutput) Index(i pulumi.IntInput) GetCloneListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloneListItem {
		return vs[0].([]GetCloneListItem)[vs[1].(int)]
	}).(GetCloneListItemOutput)
}

type GetDefaultParamsParamList struct {
	// Param current value.
	CurrentValue string `pulumi:"currentValue"`
	// Param default value.
	Default string `pulumi:"default"`
	// Param description.
	Description string `pulumi:"description"`
	// Params available values if type of param is enum.
	EnumValues []string `pulumi:"enumValues"`
	// Param maximum value if type of param is integer.
	Max int `pulumi:"max"`
	// Param minimum value if type of param is integer.
	Min int `pulumi:"min"`
	// Param key name.
	Name string `pulumi:"name"`
	// Indicates weather the database instance reboot if param modified.
	NeedReboot int `pulumi:"needReboot"`
	// Type of param.
	ParamType string `pulumi:"paramType"`
}

// GetDefaultParamsParamListInput is an input type that accepts GetDefaultParamsParamListArgs and GetDefaultParamsParamListOutput values.
// You can construct a concrete instance of `GetDefaultParamsParamListInput` via:
//
//          GetDefaultParamsParamListArgs{...}
type GetDefaultParamsParamListInput interface {
	pulumi.Input

	ToGetDefaultParamsParamListOutput() GetDefaultParamsParamListOutput
	ToGetDefaultParamsParamListOutputWithContext(context.Context) GetDefaultParamsParamListOutput
}

type GetDefaultParamsParamListArgs struct {
	// Param current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Param default value.
	Default pulumi.StringInput `pulumi:"default"`
	// Param description.
	Description pulumi.StringInput `pulumi:"description"`
	// Params available values if type of param is enum.
	EnumValues pulumi.StringArrayInput `pulumi:"enumValues"`
	// Param maximum value if type of param is integer.
	Max pulumi.IntInput `pulumi:"max"`
	// Param minimum value if type of param is integer.
	Min pulumi.IntInput `pulumi:"min"`
	// Param key name.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates weather the database instance reboot if param modified.
	NeedReboot pulumi.IntInput `pulumi:"needReboot"`
	// Type of param.
	ParamType pulumi.StringInput `pulumi:"paramType"`
}

func (GetDefaultParamsParamListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultParamsParamList)(nil)).Elem()
}

func (i GetDefaultParamsParamListArgs) ToGetDefaultParamsParamListOutput() GetDefaultParamsParamListOutput {
	return i.ToGetDefaultParamsParamListOutputWithContext(context.Background())
}

func (i GetDefaultParamsParamListArgs) ToGetDefaultParamsParamListOutputWithContext(ctx context.Context) GetDefaultParamsParamListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultParamsParamListOutput)
}

// GetDefaultParamsParamListArrayInput is an input type that accepts GetDefaultParamsParamListArray and GetDefaultParamsParamListArrayOutput values.
// You can construct a concrete instance of `GetDefaultParamsParamListArrayInput` via:
//
//          GetDefaultParamsParamListArray{ GetDefaultParamsParamListArgs{...} }
type GetDefaultParamsParamListArrayInput interface {
	pulumi.Input

	ToGetDefaultParamsParamListArrayOutput() GetDefaultParamsParamListArrayOutput
	ToGetDefaultParamsParamListArrayOutputWithContext(context.Context) GetDefaultParamsParamListArrayOutput
}

type GetDefaultParamsParamListArray []GetDefaultParamsParamListInput

func (GetDefaultParamsParamListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultParamsParamList)(nil)).Elem()
}

func (i GetDefaultParamsParamListArray) ToGetDefaultParamsParamListArrayOutput() GetDefaultParamsParamListArrayOutput {
	return i.ToGetDefaultParamsParamListArrayOutputWithContext(context.Background())
}

func (i GetDefaultParamsParamListArray) ToGetDefaultParamsParamListArrayOutputWithContext(ctx context.Context) GetDefaultParamsParamListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultParamsParamListArrayOutput)
}

type GetDefaultParamsParamListOutput struct{ *pulumi.OutputState }

func (GetDefaultParamsParamListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultParamsParamList)(nil)).Elem()
}

func (o GetDefaultParamsParamListOutput) ToGetDefaultParamsParamListOutput() GetDefaultParamsParamListOutput {
	return o
}

func (o GetDefaultParamsParamListOutput) ToGetDefaultParamsParamListOutputWithContext(ctx context.Context) GetDefaultParamsParamListOutput {
	return o
}

// Param current value.
func (o GetDefaultParamsParamListOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Param default value.
func (o GetDefaultParamsParamListOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) string { return v.Default }).(pulumi.StringOutput)
}

// Param description.
func (o GetDefaultParamsParamListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) string { return v.Description }).(pulumi.StringOutput)
}

// Params available values if type of param is enum.
func (o GetDefaultParamsParamListOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

// Param maximum value if type of param is integer.
func (o GetDefaultParamsParamListOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) int { return v.Max }).(pulumi.IntOutput)
}

// Param minimum value if type of param is integer.
func (o GetDefaultParamsParamListOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) int { return v.Min }).(pulumi.IntOutput)
}

// Param key name.
func (o GetDefaultParamsParamListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates weather the database instance reboot if param modified.
func (o GetDefaultParamsParamListOutput) NeedReboot() pulumi.IntOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) int { return v.NeedReboot }).(pulumi.IntOutput)
}

// Type of param.
func (o GetDefaultParamsParamListOutput) ParamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultParamsParamList) string { return v.ParamType }).(pulumi.StringOutput)
}

type GetDefaultParamsParamListArrayOutput struct{ *pulumi.OutputState }

func (GetDefaultParamsParamListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultParamsParamList)(nil)).Elem()
}

func (o GetDefaultParamsParamListArrayOutput) ToGetDefaultParamsParamListArrayOutput() GetDefaultParamsParamListArrayOutput {
	return o
}

func (o GetDefaultParamsParamListArrayOutput) ToGetDefaultParamsParamListArrayOutputWithContext(ctx context.Context) GetDefaultParamsParamListArrayOutput {
	return o
}

func (o GetDefaultParamsParamListArrayOutput) Index(i pulumi.IntInput) GetDefaultParamsParamListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDefaultParamsParamList {
		return vs[0].([]GetDefaultParamsParamList)[vs[1].(int)]
	}).(GetDefaultParamsParamListOutput)
}

type GetInstanceInstanceList struct {
	// Auto renew flag. NOTES: Only supported prepay instance.
	AutoRenewFlag int `pulumi:"autoRenewFlag"`
	// Pay type of instance, valid values are `PREPAID` and `POSTPAID`.
	ChargeType string `pulumi:"chargeType"`
	// CPU count.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// The time at which a instance is created.
	CreateTime string `pulumi:"createTime"`
	// Expire date of instance. NOTES: Only supported prepay instance.
	DeadLineTime string `pulumi:"deadLineTime"`
	// Supported instance model. `HA` - high available version; `Basic` - basic version.
	DeviceType string `pulumi:"deviceType"`
	// ID list of disaster-recovery type associated with the current instance.
	DrInstanceIds []string `pulumi:"drInstanceIds"`
	// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
	EngineVersion string `pulumi:"engineVersion"`
	// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
	InitFlag int `pulumi:"initFlag"`
	// Name of mysql instance.
	InstanceName string `pulumi:"instanceName"`
	// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
	InstanceRole string `pulumi:"instanceRole"`
	// Public network domain name.
	InternetHost string `pulumi:"internetHost"`
	// Public network port.
	InternetPort int `pulumi:"internetPort"`
	// Status of public network.
	InternetStatus int `pulumi:"internetStatus"`
	// Instance IP for internal access.
	IntranetIp string `pulumi:"intranetIp"`
	// Transport layer port number for internal purpose.
	IntranetPort int `pulumi:"intranetPort"`
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// Memory size (in MB).
	MemorySize int `pulumi:"memorySize"`
	// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
	MysqlId string `pulumi:"mysqlId"`
	// It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance, `0`: prepay, `1`: postpaid.
	PayType int `pulumi:"payType"`
	// Project ID to which the current instance belongs.
	ProjectId int `pulumi:"projectId"`
	// ID list of read-only type associated with the current instance.
	RoInstanceIds []string `pulumi:"roInstanceIds"`
	// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
	SlaveSyncMode int `pulumi:"slaveSyncMode"`
	// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
	Status int `pulumi:"status"`
	// ID of subnet to which the current instance belongs.
	SubnetId string `pulumi:"subnetId"`
	// Disk capacity (in GB).
	VolumeSize int `pulumi:"volumeSize"`
	// ID of Virtual Private Cloud.
	VpcId string `pulumi:"vpcId"`
	// Information of available zone.
	Zone string `pulumi:"zone"`
}

// GetInstanceInstanceListInput is an input type that accepts GetInstanceInstanceListArgs and GetInstanceInstanceListOutput values.
// You can construct a concrete instance of `GetInstanceInstanceListInput` via:
//
//          GetInstanceInstanceListArgs{...}
type GetInstanceInstanceListInput interface {
	pulumi.Input

	ToGetInstanceInstanceListOutput() GetInstanceInstanceListOutput
	ToGetInstanceInstanceListOutputWithContext(context.Context) GetInstanceInstanceListOutput
}

type GetInstanceInstanceListArgs struct {
	// Auto renew flag. NOTES: Only supported prepay instance.
	AutoRenewFlag pulumi.IntInput `pulumi:"autoRenewFlag"`
	// Pay type of instance, valid values are `PREPAID` and `POSTPAID`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// CPU count.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// The time at which a instance is created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Expire date of instance. NOTES: Only supported prepay instance.
	DeadLineTime pulumi.StringInput `pulumi:"deadLineTime"`
	// Supported instance model. `HA` - high available version; `Basic` - basic version.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// ID list of disaster-recovery type associated with the current instance.
	DrInstanceIds pulumi.StringArrayInput `pulumi:"drInstanceIds"`
	// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
	InitFlag pulumi.IntInput `pulumi:"initFlag"`
	// Name of mysql instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
	InstanceRole pulumi.StringInput `pulumi:"instanceRole"`
	// Public network domain name.
	InternetHost pulumi.StringInput `pulumi:"internetHost"`
	// Public network port.
	InternetPort pulumi.IntInput `pulumi:"internetPort"`
	// Status of public network.
	InternetStatus pulumi.IntInput `pulumi:"internetStatus"`
	// Instance IP for internal access.
	IntranetIp pulumi.StringInput `pulumi:"intranetIp"`
	// Transport layer port number for internal purpose.
	IntranetPort pulumi.IntInput `pulumi:"intranetPort"`
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// Memory size (in MB).
	MemorySize pulumi.IntInput `pulumi:"memorySize"`
	// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
	MysqlId pulumi.StringInput `pulumi:"mysqlId"`
	// It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance, `0`: prepay, `1`: postpaid.
	PayType pulumi.IntInput `pulumi:"payType"`
	// Project ID to which the current instance belongs.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// ID list of read-only type associated with the current instance.
	RoInstanceIds pulumi.StringArrayInput `pulumi:"roInstanceIds"`
	// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
	SlaveSyncMode pulumi.IntInput `pulumi:"slaveSyncMode"`
	// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
	Status pulumi.IntInput `pulumi:"status"`
	// ID of subnet to which the current instance belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Disk capacity (in GB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// ID of Virtual Private Cloud.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Information of available zone.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceList)(nil)).Elem()
}

func (i GetInstanceInstanceListArgs) ToGetInstanceInstanceListOutput() GetInstanceInstanceListOutput {
	return i.ToGetInstanceInstanceListOutputWithContext(context.Background())
}

func (i GetInstanceInstanceListArgs) ToGetInstanceInstanceListOutputWithContext(ctx context.Context) GetInstanceInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceListOutput)
}

// GetInstanceInstanceListArrayInput is an input type that accepts GetInstanceInstanceListArray and GetInstanceInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstanceInstanceListArrayInput` via:
//
//          GetInstanceInstanceListArray{ GetInstanceInstanceListArgs{...} }
type GetInstanceInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstanceInstanceListArrayOutput() GetInstanceInstanceListArrayOutput
	ToGetInstanceInstanceListArrayOutputWithContext(context.Context) GetInstanceInstanceListArrayOutput
}

type GetInstanceInstanceListArray []GetInstanceInstanceListInput

func (GetInstanceInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceList)(nil)).Elem()
}

func (i GetInstanceInstanceListArray) ToGetInstanceInstanceListArrayOutput() GetInstanceInstanceListArrayOutput {
	return i.ToGetInstanceInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstanceInstanceListArray) ToGetInstanceInstanceListArrayOutputWithContext(ctx context.Context) GetInstanceInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceListArrayOutput)
}

type GetInstanceInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceList)(nil)).Elem()
}

func (o GetInstanceInstanceListOutput) ToGetInstanceInstanceListOutput() GetInstanceInstanceListOutput {
	return o
}

func (o GetInstanceInstanceListOutput) ToGetInstanceInstanceListOutputWithContext(ctx context.Context) GetInstanceInstanceListOutput {
	return o
}

// Auto renew flag. NOTES: Only supported prepay instance.
func (o GetInstanceInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

// Pay type of instance, valid values are `PREPAID` and `POSTPAID`.
func (o GetInstanceInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// CPU count.
func (o GetInstanceInstanceListOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The time at which a instance is created.
func (o GetInstanceInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Expire date of instance. NOTES: Only supported prepay instance.
func (o GetInstanceInstanceListOutput) DeadLineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.DeadLineTime }).(pulumi.StringOutput)
}

// Supported instance model. `HA` - high available version; `Basic` - basic version.
func (o GetInstanceInstanceListOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.DeviceType }).(pulumi.StringOutput)
}

// ID list of disaster-recovery type associated with the current instance.
func (o GetInstanceInstanceListOutput) DrInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) []string { return v.DrInstanceIds }).(pulumi.StringArrayOutput)
}

// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
func (o GetInstanceInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
func (o GetInstanceInstanceListOutput) InitFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.InitFlag }).(pulumi.IntOutput)
}

// Name of mysql instance.
func (o GetInstanceInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
func (o GetInstanceInstanceListOutput) InstanceRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.InstanceRole }).(pulumi.StringOutput)
}

// Public network domain name.
func (o GetInstanceInstanceListOutput) InternetHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.InternetHost }).(pulumi.StringOutput)
}

// Public network port.
func (o GetInstanceInstanceListOutput) InternetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.InternetPort }).(pulumi.IntOutput)
}

// Status of public network.
func (o GetInstanceInstanceListOutput) InternetStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.InternetStatus }).(pulumi.IntOutput)
}

// Instance IP for internal access.
func (o GetInstanceInstanceListOutput) IntranetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.IntranetIp }).(pulumi.StringOutput)
}

// Transport layer port number for internal purpose.
func (o GetInstanceInstanceListOutput) IntranetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.IntranetPort }).(pulumi.IntOutput)
}

// Indicates the master instance ID of recovery instances.
func (o GetInstanceInstanceListOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// Memory size (in MB).
func (o GetInstanceInstanceListOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.MemorySize }).(pulumi.IntOutput)
}

// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
func (o GetInstanceInstanceListOutput) MysqlId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.MysqlId }).(pulumi.StringOutput)
}

// It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance, `0`: prepay, `1`: postpaid.
func (o GetInstanceInstanceListOutput) PayType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.PayType }).(pulumi.IntOutput)
}

// Project ID to which the current instance belongs.
func (o GetInstanceInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// ID list of read-only type associated with the current instance.
func (o GetInstanceInstanceListOutput) RoInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) []string { return v.RoInstanceIds }).(pulumi.StringArrayOutput)
}

// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
func (o GetInstanceInstanceListOutput) SlaveSyncMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.SlaveSyncMode }).(pulumi.IntOutput)
}

// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
func (o GetInstanceInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// ID of subnet to which the current instance belongs.
func (o GetInstanceInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Disk capacity (in GB).
func (o GetInstanceInstanceListOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// ID of Virtual Private Cloud.
func (o GetInstanceInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Information of available zone.
func (o GetInstanceInstanceListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceList) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceList)(nil)).Elem()
}

func (o GetInstanceInstanceListArrayOutput) ToGetInstanceInstanceListArrayOutput() GetInstanceInstanceListArrayOutput {
	return o
}

func (o GetInstanceInstanceListArrayOutput) ToGetInstanceInstanceListArrayOutputWithContext(ctx context.Context) GetInstanceInstanceListArrayOutput {
	return o
}

func (o GetInstanceInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstanceInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceInstanceList {
		return vs[0].([]GetInstanceInstanceList)[vs[1].(int)]
	}).(GetInstanceInstanceListOutput)
}

type GetParameterListParameterList struct {
	// Current value.
	CurrentValue string `pulumi:"currentValue"`
	// Default value.
	DefaultValue string `pulumi:"defaultValue"`
	// Parameter specification description.
	Description string `pulumi:"description"`
	// Enumerated value.
	EnumValues []string `pulumi:"enumValues"`
	// Maximum value for the parameter.
	Max int `pulumi:"max"`
	// Minimum value for the parameter.
	Min int `pulumi:"min"`
	// Indicates whether reboot is needed to enable the new parameters.
	NeedReboot int `pulumi:"needReboot"`
	// Parameter name.
	ParameterName string `pulumi:"parameterName"`
	// Parameter type.
	ParameterType string `pulumi:"parameterType"`
}

// GetParameterListParameterListInput is an input type that accepts GetParameterListParameterListArgs and GetParameterListParameterListOutput values.
// You can construct a concrete instance of `GetParameterListParameterListInput` via:
//
//          GetParameterListParameterListArgs{...}
type GetParameterListParameterListInput interface {
	pulumi.Input

	ToGetParameterListParameterListOutput() GetParameterListParameterListOutput
	ToGetParameterListParameterListOutputWithContext(context.Context) GetParameterListParameterListOutput
}

type GetParameterListParameterListArgs struct {
	// Current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Parameter specification description.
	Description pulumi.StringInput `pulumi:"description"`
	// Enumerated value.
	EnumValues pulumi.StringArrayInput `pulumi:"enumValues"`
	// Maximum value for the parameter.
	Max pulumi.IntInput `pulumi:"max"`
	// Minimum value for the parameter.
	Min pulumi.IntInput `pulumi:"min"`
	// Indicates whether reboot is needed to enable the new parameters.
	NeedReboot pulumi.IntInput `pulumi:"needReboot"`
	// Parameter name.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter type.
	ParameterType pulumi.StringInput `pulumi:"parameterType"`
}

func (GetParameterListParameterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterListParameterList)(nil)).Elem()
}

func (i GetParameterListParameterListArgs) ToGetParameterListParameterListOutput() GetParameterListParameterListOutput {
	return i.ToGetParameterListParameterListOutputWithContext(context.Background())
}

func (i GetParameterListParameterListArgs) ToGetParameterListParameterListOutputWithContext(ctx context.Context) GetParameterListParameterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterListParameterListOutput)
}

// GetParameterListParameterListArrayInput is an input type that accepts GetParameterListParameterListArray and GetParameterListParameterListArrayOutput values.
// You can construct a concrete instance of `GetParameterListParameterListArrayInput` via:
//
//          GetParameterListParameterListArray{ GetParameterListParameterListArgs{...} }
type GetParameterListParameterListArrayInput interface {
	pulumi.Input

	ToGetParameterListParameterListArrayOutput() GetParameterListParameterListArrayOutput
	ToGetParameterListParameterListArrayOutputWithContext(context.Context) GetParameterListParameterListArrayOutput
}

type GetParameterListParameterListArray []GetParameterListParameterListInput

func (GetParameterListParameterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterListParameterList)(nil)).Elem()
}

func (i GetParameterListParameterListArray) ToGetParameterListParameterListArrayOutput() GetParameterListParameterListArrayOutput {
	return i.ToGetParameterListParameterListArrayOutputWithContext(context.Background())
}

func (i GetParameterListParameterListArray) ToGetParameterListParameterListArrayOutputWithContext(ctx context.Context) GetParameterListParameterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterListParameterListArrayOutput)
}

type GetParameterListParameterListOutput struct{ *pulumi.OutputState }

func (GetParameterListParameterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterListParameterList)(nil)).Elem()
}

func (o GetParameterListParameterListOutput) ToGetParameterListParameterListOutput() GetParameterListParameterListOutput {
	return o
}

func (o GetParameterListParameterListOutput) ToGetParameterListParameterListOutputWithContext(ctx context.Context) GetParameterListParameterListOutput {
	return o
}

// Current value.
func (o GetParameterListParameterListOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterListParameterList) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Default value.
func (o GetParameterListParameterListOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterListParameterList) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Parameter specification description.
func (o GetParameterListParameterListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterListParameterList) string { return v.Description }).(pulumi.StringOutput)
}

// Enumerated value.
func (o GetParameterListParameterListOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetParameterListParameterList) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

// Maximum value for the parameter.
func (o GetParameterListParameterListOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetParameterListParameterList) int { return v.Max }).(pulumi.IntOutput)
}

// Minimum value for the parameter.
func (o GetParameterListParameterListOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetParameterListParameterList) int { return v.Min }).(pulumi.IntOutput)
}

// Indicates whether reboot is needed to enable the new parameters.
func (o GetParameterListParameterListOutput) NeedReboot() pulumi.IntOutput {
	return o.ApplyT(func(v GetParameterListParameterList) int { return v.NeedReboot }).(pulumi.IntOutput)
}

// Parameter name.
func (o GetParameterListParameterListOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterListParameterList) string { return v.ParameterName }).(pulumi.StringOutput)
}

// Parameter type.
func (o GetParameterListParameterListOutput) ParameterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterListParameterList) string { return v.ParameterType }).(pulumi.StringOutput)
}

type GetParameterListParameterListArrayOutput struct{ *pulumi.OutputState }

func (GetParameterListParameterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterListParameterList)(nil)).Elem()
}

func (o GetParameterListParameterListArrayOutput) ToGetParameterListParameterListArrayOutput() GetParameterListParameterListArrayOutput {
	return o
}

func (o GetParameterListParameterListArrayOutput) ToGetParameterListParameterListArrayOutputWithContext(ctx context.Context) GetParameterListParameterListArrayOutput {
	return o
}

func (o GetParameterListParameterListArrayOutput) Index(i pulumi.IntInput) GetParameterListParameterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetParameterListParameterList {
		return vs[0].([]GetParameterListParameterList)[vs[1].(int)]
	}).(GetParameterListParameterListOutput)
}

type GetZoneConfigList struct {
	// Information about available zones of recovery.
	DisasterRecoveryZones []string `pulumi:"disasterRecoveryZones"`
	// The version number of the database engine to use. Supported versions include `5.5`/`5.6`/`5.7`.
	EngineVersions []string `pulumi:"engineVersions"`
	// Zone information about first slave instance.
	FirstSlaveZones        []string `pulumi:"firstSlaveZones"`
	HourInstanceSaleMaxNum int      `pulumi:"hourInstanceSaleMaxNum"`
	// Indicates whether the current DC is the default DC for the region. Possible returned values: `0` - no; `1` - yes.
	IsDefault int `pulumi:"isDefault"`
	// Indicates whether recovery is supported: `0` - No; `1` - Yes.
	IsSupportDisasterRecovery int `pulumi:"isSupportDisasterRecovery"`
	// Indicates whether VPC is supported: `0` - No; `1` - Yes.
	IsSupportVpc int `pulumi:"isSupportVpc"`
	// The name of available zone which is equal to a specific datacenter.
	Name     string `pulumi:"name"`
	PayTypes []int  `pulumi:"payTypes"`
	// Zone information about remote ro instance.
	RemoteRoZones []string `pulumi:"remoteRoZones"`
	// Zone information about second slave instance.
	SecondSlaveZones []string `pulumi:"secondSlaveZones"`
	// A list of supported instance types for sell:
	Sells []GetZoneConfigListSell `pulumi:"sells"`
	// Availability zone deployment method. Available values: `0` - Single availability zone; `1` - Multiple availability zones.
	SlaveDeployModes []int `pulumi:"slaveDeployModes"`
	// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
	SupportSlaveSyncModes []int `pulumi:"supportSlaveSyncModes"`
}

// GetZoneConfigListInput is an input type that accepts GetZoneConfigListArgs and GetZoneConfigListOutput values.
// You can construct a concrete instance of `GetZoneConfigListInput` via:
//
//          GetZoneConfigListArgs{...}
type GetZoneConfigListInput interface {
	pulumi.Input

	ToGetZoneConfigListOutput() GetZoneConfigListOutput
	ToGetZoneConfigListOutputWithContext(context.Context) GetZoneConfigListOutput
}

type GetZoneConfigListArgs struct {
	// Information about available zones of recovery.
	DisasterRecoveryZones pulumi.StringArrayInput `pulumi:"disasterRecoveryZones"`
	// The version number of the database engine to use. Supported versions include `5.5`/`5.6`/`5.7`.
	EngineVersions pulumi.StringArrayInput `pulumi:"engineVersions"`
	// Zone information about first slave instance.
	FirstSlaveZones        pulumi.StringArrayInput `pulumi:"firstSlaveZones"`
	HourInstanceSaleMaxNum pulumi.IntInput         `pulumi:"hourInstanceSaleMaxNum"`
	// Indicates whether the current DC is the default DC for the region. Possible returned values: `0` - no; `1` - yes.
	IsDefault pulumi.IntInput `pulumi:"isDefault"`
	// Indicates whether recovery is supported: `0` - No; `1` - Yes.
	IsSupportDisasterRecovery pulumi.IntInput `pulumi:"isSupportDisasterRecovery"`
	// Indicates whether VPC is supported: `0` - No; `1` - Yes.
	IsSupportVpc pulumi.IntInput `pulumi:"isSupportVpc"`
	// The name of available zone which is equal to a specific datacenter.
	Name     pulumi.StringInput   `pulumi:"name"`
	PayTypes pulumi.IntArrayInput `pulumi:"payTypes"`
	// Zone information about remote ro instance.
	RemoteRoZones pulumi.StringArrayInput `pulumi:"remoteRoZones"`
	// Zone information about second slave instance.
	SecondSlaveZones pulumi.StringArrayInput `pulumi:"secondSlaveZones"`
	// A list of supported instance types for sell:
	Sells GetZoneConfigListSellArrayInput `pulumi:"sells"`
	// Availability zone deployment method. Available values: `0` - Single availability zone; `1` - Multiple availability zones.
	SlaveDeployModes pulumi.IntArrayInput `pulumi:"slaveDeployModes"`
	// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
	SupportSlaveSyncModes pulumi.IntArrayInput `pulumi:"supportSlaveSyncModes"`
}

func (GetZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return i.ToGetZoneConfigListOutputWithContext(context.Background())
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListOutput)
}

// GetZoneConfigListArrayInput is an input type that accepts GetZoneConfigListArray and GetZoneConfigListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigListArrayInput` via:
//
//          GetZoneConfigListArray{ GetZoneConfigListArgs{...} }
type GetZoneConfigListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput
	ToGetZoneConfigListArrayOutputWithContext(context.Context) GetZoneConfigListArrayOutput
}

type GetZoneConfigListArray []GetZoneConfigListInput

func (GetZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return i.ToGetZoneConfigListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListArrayOutput)
}

type GetZoneConfigListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return o
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return o
}

// Information about available zones of recovery.
func (o GetZoneConfigListOutput) DisasterRecoveryZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []string { return v.DisasterRecoveryZones }).(pulumi.StringArrayOutput)
}

// The version number of the database engine to use. Supported versions include `5.5`/`5.6`/`5.7`.
func (o GetZoneConfigListOutput) EngineVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []string { return v.EngineVersions }).(pulumi.StringArrayOutput)
}

// Zone information about first slave instance.
func (o GetZoneConfigListOutput) FirstSlaveZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []string { return v.FirstSlaveZones }).(pulumi.StringArrayOutput)
}

func (o GetZoneConfigListOutput) HourInstanceSaleMaxNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.HourInstanceSaleMaxNum }).(pulumi.IntOutput)
}

// Indicates whether the current DC is the default DC for the region. Possible returned values: `0` - no; `1` - yes.
func (o GetZoneConfigListOutput) IsDefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.IsDefault }).(pulumi.IntOutput)
}

// Indicates whether recovery is supported: `0` - No; `1` - Yes.
func (o GetZoneConfigListOutput) IsSupportDisasterRecovery() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.IsSupportDisasterRecovery }).(pulumi.IntOutput)
}

// Indicates whether VPC is supported: `0` - No; `1` - Yes.
func (o GetZoneConfigListOutput) IsSupportVpc() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.IsSupportVpc }).(pulumi.IntOutput)
}

// The name of available zone which is equal to a specific datacenter.
func (o GetZoneConfigListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZoneConfigListOutput) PayTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.PayTypes }).(pulumi.IntArrayOutput)
}

// Zone information about remote ro instance.
func (o GetZoneConfigListOutput) RemoteRoZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []string { return v.RemoteRoZones }).(pulumi.StringArrayOutput)
}

// Zone information about second slave instance.
func (o GetZoneConfigListOutput) SecondSlaveZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []string { return v.SecondSlaveZones }).(pulumi.StringArrayOutput)
}

// A list of supported instance types for sell:
func (o GetZoneConfigListOutput) Sells() GetZoneConfigListSellArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []GetZoneConfigListSell { return v.Sells }).(GetZoneConfigListSellArrayOutput)
}

// Availability zone deployment method. Available values: `0` - Single availability zone; `1` - Multiple availability zones.
func (o GetZoneConfigListOutput) SlaveDeployModes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.SlaveDeployModes }).(pulumi.IntArrayOutput)
}

// Data replication mode. `0` - Async replication; `1` - Semisync replication; `2` - Strongsync replication.
func (o GetZoneConfigListOutput) SupportSlaveSyncModes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.SupportSlaveSyncModes }).(pulumi.IntArrayOutput)
}

type GetZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigList {
		return vs[0].([]GetZoneConfigList)[vs[1].(int)]
	}).(GetZoneConfigListOutput)
}

type GetZoneConfigListSell struct {
	CdbType string `pulumi:"cdbType"`
	// Maximum disk size (in GB).
	MaxVolumeSize int `pulumi:"maxVolumeSize"`
	// Memory size (in MB).
	MemSize int `pulumi:"memSize"`
	// Minimum disk size (in GB).
	MinVolumeSize int `pulumi:"minVolumeSize"`
	// Queries per second.
	Qps int `pulumi:"qps"`
	// Disk increment (in GB).
	VolumeStep int `pulumi:"volumeStep"`
}

// GetZoneConfigListSellInput is an input type that accepts GetZoneConfigListSellArgs and GetZoneConfigListSellOutput values.
// You can construct a concrete instance of `GetZoneConfigListSellInput` via:
//
//          GetZoneConfigListSellArgs{...}
type GetZoneConfigListSellInput interface {
	pulumi.Input

	ToGetZoneConfigListSellOutput() GetZoneConfigListSellOutput
	ToGetZoneConfigListSellOutputWithContext(context.Context) GetZoneConfigListSellOutput
}

type GetZoneConfigListSellArgs struct {
	CdbType pulumi.StringInput `pulumi:"cdbType"`
	// Maximum disk size (in GB).
	MaxVolumeSize pulumi.IntInput `pulumi:"maxVolumeSize"`
	// Memory size (in MB).
	MemSize pulumi.IntInput `pulumi:"memSize"`
	// Minimum disk size (in GB).
	MinVolumeSize pulumi.IntInput `pulumi:"minVolumeSize"`
	// Queries per second.
	Qps pulumi.IntInput `pulumi:"qps"`
	// Disk increment (in GB).
	VolumeStep pulumi.IntInput `pulumi:"volumeStep"`
}

func (GetZoneConfigListSellArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigListSell)(nil)).Elem()
}

func (i GetZoneConfigListSellArgs) ToGetZoneConfigListSellOutput() GetZoneConfigListSellOutput {
	return i.ToGetZoneConfigListSellOutputWithContext(context.Background())
}

func (i GetZoneConfigListSellArgs) ToGetZoneConfigListSellOutputWithContext(ctx context.Context) GetZoneConfigListSellOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListSellOutput)
}

// GetZoneConfigListSellArrayInput is an input type that accepts GetZoneConfigListSellArray and GetZoneConfigListSellArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigListSellArrayInput` via:
//
//          GetZoneConfigListSellArray{ GetZoneConfigListSellArgs{...} }
type GetZoneConfigListSellArrayInput interface {
	pulumi.Input

	ToGetZoneConfigListSellArrayOutput() GetZoneConfigListSellArrayOutput
	ToGetZoneConfigListSellArrayOutputWithContext(context.Context) GetZoneConfigListSellArrayOutput
}

type GetZoneConfigListSellArray []GetZoneConfigListSellInput

func (GetZoneConfigListSellArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigListSell)(nil)).Elem()
}

func (i GetZoneConfigListSellArray) ToGetZoneConfigListSellArrayOutput() GetZoneConfigListSellArrayOutput {
	return i.ToGetZoneConfigListSellArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigListSellArray) ToGetZoneConfigListSellArrayOutputWithContext(ctx context.Context) GetZoneConfigListSellArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListSellArrayOutput)
}

type GetZoneConfigListSellOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListSellOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigListSell)(nil)).Elem()
}

func (o GetZoneConfigListSellOutput) ToGetZoneConfigListSellOutput() GetZoneConfigListSellOutput {
	return o
}

func (o GetZoneConfigListSellOutput) ToGetZoneConfigListSellOutputWithContext(ctx context.Context) GetZoneConfigListSellOutput {
	return o
}

func (o GetZoneConfigListSellOutput) CdbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) string { return v.CdbType }).(pulumi.StringOutput)
}

// Maximum disk size (in GB).
func (o GetZoneConfigListSellOutput) MaxVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) int { return v.MaxVolumeSize }).(pulumi.IntOutput)
}

// Memory size (in MB).
func (o GetZoneConfigListSellOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) int { return v.MemSize }).(pulumi.IntOutput)
}

// Minimum disk size (in GB).
func (o GetZoneConfigListSellOutput) MinVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) int { return v.MinVolumeSize }).(pulumi.IntOutput)
}

// Queries per second.
func (o GetZoneConfigListSellOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) int { return v.Qps }).(pulumi.IntOutput)
}

// Disk increment (in GB).
func (o GetZoneConfigListSellOutput) VolumeStep() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigListSell) int { return v.VolumeStep }).(pulumi.IntOutput)
}

type GetZoneConfigListSellArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListSellArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigListSell)(nil)).Elem()
}

func (o GetZoneConfigListSellArrayOutput) ToGetZoneConfigListSellArrayOutput() GetZoneConfigListSellArrayOutput {
	return o
}

func (o GetZoneConfigListSellArrayOutput) ToGetZoneConfigListSellArrayOutputWithContext(ctx context.Context) GetZoneConfigListSellArrayOutput {
	return o
}

func (o GetZoneConfigListSellArrayOutput) Index(i pulumi.IntInput) GetZoneConfigListSellOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigListSell {
		return vs[0].([]GetZoneConfigListSell)[vs[1].(int)]
	}).(GetZoneConfigListSellOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogFileFilterInput)(nil)).Elem(), AuditLogFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogFileFilterPtrInput)(nil)).Elem(), AuditLogFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParamTemplateParamListInput)(nil)).Elem(), ParamTemplateParamListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParamTemplateParamListArrayInput)(nil)).Elem(), ParamTemplateParamListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeColumnInput)(nil)).Elem(), PrivilegeColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeColumnArrayInput)(nil)).Elem(), PrivilegeColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeDatabaseInput)(nil)).Elem(), PrivilegeDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeDatabaseArrayInput)(nil)).Elem(), PrivilegeDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeTableInput)(nil)).Elem(), PrivilegeTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegeTableArrayInput)(nil)).Elem(), PrivilegeTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupListListInput)(nil)).Elem(), GetBackupListListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupListListArrayInput)(nil)).Elem(), GetBackupListListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupSummariesItemInput)(nil)).Elem(), GetBackupSummariesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupSummariesItemArrayInput)(nil)).Elem(), GetBackupSummariesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBinLogItemInput)(nil)).Elem(), GetBinLogItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBinLogItemArrayInput)(nil)).Elem(), GetBinLogItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBinLogItemRemoteInfoInput)(nil)).Elem(), GetBinLogItemRemoteInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBinLogItemRemoteInfoArrayInput)(nil)).Elem(), GetBinLogItemRemoteInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloneListItemInput)(nil)).Elem(), GetCloneListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloneListItemArrayInput)(nil)).Elem(), GetCloneListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultParamsParamListInput)(nil)).Elem(), GetDefaultParamsParamListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultParamsParamListArrayInput)(nil)).Elem(), GetDefaultParamsParamListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceInstanceListInput)(nil)).Elem(), GetInstanceInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceInstanceListArrayInput)(nil)).Elem(), GetInstanceInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterListParameterListInput)(nil)).Elem(), GetParameterListParameterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterListParameterListArrayInput)(nil)).Elem(), GetParameterListParameterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListInput)(nil)).Elem(), GetZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListArrayInput)(nil)).Elem(), GetZoneConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListSellInput)(nil)).Elem(), GetZoneConfigListSellArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListSellArrayInput)(nil)).Elem(), GetZoneConfigListSellArray{})
	pulumi.RegisterOutputType(AuditLogFileFilterOutput{})
	pulumi.RegisterOutputType(AuditLogFileFilterPtrOutput{})
	pulumi.RegisterOutputType(ParamTemplateParamListOutput{})
	pulumi.RegisterOutputType(ParamTemplateParamListArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeColumnOutput{})
	pulumi.RegisterOutputType(PrivilegeColumnArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeDatabaseOutput{})
	pulumi.RegisterOutputType(PrivilegeDatabaseArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeTableOutput{})
	pulumi.RegisterOutputType(PrivilegeTableArrayOutput{})
	pulumi.RegisterOutputType(GetBackupListListOutput{})
	pulumi.RegisterOutputType(GetBackupListListArrayOutput{})
	pulumi.RegisterOutputType(GetBackupSummariesItemOutput{})
	pulumi.RegisterOutputType(GetBackupSummariesItemArrayOutput{})
	pulumi.RegisterOutputType(GetBinLogItemOutput{})
	pulumi.RegisterOutputType(GetBinLogItemArrayOutput{})
	pulumi.RegisterOutputType(GetBinLogItemRemoteInfoOutput{})
	pulumi.RegisterOutputType(GetBinLogItemRemoteInfoArrayOutput{})
	pulumi.RegisterOutputType(GetCloneListItemOutput{})
	pulumi.RegisterOutputType(GetCloneListItemArrayOutput{})
	pulumi.RegisterOutputType(GetDefaultParamsParamListOutput{})
	pulumi.RegisterOutputType(GetDefaultParamsParamListArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetParameterListParameterListOutput{})
	pulumi.RegisterOutputType(GetParameterListParameterListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListSellOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListSellArrayOutput{})
}
