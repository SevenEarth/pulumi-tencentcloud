// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func BackupList(ctx *pulumi.Context, args *BackupListArgs, opts ...pulumi.InvokeOption) (*BackupListResult, error) {
	var rv BackupListResult
	err := ctx.Invoke("tencentcloud:Mysql/backupList:BackupList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking BackupList.
type BackupListArgs struct {
	MaxNumber        *int    `pulumi:"maxNumber"`
	MysqlId          string  `pulumi:"mysqlId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by BackupList.
type BackupListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string           `pulumi:"id"`
	Lists            []BackupListList `pulumi:"lists"`
	MaxNumber        *int             `pulumi:"maxNumber"`
	MysqlId          string           `pulumi:"mysqlId"`
	ResultOutputFile *string          `pulumi:"resultOutputFile"`
}

func BackupListOutput(ctx *pulumi.Context, args BackupListOutputArgs, opts ...pulumi.InvokeOption) BackupListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BackupListResult, error) {
			args := v.(BackupListArgs)
			r, err := BackupList(ctx, &args, opts...)
			var s BackupListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BackupListResultOutput)
}

// A collection of arguments for invoking BackupList.
type BackupListOutputArgs struct {
	MaxNumber        pulumi.IntPtrInput    `pulumi:"maxNumber"`
	MysqlId          pulumi.StringInput    `pulumi:"mysqlId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (BackupListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupListArgs)(nil)).Elem()
}

// A collection of values returned by BackupList.
type BackupListResultOutput struct{ *pulumi.OutputState }

func (BackupListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupListResult)(nil)).Elem()
}

func (o BackupListResultOutput) ToBackupListResultOutput() BackupListResultOutput {
	return o
}

func (o BackupListResultOutput) ToBackupListResultOutputWithContext(ctx context.Context) BackupListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o BackupListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o BackupListResultOutput) Lists() BackupListListArrayOutput {
	return o.ApplyT(func(v BackupListResult) []BackupListList { return v.Lists }).(BackupListListArrayOutput)
}

func (o BackupListResultOutput) MaxNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupListResult) *int { return v.MaxNumber }).(pulumi.IntPtrOutput)
}

func (o BackupListResultOutput) MysqlId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupListResult) string { return v.MysqlId }).(pulumi.StringOutput)
}

func (o BackupListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupListResultOutput{})
}
