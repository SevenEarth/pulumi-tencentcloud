// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func CCHttpsPolicies(ctx *pulumi.Context, args *CCHttpsPoliciesArgs, opts ...pulumi.InvokeOption) (*CCHttpsPoliciesResult, error) {
	var rv CCHttpsPoliciesResult
	err := ctx.Invoke("tencentcloud:Dayu/cCHttpsPolicies:CCHttpsPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking CCHttpsPolicies.
type CCHttpsPoliciesArgs struct {
	Name             *string `pulumi:"name"`
	PolicyId         *string `pulumi:"policyId"`
	ResourceId       string  `pulumi:"resourceId"`
	ResourceType     string  `pulumi:"resourceType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by CCHttpsPolicies.
type CCHttpsPoliciesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	Lists            []CCHttpsPoliciesList `pulumi:"lists"`
	Name             *string               `pulumi:"name"`
	PolicyId         *string               `pulumi:"policyId"`
	ResourceId       string                `pulumi:"resourceId"`
	ResourceType     string                `pulumi:"resourceType"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
}

func CCHttpsPoliciesOutput(ctx *pulumi.Context, args CCHttpsPoliciesOutputArgs, opts ...pulumi.InvokeOption) CCHttpsPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (CCHttpsPoliciesResult, error) {
			args := v.(CCHttpsPoliciesArgs)
			r, err := CCHttpsPolicies(ctx, &args, opts...)
			var s CCHttpsPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(CCHttpsPoliciesResultOutput)
}

// A collection of arguments for invoking CCHttpsPolicies.
type CCHttpsPoliciesOutputArgs struct {
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PolicyId         pulumi.StringPtrInput `pulumi:"policyId"`
	ResourceId       pulumi.StringInput    `pulumi:"resourceId"`
	ResourceType     pulumi.StringInput    `pulumi:"resourceType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (CCHttpsPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by CCHttpsPolicies.
type CCHttpsPoliciesResultOutput struct{ *pulumi.OutputState }

func (CCHttpsPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesResult)(nil)).Elem()
}

func (o CCHttpsPoliciesResultOutput) ToCCHttpsPoliciesResultOutput() CCHttpsPoliciesResultOutput {
	return o
}

func (o CCHttpsPoliciesResultOutput) ToCCHttpsPoliciesResultOutputWithContext(ctx context.Context) CCHttpsPoliciesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o CCHttpsPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesResultOutput) Lists() CCHttpsPoliciesListArrayOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) []CCHttpsPoliciesList { return v.Lists }).(CCHttpsPoliciesListArrayOutput)
}

func (o CCHttpsPoliciesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CCHttpsPoliciesResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

func (o CCHttpsPoliciesResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpsPoliciesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CCHttpsPoliciesResultOutput{})
}
