// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func DdosPolicyCases(ctx *pulumi.Context, args *DdosPolicyCasesArgs, opts ...pulumi.InvokeOption) (*DdosPolicyCasesResult, error) {
	var rv DdosPolicyCasesResult
	err := ctx.Invoke("tencentcloud:Dayu/ddosPolicyCases:DdosPolicyCases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking DdosPolicyCases.
type DdosPolicyCasesArgs struct {
	ResourceType     string  `pulumi:"resourceType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SceneId          string  `pulumi:"sceneId"`
}

// A collection of values returned by DdosPolicyCases.
type DdosPolicyCasesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	Lists            []DdosPolicyCasesList `pulumi:"lists"`
	ResourceType     string                `pulumi:"resourceType"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
	SceneId          string                `pulumi:"sceneId"`
}

func DdosPolicyCasesOutput(ctx *pulumi.Context, args DdosPolicyCasesOutputArgs, opts ...pulumi.InvokeOption) DdosPolicyCasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (DdosPolicyCasesResult, error) {
			args := v.(DdosPolicyCasesArgs)
			r, err := DdosPolicyCases(ctx, &args, opts...)
			var s DdosPolicyCasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(DdosPolicyCasesResultOutput)
}

// A collection of arguments for invoking DdosPolicyCases.
type DdosPolicyCasesOutputArgs struct {
	ResourceType     pulumi.StringInput    `pulumi:"resourceType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SceneId          pulumi.StringInput    `pulumi:"sceneId"`
}

func (DdosPolicyCasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyCasesArgs)(nil)).Elem()
}

// A collection of values returned by DdosPolicyCases.
type DdosPolicyCasesResultOutput struct{ *pulumi.OutputState }

func (DdosPolicyCasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyCasesResult)(nil)).Elem()
}

func (o DdosPolicyCasesResultOutput) ToDdosPolicyCasesResultOutput() DdosPolicyCasesResultOutput {
	return o
}

func (o DdosPolicyCasesResultOutput) ToDdosPolicyCasesResultOutputWithContext(ctx context.Context) DdosPolicyCasesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o DdosPolicyCasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesResultOutput) Lists() DdosPolicyCasesListArrayOutput {
	return o.ApplyT(func(v DdosPolicyCasesResult) []DdosPolicyCasesList { return v.Lists }).(DdosPolicyCasesListArrayOutput)
}

func (o DdosPolicyCasesResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyCasesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyCasesResultOutput) SceneId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesResult) string { return v.SceneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DdosPolicyCasesResultOutput{})
}
