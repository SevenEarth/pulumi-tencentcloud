// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CCHttpPoliciesList struct {
	Action       string                       `pulumi:"action"`
	CreateTime   string                       `pulumi:"createTime"`
	Frequency    int                          `pulumi:"frequency"`
	IpLists      []string                     `pulumi:"ipLists"`
	Name         string                       `pulumi:"name"`
	PolicyId     string                       `pulumi:"policyId"`
	ResourceId   string                       `pulumi:"resourceId"`
	ResourceType string                       `pulumi:"resourceType"`
	RuleLists    []CCHttpPoliciesListRuleList `pulumi:"ruleLists"`
	Smode        string                       `pulumi:"smode"`
	Switch       bool                         `pulumi:"switch"`
}

// CCHttpPoliciesListInput is an input type that accepts CCHttpPoliciesListArgs and CCHttpPoliciesListOutput values.
// You can construct a concrete instance of `CCHttpPoliciesListInput` via:
//
//          CCHttpPoliciesListArgs{...}
type CCHttpPoliciesListInput interface {
	pulumi.Input

	ToCCHttpPoliciesListOutput() CCHttpPoliciesListOutput
	ToCCHttpPoliciesListOutputWithContext(context.Context) CCHttpPoliciesListOutput
}

type CCHttpPoliciesListArgs struct {
	Action       pulumi.StringInput                   `pulumi:"action"`
	CreateTime   pulumi.StringInput                   `pulumi:"createTime"`
	Frequency    pulumi.IntInput                      `pulumi:"frequency"`
	IpLists      pulumi.StringArrayInput              `pulumi:"ipLists"`
	Name         pulumi.StringInput                   `pulumi:"name"`
	PolicyId     pulumi.StringInput                   `pulumi:"policyId"`
	ResourceId   pulumi.StringInput                   `pulumi:"resourceId"`
	ResourceType pulumi.StringInput                   `pulumi:"resourceType"`
	RuleLists    CCHttpPoliciesListRuleListArrayInput `pulumi:"ruleLists"`
	Smode        pulumi.StringInput                   `pulumi:"smode"`
	Switch       pulumi.BoolInput                     `pulumi:"switch"`
}

func (CCHttpPoliciesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPoliciesList)(nil)).Elem()
}

func (i CCHttpPoliciesListArgs) ToCCHttpPoliciesListOutput() CCHttpPoliciesListOutput {
	return i.ToCCHttpPoliciesListOutputWithContext(context.Background())
}

func (i CCHttpPoliciesListArgs) ToCCHttpPoliciesListOutputWithContext(ctx context.Context) CCHttpPoliciesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPoliciesListOutput)
}

// CCHttpPoliciesListArrayInput is an input type that accepts CCHttpPoliciesListArray and CCHttpPoliciesListArrayOutput values.
// You can construct a concrete instance of `CCHttpPoliciesListArrayInput` via:
//
//          CCHttpPoliciesListArray{ CCHttpPoliciesListArgs{...} }
type CCHttpPoliciesListArrayInput interface {
	pulumi.Input

	ToCCHttpPoliciesListArrayOutput() CCHttpPoliciesListArrayOutput
	ToCCHttpPoliciesListArrayOutputWithContext(context.Context) CCHttpPoliciesListArrayOutput
}

type CCHttpPoliciesListArray []CCHttpPoliciesListInput

func (CCHttpPoliciesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPoliciesList)(nil)).Elem()
}

func (i CCHttpPoliciesListArray) ToCCHttpPoliciesListArrayOutput() CCHttpPoliciesListArrayOutput {
	return i.ToCCHttpPoliciesListArrayOutputWithContext(context.Background())
}

func (i CCHttpPoliciesListArray) ToCCHttpPoliciesListArrayOutputWithContext(ctx context.Context) CCHttpPoliciesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPoliciesListArrayOutput)
}

type CCHttpPoliciesListOutput struct{ *pulumi.OutputState }

func (CCHttpPoliciesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPoliciesList)(nil)).Elem()
}

func (o CCHttpPoliciesListOutput) ToCCHttpPoliciesListOutput() CCHttpPoliciesListOutput {
	return o
}

func (o CCHttpPoliciesListOutput) ToCCHttpPoliciesListOutputWithContext(ctx context.Context) CCHttpPoliciesListOutput {
	return o
}

func (o CCHttpPoliciesListOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.Action }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) int { return v.Frequency }).(pulumi.IntOutput)
}

func (o CCHttpPoliciesListOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

func (o CCHttpPoliciesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) RuleLists() CCHttpPoliciesListRuleListArrayOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) []CCHttpPoliciesListRuleList { return v.RuleLists }).(CCHttpPoliciesListRuleListArrayOutput)
}

func (o CCHttpPoliciesListOutput) Smode() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) string { return v.Smode }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListOutput) Switch() pulumi.BoolOutput {
	return o.ApplyT(func(v CCHttpPoliciesList) bool { return v.Switch }).(pulumi.BoolOutput)
}

type CCHttpPoliciesListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpPoliciesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPoliciesList)(nil)).Elem()
}

func (o CCHttpPoliciesListArrayOutput) ToCCHttpPoliciesListArrayOutput() CCHttpPoliciesListArrayOutput {
	return o
}

func (o CCHttpPoliciesListArrayOutput) ToCCHttpPoliciesListArrayOutputWithContext(ctx context.Context) CCHttpPoliciesListArrayOutput {
	return o
}

func (o CCHttpPoliciesListArrayOutput) Index(i pulumi.IntInput) CCHttpPoliciesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpPoliciesList {
		return vs[0].([]CCHttpPoliciesList)[vs[1].(int)]
	}).(CCHttpPoliciesListOutput)
}

type CCHttpPoliciesListRuleList struct {
	Operator string `pulumi:"operator"`
	Skey     string `pulumi:"skey"`
	Value    string `pulumi:"value"`
}

// CCHttpPoliciesListRuleListInput is an input type that accepts CCHttpPoliciesListRuleListArgs and CCHttpPoliciesListRuleListOutput values.
// You can construct a concrete instance of `CCHttpPoliciesListRuleListInput` via:
//
//          CCHttpPoliciesListRuleListArgs{...}
type CCHttpPoliciesListRuleListInput interface {
	pulumi.Input

	ToCCHttpPoliciesListRuleListOutput() CCHttpPoliciesListRuleListOutput
	ToCCHttpPoliciesListRuleListOutputWithContext(context.Context) CCHttpPoliciesListRuleListOutput
}

type CCHttpPoliciesListRuleListArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Skey     pulumi.StringInput `pulumi:"skey"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (CCHttpPoliciesListRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPoliciesListRuleList)(nil)).Elem()
}

func (i CCHttpPoliciesListRuleListArgs) ToCCHttpPoliciesListRuleListOutput() CCHttpPoliciesListRuleListOutput {
	return i.ToCCHttpPoliciesListRuleListOutputWithContext(context.Background())
}

func (i CCHttpPoliciesListRuleListArgs) ToCCHttpPoliciesListRuleListOutputWithContext(ctx context.Context) CCHttpPoliciesListRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPoliciesListRuleListOutput)
}

// CCHttpPoliciesListRuleListArrayInput is an input type that accepts CCHttpPoliciesListRuleListArray and CCHttpPoliciesListRuleListArrayOutput values.
// You can construct a concrete instance of `CCHttpPoliciesListRuleListArrayInput` via:
//
//          CCHttpPoliciesListRuleListArray{ CCHttpPoliciesListRuleListArgs{...} }
type CCHttpPoliciesListRuleListArrayInput interface {
	pulumi.Input

	ToCCHttpPoliciesListRuleListArrayOutput() CCHttpPoliciesListRuleListArrayOutput
	ToCCHttpPoliciesListRuleListArrayOutputWithContext(context.Context) CCHttpPoliciesListRuleListArrayOutput
}

type CCHttpPoliciesListRuleListArray []CCHttpPoliciesListRuleListInput

func (CCHttpPoliciesListRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPoliciesListRuleList)(nil)).Elem()
}

func (i CCHttpPoliciesListRuleListArray) ToCCHttpPoliciesListRuleListArrayOutput() CCHttpPoliciesListRuleListArrayOutput {
	return i.ToCCHttpPoliciesListRuleListArrayOutputWithContext(context.Background())
}

func (i CCHttpPoliciesListRuleListArray) ToCCHttpPoliciesListRuleListArrayOutputWithContext(ctx context.Context) CCHttpPoliciesListRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPoliciesListRuleListArrayOutput)
}

type CCHttpPoliciesListRuleListOutput struct{ *pulumi.OutputState }

func (CCHttpPoliciesListRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPoliciesListRuleList)(nil)).Elem()
}

func (o CCHttpPoliciesListRuleListOutput) ToCCHttpPoliciesListRuleListOutput() CCHttpPoliciesListRuleListOutput {
	return o
}

func (o CCHttpPoliciesListRuleListOutput) ToCCHttpPoliciesListRuleListOutputWithContext(ctx context.Context) CCHttpPoliciesListRuleListOutput {
	return o
}

func (o CCHttpPoliciesListRuleListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesListRuleList) string { return v.Operator }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListRuleListOutput) Skey() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesListRuleList) string { return v.Skey }).(pulumi.StringOutput)
}

func (o CCHttpPoliciesListRuleListOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpPoliciesListRuleList) string { return v.Value }).(pulumi.StringOutput)
}

type CCHttpPoliciesListRuleListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpPoliciesListRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPoliciesListRuleList)(nil)).Elem()
}

func (o CCHttpPoliciesListRuleListArrayOutput) ToCCHttpPoliciesListRuleListArrayOutput() CCHttpPoliciesListRuleListArrayOutput {
	return o
}

func (o CCHttpPoliciesListRuleListArrayOutput) ToCCHttpPoliciesListRuleListArrayOutputWithContext(ctx context.Context) CCHttpPoliciesListRuleListArrayOutput {
	return o
}

func (o CCHttpPoliciesListRuleListArrayOutput) Index(i pulumi.IntInput) CCHttpPoliciesListRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpPoliciesListRuleList {
		return vs[0].([]CCHttpPoliciesListRuleList)[vs[1].(int)]
	}).(CCHttpPoliciesListRuleListOutput)
}

type CCHttpPolicyRuleList struct {
	Operator *string `pulumi:"operator"`
	Skey     *string `pulumi:"skey"`
	Value    *string `pulumi:"value"`
}

// CCHttpPolicyRuleListInput is an input type that accepts CCHttpPolicyRuleListArgs and CCHttpPolicyRuleListOutput values.
// You can construct a concrete instance of `CCHttpPolicyRuleListInput` via:
//
//          CCHttpPolicyRuleListArgs{...}
type CCHttpPolicyRuleListInput interface {
	pulumi.Input

	ToCCHttpPolicyRuleListOutput() CCHttpPolicyRuleListOutput
	ToCCHttpPolicyRuleListOutputWithContext(context.Context) CCHttpPolicyRuleListOutput
}

type CCHttpPolicyRuleListArgs struct {
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	Skey     pulumi.StringPtrInput `pulumi:"skey"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (CCHttpPolicyRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPolicyRuleList)(nil)).Elem()
}

func (i CCHttpPolicyRuleListArgs) ToCCHttpPolicyRuleListOutput() CCHttpPolicyRuleListOutput {
	return i.ToCCHttpPolicyRuleListOutputWithContext(context.Background())
}

func (i CCHttpPolicyRuleListArgs) ToCCHttpPolicyRuleListOutputWithContext(ctx context.Context) CCHttpPolicyRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPolicyRuleListOutput)
}

// CCHttpPolicyRuleListArrayInput is an input type that accepts CCHttpPolicyRuleListArray and CCHttpPolicyRuleListArrayOutput values.
// You can construct a concrete instance of `CCHttpPolicyRuleListArrayInput` via:
//
//          CCHttpPolicyRuleListArray{ CCHttpPolicyRuleListArgs{...} }
type CCHttpPolicyRuleListArrayInput interface {
	pulumi.Input

	ToCCHttpPolicyRuleListArrayOutput() CCHttpPolicyRuleListArrayOutput
	ToCCHttpPolicyRuleListArrayOutputWithContext(context.Context) CCHttpPolicyRuleListArrayOutput
}

type CCHttpPolicyRuleListArray []CCHttpPolicyRuleListInput

func (CCHttpPolicyRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPolicyRuleList)(nil)).Elem()
}

func (i CCHttpPolicyRuleListArray) ToCCHttpPolicyRuleListArrayOutput() CCHttpPolicyRuleListArrayOutput {
	return i.ToCCHttpPolicyRuleListArrayOutputWithContext(context.Background())
}

func (i CCHttpPolicyRuleListArray) ToCCHttpPolicyRuleListArrayOutputWithContext(ctx context.Context) CCHttpPolicyRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpPolicyRuleListArrayOutput)
}

type CCHttpPolicyRuleListOutput struct{ *pulumi.OutputState }

func (CCHttpPolicyRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpPolicyRuleList)(nil)).Elem()
}

func (o CCHttpPolicyRuleListOutput) ToCCHttpPolicyRuleListOutput() CCHttpPolicyRuleListOutput {
	return o
}

func (o CCHttpPolicyRuleListOutput) ToCCHttpPolicyRuleListOutputWithContext(ctx context.Context) CCHttpPolicyRuleListOutput {
	return o
}

func (o CCHttpPolicyRuleListOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpPolicyRuleList) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o CCHttpPolicyRuleListOutput) Skey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpPolicyRuleList) *string { return v.Skey }).(pulumi.StringPtrOutput)
}

func (o CCHttpPolicyRuleListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCHttpPolicyRuleList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CCHttpPolicyRuleListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpPolicyRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpPolicyRuleList)(nil)).Elem()
}

func (o CCHttpPolicyRuleListArrayOutput) ToCCHttpPolicyRuleListArrayOutput() CCHttpPolicyRuleListArrayOutput {
	return o
}

func (o CCHttpPolicyRuleListArrayOutput) ToCCHttpPolicyRuleListArrayOutputWithContext(ctx context.Context) CCHttpPolicyRuleListArrayOutput {
	return o
}

func (o CCHttpPolicyRuleListArrayOutput) Index(i pulumi.IntInput) CCHttpPolicyRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpPolicyRuleList {
		return vs[0].([]CCHttpPolicyRuleList)[vs[1].(int)]
	}).(CCHttpPolicyRuleListOutput)
}

type CCHttpsPoliciesList struct {
	Action       string                        `pulumi:"action"`
	CreateTime   string                        `pulumi:"createTime"`
	Domain       string                        `pulumi:"domain"`
	IpLists      []string                      `pulumi:"ipLists"`
	Name         string                        `pulumi:"name"`
	PolicyId     string                        `pulumi:"policyId"`
	ResourceId   string                        `pulumi:"resourceId"`
	ResourceType string                        `pulumi:"resourceType"`
	RuleId       string                        `pulumi:"ruleId"`
	RuleLists    []CCHttpsPoliciesListRuleList `pulumi:"ruleLists"`
	Switch       bool                          `pulumi:"switch"`
}

// CCHttpsPoliciesListInput is an input type that accepts CCHttpsPoliciesListArgs and CCHttpsPoliciesListOutput values.
// You can construct a concrete instance of `CCHttpsPoliciesListInput` via:
//
//          CCHttpsPoliciesListArgs{...}
type CCHttpsPoliciesListInput interface {
	pulumi.Input

	ToCCHttpsPoliciesListOutput() CCHttpsPoliciesListOutput
	ToCCHttpsPoliciesListOutputWithContext(context.Context) CCHttpsPoliciesListOutput
}

type CCHttpsPoliciesListArgs struct {
	Action       pulumi.StringInput                    `pulumi:"action"`
	CreateTime   pulumi.StringInput                    `pulumi:"createTime"`
	Domain       pulumi.StringInput                    `pulumi:"domain"`
	IpLists      pulumi.StringArrayInput               `pulumi:"ipLists"`
	Name         pulumi.StringInput                    `pulumi:"name"`
	PolicyId     pulumi.StringInput                    `pulumi:"policyId"`
	ResourceId   pulumi.StringInput                    `pulumi:"resourceId"`
	ResourceType pulumi.StringInput                    `pulumi:"resourceType"`
	RuleId       pulumi.StringInput                    `pulumi:"ruleId"`
	RuleLists    CCHttpsPoliciesListRuleListArrayInput `pulumi:"ruleLists"`
	Switch       pulumi.BoolInput                      `pulumi:"switch"`
}

func (CCHttpsPoliciesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesList)(nil)).Elem()
}

func (i CCHttpsPoliciesListArgs) ToCCHttpsPoliciesListOutput() CCHttpsPoliciesListOutput {
	return i.ToCCHttpsPoliciesListOutputWithContext(context.Background())
}

func (i CCHttpsPoliciesListArgs) ToCCHttpsPoliciesListOutputWithContext(ctx context.Context) CCHttpsPoliciesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPoliciesListOutput)
}

// CCHttpsPoliciesListArrayInput is an input type that accepts CCHttpsPoliciesListArray and CCHttpsPoliciesListArrayOutput values.
// You can construct a concrete instance of `CCHttpsPoliciesListArrayInput` via:
//
//          CCHttpsPoliciesListArray{ CCHttpsPoliciesListArgs{...} }
type CCHttpsPoliciesListArrayInput interface {
	pulumi.Input

	ToCCHttpsPoliciesListArrayOutput() CCHttpsPoliciesListArrayOutput
	ToCCHttpsPoliciesListArrayOutputWithContext(context.Context) CCHttpsPoliciesListArrayOutput
}

type CCHttpsPoliciesListArray []CCHttpsPoliciesListInput

func (CCHttpsPoliciesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPoliciesList)(nil)).Elem()
}

func (i CCHttpsPoliciesListArray) ToCCHttpsPoliciesListArrayOutput() CCHttpsPoliciesListArrayOutput {
	return i.ToCCHttpsPoliciesListArrayOutputWithContext(context.Background())
}

func (i CCHttpsPoliciesListArray) ToCCHttpsPoliciesListArrayOutputWithContext(ctx context.Context) CCHttpsPoliciesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPoliciesListArrayOutput)
}

type CCHttpsPoliciesListOutput struct{ *pulumi.OutputState }

func (CCHttpsPoliciesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesList)(nil)).Elem()
}

func (o CCHttpsPoliciesListOutput) ToCCHttpsPoliciesListOutput() CCHttpsPoliciesListOutput {
	return o
}

func (o CCHttpsPoliciesListOutput) ToCCHttpsPoliciesListOutputWithContext(ctx context.Context) CCHttpsPoliciesListOutput {
	return o
}

func (o CCHttpsPoliciesListOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.Action }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

func (o CCHttpsPoliciesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListOutput) RuleLists() CCHttpsPoliciesListRuleListArrayOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) []CCHttpsPoliciesListRuleList { return v.RuleLists }).(CCHttpsPoliciesListRuleListArrayOutput)
}

func (o CCHttpsPoliciesListOutput) Switch() pulumi.BoolOutput {
	return o.ApplyT(func(v CCHttpsPoliciesList) bool { return v.Switch }).(pulumi.BoolOutput)
}

type CCHttpsPoliciesListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpsPoliciesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPoliciesList)(nil)).Elem()
}

func (o CCHttpsPoliciesListArrayOutput) ToCCHttpsPoliciesListArrayOutput() CCHttpsPoliciesListArrayOutput {
	return o
}

func (o CCHttpsPoliciesListArrayOutput) ToCCHttpsPoliciesListArrayOutputWithContext(ctx context.Context) CCHttpsPoliciesListArrayOutput {
	return o
}

func (o CCHttpsPoliciesListArrayOutput) Index(i pulumi.IntInput) CCHttpsPoliciesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpsPoliciesList {
		return vs[0].([]CCHttpsPoliciesList)[vs[1].(int)]
	}).(CCHttpsPoliciesListOutput)
}

type CCHttpsPoliciesListRuleList struct {
	Operator string `pulumi:"operator"`
	Skey     string `pulumi:"skey"`
	Value    string `pulumi:"value"`
}

// CCHttpsPoliciesListRuleListInput is an input type that accepts CCHttpsPoliciesListRuleListArgs and CCHttpsPoliciesListRuleListOutput values.
// You can construct a concrete instance of `CCHttpsPoliciesListRuleListInput` via:
//
//          CCHttpsPoliciesListRuleListArgs{...}
type CCHttpsPoliciesListRuleListInput interface {
	pulumi.Input

	ToCCHttpsPoliciesListRuleListOutput() CCHttpsPoliciesListRuleListOutput
	ToCCHttpsPoliciesListRuleListOutputWithContext(context.Context) CCHttpsPoliciesListRuleListOutput
}

type CCHttpsPoliciesListRuleListArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Skey     pulumi.StringInput `pulumi:"skey"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (CCHttpsPoliciesListRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesListRuleList)(nil)).Elem()
}

func (i CCHttpsPoliciesListRuleListArgs) ToCCHttpsPoliciesListRuleListOutput() CCHttpsPoliciesListRuleListOutput {
	return i.ToCCHttpsPoliciesListRuleListOutputWithContext(context.Background())
}

func (i CCHttpsPoliciesListRuleListArgs) ToCCHttpsPoliciesListRuleListOutputWithContext(ctx context.Context) CCHttpsPoliciesListRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPoliciesListRuleListOutput)
}

// CCHttpsPoliciesListRuleListArrayInput is an input type that accepts CCHttpsPoliciesListRuleListArray and CCHttpsPoliciesListRuleListArrayOutput values.
// You can construct a concrete instance of `CCHttpsPoliciesListRuleListArrayInput` via:
//
//          CCHttpsPoliciesListRuleListArray{ CCHttpsPoliciesListRuleListArgs{...} }
type CCHttpsPoliciesListRuleListArrayInput interface {
	pulumi.Input

	ToCCHttpsPoliciesListRuleListArrayOutput() CCHttpsPoliciesListRuleListArrayOutput
	ToCCHttpsPoliciesListRuleListArrayOutputWithContext(context.Context) CCHttpsPoliciesListRuleListArrayOutput
}

type CCHttpsPoliciesListRuleListArray []CCHttpsPoliciesListRuleListInput

func (CCHttpsPoliciesListRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPoliciesListRuleList)(nil)).Elem()
}

func (i CCHttpsPoliciesListRuleListArray) ToCCHttpsPoliciesListRuleListArrayOutput() CCHttpsPoliciesListRuleListArrayOutput {
	return i.ToCCHttpsPoliciesListRuleListArrayOutputWithContext(context.Background())
}

func (i CCHttpsPoliciesListRuleListArray) ToCCHttpsPoliciesListRuleListArrayOutputWithContext(ctx context.Context) CCHttpsPoliciesListRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPoliciesListRuleListArrayOutput)
}

type CCHttpsPoliciesListRuleListOutput struct{ *pulumi.OutputState }

func (CCHttpsPoliciesListRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPoliciesListRuleList)(nil)).Elem()
}

func (o CCHttpsPoliciesListRuleListOutput) ToCCHttpsPoliciesListRuleListOutput() CCHttpsPoliciesListRuleListOutput {
	return o
}

func (o CCHttpsPoliciesListRuleListOutput) ToCCHttpsPoliciesListRuleListOutputWithContext(ctx context.Context) CCHttpsPoliciesListRuleListOutput {
	return o
}

func (o CCHttpsPoliciesListRuleListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesListRuleList) string { return v.Operator }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListRuleListOutput) Skey() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesListRuleList) string { return v.Skey }).(pulumi.StringOutput)
}

func (o CCHttpsPoliciesListRuleListOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPoliciesListRuleList) string { return v.Value }).(pulumi.StringOutput)
}

type CCHttpsPoliciesListRuleListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpsPoliciesListRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPoliciesListRuleList)(nil)).Elem()
}

func (o CCHttpsPoliciesListRuleListArrayOutput) ToCCHttpsPoliciesListRuleListArrayOutput() CCHttpsPoliciesListRuleListArrayOutput {
	return o
}

func (o CCHttpsPoliciesListRuleListArrayOutput) ToCCHttpsPoliciesListRuleListArrayOutputWithContext(ctx context.Context) CCHttpsPoliciesListRuleListArrayOutput {
	return o
}

func (o CCHttpsPoliciesListRuleListArrayOutput) Index(i pulumi.IntInput) CCHttpsPoliciesListRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpsPoliciesListRuleList {
		return vs[0].([]CCHttpsPoliciesListRuleList)[vs[1].(int)]
	}).(CCHttpsPoliciesListRuleListOutput)
}

type CCHttpsPolicyRuleList struct {
	Operator string `pulumi:"operator"`
	Skey     string `pulumi:"skey"`
	Value    string `pulumi:"value"`
}

// CCHttpsPolicyRuleListInput is an input type that accepts CCHttpsPolicyRuleListArgs and CCHttpsPolicyRuleListOutput values.
// You can construct a concrete instance of `CCHttpsPolicyRuleListInput` via:
//
//          CCHttpsPolicyRuleListArgs{...}
type CCHttpsPolicyRuleListInput interface {
	pulumi.Input

	ToCCHttpsPolicyRuleListOutput() CCHttpsPolicyRuleListOutput
	ToCCHttpsPolicyRuleListOutputWithContext(context.Context) CCHttpsPolicyRuleListOutput
}

type CCHttpsPolicyRuleListArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Skey     pulumi.StringInput `pulumi:"skey"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (CCHttpsPolicyRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPolicyRuleList)(nil)).Elem()
}

func (i CCHttpsPolicyRuleListArgs) ToCCHttpsPolicyRuleListOutput() CCHttpsPolicyRuleListOutput {
	return i.ToCCHttpsPolicyRuleListOutputWithContext(context.Background())
}

func (i CCHttpsPolicyRuleListArgs) ToCCHttpsPolicyRuleListOutputWithContext(ctx context.Context) CCHttpsPolicyRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPolicyRuleListOutput)
}

// CCHttpsPolicyRuleListArrayInput is an input type that accepts CCHttpsPolicyRuleListArray and CCHttpsPolicyRuleListArrayOutput values.
// You can construct a concrete instance of `CCHttpsPolicyRuleListArrayInput` via:
//
//          CCHttpsPolicyRuleListArray{ CCHttpsPolicyRuleListArgs{...} }
type CCHttpsPolicyRuleListArrayInput interface {
	pulumi.Input

	ToCCHttpsPolicyRuleListArrayOutput() CCHttpsPolicyRuleListArrayOutput
	ToCCHttpsPolicyRuleListArrayOutputWithContext(context.Context) CCHttpsPolicyRuleListArrayOutput
}

type CCHttpsPolicyRuleListArray []CCHttpsPolicyRuleListInput

func (CCHttpsPolicyRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPolicyRuleList)(nil)).Elem()
}

func (i CCHttpsPolicyRuleListArray) ToCCHttpsPolicyRuleListArrayOutput() CCHttpsPolicyRuleListArrayOutput {
	return i.ToCCHttpsPolicyRuleListArrayOutputWithContext(context.Background())
}

func (i CCHttpsPolicyRuleListArray) ToCCHttpsPolicyRuleListArrayOutputWithContext(ctx context.Context) CCHttpsPolicyRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCHttpsPolicyRuleListArrayOutput)
}

type CCHttpsPolicyRuleListOutput struct{ *pulumi.OutputState }

func (CCHttpsPolicyRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCHttpsPolicyRuleList)(nil)).Elem()
}

func (o CCHttpsPolicyRuleListOutput) ToCCHttpsPolicyRuleListOutput() CCHttpsPolicyRuleListOutput {
	return o
}

func (o CCHttpsPolicyRuleListOutput) ToCCHttpsPolicyRuleListOutputWithContext(ctx context.Context) CCHttpsPolicyRuleListOutput {
	return o
}

func (o CCHttpsPolicyRuleListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPolicyRuleList) string { return v.Operator }).(pulumi.StringOutput)
}

func (o CCHttpsPolicyRuleListOutput) Skey() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPolicyRuleList) string { return v.Skey }).(pulumi.StringOutput)
}

func (o CCHttpsPolicyRuleListOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CCHttpsPolicyRuleList) string { return v.Value }).(pulumi.StringOutput)
}

type CCHttpsPolicyRuleListArrayOutput struct{ *pulumi.OutputState }

func (CCHttpsPolicyRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCHttpsPolicyRuleList)(nil)).Elem()
}

func (o CCHttpsPolicyRuleListArrayOutput) ToCCHttpsPolicyRuleListArrayOutput() CCHttpsPolicyRuleListArrayOutput {
	return o
}

func (o CCHttpsPolicyRuleListArrayOutput) ToCCHttpsPolicyRuleListArrayOutputWithContext(ctx context.Context) CCHttpsPolicyRuleListArrayOutput {
	return o
}

func (o CCHttpsPolicyRuleListArrayOutput) Index(i pulumi.IntInput) CCHttpsPolicyRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCHttpsPolicyRuleList {
		return vs[0].([]CCHttpsPolicyRuleList)[vs[1].(int)]
	}).(CCHttpsPolicyRuleListOutput)
}

type CCPolicyV2CcBlackWhiteIp struct {
	BlackWhiteIp string  `pulumi:"blackWhiteIp"`
	CreateTime   *string `pulumi:"createTime"`
	Domain       string  `pulumi:"domain"`
	ModifyTime   *string `pulumi:"modifyTime"`
	Protocol     string  `pulumi:"protocol"`
	Type         string  `pulumi:"type"`
}

// CCPolicyV2CcBlackWhiteIpInput is an input type that accepts CCPolicyV2CcBlackWhiteIpArgs and CCPolicyV2CcBlackWhiteIpOutput values.
// You can construct a concrete instance of `CCPolicyV2CcBlackWhiteIpInput` via:
//
//          CCPolicyV2CcBlackWhiteIpArgs{...}
type CCPolicyV2CcBlackWhiteIpInput interface {
	pulumi.Input

	ToCCPolicyV2CcBlackWhiteIpOutput() CCPolicyV2CcBlackWhiteIpOutput
	ToCCPolicyV2CcBlackWhiteIpOutputWithContext(context.Context) CCPolicyV2CcBlackWhiteIpOutput
}

type CCPolicyV2CcBlackWhiteIpArgs struct {
	BlackWhiteIp pulumi.StringInput    `pulumi:"blackWhiteIp"`
	CreateTime   pulumi.StringPtrInput `pulumi:"createTime"`
	Domain       pulumi.StringInput    `pulumi:"domain"`
	ModifyTime   pulumi.StringPtrInput `pulumi:"modifyTime"`
	Protocol     pulumi.StringInput    `pulumi:"protocol"`
	Type         pulumi.StringInput    `pulumi:"type"`
}

func (CCPolicyV2CcBlackWhiteIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcBlackWhiteIp)(nil)).Elem()
}

func (i CCPolicyV2CcBlackWhiteIpArgs) ToCCPolicyV2CcBlackWhiteIpOutput() CCPolicyV2CcBlackWhiteIpOutput {
	return i.ToCCPolicyV2CcBlackWhiteIpOutputWithContext(context.Background())
}

func (i CCPolicyV2CcBlackWhiteIpArgs) ToCCPolicyV2CcBlackWhiteIpOutputWithContext(ctx context.Context) CCPolicyV2CcBlackWhiteIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcBlackWhiteIpOutput)
}

// CCPolicyV2CcBlackWhiteIpArrayInput is an input type that accepts CCPolicyV2CcBlackWhiteIpArray and CCPolicyV2CcBlackWhiteIpArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcBlackWhiteIpArrayInput` via:
//
//          CCPolicyV2CcBlackWhiteIpArray{ CCPolicyV2CcBlackWhiteIpArgs{...} }
type CCPolicyV2CcBlackWhiteIpArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcBlackWhiteIpArrayOutput() CCPolicyV2CcBlackWhiteIpArrayOutput
	ToCCPolicyV2CcBlackWhiteIpArrayOutputWithContext(context.Context) CCPolicyV2CcBlackWhiteIpArrayOutput
}

type CCPolicyV2CcBlackWhiteIpArray []CCPolicyV2CcBlackWhiteIpInput

func (CCPolicyV2CcBlackWhiteIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcBlackWhiteIp)(nil)).Elem()
}

func (i CCPolicyV2CcBlackWhiteIpArray) ToCCPolicyV2CcBlackWhiteIpArrayOutput() CCPolicyV2CcBlackWhiteIpArrayOutput {
	return i.ToCCPolicyV2CcBlackWhiteIpArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcBlackWhiteIpArray) ToCCPolicyV2CcBlackWhiteIpArrayOutputWithContext(ctx context.Context) CCPolicyV2CcBlackWhiteIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcBlackWhiteIpArrayOutput)
}

type CCPolicyV2CcBlackWhiteIpOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcBlackWhiteIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcBlackWhiteIp)(nil)).Elem()
}

func (o CCPolicyV2CcBlackWhiteIpOutput) ToCCPolicyV2CcBlackWhiteIpOutput() CCPolicyV2CcBlackWhiteIpOutput {
	return o
}

func (o CCPolicyV2CcBlackWhiteIpOutput) ToCCPolicyV2CcBlackWhiteIpOutputWithContext(ctx context.Context) CCPolicyV2CcBlackWhiteIpOutput {
	return o
}

func (o CCPolicyV2CcBlackWhiteIpOutput) BlackWhiteIp() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) string { return v.BlackWhiteIp }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcBlackWhiteIpOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcBlackWhiteIpOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcBlackWhiteIpOutput) ModifyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) *string { return v.ModifyTime }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcBlackWhiteIpOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcBlackWhiteIpOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcBlackWhiteIp) string { return v.Type }).(pulumi.StringOutput)
}

type CCPolicyV2CcBlackWhiteIpArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcBlackWhiteIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcBlackWhiteIp)(nil)).Elem()
}

func (o CCPolicyV2CcBlackWhiteIpArrayOutput) ToCCPolicyV2CcBlackWhiteIpArrayOutput() CCPolicyV2CcBlackWhiteIpArrayOutput {
	return o
}

func (o CCPolicyV2CcBlackWhiteIpArrayOutput) ToCCPolicyV2CcBlackWhiteIpArrayOutputWithContext(ctx context.Context) CCPolicyV2CcBlackWhiteIpArrayOutput {
	return o
}

func (o CCPolicyV2CcBlackWhiteIpArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcBlackWhiteIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcBlackWhiteIp {
		return vs[0].([]CCPolicyV2CcBlackWhiteIp)[vs[1].(int)]
	}).(CCPolicyV2CcBlackWhiteIpOutput)
}

type CCPolicyV2CcGeoIpPolicy struct {
	Action     string  `pulumi:"action"`
	AreaLists  []int   `pulumi:"areaLists"`
	CreateTime *string `pulumi:"createTime"`
	Domain     string  `pulumi:"domain"`
	ModifyTime *string `pulumi:"modifyTime"`
	Protocol   string  `pulumi:"protocol"`
	RegionType string  `pulumi:"regionType"`
}

// CCPolicyV2CcGeoIpPolicyInput is an input type that accepts CCPolicyV2CcGeoIpPolicyArgs and CCPolicyV2CcGeoIpPolicyOutput values.
// You can construct a concrete instance of `CCPolicyV2CcGeoIpPolicyInput` via:
//
//          CCPolicyV2CcGeoIpPolicyArgs{...}
type CCPolicyV2CcGeoIpPolicyInput interface {
	pulumi.Input

	ToCCPolicyV2CcGeoIpPolicyOutput() CCPolicyV2CcGeoIpPolicyOutput
	ToCCPolicyV2CcGeoIpPolicyOutputWithContext(context.Context) CCPolicyV2CcGeoIpPolicyOutput
}

type CCPolicyV2CcGeoIpPolicyArgs struct {
	Action     pulumi.StringInput    `pulumi:"action"`
	AreaLists  pulumi.IntArrayInput  `pulumi:"areaLists"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	Domain     pulumi.StringInput    `pulumi:"domain"`
	ModifyTime pulumi.StringPtrInput `pulumi:"modifyTime"`
	Protocol   pulumi.StringInput    `pulumi:"protocol"`
	RegionType pulumi.StringInput    `pulumi:"regionType"`
}

func (CCPolicyV2CcGeoIpPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcGeoIpPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcGeoIpPolicyArgs) ToCCPolicyV2CcGeoIpPolicyOutput() CCPolicyV2CcGeoIpPolicyOutput {
	return i.ToCCPolicyV2CcGeoIpPolicyOutputWithContext(context.Background())
}

func (i CCPolicyV2CcGeoIpPolicyArgs) ToCCPolicyV2CcGeoIpPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcGeoIpPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcGeoIpPolicyOutput)
}

// CCPolicyV2CcGeoIpPolicyArrayInput is an input type that accepts CCPolicyV2CcGeoIpPolicyArray and CCPolicyV2CcGeoIpPolicyArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcGeoIpPolicyArrayInput` via:
//
//          CCPolicyV2CcGeoIpPolicyArray{ CCPolicyV2CcGeoIpPolicyArgs{...} }
type CCPolicyV2CcGeoIpPolicyArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcGeoIpPolicyArrayOutput() CCPolicyV2CcGeoIpPolicyArrayOutput
	ToCCPolicyV2CcGeoIpPolicyArrayOutputWithContext(context.Context) CCPolicyV2CcGeoIpPolicyArrayOutput
}

type CCPolicyV2CcGeoIpPolicyArray []CCPolicyV2CcGeoIpPolicyInput

func (CCPolicyV2CcGeoIpPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcGeoIpPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcGeoIpPolicyArray) ToCCPolicyV2CcGeoIpPolicyArrayOutput() CCPolicyV2CcGeoIpPolicyArrayOutput {
	return i.ToCCPolicyV2CcGeoIpPolicyArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcGeoIpPolicyArray) ToCCPolicyV2CcGeoIpPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcGeoIpPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcGeoIpPolicyArrayOutput)
}

type CCPolicyV2CcGeoIpPolicyOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcGeoIpPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcGeoIpPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcGeoIpPolicyOutput) ToCCPolicyV2CcGeoIpPolicyOutput() CCPolicyV2CcGeoIpPolicyOutput {
	return o
}

func (o CCPolicyV2CcGeoIpPolicyOutput) ToCCPolicyV2CcGeoIpPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcGeoIpPolicyOutput {
	return o
}

func (o CCPolicyV2CcGeoIpPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) string { return v.Action }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) AreaLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) []int { return v.AreaLists }).(pulumi.IntArrayOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) ModifyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) *string { return v.ModifyTime }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcGeoIpPolicyOutput) RegionType() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcGeoIpPolicy) string { return v.RegionType }).(pulumi.StringOutput)
}

type CCPolicyV2CcGeoIpPolicyArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcGeoIpPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcGeoIpPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcGeoIpPolicyArrayOutput) ToCCPolicyV2CcGeoIpPolicyArrayOutput() CCPolicyV2CcGeoIpPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcGeoIpPolicyArrayOutput) ToCCPolicyV2CcGeoIpPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcGeoIpPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcGeoIpPolicyArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcGeoIpPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcGeoIpPolicy {
		return vs[0].([]CCPolicyV2CcGeoIpPolicy)[vs[1].(int)]
	}).(CCPolicyV2CcGeoIpPolicyOutput)
}

type CCPolicyV2CcPrecisionPolicy struct {
	Domain       string                              `pulumi:"domain"`
	Ip           string                              `pulumi:"ip"`
	PolicyAction string                              `pulumi:"policyAction"`
	PolicyId     *string                             `pulumi:"policyId"`
	Policys      []CCPolicyV2CcPrecisionPolicyPolicy `pulumi:"policys"`
	Protocol     string                              `pulumi:"protocol"`
}

// CCPolicyV2CcPrecisionPolicyInput is an input type that accepts CCPolicyV2CcPrecisionPolicyArgs and CCPolicyV2CcPrecisionPolicyOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionPolicyInput` via:
//
//          CCPolicyV2CcPrecisionPolicyArgs{...}
type CCPolicyV2CcPrecisionPolicyInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionPolicyOutput() CCPolicyV2CcPrecisionPolicyOutput
	ToCCPolicyV2CcPrecisionPolicyOutputWithContext(context.Context) CCPolicyV2CcPrecisionPolicyOutput
}

type CCPolicyV2CcPrecisionPolicyArgs struct {
	Domain       pulumi.StringInput                          `pulumi:"domain"`
	Ip           pulumi.StringInput                          `pulumi:"ip"`
	PolicyAction pulumi.StringInput                          `pulumi:"policyAction"`
	PolicyId     pulumi.StringPtrInput                       `pulumi:"policyId"`
	Policys      CCPolicyV2CcPrecisionPolicyPolicyArrayInput `pulumi:"policys"`
	Protocol     pulumi.StringInput                          `pulumi:"protocol"`
}

func (CCPolicyV2CcPrecisionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionPolicyArgs) ToCCPolicyV2CcPrecisionPolicyOutput() CCPolicyV2CcPrecisionPolicyOutput {
	return i.ToCCPolicyV2CcPrecisionPolicyOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionPolicyArgs) ToCCPolicyV2CcPrecisionPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionPolicyOutput)
}

// CCPolicyV2CcPrecisionPolicyArrayInput is an input type that accepts CCPolicyV2CcPrecisionPolicyArray and CCPolicyV2CcPrecisionPolicyArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionPolicyArrayInput` via:
//
//          CCPolicyV2CcPrecisionPolicyArray{ CCPolicyV2CcPrecisionPolicyArgs{...} }
type CCPolicyV2CcPrecisionPolicyArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyArrayOutput
	ToCCPolicyV2CcPrecisionPolicyArrayOutputWithContext(context.Context) CCPolicyV2CcPrecisionPolicyArrayOutput
}

type CCPolicyV2CcPrecisionPolicyArray []CCPolicyV2CcPrecisionPolicyInput

func (CCPolicyV2CcPrecisionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionPolicyArray) ToCCPolicyV2CcPrecisionPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyArrayOutput {
	return i.ToCCPolicyV2CcPrecisionPolicyArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionPolicyArray) ToCCPolicyV2CcPrecisionPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionPolicyArrayOutput)
}

type CCPolicyV2CcPrecisionPolicyOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionPolicyOutput) ToCCPolicyV2CcPrecisionPolicyOutput() CCPolicyV2CcPrecisionPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyOutput) ToCCPolicyV2CcPrecisionPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) string { return v.Ip }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyOutput) PolicyAction() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) string { return v.PolicyAction }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcPrecisionPolicyOutput) Policys() CCPolicyV2CcPrecisionPolicyPolicyArrayOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) []CCPolicyV2CcPrecisionPolicyPolicy { return v.Policys }).(CCPolicyV2CcPrecisionPolicyPolicyArrayOutput)
}

func (o CCPolicyV2CcPrecisionPolicyOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicy) string { return v.Protocol }).(pulumi.StringOutput)
}

type CCPolicyV2CcPrecisionPolicyArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionPolicyArrayOutput) ToCCPolicyV2CcPrecisionPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyArrayOutput) ToCCPolicyV2CcPrecisionPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcPrecisionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcPrecisionPolicy {
		return vs[0].([]CCPolicyV2CcPrecisionPolicy)[vs[1].(int)]
	}).(CCPolicyV2CcPrecisionPolicyOutput)
}

type CCPolicyV2CcPrecisionPolicyPolicy struct {
	FieldName     string `pulumi:"fieldName"`
	FieldType     string `pulumi:"fieldType"`
	Value         string `pulumi:"value"`
	ValueOperator string `pulumi:"valueOperator"`
}

// CCPolicyV2CcPrecisionPolicyPolicyInput is an input type that accepts CCPolicyV2CcPrecisionPolicyPolicyArgs and CCPolicyV2CcPrecisionPolicyPolicyOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionPolicyPolicyInput` via:
//
//          CCPolicyV2CcPrecisionPolicyPolicyArgs{...}
type CCPolicyV2CcPrecisionPolicyPolicyInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionPolicyPolicyOutput() CCPolicyV2CcPrecisionPolicyPolicyOutput
	ToCCPolicyV2CcPrecisionPolicyPolicyOutputWithContext(context.Context) CCPolicyV2CcPrecisionPolicyPolicyOutput
}

type CCPolicyV2CcPrecisionPolicyPolicyArgs struct {
	FieldName     pulumi.StringInput `pulumi:"fieldName"`
	FieldType     pulumi.StringInput `pulumi:"fieldType"`
	Value         pulumi.StringInput `pulumi:"value"`
	ValueOperator pulumi.StringInput `pulumi:"valueOperator"`
}

func (CCPolicyV2CcPrecisionPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionPolicyPolicyArgs) ToCCPolicyV2CcPrecisionPolicyPolicyOutput() CCPolicyV2CcPrecisionPolicyPolicyOutput {
	return i.ToCCPolicyV2CcPrecisionPolicyPolicyOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionPolicyPolicyArgs) ToCCPolicyV2CcPrecisionPolicyPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionPolicyPolicyOutput)
}

// CCPolicyV2CcPrecisionPolicyPolicyArrayInput is an input type that accepts CCPolicyV2CcPrecisionPolicyPolicyArray and CCPolicyV2CcPrecisionPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionPolicyPolicyArrayInput` via:
//
//          CCPolicyV2CcPrecisionPolicyPolicyArray{ CCPolicyV2CcPrecisionPolicyPolicyArgs{...} }
type CCPolicyV2CcPrecisionPolicyPolicyArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyPolicyArrayOutput
	ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutputWithContext(context.Context) CCPolicyV2CcPrecisionPolicyPolicyArrayOutput
}

type CCPolicyV2CcPrecisionPolicyPolicyArray []CCPolicyV2CcPrecisionPolicyPolicyInput

func (CCPolicyV2CcPrecisionPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionPolicyPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionPolicyPolicyArray) ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyPolicyArrayOutput {
	return i.ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionPolicyPolicyArray) ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionPolicyPolicyArrayOutput)
}

type CCPolicyV2CcPrecisionPolicyPolicyOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) ToCCPolicyV2CcPrecisionPolicyPolicyOutput() CCPolicyV2CcPrecisionPolicyPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) ToCCPolicyV2CcPrecisionPolicyPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicyPolicy) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicyPolicy) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicyPolicy) string { return v.Value }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionPolicyPolicyOutput) ValueOperator() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionPolicyPolicy) string { return v.ValueOperator }).(pulumi.StringOutput)
}

type CCPolicyV2CcPrecisionPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionPolicyPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionPolicyPolicyArrayOutput) ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutput() CCPolicyV2CcPrecisionPolicyPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyPolicyArrayOutput) ToCCPolicyV2CcPrecisionPolicyPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionPolicyPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionPolicyPolicyArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcPrecisionPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcPrecisionPolicyPolicy {
		return vs[0].([]CCPolicyV2CcPrecisionPolicyPolicy)[vs[1].(int)]
	}).(CCPolicyV2CcPrecisionPolicyPolicyOutput)
}

type CCPolicyV2CcPrecisionReqLimit struct {
	Domain     string                                `pulumi:"domain"`
	InstanceId *string                               `pulumi:"instanceId"`
	Ip         *string                               `pulumi:"ip"`
	Level      string                                `pulumi:"level"`
	Policys    []CCPolicyV2CcPrecisionReqLimitPolicy `pulumi:"policys"`
	Protocol   string                                `pulumi:"protocol"`
}

// CCPolicyV2CcPrecisionReqLimitInput is an input type that accepts CCPolicyV2CcPrecisionReqLimitArgs and CCPolicyV2CcPrecisionReqLimitOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionReqLimitInput` via:
//
//          CCPolicyV2CcPrecisionReqLimitArgs{...}
type CCPolicyV2CcPrecisionReqLimitInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionReqLimitOutput() CCPolicyV2CcPrecisionReqLimitOutput
	ToCCPolicyV2CcPrecisionReqLimitOutputWithContext(context.Context) CCPolicyV2CcPrecisionReqLimitOutput
}

type CCPolicyV2CcPrecisionReqLimitArgs struct {
	Domain     pulumi.StringInput                            `pulumi:"domain"`
	InstanceId pulumi.StringPtrInput                         `pulumi:"instanceId"`
	Ip         pulumi.StringPtrInput                         `pulumi:"ip"`
	Level      pulumi.StringInput                            `pulumi:"level"`
	Policys    CCPolicyV2CcPrecisionReqLimitPolicyArrayInput `pulumi:"policys"`
	Protocol   pulumi.StringInput                            `pulumi:"protocol"`
}

func (CCPolicyV2CcPrecisionReqLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimit)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionReqLimitArgs) ToCCPolicyV2CcPrecisionReqLimitOutput() CCPolicyV2CcPrecisionReqLimitOutput {
	return i.ToCCPolicyV2CcPrecisionReqLimitOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionReqLimitArgs) ToCCPolicyV2CcPrecisionReqLimitOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionReqLimitOutput)
}

// CCPolicyV2CcPrecisionReqLimitArrayInput is an input type that accepts CCPolicyV2CcPrecisionReqLimitArray and CCPolicyV2CcPrecisionReqLimitArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionReqLimitArrayInput` via:
//
//          CCPolicyV2CcPrecisionReqLimitArray{ CCPolicyV2CcPrecisionReqLimitArgs{...} }
type CCPolicyV2CcPrecisionReqLimitArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionReqLimitArrayOutput() CCPolicyV2CcPrecisionReqLimitArrayOutput
	ToCCPolicyV2CcPrecisionReqLimitArrayOutputWithContext(context.Context) CCPolicyV2CcPrecisionReqLimitArrayOutput
}

type CCPolicyV2CcPrecisionReqLimitArray []CCPolicyV2CcPrecisionReqLimitInput

func (CCPolicyV2CcPrecisionReqLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionReqLimit)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionReqLimitArray) ToCCPolicyV2CcPrecisionReqLimitArrayOutput() CCPolicyV2CcPrecisionReqLimitArrayOutput {
	return i.ToCCPolicyV2CcPrecisionReqLimitArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionReqLimitArray) ToCCPolicyV2CcPrecisionReqLimitArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionReqLimitArrayOutput)
}

type CCPolicyV2CcPrecisionReqLimitOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionReqLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimit)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) ToCCPolicyV2CcPrecisionReqLimitOutput() CCPolicyV2CcPrecisionReqLimitOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) ToCCPolicyV2CcPrecisionReqLimitOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) string { return v.Level }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) Policys() CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) []CCPolicyV2CcPrecisionReqLimitPolicy { return v.Policys }).(CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimit) string { return v.Protocol }).(pulumi.StringOutput)
}

type CCPolicyV2CcPrecisionReqLimitArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionReqLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionReqLimit)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionReqLimitArrayOutput) ToCCPolicyV2CcPrecisionReqLimitArrayOutput() CCPolicyV2CcPrecisionReqLimitArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitArrayOutput) ToCCPolicyV2CcPrecisionReqLimitArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcPrecisionReqLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcPrecisionReqLimit {
		return vs[0].([]CCPolicyV2CcPrecisionReqLimit)[vs[1].(int)]
	}).(CCPolicyV2CcPrecisionReqLimitOutput)
}

type CCPolicyV2CcPrecisionReqLimitPolicy struct {
	Action          string  `pulumi:"action"`
	Cookie          *string `pulumi:"cookie"`
	ExecuteDuration int     `pulumi:"executeDuration"`
	Mode            string  `pulumi:"mode"`
	Period          int     `pulumi:"period"`
	RequestNum      int     `pulumi:"requestNum"`
	Uri             *string `pulumi:"uri"`
	UserAgent       *string `pulumi:"userAgent"`
}

// CCPolicyV2CcPrecisionReqLimitPolicyInput is an input type that accepts CCPolicyV2CcPrecisionReqLimitPolicyArgs and CCPolicyV2CcPrecisionReqLimitPolicyOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionReqLimitPolicyInput` via:
//
//          CCPolicyV2CcPrecisionReqLimitPolicyArgs{...}
type CCPolicyV2CcPrecisionReqLimitPolicyInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionReqLimitPolicyOutput() CCPolicyV2CcPrecisionReqLimitPolicyOutput
	ToCCPolicyV2CcPrecisionReqLimitPolicyOutputWithContext(context.Context) CCPolicyV2CcPrecisionReqLimitPolicyOutput
}

type CCPolicyV2CcPrecisionReqLimitPolicyArgs struct {
	Action          pulumi.StringInput    `pulumi:"action"`
	Cookie          pulumi.StringPtrInput `pulumi:"cookie"`
	ExecuteDuration pulumi.IntInput       `pulumi:"executeDuration"`
	Mode            pulumi.StringInput    `pulumi:"mode"`
	Period          pulumi.IntInput       `pulumi:"period"`
	RequestNum      pulumi.IntInput       `pulumi:"requestNum"`
	Uri             pulumi.StringPtrInput `pulumi:"uri"`
	UserAgent       pulumi.StringPtrInput `pulumi:"userAgent"`
}

func (CCPolicyV2CcPrecisionReqLimitPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionReqLimitPolicyArgs) ToCCPolicyV2CcPrecisionReqLimitPolicyOutput() CCPolicyV2CcPrecisionReqLimitPolicyOutput {
	return i.ToCCPolicyV2CcPrecisionReqLimitPolicyOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionReqLimitPolicyArgs) ToCCPolicyV2CcPrecisionReqLimitPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionReqLimitPolicyOutput)
}

// CCPolicyV2CcPrecisionReqLimitPolicyArrayInput is an input type that accepts CCPolicyV2CcPrecisionReqLimitPolicyArray and CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2CcPrecisionReqLimitPolicyArrayInput` via:
//
//          CCPolicyV2CcPrecisionReqLimitPolicyArray{ CCPolicyV2CcPrecisionReqLimitPolicyArgs{...} }
type CCPolicyV2CcPrecisionReqLimitPolicyArrayInput interface {
	pulumi.Input

	ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutput() CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput
	ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutputWithContext(context.Context) CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput
}

type CCPolicyV2CcPrecisionReqLimitPolicyArray []CCPolicyV2CcPrecisionReqLimitPolicyInput

func (CCPolicyV2CcPrecisionReqLimitPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionReqLimitPolicy)(nil)).Elem()
}

func (i CCPolicyV2CcPrecisionReqLimitPolicyArray) ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutput() CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput {
	return i.ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2CcPrecisionReqLimitPolicyArray) ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput)
}

type CCPolicyV2CcPrecisionReqLimitPolicyOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionReqLimitPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) ToCCPolicyV2CcPrecisionReqLimitPolicyOutput() CCPolicyV2CcPrecisionReqLimitPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) ToCCPolicyV2CcPrecisionReqLimitPolicyOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitPolicyOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) string { return v.Action }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) *string { return v.Cookie }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) ExecuteDuration() pulumi.IntOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) int { return v.ExecuteDuration }).(pulumi.IntOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) int { return v.Period }).(pulumi.IntOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) RequestNum() pulumi.IntOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) int { return v.RequestNum }).(pulumi.IntOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CCPolicyV2CcPrecisionReqLimitPolicy) *string { return v.UserAgent }).(pulumi.StringPtrOutput)
}

type CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2CcPrecisionReqLimitPolicy)(nil)).Elem()
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput) ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutput() CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput) ToCCPolicyV2CcPrecisionReqLimitPolicyArrayOutputWithContext(ctx context.Context) CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput {
	return o
}

func (o CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput) Index(i pulumi.IntInput) CCPolicyV2CcPrecisionReqLimitPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2CcPrecisionReqLimitPolicy {
		return vs[0].([]CCPolicyV2CcPrecisionReqLimitPolicy)[vs[1].(int)]
	}).(CCPolicyV2CcPrecisionReqLimitPolicyOutput)
}

type CCPolicyV2Threshold struct {
	Domain    string `pulumi:"domain"`
	Threshold int    `pulumi:"threshold"`
}

// CCPolicyV2ThresholdInput is an input type that accepts CCPolicyV2ThresholdArgs and CCPolicyV2ThresholdOutput values.
// You can construct a concrete instance of `CCPolicyV2ThresholdInput` via:
//
//          CCPolicyV2ThresholdArgs{...}
type CCPolicyV2ThresholdInput interface {
	pulumi.Input

	ToCCPolicyV2ThresholdOutput() CCPolicyV2ThresholdOutput
	ToCCPolicyV2ThresholdOutputWithContext(context.Context) CCPolicyV2ThresholdOutput
}

type CCPolicyV2ThresholdArgs struct {
	Domain    pulumi.StringInput `pulumi:"domain"`
	Threshold pulumi.IntInput    `pulumi:"threshold"`
}

func (CCPolicyV2ThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2Threshold)(nil)).Elem()
}

func (i CCPolicyV2ThresholdArgs) ToCCPolicyV2ThresholdOutput() CCPolicyV2ThresholdOutput {
	return i.ToCCPolicyV2ThresholdOutputWithContext(context.Background())
}

func (i CCPolicyV2ThresholdArgs) ToCCPolicyV2ThresholdOutputWithContext(ctx context.Context) CCPolicyV2ThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2ThresholdOutput)
}

// CCPolicyV2ThresholdArrayInput is an input type that accepts CCPolicyV2ThresholdArray and CCPolicyV2ThresholdArrayOutput values.
// You can construct a concrete instance of `CCPolicyV2ThresholdArrayInput` via:
//
//          CCPolicyV2ThresholdArray{ CCPolicyV2ThresholdArgs{...} }
type CCPolicyV2ThresholdArrayInput interface {
	pulumi.Input

	ToCCPolicyV2ThresholdArrayOutput() CCPolicyV2ThresholdArrayOutput
	ToCCPolicyV2ThresholdArrayOutputWithContext(context.Context) CCPolicyV2ThresholdArrayOutput
}

type CCPolicyV2ThresholdArray []CCPolicyV2ThresholdInput

func (CCPolicyV2ThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2Threshold)(nil)).Elem()
}

func (i CCPolicyV2ThresholdArray) ToCCPolicyV2ThresholdArrayOutput() CCPolicyV2ThresholdArrayOutput {
	return i.ToCCPolicyV2ThresholdArrayOutputWithContext(context.Background())
}

func (i CCPolicyV2ThresholdArray) ToCCPolicyV2ThresholdArrayOutputWithContext(ctx context.Context) CCPolicyV2ThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CCPolicyV2ThresholdArrayOutput)
}

type CCPolicyV2ThresholdOutput struct{ *pulumi.OutputState }

func (CCPolicyV2ThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CCPolicyV2Threshold)(nil)).Elem()
}

func (o CCPolicyV2ThresholdOutput) ToCCPolicyV2ThresholdOutput() CCPolicyV2ThresholdOutput {
	return o
}

func (o CCPolicyV2ThresholdOutput) ToCCPolicyV2ThresholdOutputWithContext(ctx context.Context) CCPolicyV2ThresholdOutput {
	return o
}

func (o CCPolicyV2ThresholdOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CCPolicyV2Threshold) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CCPolicyV2ThresholdOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v CCPolicyV2Threshold) int { return v.Threshold }).(pulumi.IntOutput)
}

type CCPolicyV2ThresholdArrayOutput struct{ *pulumi.OutputState }

func (CCPolicyV2ThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CCPolicyV2Threshold)(nil)).Elem()
}

func (o CCPolicyV2ThresholdArrayOutput) ToCCPolicyV2ThresholdArrayOutput() CCPolicyV2ThresholdArrayOutput {
	return o
}

func (o CCPolicyV2ThresholdArrayOutput) ToCCPolicyV2ThresholdArrayOutputWithContext(ctx context.Context) CCPolicyV2ThresholdArrayOutput {
	return o
}

func (o CCPolicyV2ThresholdArrayOutput) Index(i pulumi.IntInput) CCPolicyV2ThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CCPolicyV2Threshold {
		return vs[0].([]CCPolicyV2Threshold)[vs[1].(int)]
	}).(CCPolicyV2ThresholdOutput)
}

type DdosPoliciesList struct {
	BlackIps         []string                          `pulumi:"blackIps"`
	CreateTime       string                            `pulumi:"createTime"`
	DropOptions      []DdosPoliciesListDropOption      `pulumi:"dropOptions"`
	Name             string                            `pulumi:"name"`
	PacketFilters    []DdosPoliciesListPacketFilter    `pulumi:"packetFilters"`
	PolicyId         string                            `pulumi:"policyId"`
	PortFilters      []DdosPoliciesListPortFilter      `pulumi:"portFilters"`
	SceneId          string                            `pulumi:"sceneId"`
	WatermarkFilters []DdosPoliciesListWatermarkFilter `pulumi:"watermarkFilters"`
	WatermarkKeys    []DdosPoliciesListWatermarkKey    `pulumi:"watermarkKeys"`
	WhiteIps         []string                          `pulumi:"whiteIps"`
}

// DdosPoliciesListInput is an input type that accepts DdosPoliciesListArgs and DdosPoliciesListOutput values.
// You can construct a concrete instance of `DdosPoliciesListInput` via:
//
//          DdosPoliciesListArgs{...}
type DdosPoliciesListInput interface {
	pulumi.Input

	ToDdosPoliciesListOutput() DdosPoliciesListOutput
	ToDdosPoliciesListOutputWithContext(context.Context) DdosPoliciesListOutput
}

type DdosPoliciesListArgs struct {
	BlackIps         pulumi.StringArrayInput                   `pulumi:"blackIps"`
	CreateTime       pulumi.StringInput                        `pulumi:"createTime"`
	DropOptions      DdosPoliciesListDropOptionArrayInput      `pulumi:"dropOptions"`
	Name             pulumi.StringInput                        `pulumi:"name"`
	PacketFilters    DdosPoliciesListPacketFilterArrayInput    `pulumi:"packetFilters"`
	PolicyId         pulumi.StringInput                        `pulumi:"policyId"`
	PortFilters      DdosPoliciesListPortFilterArrayInput      `pulumi:"portFilters"`
	SceneId          pulumi.StringInput                        `pulumi:"sceneId"`
	WatermarkFilters DdosPoliciesListWatermarkFilterArrayInput `pulumi:"watermarkFilters"`
	WatermarkKeys    DdosPoliciesListWatermarkKeyArrayInput    `pulumi:"watermarkKeys"`
	WhiteIps         pulumi.StringArrayInput                   `pulumi:"whiteIps"`
}

func (DdosPoliciesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesList)(nil)).Elem()
}

func (i DdosPoliciesListArgs) ToDdosPoliciesListOutput() DdosPoliciesListOutput {
	return i.ToDdosPoliciesListOutputWithContext(context.Background())
}

func (i DdosPoliciesListArgs) ToDdosPoliciesListOutputWithContext(ctx context.Context) DdosPoliciesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListOutput)
}

// DdosPoliciesListArrayInput is an input type that accepts DdosPoliciesListArray and DdosPoliciesListArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListArrayInput` via:
//
//          DdosPoliciesListArray{ DdosPoliciesListArgs{...} }
type DdosPoliciesListArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListArrayOutput() DdosPoliciesListArrayOutput
	ToDdosPoliciesListArrayOutputWithContext(context.Context) DdosPoliciesListArrayOutput
}

type DdosPoliciesListArray []DdosPoliciesListInput

func (DdosPoliciesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesList)(nil)).Elem()
}

func (i DdosPoliciesListArray) ToDdosPoliciesListArrayOutput() DdosPoliciesListArrayOutput {
	return i.ToDdosPoliciesListArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListArray) ToDdosPoliciesListArrayOutputWithContext(ctx context.Context) DdosPoliciesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListArrayOutput)
}

type DdosPoliciesListOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesList)(nil)).Elem()
}

func (o DdosPoliciesListOutput) ToDdosPoliciesListOutput() DdosPoliciesListOutput {
	return o
}

func (o DdosPoliciesListOutput) ToDdosPoliciesListOutputWithContext(ctx context.Context) DdosPoliciesListOutput {
	return o
}

func (o DdosPoliciesListOutput) BlackIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []string { return v.BlackIps }).(pulumi.StringArrayOutput)
}

func (o DdosPoliciesListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DdosPoliciesListOutput) DropOptions() DdosPoliciesListDropOptionArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []DdosPoliciesListDropOption { return v.DropOptions }).(DdosPoliciesListDropOptionArrayOutput)
}

func (o DdosPoliciesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o DdosPoliciesListOutput) PacketFilters() DdosPoliciesListPacketFilterArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []DdosPoliciesListPacketFilter { return v.PacketFilters }).(DdosPoliciesListPacketFilterArrayOutput)
}

func (o DdosPoliciesListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o DdosPoliciesListOutput) PortFilters() DdosPoliciesListPortFilterArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []DdosPoliciesListPortFilter { return v.PortFilters }).(DdosPoliciesListPortFilterArrayOutput)
}

func (o DdosPoliciesListOutput) SceneId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesList) string { return v.SceneId }).(pulumi.StringOutput)
}

func (o DdosPoliciesListOutput) WatermarkFilters() DdosPoliciesListWatermarkFilterArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []DdosPoliciesListWatermarkFilter { return v.WatermarkFilters }).(DdosPoliciesListWatermarkFilterArrayOutput)
}

func (o DdosPoliciesListOutput) WatermarkKeys() DdosPoliciesListWatermarkKeyArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []DdosPoliciesListWatermarkKey { return v.WatermarkKeys }).(DdosPoliciesListWatermarkKeyArrayOutput)
}

func (o DdosPoliciesListOutput) WhiteIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPoliciesList) []string { return v.WhiteIps }).(pulumi.StringArrayOutput)
}

type DdosPoliciesListArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesList)(nil)).Elem()
}

func (o DdosPoliciesListArrayOutput) ToDdosPoliciesListArrayOutput() DdosPoliciesListArrayOutput {
	return o
}

func (o DdosPoliciesListArrayOutput) ToDdosPoliciesListArrayOutputWithContext(ctx context.Context) DdosPoliciesListArrayOutput {
	return o
}

func (o DdosPoliciesListArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesList {
		return vs[0].([]DdosPoliciesList)[vs[1].(int)]
	}).(DdosPoliciesListOutput)
}

type DdosPoliciesListDropOption struct {
	BadConnThreshold int  `pulumi:"badConnThreshold"`
	CheckSyncConn    bool `pulumi:"checkSyncConn"`
	ConnTimeout      int  `pulumi:"connTimeout"`
	DConnLimit       int  `pulumi:"dConnLimit"`
	DNewLimit        int  `pulumi:"dNewLimit"`
	DropAbroad       bool `pulumi:"dropAbroad"`
	DropIcmp         bool `pulumi:"dropIcmp"`
	DropOther        bool `pulumi:"dropOther"`
	DropTcp          bool `pulumi:"dropTcp"`
	DropUdp          bool `pulumi:"dropUdp"`
	IcmpMbpsLimit    int  `pulumi:"icmpMbpsLimit"`
	NullConnEnable   bool `pulumi:"nullConnEnable"`
	OtherMbpsLimit   int  `pulumi:"otherMbpsLimit"`
	SConnLimit       int  `pulumi:"sConnLimit"`
	SNewLimit        int  `pulumi:"sNewLimit"`
	SynLimit         int  `pulumi:"synLimit"`
	SynRate          int  `pulumi:"synRate"`
	TcpMbpsLimit     int  `pulumi:"tcpMbpsLimit"`
	UdpMbpsLimit     int  `pulumi:"udpMbpsLimit"`
}

// DdosPoliciesListDropOptionInput is an input type that accepts DdosPoliciesListDropOptionArgs and DdosPoliciesListDropOptionOutput values.
// You can construct a concrete instance of `DdosPoliciesListDropOptionInput` via:
//
//          DdosPoliciesListDropOptionArgs{...}
type DdosPoliciesListDropOptionInput interface {
	pulumi.Input

	ToDdosPoliciesListDropOptionOutput() DdosPoliciesListDropOptionOutput
	ToDdosPoliciesListDropOptionOutputWithContext(context.Context) DdosPoliciesListDropOptionOutput
}

type DdosPoliciesListDropOptionArgs struct {
	BadConnThreshold pulumi.IntInput  `pulumi:"badConnThreshold"`
	CheckSyncConn    pulumi.BoolInput `pulumi:"checkSyncConn"`
	ConnTimeout      pulumi.IntInput  `pulumi:"connTimeout"`
	DConnLimit       pulumi.IntInput  `pulumi:"dConnLimit"`
	DNewLimit        pulumi.IntInput  `pulumi:"dNewLimit"`
	DropAbroad       pulumi.BoolInput `pulumi:"dropAbroad"`
	DropIcmp         pulumi.BoolInput `pulumi:"dropIcmp"`
	DropOther        pulumi.BoolInput `pulumi:"dropOther"`
	DropTcp          pulumi.BoolInput `pulumi:"dropTcp"`
	DropUdp          pulumi.BoolInput `pulumi:"dropUdp"`
	IcmpMbpsLimit    pulumi.IntInput  `pulumi:"icmpMbpsLimit"`
	NullConnEnable   pulumi.BoolInput `pulumi:"nullConnEnable"`
	OtherMbpsLimit   pulumi.IntInput  `pulumi:"otherMbpsLimit"`
	SConnLimit       pulumi.IntInput  `pulumi:"sConnLimit"`
	SNewLimit        pulumi.IntInput  `pulumi:"sNewLimit"`
	SynLimit         pulumi.IntInput  `pulumi:"synLimit"`
	SynRate          pulumi.IntInput  `pulumi:"synRate"`
	TcpMbpsLimit     pulumi.IntInput  `pulumi:"tcpMbpsLimit"`
	UdpMbpsLimit     pulumi.IntInput  `pulumi:"udpMbpsLimit"`
}

func (DdosPoliciesListDropOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListDropOption)(nil)).Elem()
}

func (i DdosPoliciesListDropOptionArgs) ToDdosPoliciesListDropOptionOutput() DdosPoliciesListDropOptionOutput {
	return i.ToDdosPoliciesListDropOptionOutputWithContext(context.Background())
}

func (i DdosPoliciesListDropOptionArgs) ToDdosPoliciesListDropOptionOutputWithContext(ctx context.Context) DdosPoliciesListDropOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListDropOptionOutput)
}

// DdosPoliciesListDropOptionArrayInput is an input type that accepts DdosPoliciesListDropOptionArray and DdosPoliciesListDropOptionArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListDropOptionArrayInput` via:
//
//          DdosPoliciesListDropOptionArray{ DdosPoliciesListDropOptionArgs{...} }
type DdosPoliciesListDropOptionArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListDropOptionArrayOutput() DdosPoliciesListDropOptionArrayOutput
	ToDdosPoliciesListDropOptionArrayOutputWithContext(context.Context) DdosPoliciesListDropOptionArrayOutput
}

type DdosPoliciesListDropOptionArray []DdosPoliciesListDropOptionInput

func (DdosPoliciesListDropOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListDropOption)(nil)).Elem()
}

func (i DdosPoliciesListDropOptionArray) ToDdosPoliciesListDropOptionArrayOutput() DdosPoliciesListDropOptionArrayOutput {
	return i.ToDdosPoliciesListDropOptionArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListDropOptionArray) ToDdosPoliciesListDropOptionArrayOutputWithContext(ctx context.Context) DdosPoliciesListDropOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListDropOptionArrayOutput)
}

type DdosPoliciesListDropOptionOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListDropOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListDropOption)(nil)).Elem()
}

func (o DdosPoliciesListDropOptionOutput) ToDdosPoliciesListDropOptionOutput() DdosPoliciesListDropOptionOutput {
	return o
}

func (o DdosPoliciesListDropOptionOutput) ToDdosPoliciesListDropOptionOutputWithContext(ctx context.Context) DdosPoliciesListDropOptionOutput {
	return o
}

func (o DdosPoliciesListDropOptionOutput) BadConnThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.BadConnThreshold }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) CheckSyncConn() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.CheckSyncConn }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.ConnTimeout }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) DConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.DConnLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) DNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.DNewLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) DropAbroad() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.DropAbroad }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) DropIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.DropIcmp }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) DropOther() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.DropOther }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) DropTcp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.DropTcp }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) DropUdp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.DropUdp }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) IcmpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.IcmpMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) NullConnEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) bool { return v.NullConnEnable }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListDropOptionOutput) OtherMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.OtherMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) SConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.SConnLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) SNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.SNewLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) SynLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.SynLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) SynRate() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.SynRate }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) TcpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.TcpMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPoliciesListDropOptionOutput) UdpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListDropOption) int { return v.UdpMbpsLimit }).(pulumi.IntOutput)
}

type DdosPoliciesListDropOptionArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListDropOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListDropOption)(nil)).Elem()
}

func (o DdosPoliciesListDropOptionArrayOutput) ToDdosPoliciesListDropOptionArrayOutput() DdosPoliciesListDropOptionArrayOutput {
	return o
}

func (o DdosPoliciesListDropOptionArrayOutput) ToDdosPoliciesListDropOptionArrayOutputWithContext(ctx context.Context) DdosPoliciesListDropOptionArrayOutput {
	return o
}

func (o DdosPoliciesListDropOptionArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListDropOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesListDropOption {
		return vs[0].([]DdosPoliciesListDropOption)[vs[1].(int)]
	}).(DdosPoliciesListDropOptionOutput)
}

type DdosPoliciesListPacketFilter struct {
	Action       string `pulumi:"action"`
	DEndPort     int    `pulumi:"dEndPort"`
	DStartPort   int    `pulumi:"dStartPort"`
	Depth        int    `pulumi:"depth"`
	IsInclude    bool   `pulumi:"isInclude"`
	MatchBegin   string `pulumi:"matchBegin"`
	MatchStr     string `pulumi:"matchStr"`
	MatchType    string `pulumi:"matchType"`
	Offset       int    `pulumi:"offset"`
	PktLengthMax int    `pulumi:"pktLengthMax"`
	PktLengthMin int    `pulumi:"pktLengthMin"`
	Protocol     string `pulumi:"protocol"`
	SEndPort     int    `pulumi:"sEndPort"`
	SStartPort   int    `pulumi:"sStartPort"`
}

// DdosPoliciesListPacketFilterInput is an input type that accepts DdosPoliciesListPacketFilterArgs and DdosPoliciesListPacketFilterOutput values.
// You can construct a concrete instance of `DdosPoliciesListPacketFilterInput` via:
//
//          DdosPoliciesListPacketFilterArgs{...}
type DdosPoliciesListPacketFilterInput interface {
	pulumi.Input

	ToDdosPoliciesListPacketFilterOutput() DdosPoliciesListPacketFilterOutput
	ToDdosPoliciesListPacketFilterOutputWithContext(context.Context) DdosPoliciesListPacketFilterOutput
}

type DdosPoliciesListPacketFilterArgs struct {
	Action       pulumi.StringInput `pulumi:"action"`
	DEndPort     pulumi.IntInput    `pulumi:"dEndPort"`
	DStartPort   pulumi.IntInput    `pulumi:"dStartPort"`
	Depth        pulumi.IntInput    `pulumi:"depth"`
	IsInclude    pulumi.BoolInput   `pulumi:"isInclude"`
	MatchBegin   pulumi.StringInput `pulumi:"matchBegin"`
	MatchStr     pulumi.StringInput `pulumi:"matchStr"`
	MatchType    pulumi.StringInput `pulumi:"matchType"`
	Offset       pulumi.IntInput    `pulumi:"offset"`
	PktLengthMax pulumi.IntInput    `pulumi:"pktLengthMax"`
	PktLengthMin pulumi.IntInput    `pulumi:"pktLengthMin"`
	Protocol     pulumi.StringInput `pulumi:"protocol"`
	SEndPort     pulumi.IntInput    `pulumi:"sEndPort"`
	SStartPort   pulumi.IntInput    `pulumi:"sStartPort"`
}

func (DdosPoliciesListPacketFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListPacketFilter)(nil)).Elem()
}

func (i DdosPoliciesListPacketFilterArgs) ToDdosPoliciesListPacketFilterOutput() DdosPoliciesListPacketFilterOutput {
	return i.ToDdosPoliciesListPacketFilterOutputWithContext(context.Background())
}

func (i DdosPoliciesListPacketFilterArgs) ToDdosPoliciesListPacketFilterOutputWithContext(ctx context.Context) DdosPoliciesListPacketFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListPacketFilterOutput)
}

// DdosPoliciesListPacketFilterArrayInput is an input type that accepts DdosPoliciesListPacketFilterArray and DdosPoliciesListPacketFilterArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListPacketFilterArrayInput` via:
//
//          DdosPoliciesListPacketFilterArray{ DdosPoliciesListPacketFilterArgs{...} }
type DdosPoliciesListPacketFilterArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListPacketFilterArrayOutput() DdosPoliciesListPacketFilterArrayOutput
	ToDdosPoliciesListPacketFilterArrayOutputWithContext(context.Context) DdosPoliciesListPacketFilterArrayOutput
}

type DdosPoliciesListPacketFilterArray []DdosPoliciesListPacketFilterInput

func (DdosPoliciesListPacketFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListPacketFilter)(nil)).Elem()
}

func (i DdosPoliciesListPacketFilterArray) ToDdosPoliciesListPacketFilterArrayOutput() DdosPoliciesListPacketFilterArrayOutput {
	return i.ToDdosPoliciesListPacketFilterArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListPacketFilterArray) ToDdosPoliciesListPacketFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListPacketFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListPacketFilterArrayOutput)
}

type DdosPoliciesListPacketFilterOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListPacketFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListPacketFilter)(nil)).Elem()
}

func (o DdosPoliciesListPacketFilterOutput) ToDdosPoliciesListPacketFilterOutput() DdosPoliciesListPacketFilterOutput {
	return o
}

func (o DdosPoliciesListPacketFilterOutput) ToDdosPoliciesListPacketFilterOutputWithContext(ctx context.Context) DdosPoliciesListPacketFilterOutput {
	return o
}

func (o DdosPoliciesListPacketFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) string { return v.Action }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPacketFilterOutput) DEndPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.DEndPort }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) DStartPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.DStartPort }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) Depth() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.Depth }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) IsInclude() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) bool { return v.IsInclude }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListPacketFilterOutput) MatchBegin() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) string { return v.MatchBegin }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPacketFilterOutput) MatchStr() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) string { return v.MatchStr }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPacketFilterOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPacketFilterOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.Offset }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) PktLengthMax() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.PktLengthMax }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) PktLengthMin() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.PktLengthMin }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPacketFilterOutput) SEndPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.SEndPort }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPacketFilterOutput) SStartPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPacketFilter) int { return v.SStartPort }).(pulumi.IntOutput)
}

type DdosPoliciesListPacketFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListPacketFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListPacketFilter)(nil)).Elem()
}

func (o DdosPoliciesListPacketFilterArrayOutput) ToDdosPoliciesListPacketFilterArrayOutput() DdosPoliciesListPacketFilterArrayOutput {
	return o
}

func (o DdosPoliciesListPacketFilterArrayOutput) ToDdosPoliciesListPacketFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListPacketFilterArrayOutput {
	return o
}

func (o DdosPoliciesListPacketFilterArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListPacketFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesListPacketFilter {
		return vs[0].([]DdosPoliciesListPacketFilter)[vs[1].(int)]
	}).(DdosPoliciesListPacketFilterOutput)
}

type DdosPoliciesListPortFilter struct {
	Action    string `pulumi:"action"`
	EndPort   int    `pulumi:"endPort"`
	Kind      int    `pulumi:"kind"`
	Protocol  string `pulumi:"protocol"`
	StartPort int    `pulumi:"startPort"`
}

// DdosPoliciesListPortFilterInput is an input type that accepts DdosPoliciesListPortFilterArgs and DdosPoliciesListPortFilterOutput values.
// You can construct a concrete instance of `DdosPoliciesListPortFilterInput` via:
//
//          DdosPoliciesListPortFilterArgs{...}
type DdosPoliciesListPortFilterInput interface {
	pulumi.Input

	ToDdosPoliciesListPortFilterOutput() DdosPoliciesListPortFilterOutput
	ToDdosPoliciesListPortFilterOutputWithContext(context.Context) DdosPoliciesListPortFilterOutput
}

type DdosPoliciesListPortFilterArgs struct {
	Action    pulumi.StringInput `pulumi:"action"`
	EndPort   pulumi.IntInput    `pulumi:"endPort"`
	Kind      pulumi.IntInput    `pulumi:"kind"`
	Protocol  pulumi.StringInput `pulumi:"protocol"`
	StartPort pulumi.IntInput    `pulumi:"startPort"`
}

func (DdosPoliciesListPortFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListPortFilter)(nil)).Elem()
}

func (i DdosPoliciesListPortFilterArgs) ToDdosPoliciesListPortFilterOutput() DdosPoliciesListPortFilterOutput {
	return i.ToDdosPoliciesListPortFilterOutputWithContext(context.Background())
}

func (i DdosPoliciesListPortFilterArgs) ToDdosPoliciesListPortFilterOutputWithContext(ctx context.Context) DdosPoliciesListPortFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListPortFilterOutput)
}

// DdosPoliciesListPortFilterArrayInput is an input type that accepts DdosPoliciesListPortFilterArray and DdosPoliciesListPortFilterArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListPortFilterArrayInput` via:
//
//          DdosPoliciesListPortFilterArray{ DdosPoliciesListPortFilterArgs{...} }
type DdosPoliciesListPortFilterArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListPortFilterArrayOutput() DdosPoliciesListPortFilterArrayOutput
	ToDdosPoliciesListPortFilterArrayOutputWithContext(context.Context) DdosPoliciesListPortFilterArrayOutput
}

type DdosPoliciesListPortFilterArray []DdosPoliciesListPortFilterInput

func (DdosPoliciesListPortFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListPortFilter)(nil)).Elem()
}

func (i DdosPoliciesListPortFilterArray) ToDdosPoliciesListPortFilterArrayOutput() DdosPoliciesListPortFilterArrayOutput {
	return i.ToDdosPoliciesListPortFilterArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListPortFilterArray) ToDdosPoliciesListPortFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListPortFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListPortFilterArrayOutput)
}

type DdosPoliciesListPortFilterOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListPortFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListPortFilter)(nil)).Elem()
}

func (o DdosPoliciesListPortFilterOutput) ToDdosPoliciesListPortFilterOutput() DdosPoliciesListPortFilterOutput {
	return o
}

func (o DdosPoliciesListPortFilterOutput) ToDdosPoliciesListPortFilterOutputWithContext(ctx context.Context) DdosPoliciesListPortFilterOutput {
	return o
}

func (o DdosPoliciesListPortFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPortFilter) string { return v.Action }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPortFilterOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPortFilter) int { return v.EndPort }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPortFilterOutput) Kind() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPortFilter) int { return v.Kind }).(pulumi.IntOutput)
}

func (o DdosPoliciesListPortFilterOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListPortFilter) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DdosPoliciesListPortFilterOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListPortFilter) int { return v.StartPort }).(pulumi.IntOutput)
}

type DdosPoliciesListPortFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListPortFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListPortFilter)(nil)).Elem()
}

func (o DdosPoliciesListPortFilterArrayOutput) ToDdosPoliciesListPortFilterArrayOutput() DdosPoliciesListPortFilterArrayOutput {
	return o
}

func (o DdosPoliciesListPortFilterArrayOutput) ToDdosPoliciesListPortFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListPortFilterArrayOutput {
	return o
}

func (o DdosPoliciesListPortFilterArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListPortFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesListPortFilter {
		return vs[0].([]DdosPoliciesListPortFilter)[vs[1].(int)]
	}).(DdosPoliciesListPortFilterOutput)
}

type DdosPoliciesListWatermarkFilter struct {
	AutoRemove   bool     `pulumi:"autoRemove"`
	Offset       int      `pulumi:"offset"`
	OpenSwitch   bool     `pulumi:"openSwitch"`
	TcpPortLists []string `pulumi:"tcpPortLists"`
	UdpPortLists []string `pulumi:"udpPortLists"`
}

// DdosPoliciesListWatermarkFilterInput is an input type that accepts DdosPoliciesListWatermarkFilterArgs and DdosPoliciesListWatermarkFilterOutput values.
// You can construct a concrete instance of `DdosPoliciesListWatermarkFilterInput` via:
//
//          DdosPoliciesListWatermarkFilterArgs{...}
type DdosPoliciesListWatermarkFilterInput interface {
	pulumi.Input

	ToDdosPoliciesListWatermarkFilterOutput() DdosPoliciesListWatermarkFilterOutput
	ToDdosPoliciesListWatermarkFilterOutputWithContext(context.Context) DdosPoliciesListWatermarkFilterOutput
}

type DdosPoliciesListWatermarkFilterArgs struct {
	AutoRemove   pulumi.BoolInput        `pulumi:"autoRemove"`
	Offset       pulumi.IntInput         `pulumi:"offset"`
	OpenSwitch   pulumi.BoolInput        `pulumi:"openSwitch"`
	TcpPortLists pulumi.StringArrayInput `pulumi:"tcpPortLists"`
	UdpPortLists pulumi.StringArrayInput `pulumi:"udpPortLists"`
}

func (DdosPoliciesListWatermarkFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListWatermarkFilter)(nil)).Elem()
}

func (i DdosPoliciesListWatermarkFilterArgs) ToDdosPoliciesListWatermarkFilterOutput() DdosPoliciesListWatermarkFilterOutput {
	return i.ToDdosPoliciesListWatermarkFilterOutputWithContext(context.Background())
}

func (i DdosPoliciesListWatermarkFilterArgs) ToDdosPoliciesListWatermarkFilterOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListWatermarkFilterOutput)
}

// DdosPoliciesListWatermarkFilterArrayInput is an input type that accepts DdosPoliciesListWatermarkFilterArray and DdosPoliciesListWatermarkFilterArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListWatermarkFilterArrayInput` via:
//
//          DdosPoliciesListWatermarkFilterArray{ DdosPoliciesListWatermarkFilterArgs{...} }
type DdosPoliciesListWatermarkFilterArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListWatermarkFilterArrayOutput() DdosPoliciesListWatermarkFilterArrayOutput
	ToDdosPoliciesListWatermarkFilterArrayOutputWithContext(context.Context) DdosPoliciesListWatermarkFilterArrayOutput
}

type DdosPoliciesListWatermarkFilterArray []DdosPoliciesListWatermarkFilterInput

func (DdosPoliciesListWatermarkFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListWatermarkFilter)(nil)).Elem()
}

func (i DdosPoliciesListWatermarkFilterArray) ToDdosPoliciesListWatermarkFilterArrayOutput() DdosPoliciesListWatermarkFilterArrayOutput {
	return i.ToDdosPoliciesListWatermarkFilterArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListWatermarkFilterArray) ToDdosPoliciesListWatermarkFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListWatermarkFilterArrayOutput)
}

type DdosPoliciesListWatermarkFilterOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListWatermarkFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListWatermarkFilter)(nil)).Elem()
}

func (o DdosPoliciesListWatermarkFilterOutput) ToDdosPoliciesListWatermarkFilterOutput() DdosPoliciesListWatermarkFilterOutput {
	return o
}

func (o DdosPoliciesListWatermarkFilterOutput) ToDdosPoliciesListWatermarkFilterOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkFilterOutput {
	return o
}

func (o DdosPoliciesListWatermarkFilterOutput) AutoRemove() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkFilter) bool { return v.AutoRemove }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListWatermarkFilterOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkFilter) int { return v.Offset }).(pulumi.IntOutput)
}

func (o DdosPoliciesListWatermarkFilterOutput) OpenSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkFilter) bool { return v.OpenSwitch }).(pulumi.BoolOutput)
}

func (o DdosPoliciesListWatermarkFilterOutput) TcpPortLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkFilter) []string { return v.TcpPortLists }).(pulumi.StringArrayOutput)
}

func (o DdosPoliciesListWatermarkFilterOutput) UdpPortLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkFilter) []string { return v.UdpPortLists }).(pulumi.StringArrayOutput)
}

type DdosPoliciesListWatermarkFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListWatermarkFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListWatermarkFilter)(nil)).Elem()
}

func (o DdosPoliciesListWatermarkFilterArrayOutput) ToDdosPoliciesListWatermarkFilterArrayOutput() DdosPoliciesListWatermarkFilterArrayOutput {
	return o
}

func (o DdosPoliciesListWatermarkFilterArrayOutput) ToDdosPoliciesListWatermarkFilterArrayOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkFilterArrayOutput {
	return o
}

func (o DdosPoliciesListWatermarkFilterArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListWatermarkFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesListWatermarkFilter {
		return vs[0].([]DdosPoliciesListWatermarkFilter)[vs[1].(int)]
	}).(DdosPoliciesListWatermarkFilterOutput)
}

type DdosPoliciesListWatermarkKey struct {
	Content    string  `pulumi:"content"`
	CreateTime *string `pulumi:"createTime"`
	Id         string  `pulumi:"id"`
	OpenSwitch bool    `pulumi:"openSwitch"`
}

// DdosPoliciesListWatermarkKeyInput is an input type that accepts DdosPoliciesListWatermarkKeyArgs and DdosPoliciesListWatermarkKeyOutput values.
// You can construct a concrete instance of `DdosPoliciesListWatermarkKeyInput` via:
//
//          DdosPoliciesListWatermarkKeyArgs{...}
type DdosPoliciesListWatermarkKeyInput interface {
	pulumi.Input

	ToDdosPoliciesListWatermarkKeyOutput() DdosPoliciesListWatermarkKeyOutput
	ToDdosPoliciesListWatermarkKeyOutputWithContext(context.Context) DdosPoliciesListWatermarkKeyOutput
}

type DdosPoliciesListWatermarkKeyArgs struct {
	Content    pulumi.StringInput    `pulumi:"content"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	Id         pulumi.StringInput    `pulumi:"id"`
	OpenSwitch pulumi.BoolInput      `pulumi:"openSwitch"`
}

func (DdosPoliciesListWatermarkKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListWatermarkKey)(nil)).Elem()
}

func (i DdosPoliciesListWatermarkKeyArgs) ToDdosPoliciesListWatermarkKeyOutput() DdosPoliciesListWatermarkKeyOutput {
	return i.ToDdosPoliciesListWatermarkKeyOutputWithContext(context.Background())
}

func (i DdosPoliciesListWatermarkKeyArgs) ToDdosPoliciesListWatermarkKeyOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListWatermarkKeyOutput)
}

// DdosPoliciesListWatermarkKeyArrayInput is an input type that accepts DdosPoliciesListWatermarkKeyArray and DdosPoliciesListWatermarkKeyArrayOutput values.
// You can construct a concrete instance of `DdosPoliciesListWatermarkKeyArrayInput` via:
//
//          DdosPoliciesListWatermarkKeyArray{ DdosPoliciesListWatermarkKeyArgs{...} }
type DdosPoliciesListWatermarkKeyArrayInput interface {
	pulumi.Input

	ToDdosPoliciesListWatermarkKeyArrayOutput() DdosPoliciesListWatermarkKeyArrayOutput
	ToDdosPoliciesListWatermarkKeyArrayOutputWithContext(context.Context) DdosPoliciesListWatermarkKeyArrayOutput
}

type DdosPoliciesListWatermarkKeyArray []DdosPoliciesListWatermarkKeyInput

func (DdosPoliciesListWatermarkKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListWatermarkKey)(nil)).Elem()
}

func (i DdosPoliciesListWatermarkKeyArray) ToDdosPoliciesListWatermarkKeyArrayOutput() DdosPoliciesListWatermarkKeyArrayOutput {
	return i.ToDdosPoliciesListWatermarkKeyArrayOutputWithContext(context.Background())
}

func (i DdosPoliciesListWatermarkKeyArray) ToDdosPoliciesListWatermarkKeyArrayOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPoliciesListWatermarkKeyArrayOutput)
}

type DdosPoliciesListWatermarkKeyOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListWatermarkKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPoliciesListWatermarkKey)(nil)).Elem()
}

func (o DdosPoliciesListWatermarkKeyOutput) ToDdosPoliciesListWatermarkKeyOutput() DdosPoliciesListWatermarkKeyOutput {
	return o
}

func (o DdosPoliciesListWatermarkKeyOutput) ToDdosPoliciesListWatermarkKeyOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkKeyOutput {
	return o
}

func (o DdosPoliciesListWatermarkKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkKey) string { return v.Content }).(pulumi.StringOutput)
}

func (o DdosPoliciesListWatermarkKeyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkKey) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o DdosPoliciesListWatermarkKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkKey) string { return v.Id }).(pulumi.StringOutput)
}

func (o DdosPoliciesListWatermarkKeyOutput) OpenSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPoliciesListWatermarkKey) bool { return v.OpenSwitch }).(pulumi.BoolOutput)
}

type DdosPoliciesListWatermarkKeyArrayOutput struct{ *pulumi.OutputState }

func (DdosPoliciesListWatermarkKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPoliciesListWatermarkKey)(nil)).Elem()
}

func (o DdosPoliciesListWatermarkKeyArrayOutput) ToDdosPoliciesListWatermarkKeyArrayOutput() DdosPoliciesListWatermarkKeyArrayOutput {
	return o
}

func (o DdosPoliciesListWatermarkKeyArrayOutput) ToDdosPoliciesListWatermarkKeyArrayOutputWithContext(ctx context.Context) DdosPoliciesListWatermarkKeyArrayOutput {
	return o
}

func (o DdosPoliciesListWatermarkKeyArrayOutput) Index(i pulumi.IntInput) DdosPoliciesListWatermarkKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPoliciesListWatermarkKey {
		return vs[0].([]DdosPoliciesListWatermarkKey)[vs[1].(int)]
	}).(DdosPoliciesListWatermarkKeyOutput)
}

type DdosPolicyAttachmentsDayuDdosPolicyAttachmentList struct {
	PolicyId     string `pulumi:"policyId"`
	ResourceId   string `pulumi:"resourceId"`
	ResourceType string `pulumi:"resourceType"`
}

// DdosPolicyAttachmentsDayuDdosPolicyAttachmentListInput is an input type that accepts DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs and DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput values.
// You can construct a concrete instance of `DdosPolicyAttachmentsDayuDdosPolicyAttachmentListInput` via:
//
//          DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs{...}
type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListInput interface {
	pulumi.Input

	ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput
	ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutputWithContext(context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput
}

type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs struct {
	PolicyId     pulumi.StringInput `pulumi:"policyId"`
	ResourceId   pulumi.StringInput `pulumi:"resourceId"`
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyAttachmentsDayuDdosPolicyAttachmentList)(nil)).Elem()
}

func (i DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput {
	return i.ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutputWithContext(context.Background())
}

func (i DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutputWithContext(ctx context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput)
}

// DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayInput is an input type that accepts DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray and DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayInput` via:
//
//          DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray{ DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs{...} }
type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput
	ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutputWithContext(context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput
}

type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray []DdosPolicyAttachmentsDayuDdosPolicyAttachmentListInput

func (DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyAttachmentsDayuDdosPolicyAttachmentList)(nil)).Elem()
}

func (i DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput {
	return i.ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutputWithContext(ctx context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput)
}

type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyAttachmentsDayuDdosPolicyAttachmentList)(nil)).Elem()
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput {
	return o
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutputWithContext(ctx context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput {
	return o
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyAttachmentsDayuDdosPolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyAttachmentsDayuDdosPolicyAttachmentList) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyAttachmentsDayuDdosPolicyAttachmentList) string { return v.ResourceType }).(pulumi.StringOutput)
}

type DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyAttachmentsDayuDdosPolicyAttachmentList)(nil)).Elem()
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput() DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput {
	return o
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput) ToDdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutputWithContext(ctx context.Context) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput {
	return o
}

func (o DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyAttachmentsDayuDdosPolicyAttachmentList {
		return vs[0].([]DdosPolicyAttachmentsDayuDdosPolicyAttachmentList)[vs[1].(int)]
	}).(DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput)
}

type DdosPolicyCasesList struct {
	AppProtocols     []string `pulumi:"appProtocols"`
	AppType          string   `pulumi:"appType"`
	CreateTime       string   `pulumi:"createTime"`
	HasAbroad        string   `pulumi:"hasAbroad"`
	HasInitiateTcp   string   `pulumi:"hasInitiateTcp"`
	HasInitiateUdp   string   `pulumi:"hasInitiateUdp"`
	HasVpn           string   `pulumi:"hasVpn"`
	MaxTcpPackageLen string   `pulumi:"maxTcpPackageLen"`
	MaxUdpPackageLen string   `pulumi:"maxUdpPackageLen"`
	MinTcpPackageLen string   `pulumi:"minTcpPackageLen"`
	MinUdpPackageLen string   `pulumi:"minUdpPackageLen"`
	Name             string   `pulumi:"name"`
	PeerTcpPort      string   `pulumi:"peerTcpPort"`
	PeerUdpPort      string   `pulumi:"peerUdpPort"`
	PlatformTypes    []string `pulumi:"platformTypes"`
	ResourceType     string   `pulumi:"resourceType"`
	SceneId          string   `pulumi:"sceneId"`
	TcpEndPort       string   `pulumi:"tcpEndPort"`
	TcpFootprint     string   `pulumi:"tcpFootprint"`
	TcpStartPort     string   `pulumi:"tcpStartPort"`
	UdpEndPort       string   `pulumi:"udpEndPort"`
	UdpFootprint     string   `pulumi:"udpFootprint"`
	UdpStartPort     string   `pulumi:"udpStartPort"`
	WebApiUrls       []string `pulumi:"webApiUrls"`
}

// DdosPolicyCasesListInput is an input type that accepts DdosPolicyCasesListArgs and DdosPolicyCasesListOutput values.
// You can construct a concrete instance of `DdosPolicyCasesListInput` via:
//
//          DdosPolicyCasesListArgs{...}
type DdosPolicyCasesListInput interface {
	pulumi.Input

	ToDdosPolicyCasesListOutput() DdosPolicyCasesListOutput
	ToDdosPolicyCasesListOutputWithContext(context.Context) DdosPolicyCasesListOutput
}

type DdosPolicyCasesListArgs struct {
	AppProtocols     pulumi.StringArrayInput `pulumi:"appProtocols"`
	AppType          pulumi.StringInput      `pulumi:"appType"`
	CreateTime       pulumi.StringInput      `pulumi:"createTime"`
	HasAbroad        pulumi.StringInput      `pulumi:"hasAbroad"`
	HasInitiateTcp   pulumi.StringInput      `pulumi:"hasInitiateTcp"`
	HasInitiateUdp   pulumi.StringInput      `pulumi:"hasInitiateUdp"`
	HasVpn           pulumi.StringInput      `pulumi:"hasVpn"`
	MaxTcpPackageLen pulumi.StringInput      `pulumi:"maxTcpPackageLen"`
	MaxUdpPackageLen pulumi.StringInput      `pulumi:"maxUdpPackageLen"`
	MinTcpPackageLen pulumi.StringInput      `pulumi:"minTcpPackageLen"`
	MinUdpPackageLen pulumi.StringInput      `pulumi:"minUdpPackageLen"`
	Name             pulumi.StringInput      `pulumi:"name"`
	PeerTcpPort      pulumi.StringInput      `pulumi:"peerTcpPort"`
	PeerUdpPort      pulumi.StringInput      `pulumi:"peerUdpPort"`
	PlatformTypes    pulumi.StringArrayInput `pulumi:"platformTypes"`
	ResourceType     pulumi.StringInput      `pulumi:"resourceType"`
	SceneId          pulumi.StringInput      `pulumi:"sceneId"`
	TcpEndPort       pulumi.StringInput      `pulumi:"tcpEndPort"`
	TcpFootprint     pulumi.StringInput      `pulumi:"tcpFootprint"`
	TcpStartPort     pulumi.StringInput      `pulumi:"tcpStartPort"`
	UdpEndPort       pulumi.StringInput      `pulumi:"udpEndPort"`
	UdpFootprint     pulumi.StringInput      `pulumi:"udpFootprint"`
	UdpStartPort     pulumi.StringInput      `pulumi:"udpStartPort"`
	WebApiUrls       pulumi.StringArrayInput `pulumi:"webApiUrls"`
}

func (DdosPolicyCasesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyCasesList)(nil)).Elem()
}

func (i DdosPolicyCasesListArgs) ToDdosPolicyCasesListOutput() DdosPolicyCasesListOutput {
	return i.ToDdosPolicyCasesListOutputWithContext(context.Background())
}

func (i DdosPolicyCasesListArgs) ToDdosPolicyCasesListOutputWithContext(ctx context.Context) DdosPolicyCasesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyCasesListOutput)
}

// DdosPolicyCasesListArrayInput is an input type that accepts DdosPolicyCasesListArray and DdosPolicyCasesListArrayOutput values.
// You can construct a concrete instance of `DdosPolicyCasesListArrayInput` via:
//
//          DdosPolicyCasesListArray{ DdosPolicyCasesListArgs{...} }
type DdosPolicyCasesListArrayInput interface {
	pulumi.Input

	ToDdosPolicyCasesListArrayOutput() DdosPolicyCasesListArrayOutput
	ToDdosPolicyCasesListArrayOutputWithContext(context.Context) DdosPolicyCasesListArrayOutput
}

type DdosPolicyCasesListArray []DdosPolicyCasesListInput

func (DdosPolicyCasesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyCasesList)(nil)).Elem()
}

func (i DdosPolicyCasesListArray) ToDdosPolicyCasesListArrayOutput() DdosPolicyCasesListArrayOutput {
	return i.ToDdosPolicyCasesListArrayOutputWithContext(context.Background())
}

func (i DdosPolicyCasesListArray) ToDdosPolicyCasesListArrayOutputWithContext(ctx context.Context) DdosPolicyCasesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyCasesListArrayOutput)
}

type DdosPolicyCasesListOutput struct{ *pulumi.OutputState }

func (DdosPolicyCasesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyCasesList)(nil)).Elem()
}

func (o DdosPolicyCasesListOutput) ToDdosPolicyCasesListOutput() DdosPolicyCasesListOutput {
	return o
}

func (o DdosPolicyCasesListOutput) ToDdosPolicyCasesListOutputWithContext(ctx context.Context) DdosPolicyCasesListOutput {
	return o
}

func (o DdosPolicyCasesListOutput) AppProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) []string { return v.AppProtocols }).(pulumi.StringArrayOutput)
}

func (o DdosPolicyCasesListOutput) AppType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.AppType }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) HasAbroad() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.HasAbroad }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) HasInitiateTcp() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.HasInitiateTcp }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) HasInitiateUdp() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.HasInitiateUdp }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) HasVpn() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.HasVpn }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) MaxTcpPackageLen() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.MaxTcpPackageLen }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) MaxUdpPackageLen() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.MaxUdpPackageLen }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) MinTcpPackageLen() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.MinTcpPackageLen }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) MinUdpPackageLen() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.MinUdpPackageLen }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) PeerTcpPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.PeerTcpPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) PeerUdpPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.PeerUdpPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) PlatformTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) []string { return v.PlatformTypes }).(pulumi.StringArrayOutput)
}

func (o DdosPolicyCasesListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) SceneId() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.SceneId }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) TcpEndPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.TcpEndPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) TcpFootprint() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.TcpFootprint }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) TcpStartPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.TcpStartPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) UdpEndPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.UdpEndPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) UdpFootprint() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.UdpFootprint }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) UdpStartPort() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) string { return v.UdpStartPort }).(pulumi.StringOutput)
}

func (o DdosPolicyCasesListOutput) WebApiUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPolicyCasesList) []string { return v.WebApiUrls }).(pulumi.StringArrayOutput)
}

type DdosPolicyCasesListArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyCasesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyCasesList)(nil)).Elem()
}

func (o DdosPolicyCasesListArrayOutput) ToDdosPolicyCasesListArrayOutput() DdosPolicyCasesListArrayOutput {
	return o
}

func (o DdosPolicyCasesListArrayOutput) ToDdosPolicyCasesListArrayOutputWithContext(ctx context.Context) DdosPolicyCasesListArrayOutput {
	return o
}

func (o DdosPolicyCasesListArrayOutput) Index(i pulumi.IntInput) DdosPolicyCasesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyCasesList {
		return vs[0].([]DdosPolicyCasesList)[vs[1].(int)]
	}).(DdosPolicyCasesListOutput)
}

type DdosPolicyDropOption struct {
	BadConnThreshold int  `pulumi:"badConnThreshold"`
	CheckSyncConn    bool `pulumi:"checkSyncConn"`
	ConnTimeout      int  `pulumi:"connTimeout"`
	DConnLimit       int  `pulumi:"dConnLimit"`
	DNewLimit        int  `pulumi:"dNewLimit"`
	DropAbroad       bool `pulumi:"dropAbroad"`
	DropIcmp         bool `pulumi:"dropIcmp"`
	DropOther        bool `pulumi:"dropOther"`
	DropTcp          bool `pulumi:"dropTcp"`
	DropUdp          bool `pulumi:"dropUdp"`
	IcmpMbpsLimit    int  `pulumi:"icmpMbpsLimit"`
	NullConnEnable   bool `pulumi:"nullConnEnable"`
	OtherMbpsLimit   int  `pulumi:"otherMbpsLimit"`
	SConnLimit       int  `pulumi:"sConnLimit"`
	SNewLimit        int  `pulumi:"sNewLimit"`
	SynLimit         int  `pulumi:"synLimit"`
	SynRate          *int `pulumi:"synRate"`
	TcpMbpsLimit     int  `pulumi:"tcpMbpsLimit"`
	UdpMbpsLimit     int  `pulumi:"udpMbpsLimit"`
}

// DdosPolicyDropOptionInput is an input type that accepts DdosPolicyDropOptionArgs and DdosPolicyDropOptionOutput values.
// You can construct a concrete instance of `DdosPolicyDropOptionInput` via:
//
//          DdosPolicyDropOptionArgs{...}
type DdosPolicyDropOptionInput interface {
	pulumi.Input

	ToDdosPolicyDropOptionOutput() DdosPolicyDropOptionOutput
	ToDdosPolicyDropOptionOutputWithContext(context.Context) DdosPolicyDropOptionOutput
}

type DdosPolicyDropOptionArgs struct {
	BadConnThreshold pulumi.IntInput    `pulumi:"badConnThreshold"`
	CheckSyncConn    pulumi.BoolInput   `pulumi:"checkSyncConn"`
	ConnTimeout      pulumi.IntInput    `pulumi:"connTimeout"`
	DConnLimit       pulumi.IntInput    `pulumi:"dConnLimit"`
	DNewLimit        pulumi.IntInput    `pulumi:"dNewLimit"`
	DropAbroad       pulumi.BoolInput   `pulumi:"dropAbroad"`
	DropIcmp         pulumi.BoolInput   `pulumi:"dropIcmp"`
	DropOther        pulumi.BoolInput   `pulumi:"dropOther"`
	DropTcp          pulumi.BoolInput   `pulumi:"dropTcp"`
	DropUdp          pulumi.BoolInput   `pulumi:"dropUdp"`
	IcmpMbpsLimit    pulumi.IntInput    `pulumi:"icmpMbpsLimit"`
	NullConnEnable   pulumi.BoolInput   `pulumi:"nullConnEnable"`
	OtherMbpsLimit   pulumi.IntInput    `pulumi:"otherMbpsLimit"`
	SConnLimit       pulumi.IntInput    `pulumi:"sConnLimit"`
	SNewLimit        pulumi.IntInput    `pulumi:"sNewLimit"`
	SynLimit         pulumi.IntInput    `pulumi:"synLimit"`
	SynRate          pulumi.IntPtrInput `pulumi:"synRate"`
	TcpMbpsLimit     pulumi.IntInput    `pulumi:"tcpMbpsLimit"`
	UdpMbpsLimit     pulumi.IntInput    `pulumi:"udpMbpsLimit"`
}

func (DdosPolicyDropOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyDropOption)(nil)).Elem()
}

func (i DdosPolicyDropOptionArgs) ToDdosPolicyDropOptionOutput() DdosPolicyDropOptionOutput {
	return i.ToDdosPolicyDropOptionOutputWithContext(context.Background())
}

func (i DdosPolicyDropOptionArgs) ToDdosPolicyDropOptionOutputWithContext(ctx context.Context) DdosPolicyDropOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyDropOptionOutput)
}

// DdosPolicyDropOptionArrayInput is an input type that accepts DdosPolicyDropOptionArray and DdosPolicyDropOptionArrayOutput values.
// You can construct a concrete instance of `DdosPolicyDropOptionArrayInput` via:
//
//          DdosPolicyDropOptionArray{ DdosPolicyDropOptionArgs{...} }
type DdosPolicyDropOptionArrayInput interface {
	pulumi.Input

	ToDdosPolicyDropOptionArrayOutput() DdosPolicyDropOptionArrayOutput
	ToDdosPolicyDropOptionArrayOutputWithContext(context.Context) DdosPolicyDropOptionArrayOutput
}

type DdosPolicyDropOptionArray []DdosPolicyDropOptionInput

func (DdosPolicyDropOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyDropOption)(nil)).Elem()
}

func (i DdosPolicyDropOptionArray) ToDdosPolicyDropOptionArrayOutput() DdosPolicyDropOptionArrayOutput {
	return i.ToDdosPolicyDropOptionArrayOutputWithContext(context.Background())
}

func (i DdosPolicyDropOptionArray) ToDdosPolicyDropOptionArrayOutputWithContext(ctx context.Context) DdosPolicyDropOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyDropOptionArrayOutput)
}

type DdosPolicyDropOptionOutput struct{ *pulumi.OutputState }

func (DdosPolicyDropOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyDropOption)(nil)).Elem()
}

func (o DdosPolicyDropOptionOutput) ToDdosPolicyDropOptionOutput() DdosPolicyDropOptionOutput {
	return o
}

func (o DdosPolicyDropOptionOutput) ToDdosPolicyDropOptionOutputWithContext(ctx context.Context) DdosPolicyDropOptionOutput {
	return o
}

func (o DdosPolicyDropOptionOutput) BadConnThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.BadConnThreshold }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) CheckSyncConn() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.CheckSyncConn }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.ConnTimeout }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) DConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.DConnLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) DNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.DNewLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) DropAbroad() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.DropAbroad }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) DropIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.DropIcmp }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) DropOther() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.DropOther }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) DropTcp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.DropTcp }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) DropUdp() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.DropUdp }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) IcmpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.IcmpMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) NullConnEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) bool { return v.NullConnEnable }).(pulumi.BoolOutput)
}

func (o DdosPolicyDropOptionOutput) OtherMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.OtherMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) SConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.SConnLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) SNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.SNewLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) SynLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.SynLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) SynRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) *int { return v.SynRate }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyDropOptionOutput) TcpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.TcpMbpsLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyDropOptionOutput) UdpMbpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyDropOption) int { return v.UdpMbpsLimit }).(pulumi.IntOutput)
}

type DdosPolicyDropOptionArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyDropOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyDropOption)(nil)).Elem()
}

func (o DdosPolicyDropOptionArrayOutput) ToDdosPolicyDropOptionArrayOutput() DdosPolicyDropOptionArrayOutput {
	return o
}

func (o DdosPolicyDropOptionArrayOutput) ToDdosPolicyDropOptionArrayOutputWithContext(ctx context.Context) DdosPolicyDropOptionArrayOutput {
	return o
}

func (o DdosPolicyDropOptionArrayOutput) Index(i pulumi.IntInput) DdosPolicyDropOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyDropOption {
		return vs[0].([]DdosPolicyDropOption)[vs[1].(int)]
	}).(DdosPolicyDropOptionOutput)
}

type DdosPolicyPacketFilter struct {
	Action       *string `pulumi:"action"`
	DEndPort     *int    `pulumi:"dEndPort"`
	DStartPort   *int    `pulumi:"dStartPort"`
	Depth        *int    `pulumi:"depth"`
	IsInclude    *bool   `pulumi:"isInclude"`
	MatchBegin   *string `pulumi:"matchBegin"`
	MatchStr     *string `pulumi:"matchStr"`
	MatchType    *string `pulumi:"matchType"`
	Offset       *int    `pulumi:"offset"`
	PktLengthMax *int    `pulumi:"pktLengthMax"`
	PktLengthMin *int    `pulumi:"pktLengthMin"`
	Protocol     *string `pulumi:"protocol"`
	SEndPort     *int    `pulumi:"sEndPort"`
	SStartPort   *int    `pulumi:"sStartPort"`
}

// DdosPolicyPacketFilterInput is an input type that accepts DdosPolicyPacketFilterArgs and DdosPolicyPacketFilterOutput values.
// You can construct a concrete instance of `DdosPolicyPacketFilterInput` via:
//
//          DdosPolicyPacketFilterArgs{...}
type DdosPolicyPacketFilterInput interface {
	pulumi.Input

	ToDdosPolicyPacketFilterOutput() DdosPolicyPacketFilterOutput
	ToDdosPolicyPacketFilterOutputWithContext(context.Context) DdosPolicyPacketFilterOutput
}

type DdosPolicyPacketFilterArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	DEndPort     pulumi.IntPtrInput    `pulumi:"dEndPort"`
	DStartPort   pulumi.IntPtrInput    `pulumi:"dStartPort"`
	Depth        pulumi.IntPtrInput    `pulumi:"depth"`
	IsInclude    pulumi.BoolPtrInput   `pulumi:"isInclude"`
	MatchBegin   pulumi.StringPtrInput `pulumi:"matchBegin"`
	MatchStr     pulumi.StringPtrInput `pulumi:"matchStr"`
	MatchType    pulumi.StringPtrInput `pulumi:"matchType"`
	Offset       pulumi.IntPtrInput    `pulumi:"offset"`
	PktLengthMax pulumi.IntPtrInput    `pulumi:"pktLengthMax"`
	PktLengthMin pulumi.IntPtrInput    `pulumi:"pktLengthMin"`
	Protocol     pulumi.StringPtrInput `pulumi:"protocol"`
	SEndPort     pulumi.IntPtrInput    `pulumi:"sEndPort"`
	SStartPort   pulumi.IntPtrInput    `pulumi:"sStartPort"`
}

func (DdosPolicyPacketFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyPacketFilter)(nil)).Elem()
}

func (i DdosPolicyPacketFilterArgs) ToDdosPolicyPacketFilterOutput() DdosPolicyPacketFilterOutput {
	return i.ToDdosPolicyPacketFilterOutputWithContext(context.Background())
}

func (i DdosPolicyPacketFilterArgs) ToDdosPolicyPacketFilterOutputWithContext(ctx context.Context) DdosPolicyPacketFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyPacketFilterOutput)
}

// DdosPolicyPacketFilterArrayInput is an input type that accepts DdosPolicyPacketFilterArray and DdosPolicyPacketFilterArrayOutput values.
// You can construct a concrete instance of `DdosPolicyPacketFilterArrayInput` via:
//
//          DdosPolicyPacketFilterArray{ DdosPolicyPacketFilterArgs{...} }
type DdosPolicyPacketFilterArrayInput interface {
	pulumi.Input

	ToDdosPolicyPacketFilterArrayOutput() DdosPolicyPacketFilterArrayOutput
	ToDdosPolicyPacketFilterArrayOutputWithContext(context.Context) DdosPolicyPacketFilterArrayOutput
}

type DdosPolicyPacketFilterArray []DdosPolicyPacketFilterInput

func (DdosPolicyPacketFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyPacketFilter)(nil)).Elem()
}

func (i DdosPolicyPacketFilterArray) ToDdosPolicyPacketFilterArrayOutput() DdosPolicyPacketFilterArrayOutput {
	return i.ToDdosPolicyPacketFilterArrayOutputWithContext(context.Background())
}

func (i DdosPolicyPacketFilterArray) ToDdosPolicyPacketFilterArrayOutputWithContext(ctx context.Context) DdosPolicyPacketFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyPacketFilterArrayOutput)
}

type DdosPolicyPacketFilterOutput struct{ *pulumi.OutputState }

func (DdosPolicyPacketFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyPacketFilter)(nil)).Elem()
}

func (o DdosPolicyPacketFilterOutput) ToDdosPolicyPacketFilterOutput() DdosPolicyPacketFilterOutput {
	return o
}

func (o DdosPolicyPacketFilterOutput) ToDdosPolicyPacketFilterOutputWithContext(ctx context.Context) DdosPolicyPacketFilterOutput {
	return o
}

func (o DdosPolicyPacketFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) DEndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.DEndPort }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) DStartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.DStartPort }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) Depth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.Depth }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) IsInclude() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *bool { return v.IsInclude }).(pulumi.BoolPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) MatchBegin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *string { return v.MatchBegin }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) MatchStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *string { return v.MatchStr }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) PktLengthMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.PktLengthMax }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) PktLengthMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.PktLengthMin }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) SEndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.SEndPort }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPacketFilterOutput) SStartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPacketFilter) *int { return v.SStartPort }).(pulumi.IntPtrOutput)
}

type DdosPolicyPacketFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyPacketFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyPacketFilter)(nil)).Elem()
}

func (o DdosPolicyPacketFilterArrayOutput) ToDdosPolicyPacketFilterArrayOutput() DdosPolicyPacketFilterArrayOutput {
	return o
}

func (o DdosPolicyPacketFilterArrayOutput) ToDdosPolicyPacketFilterArrayOutputWithContext(ctx context.Context) DdosPolicyPacketFilterArrayOutput {
	return o
}

func (o DdosPolicyPacketFilterArrayOutput) Index(i pulumi.IntInput) DdosPolicyPacketFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyPacketFilter {
		return vs[0].([]DdosPolicyPacketFilter)[vs[1].(int)]
	}).(DdosPolicyPacketFilterOutput)
}

type DdosPolicyPortFilter struct {
	Action    *string `pulumi:"action"`
	EndPort   *int    `pulumi:"endPort"`
	Kind      *int    `pulumi:"kind"`
	Protocol  *string `pulumi:"protocol"`
	StartPort *int    `pulumi:"startPort"`
}

// DdosPolicyPortFilterInput is an input type that accepts DdosPolicyPortFilterArgs and DdosPolicyPortFilterOutput values.
// You can construct a concrete instance of `DdosPolicyPortFilterInput` via:
//
//          DdosPolicyPortFilterArgs{...}
type DdosPolicyPortFilterInput interface {
	pulumi.Input

	ToDdosPolicyPortFilterOutput() DdosPolicyPortFilterOutput
	ToDdosPolicyPortFilterOutputWithContext(context.Context) DdosPolicyPortFilterOutput
}

type DdosPolicyPortFilterArgs struct {
	Action    pulumi.StringPtrInput `pulumi:"action"`
	EndPort   pulumi.IntPtrInput    `pulumi:"endPort"`
	Kind      pulumi.IntPtrInput    `pulumi:"kind"`
	Protocol  pulumi.StringPtrInput `pulumi:"protocol"`
	StartPort pulumi.IntPtrInput    `pulumi:"startPort"`
}

func (DdosPolicyPortFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyPortFilter)(nil)).Elem()
}

func (i DdosPolicyPortFilterArgs) ToDdosPolicyPortFilterOutput() DdosPolicyPortFilterOutput {
	return i.ToDdosPolicyPortFilterOutputWithContext(context.Background())
}

func (i DdosPolicyPortFilterArgs) ToDdosPolicyPortFilterOutputWithContext(ctx context.Context) DdosPolicyPortFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyPortFilterOutput)
}

// DdosPolicyPortFilterArrayInput is an input type that accepts DdosPolicyPortFilterArray and DdosPolicyPortFilterArrayOutput values.
// You can construct a concrete instance of `DdosPolicyPortFilterArrayInput` via:
//
//          DdosPolicyPortFilterArray{ DdosPolicyPortFilterArgs{...} }
type DdosPolicyPortFilterArrayInput interface {
	pulumi.Input

	ToDdosPolicyPortFilterArrayOutput() DdosPolicyPortFilterArrayOutput
	ToDdosPolicyPortFilterArrayOutputWithContext(context.Context) DdosPolicyPortFilterArrayOutput
}

type DdosPolicyPortFilterArray []DdosPolicyPortFilterInput

func (DdosPolicyPortFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyPortFilter)(nil)).Elem()
}

func (i DdosPolicyPortFilterArray) ToDdosPolicyPortFilterArrayOutput() DdosPolicyPortFilterArrayOutput {
	return i.ToDdosPolicyPortFilterArrayOutputWithContext(context.Background())
}

func (i DdosPolicyPortFilterArray) ToDdosPolicyPortFilterArrayOutputWithContext(ctx context.Context) DdosPolicyPortFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyPortFilterArrayOutput)
}

type DdosPolicyPortFilterOutput struct{ *pulumi.OutputState }

func (DdosPolicyPortFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyPortFilter)(nil)).Elem()
}

func (o DdosPolicyPortFilterOutput) ToDdosPolicyPortFilterOutput() DdosPolicyPortFilterOutput {
	return o
}

func (o DdosPolicyPortFilterOutput) ToDdosPolicyPortFilterOutputWithContext(ctx context.Context) DdosPolicyPortFilterOutput {
	return o
}

func (o DdosPolicyPortFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPortFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPortFilterOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPortFilter) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPortFilterOutput) Kind() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPortFilter) *int { return v.Kind }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyPortFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyPortFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyPortFilterOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyPortFilter) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type DdosPolicyPortFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyPortFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyPortFilter)(nil)).Elem()
}

func (o DdosPolicyPortFilterArrayOutput) ToDdosPolicyPortFilterArrayOutput() DdosPolicyPortFilterArrayOutput {
	return o
}

func (o DdosPolicyPortFilterArrayOutput) ToDdosPolicyPortFilterArrayOutputWithContext(ctx context.Context) DdosPolicyPortFilterArrayOutput {
	return o
}

func (o DdosPolicyPortFilterArrayOutput) Index(i pulumi.IntInput) DdosPolicyPortFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyPortFilter {
		return vs[0].([]DdosPolicyPortFilter)[vs[1].(int)]
	}).(DdosPolicyPortFilterOutput)
}

type DdosPolicyV2Acl struct {
	Action          string `pulumi:"action"`
	DPortEnd        int    `pulumi:"dPortEnd"`
	DPortStart      int    `pulumi:"dPortStart"`
	ForwardProtocol string `pulumi:"forwardProtocol"`
	Priority        int    `pulumi:"priority"`
	SPortEnd        int    `pulumi:"sPortEnd"`
	SPortStart      int    `pulumi:"sPortStart"`
}

// DdosPolicyV2AclInput is an input type that accepts DdosPolicyV2AclArgs and DdosPolicyV2AclOutput values.
// You can construct a concrete instance of `DdosPolicyV2AclInput` via:
//
//          DdosPolicyV2AclArgs{...}
type DdosPolicyV2AclInput interface {
	pulumi.Input

	ToDdosPolicyV2AclOutput() DdosPolicyV2AclOutput
	ToDdosPolicyV2AclOutputWithContext(context.Context) DdosPolicyV2AclOutput
}

type DdosPolicyV2AclArgs struct {
	Action          pulumi.StringInput `pulumi:"action"`
	DPortEnd        pulumi.IntInput    `pulumi:"dPortEnd"`
	DPortStart      pulumi.IntInput    `pulumi:"dPortStart"`
	ForwardProtocol pulumi.StringInput `pulumi:"forwardProtocol"`
	Priority        pulumi.IntInput    `pulumi:"priority"`
	SPortEnd        pulumi.IntInput    `pulumi:"sPortEnd"`
	SPortStart      pulumi.IntInput    `pulumi:"sPortStart"`
}

func (DdosPolicyV2AclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2Acl)(nil)).Elem()
}

func (i DdosPolicyV2AclArgs) ToDdosPolicyV2AclOutput() DdosPolicyV2AclOutput {
	return i.ToDdosPolicyV2AclOutputWithContext(context.Background())
}

func (i DdosPolicyV2AclArgs) ToDdosPolicyV2AclOutputWithContext(ctx context.Context) DdosPolicyV2AclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2AclOutput)
}

// DdosPolicyV2AclArrayInput is an input type that accepts DdosPolicyV2AclArray and DdosPolicyV2AclArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2AclArrayInput` via:
//
//          DdosPolicyV2AclArray{ DdosPolicyV2AclArgs{...} }
type DdosPolicyV2AclArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2AclArrayOutput() DdosPolicyV2AclArrayOutput
	ToDdosPolicyV2AclArrayOutputWithContext(context.Context) DdosPolicyV2AclArrayOutput
}

type DdosPolicyV2AclArray []DdosPolicyV2AclInput

func (DdosPolicyV2AclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2Acl)(nil)).Elem()
}

func (i DdosPolicyV2AclArray) ToDdosPolicyV2AclArrayOutput() DdosPolicyV2AclArrayOutput {
	return i.ToDdosPolicyV2AclArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2AclArray) ToDdosPolicyV2AclArrayOutputWithContext(ctx context.Context) DdosPolicyV2AclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2AclArrayOutput)
}

type DdosPolicyV2AclOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2AclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2Acl)(nil)).Elem()
}

func (o DdosPolicyV2AclOutput) ToDdosPolicyV2AclOutput() DdosPolicyV2AclOutput {
	return o
}

func (o DdosPolicyV2AclOutput) ToDdosPolicyV2AclOutputWithContext(ctx context.Context) DdosPolicyV2AclOutput {
	return o
}

func (o DdosPolicyV2AclOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) string { return v.Action }).(pulumi.StringOutput)
}

func (o DdosPolicyV2AclOutput) DPortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) int { return v.DPortEnd }).(pulumi.IntOutput)
}

func (o DdosPolicyV2AclOutput) DPortStart() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) int { return v.DPortStart }).(pulumi.IntOutput)
}

func (o DdosPolicyV2AclOutput) ForwardProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) string { return v.ForwardProtocol }).(pulumi.StringOutput)
}

func (o DdosPolicyV2AclOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) int { return v.Priority }).(pulumi.IntOutput)
}

func (o DdosPolicyV2AclOutput) SPortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) int { return v.SPortEnd }).(pulumi.IntOutput)
}

func (o DdosPolicyV2AclOutput) SPortStart() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2Acl) int { return v.SPortStart }).(pulumi.IntOutput)
}

type DdosPolicyV2AclArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2AclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2Acl)(nil)).Elem()
}

func (o DdosPolicyV2AclArrayOutput) ToDdosPolicyV2AclArrayOutput() DdosPolicyV2AclArrayOutput {
	return o
}

func (o DdosPolicyV2AclArrayOutput) ToDdosPolicyV2AclArrayOutputWithContext(ctx context.Context) DdosPolicyV2AclArrayOutput {
	return o
}

func (o DdosPolicyV2AclArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2AclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2Acl {
		return vs[0].([]DdosPolicyV2Acl)[vs[1].(int)]
	}).(DdosPolicyV2AclOutput)
}

type DdosPolicyV2BlackWhiteIp struct {
	Ip     string `pulumi:"ip"`
	IpType string `pulumi:"ipType"`
}

// DdosPolicyV2BlackWhiteIpInput is an input type that accepts DdosPolicyV2BlackWhiteIpArgs and DdosPolicyV2BlackWhiteIpOutput values.
// You can construct a concrete instance of `DdosPolicyV2BlackWhiteIpInput` via:
//
//          DdosPolicyV2BlackWhiteIpArgs{...}
type DdosPolicyV2BlackWhiteIpInput interface {
	pulumi.Input

	ToDdosPolicyV2BlackWhiteIpOutput() DdosPolicyV2BlackWhiteIpOutput
	ToDdosPolicyV2BlackWhiteIpOutputWithContext(context.Context) DdosPolicyV2BlackWhiteIpOutput
}

type DdosPolicyV2BlackWhiteIpArgs struct {
	Ip     pulumi.StringInput `pulumi:"ip"`
	IpType pulumi.StringInput `pulumi:"ipType"`
}

func (DdosPolicyV2BlackWhiteIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2BlackWhiteIp)(nil)).Elem()
}

func (i DdosPolicyV2BlackWhiteIpArgs) ToDdosPolicyV2BlackWhiteIpOutput() DdosPolicyV2BlackWhiteIpOutput {
	return i.ToDdosPolicyV2BlackWhiteIpOutputWithContext(context.Background())
}

func (i DdosPolicyV2BlackWhiteIpArgs) ToDdosPolicyV2BlackWhiteIpOutputWithContext(ctx context.Context) DdosPolicyV2BlackWhiteIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2BlackWhiteIpOutput)
}

// DdosPolicyV2BlackWhiteIpArrayInput is an input type that accepts DdosPolicyV2BlackWhiteIpArray and DdosPolicyV2BlackWhiteIpArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2BlackWhiteIpArrayInput` via:
//
//          DdosPolicyV2BlackWhiteIpArray{ DdosPolicyV2BlackWhiteIpArgs{...} }
type DdosPolicyV2BlackWhiteIpArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2BlackWhiteIpArrayOutput() DdosPolicyV2BlackWhiteIpArrayOutput
	ToDdosPolicyV2BlackWhiteIpArrayOutputWithContext(context.Context) DdosPolicyV2BlackWhiteIpArrayOutput
}

type DdosPolicyV2BlackWhiteIpArray []DdosPolicyV2BlackWhiteIpInput

func (DdosPolicyV2BlackWhiteIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2BlackWhiteIp)(nil)).Elem()
}

func (i DdosPolicyV2BlackWhiteIpArray) ToDdosPolicyV2BlackWhiteIpArrayOutput() DdosPolicyV2BlackWhiteIpArrayOutput {
	return i.ToDdosPolicyV2BlackWhiteIpArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2BlackWhiteIpArray) ToDdosPolicyV2BlackWhiteIpArrayOutputWithContext(ctx context.Context) DdosPolicyV2BlackWhiteIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2BlackWhiteIpArrayOutput)
}

type DdosPolicyV2BlackWhiteIpOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2BlackWhiteIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2BlackWhiteIp)(nil)).Elem()
}

func (o DdosPolicyV2BlackWhiteIpOutput) ToDdosPolicyV2BlackWhiteIpOutput() DdosPolicyV2BlackWhiteIpOutput {
	return o
}

func (o DdosPolicyV2BlackWhiteIpOutput) ToDdosPolicyV2BlackWhiteIpOutputWithContext(ctx context.Context) DdosPolicyV2BlackWhiteIpOutput {
	return o
}

func (o DdosPolicyV2BlackWhiteIpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2BlackWhiteIp) string { return v.Ip }).(pulumi.StringOutput)
}

func (o DdosPolicyV2BlackWhiteIpOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2BlackWhiteIp) string { return v.IpType }).(pulumi.StringOutput)
}

type DdosPolicyV2BlackWhiteIpArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2BlackWhiteIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2BlackWhiteIp)(nil)).Elem()
}

func (o DdosPolicyV2BlackWhiteIpArrayOutput) ToDdosPolicyV2BlackWhiteIpArrayOutput() DdosPolicyV2BlackWhiteIpArrayOutput {
	return o
}

func (o DdosPolicyV2BlackWhiteIpArrayOutput) ToDdosPolicyV2BlackWhiteIpArrayOutputWithContext(ctx context.Context) DdosPolicyV2BlackWhiteIpArrayOutput {
	return o
}

func (o DdosPolicyV2BlackWhiteIpArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2BlackWhiteIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2BlackWhiteIp {
		return vs[0].([]DdosPolicyV2BlackWhiteIp)[vs[1].(int)]
	}).(DdosPolicyV2BlackWhiteIpOutput)
}

type DdosPolicyV2DdosConnectLimit struct {
	BadConnThreshold int `pulumi:"badConnThreshold"`
	ConnTimeout      int `pulumi:"connTimeout"`
	DstConnLimit     int `pulumi:"dstConnLimit"`
	DstNewLimit      int `pulumi:"dstNewLimit"`
	NullConnEnable   int `pulumi:"nullConnEnable"`
	SdConnLimit      int `pulumi:"sdConnLimit"`
	SdNewLimit       int `pulumi:"sdNewLimit"`
	SynLimit         int `pulumi:"synLimit"`
	SynRate          int `pulumi:"synRate"`
}

// DdosPolicyV2DdosConnectLimitInput is an input type that accepts DdosPolicyV2DdosConnectLimitArgs and DdosPolicyV2DdosConnectLimitOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosConnectLimitInput` via:
//
//          DdosPolicyV2DdosConnectLimitArgs{...}
type DdosPolicyV2DdosConnectLimitInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosConnectLimitOutput() DdosPolicyV2DdosConnectLimitOutput
	ToDdosPolicyV2DdosConnectLimitOutputWithContext(context.Context) DdosPolicyV2DdosConnectLimitOutput
}

type DdosPolicyV2DdosConnectLimitArgs struct {
	BadConnThreshold pulumi.IntInput `pulumi:"badConnThreshold"`
	ConnTimeout      pulumi.IntInput `pulumi:"connTimeout"`
	DstConnLimit     pulumi.IntInput `pulumi:"dstConnLimit"`
	DstNewLimit      pulumi.IntInput `pulumi:"dstNewLimit"`
	NullConnEnable   pulumi.IntInput `pulumi:"nullConnEnable"`
	SdConnLimit      pulumi.IntInput `pulumi:"sdConnLimit"`
	SdNewLimit       pulumi.IntInput `pulumi:"sdNewLimit"`
	SynLimit         pulumi.IntInput `pulumi:"synLimit"`
	SynRate          pulumi.IntInput `pulumi:"synRate"`
}

func (DdosPolicyV2DdosConnectLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosConnectLimit)(nil)).Elem()
}

func (i DdosPolicyV2DdosConnectLimitArgs) ToDdosPolicyV2DdosConnectLimitOutput() DdosPolicyV2DdosConnectLimitOutput {
	return i.ToDdosPolicyV2DdosConnectLimitOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosConnectLimitArgs) ToDdosPolicyV2DdosConnectLimitOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosConnectLimitOutput)
}

func (i DdosPolicyV2DdosConnectLimitArgs) ToDdosPolicyV2DdosConnectLimitPtrOutput() DdosPolicyV2DdosConnectLimitPtrOutput {
	return i.ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosConnectLimitArgs) ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosConnectLimitOutput).ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(ctx)
}

// DdosPolicyV2DdosConnectLimitPtrInput is an input type that accepts DdosPolicyV2DdosConnectLimitArgs, DdosPolicyV2DdosConnectLimitPtr and DdosPolicyV2DdosConnectLimitPtrOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosConnectLimitPtrInput` via:
//
//          DdosPolicyV2DdosConnectLimitArgs{...}
//
//  or:
//
//          nil
type DdosPolicyV2DdosConnectLimitPtrInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosConnectLimitPtrOutput() DdosPolicyV2DdosConnectLimitPtrOutput
	ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(context.Context) DdosPolicyV2DdosConnectLimitPtrOutput
}

type ddosPolicyV2DdosConnectLimitPtrType DdosPolicyV2DdosConnectLimitArgs

func DdosPolicyV2DdosConnectLimitPtr(v *DdosPolicyV2DdosConnectLimitArgs) DdosPolicyV2DdosConnectLimitPtrInput {
	return (*ddosPolicyV2DdosConnectLimitPtrType)(v)
}

func (*ddosPolicyV2DdosConnectLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosPolicyV2DdosConnectLimit)(nil)).Elem()
}

func (i *ddosPolicyV2DdosConnectLimitPtrType) ToDdosPolicyV2DdosConnectLimitPtrOutput() DdosPolicyV2DdosConnectLimitPtrOutput {
	return i.ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(context.Background())
}

func (i *ddosPolicyV2DdosConnectLimitPtrType) ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosConnectLimitPtrOutput)
}

type DdosPolicyV2DdosConnectLimitOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosConnectLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosConnectLimit)(nil)).Elem()
}

func (o DdosPolicyV2DdosConnectLimitOutput) ToDdosPolicyV2DdosConnectLimitOutput() DdosPolicyV2DdosConnectLimitOutput {
	return o
}

func (o DdosPolicyV2DdosConnectLimitOutput) ToDdosPolicyV2DdosConnectLimitOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitOutput {
	return o
}

func (o DdosPolicyV2DdosConnectLimitOutput) ToDdosPolicyV2DdosConnectLimitPtrOutput() DdosPolicyV2DdosConnectLimitPtrOutput {
	return o.ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(context.Background())
}

func (o DdosPolicyV2DdosConnectLimitOutput) ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DdosPolicyV2DdosConnectLimit) *DdosPolicyV2DdosConnectLimit {
		return &v
	}).(DdosPolicyV2DdosConnectLimitPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) BadConnThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.BadConnThreshold }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.ConnTimeout }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) DstConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.DstConnLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) DstNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.DstNewLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) NullConnEnable() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.NullConnEnable }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) SdConnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.SdConnLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) SdNewLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.SdNewLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) SynLimit() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.SynLimit }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosConnectLimitOutput) SynRate() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosConnectLimit) int { return v.SynRate }).(pulumi.IntOutput)
}

type DdosPolicyV2DdosConnectLimitPtrOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosConnectLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosPolicyV2DdosConnectLimit)(nil)).Elem()
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) ToDdosPolicyV2DdosConnectLimitPtrOutput() DdosPolicyV2DdosConnectLimitPtrOutput {
	return o
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) ToDdosPolicyV2DdosConnectLimitPtrOutputWithContext(ctx context.Context) DdosPolicyV2DdosConnectLimitPtrOutput {
	return o
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) Elem() DdosPolicyV2DdosConnectLimitOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) DdosPolicyV2DdosConnectLimit {
		if v != nil {
			return *v
		}
		var ret DdosPolicyV2DdosConnectLimit
		return ret
	}).(DdosPolicyV2DdosConnectLimitOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) BadConnThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.BadConnThreshold
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) ConnTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.ConnTimeout
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) DstConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.DstConnLimit
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) DstNewLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.DstNewLimit
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) NullConnEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.NullConnEnable
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) SdConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.SdConnLimit
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) SdNewLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.SdNewLimit
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) SynLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.SynLimit
	}).(pulumi.IntPtrOutput)
}

func (o DdosPolicyV2DdosConnectLimitPtrOutput) SynRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2DdosConnectLimit) *int {
		if v == nil {
			return nil
		}
		return &v.SynRate
	}).(pulumi.IntPtrOutput)
}

type DdosPolicyV2DdosGeoIpBlockConfig struct {
	Action     string `pulumi:"action"`
	AreaLists  []int  `pulumi:"areaLists"`
	RegionType string `pulumi:"regionType"`
}

// DdosPolicyV2DdosGeoIpBlockConfigInput is an input type that accepts DdosPolicyV2DdosGeoIpBlockConfigArgs and DdosPolicyV2DdosGeoIpBlockConfigOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosGeoIpBlockConfigInput` via:
//
//          DdosPolicyV2DdosGeoIpBlockConfigArgs{...}
type DdosPolicyV2DdosGeoIpBlockConfigInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosGeoIpBlockConfigOutput() DdosPolicyV2DdosGeoIpBlockConfigOutput
	ToDdosPolicyV2DdosGeoIpBlockConfigOutputWithContext(context.Context) DdosPolicyV2DdosGeoIpBlockConfigOutput
}

type DdosPolicyV2DdosGeoIpBlockConfigArgs struct {
	Action     pulumi.StringInput   `pulumi:"action"`
	AreaLists  pulumi.IntArrayInput `pulumi:"areaLists"`
	RegionType pulumi.StringInput   `pulumi:"regionType"`
}

func (DdosPolicyV2DdosGeoIpBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosGeoIpBlockConfig)(nil)).Elem()
}

func (i DdosPolicyV2DdosGeoIpBlockConfigArgs) ToDdosPolicyV2DdosGeoIpBlockConfigOutput() DdosPolicyV2DdosGeoIpBlockConfigOutput {
	return i.ToDdosPolicyV2DdosGeoIpBlockConfigOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosGeoIpBlockConfigArgs) ToDdosPolicyV2DdosGeoIpBlockConfigOutputWithContext(ctx context.Context) DdosPolicyV2DdosGeoIpBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosGeoIpBlockConfigOutput)
}

// DdosPolicyV2DdosGeoIpBlockConfigArrayInput is an input type that accepts DdosPolicyV2DdosGeoIpBlockConfigArray and DdosPolicyV2DdosGeoIpBlockConfigArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosGeoIpBlockConfigArrayInput` via:
//
//          DdosPolicyV2DdosGeoIpBlockConfigArray{ DdosPolicyV2DdosGeoIpBlockConfigArgs{...} }
type DdosPolicyV2DdosGeoIpBlockConfigArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutput() DdosPolicyV2DdosGeoIpBlockConfigArrayOutput
	ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutputWithContext(context.Context) DdosPolicyV2DdosGeoIpBlockConfigArrayOutput
}

type DdosPolicyV2DdosGeoIpBlockConfigArray []DdosPolicyV2DdosGeoIpBlockConfigInput

func (DdosPolicyV2DdosGeoIpBlockConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2DdosGeoIpBlockConfig)(nil)).Elem()
}

func (i DdosPolicyV2DdosGeoIpBlockConfigArray) ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutput() DdosPolicyV2DdosGeoIpBlockConfigArrayOutput {
	return i.ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosGeoIpBlockConfigArray) ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2DdosGeoIpBlockConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosGeoIpBlockConfigArrayOutput)
}

type DdosPolicyV2DdosGeoIpBlockConfigOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosGeoIpBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosGeoIpBlockConfig)(nil)).Elem()
}

func (o DdosPolicyV2DdosGeoIpBlockConfigOutput) ToDdosPolicyV2DdosGeoIpBlockConfigOutput() DdosPolicyV2DdosGeoIpBlockConfigOutput {
	return o
}

func (o DdosPolicyV2DdosGeoIpBlockConfigOutput) ToDdosPolicyV2DdosGeoIpBlockConfigOutputWithContext(ctx context.Context) DdosPolicyV2DdosGeoIpBlockConfigOutput {
	return o
}

func (o DdosPolicyV2DdosGeoIpBlockConfigOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosGeoIpBlockConfig) string { return v.Action }).(pulumi.StringOutput)
}

func (o DdosPolicyV2DdosGeoIpBlockConfigOutput) AreaLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosGeoIpBlockConfig) []int { return v.AreaLists }).(pulumi.IntArrayOutput)
}

func (o DdosPolicyV2DdosGeoIpBlockConfigOutput) RegionType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosGeoIpBlockConfig) string { return v.RegionType }).(pulumi.StringOutput)
}

type DdosPolicyV2DdosGeoIpBlockConfigArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosGeoIpBlockConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2DdosGeoIpBlockConfig)(nil)).Elem()
}

func (o DdosPolicyV2DdosGeoIpBlockConfigArrayOutput) ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutput() DdosPolicyV2DdosGeoIpBlockConfigArrayOutput {
	return o
}

func (o DdosPolicyV2DdosGeoIpBlockConfigArrayOutput) ToDdosPolicyV2DdosGeoIpBlockConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2DdosGeoIpBlockConfigArrayOutput {
	return o
}

func (o DdosPolicyV2DdosGeoIpBlockConfigArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2DdosGeoIpBlockConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2DdosGeoIpBlockConfig {
		return vs[0].([]DdosPolicyV2DdosGeoIpBlockConfig)[vs[1].(int)]
	}).(DdosPolicyV2DdosGeoIpBlockConfigOutput)
}

type DdosPolicyV2DdosSpeedLimitConfig struct {
	Bandwidth    int    `pulumi:"bandwidth"`
	DstPortList  string `pulumi:"dstPortList"`
	Mode         int    `pulumi:"mode"`
	PacketRate   int    `pulumi:"packetRate"`
	ProtocolList string `pulumi:"protocolList"`
}

// DdosPolicyV2DdosSpeedLimitConfigInput is an input type that accepts DdosPolicyV2DdosSpeedLimitConfigArgs and DdosPolicyV2DdosSpeedLimitConfigOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosSpeedLimitConfigInput` via:
//
//          DdosPolicyV2DdosSpeedLimitConfigArgs{...}
type DdosPolicyV2DdosSpeedLimitConfigInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosSpeedLimitConfigOutput() DdosPolicyV2DdosSpeedLimitConfigOutput
	ToDdosPolicyV2DdosSpeedLimitConfigOutputWithContext(context.Context) DdosPolicyV2DdosSpeedLimitConfigOutput
}

type DdosPolicyV2DdosSpeedLimitConfigArgs struct {
	Bandwidth    pulumi.IntInput    `pulumi:"bandwidth"`
	DstPortList  pulumi.StringInput `pulumi:"dstPortList"`
	Mode         pulumi.IntInput    `pulumi:"mode"`
	PacketRate   pulumi.IntInput    `pulumi:"packetRate"`
	ProtocolList pulumi.StringInput `pulumi:"protocolList"`
}

func (DdosPolicyV2DdosSpeedLimitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosSpeedLimitConfig)(nil)).Elem()
}

func (i DdosPolicyV2DdosSpeedLimitConfigArgs) ToDdosPolicyV2DdosSpeedLimitConfigOutput() DdosPolicyV2DdosSpeedLimitConfigOutput {
	return i.ToDdosPolicyV2DdosSpeedLimitConfigOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosSpeedLimitConfigArgs) ToDdosPolicyV2DdosSpeedLimitConfigOutputWithContext(ctx context.Context) DdosPolicyV2DdosSpeedLimitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosSpeedLimitConfigOutput)
}

// DdosPolicyV2DdosSpeedLimitConfigArrayInput is an input type that accepts DdosPolicyV2DdosSpeedLimitConfigArray and DdosPolicyV2DdosSpeedLimitConfigArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2DdosSpeedLimitConfigArrayInput` via:
//
//          DdosPolicyV2DdosSpeedLimitConfigArray{ DdosPolicyV2DdosSpeedLimitConfigArgs{...} }
type DdosPolicyV2DdosSpeedLimitConfigArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2DdosSpeedLimitConfigArrayOutput() DdosPolicyV2DdosSpeedLimitConfigArrayOutput
	ToDdosPolicyV2DdosSpeedLimitConfigArrayOutputWithContext(context.Context) DdosPolicyV2DdosSpeedLimitConfigArrayOutput
}

type DdosPolicyV2DdosSpeedLimitConfigArray []DdosPolicyV2DdosSpeedLimitConfigInput

func (DdosPolicyV2DdosSpeedLimitConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2DdosSpeedLimitConfig)(nil)).Elem()
}

func (i DdosPolicyV2DdosSpeedLimitConfigArray) ToDdosPolicyV2DdosSpeedLimitConfigArrayOutput() DdosPolicyV2DdosSpeedLimitConfigArrayOutput {
	return i.ToDdosPolicyV2DdosSpeedLimitConfigArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2DdosSpeedLimitConfigArray) ToDdosPolicyV2DdosSpeedLimitConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2DdosSpeedLimitConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2DdosSpeedLimitConfigArrayOutput)
}

type DdosPolicyV2DdosSpeedLimitConfigOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosSpeedLimitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2DdosSpeedLimitConfig)(nil)).Elem()
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) ToDdosPolicyV2DdosSpeedLimitConfigOutput() DdosPolicyV2DdosSpeedLimitConfigOutput {
	return o
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) ToDdosPolicyV2DdosSpeedLimitConfigOutputWithContext(ctx context.Context) DdosPolicyV2DdosSpeedLimitConfigOutput {
	return o
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosSpeedLimitConfig) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) DstPortList() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosSpeedLimitConfig) string { return v.DstPortList }).(pulumi.StringOutput)
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) Mode() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosSpeedLimitConfig) int { return v.Mode }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) PacketRate() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosSpeedLimitConfig) int { return v.PacketRate }).(pulumi.IntOutput)
}

func (o DdosPolicyV2DdosSpeedLimitConfigOutput) ProtocolList() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2DdosSpeedLimitConfig) string { return v.ProtocolList }).(pulumi.StringOutput)
}

type DdosPolicyV2DdosSpeedLimitConfigArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2DdosSpeedLimitConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2DdosSpeedLimitConfig)(nil)).Elem()
}

func (o DdosPolicyV2DdosSpeedLimitConfigArrayOutput) ToDdosPolicyV2DdosSpeedLimitConfigArrayOutput() DdosPolicyV2DdosSpeedLimitConfigArrayOutput {
	return o
}

func (o DdosPolicyV2DdosSpeedLimitConfigArrayOutput) ToDdosPolicyV2DdosSpeedLimitConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2DdosSpeedLimitConfigArrayOutput {
	return o
}

func (o DdosPolicyV2DdosSpeedLimitConfigArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2DdosSpeedLimitConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2DdosSpeedLimitConfig {
		return vs[0].([]DdosPolicyV2DdosSpeedLimitConfig)[vs[1].(int)]
	}).(DdosPolicyV2DdosSpeedLimitConfigOutput)
}

type DdosPolicyV2PacketFilter struct {
	Action      string `pulumi:"action"`
	DPortEnd    int    `pulumi:"dPortEnd"`
	DPortStart  int    `pulumi:"dPortStart"`
	Depth       int    `pulumi:"depth"`
	Depth2      int    `pulumi:"depth2"`
	IsNot       int    `pulumi:"isNot"`
	IsNot2      int    `pulumi:"isNot2"`
	MatchBegin  string `pulumi:"matchBegin"`
	MatchBegin2 string `pulumi:"matchBegin2"`
	MatchLogic  string `pulumi:"matchLogic"`
	MatchType   string `pulumi:"matchType"`
	MatchType2  string `pulumi:"matchType2"`
	Offset      int    `pulumi:"offset"`
	Offset2     int    `pulumi:"offset2"`
	PktlenMax   int    `pulumi:"pktlenMax"`
	PktlenMin   int    `pulumi:"pktlenMin"`
	Protocol    string `pulumi:"protocol"`
	SPortEnd    int    `pulumi:"sPortEnd"`
	SPortStart  int    `pulumi:"sPortStart"`
	Str         string `pulumi:"str"`
	Str2        string `pulumi:"str2"`
}

// DdosPolicyV2PacketFilterInput is an input type that accepts DdosPolicyV2PacketFilterArgs and DdosPolicyV2PacketFilterOutput values.
// You can construct a concrete instance of `DdosPolicyV2PacketFilterInput` via:
//
//          DdosPolicyV2PacketFilterArgs{...}
type DdosPolicyV2PacketFilterInput interface {
	pulumi.Input

	ToDdosPolicyV2PacketFilterOutput() DdosPolicyV2PacketFilterOutput
	ToDdosPolicyV2PacketFilterOutputWithContext(context.Context) DdosPolicyV2PacketFilterOutput
}

type DdosPolicyV2PacketFilterArgs struct {
	Action      pulumi.StringInput `pulumi:"action"`
	DPortEnd    pulumi.IntInput    `pulumi:"dPortEnd"`
	DPortStart  pulumi.IntInput    `pulumi:"dPortStart"`
	Depth       pulumi.IntInput    `pulumi:"depth"`
	Depth2      pulumi.IntInput    `pulumi:"depth2"`
	IsNot       pulumi.IntInput    `pulumi:"isNot"`
	IsNot2      pulumi.IntInput    `pulumi:"isNot2"`
	MatchBegin  pulumi.StringInput `pulumi:"matchBegin"`
	MatchBegin2 pulumi.StringInput `pulumi:"matchBegin2"`
	MatchLogic  pulumi.StringInput `pulumi:"matchLogic"`
	MatchType   pulumi.StringInput `pulumi:"matchType"`
	MatchType2  pulumi.StringInput `pulumi:"matchType2"`
	Offset      pulumi.IntInput    `pulumi:"offset"`
	Offset2     pulumi.IntInput    `pulumi:"offset2"`
	PktlenMax   pulumi.IntInput    `pulumi:"pktlenMax"`
	PktlenMin   pulumi.IntInput    `pulumi:"pktlenMin"`
	Protocol    pulumi.StringInput `pulumi:"protocol"`
	SPortEnd    pulumi.IntInput    `pulumi:"sPortEnd"`
	SPortStart  pulumi.IntInput    `pulumi:"sPortStart"`
	Str         pulumi.StringInput `pulumi:"str"`
	Str2        pulumi.StringInput `pulumi:"str2"`
}

func (DdosPolicyV2PacketFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2PacketFilter)(nil)).Elem()
}

func (i DdosPolicyV2PacketFilterArgs) ToDdosPolicyV2PacketFilterOutput() DdosPolicyV2PacketFilterOutput {
	return i.ToDdosPolicyV2PacketFilterOutputWithContext(context.Background())
}

func (i DdosPolicyV2PacketFilterArgs) ToDdosPolicyV2PacketFilterOutputWithContext(ctx context.Context) DdosPolicyV2PacketFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2PacketFilterOutput)
}

// DdosPolicyV2PacketFilterArrayInput is an input type that accepts DdosPolicyV2PacketFilterArray and DdosPolicyV2PacketFilterArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2PacketFilterArrayInput` via:
//
//          DdosPolicyV2PacketFilterArray{ DdosPolicyV2PacketFilterArgs{...} }
type DdosPolicyV2PacketFilterArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2PacketFilterArrayOutput() DdosPolicyV2PacketFilterArrayOutput
	ToDdosPolicyV2PacketFilterArrayOutputWithContext(context.Context) DdosPolicyV2PacketFilterArrayOutput
}

type DdosPolicyV2PacketFilterArray []DdosPolicyV2PacketFilterInput

func (DdosPolicyV2PacketFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2PacketFilter)(nil)).Elem()
}

func (i DdosPolicyV2PacketFilterArray) ToDdosPolicyV2PacketFilterArrayOutput() DdosPolicyV2PacketFilterArrayOutput {
	return i.ToDdosPolicyV2PacketFilterArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2PacketFilterArray) ToDdosPolicyV2PacketFilterArrayOutputWithContext(ctx context.Context) DdosPolicyV2PacketFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2PacketFilterArrayOutput)
}

type DdosPolicyV2PacketFilterOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2PacketFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2PacketFilter)(nil)).Elem()
}

func (o DdosPolicyV2PacketFilterOutput) ToDdosPolicyV2PacketFilterOutput() DdosPolicyV2PacketFilterOutput {
	return o
}

func (o DdosPolicyV2PacketFilterOutput) ToDdosPolicyV2PacketFilterOutputWithContext(ctx context.Context) DdosPolicyV2PacketFilterOutput {
	return o
}

func (o DdosPolicyV2PacketFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.Action }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) DPortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.DPortEnd }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) DPortStart() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.DPortStart }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Depth() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.Depth }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Depth2() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.Depth2 }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) IsNot() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.IsNot }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) IsNot2() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.IsNot2 }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) MatchBegin() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.MatchBegin }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) MatchBegin2() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.MatchBegin2 }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) MatchLogic() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.MatchLogic }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) MatchType2() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.MatchType2 }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.Offset }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Offset2() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.Offset2 }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) PktlenMax() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.PktlenMax }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) PktlenMin() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.PktlenMin }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) SPortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.SPortEnd }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) SPortStart() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) int { return v.SPortStart }).(pulumi.IntOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Str() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.Str }).(pulumi.StringOutput)
}

func (o DdosPolicyV2PacketFilterOutput) Str2() pulumi.StringOutput {
	return o.ApplyT(func(v DdosPolicyV2PacketFilter) string { return v.Str2 }).(pulumi.StringOutput)
}

type DdosPolicyV2PacketFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2PacketFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2PacketFilter)(nil)).Elem()
}

func (o DdosPolicyV2PacketFilterArrayOutput) ToDdosPolicyV2PacketFilterArrayOutput() DdosPolicyV2PacketFilterArrayOutput {
	return o
}

func (o DdosPolicyV2PacketFilterArrayOutput) ToDdosPolicyV2PacketFilterArrayOutputWithContext(ctx context.Context) DdosPolicyV2PacketFilterArrayOutput {
	return o
}

func (o DdosPolicyV2PacketFilterArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2PacketFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2PacketFilter {
		return vs[0].([]DdosPolicyV2PacketFilter)[vs[1].(int)]
	}).(DdosPolicyV2PacketFilterOutput)
}

type DdosPolicyV2ProtocolBlockConfig struct {
	DropIcmp  int `pulumi:"dropIcmp"`
	DropOther int `pulumi:"dropOther"`
	DropTcp   int `pulumi:"dropTcp"`
	DropUdp   int `pulumi:"dropUdp"`
}

// DdosPolicyV2ProtocolBlockConfigInput is an input type that accepts DdosPolicyV2ProtocolBlockConfigArgs and DdosPolicyV2ProtocolBlockConfigOutput values.
// You can construct a concrete instance of `DdosPolicyV2ProtocolBlockConfigInput` via:
//
//          DdosPolicyV2ProtocolBlockConfigArgs{...}
type DdosPolicyV2ProtocolBlockConfigInput interface {
	pulumi.Input

	ToDdosPolicyV2ProtocolBlockConfigOutput() DdosPolicyV2ProtocolBlockConfigOutput
	ToDdosPolicyV2ProtocolBlockConfigOutputWithContext(context.Context) DdosPolicyV2ProtocolBlockConfigOutput
}

type DdosPolicyV2ProtocolBlockConfigArgs struct {
	DropIcmp  pulumi.IntInput `pulumi:"dropIcmp"`
	DropOther pulumi.IntInput `pulumi:"dropOther"`
	DropTcp   pulumi.IntInput `pulumi:"dropTcp"`
	DropUdp   pulumi.IntInput `pulumi:"dropUdp"`
}

func (DdosPolicyV2ProtocolBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2ProtocolBlockConfig)(nil)).Elem()
}

func (i DdosPolicyV2ProtocolBlockConfigArgs) ToDdosPolicyV2ProtocolBlockConfigOutput() DdosPolicyV2ProtocolBlockConfigOutput {
	return i.ToDdosPolicyV2ProtocolBlockConfigOutputWithContext(context.Background())
}

func (i DdosPolicyV2ProtocolBlockConfigArgs) ToDdosPolicyV2ProtocolBlockConfigOutputWithContext(ctx context.Context) DdosPolicyV2ProtocolBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2ProtocolBlockConfigOutput)
}

// DdosPolicyV2ProtocolBlockConfigArrayInput is an input type that accepts DdosPolicyV2ProtocolBlockConfigArray and DdosPolicyV2ProtocolBlockConfigArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2ProtocolBlockConfigArrayInput` via:
//
//          DdosPolicyV2ProtocolBlockConfigArray{ DdosPolicyV2ProtocolBlockConfigArgs{...} }
type DdosPolicyV2ProtocolBlockConfigArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2ProtocolBlockConfigArrayOutput() DdosPolicyV2ProtocolBlockConfigArrayOutput
	ToDdosPolicyV2ProtocolBlockConfigArrayOutputWithContext(context.Context) DdosPolicyV2ProtocolBlockConfigArrayOutput
}

type DdosPolicyV2ProtocolBlockConfigArray []DdosPolicyV2ProtocolBlockConfigInput

func (DdosPolicyV2ProtocolBlockConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2ProtocolBlockConfig)(nil)).Elem()
}

func (i DdosPolicyV2ProtocolBlockConfigArray) ToDdosPolicyV2ProtocolBlockConfigArrayOutput() DdosPolicyV2ProtocolBlockConfigArrayOutput {
	return i.ToDdosPolicyV2ProtocolBlockConfigArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2ProtocolBlockConfigArray) ToDdosPolicyV2ProtocolBlockConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2ProtocolBlockConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2ProtocolBlockConfigArrayOutput)
}

type DdosPolicyV2ProtocolBlockConfigOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2ProtocolBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyV2ProtocolBlockConfig)(nil)).Elem()
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) ToDdosPolicyV2ProtocolBlockConfigOutput() DdosPolicyV2ProtocolBlockConfigOutput {
	return o
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) ToDdosPolicyV2ProtocolBlockConfigOutputWithContext(ctx context.Context) DdosPolicyV2ProtocolBlockConfigOutput {
	return o
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) DropIcmp() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2ProtocolBlockConfig) int { return v.DropIcmp }).(pulumi.IntOutput)
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) DropOther() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2ProtocolBlockConfig) int { return v.DropOther }).(pulumi.IntOutput)
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) DropTcp() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2ProtocolBlockConfig) int { return v.DropTcp }).(pulumi.IntOutput)
}

func (o DdosPolicyV2ProtocolBlockConfigOutput) DropUdp() pulumi.IntOutput {
	return o.ApplyT(func(v DdosPolicyV2ProtocolBlockConfig) int { return v.DropUdp }).(pulumi.IntOutput)
}

type DdosPolicyV2ProtocolBlockConfigArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2ProtocolBlockConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyV2ProtocolBlockConfig)(nil)).Elem()
}

func (o DdosPolicyV2ProtocolBlockConfigArrayOutput) ToDdosPolicyV2ProtocolBlockConfigArrayOutput() DdosPolicyV2ProtocolBlockConfigArrayOutput {
	return o
}

func (o DdosPolicyV2ProtocolBlockConfigArrayOutput) ToDdosPolicyV2ProtocolBlockConfigArrayOutputWithContext(ctx context.Context) DdosPolicyV2ProtocolBlockConfigArrayOutput {
	return o
}

func (o DdosPolicyV2ProtocolBlockConfigArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2ProtocolBlockConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyV2ProtocolBlockConfig {
		return vs[0].([]DdosPolicyV2ProtocolBlockConfig)[vs[1].(int)]
	}).(DdosPolicyV2ProtocolBlockConfigOutput)
}

type DdosPolicyWatermarkFilter struct {
	AutoRemove   *bool    `pulumi:"autoRemove"`
	Offset       *int     `pulumi:"offset"`
	OpenSwitch   *bool    `pulumi:"openSwitch"`
	TcpPortLists []string `pulumi:"tcpPortLists"`
	UdpPortLists []string `pulumi:"udpPortLists"`
}

// DdosPolicyWatermarkFilterInput is an input type that accepts DdosPolicyWatermarkFilterArgs and DdosPolicyWatermarkFilterOutput values.
// You can construct a concrete instance of `DdosPolicyWatermarkFilterInput` via:
//
//          DdosPolicyWatermarkFilterArgs{...}
type DdosPolicyWatermarkFilterInput interface {
	pulumi.Input

	ToDdosPolicyWatermarkFilterOutput() DdosPolicyWatermarkFilterOutput
	ToDdosPolicyWatermarkFilterOutputWithContext(context.Context) DdosPolicyWatermarkFilterOutput
}

type DdosPolicyWatermarkFilterArgs struct {
	AutoRemove   pulumi.BoolPtrInput     `pulumi:"autoRemove"`
	Offset       pulumi.IntPtrInput      `pulumi:"offset"`
	OpenSwitch   pulumi.BoolPtrInput     `pulumi:"openSwitch"`
	TcpPortLists pulumi.StringArrayInput `pulumi:"tcpPortLists"`
	UdpPortLists pulumi.StringArrayInput `pulumi:"udpPortLists"`
}

func (DdosPolicyWatermarkFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyWatermarkFilter)(nil)).Elem()
}

func (i DdosPolicyWatermarkFilterArgs) ToDdosPolicyWatermarkFilterOutput() DdosPolicyWatermarkFilterOutput {
	return i.ToDdosPolicyWatermarkFilterOutputWithContext(context.Background())
}

func (i DdosPolicyWatermarkFilterArgs) ToDdosPolicyWatermarkFilterOutputWithContext(ctx context.Context) DdosPolicyWatermarkFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyWatermarkFilterOutput)
}

// DdosPolicyWatermarkFilterArrayInput is an input type that accepts DdosPolicyWatermarkFilterArray and DdosPolicyWatermarkFilterArrayOutput values.
// You can construct a concrete instance of `DdosPolicyWatermarkFilterArrayInput` via:
//
//          DdosPolicyWatermarkFilterArray{ DdosPolicyWatermarkFilterArgs{...} }
type DdosPolicyWatermarkFilterArrayInput interface {
	pulumi.Input

	ToDdosPolicyWatermarkFilterArrayOutput() DdosPolicyWatermarkFilterArrayOutput
	ToDdosPolicyWatermarkFilterArrayOutputWithContext(context.Context) DdosPolicyWatermarkFilterArrayOutput
}

type DdosPolicyWatermarkFilterArray []DdosPolicyWatermarkFilterInput

func (DdosPolicyWatermarkFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyWatermarkFilter)(nil)).Elem()
}

func (i DdosPolicyWatermarkFilterArray) ToDdosPolicyWatermarkFilterArrayOutput() DdosPolicyWatermarkFilterArrayOutput {
	return i.ToDdosPolicyWatermarkFilterArrayOutputWithContext(context.Background())
}

func (i DdosPolicyWatermarkFilterArray) ToDdosPolicyWatermarkFilterArrayOutputWithContext(ctx context.Context) DdosPolicyWatermarkFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyWatermarkFilterArrayOutput)
}

type DdosPolicyWatermarkFilterOutput struct{ *pulumi.OutputState }

func (DdosPolicyWatermarkFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyWatermarkFilter)(nil)).Elem()
}

func (o DdosPolicyWatermarkFilterOutput) ToDdosPolicyWatermarkFilterOutput() DdosPolicyWatermarkFilterOutput {
	return o
}

func (o DdosPolicyWatermarkFilterOutput) ToDdosPolicyWatermarkFilterOutputWithContext(ctx context.Context) DdosPolicyWatermarkFilterOutput {
	return o
}

func (o DdosPolicyWatermarkFilterOutput) AutoRemove() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkFilter) *bool { return v.AutoRemove }).(pulumi.BoolPtrOutput)
}

func (o DdosPolicyWatermarkFilterOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkFilter) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o DdosPolicyWatermarkFilterOutput) OpenSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkFilter) *bool { return v.OpenSwitch }).(pulumi.BoolPtrOutput)
}

func (o DdosPolicyWatermarkFilterOutput) TcpPortLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkFilter) []string { return v.TcpPortLists }).(pulumi.StringArrayOutput)
}

func (o DdosPolicyWatermarkFilterOutput) UdpPortLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkFilter) []string { return v.UdpPortLists }).(pulumi.StringArrayOutput)
}

type DdosPolicyWatermarkFilterArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyWatermarkFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyWatermarkFilter)(nil)).Elem()
}

func (o DdosPolicyWatermarkFilterArrayOutput) ToDdosPolicyWatermarkFilterArrayOutput() DdosPolicyWatermarkFilterArrayOutput {
	return o
}

func (o DdosPolicyWatermarkFilterArrayOutput) ToDdosPolicyWatermarkFilterArrayOutputWithContext(ctx context.Context) DdosPolicyWatermarkFilterArrayOutput {
	return o
}

func (o DdosPolicyWatermarkFilterArrayOutput) Index(i pulumi.IntInput) DdosPolicyWatermarkFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyWatermarkFilter {
		return vs[0].([]DdosPolicyWatermarkFilter)[vs[1].(int)]
	}).(DdosPolicyWatermarkFilterOutput)
}

type DdosPolicyWatermarkKey struct {
	Content    *string `pulumi:"content"`
	CreateTime *string `pulumi:"createTime"`
	Id         *string `pulumi:"id"`
	OpenSwitch *bool   `pulumi:"openSwitch"`
}

// DdosPolicyWatermarkKeyInput is an input type that accepts DdosPolicyWatermarkKeyArgs and DdosPolicyWatermarkKeyOutput values.
// You can construct a concrete instance of `DdosPolicyWatermarkKeyInput` via:
//
//          DdosPolicyWatermarkKeyArgs{...}
type DdosPolicyWatermarkKeyInput interface {
	pulumi.Input

	ToDdosPolicyWatermarkKeyOutput() DdosPolicyWatermarkKeyOutput
	ToDdosPolicyWatermarkKeyOutputWithContext(context.Context) DdosPolicyWatermarkKeyOutput
}

type DdosPolicyWatermarkKeyArgs struct {
	Content    pulumi.StringPtrInput `pulumi:"content"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	OpenSwitch pulumi.BoolPtrInput   `pulumi:"openSwitch"`
}

func (DdosPolicyWatermarkKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyWatermarkKey)(nil)).Elem()
}

func (i DdosPolicyWatermarkKeyArgs) ToDdosPolicyWatermarkKeyOutput() DdosPolicyWatermarkKeyOutput {
	return i.ToDdosPolicyWatermarkKeyOutputWithContext(context.Background())
}

func (i DdosPolicyWatermarkKeyArgs) ToDdosPolicyWatermarkKeyOutputWithContext(ctx context.Context) DdosPolicyWatermarkKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyWatermarkKeyOutput)
}

// DdosPolicyWatermarkKeyArrayInput is an input type that accepts DdosPolicyWatermarkKeyArray and DdosPolicyWatermarkKeyArrayOutput values.
// You can construct a concrete instance of `DdosPolicyWatermarkKeyArrayInput` via:
//
//          DdosPolicyWatermarkKeyArray{ DdosPolicyWatermarkKeyArgs{...} }
type DdosPolicyWatermarkKeyArrayInput interface {
	pulumi.Input

	ToDdosPolicyWatermarkKeyArrayOutput() DdosPolicyWatermarkKeyArrayOutput
	ToDdosPolicyWatermarkKeyArrayOutputWithContext(context.Context) DdosPolicyWatermarkKeyArrayOutput
}

type DdosPolicyWatermarkKeyArray []DdosPolicyWatermarkKeyInput

func (DdosPolicyWatermarkKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyWatermarkKey)(nil)).Elem()
}

func (i DdosPolicyWatermarkKeyArray) ToDdosPolicyWatermarkKeyArrayOutput() DdosPolicyWatermarkKeyArrayOutput {
	return i.ToDdosPolicyWatermarkKeyArrayOutputWithContext(context.Background())
}

func (i DdosPolicyWatermarkKeyArray) ToDdosPolicyWatermarkKeyArrayOutputWithContext(ctx context.Context) DdosPolicyWatermarkKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyWatermarkKeyArrayOutput)
}

type DdosPolicyWatermarkKeyOutput struct{ *pulumi.OutputState }

func (DdosPolicyWatermarkKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosPolicyWatermarkKey)(nil)).Elem()
}

func (o DdosPolicyWatermarkKeyOutput) ToDdosPolicyWatermarkKeyOutput() DdosPolicyWatermarkKeyOutput {
	return o
}

func (o DdosPolicyWatermarkKeyOutput) ToDdosPolicyWatermarkKeyOutputWithContext(ctx context.Context) DdosPolicyWatermarkKeyOutput {
	return o
}

func (o DdosPolicyWatermarkKeyOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkKey) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyWatermarkKeyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkKey) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyWatermarkKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DdosPolicyWatermarkKeyOutput) OpenSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosPolicyWatermarkKey) *bool { return v.OpenSwitch }).(pulumi.BoolPtrOutput)
}

type DdosPolicyWatermarkKeyArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyWatermarkKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdosPolicyWatermarkKey)(nil)).Elem()
}

func (o DdosPolicyWatermarkKeyArrayOutput) ToDdosPolicyWatermarkKeyArrayOutput() DdosPolicyWatermarkKeyArrayOutput {
	return o
}

func (o DdosPolicyWatermarkKeyArrayOutput) ToDdosPolicyWatermarkKeyArrayOutputWithContext(ctx context.Context) DdosPolicyWatermarkKeyArrayOutput {
	return o
}

func (o DdosPolicyWatermarkKeyArrayOutput) Index(i pulumi.IntInput) DdosPolicyWatermarkKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdosPolicyWatermarkKey {
		return vs[0].([]DdosPolicyWatermarkKey)[vs[1].(int)]
	}).(DdosPolicyWatermarkKeyOutput)
}

type L4RuleSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L4RuleSourceListInput is an input type that accepts L4RuleSourceListArgs and L4RuleSourceListOutput values.
// You can construct a concrete instance of `L4RuleSourceListInput` via:
//
//          L4RuleSourceListArgs{...}
type L4RuleSourceListInput interface {
	pulumi.Input

	ToL4RuleSourceListOutput() L4RuleSourceListOutput
	ToL4RuleSourceListOutputWithContext(context.Context) L4RuleSourceListOutput
}

type L4RuleSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L4RuleSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleSourceList)(nil)).Elem()
}

func (i L4RuleSourceListArgs) ToL4RuleSourceListOutput() L4RuleSourceListOutput {
	return i.ToL4RuleSourceListOutputWithContext(context.Background())
}

func (i L4RuleSourceListArgs) ToL4RuleSourceListOutputWithContext(ctx context.Context) L4RuleSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleSourceListOutput)
}

// L4RuleSourceListArrayInput is an input type that accepts L4RuleSourceListArray and L4RuleSourceListArrayOutput values.
// You can construct a concrete instance of `L4RuleSourceListArrayInput` via:
//
//          L4RuleSourceListArray{ L4RuleSourceListArgs{...} }
type L4RuleSourceListArrayInput interface {
	pulumi.Input

	ToL4RuleSourceListArrayOutput() L4RuleSourceListArrayOutput
	ToL4RuleSourceListArrayOutputWithContext(context.Context) L4RuleSourceListArrayOutput
}

type L4RuleSourceListArray []L4RuleSourceListInput

func (L4RuleSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RuleSourceList)(nil)).Elem()
}

func (i L4RuleSourceListArray) ToL4RuleSourceListArrayOutput() L4RuleSourceListArrayOutput {
	return i.ToL4RuleSourceListArrayOutputWithContext(context.Background())
}

func (i L4RuleSourceListArray) ToL4RuleSourceListArrayOutputWithContext(ctx context.Context) L4RuleSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleSourceListArrayOutput)
}

type L4RuleSourceListOutput struct{ *pulumi.OutputState }

func (L4RuleSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleSourceList)(nil)).Elem()
}

func (o L4RuleSourceListOutput) ToL4RuleSourceListOutput() L4RuleSourceListOutput {
	return o
}

func (o L4RuleSourceListOutput) ToL4RuleSourceListOutputWithContext(ctx context.Context) L4RuleSourceListOutput {
	return o
}

func (o L4RuleSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L4RuleSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L4RuleSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L4RuleSourceListArrayOutput struct{ *pulumi.OutputState }

func (L4RuleSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RuleSourceList)(nil)).Elem()
}

func (o L4RuleSourceListArrayOutput) ToL4RuleSourceListArrayOutput() L4RuleSourceListArrayOutput {
	return o
}

func (o L4RuleSourceListArrayOutput) ToL4RuleSourceListArrayOutputWithContext(ctx context.Context) L4RuleSourceListArrayOutput {
	return o
}

func (o L4RuleSourceListArrayOutput) Index(i pulumi.IntInput) L4RuleSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RuleSourceList {
		return vs[0].([]L4RuleSourceList)[vs[1].(int)]
	}).(L4RuleSourceListOutput)
}

type L4RuleV2Rules struct {
	KeepEnable   bool                      `pulumi:"keepEnable"`
	Keeptime     int                       `pulumi:"keeptime"`
	LbType       int                       `pulumi:"lbType"`
	Protocol     string                    `pulumi:"protocol"`
	Region       int                       `pulumi:"region"`
	RemoveSwitch bool                      `pulumi:"removeSwitch"`
	RuleName     string                    `pulumi:"ruleName"`
	SourceLists  []L4RuleV2RulesSourceList `pulumi:"sourceLists"`
	SourcePort   int                       `pulumi:"sourcePort"`
	SourceType   int                       `pulumi:"sourceType"`
	VirtualPort  int                       `pulumi:"virtualPort"`
}

// L4RuleV2RulesInput is an input type that accepts L4RuleV2RulesArgs and L4RuleV2RulesOutput values.
// You can construct a concrete instance of `L4RuleV2RulesInput` via:
//
//          L4RuleV2RulesArgs{...}
type L4RuleV2RulesInput interface {
	pulumi.Input

	ToL4RuleV2RulesOutput() L4RuleV2RulesOutput
	ToL4RuleV2RulesOutputWithContext(context.Context) L4RuleV2RulesOutput
}

type L4RuleV2RulesArgs struct {
	KeepEnable   pulumi.BoolInput                  `pulumi:"keepEnable"`
	Keeptime     pulumi.IntInput                   `pulumi:"keeptime"`
	LbType       pulumi.IntInput                   `pulumi:"lbType"`
	Protocol     pulumi.StringInput                `pulumi:"protocol"`
	Region       pulumi.IntInput                   `pulumi:"region"`
	RemoveSwitch pulumi.BoolInput                  `pulumi:"removeSwitch"`
	RuleName     pulumi.StringInput                `pulumi:"ruleName"`
	SourceLists  L4RuleV2RulesSourceListArrayInput `pulumi:"sourceLists"`
	SourcePort   pulumi.IntInput                   `pulumi:"sourcePort"`
	SourceType   pulumi.IntInput                   `pulumi:"sourceType"`
	VirtualPort  pulumi.IntInput                   `pulumi:"virtualPort"`
}

func (L4RuleV2RulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleV2Rules)(nil)).Elem()
}

func (i L4RuleV2RulesArgs) ToL4RuleV2RulesOutput() L4RuleV2RulesOutput {
	return i.ToL4RuleV2RulesOutputWithContext(context.Background())
}

func (i L4RuleV2RulesArgs) ToL4RuleV2RulesOutputWithContext(ctx context.Context) L4RuleV2RulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleV2RulesOutput)
}

func (i L4RuleV2RulesArgs) ToL4RuleV2RulesPtrOutput() L4RuleV2RulesPtrOutput {
	return i.ToL4RuleV2RulesPtrOutputWithContext(context.Background())
}

func (i L4RuleV2RulesArgs) ToL4RuleV2RulesPtrOutputWithContext(ctx context.Context) L4RuleV2RulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleV2RulesOutput).ToL4RuleV2RulesPtrOutputWithContext(ctx)
}

// L4RuleV2RulesPtrInput is an input type that accepts L4RuleV2RulesArgs, L4RuleV2RulesPtr and L4RuleV2RulesPtrOutput values.
// You can construct a concrete instance of `L4RuleV2RulesPtrInput` via:
//
//          L4RuleV2RulesArgs{...}
//
//  or:
//
//          nil
type L4RuleV2RulesPtrInput interface {
	pulumi.Input

	ToL4RuleV2RulesPtrOutput() L4RuleV2RulesPtrOutput
	ToL4RuleV2RulesPtrOutputWithContext(context.Context) L4RuleV2RulesPtrOutput
}

type l4ruleV2RulesPtrType L4RuleV2RulesArgs

func L4RuleV2RulesPtr(v *L4RuleV2RulesArgs) L4RuleV2RulesPtrInput {
	return (*l4ruleV2RulesPtrType)(v)
}

func (*l4ruleV2RulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**L4RuleV2Rules)(nil)).Elem()
}

func (i *l4ruleV2RulesPtrType) ToL4RuleV2RulesPtrOutput() L4RuleV2RulesPtrOutput {
	return i.ToL4RuleV2RulesPtrOutputWithContext(context.Background())
}

func (i *l4ruleV2RulesPtrType) ToL4RuleV2RulesPtrOutputWithContext(ctx context.Context) L4RuleV2RulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleV2RulesPtrOutput)
}

type L4RuleV2RulesOutput struct{ *pulumi.OutputState }

func (L4RuleV2RulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleV2Rules)(nil)).Elem()
}

func (o L4RuleV2RulesOutput) ToL4RuleV2RulesOutput() L4RuleV2RulesOutput {
	return o
}

func (o L4RuleV2RulesOutput) ToL4RuleV2RulesOutputWithContext(ctx context.Context) L4RuleV2RulesOutput {
	return o
}

func (o L4RuleV2RulesOutput) ToL4RuleV2RulesPtrOutput() L4RuleV2RulesPtrOutput {
	return o.ToL4RuleV2RulesPtrOutputWithContext(context.Background())
}

func (o L4RuleV2RulesOutput) ToL4RuleV2RulesPtrOutputWithContext(ctx context.Context) L4RuleV2RulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v L4RuleV2Rules) *L4RuleV2Rules {
		return &v
	}).(L4RuleV2RulesPtrOutput)
}

func (o L4RuleV2RulesOutput) KeepEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RuleV2Rules) bool { return v.KeepEnable }).(pulumi.BoolOutput)
}

func (o L4RuleV2RulesOutput) Keeptime() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.Keeptime }).(pulumi.IntOutput)
}

func (o L4RuleV2RulesOutput) LbType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.LbType }).(pulumi.IntOutput)
}

func (o L4RuleV2RulesOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L4RuleV2Rules) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L4RuleV2RulesOutput) Region() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.Region }).(pulumi.IntOutput)
}

func (o L4RuleV2RulesOutput) RemoveSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RuleV2Rules) bool { return v.RemoveSwitch }).(pulumi.BoolOutput)
}

func (o L4RuleV2RulesOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v L4RuleV2Rules) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o L4RuleV2RulesOutput) SourceLists() L4RuleV2RulesSourceListArrayOutput {
	return o.ApplyT(func(v L4RuleV2Rules) []L4RuleV2RulesSourceList { return v.SourceLists }).(L4RuleV2RulesSourceListArrayOutput)
}

func (o L4RuleV2RulesOutput) SourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.SourcePort }).(pulumi.IntOutput)
}

func (o L4RuleV2RulesOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.SourceType }).(pulumi.IntOutput)
}

func (o L4RuleV2RulesOutput) VirtualPort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2Rules) int { return v.VirtualPort }).(pulumi.IntOutput)
}

type L4RuleV2RulesPtrOutput struct{ *pulumi.OutputState }

func (L4RuleV2RulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L4RuleV2Rules)(nil)).Elem()
}

func (o L4RuleV2RulesPtrOutput) ToL4RuleV2RulesPtrOutput() L4RuleV2RulesPtrOutput {
	return o
}

func (o L4RuleV2RulesPtrOutput) ToL4RuleV2RulesPtrOutputWithContext(ctx context.Context) L4RuleV2RulesPtrOutput {
	return o
}

func (o L4RuleV2RulesPtrOutput) Elem() L4RuleV2RulesOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) L4RuleV2Rules {
		if v != nil {
			return *v
		}
		var ret L4RuleV2Rules
		return ret
	}).(L4RuleV2RulesOutput)
}

func (o L4RuleV2RulesPtrOutput) KeepEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepEnable
	}).(pulumi.BoolPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) Keeptime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.Keeptime
	}).(pulumi.IntPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) LbType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.LbType
	}).(pulumi.IntPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) Region() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.IntPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) RemoveSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *bool {
		if v == nil {
			return nil
		}
		return &v.RemoveSwitch
	}).(pulumi.BoolPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *string {
		if v == nil {
			return nil
		}
		return &v.RuleName
	}).(pulumi.StringPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) SourceLists() L4RuleV2RulesSourceListArrayOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) []L4RuleV2RulesSourceList {
		if v == nil {
			return nil
		}
		return v.SourceLists
	}).(L4RuleV2RulesSourceListArrayOutput)
}

func (o L4RuleV2RulesPtrOutput) SourcePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.SourcePort
	}).(pulumi.IntPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) SourceType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.IntPtrOutput)
}

func (o L4RuleV2RulesPtrOutput) VirtualPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4RuleV2Rules) *int {
		if v == nil {
			return nil
		}
		return &v.VirtualPort
	}).(pulumi.IntPtrOutput)
}

type L4RuleV2RulesSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L4RuleV2RulesSourceListInput is an input type that accepts L4RuleV2RulesSourceListArgs and L4RuleV2RulesSourceListOutput values.
// You can construct a concrete instance of `L4RuleV2RulesSourceListInput` via:
//
//          L4RuleV2RulesSourceListArgs{...}
type L4RuleV2RulesSourceListInput interface {
	pulumi.Input

	ToL4RuleV2RulesSourceListOutput() L4RuleV2RulesSourceListOutput
	ToL4RuleV2RulesSourceListOutputWithContext(context.Context) L4RuleV2RulesSourceListOutput
}

type L4RuleV2RulesSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L4RuleV2RulesSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleV2RulesSourceList)(nil)).Elem()
}

func (i L4RuleV2RulesSourceListArgs) ToL4RuleV2RulesSourceListOutput() L4RuleV2RulesSourceListOutput {
	return i.ToL4RuleV2RulesSourceListOutputWithContext(context.Background())
}

func (i L4RuleV2RulesSourceListArgs) ToL4RuleV2RulesSourceListOutputWithContext(ctx context.Context) L4RuleV2RulesSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleV2RulesSourceListOutput)
}

// L4RuleV2RulesSourceListArrayInput is an input type that accepts L4RuleV2RulesSourceListArray and L4RuleV2RulesSourceListArrayOutput values.
// You can construct a concrete instance of `L4RuleV2RulesSourceListArrayInput` via:
//
//          L4RuleV2RulesSourceListArray{ L4RuleV2RulesSourceListArgs{...} }
type L4RuleV2RulesSourceListArrayInput interface {
	pulumi.Input

	ToL4RuleV2RulesSourceListArrayOutput() L4RuleV2RulesSourceListArrayOutput
	ToL4RuleV2RulesSourceListArrayOutputWithContext(context.Context) L4RuleV2RulesSourceListArrayOutput
}

type L4RuleV2RulesSourceListArray []L4RuleV2RulesSourceListInput

func (L4RuleV2RulesSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RuleV2RulesSourceList)(nil)).Elem()
}

func (i L4RuleV2RulesSourceListArray) ToL4RuleV2RulesSourceListArrayOutput() L4RuleV2RulesSourceListArrayOutput {
	return i.ToL4RuleV2RulesSourceListArrayOutputWithContext(context.Background())
}

func (i L4RuleV2RulesSourceListArray) ToL4RuleV2RulesSourceListArrayOutputWithContext(ctx context.Context) L4RuleV2RulesSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RuleV2RulesSourceListArrayOutput)
}

type L4RuleV2RulesSourceListOutput struct{ *pulumi.OutputState }

func (L4RuleV2RulesSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RuleV2RulesSourceList)(nil)).Elem()
}

func (o L4RuleV2RulesSourceListOutput) ToL4RuleV2RulesSourceListOutput() L4RuleV2RulesSourceListOutput {
	return o
}

func (o L4RuleV2RulesSourceListOutput) ToL4RuleV2RulesSourceListOutputWithContext(ctx context.Context) L4RuleV2RulesSourceListOutput {
	return o
}

func (o L4RuleV2RulesSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L4RuleV2RulesSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L4RuleV2RulesSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L4RuleV2RulesSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L4RuleV2RulesSourceListArrayOutput struct{ *pulumi.OutputState }

func (L4RuleV2RulesSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RuleV2RulesSourceList)(nil)).Elem()
}

func (o L4RuleV2RulesSourceListArrayOutput) ToL4RuleV2RulesSourceListArrayOutput() L4RuleV2RulesSourceListArrayOutput {
	return o
}

func (o L4RuleV2RulesSourceListArrayOutput) ToL4RuleV2RulesSourceListArrayOutputWithContext(ctx context.Context) L4RuleV2RulesSourceListArrayOutput {
	return o
}

func (o L4RuleV2RulesSourceListArrayOutput) Index(i pulumi.IntInput) L4RuleV2RulesSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RuleV2RulesSourceList {
		return vs[0].([]L4RuleV2RulesSourceList)[vs[1].(int)]
	}).(L4RuleV2RulesSourceListOutput)
}

type L4RulesList struct {
	DPort                  int                     `pulumi:"dPort"`
	HealthCheckHealthNum   int                     `pulumi:"healthCheckHealthNum"`
	HealthCheckInterval    int                     `pulumi:"healthCheckInterval"`
	HealthCheckSwitch      bool                    `pulumi:"healthCheckSwitch"`
	HealthCheckTimeout     int                     `pulumi:"healthCheckTimeout"`
	HealthCheckUnhealthNum int                     `pulumi:"healthCheckUnhealthNum"`
	LbType                 int                     `pulumi:"lbType"`
	Name                   string                  `pulumi:"name"`
	Protocol               string                  `pulumi:"protocol"`
	RuleId                 string                  `pulumi:"ruleId"`
	SPort                  int                     `pulumi:"sPort"`
	SessionSwitch          bool                    `pulumi:"sessionSwitch"`
	SessionTime            int                     `pulumi:"sessionTime"`
	SourceLists            []L4RulesListSourceList `pulumi:"sourceLists"`
	SourceType             int                     `pulumi:"sourceType"`
}

// L4RulesListInput is an input type that accepts L4RulesListArgs and L4RulesListOutput values.
// You can construct a concrete instance of `L4RulesListInput` via:
//
//          L4RulesListArgs{...}
type L4RulesListInput interface {
	pulumi.Input

	ToL4RulesListOutput() L4RulesListOutput
	ToL4RulesListOutputWithContext(context.Context) L4RulesListOutput
}

type L4RulesListArgs struct {
	DPort                  pulumi.IntInput                 `pulumi:"dPort"`
	HealthCheckHealthNum   pulumi.IntInput                 `pulumi:"healthCheckHealthNum"`
	HealthCheckInterval    pulumi.IntInput                 `pulumi:"healthCheckInterval"`
	HealthCheckSwitch      pulumi.BoolInput                `pulumi:"healthCheckSwitch"`
	HealthCheckTimeout     pulumi.IntInput                 `pulumi:"healthCheckTimeout"`
	HealthCheckUnhealthNum pulumi.IntInput                 `pulumi:"healthCheckUnhealthNum"`
	LbType                 pulumi.IntInput                 `pulumi:"lbType"`
	Name                   pulumi.StringInput              `pulumi:"name"`
	Protocol               pulumi.StringInput              `pulumi:"protocol"`
	RuleId                 pulumi.StringInput              `pulumi:"ruleId"`
	SPort                  pulumi.IntInput                 `pulumi:"sPort"`
	SessionSwitch          pulumi.BoolInput                `pulumi:"sessionSwitch"`
	SessionTime            pulumi.IntInput                 `pulumi:"sessionTime"`
	SourceLists            L4RulesListSourceListArrayInput `pulumi:"sourceLists"`
	SourceType             pulumi.IntInput                 `pulumi:"sourceType"`
}

func (L4RulesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesList)(nil)).Elem()
}

func (i L4RulesListArgs) ToL4RulesListOutput() L4RulesListOutput {
	return i.ToL4RulesListOutputWithContext(context.Background())
}

func (i L4RulesListArgs) ToL4RulesListOutputWithContext(ctx context.Context) L4RulesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesListOutput)
}

// L4RulesListArrayInput is an input type that accepts L4RulesListArray and L4RulesListArrayOutput values.
// You can construct a concrete instance of `L4RulesListArrayInput` via:
//
//          L4RulesListArray{ L4RulesListArgs{...} }
type L4RulesListArrayInput interface {
	pulumi.Input

	ToL4RulesListArrayOutput() L4RulesListArrayOutput
	ToL4RulesListArrayOutputWithContext(context.Context) L4RulesListArrayOutput
}

type L4RulesListArray []L4RulesListInput

func (L4RulesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesList)(nil)).Elem()
}

func (i L4RulesListArray) ToL4RulesListArrayOutput() L4RulesListArrayOutput {
	return i.ToL4RulesListArrayOutputWithContext(context.Background())
}

func (i L4RulesListArray) ToL4RulesListArrayOutputWithContext(ctx context.Context) L4RulesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesListArrayOutput)
}

type L4RulesListOutput struct{ *pulumi.OutputState }

func (L4RulesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesList)(nil)).Elem()
}

func (o L4RulesListOutput) ToL4RulesListOutput() L4RulesListOutput {
	return o
}

func (o L4RulesListOutput) ToL4RulesListOutputWithContext(ctx context.Context) L4RulesListOutput {
	return o
}

func (o L4RulesListOutput) DPort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.DPort }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) HealthCheckHealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.HealthCheckHealthNum }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) HealthCheckSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RulesList) bool { return v.HealthCheckSwitch }).(pulumi.BoolOutput)
}

func (o L4RulesListOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) HealthCheckUnhealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.HealthCheckUnhealthNum }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) LbType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.LbType }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o L4RulesListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesList) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L4RulesListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesList) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o L4RulesListOutput) SPort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.SPort }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) SessionSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RulesList) bool { return v.SessionSwitch }).(pulumi.BoolOutput)
}

func (o L4RulesListOutput) SessionTime() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.SessionTime }).(pulumi.IntOutput)
}

func (o L4RulesListOutput) SourceLists() L4RulesListSourceListArrayOutput {
	return o.ApplyT(func(v L4RulesList) []L4RulesListSourceList { return v.SourceLists }).(L4RulesListSourceListArrayOutput)
}

func (o L4RulesListOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesList) int { return v.SourceType }).(pulumi.IntOutput)
}

type L4RulesListArrayOutput struct{ *pulumi.OutputState }

func (L4RulesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesList)(nil)).Elem()
}

func (o L4RulesListArrayOutput) ToL4RulesListArrayOutput() L4RulesListArrayOutput {
	return o
}

func (o L4RulesListArrayOutput) ToL4RulesListArrayOutputWithContext(ctx context.Context) L4RulesListArrayOutput {
	return o
}

func (o L4RulesListArrayOutput) Index(i pulumi.IntInput) L4RulesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RulesList {
		return vs[0].([]L4RulesList)[vs[1].(int)]
	}).(L4RulesListOutput)
}

type L4RulesListSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L4RulesListSourceListInput is an input type that accepts L4RulesListSourceListArgs and L4RulesListSourceListOutput values.
// You can construct a concrete instance of `L4RulesListSourceListInput` via:
//
//          L4RulesListSourceListArgs{...}
type L4RulesListSourceListInput interface {
	pulumi.Input

	ToL4RulesListSourceListOutput() L4RulesListSourceListOutput
	ToL4RulesListSourceListOutputWithContext(context.Context) L4RulesListSourceListOutput
}

type L4RulesListSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L4RulesListSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesListSourceList)(nil)).Elem()
}

func (i L4RulesListSourceListArgs) ToL4RulesListSourceListOutput() L4RulesListSourceListOutput {
	return i.ToL4RulesListSourceListOutputWithContext(context.Background())
}

func (i L4RulesListSourceListArgs) ToL4RulesListSourceListOutputWithContext(ctx context.Context) L4RulesListSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesListSourceListOutput)
}

// L4RulesListSourceListArrayInput is an input type that accepts L4RulesListSourceListArray and L4RulesListSourceListArrayOutput values.
// You can construct a concrete instance of `L4RulesListSourceListArrayInput` via:
//
//          L4RulesListSourceListArray{ L4RulesListSourceListArgs{...} }
type L4RulesListSourceListArrayInput interface {
	pulumi.Input

	ToL4RulesListSourceListArrayOutput() L4RulesListSourceListArrayOutput
	ToL4RulesListSourceListArrayOutputWithContext(context.Context) L4RulesListSourceListArrayOutput
}

type L4RulesListSourceListArray []L4RulesListSourceListInput

func (L4RulesListSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesListSourceList)(nil)).Elem()
}

func (i L4RulesListSourceListArray) ToL4RulesListSourceListArrayOutput() L4RulesListSourceListArrayOutput {
	return i.ToL4RulesListSourceListArrayOutputWithContext(context.Background())
}

func (i L4RulesListSourceListArray) ToL4RulesListSourceListArrayOutputWithContext(ctx context.Context) L4RulesListSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesListSourceListArrayOutput)
}

type L4RulesListSourceListOutput struct{ *pulumi.OutputState }

func (L4RulesListSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesListSourceList)(nil)).Elem()
}

func (o L4RulesListSourceListOutput) ToL4RulesListSourceListOutput() L4RulesListSourceListOutput {
	return o
}

func (o L4RulesListSourceListOutput) ToL4RulesListSourceListOutputWithContext(ctx context.Context) L4RulesListSourceListOutput {
	return o
}

func (o L4RulesListSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesListSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L4RulesListSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesListSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L4RulesListSourceListArrayOutput struct{ *pulumi.OutputState }

func (L4RulesListSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesListSourceList)(nil)).Elem()
}

func (o L4RulesListSourceListArrayOutput) ToL4RulesListSourceListArrayOutput() L4RulesListSourceListArrayOutput {
	return o
}

func (o L4RulesListSourceListArrayOutput) ToL4RulesListSourceListArrayOutputWithContext(ctx context.Context) L4RulesListSourceListArrayOutput {
	return o
}

func (o L4RulesListSourceListArrayOutput) Index(i pulumi.IntInput) L4RulesListSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RulesListSourceList {
		return vs[0].([]L4RulesListSourceList)[vs[1].(int)]
	}).(L4RulesListSourceListOutput)
}

type L4RulesV2List struct {
	Id           string                    `pulumi:"id"`
	Ip           string                    `pulumi:"ip"`
	KeepEnable   bool                      `pulumi:"keepEnable"`
	Keeptime     int                       `pulumi:"keeptime"`
	LbType       int                       `pulumi:"lbType"`
	ModifyTime   string                    `pulumi:"modifyTime"`
	Protocol     string                    `pulumi:"protocol"`
	Region       int                       `pulumi:"region"`
	RemoveSwitch bool                      `pulumi:"removeSwitch"`
	RuleId       string                    `pulumi:"ruleId"`
	RuleName     string                    `pulumi:"ruleName"`
	SourceLists  []L4RulesV2ListSourceList `pulumi:"sourceLists"`
	SourcePort   int                       `pulumi:"sourcePort"`
	SourceType   int                       `pulumi:"sourceType"`
	VirtualPort  int                       `pulumi:"virtualPort"`
}

// L4RulesV2ListInput is an input type that accepts L4RulesV2ListArgs and L4RulesV2ListOutput values.
// You can construct a concrete instance of `L4RulesV2ListInput` via:
//
//          L4RulesV2ListArgs{...}
type L4RulesV2ListInput interface {
	pulumi.Input

	ToL4RulesV2ListOutput() L4RulesV2ListOutput
	ToL4RulesV2ListOutputWithContext(context.Context) L4RulesV2ListOutput
}

type L4RulesV2ListArgs struct {
	Id           pulumi.StringInput                `pulumi:"id"`
	Ip           pulumi.StringInput                `pulumi:"ip"`
	KeepEnable   pulumi.BoolInput                  `pulumi:"keepEnable"`
	Keeptime     pulumi.IntInput                   `pulumi:"keeptime"`
	LbType       pulumi.IntInput                   `pulumi:"lbType"`
	ModifyTime   pulumi.StringInput                `pulumi:"modifyTime"`
	Protocol     pulumi.StringInput                `pulumi:"protocol"`
	Region       pulumi.IntInput                   `pulumi:"region"`
	RemoveSwitch pulumi.BoolInput                  `pulumi:"removeSwitch"`
	RuleId       pulumi.StringInput                `pulumi:"ruleId"`
	RuleName     pulumi.StringInput                `pulumi:"ruleName"`
	SourceLists  L4RulesV2ListSourceListArrayInput `pulumi:"sourceLists"`
	SourcePort   pulumi.IntInput                   `pulumi:"sourcePort"`
	SourceType   pulumi.IntInput                   `pulumi:"sourceType"`
	VirtualPort  pulumi.IntInput                   `pulumi:"virtualPort"`
}

func (L4RulesV2ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesV2List)(nil)).Elem()
}

func (i L4RulesV2ListArgs) ToL4RulesV2ListOutput() L4RulesV2ListOutput {
	return i.ToL4RulesV2ListOutputWithContext(context.Background())
}

func (i L4RulesV2ListArgs) ToL4RulesV2ListOutputWithContext(ctx context.Context) L4RulesV2ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesV2ListOutput)
}

// L4RulesV2ListArrayInput is an input type that accepts L4RulesV2ListArray and L4RulesV2ListArrayOutput values.
// You can construct a concrete instance of `L4RulesV2ListArrayInput` via:
//
//          L4RulesV2ListArray{ L4RulesV2ListArgs{...} }
type L4RulesV2ListArrayInput interface {
	pulumi.Input

	ToL4RulesV2ListArrayOutput() L4RulesV2ListArrayOutput
	ToL4RulesV2ListArrayOutputWithContext(context.Context) L4RulesV2ListArrayOutput
}

type L4RulesV2ListArray []L4RulesV2ListInput

func (L4RulesV2ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesV2List)(nil)).Elem()
}

func (i L4RulesV2ListArray) ToL4RulesV2ListArrayOutput() L4RulesV2ListArrayOutput {
	return i.ToL4RulesV2ListArrayOutputWithContext(context.Background())
}

func (i L4RulesV2ListArray) ToL4RulesV2ListArrayOutputWithContext(ctx context.Context) L4RulesV2ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesV2ListArrayOutput)
}

type L4RulesV2ListOutput struct{ *pulumi.OutputState }

func (L4RulesV2ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesV2List)(nil)).Elem()
}

func (o L4RulesV2ListOutput) ToL4RulesV2ListOutput() L4RulesV2ListOutput {
	return o
}

func (o L4RulesV2ListOutput) ToL4RulesV2ListOutputWithContext(ctx context.Context) L4RulesV2ListOutput {
	return o
}

func (o L4RulesV2ListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.Id }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.Ip }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) KeepEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RulesV2List) bool { return v.KeepEnable }).(pulumi.BoolOutput)
}

func (o L4RulesV2ListOutput) Keeptime() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.Keeptime }).(pulumi.IntOutput)
}

func (o L4RulesV2ListOutput) LbType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.LbType }).(pulumi.IntOutput)
}

func (o L4RulesV2ListOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) Region() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.Region }).(pulumi.IntOutput)
}

func (o L4RulesV2ListOutput) RemoveSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v L4RulesV2List) bool { return v.RemoveSwitch }).(pulumi.BoolOutput)
}

func (o L4RulesV2ListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2List) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o L4RulesV2ListOutput) SourceLists() L4RulesV2ListSourceListArrayOutput {
	return o.ApplyT(func(v L4RulesV2List) []L4RulesV2ListSourceList { return v.SourceLists }).(L4RulesV2ListSourceListArrayOutput)
}

func (o L4RulesV2ListOutput) SourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.SourcePort }).(pulumi.IntOutput)
}

func (o L4RulesV2ListOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.SourceType }).(pulumi.IntOutput)
}

func (o L4RulesV2ListOutput) VirtualPort() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2List) int { return v.VirtualPort }).(pulumi.IntOutput)
}

type L4RulesV2ListArrayOutput struct{ *pulumi.OutputState }

func (L4RulesV2ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesV2List)(nil)).Elem()
}

func (o L4RulesV2ListArrayOutput) ToL4RulesV2ListArrayOutput() L4RulesV2ListArrayOutput {
	return o
}

func (o L4RulesV2ListArrayOutput) ToL4RulesV2ListArrayOutputWithContext(ctx context.Context) L4RulesV2ListArrayOutput {
	return o
}

func (o L4RulesV2ListArrayOutput) Index(i pulumi.IntInput) L4RulesV2ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RulesV2List {
		return vs[0].([]L4RulesV2List)[vs[1].(int)]
	}).(L4RulesV2ListOutput)
}

type L4RulesV2ListSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L4RulesV2ListSourceListInput is an input type that accepts L4RulesV2ListSourceListArgs and L4RulesV2ListSourceListOutput values.
// You can construct a concrete instance of `L4RulesV2ListSourceListInput` via:
//
//          L4RulesV2ListSourceListArgs{...}
type L4RulesV2ListSourceListInput interface {
	pulumi.Input

	ToL4RulesV2ListSourceListOutput() L4RulesV2ListSourceListOutput
	ToL4RulesV2ListSourceListOutputWithContext(context.Context) L4RulesV2ListSourceListOutput
}

type L4RulesV2ListSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L4RulesV2ListSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesV2ListSourceList)(nil)).Elem()
}

func (i L4RulesV2ListSourceListArgs) ToL4RulesV2ListSourceListOutput() L4RulesV2ListSourceListOutput {
	return i.ToL4RulesV2ListSourceListOutputWithContext(context.Background())
}

func (i L4RulesV2ListSourceListArgs) ToL4RulesV2ListSourceListOutputWithContext(ctx context.Context) L4RulesV2ListSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesV2ListSourceListOutput)
}

// L4RulesV2ListSourceListArrayInput is an input type that accepts L4RulesV2ListSourceListArray and L4RulesV2ListSourceListArrayOutput values.
// You can construct a concrete instance of `L4RulesV2ListSourceListArrayInput` via:
//
//          L4RulesV2ListSourceListArray{ L4RulesV2ListSourceListArgs{...} }
type L4RulesV2ListSourceListArrayInput interface {
	pulumi.Input

	ToL4RulesV2ListSourceListArrayOutput() L4RulesV2ListSourceListArrayOutput
	ToL4RulesV2ListSourceListArrayOutputWithContext(context.Context) L4RulesV2ListSourceListArrayOutput
}

type L4RulesV2ListSourceListArray []L4RulesV2ListSourceListInput

func (L4RulesV2ListSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesV2ListSourceList)(nil)).Elem()
}

func (i L4RulesV2ListSourceListArray) ToL4RulesV2ListSourceListArrayOutput() L4RulesV2ListSourceListArrayOutput {
	return i.ToL4RulesV2ListSourceListArrayOutputWithContext(context.Background())
}

func (i L4RulesV2ListSourceListArray) ToL4RulesV2ListSourceListArrayOutputWithContext(ctx context.Context) L4RulesV2ListSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4RulesV2ListSourceListArrayOutput)
}

type L4RulesV2ListSourceListOutput struct{ *pulumi.OutputState }

func (L4RulesV2ListSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesV2ListSourceList)(nil)).Elem()
}

func (o L4RulesV2ListSourceListOutput) ToL4RulesV2ListSourceListOutput() L4RulesV2ListSourceListOutput {
	return o
}

func (o L4RulesV2ListSourceListOutput) ToL4RulesV2ListSourceListOutputWithContext(ctx context.Context) L4RulesV2ListSourceListOutput {
	return o
}

func (o L4RulesV2ListSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesV2ListSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L4RulesV2ListSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L4RulesV2ListSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L4RulesV2ListSourceListArrayOutput struct{ *pulumi.OutputState }

func (L4RulesV2ListSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4RulesV2ListSourceList)(nil)).Elem()
}

func (o L4RulesV2ListSourceListArrayOutput) ToL4RulesV2ListSourceListArrayOutput() L4RulesV2ListSourceListArrayOutput {
	return o
}

func (o L4RulesV2ListSourceListArrayOutput) ToL4RulesV2ListSourceListArrayOutputWithContext(ctx context.Context) L4RulesV2ListSourceListArrayOutput {
	return o
}

func (o L4RulesV2ListSourceListArrayOutput) Index(i pulumi.IntInput) L4RulesV2ListSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4RulesV2ListSourceList {
		return vs[0].([]L4RulesV2ListSourceList)[vs[1].(int)]
	}).(L4RulesV2ListSourceListOutput)
}

type L7RuleV2Rule struct {
	CcEnable          *int                     `pulumi:"ccEnable"`
	CertType          *int                     `pulumi:"certType"`
	Domain            string                   `pulumi:"domain"`
	HttpsToHttpEnable *int                     `pulumi:"httpsToHttpEnable"`
	KeepEnable        int                      `pulumi:"keepEnable"`
	Keeptime          int                      `pulumi:"keeptime"`
	LbType            int                      `pulumi:"lbType"`
	Protocol          string                   `pulumi:"protocol"`
	SourceLists       []L7RuleV2RuleSourceList `pulumi:"sourceLists"`
	SourceType        int                      `pulumi:"sourceType"`
	SslId             *string                  `pulumi:"sslId"`
}

// L7RuleV2RuleInput is an input type that accepts L7RuleV2RuleArgs and L7RuleV2RuleOutput values.
// You can construct a concrete instance of `L7RuleV2RuleInput` via:
//
//          L7RuleV2RuleArgs{...}
type L7RuleV2RuleInput interface {
	pulumi.Input

	ToL7RuleV2RuleOutput() L7RuleV2RuleOutput
	ToL7RuleV2RuleOutputWithContext(context.Context) L7RuleV2RuleOutput
}

type L7RuleV2RuleArgs struct {
	CcEnable          pulumi.IntPtrInput               `pulumi:"ccEnable"`
	CertType          pulumi.IntPtrInput               `pulumi:"certType"`
	Domain            pulumi.StringInput               `pulumi:"domain"`
	HttpsToHttpEnable pulumi.IntPtrInput               `pulumi:"httpsToHttpEnable"`
	KeepEnable        pulumi.IntInput                  `pulumi:"keepEnable"`
	Keeptime          pulumi.IntInput                  `pulumi:"keeptime"`
	LbType            pulumi.IntInput                  `pulumi:"lbType"`
	Protocol          pulumi.StringInput               `pulumi:"protocol"`
	SourceLists       L7RuleV2RuleSourceListArrayInput `pulumi:"sourceLists"`
	SourceType        pulumi.IntInput                  `pulumi:"sourceType"`
	SslId             pulumi.StringPtrInput            `pulumi:"sslId"`
}

func (L7RuleV2RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RuleV2Rule)(nil)).Elem()
}

func (i L7RuleV2RuleArgs) ToL7RuleV2RuleOutput() L7RuleV2RuleOutput {
	return i.ToL7RuleV2RuleOutputWithContext(context.Background())
}

func (i L7RuleV2RuleArgs) ToL7RuleV2RuleOutputWithContext(ctx context.Context) L7RuleV2RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RuleV2RuleOutput)
}

func (i L7RuleV2RuleArgs) ToL7RuleV2RulePtrOutput() L7RuleV2RulePtrOutput {
	return i.ToL7RuleV2RulePtrOutputWithContext(context.Background())
}

func (i L7RuleV2RuleArgs) ToL7RuleV2RulePtrOutputWithContext(ctx context.Context) L7RuleV2RulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RuleV2RuleOutput).ToL7RuleV2RulePtrOutputWithContext(ctx)
}

// L7RuleV2RulePtrInput is an input type that accepts L7RuleV2RuleArgs, L7RuleV2RulePtr and L7RuleV2RulePtrOutput values.
// You can construct a concrete instance of `L7RuleV2RulePtrInput` via:
//
//          L7RuleV2RuleArgs{...}
//
//  or:
//
//          nil
type L7RuleV2RulePtrInput interface {
	pulumi.Input

	ToL7RuleV2RulePtrOutput() L7RuleV2RulePtrOutput
	ToL7RuleV2RulePtrOutputWithContext(context.Context) L7RuleV2RulePtrOutput
}

type l7ruleV2RulePtrType L7RuleV2RuleArgs

func L7RuleV2RulePtr(v *L7RuleV2RuleArgs) L7RuleV2RulePtrInput {
	return (*l7ruleV2RulePtrType)(v)
}

func (*l7ruleV2RulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**L7RuleV2Rule)(nil)).Elem()
}

func (i *l7ruleV2RulePtrType) ToL7RuleV2RulePtrOutput() L7RuleV2RulePtrOutput {
	return i.ToL7RuleV2RulePtrOutputWithContext(context.Background())
}

func (i *l7ruleV2RulePtrType) ToL7RuleV2RulePtrOutputWithContext(ctx context.Context) L7RuleV2RulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RuleV2RulePtrOutput)
}

type L7RuleV2RuleOutput struct{ *pulumi.OutputState }

func (L7RuleV2RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RuleV2Rule)(nil)).Elem()
}

func (o L7RuleV2RuleOutput) ToL7RuleV2RuleOutput() L7RuleV2RuleOutput {
	return o
}

func (o L7RuleV2RuleOutput) ToL7RuleV2RuleOutputWithContext(ctx context.Context) L7RuleV2RuleOutput {
	return o
}

func (o L7RuleV2RuleOutput) ToL7RuleV2RulePtrOutput() L7RuleV2RulePtrOutput {
	return o.ToL7RuleV2RulePtrOutputWithContext(context.Background())
}

func (o L7RuleV2RuleOutput) ToL7RuleV2RulePtrOutputWithContext(ctx context.Context) L7RuleV2RulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v L7RuleV2Rule) *L7RuleV2Rule {
		return &v
	}).(L7RuleV2RulePtrOutput)
}

func (o L7RuleV2RuleOutput) CcEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v L7RuleV2Rule) *int { return v.CcEnable }).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RuleOutput) CertType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v L7RuleV2Rule) *int { return v.CertType }).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v L7RuleV2Rule) string { return v.Domain }).(pulumi.StringOutput)
}

func (o L7RuleV2RuleOutput) HttpsToHttpEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v L7RuleV2Rule) *int { return v.HttpsToHttpEnable }).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RuleOutput) KeepEnable() pulumi.IntOutput {
	return o.ApplyT(func(v L7RuleV2Rule) int { return v.KeepEnable }).(pulumi.IntOutput)
}

func (o L7RuleV2RuleOutput) Keeptime() pulumi.IntOutput {
	return o.ApplyT(func(v L7RuleV2Rule) int { return v.Keeptime }).(pulumi.IntOutput)
}

func (o L7RuleV2RuleOutput) LbType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RuleV2Rule) int { return v.LbType }).(pulumi.IntOutput)
}

func (o L7RuleV2RuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L7RuleV2Rule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L7RuleV2RuleOutput) SourceLists() L7RuleV2RuleSourceListArrayOutput {
	return o.ApplyT(func(v L7RuleV2Rule) []L7RuleV2RuleSourceList { return v.SourceLists }).(L7RuleV2RuleSourceListArrayOutput)
}

func (o L7RuleV2RuleOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RuleV2Rule) int { return v.SourceType }).(pulumi.IntOutput)
}

func (o L7RuleV2RuleOutput) SslId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L7RuleV2Rule) *string { return v.SslId }).(pulumi.StringPtrOutput)
}

type L7RuleV2RulePtrOutput struct{ *pulumi.OutputState }

func (L7RuleV2RulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L7RuleV2Rule)(nil)).Elem()
}

func (o L7RuleV2RulePtrOutput) ToL7RuleV2RulePtrOutput() L7RuleV2RulePtrOutput {
	return o
}

func (o L7RuleV2RulePtrOutput) ToL7RuleV2RulePtrOutputWithContext(ctx context.Context) L7RuleV2RulePtrOutput {
	return o
}

func (o L7RuleV2RulePtrOutput) Elem() L7RuleV2RuleOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) L7RuleV2Rule {
		if v != nil {
			return *v
		}
		var ret L7RuleV2Rule
		return ret
	}).(L7RuleV2RuleOutput)
}

func (o L7RuleV2RulePtrOutput) CcEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return v.CcEnable
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) CertType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return v.CertType
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

func (o L7RuleV2RulePtrOutput) HttpsToHttpEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return v.HttpsToHttpEnable
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) KeepEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return &v.KeepEnable
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) Keeptime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return &v.Keeptime
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) LbType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return &v.LbType
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o L7RuleV2RulePtrOutput) SourceLists() L7RuleV2RuleSourceListArrayOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) []L7RuleV2RuleSourceList {
		if v == nil {
			return nil
		}
		return v.SourceLists
	}).(L7RuleV2RuleSourceListArrayOutput)
}

func (o L7RuleV2RulePtrOutput) SourceType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *int {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.IntPtrOutput)
}

func (o L7RuleV2RulePtrOutput) SslId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L7RuleV2Rule) *string {
		if v == nil {
			return nil
		}
		return v.SslId
	}).(pulumi.StringPtrOutput)
}

type L7RuleV2RuleSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L7RuleV2RuleSourceListInput is an input type that accepts L7RuleV2RuleSourceListArgs and L7RuleV2RuleSourceListOutput values.
// You can construct a concrete instance of `L7RuleV2RuleSourceListInput` via:
//
//          L7RuleV2RuleSourceListArgs{...}
type L7RuleV2RuleSourceListInput interface {
	pulumi.Input

	ToL7RuleV2RuleSourceListOutput() L7RuleV2RuleSourceListOutput
	ToL7RuleV2RuleSourceListOutputWithContext(context.Context) L7RuleV2RuleSourceListOutput
}

type L7RuleV2RuleSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L7RuleV2RuleSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RuleV2RuleSourceList)(nil)).Elem()
}

func (i L7RuleV2RuleSourceListArgs) ToL7RuleV2RuleSourceListOutput() L7RuleV2RuleSourceListOutput {
	return i.ToL7RuleV2RuleSourceListOutputWithContext(context.Background())
}

func (i L7RuleV2RuleSourceListArgs) ToL7RuleV2RuleSourceListOutputWithContext(ctx context.Context) L7RuleV2RuleSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RuleV2RuleSourceListOutput)
}

// L7RuleV2RuleSourceListArrayInput is an input type that accepts L7RuleV2RuleSourceListArray and L7RuleV2RuleSourceListArrayOutput values.
// You can construct a concrete instance of `L7RuleV2RuleSourceListArrayInput` via:
//
//          L7RuleV2RuleSourceListArray{ L7RuleV2RuleSourceListArgs{...} }
type L7RuleV2RuleSourceListArrayInput interface {
	pulumi.Input

	ToL7RuleV2RuleSourceListArrayOutput() L7RuleV2RuleSourceListArrayOutput
	ToL7RuleV2RuleSourceListArrayOutputWithContext(context.Context) L7RuleV2RuleSourceListArrayOutput
}

type L7RuleV2RuleSourceListArray []L7RuleV2RuleSourceListInput

func (L7RuleV2RuleSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RuleV2RuleSourceList)(nil)).Elem()
}

func (i L7RuleV2RuleSourceListArray) ToL7RuleV2RuleSourceListArrayOutput() L7RuleV2RuleSourceListArrayOutput {
	return i.ToL7RuleV2RuleSourceListArrayOutputWithContext(context.Background())
}

func (i L7RuleV2RuleSourceListArray) ToL7RuleV2RuleSourceListArrayOutputWithContext(ctx context.Context) L7RuleV2RuleSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RuleV2RuleSourceListArrayOutput)
}

type L7RuleV2RuleSourceListOutput struct{ *pulumi.OutputState }

func (L7RuleV2RuleSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RuleV2RuleSourceList)(nil)).Elem()
}

func (o L7RuleV2RuleSourceListOutput) ToL7RuleV2RuleSourceListOutput() L7RuleV2RuleSourceListOutput {
	return o
}

func (o L7RuleV2RuleSourceListOutput) ToL7RuleV2RuleSourceListOutputWithContext(ctx context.Context) L7RuleV2RuleSourceListOutput {
	return o
}

func (o L7RuleV2RuleSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L7RuleV2RuleSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L7RuleV2RuleSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L7RuleV2RuleSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L7RuleV2RuleSourceListArrayOutput struct{ *pulumi.OutputState }

func (L7RuleV2RuleSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RuleV2RuleSourceList)(nil)).Elem()
}

func (o L7RuleV2RuleSourceListArrayOutput) ToL7RuleV2RuleSourceListArrayOutput() L7RuleV2RuleSourceListArrayOutput {
	return o
}

func (o L7RuleV2RuleSourceListArrayOutput) ToL7RuleV2RuleSourceListArrayOutputWithContext(ctx context.Context) L7RuleV2RuleSourceListArrayOutput {
	return o
}

func (o L7RuleV2RuleSourceListArrayOutput) Index(i pulumi.IntInput) L7RuleV2RuleSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L7RuleV2RuleSourceList {
		return vs[0].([]L7RuleV2RuleSourceList)[vs[1].(int)]
	}).(L7RuleV2RuleSourceListOutput)
}

type L7RulesList struct {
	Domain                 string   `pulumi:"domain"`
	HealthCheckCode        int      `pulumi:"healthCheckCode"`
	HealthCheckHealthNum   int      `pulumi:"healthCheckHealthNum"`
	HealthCheckInterval    int      `pulumi:"healthCheckInterval"`
	HealthCheckMethod      string   `pulumi:"healthCheckMethod"`
	HealthCheckPath        string   `pulumi:"healthCheckPath"`
	HealthCheckSwitch      bool     `pulumi:"healthCheckSwitch"`
	HealthCheckUnhealthNum int      `pulumi:"healthCheckUnhealthNum"`
	Name                   string   `pulumi:"name"`
	Protocol               string   `pulumi:"protocol"`
	RuleId                 string   `pulumi:"ruleId"`
	SourceLists            []string `pulumi:"sourceLists"`
	SourceType             int      `pulumi:"sourceType"`
	SslId                  string   `pulumi:"sslId"`
	Status                 int      `pulumi:"status"`
	Switch                 bool     `pulumi:"switch"`
	Threshold              int      `pulumi:"threshold"`
}

// L7RulesListInput is an input type that accepts L7RulesListArgs and L7RulesListOutput values.
// You can construct a concrete instance of `L7RulesListInput` via:
//
//          L7RulesListArgs{...}
type L7RulesListInput interface {
	pulumi.Input

	ToL7RulesListOutput() L7RulesListOutput
	ToL7RulesListOutputWithContext(context.Context) L7RulesListOutput
}

type L7RulesListArgs struct {
	Domain                 pulumi.StringInput      `pulumi:"domain"`
	HealthCheckCode        pulumi.IntInput         `pulumi:"healthCheckCode"`
	HealthCheckHealthNum   pulumi.IntInput         `pulumi:"healthCheckHealthNum"`
	HealthCheckInterval    pulumi.IntInput         `pulumi:"healthCheckInterval"`
	HealthCheckMethod      pulumi.StringInput      `pulumi:"healthCheckMethod"`
	HealthCheckPath        pulumi.StringInput      `pulumi:"healthCheckPath"`
	HealthCheckSwitch      pulumi.BoolInput        `pulumi:"healthCheckSwitch"`
	HealthCheckUnhealthNum pulumi.IntInput         `pulumi:"healthCheckUnhealthNum"`
	Name                   pulumi.StringInput      `pulumi:"name"`
	Protocol               pulumi.StringInput      `pulumi:"protocol"`
	RuleId                 pulumi.StringInput      `pulumi:"ruleId"`
	SourceLists            pulumi.StringArrayInput `pulumi:"sourceLists"`
	SourceType             pulumi.IntInput         `pulumi:"sourceType"`
	SslId                  pulumi.StringInput      `pulumi:"sslId"`
	Status                 pulumi.IntInput         `pulumi:"status"`
	Switch                 pulumi.BoolInput        `pulumi:"switch"`
	Threshold              pulumi.IntInput         `pulumi:"threshold"`
}

func (L7RulesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesList)(nil)).Elem()
}

func (i L7RulesListArgs) ToL7RulesListOutput() L7RulesListOutput {
	return i.ToL7RulesListOutputWithContext(context.Background())
}

func (i L7RulesListArgs) ToL7RulesListOutputWithContext(ctx context.Context) L7RulesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesListOutput)
}

// L7RulesListArrayInput is an input type that accepts L7RulesListArray and L7RulesListArrayOutput values.
// You can construct a concrete instance of `L7RulesListArrayInput` via:
//
//          L7RulesListArray{ L7RulesListArgs{...} }
type L7RulesListArrayInput interface {
	pulumi.Input

	ToL7RulesListArrayOutput() L7RulesListArrayOutput
	ToL7RulesListArrayOutputWithContext(context.Context) L7RulesListArrayOutput
}

type L7RulesListArray []L7RulesListInput

func (L7RulesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesList)(nil)).Elem()
}

func (i L7RulesListArray) ToL7RulesListArrayOutput() L7RulesListArrayOutput {
	return i.ToL7RulesListArrayOutputWithContext(context.Background())
}

func (i L7RulesListArray) ToL7RulesListArrayOutputWithContext(ctx context.Context) L7RulesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesListArrayOutput)
}

type L7RulesListOutput struct{ *pulumi.OutputState }

func (L7RulesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesList)(nil)).Elem()
}

func (o L7RulesListOutput) ToL7RulesListOutput() L7RulesListOutput {
	return o
}

func (o L7RulesListOutput) ToL7RulesListOutputWithContext(ctx context.Context) L7RulesListOutput {
	return o
}

func (o L7RulesListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) HealthCheckCode() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.HealthCheckCode }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) HealthCheckHealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.HealthCheckHealthNum }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) HealthCheckSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v L7RulesList) bool { return v.HealthCheckSwitch }).(pulumi.BoolOutput)
}

func (o L7RulesListOutput) HealthCheckUnhealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.HealthCheckUnhealthNum }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.Name }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) SourceLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v L7RulesList) []string { return v.SourceLists }).(pulumi.StringArrayOutput)
}

func (o L7RulesListOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.SourceType }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) SslId() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesList) string { return v.SslId }).(pulumi.StringOutput)
}

func (o L7RulesListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.Status }).(pulumi.IntOutput)
}

func (o L7RulesListOutput) Switch() pulumi.BoolOutput {
	return o.ApplyT(func(v L7RulesList) bool { return v.Switch }).(pulumi.BoolOutput)
}

func (o L7RulesListOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesList) int { return v.Threshold }).(pulumi.IntOutput)
}

type L7RulesListArrayOutput struct{ *pulumi.OutputState }

func (L7RulesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesList)(nil)).Elem()
}

func (o L7RulesListArrayOutput) ToL7RulesListArrayOutput() L7RulesListArrayOutput {
	return o
}

func (o L7RulesListArrayOutput) ToL7RulesListArrayOutputWithContext(ctx context.Context) L7RulesListArrayOutput {
	return o
}

func (o L7RulesListArrayOutput) Index(i pulumi.IntInput) L7RulesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L7RulesList {
		return vs[0].([]L7RulesList)[vs[1].(int)]
	}).(L7RulesListOutput)
}

type L7RulesV2List struct {
	CcEnable          int                       `pulumi:"ccEnable"`
	CcLevel           string                    `pulumi:"ccLevel"`
	CcStatus          int                       `pulumi:"ccStatus"`
	CcThreshold       int                       `pulumi:"ccThreshold"`
	CertType          int                       `pulumi:"certType"`
	Domain            string                    `pulumi:"domain"`
	HttpsToHttpEnable int                       `pulumi:"httpsToHttpEnable"`
	Id                string                    `pulumi:"id"`
	Ip                string                    `pulumi:"ip"`
	KeepEnable        int                       `pulumi:"keepEnable"`
	KeepTime          int                       `pulumi:"keepTime"`
	LbType            int                       `pulumi:"lbType"`
	ModifyTime        string                    `pulumi:"modifyTime"`
	Protocol          string                    `pulumi:"protocol"`
	Region            int                       `pulumi:"region"`
	RuleName          string                    `pulumi:"ruleName"`
	SourceLists       []L7RulesV2ListSourceList `pulumi:"sourceLists"`
	SourceType        int                       `pulumi:"sourceType"`
	SslId             string                    `pulumi:"sslId"`
	Status            int                       `pulumi:"status"`
	VirtualPort       int                       `pulumi:"virtualPort"`
}

// L7RulesV2ListInput is an input type that accepts L7RulesV2ListArgs and L7RulesV2ListOutput values.
// You can construct a concrete instance of `L7RulesV2ListInput` via:
//
//          L7RulesV2ListArgs{...}
type L7RulesV2ListInput interface {
	pulumi.Input

	ToL7RulesV2ListOutput() L7RulesV2ListOutput
	ToL7RulesV2ListOutputWithContext(context.Context) L7RulesV2ListOutput
}

type L7RulesV2ListArgs struct {
	CcEnable          pulumi.IntInput                   `pulumi:"ccEnable"`
	CcLevel           pulumi.StringInput                `pulumi:"ccLevel"`
	CcStatus          pulumi.IntInput                   `pulumi:"ccStatus"`
	CcThreshold       pulumi.IntInput                   `pulumi:"ccThreshold"`
	CertType          pulumi.IntInput                   `pulumi:"certType"`
	Domain            pulumi.StringInput                `pulumi:"domain"`
	HttpsToHttpEnable pulumi.IntInput                   `pulumi:"httpsToHttpEnable"`
	Id                pulumi.StringInput                `pulumi:"id"`
	Ip                pulumi.StringInput                `pulumi:"ip"`
	KeepEnable        pulumi.IntInput                   `pulumi:"keepEnable"`
	KeepTime          pulumi.IntInput                   `pulumi:"keepTime"`
	LbType            pulumi.IntInput                   `pulumi:"lbType"`
	ModifyTime        pulumi.StringInput                `pulumi:"modifyTime"`
	Protocol          pulumi.StringInput                `pulumi:"protocol"`
	Region            pulumi.IntInput                   `pulumi:"region"`
	RuleName          pulumi.StringInput                `pulumi:"ruleName"`
	SourceLists       L7RulesV2ListSourceListArrayInput `pulumi:"sourceLists"`
	SourceType        pulumi.IntInput                   `pulumi:"sourceType"`
	SslId             pulumi.StringInput                `pulumi:"sslId"`
	Status            pulumi.IntInput                   `pulumi:"status"`
	VirtualPort       pulumi.IntInput                   `pulumi:"virtualPort"`
}

func (L7RulesV2ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesV2List)(nil)).Elem()
}

func (i L7RulesV2ListArgs) ToL7RulesV2ListOutput() L7RulesV2ListOutput {
	return i.ToL7RulesV2ListOutputWithContext(context.Background())
}

func (i L7RulesV2ListArgs) ToL7RulesV2ListOutputWithContext(ctx context.Context) L7RulesV2ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesV2ListOutput)
}

// L7RulesV2ListArrayInput is an input type that accepts L7RulesV2ListArray and L7RulesV2ListArrayOutput values.
// You can construct a concrete instance of `L7RulesV2ListArrayInput` via:
//
//          L7RulesV2ListArray{ L7RulesV2ListArgs{...} }
type L7RulesV2ListArrayInput interface {
	pulumi.Input

	ToL7RulesV2ListArrayOutput() L7RulesV2ListArrayOutput
	ToL7RulesV2ListArrayOutputWithContext(context.Context) L7RulesV2ListArrayOutput
}

type L7RulesV2ListArray []L7RulesV2ListInput

func (L7RulesV2ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesV2List)(nil)).Elem()
}

func (i L7RulesV2ListArray) ToL7RulesV2ListArrayOutput() L7RulesV2ListArrayOutput {
	return i.ToL7RulesV2ListArrayOutputWithContext(context.Background())
}

func (i L7RulesV2ListArray) ToL7RulesV2ListArrayOutputWithContext(ctx context.Context) L7RulesV2ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesV2ListArrayOutput)
}

type L7RulesV2ListOutput struct{ *pulumi.OutputState }

func (L7RulesV2ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesV2List)(nil)).Elem()
}

func (o L7RulesV2ListOutput) ToL7RulesV2ListOutput() L7RulesV2ListOutput {
	return o
}

func (o L7RulesV2ListOutput) ToL7RulesV2ListOutputWithContext(ctx context.Context) L7RulesV2ListOutput {
	return o
}

func (o L7RulesV2ListOutput) CcEnable() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.CcEnable }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) CcLevel() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.CcLevel }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) CcStatus() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.CcStatus }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) CcThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.CcThreshold }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) CertType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.CertType }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.Domain }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) HttpsToHttpEnable() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.HttpsToHttpEnable }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.Id }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.Ip }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) KeepEnable() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.KeepEnable }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) KeepTime() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.KeepTime }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) LbType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.LbType }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) Region() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.Region }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) SourceLists() L7RulesV2ListSourceListArrayOutput {
	return o.ApplyT(func(v L7RulesV2List) []L7RulesV2ListSourceList { return v.SourceLists }).(L7RulesV2ListSourceListArrayOutput)
}

func (o L7RulesV2ListOutput) SourceType() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.SourceType }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) SslId() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2List) string { return v.SslId }).(pulumi.StringOutput)
}

func (o L7RulesV2ListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.Status }).(pulumi.IntOutput)
}

func (o L7RulesV2ListOutput) VirtualPort() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2List) int { return v.VirtualPort }).(pulumi.IntOutput)
}

type L7RulesV2ListArrayOutput struct{ *pulumi.OutputState }

func (L7RulesV2ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesV2List)(nil)).Elem()
}

func (o L7RulesV2ListArrayOutput) ToL7RulesV2ListArrayOutput() L7RulesV2ListArrayOutput {
	return o
}

func (o L7RulesV2ListArrayOutput) ToL7RulesV2ListArrayOutputWithContext(ctx context.Context) L7RulesV2ListArrayOutput {
	return o
}

func (o L7RulesV2ListArrayOutput) Index(i pulumi.IntInput) L7RulesV2ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L7RulesV2List {
		return vs[0].([]L7RulesV2List)[vs[1].(int)]
	}).(L7RulesV2ListOutput)
}

type L7RulesV2ListSourceList struct {
	Source string `pulumi:"source"`
	Weight int    `pulumi:"weight"`
}

// L7RulesV2ListSourceListInput is an input type that accepts L7RulesV2ListSourceListArgs and L7RulesV2ListSourceListOutput values.
// You can construct a concrete instance of `L7RulesV2ListSourceListInput` via:
//
//          L7RulesV2ListSourceListArgs{...}
type L7RulesV2ListSourceListInput interface {
	pulumi.Input

	ToL7RulesV2ListSourceListOutput() L7RulesV2ListSourceListOutput
	ToL7RulesV2ListSourceListOutputWithContext(context.Context) L7RulesV2ListSourceListOutput
}

type L7RulesV2ListSourceListArgs struct {
	Source pulumi.StringInput `pulumi:"source"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (L7RulesV2ListSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesV2ListSourceList)(nil)).Elem()
}

func (i L7RulesV2ListSourceListArgs) ToL7RulesV2ListSourceListOutput() L7RulesV2ListSourceListOutput {
	return i.ToL7RulesV2ListSourceListOutputWithContext(context.Background())
}

func (i L7RulesV2ListSourceListArgs) ToL7RulesV2ListSourceListOutputWithContext(ctx context.Context) L7RulesV2ListSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesV2ListSourceListOutput)
}

// L7RulesV2ListSourceListArrayInput is an input type that accepts L7RulesV2ListSourceListArray and L7RulesV2ListSourceListArrayOutput values.
// You can construct a concrete instance of `L7RulesV2ListSourceListArrayInput` via:
//
//          L7RulesV2ListSourceListArray{ L7RulesV2ListSourceListArgs{...} }
type L7RulesV2ListSourceListArrayInput interface {
	pulumi.Input

	ToL7RulesV2ListSourceListArrayOutput() L7RulesV2ListSourceListArrayOutput
	ToL7RulesV2ListSourceListArrayOutputWithContext(context.Context) L7RulesV2ListSourceListArrayOutput
}

type L7RulesV2ListSourceListArray []L7RulesV2ListSourceListInput

func (L7RulesV2ListSourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesV2ListSourceList)(nil)).Elem()
}

func (i L7RulesV2ListSourceListArray) ToL7RulesV2ListSourceListArrayOutput() L7RulesV2ListSourceListArrayOutput {
	return i.ToL7RulesV2ListSourceListArrayOutputWithContext(context.Background())
}

func (i L7RulesV2ListSourceListArray) ToL7RulesV2ListSourceListArrayOutputWithContext(ctx context.Context) L7RulesV2ListSourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L7RulesV2ListSourceListArrayOutput)
}

type L7RulesV2ListSourceListOutput struct{ *pulumi.OutputState }

func (L7RulesV2ListSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L7RulesV2ListSourceList)(nil)).Elem()
}

func (o L7RulesV2ListSourceListOutput) ToL7RulesV2ListSourceListOutput() L7RulesV2ListSourceListOutput {
	return o
}

func (o L7RulesV2ListSourceListOutput) ToL7RulesV2ListSourceListOutputWithContext(ctx context.Context) L7RulesV2ListSourceListOutput {
	return o
}

func (o L7RulesV2ListSourceListOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v L7RulesV2ListSourceList) string { return v.Source }).(pulumi.StringOutput)
}

func (o L7RulesV2ListSourceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v L7RulesV2ListSourceList) int { return v.Weight }).(pulumi.IntOutput)
}

type L7RulesV2ListSourceListArrayOutput struct{ *pulumi.OutputState }

func (L7RulesV2ListSourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L7RulesV2ListSourceList)(nil)).Elem()
}

func (o L7RulesV2ListSourceListArrayOutput) ToL7RulesV2ListSourceListArrayOutput() L7RulesV2ListSourceListArrayOutput {
	return o
}

func (o L7RulesV2ListSourceListArrayOutput) ToL7RulesV2ListSourceListArrayOutputWithContext(ctx context.Context) L7RulesV2ListSourceListArrayOutput {
	return o
}

func (o L7RulesV2ListSourceListArrayOutput) Index(i pulumi.IntInput) L7RulesV2ListSourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L7RulesV2ListSourceList {
		return vs[0].([]L7RulesV2ListSourceList)[vs[1].(int)]
	}).(L7RulesV2ListSourceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPoliciesListInput)(nil)).Elem(), CCHttpPoliciesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPoliciesListArrayInput)(nil)).Elem(), CCHttpPoliciesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPoliciesListRuleListInput)(nil)).Elem(), CCHttpPoliciesListRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPoliciesListRuleListArrayInput)(nil)).Elem(), CCHttpPoliciesListRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPolicyRuleListInput)(nil)).Elem(), CCHttpPolicyRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpPolicyRuleListArrayInput)(nil)).Elem(), CCHttpPolicyRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPoliciesListInput)(nil)).Elem(), CCHttpsPoliciesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPoliciesListArrayInput)(nil)).Elem(), CCHttpsPoliciesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPoliciesListRuleListInput)(nil)).Elem(), CCHttpsPoliciesListRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPoliciesListRuleListArrayInput)(nil)).Elem(), CCHttpsPoliciesListRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPolicyRuleListInput)(nil)).Elem(), CCHttpsPolicyRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCHttpsPolicyRuleListArrayInput)(nil)).Elem(), CCHttpsPolicyRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcBlackWhiteIpInput)(nil)).Elem(), CCPolicyV2CcBlackWhiteIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcBlackWhiteIpArrayInput)(nil)).Elem(), CCPolicyV2CcBlackWhiteIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcGeoIpPolicyInput)(nil)).Elem(), CCPolicyV2CcGeoIpPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcGeoIpPolicyArrayInput)(nil)).Elem(), CCPolicyV2CcGeoIpPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyInput)(nil)).Elem(), CCPolicyV2CcPrecisionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyArrayInput)(nil)).Elem(), CCPolicyV2CcPrecisionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyPolicyInput)(nil)).Elem(), CCPolicyV2CcPrecisionPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionPolicyPolicyArrayInput)(nil)).Elem(), CCPolicyV2CcPrecisionPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitInput)(nil)).Elem(), CCPolicyV2CcPrecisionReqLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitArrayInput)(nil)).Elem(), CCPolicyV2CcPrecisionReqLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitPolicyInput)(nil)).Elem(), CCPolicyV2CcPrecisionReqLimitPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2CcPrecisionReqLimitPolicyArrayInput)(nil)).Elem(), CCPolicyV2CcPrecisionReqLimitPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2ThresholdInput)(nil)).Elem(), CCPolicyV2ThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CCPolicyV2ThresholdArrayInput)(nil)).Elem(), CCPolicyV2ThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListInput)(nil)).Elem(), DdosPoliciesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListArrayInput)(nil)).Elem(), DdosPoliciesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListDropOptionInput)(nil)).Elem(), DdosPoliciesListDropOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListDropOptionArrayInput)(nil)).Elem(), DdosPoliciesListDropOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListPacketFilterInput)(nil)).Elem(), DdosPoliciesListPacketFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListPacketFilterArrayInput)(nil)).Elem(), DdosPoliciesListPacketFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListPortFilterInput)(nil)).Elem(), DdosPoliciesListPortFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListPortFilterArrayInput)(nil)).Elem(), DdosPoliciesListPortFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListWatermarkFilterInput)(nil)).Elem(), DdosPoliciesListWatermarkFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListWatermarkFilterArrayInput)(nil)).Elem(), DdosPoliciesListWatermarkFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListWatermarkKeyInput)(nil)).Elem(), DdosPoliciesListWatermarkKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPoliciesListWatermarkKeyArrayInput)(nil)).Elem(), DdosPoliciesListWatermarkKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyAttachmentsDayuDdosPolicyAttachmentListInput)(nil)).Elem(), DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayInput)(nil)).Elem(), DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyCasesListInput)(nil)).Elem(), DdosPolicyCasesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyCasesListArrayInput)(nil)).Elem(), DdosPolicyCasesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyDropOptionInput)(nil)).Elem(), DdosPolicyDropOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyDropOptionArrayInput)(nil)).Elem(), DdosPolicyDropOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyPacketFilterInput)(nil)).Elem(), DdosPolicyPacketFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyPacketFilterArrayInput)(nil)).Elem(), DdosPolicyPacketFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyPortFilterInput)(nil)).Elem(), DdosPolicyPortFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyPortFilterArrayInput)(nil)).Elem(), DdosPolicyPortFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2AclInput)(nil)).Elem(), DdosPolicyV2AclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2AclArrayInput)(nil)).Elem(), DdosPolicyV2AclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2BlackWhiteIpInput)(nil)).Elem(), DdosPolicyV2BlackWhiteIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2BlackWhiteIpArrayInput)(nil)).Elem(), DdosPolicyV2BlackWhiteIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosConnectLimitInput)(nil)).Elem(), DdosPolicyV2DdosConnectLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosConnectLimitPtrInput)(nil)).Elem(), DdosPolicyV2DdosConnectLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosGeoIpBlockConfigInput)(nil)).Elem(), DdosPolicyV2DdosGeoIpBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosGeoIpBlockConfigArrayInput)(nil)).Elem(), DdosPolicyV2DdosGeoIpBlockConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosSpeedLimitConfigInput)(nil)).Elem(), DdosPolicyV2DdosSpeedLimitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2DdosSpeedLimitConfigArrayInput)(nil)).Elem(), DdosPolicyV2DdosSpeedLimitConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2PacketFilterInput)(nil)).Elem(), DdosPolicyV2PacketFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2PacketFilterArrayInput)(nil)).Elem(), DdosPolicyV2PacketFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2ProtocolBlockConfigInput)(nil)).Elem(), DdosPolicyV2ProtocolBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2ProtocolBlockConfigArrayInput)(nil)).Elem(), DdosPolicyV2ProtocolBlockConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyWatermarkFilterInput)(nil)).Elem(), DdosPolicyWatermarkFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyWatermarkFilterArrayInput)(nil)).Elem(), DdosPolicyWatermarkFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyWatermarkKeyInput)(nil)).Elem(), DdosPolicyWatermarkKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyWatermarkKeyArrayInput)(nil)).Elem(), DdosPolicyWatermarkKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleSourceListInput)(nil)).Elem(), L4RuleSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleSourceListArrayInput)(nil)).Elem(), L4RuleSourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleV2RulesInput)(nil)).Elem(), L4RuleV2RulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleV2RulesPtrInput)(nil)).Elem(), L4RuleV2RulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleV2RulesSourceListInput)(nil)).Elem(), L4RuleV2RulesSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RuleV2RulesSourceListArrayInput)(nil)).Elem(), L4RuleV2RulesSourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesListInput)(nil)).Elem(), L4RulesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesListArrayInput)(nil)).Elem(), L4RulesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesListSourceListInput)(nil)).Elem(), L4RulesListSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesListSourceListArrayInput)(nil)).Elem(), L4RulesListSourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesV2ListInput)(nil)).Elem(), L4RulesV2ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesV2ListArrayInput)(nil)).Elem(), L4RulesV2ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesV2ListSourceListInput)(nil)).Elem(), L4RulesV2ListSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4RulesV2ListSourceListArrayInput)(nil)).Elem(), L4RulesV2ListSourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RuleV2RuleInput)(nil)).Elem(), L7RuleV2RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RuleV2RulePtrInput)(nil)).Elem(), L7RuleV2RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RuleV2RuleSourceListInput)(nil)).Elem(), L7RuleV2RuleSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RuleV2RuleSourceListArrayInput)(nil)).Elem(), L7RuleV2RuleSourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesListInput)(nil)).Elem(), L7RulesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesListArrayInput)(nil)).Elem(), L7RulesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesV2ListInput)(nil)).Elem(), L7RulesV2ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesV2ListArrayInput)(nil)).Elem(), L7RulesV2ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesV2ListSourceListInput)(nil)).Elem(), L7RulesV2ListSourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L7RulesV2ListSourceListArrayInput)(nil)).Elem(), L7RulesV2ListSourceListArray{})
	pulumi.RegisterOutputType(CCHttpPoliciesListOutput{})
	pulumi.RegisterOutputType(CCHttpPoliciesListArrayOutput{})
	pulumi.RegisterOutputType(CCHttpPoliciesListRuleListOutput{})
	pulumi.RegisterOutputType(CCHttpPoliciesListRuleListArrayOutput{})
	pulumi.RegisterOutputType(CCHttpPolicyRuleListOutput{})
	pulumi.RegisterOutputType(CCHttpPolicyRuleListArrayOutput{})
	pulumi.RegisterOutputType(CCHttpsPoliciesListOutput{})
	pulumi.RegisterOutputType(CCHttpsPoliciesListArrayOutput{})
	pulumi.RegisterOutputType(CCHttpsPoliciesListRuleListOutput{})
	pulumi.RegisterOutputType(CCHttpsPoliciesListRuleListArrayOutput{})
	pulumi.RegisterOutputType(CCHttpsPolicyRuleListOutput{})
	pulumi.RegisterOutputType(CCHttpsPolicyRuleListArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcBlackWhiteIpOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcBlackWhiteIpArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcGeoIpPolicyOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcGeoIpPolicyArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionPolicyOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionPolicyArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionPolicyPolicyOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionReqLimitOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionReqLimitArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionReqLimitPolicyOutput{})
	pulumi.RegisterOutputType(CCPolicyV2CcPrecisionReqLimitPolicyArrayOutput{})
	pulumi.RegisterOutputType(CCPolicyV2ThresholdOutput{})
	pulumi.RegisterOutputType(CCPolicyV2ThresholdArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListDropOptionOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListDropOptionArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListPacketFilterOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListPacketFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListPortFilterOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListPortFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListWatermarkFilterOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListWatermarkFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListWatermarkKeyOutput{})
	pulumi.RegisterOutputType(DdosPoliciesListWatermarkKeyArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyAttachmentsDayuDdosPolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(DdosPolicyAttachmentsDayuDdosPolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyCasesListOutput{})
	pulumi.RegisterOutputType(DdosPolicyCasesListArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyDropOptionOutput{})
	pulumi.RegisterOutputType(DdosPolicyDropOptionArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyPacketFilterOutput{})
	pulumi.RegisterOutputType(DdosPolicyPacketFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyPortFilterOutput{})
	pulumi.RegisterOutputType(DdosPolicyPortFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2AclOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2AclArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2BlackWhiteIpOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2BlackWhiteIpArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosConnectLimitOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosConnectLimitPtrOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosGeoIpBlockConfigOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosGeoIpBlockConfigArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosSpeedLimitConfigOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2DdosSpeedLimitConfigArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2PacketFilterOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2PacketFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2ProtocolBlockConfigOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2ProtocolBlockConfigArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyWatermarkFilterOutput{})
	pulumi.RegisterOutputType(DdosPolicyWatermarkFilterArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyWatermarkKeyOutput{})
	pulumi.RegisterOutputType(DdosPolicyWatermarkKeyArrayOutput{})
	pulumi.RegisterOutputType(L4RuleSourceListOutput{})
	pulumi.RegisterOutputType(L4RuleSourceListArrayOutput{})
	pulumi.RegisterOutputType(L4RuleV2RulesOutput{})
	pulumi.RegisterOutputType(L4RuleV2RulesPtrOutput{})
	pulumi.RegisterOutputType(L4RuleV2RulesSourceListOutput{})
	pulumi.RegisterOutputType(L4RuleV2RulesSourceListArrayOutput{})
	pulumi.RegisterOutputType(L4RulesListOutput{})
	pulumi.RegisterOutputType(L4RulesListArrayOutput{})
	pulumi.RegisterOutputType(L4RulesListSourceListOutput{})
	pulumi.RegisterOutputType(L4RulesListSourceListArrayOutput{})
	pulumi.RegisterOutputType(L4RulesV2ListOutput{})
	pulumi.RegisterOutputType(L4RulesV2ListArrayOutput{})
	pulumi.RegisterOutputType(L4RulesV2ListSourceListOutput{})
	pulumi.RegisterOutputType(L4RulesV2ListSourceListArrayOutput{})
	pulumi.RegisterOutputType(L7RuleV2RuleOutput{})
	pulumi.RegisterOutputType(L7RuleV2RulePtrOutput{})
	pulumi.RegisterOutputType(L7RuleV2RuleSourceListOutput{})
	pulumi.RegisterOutputType(L7RuleV2RuleSourceListArrayOutput{})
	pulumi.RegisterOutputType(L7RulesListOutput{})
	pulumi.RegisterOutputType(L7RulesListArrayOutput{})
	pulumi.RegisterOutputType(L7RulesV2ListOutput{})
	pulumi.RegisterOutputType(L7RulesV2ListArrayOutput{})
	pulumi.RegisterOutputType(L7RulesV2ListSourceListOutput{})
	pulumi.RegisterOutputType(L7RulesV2ListSourceListArrayOutput{})
}
