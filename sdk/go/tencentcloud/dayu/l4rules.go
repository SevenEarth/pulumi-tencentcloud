// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func L4Rules(ctx *pulumi.Context, args *L4RulesArgs, opts ...pulumi.InvokeOption) (*L4RulesResult, error) {
	var rv L4RulesResult
	err := ctx.Invoke("tencentcloud:Dayu/l4Rules:L4Rules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking L4Rules.
type L4RulesArgs struct {
	Name             *string `pulumi:"name"`
	ResourceId       string  `pulumi:"resourceId"`
	ResourceType     string  `pulumi:"resourceType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RuleId           *string `pulumi:"ruleId"`
}

// A collection of values returned by L4Rules.
type L4RulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string        `pulumi:"id"`
	Lists            []L4RulesList `pulumi:"lists"`
	Name             *string       `pulumi:"name"`
	ResourceId       string        `pulumi:"resourceId"`
	ResourceType     string        `pulumi:"resourceType"`
	ResultOutputFile *string       `pulumi:"resultOutputFile"`
	RuleId           *string       `pulumi:"ruleId"`
}

func L4RulesOutput(ctx *pulumi.Context, args L4RulesOutputArgs, opts ...pulumi.InvokeOption) L4RulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (L4RulesResult, error) {
			args := v.(L4RulesArgs)
			r, err := L4Rules(ctx, &args, opts...)
			var s L4RulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(L4RulesResultOutput)
}

// A collection of arguments for invoking L4Rules.
type L4RulesOutputArgs struct {
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResourceId       pulumi.StringInput    `pulumi:"resourceId"`
	ResourceType     pulumi.StringInput    `pulumi:"resourceType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RuleId           pulumi.StringPtrInput `pulumi:"ruleId"`
}

func (L4RulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesArgs)(nil)).Elem()
}

// A collection of values returned by L4Rules.
type L4RulesResultOutput struct{ *pulumi.OutputState }

func (L4RulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4RulesResult)(nil)).Elem()
}

func (o L4RulesResultOutput) ToL4RulesResultOutput() L4RulesResultOutput {
	return o
}

func (o L4RulesResultOutput) ToL4RulesResultOutputWithContext(ctx context.Context) L4RulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o L4RulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o L4RulesResultOutput) Lists() L4RulesListArrayOutput {
	return o.ApplyT(func(v L4RulesResult) []L4RulesList { return v.Lists }).(L4RulesListArrayOutput)
}

func (o L4RulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4RulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o L4RulesResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o L4RulesResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v L4RulesResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o L4RulesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4RulesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o L4RulesResultOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4RulesResult) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(L4RulesResultOutput{})
}
