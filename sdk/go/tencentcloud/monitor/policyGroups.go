// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func PolicyGroups(ctx *pulumi.Context, args *PolicyGroupsArgs, opts ...pulumi.InvokeOption) (*PolicyGroupsResult, error) {
	var rv PolicyGroupsResult
	err := ctx.Invoke("tencentcloud:Monitor/policyGroups:PolicyGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking PolicyGroups.
type PolicyGroupsArgs struct {
	Name             *string  `pulumi:"name"`
	PolicyViewNames  []string `pulumi:"policyViewNames"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

// A collection of values returned by PolicyGroups.
type PolicyGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string             `pulumi:"id"`
	Lists            []PolicyGroupsList `pulumi:"lists"`
	Name             *string            `pulumi:"name"`
	PolicyViewNames  []string           `pulumi:"policyViewNames"`
	ResultOutputFile *string            `pulumi:"resultOutputFile"`
}

func PolicyGroupsOutput(ctx *pulumi.Context, args PolicyGroupsOutputArgs, opts ...pulumi.InvokeOption) PolicyGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (PolicyGroupsResult, error) {
			args := v.(PolicyGroupsArgs)
			r, err := PolicyGroups(ctx, &args, opts...)
			var s PolicyGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(PolicyGroupsResultOutput)
}

// A collection of arguments for invoking PolicyGroups.
type PolicyGroupsOutputArgs struct {
	Name             pulumi.StringPtrInput   `pulumi:"name"`
	PolicyViewNames  pulumi.StringArrayInput `pulumi:"policyViewNames"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
}

func (PolicyGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsArgs)(nil)).Elem()
}

// A collection of values returned by PolicyGroups.
type PolicyGroupsResultOutput struct{ *pulumi.OutputState }

func (PolicyGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsResult)(nil)).Elem()
}

func (o PolicyGroupsResultOutput) ToPolicyGroupsResultOutput() PolicyGroupsResultOutput {
	return o
}

func (o PolicyGroupsResultOutput) ToPolicyGroupsResultOutputWithContext(ctx context.Context) PolicyGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o PolicyGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o PolicyGroupsResultOutput) Lists() PolicyGroupsListArrayOutput {
	return o.ApplyT(func(v PolicyGroupsResult) []PolicyGroupsList { return v.Lists }).(PolicyGroupsListArrayOutput)
}

func (o PolicyGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupsResultOutput) PolicyViewNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupsResult) []string { return v.PolicyViewNames }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyGroupsResultOutput{})
}
