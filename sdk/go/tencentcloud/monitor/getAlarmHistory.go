// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of monitor alarmHistory
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := Monitor.GetAlarmHistory(ctx, &monitor.GetAlarmHistoryArgs{
// Content: pulumi.StringRef("CPU利用率 > 3%"),
// EndTime: pulumi.IntRef(1697212799),
// Module: "monitor",
// MonitorTypes: []string{
// "MT_QCE",
// },
// Namespaces: []monitor.GetAlarmHistoryNamespace{
// {
// MonitorType: "CpuUsage",
// Namespace: "cvm_device",
// },
// },
// Order: pulumi.StringRef("DESC"),
// PolicyIds: []string{
// "policy-iejtp4ue",
// },
// PolicyName: pulumi.StringRef("terraform_test"),
// ProjectIds: interface{}{
// 0,
// },
// StartTime: pulumi.IntRef(1696608000),
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// <!--End PulumiCodeChooser -->
func GetAlarmHistory(ctx *pulumi.Context, args *GetAlarmHistoryArgs, opts ...pulumi.InvokeOption) (*GetAlarmHistoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlarmHistoryResult
	err := ctx.Invoke("tencentcloud:Monitor/getAlarmHistory:getAlarmHistory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlarmHistory.
type GetAlarmHistoryArgs struct {
	// Alarm levels.
	AlarmLevels []string `pulumi:"alarmLevels"`
	// Filter by alarm object. Fuzzy search with string is supported.
	AlarmObject *string `pulumi:"alarmObject"`
	// Filter by alarm status. Valid values: ALARM (not resolved), OK (resolved), NO_CONF (expired), NO_DATA (insufficient data). If this parameter is left empty, all will be queried by default.
	AlarmStatuses []string `pulumi:"alarmStatuses"`
	// Fuzzy search by alarm content.
	Content *string `pulumi:"content"`
	// End time, which is the current timestamp and the time when the alarm FirstOccurTime first occurs. An alarm record can be searched only if its FirstOccurTime is earlier than the EndTime.
	EndTime *int `pulumi:"endTime"`
	// Filter by instance group ID.
	InstanceGroupIds []int `pulumi:"instanceGroupIds"`
	// Filter by metric name.
	MetricNames []string `pulumi:"metricNames"`
	// Value fixed at monitor.
	Module string `pulumi:"module"`
	// Filter by monitor type. Valid values: MT_QCE (Tencent Cloud service monitoring), MT_TAW (application performance monitoring), MT_RUM (frontend performance monitoring), MT_PROBE (cloud automated testing). If this parameter is left empty, all types will be queried by default.
	MonitorTypes []string `pulumi:"monitorTypes"`
	// Filter by policy type. Monitoring type and policy type are first-level and second-level filters respectively and both need to be passed in. For example, [{MonitorType: MT_QCE, Namespace: cvm_device}].
	Namespaces []GetAlarmHistoryNamespace `pulumi:"namespaces"`
	// Sort by the first occurrence time in descending order by default. Valid values: ASC (ascending), DESC (descending).
	Order *string `pulumi:"order"`
	// Search by alarm policy ID list.
	PolicyIds []string `pulumi:"policyIds"`
	// Fuzzy search by policy name.
	PolicyName *string `pulumi:"policyName"`
	// Filter by project ID. Valid values: -1 (no project), 0 (default project).
	ProjectIds []int `pulumi:"projectIds"`
	// Search by recipient group.
	ReceiverGroups []int `pulumi:"receiverGroups"`
	// Search by recipient.
	ReceiverUids []int `pulumi:"receiverUids"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Start time, which is the timestamp one day ago by default and the time when the alarm FirstOccurTime first occurs. An alarm record can be searched only if its FirstOccurTime is later than the StartTime.
	StartTime *int `pulumi:"startTime"`
}

// A collection of values returned by getAlarmHistory.
type GetAlarmHistoryResult struct {
	AlarmLevels []string `pulumi:"alarmLevels"`
	// Alarm object.
	AlarmObject *string `pulumi:"alarmObject"`
	// Alarm status. Valid values: ALARM (not resolved), OK (resolved), NO_CONF (expired), NO_DATA (insufficient data).
	AlarmStatuses []string `pulumi:"alarmStatuses"`
	// Alarm content.
	Content *string `pulumi:"content"`
	EndTime *int    `pulumi:"endTime"`
	// Alarm record list.
	Histories []GetAlarmHistoryHistory `pulumi:"histories"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                     `pulumi:"id"`
	InstanceGroupIds []int                      `pulumi:"instanceGroupIds"`
	MetricNames      []string                   `pulumi:"metricNames"`
	Module           string                     `pulumi:"module"`
	MonitorTypes     []string                   `pulumi:"monitorTypes"`
	Namespaces       []GetAlarmHistoryNamespace `pulumi:"namespaces"`
	Order            *string                    `pulumi:"order"`
	PolicyIds        []string                   `pulumi:"policyIds"`
	// Policy name.
	PolicyName *string `pulumi:"policyName"`
	ProjectIds []int   `pulumi:"projectIds"`
	// Recipient group list.
	ReceiverGroups []int `pulumi:"receiverGroups"`
	// Recipient list.
	ReceiverUids     []int   `pulumi:"receiverUids"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        *int    `pulumi:"startTime"`
}

func GetAlarmHistoryOutput(ctx *pulumi.Context, args GetAlarmHistoryOutputArgs, opts ...pulumi.InvokeOption) GetAlarmHistoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlarmHistoryResult, error) {
			args := v.(GetAlarmHistoryArgs)
			r, err := GetAlarmHistory(ctx, &args, opts...)
			var s GetAlarmHistoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlarmHistoryResultOutput)
}

// A collection of arguments for invoking getAlarmHistory.
type GetAlarmHistoryOutputArgs struct {
	// Alarm levels.
	AlarmLevels pulumi.StringArrayInput `pulumi:"alarmLevels"`
	// Filter by alarm object. Fuzzy search with string is supported.
	AlarmObject pulumi.StringPtrInput `pulumi:"alarmObject"`
	// Filter by alarm status. Valid values: ALARM (not resolved), OK (resolved), NO_CONF (expired), NO_DATA (insufficient data). If this parameter is left empty, all will be queried by default.
	AlarmStatuses pulumi.StringArrayInput `pulumi:"alarmStatuses"`
	// Fuzzy search by alarm content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// End time, which is the current timestamp and the time when the alarm FirstOccurTime first occurs. An alarm record can be searched only if its FirstOccurTime is earlier than the EndTime.
	EndTime pulumi.IntPtrInput `pulumi:"endTime"`
	// Filter by instance group ID.
	InstanceGroupIds pulumi.IntArrayInput `pulumi:"instanceGroupIds"`
	// Filter by metric name.
	MetricNames pulumi.StringArrayInput `pulumi:"metricNames"`
	// Value fixed at monitor.
	Module pulumi.StringInput `pulumi:"module"`
	// Filter by monitor type. Valid values: MT_QCE (Tencent Cloud service monitoring), MT_TAW (application performance monitoring), MT_RUM (frontend performance monitoring), MT_PROBE (cloud automated testing). If this parameter is left empty, all types will be queried by default.
	MonitorTypes pulumi.StringArrayInput `pulumi:"monitorTypes"`
	// Filter by policy type. Monitoring type and policy type are first-level and second-level filters respectively and both need to be passed in. For example, [{MonitorType: MT_QCE, Namespace: cvm_device}].
	Namespaces GetAlarmHistoryNamespaceArrayInput `pulumi:"namespaces"`
	// Sort by the first occurrence time in descending order by default. Valid values: ASC (ascending), DESC (descending).
	Order pulumi.StringPtrInput `pulumi:"order"`
	// Search by alarm policy ID list.
	PolicyIds pulumi.StringArrayInput `pulumi:"policyIds"`
	// Fuzzy search by policy name.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Filter by project ID. Valid values: -1 (no project), 0 (default project).
	ProjectIds pulumi.IntArrayInput `pulumi:"projectIds"`
	// Search by recipient group.
	ReceiverGroups pulumi.IntArrayInput `pulumi:"receiverGroups"`
	// Search by recipient.
	ReceiverUids pulumi.IntArrayInput `pulumi:"receiverUids"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Start time, which is the timestamp one day ago by default and the time when the alarm FirstOccurTime first occurs. An alarm record can be searched only if its FirstOccurTime is later than the StartTime.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
}

func (GetAlarmHistoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmHistoryArgs)(nil)).Elem()
}

// A collection of values returned by getAlarmHistory.
type GetAlarmHistoryResultOutput struct{ *pulumi.OutputState }

func (GetAlarmHistoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmHistoryResult)(nil)).Elem()
}

func (o GetAlarmHistoryResultOutput) ToGetAlarmHistoryResultOutput() GetAlarmHistoryResultOutput {
	return o
}

func (o GetAlarmHistoryResultOutput) ToGetAlarmHistoryResultOutputWithContext(ctx context.Context) GetAlarmHistoryResultOutput {
	return o
}

func (o GetAlarmHistoryResultOutput) AlarmLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []string { return v.AlarmLevels }).(pulumi.StringArrayOutput)
}

// Alarm object.
func (o GetAlarmHistoryResultOutput) AlarmObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *string { return v.AlarmObject }).(pulumi.StringPtrOutput)
}

// Alarm status. Valid values: ALARM (not resolved), OK (resolved), NO_CONF (expired), NO_DATA (insufficient data).
func (o GetAlarmHistoryResultOutput) AlarmStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []string { return v.AlarmStatuses }).(pulumi.StringArrayOutput)
}

// Alarm content.
func (o GetAlarmHistoryResultOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o GetAlarmHistoryResultOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

// Alarm record list.
func (o GetAlarmHistoryResultOutput) Histories() GetAlarmHistoryHistoryArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []GetAlarmHistoryHistory { return v.Histories }).(GetAlarmHistoryHistoryArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlarmHistoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmHistoryResultOutput) InstanceGroupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []int { return v.InstanceGroupIds }).(pulumi.IntArrayOutput)
}

func (o GetAlarmHistoryResultOutput) MetricNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []string { return v.MetricNames }).(pulumi.StringArrayOutput)
}

func (o GetAlarmHistoryResultOutput) Module() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) string { return v.Module }).(pulumi.StringOutput)
}

func (o GetAlarmHistoryResultOutput) MonitorTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []string { return v.MonitorTypes }).(pulumi.StringArrayOutput)
}

func (o GetAlarmHistoryResultOutput) Namespaces() GetAlarmHistoryNamespaceArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []GetAlarmHistoryNamespace { return v.Namespaces }).(GetAlarmHistoryNamespaceArrayOutput)
}

func (o GetAlarmHistoryResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetAlarmHistoryResultOutput) PolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []string { return v.PolicyIds }).(pulumi.StringArrayOutput)
}

// Policy name.
func (o GetAlarmHistoryResultOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

func (o GetAlarmHistoryResultOutput) ProjectIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []int { return v.ProjectIds }).(pulumi.IntArrayOutput)
}

// Recipient group list.
func (o GetAlarmHistoryResultOutput) ReceiverGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []int { return v.ReceiverGroups }).(pulumi.IntArrayOutput)
}

// Recipient list.
func (o GetAlarmHistoryResultOutput) ReceiverUids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) []int { return v.ReceiverUids }).(pulumi.IntArrayOutput)
}

func (o GetAlarmHistoryResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAlarmHistoryResultOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlarmHistoryResult) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlarmHistoryResultOutput{})
}
