// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of monitor basicAlarms
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := Monitor.GetAlarmBasicAlarms(ctx, &monitor.GetAlarmBasicAlarmsArgs{
// AlarmStatuses: interface{}{
// 1,
// },
// EndTime: pulumi.IntRef(1697098903),
// InstanceGroupIds: interface{}{
// 5497073,
// },
// MetricNames: []string{
// "cpu_usage",
// },
// Module: "monitor",
// OccurTimeOrder: pulumi.StringRef("DESC"),
// ProjectIds: interface{}{
// 0,
// },
// StartTime: pulumi.IntRef(1696990903),
// ViewNames: []string{
// "cvm_device",
// },
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// <!--End PulumiCodeChooser -->
func GetAlarmBasicAlarms(ctx *pulumi.Context, args *GetAlarmBasicAlarmsArgs, opts ...pulumi.InvokeOption) (*GetAlarmBasicAlarmsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlarmBasicAlarmsResult
	err := ctx.Invoke("tencentcloud:Monitor/getAlarmBasicAlarms:getAlarmBasicAlarms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlarmBasicAlarms.
type GetAlarmBasicAlarmsArgs struct {
	// Filter based on alarm status.
	AlarmStatuses []int `pulumi:"alarmStatuses"`
	// End time, default to current timestamp.
	EndTime *int `pulumi:"endTime"`
	// Filter based on instance group ID.
	InstanceGroupIds []int `pulumi:"instanceGroupIds"`
	// Filter by indicator name.
	MetricNames []string `pulumi:"metricNames"`
	// Interface module name, current value monitor.
	Module string `pulumi:"module"`
	// Filter based on alarm objects.
	ObjLike *string `pulumi:"objLike"`
	// Sort by occurrence time, taking ASC or DESC values.
	OccurTimeOrder *string `pulumi:"occurTimeOrder"`
	// Filter based on project ID.
	ProjectIds []int `pulumi:"projectIds"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Start time, default to one day is timestamp.
	StartTime *int `pulumi:"startTime"`
	// Filter based on policy type.
	ViewNames []string `pulumi:"viewNames"`
}

// A collection of values returned by getAlarmBasicAlarms.
type GetAlarmBasicAlarmsResult struct {
	// Alarm status, ALARM indicates not recovered; OK indicates that it has been restored; NO_ DATA indicates insufficient data; NO_ CONF indicates that it has expired.
	AlarmStatuses []int `pulumi:"alarmStatuses"`
	// Alarm List.
	Alarms  []GetAlarmBasicAlarmsAlarm `pulumi:"alarms"`
	EndTime *int                       `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	InstanceGroupIds []int    `pulumi:"instanceGroupIds"`
	MetricNames      []string `pulumi:"metricNames"`
	Module           string   `pulumi:"module"`
	ObjLike          *string  `pulumi:"objLike"`
	OccurTimeOrder   *string  `pulumi:"occurTimeOrder"`
	ProjectIds       []int    `pulumi:"projectIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	StartTime        *int     `pulumi:"startTime"`
	ViewNames        []string `pulumi:"viewNames"`
	// Remarks.
	Warning string `pulumi:"warning"`
}

func GetAlarmBasicAlarmsOutput(ctx *pulumi.Context, args GetAlarmBasicAlarmsOutputArgs, opts ...pulumi.InvokeOption) GetAlarmBasicAlarmsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlarmBasicAlarmsResult, error) {
			args := v.(GetAlarmBasicAlarmsArgs)
			r, err := GetAlarmBasicAlarms(ctx, &args, opts...)
			var s GetAlarmBasicAlarmsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlarmBasicAlarmsResultOutput)
}

// A collection of arguments for invoking getAlarmBasicAlarms.
type GetAlarmBasicAlarmsOutputArgs struct {
	// Filter based on alarm status.
	AlarmStatuses pulumi.IntArrayInput `pulumi:"alarmStatuses"`
	// End time, default to current timestamp.
	EndTime pulumi.IntPtrInput `pulumi:"endTime"`
	// Filter based on instance group ID.
	InstanceGroupIds pulumi.IntArrayInput `pulumi:"instanceGroupIds"`
	// Filter by indicator name.
	MetricNames pulumi.StringArrayInput `pulumi:"metricNames"`
	// Interface module name, current value monitor.
	Module pulumi.StringInput `pulumi:"module"`
	// Filter based on alarm objects.
	ObjLike pulumi.StringPtrInput `pulumi:"objLike"`
	// Sort by occurrence time, taking ASC or DESC values.
	OccurTimeOrder pulumi.StringPtrInput `pulumi:"occurTimeOrder"`
	// Filter based on project ID.
	ProjectIds pulumi.IntArrayInput `pulumi:"projectIds"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Start time, default to one day is timestamp.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Filter based on policy type.
	ViewNames pulumi.StringArrayInput `pulumi:"viewNames"`
}

func (GetAlarmBasicAlarmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmBasicAlarmsArgs)(nil)).Elem()
}

// A collection of values returned by getAlarmBasicAlarms.
type GetAlarmBasicAlarmsResultOutput struct{ *pulumi.OutputState }

func (GetAlarmBasicAlarmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmBasicAlarmsResult)(nil)).Elem()
}

func (o GetAlarmBasicAlarmsResultOutput) ToGetAlarmBasicAlarmsResultOutput() GetAlarmBasicAlarmsResultOutput {
	return o
}

func (o GetAlarmBasicAlarmsResultOutput) ToGetAlarmBasicAlarmsResultOutputWithContext(ctx context.Context) GetAlarmBasicAlarmsResultOutput {
	return o
}

// Alarm status, ALARM indicates not recovered; OK indicates that it has been restored; NO_ DATA indicates insufficient data; NO_ CONF indicates that it has expired.
func (o GetAlarmBasicAlarmsResultOutput) AlarmStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []int { return v.AlarmStatuses }).(pulumi.IntArrayOutput)
}

// Alarm List.
func (o GetAlarmBasicAlarmsResultOutput) Alarms() GetAlarmBasicAlarmsAlarmArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []GetAlarmBasicAlarmsAlarm { return v.Alarms }).(GetAlarmBasicAlarmsAlarmArrayOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlarmBasicAlarmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) InstanceGroupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []int { return v.InstanceGroupIds }).(pulumi.IntArrayOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) MetricNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []string { return v.MetricNames }).(pulumi.StringArrayOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) Module() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) string { return v.Module }).(pulumi.StringOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) ObjLike() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) *string { return v.ObjLike }).(pulumi.StringPtrOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) OccurTimeOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) *string { return v.OccurTimeOrder }).(pulumi.StringPtrOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) ProjectIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []int { return v.ProjectIds }).(pulumi.IntArrayOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o GetAlarmBasicAlarmsResultOutput) ViewNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) []string { return v.ViewNames }).(pulumi.StringArrayOutput)
}

// Remarks.
func (o GetAlarmBasicAlarmsResultOutput) Warning() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmBasicAlarmsResult) string { return v.Warning }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlarmBasicAlarmsResultOutput{})
}
