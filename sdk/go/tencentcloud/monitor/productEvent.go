// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ProductEvent(ctx *pulumi.Context, args *ProductEventArgs, opts ...pulumi.InvokeOption) (*ProductEventResult, error) {
	var rv ProductEventResult
	err := ctx.Invoke("tencentcloud:Monitor/productEvent:ProductEvent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ProductEvent.
type ProductEventArgs struct {
	Dimensions       []ProductEventDimension `pulumi:"dimensions"`
	EndTime          *int                    `pulumi:"endTime"`
	EventNames       []string                `pulumi:"eventNames"`
	InstanceIds      []string                `pulumi:"instanceIds"`
	IsAlarmConfig    *int                    `pulumi:"isAlarmConfig"`
	ProductNames     []string                `pulumi:"productNames"`
	ProjectIds       []string                `pulumi:"projectIds"`
	RegionLists      []string                `pulumi:"regionLists"`
	ResultOutputFile *string                 `pulumi:"resultOutputFile"`
	StartTime        *int                    `pulumi:"startTime"`
	Statuses         []string                `pulumi:"statuses"`
	Types            []string                `pulumi:"types"`
}

// A collection of values returned by ProductEvent.
type ProductEventResult struct {
	Dimensions []ProductEventDimension `pulumi:"dimensions"`
	EndTime    *int                    `pulumi:"endTime"`
	EventNames []string                `pulumi:"eventNames"`
	// The provider-assigned unique ID for this managed resource.
	Id               string             `pulumi:"id"`
	InstanceIds      []string           `pulumi:"instanceIds"`
	IsAlarmConfig    *int               `pulumi:"isAlarmConfig"`
	Lists            []ProductEventList `pulumi:"lists"`
	ProductNames     []string           `pulumi:"productNames"`
	ProjectIds       []string           `pulumi:"projectIds"`
	RegionLists      []string           `pulumi:"regionLists"`
	ResultOutputFile *string            `pulumi:"resultOutputFile"`
	StartTime        *int               `pulumi:"startTime"`
	Statuses         []string           `pulumi:"statuses"`
	Types            []string           `pulumi:"types"`
}

func ProductEventOutput(ctx *pulumi.Context, args ProductEventOutputArgs, opts ...pulumi.InvokeOption) ProductEventResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ProductEventResult, error) {
			args := v.(ProductEventArgs)
			r, err := ProductEvent(ctx, &args, opts...)
			var s ProductEventResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ProductEventResultOutput)
}

// A collection of arguments for invoking ProductEvent.
type ProductEventOutputArgs struct {
	Dimensions       ProductEventDimensionArrayInput `pulumi:"dimensions"`
	EndTime          pulumi.IntPtrInput              `pulumi:"endTime"`
	EventNames       pulumi.StringArrayInput         `pulumi:"eventNames"`
	InstanceIds      pulumi.StringArrayInput         `pulumi:"instanceIds"`
	IsAlarmConfig    pulumi.IntPtrInput              `pulumi:"isAlarmConfig"`
	ProductNames     pulumi.StringArrayInput         `pulumi:"productNames"`
	ProjectIds       pulumi.StringArrayInput         `pulumi:"projectIds"`
	RegionLists      pulumi.StringArrayInput         `pulumi:"regionLists"`
	ResultOutputFile pulumi.StringPtrInput           `pulumi:"resultOutputFile"`
	StartTime        pulumi.IntPtrInput              `pulumi:"startTime"`
	Statuses         pulumi.StringArrayInput         `pulumi:"statuses"`
	Types            pulumi.StringArrayInput         `pulumi:"types"`
}

func (ProductEventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventArgs)(nil)).Elem()
}

// A collection of values returned by ProductEvent.
type ProductEventResultOutput struct{ *pulumi.OutputState }

func (ProductEventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventResult)(nil)).Elem()
}

func (o ProductEventResultOutput) ToProductEventResultOutput() ProductEventResultOutput {
	return o
}

func (o ProductEventResultOutput) ToProductEventResultOutputWithContext(ctx context.Context) ProductEventResultOutput {
	return o
}

func (o ProductEventResultOutput) Dimensions() ProductEventDimensionArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []ProductEventDimension { return v.Dimensions }).(ProductEventDimensionArrayOutput)
}

func (o ProductEventResultOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductEventResult) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o ProductEventResultOutput) EventNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.EventNames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ProductEventResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ProductEventResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o ProductEventResultOutput) IsAlarmConfig() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductEventResult) *int { return v.IsAlarmConfig }).(pulumi.IntPtrOutput)
}

func (o ProductEventResultOutput) Lists() ProductEventListArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []ProductEventList { return v.Lists }).(ProductEventListArrayOutput)
}

func (o ProductEventResultOutput) ProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.ProductNames }).(pulumi.StringArrayOutput)
}

func (o ProductEventResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

func (o ProductEventResultOutput) RegionLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.RegionLists }).(pulumi.StringArrayOutput)
}

func (o ProductEventResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductEventResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o ProductEventResultOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductEventResult) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o ProductEventResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func (o ProductEventResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductEventResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ProductEventResultOutput{})
}
