// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlarmPolicyConditions struct {
	IsUnionRule *int                        `pulumi:"isUnionRule"`
	Rules       []AlarmPolicyConditionsRule `pulumi:"rules"`
}

// AlarmPolicyConditionsInput is an input type that accepts AlarmPolicyConditionsArgs and AlarmPolicyConditionsOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsInput` via:
//
//          AlarmPolicyConditionsArgs{...}
type AlarmPolicyConditionsInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsOutput() AlarmPolicyConditionsOutput
	ToAlarmPolicyConditionsOutputWithContext(context.Context) AlarmPolicyConditionsOutput
}

type AlarmPolicyConditionsArgs struct {
	IsUnionRule pulumi.IntPtrInput                  `pulumi:"isUnionRule"`
	Rules       AlarmPolicyConditionsRuleArrayInput `pulumi:"rules"`
}

func (AlarmPolicyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditions)(nil)).Elem()
}

func (i AlarmPolicyConditionsArgs) ToAlarmPolicyConditionsOutput() AlarmPolicyConditionsOutput {
	return i.ToAlarmPolicyConditionsOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsArgs) ToAlarmPolicyConditionsOutputWithContext(ctx context.Context) AlarmPolicyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsOutput)
}

func (i AlarmPolicyConditionsArgs) ToAlarmPolicyConditionsPtrOutput() AlarmPolicyConditionsPtrOutput {
	return i.ToAlarmPolicyConditionsPtrOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsArgs) ToAlarmPolicyConditionsPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsOutput).ToAlarmPolicyConditionsPtrOutputWithContext(ctx)
}

// AlarmPolicyConditionsPtrInput is an input type that accepts AlarmPolicyConditionsArgs, AlarmPolicyConditionsPtr and AlarmPolicyConditionsPtrOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsPtrInput` via:
//
//          AlarmPolicyConditionsArgs{...}
//
//  or:
//
//          nil
type AlarmPolicyConditionsPtrInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsPtrOutput() AlarmPolicyConditionsPtrOutput
	ToAlarmPolicyConditionsPtrOutputWithContext(context.Context) AlarmPolicyConditionsPtrOutput
}

type alarmPolicyConditionsPtrType AlarmPolicyConditionsArgs

func AlarmPolicyConditionsPtr(v *AlarmPolicyConditionsArgs) AlarmPolicyConditionsPtrInput {
	return (*alarmPolicyConditionsPtrType)(v)
}

func (*alarmPolicyConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyConditions)(nil)).Elem()
}

func (i *alarmPolicyConditionsPtrType) ToAlarmPolicyConditionsPtrOutput() AlarmPolicyConditionsPtrOutput {
	return i.ToAlarmPolicyConditionsPtrOutputWithContext(context.Background())
}

func (i *alarmPolicyConditionsPtrType) ToAlarmPolicyConditionsPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsPtrOutput)
}

type AlarmPolicyConditionsOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditions)(nil)).Elem()
}

func (o AlarmPolicyConditionsOutput) ToAlarmPolicyConditionsOutput() AlarmPolicyConditionsOutput {
	return o
}

func (o AlarmPolicyConditionsOutput) ToAlarmPolicyConditionsOutputWithContext(ctx context.Context) AlarmPolicyConditionsOutput {
	return o
}

func (o AlarmPolicyConditionsOutput) ToAlarmPolicyConditionsPtrOutput() AlarmPolicyConditionsPtrOutput {
	return o.ToAlarmPolicyConditionsPtrOutputWithContext(context.Background())
}

func (o AlarmPolicyConditionsOutput) ToAlarmPolicyConditionsPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmPolicyConditions) *AlarmPolicyConditions {
		return &v
	}).(AlarmPolicyConditionsPtrOutput)
}

func (o AlarmPolicyConditionsOutput) IsUnionRule() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditions) *int { return v.IsUnionRule }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsOutput) Rules() AlarmPolicyConditionsRuleArrayOutput {
	return o.ApplyT(func(v AlarmPolicyConditions) []AlarmPolicyConditionsRule { return v.Rules }).(AlarmPolicyConditionsRuleArrayOutput)
}

type AlarmPolicyConditionsPtrOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyConditions)(nil)).Elem()
}

func (o AlarmPolicyConditionsPtrOutput) ToAlarmPolicyConditionsPtrOutput() AlarmPolicyConditionsPtrOutput {
	return o
}

func (o AlarmPolicyConditionsPtrOutput) ToAlarmPolicyConditionsPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsPtrOutput {
	return o
}

func (o AlarmPolicyConditionsPtrOutput) Elem() AlarmPolicyConditionsOutput {
	return o.ApplyT(func(v *AlarmPolicyConditions) AlarmPolicyConditions {
		if v != nil {
			return *v
		}
		var ret AlarmPolicyConditions
		return ret
	}).(AlarmPolicyConditionsOutput)
}

func (o AlarmPolicyConditionsPtrOutput) IsUnionRule() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmPolicyConditions) *int {
		if v == nil {
			return nil
		}
		return v.IsUnionRule
	}).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsPtrOutput) Rules() AlarmPolicyConditionsRuleArrayOutput {
	return o.ApplyT(func(v *AlarmPolicyConditions) []AlarmPolicyConditionsRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AlarmPolicyConditionsRuleArrayOutput)
}

type AlarmPolicyConditionsRule struct {
	ContinuePeriod  *int                             `pulumi:"continuePeriod"`
	Description     *string                          `pulumi:"description"`
	Filter          *AlarmPolicyConditionsRuleFilter `pulumi:"filter"`
	IsPowerNotice   *int                             `pulumi:"isPowerNotice"`
	MetricName      *string                          `pulumi:"metricName"`
	NoticeFrequency *int                             `pulumi:"noticeFrequency"`
	Operator        *string                          `pulumi:"operator"`
	Period          *int                             `pulumi:"period"`
	RuleType        *string                          `pulumi:"ruleType"`
	Unit            *string                          `pulumi:"unit"`
	Value           *string                          `pulumi:"value"`
}

// AlarmPolicyConditionsRuleInput is an input type that accepts AlarmPolicyConditionsRuleArgs and AlarmPolicyConditionsRuleOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsRuleInput` via:
//
//          AlarmPolicyConditionsRuleArgs{...}
type AlarmPolicyConditionsRuleInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsRuleOutput() AlarmPolicyConditionsRuleOutput
	ToAlarmPolicyConditionsRuleOutputWithContext(context.Context) AlarmPolicyConditionsRuleOutput
}

type AlarmPolicyConditionsRuleArgs struct {
	ContinuePeriod  pulumi.IntPtrInput                      `pulumi:"continuePeriod"`
	Description     pulumi.StringPtrInput                   `pulumi:"description"`
	Filter          AlarmPolicyConditionsRuleFilterPtrInput `pulumi:"filter"`
	IsPowerNotice   pulumi.IntPtrInput                      `pulumi:"isPowerNotice"`
	MetricName      pulumi.StringPtrInput                   `pulumi:"metricName"`
	NoticeFrequency pulumi.IntPtrInput                      `pulumi:"noticeFrequency"`
	Operator        pulumi.StringPtrInput                   `pulumi:"operator"`
	Period          pulumi.IntPtrInput                      `pulumi:"period"`
	RuleType        pulumi.StringPtrInput                   `pulumi:"ruleType"`
	Unit            pulumi.StringPtrInput                   `pulumi:"unit"`
	Value           pulumi.StringPtrInput                   `pulumi:"value"`
}

func (AlarmPolicyConditionsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditionsRule)(nil)).Elem()
}

func (i AlarmPolicyConditionsRuleArgs) ToAlarmPolicyConditionsRuleOutput() AlarmPolicyConditionsRuleOutput {
	return i.ToAlarmPolicyConditionsRuleOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsRuleArgs) ToAlarmPolicyConditionsRuleOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsRuleOutput)
}

// AlarmPolicyConditionsRuleArrayInput is an input type that accepts AlarmPolicyConditionsRuleArray and AlarmPolicyConditionsRuleArrayOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsRuleArrayInput` via:
//
//          AlarmPolicyConditionsRuleArray{ AlarmPolicyConditionsRuleArgs{...} }
type AlarmPolicyConditionsRuleArrayInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsRuleArrayOutput() AlarmPolicyConditionsRuleArrayOutput
	ToAlarmPolicyConditionsRuleArrayOutputWithContext(context.Context) AlarmPolicyConditionsRuleArrayOutput
}

type AlarmPolicyConditionsRuleArray []AlarmPolicyConditionsRuleInput

func (AlarmPolicyConditionsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyConditionsRule)(nil)).Elem()
}

func (i AlarmPolicyConditionsRuleArray) ToAlarmPolicyConditionsRuleArrayOutput() AlarmPolicyConditionsRuleArrayOutput {
	return i.ToAlarmPolicyConditionsRuleArrayOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsRuleArray) ToAlarmPolicyConditionsRuleArrayOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsRuleArrayOutput)
}

type AlarmPolicyConditionsRuleOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditionsRule)(nil)).Elem()
}

func (o AlarmPolicyConditionsRuleOutput) ToAlarmPolicyConditionsRuleOutput() AlarmPolicyConditionsRuleOutput {
	return o
}

func (o AlarmPolicyConditionsRuleOutput) ToAlarmPolicyConditionsRuleOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleOutput {
	return o
}

func (o AlarmPolicyConditionsRuleOutput) ContinuePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *int { return v.ContinuePeriod }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Filter() AlarmPolicyConditionsRuleFilterPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *AlarmPolicyConditionsRuleFilter { return v.Filter }).(AlarmPolicyConditionsRuleFilterPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) IsPowerNotice() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *int { return v.IsPowerNotice }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) NoticeFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *int { return v.NoticeFrequency }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRule) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlarmPolicyConditionsRuleArrayOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyConditionsRule)(nil)).Elem()
}

func (o AlarmPolicyConditionsRuleArrayOutput) ToAlarmPolicyConditionsRuleArrayOutput() AlarmPolicyConditionsRuleArrayOutput {
	return o
}

func (o AlarmPolicyConditionsRuleArrayOutput) ToAlarmPolicyConditionsRuleArrayOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleArrayOutput {
	return o
}

func (o AlarmPolicyConditionsRuleArrayOutput) Index(i pulumi.IntInput) AlarmPolicyConditionsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmPolicyConditionsRule {
		return vs[0].([]AlarmPolicyConditionsRule)[vs[1].(int)]
	}).(AlarmPolicyConditionsRuleOutput)
}

type AlarmPolicyConditionsRuleFilter struct {
	Dimensions *string `pulumi:"dimensions"`
	Type       *string `pulumi:"type"`
}

// AlarmPolicyConditionsRuleFilterInput is an input type that accepts AlarmPolicyConditionsRuleFilterArgs and AlarmPolicyConditionsRuleFilterOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsRuleFilterInput` via:
//
//          AlarmPolicyConditionsRuleFilterArgs{...}
type AlarmPolicyConditionsRuleFilterInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsRuleFilterOutput() AlarmPolicyConditionsRuleFilterOutput
	ToAlarmPolicyConditionsRuleFilterOutputWithContext(context.Context) AlarmPolicyConditionsRuleFilterOutput
}

type AlarmPolicyConditionsRuleFilterArgs struct {
	Dimensions pulumi.StringPtrInput `pulumi:"dimensions"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
}

func (AlarmPolicyConditionsRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditionsRuleFilter)(nil)).Elem()
}

func (i AlarmPolicyConditionsRuleFilterArgs) ToAlarmPolicyConditionsRuleFilterOutput() AlarmPolicyConditionsRuleFilterOutput {
	return i.ToAlarmPolicyConditionsRuleFilterOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsRuleFilterArgs) ToAlarmPolicyConditionsRuleFilterOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsRuleFilterOutput)
}

func (i AlarmPolicyConditionsRuleFilterArgs) ToAlarmPolicyConditionsRuleFilterPtrOutput() AlarmPolicyConditionsRuleFilterPtrOutput {
	return i.ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(context.Background())
}

func (i AlarmPolicyConditionsRuleFilterArgs) ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsRuleFilterOutput).ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(ctx)
}

// AlarmPolicyConditionsRuleFilterPtrInput is an input type that accepts AlarmPolicyConditionsRuleFilterArgs, AlarmPolicyConditionsRuleFilterPtr and AlarmPolicyConditionsRuleFilterPtrOutput values.
// You can construct a concrete instance of `AlarmPolicyConditionsRuleFilterPtrInput` via:
//
//          AlarmPolicyConditionsRuleFilterArgs{...}
//
//  or:
//
//          nil
type AlarmPolicyConditionsRuleFilterPtrInput interface {
	pulumi.Input

	ToAlarmPolicyConditionsRuleFilterPtrOutput() AlarmPolicyConditionsRuleFilterPtrOutput
	ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(context.Context) AlarmPolicyConditionsRuleFilterPtrOutput
}

type alarmPolicyConditionsRuleFilterPtrType AlarmPolicyConditionsRuleFilterArgs

func AlarmPolicyConditionsRuleFilterPtr(v *AlarmPolicyConditionsRuleFilterArgs) AlarmPolicyConditionsRuleFilterPtrInput {
	return (*alarmPolicyConditionsRuleFilterPtrType)(v)
}

func (*alarmPolicyConditionsRuleFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyConditionsRuleFilter)(nil)).Elem()
}

func (i *alarmPolicyConditionsRuleFilterPtrType) ToAlarmPolicyConditionsRuleFilterPtrOutput() AlarmPolicyConditionsRuleFilterPtrOutput {
	return i.ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(context.Background())
}

func (i *alarmPolicyConditionsRuleFilterPtrType) ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyConditionsRuleFilterPtrOutput)
}

type AlarmPolicyConditionsRuleFilterOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyConditionsRuleFilter)(nil)).Elem()
}

func (o AlarmPolicyConditionsRuleFilterOutput) ToAlarmPolicyConditionsRuleFilterOutput() AlarmPolicyConditionsRuleFilterOutput {
	return o
}

func (o AlarmPolicyConditionsRuleFilterOutput) ToAlarmPolicyConditionsRuleFilterOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterOutput {
	return o
}

func (o AlarmPolicyConditionsRuleFilterOutput) ToAlarmPolicyConditionsRuleFilterPtrOutput() AlarmPolicyConditionsRuleFilterPtrOutput {
	return o.ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(context.Background())
}

func (o AlarmPolicyConditionsRuleFilterOutput) ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmPolicyConditionsRuleFilter) *AlarmPolicyConditionsRuleFilter {
		return &v
	}).(AlarmPolicyConditionsRuleFilterPtrOutput)
}

func (o AlarmPolicyConditionsRuleFilterOutput) Dimensions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRuleFilter) *string { return v.Dimensions }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyConditionsRuleFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlarmPolicyConditionsRuleFilterPtrOutput struct{ *pulumi.OutputState }

func (AlarmPolicyConditionsRuleFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyConditionsRuleFilter)(nil)).Elem()
}

func (o AlarmPolicyConditionsRuleFilterPtrOutput) ToAlarmPolicyConditionsRuleFilterPtrOutput() AlarmPolicyConditionsRuleFilterPtrOutput {
	return o
}

func (o AlarmPolicyConditionsRuleFilterPtrOutput) ToAlarmPolicyConditionsRuleFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyConditionsRuleFilterPtrOutput {
	return o
}

func (o AlarmPolicyConditionsRuleFilterPtrOutput) Elem() AlarmPolicyConditionsRuleFilterOutput {
	return o.ApplyT(func(v *AlarmPolicyConditionsRuleFilter) AlarmPolicyConditionsRuleFilter {
		if v != nil {
			return *v
		}
		var ret AlarmPolicyConditionsRuleFilter
		return ret
	}).(AlarmPolicyConditionsRuleFilterOutput)
}

func (o AlarmPolicyConditionsRuleFilterPtrOutput) Dimensions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmPolicyConditionsRuleFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyConditionsRuleFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmPolicyConditionsRuleFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AlarmPolicyEventCondition struct {
	ContinuePeriod  *int                             `pulumi:"continuePeriod"`
	Description     *string                          `pulumi:"description"`
	Filter          *AlarmPolicyEventConditionFilter `pulumi:"filter"`
	IsPowerNotice   *int                             `pulumi:"isPowerNotice"`
	MetricName      *string                          `pulumi:"metricName"`
	NoticeFrequency *int                             `pulumi:"noticeFrequency"`
	Operator        *string                          `pulumi:"operator"`
	Period          *int                             `pulumi:"period"`
	RuleType        *string                          `pulumi:"ruleType"`
	Unit            *string                          `pulumi:"unit"`
	Value           *string                          `pulumi:"value"`
}

// AlarmPolicyEventConditionInput is an input type that accepts AlarmPolicyEventConditionArgs and AlarmPolicyEventConditionOutput values.
// You can construct a concrete instance of `AlarmPolicyEventConditionInput` via:
//
//          AlarmPolicyEventConditionArgs{...}
type AlarmPolicyEventConditionInput interface {
	pulumi.Input

	ToAlarmPolicyEventConditionOutput() AlarmPolicyEventConditionOutput
	ToAlarmPolicyEventConditionOutputWithContext(context.Context) AlarmPolicyEventConditionOutput
}

type AlarmPolicyEventConditionArgs struct {
	ContinuePeriod  pulumi.IntPtrInput                      `pulumi:"continuePeriod"`
	Description     pulumi.StringPtrInput                   `pulumi:"description"`
	Filter          AlarmPolicyEventConditionFilterPtrInput `pulumi:"filter"`
	IsPowerNotice   pulumi.IntPtrInput                      `pulumi:"isPowerNotice"`
	MetricName      pulumi.StringPtrInput                   `pulumi:"metricName"`
	NoticeFrequency pulumi.IntPtrInput                      `pulumi:"noticeFrequency"`
	Operator        pulumi.StringPtrInput                   `pulumi:"operator"`
	Period          pulumi.IntPtrInput                      `pulumi:"period"`
	RuleType        pulumi.StringPtrInput                   `pulumi:"ruleType"`
	Unit            pulumi.StringPtrInput                   `pulumi:"unit"`
	Value           pulumi.StringPtrInput                   `pulumi:"value"`
}

func (AlarmPolicyEventConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyEventCondition)(nil)).Elem()
}

func (i AlarmPolicyEventConditionArgs) ToAlarmPolicyEventConditionOutput() AlarmPolicyEventConditionOutput {
	return i.ToAlarmPolicyEventConditionOutputWithContext(context.Background())
}

func (i AlarmPolicyEventConditionArgs) ToAlarmPolicyEventConditionOutputWithContext(ctx context.Context) AlarmPolicyEventConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyEventConditionOutput)
}

// AlarmPolicyEventConditionArrayInput is an input type that accepts AlarmPolicyEventConditionArray and AlarmPolicyEventConditionArrayOutput values.
// You can construct a concrete instance of `AlarmPolicyEventConditionArrayInput` via:
//
//          AlarmPolicyEventConditionArray{ AlarmPolicyEventConditionArgs{...} }
type AlarmPolicyEventConditionArrayInput interface {
	pulumi.Input

	ToAlarmPolicyEventConditionArrayOutput() AlarmPolicyEventConditionArrayOutput
	ToAlarmPolicyEventConditionArrayOutputWithContext(context.Context) AlarmPolicyEventConditionArrayOutput
}

type AlarmPolicyEventConditionArray []AlarmPolicyEventConditionInput

func (AlarmPolicyEventConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyEventCondition)(nil)).Elem()
}

func (i AlarmPolicyEventConditionArray) ToAlarmPolicyEventConditionArrayOutput() AlarmPolicyEventConditionArrayOutput {
	return i.ToAlarmPolicyEventConditionArrayOutputWithContext(context.Background())
}

func (i AlarmPolicyEventConditionArray) ToAlarmPolicyEventConditionArrayOutputWithContext(ctx context.Context) AlarmPolicyEventConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyEventConditionArrayOutput)
}

type AlarmPolicyEventConditionOutput struct{ *pulumi.OutputState }

func (AlarmPolicyEventConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyEventCondition)(nil)).Elem()
}

func (o AlarmPolicyEventConditionOutput) ToAlarmPolicyEventConditionOutput() AlarmPolicyEventConditionOutput {
	return o
}

func (o AlarmPolicyEventConditionOutput) ToAlarmPolicyEventConditionOutputWithContext(ctx context.Context) AlarmPolicyEventConditionOutput {
	return o
}

func (o AlarmPolicyEventConditionOutput) ContinuePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *int { return v.ContinuePeriod }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Filter() AlarmPolicyEventConditionFilterPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *AlarmPolicyEventConditionFilter { return v.Filter }).(AlarmPolicyEventConditionFilterPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) IsPowerNotice() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *int { return v.IsPowerNotice }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) NoticeFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *int { return v.NoticeFrequency }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlarmPolicyEventConditionArrayOutput struct{ *pulumi.OutputState }

func (AlarmPolicyEventConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyEventCondition)(nil)).Elem()
}

func (o AlarmPolicyEventConditionArrayOutput) ToAlarmPolicyEventConditionArrayOutput() AlarmPolicyEventConditionArrayOutput {
	return o
}

func (o AlarmPolicyEventConditionArrayOutput) ToAlarmPolicyEventConditionArrayOutputWithContext(ctx context.Context) AlarmPolicyEventConditionArrayOutput {
	return o
}

func (o AlarmPolicyEventConditionArrayOutput) Index(i pulumi.IntInput) AlarmPolicyEventConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmPolicyEventCondition {
		return vs[0].([]AlarmPolicyEventCondition)[vs[1].(int)]
	}).(AlarmPolicyEventConditionOutput)
}

type AlarmPolicyEventConditionFilter struct {
	Dimensions *string `pulumi:"dimensions"`
	Type       *string `pulumi:"type"`
}

// AlarmPolicyEventConditionFilterInput is an input type that accepts AlarmPolicyEventConditionFilterArgs and AlarmPolicyEventConditionFilterOutput values.
// You can construct a concrete instance of `AlarmPolicyEventConditionFilterInput` via:
//
//          AlarmPolicyEventConditionFilterArgs{...}
type AlarmPolicyEventConditionFilterInput interface {
	pulumi.Input

	ToAlarmPolicyEventConditionFilterOutput() AlarmPolicyEventConditionFilterOutput
	ToAlarmPolicyEventConditionFilterOutputWithContext(context.Context) AlarmPolicyEventConditionFilterOutput
}

type AlarmPolicyEventConditionFilterArgs struct {
	Dimensions pulumi.StringPtrInput `pulumi:"dimensions"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
}

func (AlarmPolicyEventConditionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyEventConditionFilter)(nil)).Elem()
}

func (i AlarmPolicyEventConditionFilterArgs) ToAlarmPolicyEventConditionFilterOutput() AlarmPolicyEventConditionFilterOutput {
	return i.ToAlarmPolicyEventConditionFilterOutputWithContext(context.Background())
}

func (i AlarmPolicyEventConditionFilterArgs) ToAlarmPolicyEventConditionFilterOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyEventConditionFilterOutput)
}

func (i AlarmPolicyEventConditionFilterArgs) ToAlarmPolicyEventConditionFilterPtrOutput() AlarmPolicyEventConditionFilterPtrOutput {
	return i.ToAlarmPolicyEventConditionFilterPtrOutputWithContext(context.Background())
}

func (i AlarmPolicyEventConditionFilterArgs) ToAlarmPolicyEventConditionFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyEventConditionFilterOutput).ToAlarmPolicyEventConditionFilterPtrOutputWithContext(ctx)
}

// AlarmPolicyEventConditionFilterPtrInput is an input type that accepts AlarmPolicyEventConditionFilterArgs, AlarmPolicyEventConditionFilterPtr and AlarmPolicyEventConditionFilterPtrOutput values.
// You can construct a concrete instance of `AlarmPolicyEventConditionFilterPtrInput` via:
//
//          AlarmPolicyEventConditionFilterArgs{...}
//
//  or:
//
//          nil
type AlarmPolicyEventConditionFilterPtrInput interface {
	pulumi.Input

	ToAlarmPolicyEventConditionFilterPtrOutput() AlarmPolicyEventConditionFilterPtrOutput
	ToAlarmPolicyEventConditionFilterPtrOutputWithContext(context.Context) AlarmPolicyEventConditionFilterPtrOutput
}

type alarmPolicyEventConditionFilterPtrType AlarmPolicyEventConditionFilterArgs

func AlarmPolicyEventConditionFilterPtr(v *AlarmPolicyEventConditionFilterArgs) AlarmPolicyEventConditionFilterPtrInput {
	return (*alarmPolicyEventConditionFilterPtrType)(v)
}

func (*alarmPolicyEventConditionFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyEventConditionFilter)(nil)).Elem()
}

func (i *alarmPolicyEventConditionFilterPtrType) ToAlarmPolicyEventConditionFilterPtrOutput() AlarmPolicyEventConditionFilterPtrOutput {
	return i.ToAlarmPolicyEventConditionFilterPtrOutputWithContext(context.Background())
}

func (i *alarmPolicyEventConditionFilterPtrType) ToAlarmPolicyEventConditionFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyEventConditionFilterPtrOutput)
}

type AlarmPolicyEventConditionFilterOutput struct{ *pulumi.OutputState }

func (AlarmPolicyEventConditionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyEventConditionFilter)(nil)).Elem()
}

func (o AlarmPolicyEventConditionFilterOutput) ToAlarmPolicyEventConditionFilterOutput() AlarmPolicyEventConditionFilterOutput {
	return o
}

func (o AlarmPolicyEventConditionFilterOutput) ToAlarmPolicyEventConditionFilterOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterOutput {
	return o
}

func (o AlarmPolicyEventConditionFilterOutput) ToAlarmPolicyEventConditionFilterPtrOutput() AlarmPolicyEventConditionFilterPtrOutput {
	return o.ToAlarmPolicyEventConditionFilterPtrOutputWithContext(context.Background())
}

func (o AlarmPolicyEventConditionFilterOutput) ToAlarmPolicyEventConditionFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmPolicyEventConditionFilter) *AlarmPolicyEventConditionFilter {
		return &v
	}).(AlarmPolicyEventConditionFilterPtrOutput)
}

func (o AlarmPolicyEventConditionFilterOutput) Dimensions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventConditionFilter) *string { return v.Dimensions }).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPolicyEventConditionFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlarmPolicyEventConditionFilterPtrOutput struct{ *pulumi.OutputState }

func (AlarmPolicyEventConditionFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmPolicyEventConditionFilter)(nil)).Elem()
}

func (o AlarmPolicyEventConditionFilterPtrOutput) ToAlarmPolicyEventConditionFilterPtrOutput() AlarmPolicyEventConditionFilterPtrOutput {
	return o
}

func (o AlarmPolicyEventConditionFilterPtrOutput) ToAlarmPolicyEventConditionFilterPtrOutputWithContext(ctx context.Context) AlarmPolicyEventConditionFilterPtrOutput {
	return o
}

func (o AlarmPolicyEventConditionFilterPtrOutput) Elem() AlarmPolicyEventConditionFilterOutput {
	return o.ApplyT(func(v *AlarmPolicyEventConditionFilter) AlarmPolicyEventConditionFilter {
		if v != nil {
			return *v
		}
		var ret AlarmPolicyEventConditionFilter
		return ret
	}).(AlarmPolicyEventConditionFilterOutput)
}

func (o AlarmPolicyEventConditionFilterPtrOutput) Dimensions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmPolicyEventConditionFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(pulumi.StringPtrOutput)
}

func (o AlarmPolicyEventConditionFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmPolicyEventConditionFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AlarmPolicyPolicyTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AlarmPolicyPolicyTagInput is an input type that accepts AlarmPolicyPolicyTagArgs and AlarmPolicyPolicyTagOutput values.
// You can construct a concrete instance of `AlarmPolicyPolicyTagInput` via:
//
//          AlarmPolicyPolicyTagArgs{...}
type AlarmPolicyPolicyTagInput interface {
	pulumi.Input

	ToAlarmPolicyPolicyTagOutput() AlarmPolicyPolicyTagOutput
	ToAlarmPolicyPolicyTagOutputWithContext(context.Context) AlarmPolicyPolicyTagOutput
}

type AlarmPolicyPolicyTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlarmPolicyPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyPolicyTag)(nil)).Elem()
}

func (i AlarmPolicyPolicyTagArgs) ToAlarmPolicyPolicyTagOutput() AlarmPolicyPolicyTagOutput {
	return i.ToAlarmPolicyPolicyTagOutputWithContext(context.Background())
}

func (i AlarmPolicyPolicyTagArgs) ToAlarmPolicyPolicyTagOutputWithContext(ctx context.Context) AlarmPolicyPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyPolicyTagOutput)
}

// AlarmPolicyPolicyTagArrayInput is an input type that accepts AlarmPolicyPolicyTagArray and AlarmPolicyPolicyTagArrayOutput values.
// You can construct a concrete instance of `AlarmPolicyPolicyTagArrayInput` via:
//
//          AlarmPolicyPolicyTagArray{ AlarmPolicyPolicyTagArgs{...} }
type AlarmPolicyPolicyTagArrayInput interface {
	pulumi.Input

	ToAlarmPolicyPolicyTagArrayOutput() AlarmPolicyPolicyTagArrayOutput
	ToAlarmPolicyPolicyTagArrayOutputWithContext(context.Context) AlarmPolicyPolicyTagArrayOutput
}

type AlarmPolicyPolicyTagArray []AlarmPolicyPolicyTagInput

func (AlarmPolicyPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyPolicyTag)(nil)).Elem()
}

func (i AlarmPolicyPolicyTagArray) ToAlarmPolicyPolicyTagArrayOutput() AlarmPolicyPolicyTagArrayOutput {
	return i.ToAlarmPolicyPolicyTagArrayOutputWithContext(context.Background())
}

func (i AlarmPolicyPolicyTagArray) ToAlarmPolicyPolicyTagArrayOutputWithContext(ctx context.Context) AlarmPolicyPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyPolicyTagArrayOutput)
}

type AlarmPolicyPolicyTagOutput struct{ *pulumi.OutputState }

func (AlarmPolicyPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyPolicyTag)(nil)).Elem()
}

func (o AlarmPolicyPolicyTagOutput) ToAlarmPolicyPolicyTagOutput() AlarmPolicyPolicyTagOutput {
	return o
}

func (o AlarmPolicyPolicyTagOutput) ToAlarmPolicyPolicyTagOutputWithContext(ctx context.Context) AlarmPolicyPolicyTagOutput {
	return o
}

func (o AlarmPolicyPolicyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmPolicyPolicyTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AlarmPolicyPolicyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmPolicyPolicyTag) string { return v.Value }).(pulumi.StringOutput)
}

type AlarmPolicyPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (AlarmPolicyPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyPolicyTag)(nil)).Elem()
}

func (o AlarmPolicyPolicyTagArrayOutput) ToAlarmPolicyPolicyTagArrayOutput() AlarmPolicyPolicyTagArrayOutput {
	return o
}

func (o AlarmPolicyPolicyTagArrayOutput) ToAlarmPolicyPolicyTagArrayOutputWithContext(ctx context.Context) AlarmPolicyPolicyTagArrayOutput {
	return o
}

func (o AlarmPolicyPolicyTagArrayOutput) Index(i pulumi.IntInput) AlarmPolicyPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmPolicyPolicyTag {
		return vs[0].([]AlarmPolicyPolicyTag)[vs[1].(int)]
	}).(AlarmPolicyPolicyTagOutput)
}

type AlarmPolicyTriggerTask struct {
	TaskConfig string `pulumi:"taskConfig"`
	Type       string `pulumi:"type"`
}

// AlarmPolicyTriggerTaskInput is an input type that accepts AlarmPolicyTriggerTaskArgs and AlarmPolicyTriggerTaskOutput values.
// You can construct a concrete instance of `AlarmPolicyTriggerTaskInput` via:
//
//          AlarmPolicyTriggerTaskArgs{...}
type AlarmPolicyTriggerTaskInput interface {
	pulumi.Input

	ToAlarmPolicyTriggerTaskOutput() AlarmPolicyTriggerTaskOutput
	ToAlarmPolicyTriggerTaskOutputWithContext(context.Context) AlarmPolicyTriggerTaskOutput
}

type AlarmPolicyTriggerTaskArgs struct {
	TaskConfig pulumi.StringInput `pulumi:"taskConfig"`
	Type       pulumi.StringInput `pulumi:"type"`
}

func (AlarmPolicyTriggerTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyTriggerTask)(nil)).Elem()
}

func (i AlarmPolicyTriggerTaskArgs) ToAlarmPolicyTriggerTaskOutput() AlarmPolicyTriggerTaskOutput {
	return i.ToAlarmPolicyTriggerTaskOutputWithContext(context.Background())
}

func (i AlarmPolicyTriggerTaskArgs) ToAlarmPolicyTriggerTaskOutputWithContext(ctx context.Context) AlarmPolicyTriggerTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyTriggerTaskOutput)
}

// AlarmPolicyTriggerTaskArrayInput is an input type that accepts AlarmPolicyTriggerTaskArray and AlarmPolicyTriggerTaskArrayOutput values.
// You can construct a concrete instance of `AlarmPolicyTriggerTaskArrayInput` via:
//
//          AlarmPolicyTriggerTaskArray{ AlarmPolicyTriggerTaskArgs{...} }
type AlarmPolicyTriggerTaskArrayInput interface {
	pulumi.Input

	ToAlarmPolicyTriggerTaskArrayOutput() AlarmPolicyTriggerTaskArrayOutput
	ToAlarmPolicyTriggerTaskArrayOutputWithContext(context.Context) AlarmPolicyTriggerTaskArrayOutput
}

type AlarmPolicyTriggerTaskArray []AlarmPolicyTriggerTaskInput

func (AlarmPolicyTriggerTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyTriggerTask)(nil)).Elem()
}

func (i AlarmPolicyTriggerTaskArray) ToAlarmPolicyTriggerTaskArrayOutput() AlarmPolicyTriggerTaskArrayOutput {
	return i.ToAlarmPolicyTriggerTaskArrayOutputWithContext(context.Background())
}

func (i AlarmPolicyTriggerTaskArray) ToAlarmPolicyTriggerTaskArrayOutputWithContext(ctx context.Context) AlarmPolicyTriggerTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPolicyTriggerTaskArrayOutput)
}

type AlarmPolicyTriggerTaskOutput struct{ *pulumi.OutputState }

func (AlarmPolicyTriggerTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPolicyTriggerTask)(nil)).Elem()
}

func (o AlarmPolicyTriggerTaskOutput) ToAlarmPolicyTriggerTaskOutput() AlarmPolicyTriggerTaskOutput {
	return o
}

func (o AlarmPolicyTriggerTaskOutput) ToAlarmPolicyTriggerTaskOutputWithContext(ctx context.Context) AlarmPolicyTriggerTaskOutput {
	return o
}

func (o AlarmPolicyTriggerTaskOutput) TaskConfig() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmPolicyTriggerTask) string { return v.TaskConfig }).(pulumi.StringOutput)
}

func (o AlarmPolicyTriggerTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmPolicyTriggerTask) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmPolicyTriggerTaskArrayOutput struct{ *pulumi.OutputState }

func (AlarmPolicyTriggerTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPolicyTriggerTask)(nil)).Elem()
}

func (o AlarmPolicyTriggerTaskArrayOutput) ToAlarmPolicyTriggerTaskArrayOutput() AlarmPolicyTriggerTaskArrayOutput {
	return o
}

func (o AlarmPolicyTriggerTaskArrayOutput) ToAlarmPolicyTriggerTaskArrayOutputWithContext(ctx context.Context) AlarmPolicyTriggerTaskArrayOutput {
	return o
}

func (o AlarmPolicyTriggerTaskArrayOutput) Index(i pulumi.IntInput) AlarmPolicyTriggerTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmPolicyTriggerTask {
		return vs[0].([]AlarmPolicyTriggerTask)[vs[1].(int)]
	}).(AlarmPolicyTriggerTaskOutput)
}

type BindingAlarmReceiverReceivers struct {
	EndTime            *int     `pulumi:"endTime"`
	NotifyWays         []string `pulumi:"notifyWays"`
	ReceiveLanguage    *string  `pulumi:"receiveLanguage"`
	ReceiverGroupLists []int    `pulumi:"receiverGroupLists"`
	ReceiverType       string   `pulumi:"receiverType"`
	ReceiverUserLists  []int    `pulumi:"receiverUserLists"`
	StartTime          *int     `pulumi:"startTime"`
}

// BindingAlarmReceiverReceiversInput is an input type that accepts BindingAlarmReceiverReceiversArgs and BindingAlarmReceiverReceiversOutput values.
// You can construct a concrete instance of `BindingAlarmReceiverReceiversInput` via:
//
//          BindingAlarmReceiverReceiversArgs{...}
type BindingAlarmReceiverReceiversInput interface {
	pulumi.Input

	ToBindingAlarmReceiverReceiversOutput() BindingAlarmReceiverReceiversOutput
	ToBindingAlarmReceiverReceiversOutputWithContext(context.Context) BindingAlarmReceiverReceiversOutput
}

type BindingAlarmReceiverReceiversArgs struct {
	EndTime            pulumi.IntPtrInput      `pulumi:"endTime"`
	NotifyWays         pulumi.StringArrayInput `pulumi:"notifyWays"`
	ReceiveLanguage    pulumi.StringPtrInput   `pulumi:"receiveLanguage"`
	ReceiverGroupLists pulumi.IntArrayInput    `pulumi:"receiverGroupLists"`
	ReceiverType       pulumi.StringInput      `pulumi:"receiverType"`
	ReceiverUserLists  pulumi.IntArrayInput    `pulumi:"receiverUserLists"`
	StartTime          pulumi.IntPtrInput      `pulumi:"startTime"`
}

func (BindingAlarmReceiverReceiversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingAlarmReceiverReceivers)(nil)).Elem()
}

func (i BindingAlarmReceiverReceiversArgs) ToBindingAlarmReceiverReceiversOutput() BindingAlarmReceiverReceiversOutput {
	return i.ToBindingAlarmReceiverReceiversOutputWithContext(context.Background())
}

func (i BindingAlarmReceiverReceiversArgs) ToBindingAlarmReceiverReceiversOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingAlarmReceiverReceiversOutput)
}

func (i BindingAlarmReceiverReceiversArgs) ToBindingAlarmReceiverReceiversPtrOutput() BindingAlarmReceiverReceiversPtrOutput {
	return i.ToBindingAlarmReceiverReceiversPtrOutputWithContext(context.Background())
}

func (i BindingAlarmReceiverReceiversArgs) ToBindingAlarmReceiverReceiversPtrOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingAlarmReceiverReceiversOutput).ToBindingAlarmReceiverReceiversPtrOutputWithContext(ctx)
}

// BindingAlarmReceiverReceiversPtrInput is an input type that accepts BindingAlarmReceiverReceiversArgs, BindingAlarmReceiverReceiversPtr and BindingAlarmReceiverReceiversPtrOutput values.
// You can construct a concrete instance of `BindingAlarmReceiverReceiversPtrInput` via:
//
//          BindingAlarmReceiverReceiversArgs{...}
//
//  or:
//
//          nil
type BindingAlarmReceiverReceiversPtrInput interface {
	pulumi.Input

	ToBindingAlarmReceiverReceiversPtrOutput() BindingAlarmReceiverReceiversPtrOutput
	ToBindingAlarmReceiverReceiversPtrOutputWithContext(context.Context) BindingAlarmReceiverReceiversPtrOutput
}

type bindingAlarmReceiverReceiversPtrType BindingAlarmReceiverReceiversArgs

func BindingAlarmReceiverReceiversPtr(v *BindingAlarmReceiverReceiversArgs) BindingAlarmReceiverReceiversPtrInput {
	return (*bindingAlarmReceiverReceiversPtrType)(v)
}

func (*bindingAlarmReceiverReceiversPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingAlarmReceiverReceivers)(nil)).Elem()
}

func (i *bindingAlarmReceiverReceiversPtrType) ToBindingAlarmReceiverReceiversPtrOutput() BindingAlarmReceiverReceiversPtrOutput {
	return i.ToBindingAlarmReceiverReceiversPtrOutputWithContext(context.Background())
}

func (i *bindingAlarmReceiverReceiversPtrType) ToBindingAlarmReceiverReceiversPtrOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingAlarmReceiverReceiversPtrOutput)
}

type BindingAlarmReceiverReceiversOutput struct{ *pulumi.OutputState }

func (BindingAlarmReceiverReceiversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingAlarmReceiverReceivers)(nil)).Elem()
}

func (o BindingAlarmReceiverReceiversOutput) ToBindingAlarmReceiverReceiversOutput() BindingAlarmReceiverReceiversOutput {
	return o
}

func (o BindingAlarmReceiverReceiversOutput) ToBindingAlarmReceiverReceiversOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversOutput {
	return o
}

func (o BindingAlarmReceiverReceiversOutput) ToBindingAlarmReceiverReceiversPtrOutput() BindingAlarmReceiverReceiversPtrOutput {
	return o.ToBindingAlarmReceiverReceiversPtrOutputWithContext(context.Background())
}

func (o BindingAlarmReceiverReceiversOutput) ToBindingAlarmReceiverReceiversPtrOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BindingAlarmReceiverReceivers) *BindingAlarmReceiverReceivers {
		return &v
	}).(BindingAlarmReceiverReceiversPtrOutput)
}

func (o BindingAlarmReceiverReceiversOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o BindingAlarmReceiverReceiversOutput) NotifyWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) []string { return v.NotifyWays }).(pulumi.StringArrayOutput)
}

func (o BindingAlarmReceiverReceiversOutput) ReceiveLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) *string { return v.ReceiveLanguage }).(pulumi.StringPtrOutput)
}

func (o BindingAlarmReceiverReceiversOutput) ReceiverGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) []int { return v.ReceiverGroupLists }).(pulumi.IntArrayOutput)
}

func (o BindingAlarmReceiverReceiversOutput) ReceiverType() pulumi.StringOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) string { return v.ReceiverType }).(pulumi.StringOutput)
}

func (o BindingAlarmReceiverReceiversOutput) ReceiverUserLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) []int { return v.ReceiverUserLists }).(pulumi.IntArrayOutput)
}

func (o BindingAlarmReceiverReceiversOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BindingAlarmReceiverReceivers) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

type BindingAlarmReceiverReceiversPtrOutput struct{ *pulumi.OutputState }

func (BindingAlarmReceiverReceiversPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingAlarmReceiverReceivers)(nil)).Elem()
}

func (o BindingAlarmReceiverReceiversPtrOutput) ToBindingAlarmReceiverReceiversPtrOutput() BindingAlarmReceiverReceiversPtrOutput {
	return o
}

func (o BindingAlarmReceiverReceiversPtrOutput) ToBindingAlarmReceiverReceiversPtrOutputWithContext(ctx context.Context) BindingAlarmReceiverReceiversPtrOutput {
	return o
}

func (o BindingAlarmReceiverReceiversPtrOutput) Elem() BindingAlarmReceiverReceiversOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) BindingAlarmReceiverReceivers {
		if v != nil {
			return *v
		}
		var ret BindingAlarmReceiverReceivers
		return ret
	}).(BindingAlarmReceiverReceiversOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) *int {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.IntPtrOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) NotifyWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) []string {
		if v == nil {
			return nil
		}
		return v.NotifyWays
	}).(pulumi.StringArrayOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) ReceiveLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) *string {
		if v == nil {
			return nil
		}
		return v.ReceiveLanguage
	}).(pulumi.StringPtrOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) ReceiverGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) []int {
		if v == nil {
			return nil
		}
		return v.ReceiverGroupLists
	}).(pulumi.IntArrayOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) ReceiverType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) *string {
		if v == nil {
			return nil
		}
		return &v.ReceiverType
	}).(pulumi.StringPtrOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) ReceiverUserLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) []int {
		if v == nil {
			return nil
		}
		return v.ReceiverUserLists
	}).(pulumi.IntArrayOutput)
}

func (o BindingAlarmReceiverReceiversPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BindingAlarmReceiverReceivers) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

type BindingObjectDimension struct {
	DimensionsJson string  `pulumi:"dimensionsJson"`
	UniqueId       *string `pulumi:"uniqueId"`
}

// BindingObjectDimensionInput is an input type that accepts BindingObjectDimensionArgs and BindingObjectDimensionOutput values.
// You can construct a concrete instance of `BindingObjectDimensionInput` via:
//
//          BindingObjectDimensionArgs{...}
type BindingObjectDimensionInput interface {
	pulumi.Input

	ToBindingObjectDimensionOutput() BindingObjectDimensionOutput
	ToBindingObjectDimensionOutputWithContext(context.Context) BindingObjectDimensionOutput
}

type BindingObjectDimensionArgs struct {
	DimensionsJson pulumi.StringInput    `pulumi:"dimensionsJson"`
	UniqueId       pulumi.StringPtrInput `pulumi:"uniqueId"`
}

func (BindingObjectDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectDimension)(nil)).Elem()
}

func (i BindingObjectDimensionArgs) ToBindingObjectDimensionOutput() BindingObjectDimensionOutput {
	return i.ToBindingObjectDimensionOutputWithContext(context.Background())
}

func (i BindingObjectDimensionArgs) ToBindingObjectDimensionOutputWithContext(ctx context.Context) BindingObjectDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectDimensionOutput)
}

// BindingObjectDimensionArrayInput is an input type that accepts BindingObjectDimensionArray and BindingObjectDimensionArrayOutput values.
// You can construct a concrete instance of `BindingObjectDimensionArrayInput` via:
//
//          BindingObjectDimensionArray{ BindingObjectDimensionArgs{...} }
type BindingObjectDimensionArrayInput interface {
	pulumi.Input

	ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput
	ToBindingObjectDimensionArrayOutputWithContext(context.Context) BindingObjectDimensionArrayOutput
}

type BindingObjectDimensionArray []BindingObjectDimensionInput

func (BindingObjectDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectDimension)(nil)).Elem()
}

func (i BindingObjectDimensionArray) ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput {
	return i.ToBindingObjectDimensionArrayOutputWithContext(context.Background())
}

func (i BindingObjectDimensionArray) ToBindingObjectDimensionArrayOutputWithContext(ctx context.Context) BindingObjectDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectDimensionArrayOutput)
}

type BindingObjectDimensionOutput struct{ *pulumi.OutputState }

func (BindingObjectDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectDimension)(nil)).Elem()
}

func (o BindingObjectDimensionOutput) ToBindingObjectDimensionOutput() BindingObjectDimensionOutput {
	return o
}

func (o BindingObjectDimensionOutput) ToBindingObjectDimensionOutputWithContext(ctx context.Context) BindingObjectDimensionOutput {
	return o
}

func (o BindingObjectDimensionOutput) DimensionsJson() pulumi.StringOutput {
	return o.ApplyT(func(v BindingObjectDimension) string { return v.DimensionsJson }).(pulumi.StringOutput)
}

func (o BindingObjectDimensionOutput) UniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingObjectDimension) *string { return v.UniqueId }).(pulumi.StringPtrOutput)
}

type BindingObjectDimensionArrayOutput struct{ *pulumi.OutputState }

func (BindingObjectDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectDimension)(nil)).Elem()
}

func (o BindingObjectDimensionArrayOutput) ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput {
	return o
}

func (o BindingObjectDimensionArrayOutput) ToBindingObjectDimensionArrayOutputWithContext(ctx context.Context) BindingObjectDimensionArrayOutput {
	return o
}

func (o BindingObjectDimensionArrayOutput) Index(i pulumi.IntInput) BindingObjectDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingObjectDimension {
		return vs[0].([]BindingObjectDimension)[vs[1].(int)]
	}).(BindingObjectDimensionOutput)
}

type BindingObjectsList struct {
	DimensionsJson string `pulumi:"dimensionsJson"`
	IsShielded     int    `pulumi:"isShielded"`
	Region         string `pulumi:"region"`
	UniqueId       string `pulumi:"uniqueId"`
}

// BindingObjectsListInput is an input type that accepts BindingObjectsListArgs and BindingObjectsListOutput values.
// You can construct a concrete instance of `BindingObjectsListInput` via:
//
//          BindingObjectsListArgs{...}
type BindingObjectsListInput interface {
	pulumi.Input

	ToBindingObjectsListOutput() BindingObjectsListOutput
	ToBindingObjectsListOutputWithContext(context.Context) BindingObjectsListOutput
}

type BindingObjectsListArgs struct {
	DimensionsJson pulumi.StringInput `pulumi:"dimensionsJson"`
	IsShielded     pulumi.IntInput    `pulumi:"isShielded"`
	Region         pulumi.StringInput `pulumi:"region"`
	UniqueId       pulumi.StringInput `pulumi:"uniqueId"`
}

func (BindingObjectsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectsList)(nil)).Elem()
}

func (i BindingObjectsListArgs) ToBindingObjectsListOutput() BindingObjectsListOutput {
	return i.ToBindingObjectsListOutputWithContext(context.Background())
}

func (i BindingObjectsListArgs) ToBindingObjectsListOutputWithContext(ctx context.Context) BindingObjectsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectsListOutput)
}

// BindingObjectsListArrayInput is an input type that accepts BindingObjectsListArray and BindingObjectsListArrayOutput values.
// You can construct a concrete instance of `BindingObjectsListArrayInput` via:
//
//          BindingObjectsListArray{ BindingObjectsListArgs{...} }
type BindingObjectsListArrayInput interface {
	pulumi.Input

	ToBindingObjectsListArrayOutput() BindingObjectsListArrayOutput
	ToBindingObjectsListArrayOutputWithContext(context.Context) BindingObjectsListArrayOutput
}

type BindingObjectsListArray []BindingObjectsListInput

func (BindingObjectsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectsList)(nil)).Elem()
}

func (i BindingObjectsListArray) ToBindingObjectsListArrayOutput() BindingObjectsListArrayOutput {
	return i.ToBindingObjectsListArrayOutputWithContext(context.Background())
}

func (i BindingObjectsListArray) ToBindingObjectsListArrayOutputWithContext(ctx context.Context) BindingObjectsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectsListArrayOutput)
}

type BindingObjectsListOutput struct{ *pulumi.OutputState }

func (BindingObjectsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectsList)(nil)).Elem()
}

func (o BindingObjectsListOutput) ToBindingObjectsListOutput() BindingObjectsListOutput {
	return o
}

func (o BindingObjectsListOutput) ToBindingObjectsListOutputWithContext(ctx context.Context) BindingObjectsListOutput {
	return o
}

func (o BindingObjectsListOutput) DimensionsJson() pulumi.StringOutput {
	return o.ApplyT(func(v BindingObjectsList) string { return v.DimensionsJson }).(pulumi.StringOutput)
}

func (o BindingObjectsListOutput) IsShielded() pulumi.IntOutput {
	return o.ApplyT(func(v BindingObjectsList) int { return v.IsShielded }).(pulumi.IntOutput)
}

func (o BindingObjectsListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v BindingObjectsList) string { return v.Region }).(pulumi.StringOutput)
}

func (o BindingObjectsListOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v BindingObjectsList) string { return v.UniqueId }).(pulumi.StringOutput)
}

type BindingObjectsListArrayOutput struct{ *pulumi.OutputState }

func (BindingObjectsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectsList)(nil)).Elem()
}

func (o BindingObjectsListArrayOutput) ToBindingObjectsListArrayOutput() BindingObjectsListArrayOutput {
	return o
}

func (o BindingObjectsListArrayOutput) ToBindingObjectsListArrayOutputWithContext(ctx context.Context) BindingObjectsListArrayOutput {
	return o
}

func (o BindingObjectsListArrayOutput) Index(i pulumi.IntInput) BindingObjectsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingObjectsList {
		return vs[0].([]BindingObjectsList)[vs[1].(int)]
	}).(BindingObjectsListOutput)
}

type DataDimension struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// DataDimensionInput is an input type that accepts DataDimensionArgs and DataDimensionOutput values.
// You can construct a concrete instance of `DataDimensionInput` via:
//
//          DataDimensionArgs{...}
type DataDimensionInput interface {
	pulumi.Input

	ToDataDimensionOutput() DataDimensionOutput
	ToDataDimensionOutputWithContext(context.Context) DataDimensionOutput
}

type DataDimensionArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DataDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDimension)(nil)).Elem()
}

func (i DataDimensionArgs) ToDataDimensionOutput() DataDimensionOutput {
	return i.ToDataDimensionOutputWithContext(context.Background())
}

func (i DataDimensionArgs) ToDataDimensionOutputWithContext(ctx context.Context) DataDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDimensionOutput)
}

// DataDimensionArrayInput is an input type that accepts DataDimensionArray and DataDimensionArrayOutput values.
// You can construct a concrete instance of `DataDimensionArrayInput` via:
//
//          DataDimensionArray{ DataDimensionArgs{...} }
type DataDimensionArrayInput interface {
	pulumi.Input

	ToDataDimensionArrayOutput() DataDimensionArrayOutput
	ToDataDimensionArrayOutputWithContext(context.Context) DataDimensionArrayOutput
}

type DataDimensionArray []DataDimensionInput

func (DataDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDimension)(nil)).Elem()
}

func (i DataDimensionArray) ToDataDimensionArrayOutput() DataDimensionArrayOutput {
	return i.ToDataDimensionArrayOutputWithContext(context.Background())
}

func (i DataDimensionArray) ToDataDimensionArrayOutputWithContext(ctx context.Context) DataDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDimensionArrayOutput)
}

type DataDimensionOutput struct{ *pulumi.OutputState }

func (DataDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDimension)(nil)).Elem()
}

func (o DataDimensionOutput) ToDataDimensionOutput() DataDimensionOutput {
	return o
}

func (o DataDimensionOutput) ToDataDimensionOutputWithContext(ctx context.Context) DataDimensionOutput {
	return o
}

func (o DataDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o DataDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataDimension) string { return v.Value }).(pulumi.StringOutput)
}

type DataDimensionArrayOutput struct{ *pulumi.OutputState }

func (DataDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDimension)(nil)).Elem()
}

func (o DataDimensionArrayOutput) ToDataDimensionArrayOutput() DataDimensionArrayOutput {
	return o
}

func (o DataDimensionArrayOutput) ToDataDimensionArrayOutputWithContext(ctx context.Context) DataDimensionArrayOutput {
	return o
}

func (o DataDimensionArrayOutput) Index(i pulumi.IntInput) DataDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDimension {
		return vs[0].([]DataDimension)[vs[1].(int)]
	}).(DataDimensionOutput)
}

type DataList struct {
	Timestamp int     `pulumi:"timestamp"`
	Value     float64 `pulumi:"value"`
}

// DataListInput is an input type that accepts DataListArgs and DataListOutput values.
// You can construct a concrete instance of `DataListInput` via:
//
//          DataListArgs{...}
type DataListInput interface {
	pulumi.Input

	ToDataListOutput() DataListOutput
	ToDataListOutputWithContext(context.Context) DataListOutput
}

type DataListArgs struct {
	Timestamp pulumi.IntInput     `pulumi:"timestamp"`
	Value     pulumi.Float64Input `pulumi:"value"`
}

func (DataListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataList)(nil)).Elem()
}

func (i DataListArgs) ToDataListOutput() DataListOutput {
	return i.ToDataListOutputWithContext(context.Background())
}

func (i DataListArgs) ToDataListOutputWithContext(ctx context.Context) DataListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataListOutput)
}

// DataListArrayInput is an input type that accepts DataListArray and DataListArrayOutput values.
// You can construct a concrete instance of `DataListArrayInput` via:
//
//          DataListArray{ DataListArgs{...} }
type DataListArrayInput interface {
	pulumi.Input

	ToDataListArrayOutput() DataListArrayOutput
	ToDataListArrayOutputWithContext(context.Context) DataListArrayOutput
}

type DataListArray []DataListInput

func (DataListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataList)(nil)).Elem()
}

func (i DataListArray) ToDataListArrayOutput() DataListArrayOutput {
	return i.ToDataListArrayOutputWithContext(context.Background())
}

func (i DataListArray) ToDataListArrayOutputWithContext(ctx context.Context) DataListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataListArrayOutput)
}

type DataListOutput struct{ *pulumi.OutputState }

func (DataListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataList)(nil)).Elem()
}

func (o DataListOutput) ToDataListOutput() DataListOutput {
	return o
}

func (o DataListOutput) ToDataListOutputWithContext(ctx context.Context) DataListOutput {
	return o
}

func (o DataListOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v DataList) int { return v.Timestamp }).(pulumi.IntOutput)
}

func (o DataListOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v DataList) float64 { return v.Value }).(pulumi.Float64Output)
}

type DataListArrayOutput struct{ *pulumi.OutputState }

func (DataListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataList)(nil)).Elem()
}

func (o DataListArrayOutput) ToDataListArrayOutput() DataListArrayOutput {
	return o
}

func (o DataListArrayOutput) ToDataListArrayOutputWithContext(ctx context.Context) DataListArrayOutput {
	return o
}

func (o DataListArrayOutput) Index(i pulumi.IntInput) DataListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataList {
		return vs[0].([]DataList)[vs[1].(int)]
	}).(DataListOutput)
}

type PolicyBindingObjectDimension struct {
	DimensionsJson string  `pulumi:"dimensionsJson"`
	UniqueId       *string `pulumi:"uniqueId"`
}

// PolicyBindingObjectDimensionInput is an input type that accepts PolicyBindingObjectDimensionArgs and PolicyBindingObjectDimensionOutput values.
// You can construct a concrete instance of `PolicyBindingObjectDimensionInput` via:
//
//          PolicyBindingObjectDimensionArgs{...}
type PolicyBindingObjectDimensionInput interface {
	pulumi.Input

	ToPolicyBindingObjectDimensionOutput() PolicyBindingObjectDimensionOutput
	ToPolicyBindingObjectDimensionOutputWithContext(context.Context) PolicyBindingObjectDimensionOutput
}

type PolicyBindingObjectDimensionArgs struct {
	DimensionsJson pulumi.StringInput    `pulumi:"dimensionsJson"`
	UniqueId       pulumi.StringPtrInput `pulumi:"uniqueId"`
}

func (PolicyBindingObjectDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBindingObjectDimension)(nil)).Elem()
}

func (i PolicyBindingObjectDimensionArgs) ToPolicyBindingObjectDimensionOutput() PolicyBindingObjectDimensionOutput {
	return i.ToPolicyBindingObjectDimensionOutputWithContext(context.Background())
}

func (i PolicyBindingObjectDimensionArgs) ToPolicyBindingObjectDimensionOutputWithContext(ctx context.Context) PolicyBindingObjectDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingObjectDimensionOutput)
}

// PolicyBindingObjectDimensionArrayInput is an input type that accepts PolicyBindingObjectDimensionArray and PolicyBindingObjectDimensionArrayOutput values.
// You can construct a concrete instance of `PolicyBindingObjectDimensionArrayInput` via:
//
//          PolicyBindingObjectDimensionArray{ PolicyBindingObjectDimensionArgs{...} }
type PolicyBindingObjectDimensionArrayInput interface {
	pulumi.Input

	ToPolicyBindingObjectDimensionArrayOutput() PolicyBindingObjectDimensionArrayOutput
	ToPolicyBindingObjectDimensionArrayOutputWithContext(context.Context) PolicyBindingObjectDimensionArrayOutput
}

type PolicyBindingObjectDimensionArray []PolicyBindingObjectDimensionInput

func (PolicyBindingObjectDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBindingObjectDimension)(nil)).Elem()
}

func (i PolicyBindingObjectDimensionArray) ToPolicyBindingObjectDimensionArrayOutput() PolicyBindingObjectDimensionArrayOutput {
	return i.ToPolicyBindingObjectDimensionArrayOutputWithContext(context.Background())
}

func (i PolicyBindingObjectDimensionArray) ToPolicyBindingObjectDimensionArrayOutputWithContext(ctx context.Context) PolicyBindingObjectDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingObjectDimensionArrayOutput)
}

type PolicyBindingObjectDimensionOutput struct{ *pulumi.OutputState }

func (PolicyBindingObjectDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBindingObjectDimension)(nil)).Elem()
}

func (o PolicyBindingObjectDimensionOutput) ToPolicyBindingObjectDimensionOutput() PolicyBindingObjectDimensionOutput {
	return o
}

func (o PolicyBindingObjectDimensionOutput) ToPolicyBindingObjectDimensionOutputWithContext(ctx context.Context) PolicyBindingObjectDimensionOutput {
	return o
}

func (o PolicyBindingObjectDimensionOutput) DimensionsJson() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyBindingObjectDimension) string { return v.DimensionsJson }).(pulumi.StringOutput)
}

func (o PolicyBindingObjectDimensionOutput) UniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBindingObjectDimension) *string { return v.UniqueId }).(pulumi.StringPtrOutput)
}

type PolicyBindingObjectDimensionArrayOutput struct{ *pulumi.OutputState }

func (PolicyBindingObjectDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBindingObjectDimension)(nil)).Elem()
}

func (o PolicyBindingObjectDimensionArrayOutput) ToPolicyBindingObjectDimensionArrayOutput() PolicyBindingObjectDimensionArrayOutput {
	return o
}

func (o PolicyBindingObjectDimensionArrayOutput) ToPolicyBindingObjectDimensionArrayOutputWithContext(ctx context.Context) PolicyBindingObjectDimensionArrayOutput {
	return o
}

func (o PolicyBindingObjectDimensionArrayOutput) Index(i pulumi.IntInput) PolicyBindingObjectDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBindingObjectDimension {
		return vs[0].([]PolicyBindingObjectDimension)[vs[1].(int)]
	}).(PolicyBindingObjectDimensionOutput)
}

type PolicyConditionsList struct {
	EventMetrics         []PolicyConditionsListEventMetric `pulumi:"eventMetrics"`
	IsSupportMultiRegion bool                              `pulumi:"isSupportMultiRegion"`
	Metrics              []PolicyConditionsListMetric      `pulumi:"metrics"`
	Name                 string                            `pulumi:"name"`
	PolicyViewName       string                            `pulumi:"policyViewName"`
	SupportRegions       []string                          `pulumi:"supportRegions"`
}

// PolicyConditionsListInput is an input type that accepts PolicyConditionsListArgs and PolicyConditionsListOutput values.
// You can construct a concrete instance of `PolicyConditionsListInput` via:
//
//          PolicyConditionsListArgs{...}
type PolicyConditionsListInput interface {
	pulumi.Input

	ToPolicyConditionsListOutput() PolicyConditionsListOutput
	ToPolicyConditionsListOutputWithContext(context.Context) PolicyConditionsListOutput
}

type PolicyConditionsListArgs struct {
	EventMetrics         PolicyConditionsListEventMetricArrayInput `pulumi:"eventMetrics"`
	IsSupportMultiRegion pulumi.BoolInput                          `pulumi:"isSupportMultiRegion"`
	Metrics              PolicyConditionsListMetricArrayInput      `pulumi:"metrics"`
	Name                 pulumi.StringInput                        `pulumi:"name"`
	PolicyViewName       pulumi.StringInput                        `pulumi:"policyViewName"`
	SupportRegions       pulumi.StringArrayInput                   `pulumi:"supportRegions"`
}

func (PolicyConditionsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsList)(nil)).Elem()
}

func (i PolicyConditionsListArgs) ToPolicyConditionsListOutput() PolicyConditionsListOutput {
	return i.ToPolicyConditionsListOutputWithContext(context.Background())
}

func (i PolicyConditionsListArgs) ToPolicyConditionsListOutputWithContext(ctx context.Context) PolicyConditionsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListOutput)
}

// PolicyConditionsListArrayInput is an input type that accepts PolicyConditionsListArray and PolicyConditionsListArrayOutput values.
// You can construct a concrete instance of `PolicyConditionsListArrayInput` via:
//
//          PolicyConditionsListArray{ PolicyConditionsListArgs{...} }
type PolicyConditionsListArrayInput interface {
	pulumi.Input

	ToPolicyConditionsListArrayOutput() PolicyConditionsListArrayOutput
	ToPolicyConditionsListArrayOutputWithContext(context.Context) PolicyConditionsListArrayOutput
}

type PolicyConditionsListArray []PolicyConditionsListInput

func (PolicyConditionsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsList)(nil)).Elem()
}

func (i PolicyConditionsListArray) ToPolicyConditionsListArrayOutput() PolicyConditionsListArrayOutput {
	return i.ToPolicyConditionsListArrayOutputWithContext(context.Background())
}

func (i PolicyConditionsListArray) ToPolicyConditionsListArrayOutputWithContext(ctx context.Context) PolicyConditionsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListArrayOutput)
}

type PolicyConditionsListOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsList)(nil)).Elem()
}

func (o PolicyConditionsListOutput) ToPolicyConditionsListOutput() PolicyConditionsListOutput {
	return o
}

func (o PolicyConditionsListOutput) ToPolicyConditionsListOutputWithContext(ctx context.Context) PolicyConditionsListOutput {
	return o
}

func (o PolicyConditionsListOutput) EventMetrics() PolicyConditionsListEventMetricArrayOutput {
	return o.ApplyT(func(v PolicyConditionsList) []PolicyConditionsListEventMetric { return v.EventMetrics }).(PolicyConditionsListEventMetricArrayOutput)
}

func (o PolicyConditionsListOutput) IsSupportMultiRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsList) bool { return v.IsSupportMultiRegion }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListOutput) Metrics() PolicyConditionsListMetricArrayOutput {
	return o.ApplyT(func(v PolicyConditionsList) []PolicyConditionsListMetric { return v.Metrics }).(PolicyConditionsListMetricArrayOutput)
}

func (o PolicyConditionsListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsList) string { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyConditionsListOutput) PolicyViewName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsList) string { return v.PolicyViewName }).(pulumi.StringOutput)
}

func (o PolicyConditionsListOutput) SupportRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyConditionsList) []string { return v.SupportRegions }).(pulumi.StringArrayOutput)
}

type PolicyConditionsListArrayOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsList)(nil)).Elem()
}

func (o PolicyConditionsListArrayOutput) ToPolicyConditionsListArrayOutput() PolicyConditionsListArrayOutput {
	return o
}

func (o PolicyConditionsListArrayOutput) ToPolicyConditionsListArrayOutputWithContext(ctx context.Context) PolicyConditionsListArrayOutput {
	return o
}

func (o PolicyConditionsListArrayOutput) Index(i pulumi.IntInput) PolicyConditionsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyConditionsList {
		return vs[0].([]PolicyConditionsList)[vs[1].(int)]
	}).(PolicyConditionsListOutput)
}

type PolicyConditionsListEventMetric struct {
	EventId       int    `pulumi:"eventId"`
	EventShowName string `pulumi:"eventShowName"`
	NeedRecovered bool   `pulumi:"needRecovered"`
}

// PolicyConditionsListEventMetricInput is an input type that accepts PolicyConditionsListEventMetricArgs and PolicyConditionsListEventMetricOutput values.
// You can construct a concrete instance of `PolicyConditionsListEventMetricInput` via:
//
//          PolicyConditionsListEventMetricArgs{...}
type PolicyConditionsListEventMetricInput interface {
	pulumi.Input

	ToPolicyConditionsListEventMetricOutput() PolicyConditionsListEventMetricOutput
	ToPolicyConditionsListEventMetricOutputWithContext(context.Context) PolicyConditionsListEventMetricOutput
}

type PolicyConditionsListEventMetricArgs struct {
	EventId       pulumi.IntInput    `pulumi:"eventId"`
	EventShowName pulumi.StringInput `pulumi:"eventShowName"`
	NeedRecovered pulumi.BoolInput   `pulumi:"needRecovered"`
}

func (PolicyConditionsListEventMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsListEventMetric)(nil)).Elem()
}

func (i PolicyConditionsListEventMetricArgs) ToPolicyConditionsListEventMetricOutput() PolicyConditionsListEventMetricOutput {
	return i.ToPolicyConditionsListEventMetricOutputWithContext(context.Background())
}

func (i PolicyConditionsListEventMetricArgs) ToPolicyConditionsListEventMetricOutputWithContext(ctx context.Context) PolicyConditionsListEventMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListEventMetricOutput)
}

// PolicyConditionsListEventMetricArrayInput is an input type that accepts PolicyConditionsListEventMetricArray and PolicyConditionsListEventMetricArrayOutput values.
// You can construct a concrete instance of `PolicyConditionsListEventMetricArrayInput` via:
//
//          PolicyConditionsListEventMetricArray{ PolicyConditionsListEventMetricArgs{...} }
type PolicyConditionsListEventMetricArrayInput interface {
	pulumi.Input

	ToPolicyConditionsListEventMetricArrayOutput() PolicyConditionsListEventMetricArrayOutput
	ToPolicyConditionsListEventMetricArrayOutputWithContext(context.Context) PolicyConditionsListEventMetricArrayOutput
}

type PolicyConditionsListEventMetricArray []PolicyConditionsListEventMetricInput

func (PolicyConditionsListEventMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsListEventMetric)(nil)).Elem()
}

func (i PolicyConditionsListEventMetricArray) ToPolicyConditionsListEventMetricArrayOutput() PolicyConditionsListEventMetricArrayOutput {
	return i.ToPolicyConditionsListEventMetricArrayOutputWithContext(context.Background())
}

func (i PolicyConditionsListEventMetricArray) ToPolicyConditionsListEventMetricArrayOutputWithContext(ctx context.Context) PolicyConditionsListEventMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListEventMetricArrayOutput)
}

type PolicyConditionsListEventMetricOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListEventMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsListEventMetric)(nil)).Elem()
}

func (o PolicyConditionsListEventMetricOutput) ToPolicyConditionsListEventMetricOutput() PolicyConditionsListEventMetricOutput {
	return o
}

func (o PolicyConditionsListEventMetricOutput) ToPolicyConditionsListEventMetricOutputWithContext(ctx context.Context) PolicyConditionsListEventMetricOutput {
	return o
}

func (o PolicyConditionsListEventMetricOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyConditionsListEventMetric) int { return v.EventId }).(pulumi.IntOutput)
}

func (o PolicyConditionsListEventMetricOutput) EventShowName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListEventMetric) string { return v.EventShowName }).(pulumi.StringOutput)
}

func (o PolicyConditionsListEventMetricOutput) NeedRecovered() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListEventMetric) bool { return v.NeedRecovered }).(pulumi.BoolOutput)
}

type PolicyConditionsListEventMetricArrayOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListEventMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsListEventMetric)(nil)).Elem()
}

func (o PolicyConditionsListEventMetricArrayOutput) ToPolicyConditionsListEventMetricArrayOutput() PolicyConditionsListEventMetricArrayOutput {
	return o
}

func (o PolicyConditionsListEventMetricArrayOutput) ToPolicyConditionsListEventMetricArrayOutputWithContext(ctx context.Context) PolicyConditionsListEventMetricArrayOutput {
	return o
}

func (o PolicyConditionsListEventMetricArrayOutput) Index(i pulumi.IntInput) PolicyConditionsListEventMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyConditionsListEventMetric {
		return vs[0].([]PolicyConditionsListEventMetric)[vs[1].(int)]
	}).(PolicyConditionsListEventMetricOutput)
}

type PolicyConditionsListMetric struct {
	CalcTypeKeys        []int  `pulumi:"calcTypeKeys"`
	CalcTypeNeed        bool   `pulumi:"calcTypeNeed"`
	CalcValueDefault    string `pulumi:"calcValueDefault"`
	CalcValueFixed      string `pulumi:"calcValueFixed"`
	CalcValueMax        string `pulumi:"calcValueMax"`
	CalcValueMin        string `pulumi:"calcValueMin"`
	CalcValueNeed       bool   `pulumi:"calcValueNeed"`
	ContinueTimeDefault int    `pulumi:"continueTimeDefault"`
	ContinueTimeKeys    []int  `pulumi:"continueTimeKeys"`
	ContinueTimeNeed    bool   `pulumi:"continueTimeNeed"`
	MetricId            int    `pulumi:"metricId"`
	MetricShowName      string `pulumi:"metricShowName"`
	MetricUnit          string `pulumi:"metricUnit"`
	PeriodDefault       int    `pulumi:"periodDefault"`
	PeriodKeys          []int  `pulumi:"periodKeys"`
	PeriodNeed          bool   `pulumi:"periodNeed"`
	PeriodNumDefault    int    `pulumi:"periodNumDefault"`
	PeriodNumKeys       []int  `pulumi:"periodNumKeys"`
	PeriodNumNeed       bool   `pulumi:"periodNumNeed"`
	StatTypeP10         string `pulumi:"statTypeP10"`
	StatTypeP1800       string `pulumi:"statTypeP1800"`
	StatTypeP300        string `pulumi:"statTypeP300"`
	StatTypeP3600       string `pulumi:"statTypeP3600"`
	StatTypeP5          string `pulumi:"statTypeP5"`
	StatTypeP60         string `pulumi:"statTypeP60"`
	StatTypeP600        string `pulumi:"statTypeP600"`
	StatTypeP86400      string `pulumi:"statTypeP86400"`
}

// PolicyConditionsListMetricInput is an input type that accepts PolicyConditionsListMetricArgs and PolicyConditionsListMetricOutput values.
// You can construct a concrete instance of `PolicyConditionsListMetricInput` via:
//
//          PolicyConditionsListMetricArgs{...}
type PolicyConditionsListMetricInput interface {
	pulumi.Input

	ToPolicyConditionsListMetricOutput() PolicyConditionsListMetricOutput
	ToPolicyConditionsListMetricOutputWithContext(context.Context) PolicyConditionsListMetricOutput
}

type PolicyConditionsListMetricArgs struct {
	CalcTypeKeys        pulumi.IntArrayInput `pulumi:"calcTypeKeys"`
	CalcTypeNeed        pulumi.BoolInput     `pulumi:"calcTypeNeed"`
	CalcValueDefault    pulumi.StringInput   `pulumi:"calcValueDefault"`
	CalcValueFixed      pulumi.StringInput   `pulumi:"calcValueFixed"`
	CalcValueMax        pulumi.StringInput   `pulumi:"calcValueMax"`
	CalcValueMin        pulumi.StringInput   `pulumi:"calcValueMin"`
	CalcValueNeed       pulumi.BoolInput     `pulumi:"calcValueNeed"`
	ContinueTimeDefault pulumi.IntInput      `pulumi:"continueTimeDefault"`
	ContinueTimeKeys    pulumi.IntArrayInput `pulumi:"continueTimeKeys"`
	ContinueTimeNeed    pulumi.BoolInput     `pulumi:"continueTimeNeed"`
	MetricId            pulumi.IntInput      `pulumi:"metricId"`
	MetricShowName      pulumi.StringInput   `pulumi:"metricShowName"`
	MetricUnit          pulumi.StringInput   `pulumi:"metricUnit"`
	PeriodDefault       pulumi.IntInput      `pulumi:"periodDefault"`
	PeriodKeys          pulumi.IntArrayInput `pulumi:"periodKeys"`
	PeriodNeed          pulumi.BoolInput     `pulumi:"periodNeed"`
	PeriodNumDefault    pulumi.IntInput      `pulumi:"periodNumDefault"`
	PeriodNumKeys       pulumi.IntArrayInput `pulumi:"periodNumKeys"`
	PeriodNumNeed       pulumi.BoolInput     `pulumi:"periodNumNeed"`
	StatTypeP10         pulumi.StringInput   `pulumi:"statTypeP10"`
	StatTypeP1800       pulumi.StringInput   `pulumi:"statTypeP1800"`
	StatTypeP300        pulumi.StringInput   `pulumi:"statTypeP300"`
	StatTypeP3600       pulumi.StringInput   `pulumi:"statTypeP3600"`
	StatTypeP5          pulumi.StringInput   `pulumi:"statTypeP5"`
	StatTypeP60         pulumi.StringInput   `pulumi:"statTypeP60"`
	StatTypeP600        pulumi.StringInput   `pulumi:"statTypeP600"`
	StatTypeP86400      pulumi.StringInput   `pulumi:"statTypeP86400"`
}

func (PolicyConditionsListMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsListMetric)(nil)).Elem()
}

func (i PolicyConditionsListMetricArgs) ToPolicyConditionsListMetricOutput() PolicyConditionsListMetricOutput {
	return i.ToPolicyConditionsListMetricOutputWithContext(context.Background())
}

func (i PolicyConditionsListMetricArgs) ToPolicyConditionsListMetricOutputWithContext(ctx context.Context) PolicyConditionsListMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListMetricOutput)
}

// PolicyConditionsListMetricArrayInput is an input type that accepts PolicyConditionsListMetricArray and PolicyConditionsListMetricArrayOutput values.
// You can construct a concrete instance of `PolicyConditionsListMetricArrayInput` via:
//
//          PolicyConditionsListMetricArray{ PolicyConditionsListMetricArgs{...} }
type PolicyConditionsListMetricArrayInput interface {
	pulumi.Input

	ToPolicyConditionsListMetricArrayOutput() PolicyConditionsListMetricArrayOutput
	ToPolicyConditionsListMetricArrayOutputWithContext(context.Context) PolicyConditionsListMetricArrayOutput
}

type PolicyConditionsListMetricArray []PolicyConditionsListMetricInput

func (PolicyConditionsListMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsListMetric)(nil)).Elem()
}

func (i PolicyConditionsListMetricArray) ToPolicyConditionsListMetricArrayOutput() PolicyConditionsListMetricArrayOutput {
	return i.ToPolicyConditionsListMetricArrayOutputWithContext(context.Background())
}

func (i PolicyConditionsListMetricArray) ToPolicyConditionsListMetricArrayOutputWithContext(ctx context.Context) PolicyConditionsListMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyConditionsListMetricArrayOutput)
}

type PolicyConditionsListMetricOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyConditionsListMetric)(nil)).Elem()
}

func (o PolicyConditionsListMetricOutput) ToPolicyConditionsListMetricOutput() PolicyConditionsListMetricOutput {
	return o
}

func (o PolicyConditionsListMetricOutput) ToPolicyConditionsListMetricOutputWithContext(ctx context.Context) PolicyConditionsListMetricOutput {
	return o
}

func (o PolicyConditionsListMetricOutput) CalcTypeKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) []int { return v.CalcTypeKeys }).(pulumi.IntArrayOutput)
}

func (o PolicyConditionsListMetricOutput) CalcTypeNeed() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) bool { return v.CalcTypeNeed }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListMetricOutput) CalcValueDefault() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.CalcValueDefault }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) CalcValueFixed() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.CalcValueFixed }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) CalcValueMax() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.CalcValueMax }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) CalcValueMin() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.CalcValueMin }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) CalcValueNeed() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) bool { return v.CalcValueNeed }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListMetricOutput) ContinueTimeDefault() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) int { return v.ContinueTimeDefault }).(pulumi.IntOutput)
}

func (o PolicyConditionsListMetricOutput) ContinueTimeKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) []int { return v.ContinueTimeKeys }).(pulumi.IntArrayOutput)
}

func (o PolicyConditionsListMetricOutput) ContinueTimeNeed() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) bool { return v.ContinueTimeNeed }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListMetricOutput) MetricId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) int { return v.MetricId }).(pulumi.IntOutput)
}

func (o PolicyConditionsListMetricOutput) MetricShowName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.MetricShowName }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.MetricUnit }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodDefault() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) int { return v.PeriodDefault }).(pulumi.IntOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) []int { return v.PeriodKeys }).(pulumi.IntArrayOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodNeed() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) bool { return v.PeriodNeed }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodNumDefault() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) int { return v.PeriodNumDefault }).(pulumi.IntOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodNumKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) []int { return v.PeriodNumKeys }).(pulumi.IntArrayOutput)
}

func (o PolicyConditionsListMetricOutput) PeriodNumNeed() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) bool { return v.PeriodNumNeed }).(pulumi.BoolOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP10() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP10 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP1800() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP1800 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP300() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP300 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP3600() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP3600 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP5() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP5 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP60() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP60 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP600() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP600 }).(pulumi.StringOutput)
}

func (o PolicyConditionsListMetricOutput) StatTypeP86400() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyConditionsListMetric) string { return v.StatTypeP86400 }).(pulumi.StringOutput)
}

type PolicyConditionsListMetricArrayOutput struct{ *pulumi.OutputState }

func (PolicyConditionsListMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyConditionsListMetric)(nil)).Elem()
}

func (o PolicyConditionsListMetricArrayOutput) ToPolicyConditionsListMetricArrayOutput() PolicyConditionsListMetricArrayOutput {
	return o
}

func (o PolicyConditionsListMetricArrayOutput) ToPolicyConditionsListMetricArrayOutputWithContext(ctx context.Context) PolicyConditionsListMetricArrayOutput {
	return o
}

func (o PolicyConditionsListMetricArrayOutput) Index(i pulumi.IntInput) PolicyConditionsListMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyConditionsListMetric {
		return vs[0].([]PolicyConditionsListMetric)[vs[1].(int)]
	}).(PolicyConditionsListMetricOutput)
}

type PolicyGroupBindingObject struct {
	DimensionsJson *string `pulumi:"dimensionsJson"`
	IsShielded     *int    `pulumi:"isShielded"`
	Region         *string `pulumi:"region"`
	UniqueId       *string `pulumi:"uniqueId"`
}

// PolicyGroupBindingObjectInput is an input type that accepts PolicyGroupBindingObjectArgs and PolicyGroupBindingObjectOutput values.
// You can construct a concrete instance of `PolicyGroupBindingObjectInput` via:
//
//          PolicyGroupBindingObjectArgs{...}
type PolicyGroupBindingObjectInput interface {
	pulumi.Input

	ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput
	ToPolicyGroupBindingObjectOutputWithContext(context.Context) PolicyGroupBindingObjectOutput
}

type PolicyGroupBindingObjectArgs struct {
	DimensionsJson pulumi.StringPtrInput `pulumi:"dimensionsJson"`
	IsShielded     pulumi.IntPtrInput    `pulumi:"isShielded"`
	Region         pulumi.StringPtrInput `pulumi:"region"`
	UniqueId       pulumi.StringPtrInput `pulumi:"uniqueId"`
}

func (PolicyGroupBindingObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupBindingObject)(nil)).Elem()
}

func (i PolicyGroupBindingObjectArgs) ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput {
	return i.ToPolicyGroupBindingObjectOutputWithContext(context.Background())
}

func (i PolicyGroupBindingObjectArgs) ToPolicyGroupBindingObjectOutputWithContext(ctx context.Context) PolicyGroupBindingObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupBindingObjectOutput)
}

// PolicyGroupBindingObjectArrayInput is an input type that accepts PolicyGroupBindingObjectArray and PolicyGroupBindingObjectArrayOutput values.
// You can construct a concrete instance of `PolicyGroupBindingObjectArrayInput` via:
//
//          PolicyGroupBindingObjectArray{ PolicyGroupBindingObjectArgs{...} }
type PolicyGroupBindingObjectArrayInput interface {
	pulumi.Input

	ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput
	ToPolicyGroupBindingObjectArrayOutputWithContext(context.Context) PolicyGroupBindingObjectArrayOutput
}

type PolicyGroupBindingObjectArray []PolicyGroupBindingObjectInput

func (PolicyGroupBindingObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupBindingObject)(nil)).Elem()
}

func (i PolicyGroupBindingObjectArray) ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput {
	return i.ToPolicyGroupBindingObjectArrayOutputWithContext(context.Background())
}

func (i PolicyGroupBindingObjectArray) ToPolicyGroupBindingObjectArrayOutputWithContext(ctx context.Context) PolicyGroupBindingObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupBindingObjectArrayOutput)
}

type PolicyGroupBindingObjectOutput struct{ *pulumi.OutputState }

func (PolicyGroupBindingObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupBindingObject)(nil)).Elem()
}

func (o PolicyGroupBindingObjectOutput) ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput {
	return o
}

func (o PolicyGroupBindingObjectOutput) ToPolicyGroupBindingObjectOutputWithContext(ctx context.Context) PolicyGroupBindingObjectOutput {
	return o
}

func (o PolicyGroupBindingObjectOutput) DimensionsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.DimensionsJson }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) IsShielded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *int { return v.IsShielded }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) UniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.UniqueId }).(pulumi.StringPtrOutput)
}

type PolicyGroupBindingObjectArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupBindingObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupBindingObject)(nil)).Elem()
}

func (o PolicyGroupBindingObjectArrayOutput) ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput {
	return o
}

func (o PolicyGroupBindingObjectArrayOutput) ToPolicyGroupBindingObjectArrayOutputWithContext(ctx context.Context) PolicyGroupBindingObjectArrayOutput {
	return o
}

func (o PolicyGroupBindingObjectArrayOutput) Index(i pulumi.IntInput) PolicyGroupBindingObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupBindingObject {
		return vs[0].([]PolicyGroupBindingObject)[vs[1].(int)]
	}).(PolicyGroupBindingObjectOutput)
}

type PolicyGroupCondition struct {
	AlarmNotifyPeriod int      `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int      `pulumi:"alarmNotifyType"`
	CalcPeriod        *int     `pulumi:"calcPeriod"`
	CalcType          *int     `pulumi:"calcType"`
	CalcValue         *float64 `pulumi:"calcValue"`
	ContinuePeriod    *int     `pulumi:"continuePeriod"`
	MetricId          int      `pulumi:"metricId"`
}

// PolicyGroupConditionInput is an input type that accepts PolicyGroupConditionArgs and PolicyGroupConditionOutput values.
// You can construct a concrete instance of `PolicyGroupConditionInput` via:
//
//          PolicyGroupConditionArgs{...}
type PolicyGroupConditionInput interface {
	pulumi.Input

	ToPolicyGroupConditionOutput() PolicyGroupConditionOutput
	ToPolicyGroupConditionOutputWithContext(context.Context) PolicyGroupConditionOutput
}

type PolicyGroupConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput        `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput        `pulumi:"alarmNotifyType"`
	CalcPeriod        pulumi.IntPtrInput     `pulumi:"calcPeriod"`
	CalcType          pulumi.IntPtrInput     `pulumi:"calcType"`
	CalcValue         pulumi.Float64PtrInput `pulumi:"calcValue"`
	ContinuePeriod    pulumi.IntPtrInput     `pulumi:"continuePeriod"`
	MetricId          pulumi.IntInput        `pulumi:"metricId"`
}

func (PolicyGroupConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCondition)(nil)).Elem()
}

func (i PolicyGroupConditionArgs) ToPolicyGroupConditionOutput() PolicyGroupConditionOutput {
	return i.ToPolicyGroupConditionOutputWithContext(context.Background())
}

func (i PolicyGroupConditionArgs) ToPolicyGroupConditionOutputWithContext(ctx context.Context) PolicyGroupConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConditionOutput)
}

// PolicyGroupConditionArrayInput is an input type that accepts PolicyGroupConditionArray and PolicyGroupConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupConditionArrayInput` via:
//
//          PolicyGroupConditionArray{ PolicyGroupConditionArgs{...} }
type PolicyGroupConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput
	ToPolicyGroupConditionArrayOutputWithContext(context.Context) PolicyGroupConditionArrayOutput
}

type PolicyGroupConditionArray []PolicyGroupConditionInput

func (PolicyGroupConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCondition)(nil)).Elem()
}

func (i PolicyGroupConditionArray) ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput {
	return i.ToPolicyGroupConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupConditionArray) ToPolicyGroupConditionArrayOutputWithContext(ctx context.Context) PolicyGroupConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConditionArrayOutput)
}

type PolicyGroupConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCondition)(nil)).Elem()
}

func (o PolicyGroupConditionOutput) ToPolicyGroupConditionOutput() PolicyGroupConditionOutput {
	return o
}

func (o PolicyGroupConditionOutput) ToPolicyGroupConditionOutputWithContext(ctx context.Context) PolicyGroupConditionOutput {
	return o
}

func (o PolicyGroupConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupConditionOutput) CalcPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.CalcPeriod }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) CalcType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.CalcType }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) CalcValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *float64 { return v.CalcValue }).(pulumi.Float64PtrOutput)
}

func (o PolicyGroupConditionOutput) ContinuePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.ContinuePeriod }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) MetricId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.MetricId }).(pulumi.IntOutput)
}

type PolicyGroupConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCondition)(nil)).Elem()
}

func (o PolicyGroupConditionArrayOutput) ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput {
	return o
}

func (o PolicyGroupConditionArrayOutput) ToPolicyGroupConditionArrayOutputWithContext(ctx context.Context) PolicyGroupConditionArrayOutput {
	return o
}

func (o PolicyGroupConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupCondition {
		return vs[0].([]PolicyGroupCondition)[vs[1].(int)]
	}).(PolicyGroupConditionOutput)
}

type PolicyGroupEventCondition struct {
	AlarmNotifyPeriod int `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int `pulumi:"alarmNotifyType"`
	EventId           int `pulumi:"eventId"`
}

// PolicyGroupEventConditionInput is an input type that accepts PolicyGroupEventConditionArgs and PolicyGroupEventConditionOutput values.
// You can construct a concrete instance of `PolicyGroupEventConditionInput` via:
//
//          PolicyGroupEventConditionArgs{...}
type PolicyGroupEventConditionInput interface {
	pulumi.Input

	ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput
	ToPolicyGroupEventConditionOutputWithContext(context.Context) PolicyGroupEventConditionOutput
}

type PolicyGroupEventConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput `pulumi:"alarmNotifyType"`
	EventId           pulumi.IntInput `pulumi:"eventId"`
}

func (PolicyGroupEventConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupEventCondition)(nil)).Elem()
}

func (i PolicyGroupEventConditionArgs) ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput {
	return i.ToPolicyGroupEventConditionOutputWithContext(context.Background())
}

func (i PolicyGroupEventConditionArgs) ToPolicyGroupEventConditionOutputWithContext(ctx context.Context) PolicyGroupEventConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupEventConditionOutput)
}

// PolicyGroupEventConditionArrayInput is an input type that accepts PolicyGroupEventConditionArray and PolicyGroupEventConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupEventConditionArrayInput` via:
//
//          PolicyGroupEventConditionArray{ PolicyGroupEventConditionArgs{...} }
type PolicyGroupEventConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput
	ToPolicyGroupEventConditionArrayOutputWithContext(context.Context) PolicyGroupEventConditionArrayOutput
}

type PolicyGroupEventConditionArray []PolicyGroupEventConditionInput

func (PolicyGroupEventConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupEventCondition)(nil)).Elem()
}

func (i PolicyGroupEventConditionArray) ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput {
	return i.ToPolicyGroupEventConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupEventConditionArray) ToPolicyGroupEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupEventConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupEventConditionArrayOutput)
}

type PolicyGroupEventConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupEventConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupEventCondition)(nil)).Elem()
}

func (o PolicyGroupEventConditionOutput) ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput {
	return o
}

func (o PolicyGroupEventConditionOutput) ToPolicyGroupEventConditionOutputWithContext(ctx context.Context) PolicyGroupEventConditionOutput {
	return o
}

func (o PolicyGroupEventConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupEventConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupEventConditionOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.EventId }).(pulumi.IntOutput)
}

type PolicyGroupEventConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupEventConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupEventCondition)(nil)).Elem()
}

func (o PolicyGroupEventConditionArrayOutput) ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput {
	return o
}

func (o PolicyGroupEventConditionArrayOutput) ToPolicyGroupEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupEventConditionArrayOutput {
	return o
}

func (o PolicyGroupEventConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupEventConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupEventCondition {
		return vs[0].([]PolicyGroupEventCondition)[vs[1].(int)]
	}).(PolicyGroupEventConditionOutput)
}

type PolicyGroupReceiver struct {
	EndTime            *int     `pulumi:"endTime"`
	NeedSendNotice     *int     `pulumi:"needSendNotice"`
	NotifyWays         []string `pulumi:"notifyWays"`
	PersonInterval     *int     `pulumi:"personInterval"`
	ReceiveLanguage    *string  `pulumi:"receiveLanguage"`
	ReceiverGroupLists []int    `pulumi:"receiverGroupLists"`
	ReceiverType       *string  `pulumi:"receiverType"`
	ReceiverUserLists  []int    `pulumi:"receiverUserLists"`
	RecoverNotifies    []string `pulumi:"recoverNotifies"`
	RoundInterval      *int     `pulumi:"roundInterval"`
	RoundNumber        *int     `pulumi:"roundNumber"`
	SendFors           []string `pulumi:"sendFors"`
	StartTime          *int     `pulumi:"startTime"`
	UidLists           []int    `pulumi:"uidLists"`
}

// PolicyGroupReceiverInput is an input type that accepts PolicyGroupReceiverArgs and PolicyGroupReceiverOutput values.
// You can construct a concrete instance of `PolicyGroupReceiverInput` via:
//
//          PolicyGroupReceiverArgs{...}
type PolicyGroupReceiverInput interface {
	pulumi.Input

	ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput
	ToPolicyGroupReceiverOutputWithContext(context.Context) PolicyGroupReceiverOutput
}

type PolicyGroupReceiverArgs struct {
	EndTime            pulumi.IntPtrInput      `pulumi:"endTime"`
	NeedSendNotice     pulumi.IntPtrInput      `pulumi:"needSendNotice"`
	NotifyWays         pulumi.StringArrayInput `pulumi:"notifyWays"`
	PersonInterval     pulumi.IntPtrInput      `pulumi:"personInterval"`
	ReceiveLanguage    pulumi.StringPtrInput   `pulumi:"receiveLanguage"`
	ReceiverGroupLists pulumi.IntArrayInput    `pulumi:"receiverGroupLists"`
	ReceiverType       pulumi.StringPtrInput   `pulumi:"receiverType"`
	ReceiverUserLists  pulumi.IntArrayInput    `pulumi:"receiverUserLists"`
	RecoverNotifies    pulumi.StringArrayInput `pulumi:"recoverNotifies"`
	RoundInterval      pulumi.IntPtrInput      `pulumi:"roundInterval"`
	RoundNumber        pulumi.IntPtrInput      `pulumi:"roundNumber"`
	SendFors           pulumi.StringArrayInput `pulumi:"sendFors"`
	StartTime          pulumi.IntPtrInput      `pulumi:"startTime"`
	UidLists           pulumi.IntArrayInput    `pulumi:"uidLists"`
}

func (PolicyGroupReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupReceiver)(nil)).Elem()
}

func (i PolicyGroupReceiverArgs) ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput {
	return i.ToPolicyGroupReceiverOutputWithContext(context.Background())
}

func (i PolicyGroupReceiverArgs) ToPolicyGroupReceiverOutputWithContext(ctx context.Context) PolicyGroupReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupReceiverOutput)
}

// PolicyGroupReceiverArrayInput is an input type that accepts PolicyGroupReceiverArray and PolicyGroupReceiverArrayOutput values.
// You can construct a concrete instance of `PolicyGroupReceiverArrayInput` via:
//
//          PolicyGroupReceiverArray{ PolicyGroupReceiverArgs{...} }
type PolicyGroupReceiverArrayInput interface {
	pulumi.Input

	ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput
	ToPolicyGroupReceiverArrayOutputWithContext(context.Context) PolicyGroupReceiverArrayOutput
}

type PolicyGroupReceiverArray []PolicyGroupReceiverInput

func (PolicyGroupReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupReceiver)(nil)).Elem()
}

func (i PolicyGroupReceiverArray) ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput {
	return i.ToPolicyGroupReceiverArrayOutputWithContext(context.Background())
}

func (i PolicyGroupReceiverArray) ToPolicyGroupReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupReceiverArrayOutput)
}

type PolicyGroupReceiverOutput struct{ *pulumi.OutputState }

func (PolicyGroupReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupReceiver)(nil)).Elem()
}

func (o PolicyGroupReceiverOutput) ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput {
	return o
}

func (o PolicyGroupReceiverOutput) ToPolicyGroupReceiverOutputWithContext(ctx context.Context) PolicyGroupReceiverOutput {
	return o
}

func (o PolicyGroupReceiverOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) NeedSendNotice() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.NeedSendNotice }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) NotifyWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.NotifyWays }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) PersonInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.PersonInterval }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiveLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *string { return v.ReceiveLanguage }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.ReceiverGroupLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *string { return v.ReceiverType }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverUserLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.ReceiverUserLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupReceiverOutput) RecoverNotifies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.RecoverNotifies }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) RoundInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.RoundInterval }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) RoundNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.RoundNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) SendFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.SendFors }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) UidLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.UidLists }).(pulumi.IntArrayOutput)
}

type PolicyGroupReceiverArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupReceiver)(nil)).Elem()
}

func (o PolicyGroupReceiverArrayOutput) ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput {
	return o
}

func (o PolicyGroupReceiverArrayOutput) ToPolicyGroupReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupReceiverArrayOutput {
	return o
}

func (o PolicyGroupReceiverArrayOutput) Index(i pulumi.IntInput) PolicyGroupReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupReceiver {
		return vs[0].([]PolicyGroupReceiver)[vs[1].(int)]
	}).(PolicyGroupReceiverOutput)
}

type PolicyGroupsList struct {
	CanSetDefault   bool                             `pulumi:"canSetDefault"`
	Conditions      []PolicyGroupsListCondition      `pulumi:"conditions"`
	EventConditions []PolicyGroupsListEventCondition `pulumi:"eventConditions"`
	GroupId         int                              `pulumi:"groupId"`
	GroupName       string                           `pulumi:"groupName"`
	InsertTime      int                              `pulumi:"insertTime"`
	IsDefault       int                              `pulumi:"isDefault"`
	IsOpen          bool                             `pulumi:"isOpen"`
	LastEditUin     string                           `pulumi:"lastEditUin"`
	NoShieldedSum   int                              `pulumi:"noShieldedSum"`
	ParentGroupId   int                              `pulumi:"parentGroupId"`
	PolicyViewName  string                           `pulumi:"policyViewName"`
	ProjectId       int                              `pulumi:"projectId"`
	Receivers       []PolicyGroupsListReceiver       `pulumi:"receivers"`
	Remark          string                           `pulumi:"remark"`
	UpdateTime      int                              `pulumi:"updateTime"`
	UseSum          int                              `pulumi:"useSum"`
}

// PolicyGroupsListInput is an input type that accepts PolicyGroupsListArgs and PolicyGroupsListOutput values.
// You can construct a concrete instance of `PolicyGroupsListInput` via:
//
//          PolicyGroupsListArgs{...}
type PolicyGroupsListInput interface {
	pulumi.Input

	ToPolicyGroupsListOutput() PolicyGroupsListOutput
	ToPolicyGroupsListOutputWithContext(context.Context) PolicyGroupsListOutput
}

type PolicyGroupsListArgs struct {
	CanSetDefault   pulumi.BoolInput                         `pulumi:"canSetDefault"`
	Conditions      PolicyGroupsListConditionArrayInput      `pulumi:"conditions"`
	EventConditions PolicyGroupsListEventConditionArrayInput `pulumi:"eventConditions"`
	GroupId         pulumi.IntInput                          `pulumi:"groupId"`
	GroupName       pulumi.StringInput                       `pulumi:"groupName"`
	InsertTime      pulumi.IntInput                          `pulumi:"insertTime"`
	IsDefault       pulumi.IntInput                          `pulumi:"isDefault"`
	IsOpen          pulumi.BoolInput                         `pulumi:"isOpen"`
	LastEditUin     pulumi.StringInput                       `pulumi:"lastEditUin"`
	NoShieldedSum   pulumi.IntInput                          `pulumi:"noShieldedSum"`
	ParentGroupId   pulumi.IntInput                          `pulumi:"parentGroupId"`
	PolicyViewName  pulumi.StringInput                       `pulumi:"policyViewName"`
	ProjectId       pulumi.IntInput                          `pulumi:"projectId"`
	Receivers       PolicyGroupsListReceiverArrayInput       `pulumi:"receivers"`
	Remark          pulumi.StringInput                       `pulumi:"remark"`
	UpdateTime      pulumi.IntInput                          `pulumi:"updateTime"`
	UseSum          pulumi.IntInput                          `pulumi:"useSum"`
}

func (PolicyGroupsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsList)(nil)).Elem()
}

func (i PolicyGroupsListArgs) ToPolicyGroupsListOutput() PolicyGroupsListOutput {
	return i.ToPolicyGroupsListOutputWithContext(context.Background())
}

func (i PolicyGroupsListArgs) ToPolicyGroupsListOutputWithContext(ctx context.Context) PolicyGroupsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListOutput)
}

// PolicyGroupsListArrayInput is an input type that accepts PolicyGroupsListArray and PolicyGroupsListArrayOutput values.
// You can construct a concrete instance of `PolicyGroupsListArrayInput` via:
//
//          PolicyGroupsListArray{ PolicyGroupsListArgs{...} }
type PolicyGroupsListArrayInput interface {
	pulumi.Input

	ToPolicyGroupsListArrayOutput() PolicyGroupsListArrayOutput
	ToPolicyGroupsListArrayOutputWithContext(context.Context) PolicyGroupsListArrayOutput
}

type PolicyGroupsListArray []PolicyGroupsListInput

func (PolicyGroupsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsList)(nil)).Elem()
}

func (i PolicyGroupsListArray) ToPolicyGroupsListArrayOutput() PolicyGroupsListArrayOutput {
	return i.ToPolicyGroupsListArrayOutputWithContext(context.Background())
}

func (i PolicyGroupsListArray) ToPolicyGroupsListArrayOutputWithContext(ctx context.Context) PolicyGroupsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListArrayOutput)
}

type PolicyGroupsListOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsList)(nil)).Elem()
}

func (o PolicyGroupsListOutput) ToPolicyGroupsListOutput() PolicyGroupsListOutput {
	return o
}

func (o PolicyGroupsListOutput) ToPolicyGroupsListOutputWithContext(ctx context.Context) PolicyGroupsListOutput {
	return o
}

func (o PolicyGroupsListOutput) CanSetDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyGroupsList) bool { return v.CanSetDefault }).(pulumi.BoolOutput)
}

func (o PolicyGroupsListOutput) Conditions() PolicyGroupsListConditionArrayOutput {
	return o.ApplyT(func(v PolicyGroupsList) []PolicyGroupsListCondition { return v.Conditions }).(PolicyGroupsListConditionArrayOutput)
}

func (o PolicyGroupsListOutput) EventConditions() PolicyGroupsListEventConditionArrayOutput {
	return o.ApplyT(func(v PolicyGroupsList) []PolicyGroupsListEventCondition { return v.EventConditions }).(PolicyGroupsListEventConditionArrayOutput)
}

func (o PolicyGroupsListOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsList) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o PolicyGroupsListOutput) InsertTime() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.InsertTime }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) IsDefault() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.IsDefault }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) IsOpen() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyGroupsList) bool { return v.IsOpen }).(pulumi.BoolOutput)
}

func (o PolicyGroupsListOutput) LastEditUin() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsList) string { return v.LastEditUin }).(pulumi.StringOutput)
}

func (o PolicyGroupsListOutput) NoShieldedSum() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.NoShieldedSum }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) ParentGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.ParentGroupId }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) PolicyViewName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsList) string { return v.PolicyViewName }).(pulumi.StringOutput)
}

func (o PolicyGroupsListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) Receivers() PolicyGroupsListReceiverArrayOutput {
	return o.ApplyT(func(v PolicyGroupsList) []PolicyGroupsListReceiver { return v.Receivers }).(PolicyGroupsListReceiverArrayOutput)
}

func (o PolicyGroupsListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsList) string { return v.Remark }).(pulumi.StringOutput)
}

func (o PolicyGroupsListOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.UpdateTime }).(pulumi.IntOutput)
}

func (o PolicyGroupsListOutput) UseSum() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsList) int { return v.UseSum }).(pulumi.IntOutput)
}

type PolicyGroupsListArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsList)(nil)).Elem()
}

func (o PolicyGroupsListArrayOutput) ToPolicyGroupsListArrayOutput() PolicyGroupsListArrayOutput {
	return o
}

func (o PolicyGroupsListArrayOutput) ToPolicyGroupsListArrayOutputWithContext(ctx context.Context) PolicyGroupsListArrayOutput {
	return o
}

func (o PolicyGroupsListArrayOutput) Index(i pulumi.IntInput) PolicyGroupsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupsList {
		return vs[0].([]PolicyGroupsList)[vs[1].(int)]
	}).(PolicyGroupsListOutput)
}

type PolicyGroupsListCondition struct {
	AlarmNotifyPeriod int    `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int    `pulumi:"alarmNotifyType"`
	CalcType          int    `pulumi:"calcType"`
	CalcValue         string `pulumi:"calcValue"`
	ContinueTime      int    `pulumi:"continueTime"`
	MetricId          int    `pulumi:"metricId"`
	MetricShowName    string `pulumi:"metricShowName"`
	MetricUnit        string `pulumi:"metricUnit"`
	Period            int    `pulumi:"period"`
	RuleId            int    `pulumi:"ruleId"`
}

// PolicyGroupsListConditionInput is an input type that accepts PolicyGroupsListConditionArgs and PolicyGroupsListConditionOutput values.
// You can construct a concrete instance of `PolicyGroupsListConditionInput` via:
//
//          PolicyGroupsListConditionArgs{...}
type PolicyGroupsListConditionInput interface {
	pulumi.Input

	ToPolicyGroupsListConditionOutput() PolicyGroupsListConditionOutput
	ToPolicyGroupsListConditionOutputWithContext(context.Context) PolicyGroupsListConditionOutput
}

type PolicyGroupsListConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput    `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput    `pulumi:"alarmNotifyType"`
	CalcType          pulumi.IntInput    `pulumi:"calcType"`
	CalcValue         pulumi.StringInput `pulumi:"calcValue"`
	ContinueTime      pulumi.IntInput    `pulumi:"continueTime"`
	MetricId          pulumi.IntInput    `pulumi:"metricId"`
	MetricShowName    pulumi.StringInput `pulumi:"metricShowName"`
	MetricUnit        pulumi.StringInput `pulumi:"metricUnit"`
	Period            pulumi.IntInput    `pulumi:"period"`
	RuleId            pulumi.IntInput    `pulumi:"ruleId"`
}

func (PolicyGroupsListConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListCondition)(nil)).Elem()
}

func (i PolicyGroupsListConditionArgs) ToPolicyGroupsListConditionOutput() PolicyGroupsListConditionOutput {
	return i.ToPolicyGroupsListConditionOutputWithContext(context.Background())
}

func (i PolicyGroupsListConditionArgs) ToPolicyGroupsListConditionOutputWithContext(ctx context.Context) PolicyGroupsListConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListConditionOutput)
}

// PolicyGroupsListConditionArrayInput is an input type that accepts PolicyGroupsListConditionArray and PolicyGroupsListConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupsListConditionArrayInput` via:
//
//          PolicyGroupsListConditionArray{ PolicyGroupsListConditionArgs{...} }
type PolicyGroupsListConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupsListConditionArrayOutput() PolicyGroupsListConditionArrayOutput
	ToPolicyGroupsListConditionArrayOutputWithContext(context.Context) PolicyGroupsListConditionArrayOutput
}

type PolicyGroupsListConditionArray []PolicyGroupsListConditionInput

func (PolicyGroupsListConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListCondition)(nil)).Elem()
}

func (i PolicyGroupsListConditionArray) ToPolicyGroupsListConditionArrayOutput() PolicyGroupsListConditionArrayOutput {
	return i.ToPolicyGroupsListConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupsListConditionArray) ToPolicyGroupsListConditionArrayOutputWithContext(ctx context.Context) PolicyGroupsListConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListConditionArrayOutput)
}

type PolicyGroupsListConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListCondition)(nil)).Elem()
}

func (o PolicyGroupsListConditionOutput) ToPolicyGroupsListConditionOutput() PolicyGroupsListConditionOutput {
	return o
}

func (o PolicyGroupsListConditionOutput) ToPolicyGroupsListConditionOutputWithContext(ctx context.Context) PolicyGroupsListConditionOutput {
	return o
}

func (o PolicyGroupsListConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) CalcType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.CalcType }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) CalcValue() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) string { return v.CalcValue }).(pulumi.StringOutput)
}

func (o PolicyGroupsListConditionOutput) ContinueTime() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.ContinueTime }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) MetricId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.MetricId }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) MetricShowName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) string { return v.MetricShowName }).(pulumi.StringOutput)
}

func (o PolicyGroupsListConditionOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) string { return v.MetricUnit }).(pulumi.StringOutput)
}

func (o PolicyGroupsListConditionOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.Period }).(pulumi.IntOutput)
}

func (o PolicyGroupsListConditionOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListCondition) int { return v.RuleId }).(pulumi.IntOutput)
}

type PolicyGroupsListConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListCondition)(nil)).Elem()
}

func (o PolicyGroupsListConditionArrayOutput) ToPolicyGroupsListConditionArrayOutput() PolicyGroupsListConditionArrayOutput {
	return o
}

func (o PolicyGroupsListConditionArrayOutput) ToPolicyGroupsListConditionArrayOutputWithContext(ctx context.Context) PolicyGroupsListConditionArrayOutput {
	return o
}

func (o PolicyGroupsListConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupsListConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupsListCondition {
		return vs[0].([]PolicyGroupsListCondition)[vs[1].(int)]
	}).(PolicyGroupsListConditionOutput)
}

type PolicyGroupsListEventCondition struct {
	AlarmNotifyPeriod int    `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int    `pulumi:"alarmNotifyType"`
	EventId           int    `pulumi:"eventId"`
	EventShowName     string `pulumi:"eventShowName"`
	RuleId            int    `pulumi:"ruleId"`
}

// PolicyGroupsListEventConditionInput is an input type that accepts PolicyGroupsListEventConditionArgs and PolicyGroupsListEventConditionOutput values.
// You can construct a concrete instance of `PolicyGroupsListEventConditionInput` via:
//
//          PolicyGroupsListEventConditionArgs{...}
type PolicyGroupsListEventConditionInput interface {
	pulumi.Input

	ToPolicyGroupsListEventConditionOutput() PolicyGroupsListEventConditionOutput
	ToPolicyGroupsListEventConditionOutputWithContext(context.Context) PolicyGroupsListEventConditionOutput
}

type PolicyGroupsListEventConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput    `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput    `pulumi:"alarmNotifyType"`
	EventId           pulumi.IntInput    `pulumi:"eventId"`
	EventShowName     pulumi.StringInput `pulumi:"eventShowName"`
	RuleId            pulumi.IntInput    `pulumi:"ruleId"`
}

func (PolicyGroupsListEventConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListEventCondition)(nil)).Elem()
}

func (i PolicyGroupsListEventConditionArgs) ToPolicyGroupsListEventConditionOutput() PolicyGroupsListEventConditionOutput {
	return i.ToPolicyGroupsListEventConditionOutputWithContext(context.Background())
}

func (i PolicyGroupsListEventConditionArgs) ToPolicyGroupsListEventConditionOutputWithContext(ctx context.Context) PolicyGroupsListEventConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListEventConditionOutput)
}

// PolicyGroupsListEventConditionArrayInput is an input type that accepts PolicyGroupsListEventConditionArray and PolicyGroupsListEventConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupsListEventConditionArrayInput` via:
//
//          PolicyGroupsListEventConditionArray{ PolicyGroupsListEventConditionArgs{...} }
type PolicyGroupsListEventConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupsListEventConditionArrayOutput() PolicyGroupsListEventConditionArrayOutput
	ToPolicyGroupsListEventConditionArrayOutputWithContext(context.Context) PolicyGroupsListEventConditionArrayOutput
}

type PolicyGroupsListEventConditionArray []PolicyGroupsListEventConditionInput

func (PolicyGroupsListEventConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListEventCondition)(nil)).Elem()
}

func (i PolicyGroupsListEventConditionArray) ToPolicyGroupsListEventConditionArrayOutput() PolicyGroupsListEventConditionArrayOutput {
	return i.ToPolicyGroupsListEventConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupsListEventConditionArray) ToPolicyGroupsListEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupsListEventConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListEventConditionArrayOutput)
}

type PolicyGroupsListEventConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListEventConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListEventCondition)(nil)).Elem()
}

func (o PolicyGroupsListEventConditionOutput) ToPolicyGroupsListEventConditionOutput() PolicyGroupsListEventConditionOutput {
	return o
}

func (o PolicyGroupsListEventConditionOutput) ToPolicyGroupsListEventConditionOutputWithContext(ctx context.Context) PolicyGroupsListEventConditionOutput {
	return o
}

func (o PolicyGroupsListEventConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListEventCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupsListEventConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListEventCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupsListEventConditionOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListEventCondition) int { return v.EventId }).(pulumi.IntOutput)
}

func (o PolicyGroupsListEventConditionOutput) EventShowName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListEventCondition) string { return v.EventShowName }).(pulumi.StringOutput)
}

func (o PolicyGroupsListEventConditionOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListEventCondition) int { return v.RuleId }).(pulumi.IntOutput)
}

type PolicyGroupsListEventConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListEventConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListEventCondition)(nil)).Elem()
}

func (o PolicyGroupsListEventConditionArrayOutput) ToPolicyGroupsListEventConditionArrayOutput() PolicyGroupsListEventConditionArrayOutput {
	return o
}

func (o PolicyGroupsListEventConditionArrayOutput) ToPolicyGroupsListEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupsListEventConditionArrayOutput {
	return o
}

func (o PolicyGroupsListEventConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupsListEventConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupsListEventCondition {
		return vs[0].([]PolicyGroupsListEventCondition)[vs[1].(int)]
	}).(PolicyGroupsListEventConditionOutput)
}

type PolicyGroupsListReceiver struct {
	EndTime            int      `pulumi:"endTime"`
	NeedSendNotice     int      `pulumi:"needSendNotice"`
	NotifyWays         []string `pulumi:"notifyWays"`
	PersonInterval     int      `pulumi:"personInterval"`
	ReceiveLanguage    string   `pulumi:"receiveLanguage"`
	ReceiverGroupLists []int    `pulumi:"receiverGroupLists"`
	ReceiverType       string   `pulumi:"receiverType"`
	ReceiverUserLists  []int    `pulumi:"receiverUserLists"`
	RecoverNotifies    []string `pulumi:"recoverNotifies"`
	RoundInterval      int      `pulumi:"roundInterval"`
	RoundNumber        int      `pulumi:"roundNumber"`
	SendFors           []string `pulumi:"sendFors"`
	StartTime          int      `pulumi:"startTime"`
	UidLists           []int    `pulumi:"uidLists"`
}

// PolicyGroupsListReceiverInput is an input type that accepts PolicyGroupsListReceiverArgs and PolicyGroupsListReceiverOutput values.
// You can construct a concrete instance of `PolicyGroupsListReceiverInput` via:
//
//          PolicyGroupsListReceiverArgs{...}
type PolicyGroupsListReceiverInput interface {
	pulumi.Input

	ToPolicyGroupsListReceiverOutput() PolicyGroupsListReceiverOutput
	ToPolicyGroupsListReceiverOutputWithContext(context.Context) PolicyGroupsListReceiverOutput
}

type PolicyGroupsListReceiverArgs struct {
	EndTime            pulumi.IntInput         `pulumi:"endTime"`
	NeedSendNotice     pulumi.IntInput         `pulumi:"needSendNotice"`
	NotifyWays         pulumi.StringArrayInput `pulumi:"notifyWays"`
	PersonInterval     pulumi.IntInput         `pulumi:"personInterval"`
	ReceiveLanguage    pulumi.StringInput      `pulumi:"receiveLanguage"`
	ReceiverGroupLists pulumi.IntArrayInput    `pulumi:"receiverGroupLists"`
	ReceiverType       pulumi.StringInput      `pulumi:"receiverType"`
	ReceiverUserLists  pulumi.IntArrayInput    `pulumi:"receiverUserLists"`
	RecoverNotifies    pulumi.StringArrayInput `pulumi:"recoverNotifies"`
	RoundInterval      pulumi.IntInput         `pulumi:"roundInterval"`
	RoundNumber        pulumi.IntInput         `pulumi:"roundNumber"`
	SendFors           pulumi.StringArrayInput `pulumi:"sendFors"`
	StartTime          pulumi.IntInput         `pulumi:"startTime"`
	UidLists           pulumi.IntArrayInput    `pulumi:"uidLists"`
}

func (PolicyGroupsListReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListReceiver)(nil)).Elem()
}

func (i PolicyGroupsListReceiverArgs) ToPolicyGroupsListReceiverOutput() PolicyGroupsListReceiverOutput {
	return i.ToPolicyGroupsListReceiverOutputWithContext(context.Background())
}

func (i PolicyGroupsListReceiverArgs) ToPolicyGroupsListReceiverOutputWithContext(ctx context.Context) PolicyGroupsListReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListReceiverOutput)
}

// PolicyGroupsListReceiverArrayInput is an input type that accepts PolicyGroupsListReceiverArray and PolicyGroupsListReceiverArrayOutput values.
// You can construct a concrete instance of `PolicyGroupsListReceiverArrayInput` via:
//
//          PolicyGroupsListReceiverArray{ PolicyGroupsListReceiverArgs{...} }
type PolicyGroupsListReceiverArrayInput interface {
	pulumi.Input

	ToPolicyGroupsListReceiverArrayOutput() PolicyGroupsListReceiverArrayOutput
	ToPolicyGroupsListReceiverArrayOutputWithContext(context.Context) PolicyGroupsListReceiverArrayOutput
}

type PolicyGroupsListReceiverArray []PolicyGroupsListReceiverInput

func (PolicyGroupsListReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListReceiver)(nil)).Elem()
}

func (i PolicyGroupsListReceiverArray) ToPolicyGroupsListReceiverArrayOutput() PolicyGroupsListReceiverArrayOutput {
	return i.ToPolicyGroupsListReceiverArrayOutputWithContext(context.Background())
}

func (i PolicyGroupsListReceiverArray) ToPolicyGroupsListReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupsListReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupsListReceiverArrayOutput)
}

type PolicyGroupsListReceiverOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupsListReceiver)(nil)).Elem()
}

func (o PolicyGroupsListReceiverOutput) ToPolicyGroupsListReceiverOutput() PolicyGroupsListReceiverOutput {
	return o
}

func (o PolicyGroupsListReceiverOutput) ToPolicyGroupsListReceiverOutputWithContext(ctx context.Context) PolicyGroupsListReceiverOutput {
	return o
}

func (o PolicyGroupsListReceiverOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.EndTime }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) NeedSendNotice() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.NeedSendNotice }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) NotifyWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []string { return v.NotifyWays }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupsListReceiverOutput) PersonInterval() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.PersonInterval }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) ReceiveLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) string { return v.ReceiveLanguage }).(pulumi.StringOutput)
}

func (o PolicyGroupsListReceiverOutput) ReceiverGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []int { return v.ReceiverGroupLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupsListReceiverOutput) ReceiverType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) string { return v.ReceiverType }).(pulumi.StringOutput)
}

func (o PolicyGroupsListReceiverOutput) ReceiverUserLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []int { return v.ReceiverUserLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupsListReceiverOutput) RecoverNotifies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []string { return v.RecoverNotifies }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupsListReceiverOutput) RoundInterval() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.RoundInterval }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) RoundNumber() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.RoundNumber }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) SendFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []string { return v.SendFors }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupsListReceiverOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o PolicyGroupsListReceiverOutput) UidLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupsListReceiver) []int { return v.UidLists }).(pulumi.IntArrayOutput)
}

type PolicyGroupsListReceiverArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupsListReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupsListReceiver)(nil)).Elem()
}

func (o PolicyGroupsListReceiverArrayOutput) ToPolicyGroupsListReceiverArrayOutput() PolicyGroupsListReceiverArrayOutput {
	return o
}

func (o PolicyGroupsListReceiverArrayOutput) ToPolicyGroupsListReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupsListReceiverArrayOutput {
	return o
}

func (o PolicyGroupsListReceiverArrayOutput) Index(i pulumi.IntInput) PolicyGroupsListReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupsListReceiver {
		return vs[0].([]PolicyGroupsListReceiver)[vs[1].(int)]
	}).(PolicyGroupsListReceiverOutput)
}

type ProductEventDimension struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// ProductEventDimensionInput is an input type that accepts ProductEventDimensionArgs and ProductEventDimensionOutput values.
// You can construct a concrete instance of `ProductEventDimensionInput` via:
//
//          ProductEventDimensionArgs{...}
type ProductEventDimensionInput interface {
	pulumi.Input

	ToProductEventDimensionOutput() ProductEventDimensionOutput
	ToProductEventDimensionOutputWithContext(context.Context) ProductEventDimensionOutput
}

type ProductEventDimensionArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProductEventDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventDimension)(nil)).Elem()
}

func (i ProductEventDimensionArgs) ToProductEventDimensionOutput() ProductEventDimensionOutput {
	return i.ToProductEventDimensionOutputWithContext(context.Background())
}

func (i ProductEventDimensionArgs) ToProductEventDimensionOutputWithContext(ctx context.Context) ProductEventDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventDimensionOutput)
}

// ProductEventDimensionArrayInput is an input type that accepts ProductEventDimensionArray and ProductEventDimensionArrayOutput values.
// You can construct a concrete instance of `ProductEventDimensionArrayInput` via:
//
//          ProductEventDimensionArray{ ProductEventDimensionArgs{...} }
type ProductEventDimensionArrayInput interface {
	pulumi.Input

	ToProductEventDimensionArrayOutput() ProductEventDimensionArrayOutput
	ToProductEventDimensionArrayOutputWithContext(context.Context) ProductEventDimensionArrayOutput
}

type ProductEventDimensionArray []ProductEventDimensionInput

func (ProductEventDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventDimension)(nil)).Elem()
}

func (i ProductEventDimensionArray) ToProductEventDimensionArrayOutput() ProductEventDimensionArrayOutput {
	return i.ToProductEventDimensionArrayOutputWithContext(context.Background())
}

func (i ProductEventDimensionArray) ToProductEventDimensionArrayOutputWithContext(ctx context.Context) ProductEventDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventDimensionArrayOutput)
}

type ProductEventDimensionOutput struct{ *pulumi.OutputState }

func (ProductEventDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventDimension)(nil)).Elem()
}

func (o ProductEventDimensionOutput) ToProductEventDimensionOutput() ProductEventDimensionOutput {
	return o
}

func (o ProductEventDimensionOutput) ToProductEventDimensionOutputWithContext(ctx context.Context) ProductEventDimensionOutput {
	return o
}

func (o ProductEventDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductEventDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ProductEventDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductEventDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProductEventDimensionArrayOutput struct{ *pulumi.OutputState }

func (ProductEventDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventDimension)(nil)).Elem()
}

func (o ProductEventDimensionArrayOutput) ToProductEventDimensionArrayOutput() ProductEventDimensionArrayOutput {
	return o
}

func (o ProductEventDimensionArrayOutput) ToProductEventDimensionArrayOutputWithContext(ctx context.Context) ProductEventDimensionArrayOutput {
	return o
}

func (o ProductEventDimensionArrayOutput) Index(i pulumi.IntInput) ProductEventDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductEventDimension {
		return vs[0].([]ProductEventDimension)[vs[1].(int)]
	}).(ProductEventDimensionOutput)
}

type ProductEventList struct {
	AdditionMsgs  []ProductEventListAdditionMsg `pulumi:"additionMsgs"`
	Dimensions    []ProductEventListDimension   `pulumi:"dimensions"`
	EventCname    string                        `pulumi:"eventCname"`
	EventEname    string                        `pulumi:"eventEname"`
	EventId       int                           `pulumi:"eventId"`
	EventName     string                        `pulumi:"eventName"`
	GroupInfos    []ProductEventListGroupInfo   `pulumi:"groupInfos"`
	InstanceId    string                        `pulumi:"instanceId"`
	InstanceName  string                        `pulumi:"instanceName"`
	IsAlarmConfig int                           `pulumi:"isAlarmConfig"`
	ProductCname  string                        `pulumi:"productCname"`
	ProductEname  string                        `pulumi:"productEname"`
	ProductName   string                        `pulumi:"productName"`
	ProjectId     string                        `pulumi:"projectId"`
	Region        string                        `pulumi:"region"`
	StartTime     int                           `pulumi:"startTime"`
	Status        string                        `pulumi:"status"`
	SupportAlarm  int                           `pulumi:"supportAlarm"`
	Type          string                        `pulumi:"type"`
	UpdateTime    int                           `pulumi:"updateTime"`
}

// ProductEventListInput is an input type that accepts ProductEventListArgs and ProductEventListOutput values.
// You can construct a concrete instance of `ProductEventListInput` via:
//
//          ProductEventListArgs{...}
type ProductEventListInput interface {
	pulumi.Input

	ToProductEventListOutput() ProductEventListOutput
	ToProductEventListOutputWithContext(context.Context) ProductEventListOutput
}

type ProductEventListArgs struct {
	AdditionMsgs  ProductEventListAdditionMsgArrayInput `pulumi:"additionMsgs"`
	Dimensions    ProductEventListDimensionArrayInput   `pulumi:"dimensions"`
	EventCname    pulumi.StringInput                    `pulumi:"eventCname"`
	EventEname    pulumi.StringInput                    `pulumi:"eventEname"`
	EventId       pulumi.IntInput                       `pulumi:"eventId"`
	EventName     pulumi.StringInput                    `pulumi:"eventName"`
	GroupInfos    ProductEventListGroupInfoArrayInput   `pulumi:"groupInfos"`
	InstanceId    pulumi.StringInput                    `pulumi:"instanceId"`
	InstanceName  pulumi.StringInput                    `pulumi:"instanceName"`
	IsAlarmConfig pulumi.IntInput                       `pulumi:"isAlarmConfig"`
	ProductCname  pulumi.StringInput                    `pulumi:"productCname"`
	ProductEname  pulumi.StringInput                    `pulumi:"productEname"`
	ProductName   pulumi.StringInput                    `pulumi:"productName"`
	ProjectId     pulumi.StringInput                    `pulumi:"projectId"`
	Region        pulumi.StringInput                    `pulumi:"region"`
	StartTime     pulumi.IntInput                       `pulumi:"startTime"`
	Status        pulumi.StringInput                    `pulumi:"status"`
	SupportAlarm  pulumi.IntInput                       `pulumi:"supportAlarm"`
	Type          pulumi.StringInput                    `pulumi:"type"`
	UpdateTime    pulumi.IntInput                       `pulumi:"updateTime"`
}

func (ProductEventListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventList)(nil)).Elem()
}

func (i ProductEventListArgs) ToProductEventListOutput() ProductEventListOutput {
	return i.ToProductEventListOutputWithContext(context.Background())
}

func (i ProductEventListArgs) ToProductEventListOutputWithContext(ctx context.Context) ProductEventListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListOutput)
}

// ProductEventListArrayInput is an input type that accepts ProductEventListArray and ProductEventListArrayOutput values.
// You can construct a concrete instance of `ProductEventListArrayInput` via:
//
//          ProductEventListArray{ ProductEventListArgs{...} }
type ProductEventListArrayInput interface {
	pulumi.Input

	ToProductEventListArrayOutput() ProductEventListArrayOutput
	ToProductEventListArrayOutputWithContext(context.Context) ProductEventListArrayOutput
}

type ProductEventListArray []ProductEventListInput

func (ProductEventListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventList)(nil)).Elem()
}

func (i ProductEventListArray) ToProductEventListArrayOutput() ProductEventListArrayOutput {
	return i.ToProductEventListArrayOutputWithContext(context.Background())
}

func (i ProductEventListArray) ToProductEventListArrayOutputWithContext(ctx context.Context) ProductEventListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListArrayOutput)
}

type ProductEventListOutput struct{ *pulumi.OutputState }

func (ProductEventListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventList)(nil)).Elem()
}

func (o ProductEventListOutput) ToProductEventListOutput() ProductEventListOutput {
	return o
}

func (o ProductEventListOutput) ToProductEventListOutputWithContext(ctx context.Context) ProductEventListOutput {
	return o
}

func (o ProductEventListOutput) AdditionMsgs() ProductEventListAdditionMsgArrayOutput {
	return o.ApplyT(func(v ProductEventList) []ProductEventListAdditionMsg { return v.AdditionMsgs }).(ProductEventListAdditionMsgArrayOutput)
}

func (o ProductEventListOutput) Dimensions() ProductEventListDimensionArrayOutput {
	return o.ApplyT(func(v ProductEventList) []ProductEventListDimension { return v.Dimensions }).(ProductEventListDimensionArrayOutput)
}

func (o ProductEventListOutput) EventCname() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.EventCname }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) EventEname() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.EventEname }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v ProductEventList) int { return v.EventId }).(pulumi.IntOutput)
}

func (o ProductEventListOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.EventName }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) GroupInfos() ProductEventListGroupInfoArrayOutput {
	return o.ApplyT(func(v ProductEventList) []ProductEventListGroupInfo { return v.GroupInfos }).(ProductEventListGroupInfoArrayOutput)
}

func (o ProductEventListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) IsAlarmConfig() pulumi.IntOutput {
	return o.ApplyT(func(v ProductEventList) int { return v.IsAlarmConfig }).(pulumi.IntOutput)
}

func (o ProductEventListOutput) ProductCname() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.ProductCname }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) ProductEname() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.ProductEname }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.ProductName }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.Region }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v ProductEventList) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o ProductEventListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.Status }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) SupportAlarm() pulumi.IntOutput {
	return o.ApplyT(func(v ProductEventList) int { return v.SupportAlarm }).(pulumi.IntOutput)
}

func (o ProductEventListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventList) string { return v.Type }).(pulumi.StringOutput)
}

func (o ProductEventListOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v ProductEventList) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type ProductEventListArrayOutput struct{ *pulumi.OutputState }

func (ProductEventListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventList)(nil)).Elem()
}

func (o ProductEventListArrayOutput) ToProductEventListArrayOutput() ProductEventListArrayOutput {
	return o
}

func (o ProductEventListArrayOutput) ToProductEventListArrayOutputWithContext(ctx context.Context) ProductEventListArrayOutput {
	return o
}

func (o ProductEventListArrayOutput) Index(i pulumi.IntInput) ProductEventListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductEventList {
		return vs[0].([]ProductEventList)[vs[1].(int)]
	}).(ProductEventListOutput)
}

type ProductEventListAdditionMsg struct {
	Key   string `pulumi:"key"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ProductEventListAdditionMsgInput is an input type that accepts ProductEventListAdditionMsgArgs and ProductEventListAdditionMsgOutput values.
// You can construct a concrete instance of `ProductEventListAdditionMsgInput` via:
//
//          ProductEventListAdditionMsgArgs{...}
type ProductEventListAdditionMsgInput interface {
	pulumi.Input

	ToProductEventListAdditionMsgOutput() ProductEventListAdditionMsgOutput
	ToProductEventListAdditionMsgOutputWithContext(context.Context) ProductEventListAdditionMsgOutput
}

type ProductEventListAdditionMsgArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProductEventListAdditionMsgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListAdditionMsg)(nil)).Elem()
}

func (i ProductEventListAdditionMsgArgs) ToProductEventListAdditionMsgOutput() ProductEventListAdditionMsgOutput {
	return i.ToProductEventListAdditionMsgOutputWithContext(context.Background())
}

func (i ProductEventListAdditionMsgArgs) ToProductEventListAdditionMsgOutputWithContext(ctx context.Context) ProductEventListAdditionMsgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListAdditionMsgOutput)
}

// ProductEventListAdditionMsgArrayInput is an input type that accepts ProductEventListAdditionMsgArray and ProductEventListAdditionMsgArrayOutput values.
// You can construct a concrete instance of `ProductEventListAdditionMsgArrayInput` via:
//
//          ProductEventListAdditionMsgArray{ ProductEventListAdditionMsgArgs{...} }
type ProductEventListAdditionMsgArrayInput interface {
	pulumi.Input

	ToProductEventListAdditionMsgArrayOutput() ProductEventListAdditionMsgArrayOutput
	ToProductEventListAdditionMsgArrayOutputWithContext(context.Context) ProductEventListAdditionMsgArrayOutput
}

type ProductEventListAdditionMsgArray []ProductEventListAdditionMsgInput

func (ProductEventListAdditionMsgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListAdditionMsg)(nil)).Elem()
}

func (i ProductEventListAdditionMsgArray) ToProductEventListAdditionMsgArrayOutput() ProductEventListAdditionMsgArrayOutput {
	return i.ToProductEventListAdditionMsgArrayOutputWithContext(context.Background())
}

func (i ProductEventListAdditionMsgArray) ToProductEventListAdditionMsgArrayOutputWithContext(ctx context.Context) ProductEventListAdditionMsgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListAdditionMsgArrayOutput)
}

type ProductEventListAdditionMsgOutput struct{ *pulumi.OutputState }

func (ProductEventListAdditionMsgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListAdditionMsg)(nil)).Elem()
}

func (o ProductEventListAdditionMsgOutput) ToProductEventListAdditionMsgOutput() ProductEventListAdditionMsgOutput {
	return o
}

func (o ProductEventListAdditionMsgOutput) ToProductEventListAdditionMsgOutputWithContext(ctx context.Context) ProductEventListAdditionMsgOutput {
	return o
}

func (o ProductEventListAdditionMsgOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListAdditionMsg) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductEventListAdditionMsgOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListAdditionMsg) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductEventListAdditionMsgOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListAdditionMsg) string { return v.Value }).(pulumi.StringOutput)
}

type ProductEventListAdditionMsgArrayOutput struct{ *pulumi.OutputState }

func (ProductEventListAdditionMsgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListAdditionMsg)(nil)).Elem()
}

func (o ProductEventListAdditionMsgArrayOutput) ToProductEventListAdditionMsgArrayOutput() ProductEventListAdditionMsgArrayOutput {
	return o
}

func (o ProductEventListAdditionMsgArrayOutput) ToProductEventListAdditionMsgArrayOutputWithContext(ctx context.Context) ProductEventListAdditionMsgArrayOutput {
	return o
}

func (o ProductEventListAdditionMsgArrayOutput) Index(i pulumi.IntInput) ProductEventListAdditionMsgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductEventListAdditionMsg {
		return vs[0].([]ProductEventListAdditionMsg)[vs[1].(int)]
	}).(ProductEventListAdditionMsgOutput)
}

type ProductEventListDimension struct {
	Key   string `pulumi:"key"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ProductEventListDimensionInput is an input type that accepts ProductEventListDimensionArgs and ProductEventListDimensionOutput values.
// You can construct a concrete instance of `ProductEventListDimensionInput` via:
//
//          ProductEventListDimensionArgs{...}
type ProductEventListDimensionInput interface {
	pulumi.Input

	ToProductEventListDimensionOutput() ProductEventListDimensionOutput
	ToProductEventListDimensionOutputWithContext(context.Context) ProductEventListDimensionOutput
}

type ProductEventListDimensionArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProductEventListDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListDimension)(nil)).Elem()
}

func (i ProductEventListDimensionArgs) ToProductEventListDimensionOutput() ProductEventListDimensionOutput {
	return i.ToProductEventListDimensionOutputWithContext(context.Background())
}

func (i ProductEventListDimensionArgs) ToProductEventListDimensionOutputWithContext(ctx context.Context) ProductEventListDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListDimensionOutput)
}

// ProductEventListDimensionArrayInput is an input type that accepts ProductEventListDimensionArray and ProductEventListDimensionArrayOutput values.
// You can construct a concrete instance of `ProductEventListDimensionArrayInput` via:
//
//          ProductEventListDimensionArray{ ProductEventListDimensionArgs{...} }
type ProductEventListDimensionArrayInput interface {
	pulumi.Input

	ToProductEventListDimensionArrayOutput() ProductEventListDimensionArrayOutput
	ToProductEventListDimensionArrayOutputWithContext(context.Context) ProductEventListDimensionArrayOutput
}

type ProductEventListDimensionArray []ProductEventListDimensionInput

func (ProductEventListDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListDimension)(nil)).Elem()
}

func (i ProductEventListDimensionArray) ToProductEventListDimensionArrayOutput() ProductEventListDimensionArrayOutput {
	return i.ToProductEventListDimensionArrayOutputWithContext(context.Background())
}

func (i ProductEventListDimensionArray) ToProductEventListDimensionArrayOutputWithContext(ctx context.Context) ProductEventListDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListDimensionArrayOutput)
}

type ProductEventListDimensionOutput struct{ *pulumi.OutputState }

func (ProductEventListDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListDimension)(nil)).Elem()
}

func (o ProductEventListDimensionOutput) ToProductEventListDimensionOutput() ProductEventListDimensionOutput {
	return o
}

func (o ProductEventListDimensionOutput) ToProductEventListDimensionOutputWithContext(ctx context.Context) ProductEventListDimensionOutput {
	return o
}

func (o ProductEventListDimensionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListDimension) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductEventListDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductEventListDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListDimension) string { return v.Value }).(pulumi.StringOutput)
}

type ProductEventListDimensionArrayOutput struct{ *pulumi.OutputState }

func (ProductEventListDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListDimension)(nil)).Elem()
}

func (o ProductEventListDimensionArrayOutput) ToProductEventListDimensionArrayOutput() ProductEventListDimensionArrayOutput {
	return o
}

func (o ProductEventListDimensionArrayOutput) ToProductEventListDimensionArrayOutputWithContext(ctx context.Context) ProductEventListDimensionArrayOutput {
	return o
}

func (o ProductEventListDimensionArrayOutput) Index(i pulumi.IntInput) ProductEventListDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductEventListDimension {
		return vs[0].([]ProductEventListDimension)[vs[1].(int)]
	}).(ProductEventListDimensionOutput)
}

type ProductEventListGroupInfo struct {
	GroupId   string `pulumi:"groupId"`
	GroupName string `pulumi:"groupName"`
}

// ProductEventListGroupInfoInput is an input type that accepts ProductEventListGroupInfoArgs and ProductEventListGroupInfoOutput values.
// You can construct a concrete instance of `ProductEventListGroupInfoInput` via:
//
//          ProductEventListGroupInfoArgs{...}
type ProductEventListGroupInfoInput interface {
	pulumi.Input

	ToProductEventListGroupInfoOutput() ProductEventListGroupInfoOutput
	ToProductEventListGroupInfoOutputWithContext(context.Context) ProductEventListGroupInfoOutput
}

type ProductEventListGroupInfoArgs struct {
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (ProductEventListGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListGroupInfo)(nil)).Elem()
}

func (i ProductEventListGroupInfoArgs) ToProductEventListGroupInfoOutput() ProductEventListGroupInfoOutput {
	return i.ToProductEventListGroupInfoOutputWithContext(context.Background())
}

func (i ProductEventListGroupInfoArgs) ToProductEventListGroupInfoOutputWithContext(ctx context.Context) ProductEventListGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListGroupInfoOutput)
}

// ProductEventListGroupInfoArrayInput is an input type that accepts ProductEventListGroupInfoArray and ProductEventListGroupInfoArrayOutput values.
// You can construct a concrete instance of `ProductEventListGroupInfoArrayInput` via:
//
//          ProductEventListGroupInfoArray{ ProductEventListGroupInfoArgs{...} }
type ProductEventListGroupInfoArrayInput interface {
	pulumi.Input

	ToProductEventListGroupInfoArrayOutput() ProductEventListGroupInfoArrayOutput
	ToProductEventListGroupInfoArrayOutputWithContext(context.Context) ProductEventListGroupInfoArrayOutput
}

type ProductEventListGroupInfoArray []ProductEventListGroupInfoInput

func (ProductEventListGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListGroupInfo)(nil)).Elem()
}

func (i ProductEventListGroupInfoArray) ToProductEventListGroupInfoArrayOutput() ProductEventListGroupInfoArrayOutput {
	return i.ToProductEventListGroupInfoArrayOutputWithContext(context.Background())
}

func (i ProductEventListGroupInfoArray) ToProductEventListGroupInfoArrayOutputWithContext(ctx context.Context) ProductEventListGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductEventListGroupInfoArrayOutput)
}

type ProductEventListGroupInfoOutput struct{ *pulumi.OutputState }

func (ProductEventListGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductEventListGroupInfo)(nil)).Elem()
}

func (o ProductEventListGroupInfoOutput) ToProductEventListGroupInfoOutput() ProductEventListGroupInfoOutput {
	return o
}

func (o ProductEventListGroupInfoOutput) ToProductEventListGroupInfoOutputWithContext(ctx context.Context) ProductEventListGroupInfoOutput {
	return o
}

func (o ProductEventListGroupInfoOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListGroupInfo) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o ProductEventListGroupInfoOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductEventListGroupInfo) string { return v.GroupName }).(pulumi.StringOutput)
}

type ProductEventListGroupInfoArrayOutput struct{ *pulumi.OutputState }

func (ProductEventListGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductEventListGroupInfo)(nil)).Elem()
}

func (o ProductEventListGroupInfoArrayOutput) ToProductEventListGroupInfoArrayOutput() ProductEventListGroupInfoArrayOutput {
	return o
}

func (o ProductEventListGroupInfoArrayOutput) ToProductEventListGroupInfoArrayOutputWithContext(ctx context.Context) ProductEventListGroupInfoArrayOutput {
	return o
}

func (o ProductEventListGroupInfoArrayOutput) Index(i pulumi.IntInput) ProductEventListGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductEventListGroupInfo {
		return vs[0].([]ProductEventListGroupInfo)[vs[1].(int)]
	}).(ProductEventListGroupInfoOutput)
}

type ProductNamespaceList struct {
	Namespace          string `pulumi:"namespace"`
	ProductChineseName string `pulumi:"productChineseName"`
	ProductName        string `pulumi:"productName"`
}

// ProductNamespaceListInput is an input type that accepts ProductNamespaceListArgs and ProductNamespaceListOutput values.
// You can construct a concrete instance of `ProductNamespaceListInput` via:
//
//          ProductNamespaceListArgs{...}
type ProductNamespaceListInput interface {
	pulumi.Input

	ToProductNamespaceListOutput() ProductNamespaceListOutput
	ToProductNamespaceListOutputWithContext(context.Context) ProductNamespaceListOutput
}

type ProductNamespaceListArgs struct {
	Namespace          pulumi.StringInput `pulumi:"namespace"`
	ProductChineseName pulumi.StringInput `pulumi:"productChineseName"`
	ProductName        pulumi.StringInput `pulumi:"productName"`
}

func (ProductNamespaceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductNamespaceList)(nil)).Elem()
}

func (i ProductNamespaceListArgs) ToProductNamespaceListOutput() ProductNamespaceListOutput {
	return i.ToProductNamespaceListOutputWithContext(context.Background())
}

func (i ProductNamespaceListArgs) ToProductNamespaceListOutputWithContext(ctx context.Context) ProductNamespaceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductNamespaceListOutput)
}

// ProductNamespaceListArrayInput is an input type that accepts ProductNamespaceListArray and ProductNamespaceListArrayOutput values.
// You can construct a concrete instance of `ProductNamespaceListArrayInput` via:
//
//          ProductNamespaceListArray{ ProductNamespaceListArgs{...} }
type ProductNamespaceListArrayInput interface {
	pulumi.Input

	ToProductNamespaceListArrayOutput() ProductNamespaceListArrayOutput
	ToProductNamespaceListArrayOutputWithContext(context.Context) ProductNamespaceListArrayOutput
}

type ProductNamespaceListArray []ProductNamespaceListInput

func (ProductNamespaceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductNamespaceList)(nil)).Elem()
}

func (i ProductNamespaceListArray) ToProductNamespaceListArrayOutput() ProductNamespaceListArrayOutput {
	return i.ToProductNamespaceListArrayOutputWithContext(context.Background())
}

func (i ProductNamespaceListArray) ToProductNamespaceListArrayOutputWithContext(ctx context.Context) ProductNamespaceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductNamespaceListArrayOutput)
}

type ProductNamespaceListOutput struct{ *pulumi.OutputState }

func (ProductNamespaceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductNamespaceList)(nil)).Elem()
}

func (o ProductNamespaceListOutput) ToProductNamespaceListOutput() ProductNamespaceListOutput {
	return o
}

func (o ProductNamespaceListOutput) ToProductNamespaceListOutputWithContext(ctx context.Context) ProductNamespaceListOutput {
	return o
}

func (o ProductNamespaceListOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ProductNamespaceList) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ProductNamespaceListOutput) ProductChineseName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductNamespaceList) string { return v.ProductChineseName }).(pulumi.StringOutput)
}

func (o ProductNamespaceListOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductNamespaceList) string { return v.ProductName }).(pulumi.StringOutput)
}

type ProductNamespaceListArrayOutput struct{ *pulumi.OutputState }

func (ProductNamespaceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductNamespaceList)(nil)).Elem()
}

func (o ProductNamespaceListArrayOutput) ToProductNamespaceListArrayOutput() ProductNamespaceListArrayOutput {
	return o
}

func (o ProductNamespaceListArrayOutput) ToProductNamespaceListArrayOutputWithContext(ctx context.Context) ProductNamespaceListArrayOutput {
	return o
}

func (o ProductNamespaceListArrayOutput) Index(i pulumi.IntInput) ProductNamespaceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductNamespaceList {
		return vs[0].([]ProductNamespaceList)[vs[1].(int)]
	}).(ProductNamespaceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsInput)(nil)).Elem(), AlarmPolicyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsPtrInput)(nil)).Elem(), AlarmPolicyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsRuleInput)(nil)).Elem(), AlarmPolicyConditionsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsRuleArrayInput)(nil)).Elem(), AlarmPolicyConditionsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsRuleFilterInput)(nil)).Elem(), AlarmPolicyConditionsRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyConditionsRuleFilterPtrInput)(nil)).Elem(), AlarmPolicyConditionsRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyEventConditionInput)(nil)).Elem(), AlarmPolicyEventConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyEventConditionArrayInput)(nil)).Elem(), AlarmPolicyEventConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyEventConditionFilterInput)(nil)).Elem(), AlarmPolicyEventConditionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyEventConditionFilterPtrInput)(nil)).Elem(), AlarmPolicyEventConditionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyPolicyTagInput)(nil)).Elem(), AlarmPolicyPolicyTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyPolicyTagArrayInput)(nil)).Elem(), AlarmPolicyPolicyTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyTriggerTaskInput)(nil)).Elem(), AlarmPolicyTriggerTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPolicyTriggerTaskArrayInput)(nil)).Elem(), AlarmPolicyTriggerTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingAlarmReceiverReceiversInput)(nil)).Elem(), BindingAlarmReceiverReceiversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingAlarmReceiverReceiversPtrInput)(nil)).Elem(), BindingAlarmReceiverReceiversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectDimensionInput)(nil)).Elem(), BindingObjectDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectDimensionArrayInput)(nil)).Elem(), BindingObjectDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectsListInput)(nil)).Elem(), BindingObjectsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectsListArrayInput)(nil)).Elem(), BindingObjectsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataDimensionInput)(nil)).Elem(), DataDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataDimensionArrayInput)(nil)).Elem(), DataDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataListInput)(nil)).Elem(), DataListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataListArrayInput)(nil)).Elem(), DataListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingObjectDimensionInput)(nil)).Elem(), PolicyBindingObjectDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingObjectDimensionArrayInput)(nil)).Elem(), PolicyBindingObjectDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListInput)(nil)).Elem(), PolicyConditionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListArrayInput)(nil)).Elem(), PolicyConditionsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListEventMetricInput)(nil)).Elem(), PolicyConditionsListEventMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListEventMetricArrayInput)(nil)).Elem(), PolicyConditionsListEventMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListMetricInput)(nil)).Elem(), PolicyConditionsListMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyConditionsListMetricArrayInput)(nil)).Elem(), PolicyConditionsListMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupBindingObjectInput)(nil)).Elem(), PolicyGroupBindingObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupBindingObjectArrayInput)(nil)).Elem(), PolicyGroupBindingObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupConditionInput)(nil)).Elem(), PolicyGroupConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupConditionArrayInput)(nil)).Elem(), PolicyGroupConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupEventConditionInput)(nil)).Elem(), PolicyGroupEventConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupEventConditionArrayInput)(nil)).Elem(), PolicyGroupEventConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupReceiverInput)(nil)).Elem(), PolicyGroupReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupReceiverArrayInput)(nil)).Elem(), PolicyGroupReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListInput)(nil)).Elem(), PolicyGroupsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListArrayInput)(nil)).Elem(), PolicyGroupsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListConditionInput)(nil)).Elem(), PolicyGroupsListConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListConditionArrayInput)(nil)).Elem(), PolicyGroupsListConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListEventConditionInput)(nil)).Elem(), PolicyGroupsListEventConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListEventConditionArrayInput)(nil)).Elem(), PolicyGroupsListEventConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListReceiverInput)(nil)).Elem(), PolicyGroupsListReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupsListReceiverArrayInput)(nil)).Elem(), PolicyGroupsListReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventDimensionInput)(nil)).Elem(), ProductEventDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventDimensionArrayInput)(nil)).Elem(), ProductEventDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListInput)(nil)).Elem(), ProductEventListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListArrayInput)(nil)).Elem(), ProductEventListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListAdditionMsgInput)(nil)).Elem(), ProductEventListAdditionMsgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListAdditionMsgArrayInput)(nil)).Elem(), ProductEventListAdditionMsgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListDimensionInput)(nil)).Elem(), ProductEventListDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListDimensionArrayInput)(nil)).Elem(), ProductEventListDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListGroupInfoInput)(nil)).Elem(), ProductEventListGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductEventListGroupInfoArrayInput)(nil)).Elem(), ProductEventListGroupInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductNamespaceListInput)(nil)).Elem(), ProductNamespaceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductNamespaceListArrayInput)(nil)).Elem(), ProductNamespaceListArray{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsOutput{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsPtrOutput{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsRuleOutput{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsRuleArrayOutput{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsRuleFilterOutput{})
	pulumi.RegisterOutputType(AlarmPolicyConditionsRuleFilterPtrOutput{})
	pulumi.RegisterOutputType(AlarmPolicyEventConditionOutput{})
	pulumi.RegisterOutputType(AlarmPolicyEventConditionArrayOutput{})
	pulumi.RegisterOutputType(AlarmPolicyEventConditionFilterOutput{})
	pulumi.RegisterOutputType(AlarmPolicyEventConditionFilterPtrOutput{})
	pulumi.RegisterOutputType(AlarmPolicyPolicyTagOutput{})
	pulumi.RegisterOutputType(AlarmPolicyPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(AlarmPolicyTriggerTaskOutput{})
	pulumi.RegisterOutputType(AlarmPolicyTriggerTaskArrayOutput{})
	pulumi.RegisterOutputType(BindingAlarmReceiverReceiversOutput{})
	pulumi.RegisterOutputType(BindingAlarmReceiverReceiversPtrOutput{})
	pulumi.RegisterOutputType(BindingObjectDimensionOutput{})
	pulumi.RegisterOutputType(BindingObjectDimensionArrayOutput{})
	pulumi.RegisterOutputType(BindingObjectsListOutput{})
	pulumi.RegisterOutputType(BindingObjectsListArrayOutput{})
	pulumi.RegisterOutputType(DataDimensionOutput{})
	pulumi.RegisterOutputType(DataDimensionArrayOutput{})
	pulumi.RegisterOutputType(DataListOutput{})
	pulumi.RegisterOutputType(DataListArrayOutput{})
	pulumi.RegisterOutputType(PolicyBindingObjectDimensionOutput{})
	pulumi.RegisterOutputType(PolicyBindingObjectDimensionArrayOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListArrayOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListEventMetricOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListEventMetricArrayOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListMetricOutput{})
	pulumi.RegisterOutputType(PolicyConditionsListMetricArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupBindingObjectOutput{})
	pulumi.RegisterOutputType(PolicyGroupBindingObjectArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupEventConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupEventConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupReceiverOutput{})
	pulumi.RegisterOutputType(PolicyGroupReceiverArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListEventConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListEventConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListReceiverOutput{})
	pulumi.RegisterOutputType(PolicyGroupsListReceiverArrayOutput{})
	pulumi.RegisterOutputType(ProductEventDimensionOutput{})
	pulumi.RegisterOutputType(ProductEventDimensionArrayOutput{})
	pulumi.RegisterOutputType(ProductEventListOutput{})
	pulumi.RegisterOutputType(ProductEventListArrayOutput{})
	pulumi.RegisterOutputType(ProductEventListAdditionMsgOutput{})
	pulumi.RegisterOutputType(ProductEventListAdditionMsgArrayOutput{})
	pulumi.RegisterOutputType(ProductEventListDimensionOutput{})
	pulumi.RegisterOutputType(ProductEventListDimensionArrayOutput{})
	pulumi.RegisterOutputType(ProductEventListGroupInfoOutput{})
	pulumi.RegisterOutputType(ProductEventListGroupInfoArrayOutput{})
	pulumi.RegisterOutputType(ProductNamespaceListOutput{})
	pulumi.RegisterOutputType(ProductNamespaceListArrayOutput{})
}
