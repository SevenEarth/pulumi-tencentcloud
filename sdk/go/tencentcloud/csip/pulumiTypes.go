// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package csip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type RiskCenterAsset struct {
	// Multi-cloud asset unique idNote: This field may return null, indicating that a valid value cannot be obtained.
	Arn *string `pulumi:"arn"`
	// Ip/ domain name/asset id, database id, etc.
	Asset *string `pulumi:"asset"`
	// Asset nameNote: This field may return null, indicating that a valid value cannot be obtained.
	AssetName *string `pulumi:"assetName"`
	// Asset classificationNote: This field may return null, indicating that a valid value cannot be obtained.
	AssetType *string `pulumi:"assetType"`
	// Asset typeNote: This field may return null, indicating that a valid value cannot be obtained.
	InstanceType *string `pulumi:"instanceType"`
	// RegionNote: This field may return null, indicating that a valid value cannot be obtained.
	Region *string `pulumi:"region"`
}

// RiskCenterAssetInput is an input type that accepts RiskCenterAssetArgs and RiskCenterAssetOutput values.
// You can construct a concrete instance of `RiskCenterAssetInput` via:
//
//	RiskCenterAssetArgs{...}
type RiskCenterAssetInput interface {
	pulumi.Input

	ToRiskCenterAssetOutput() RiskCenterAssetOutput
	ToRiskCenterAssetOutputWithContext(context.Context) RiskCenterAssetOutput
}

type RiskCenterAssetArgs struct {
	// Multi-cloud asset unique idNote: This field may return null, indicating that a valid value cannot be obtained.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Ip/ domain name/asset id, database id, etc.
	Asset pulumi.StringPtrInput `pulumi:"asset"`
	// Asset nameNote: This field may return null, indicating that a valid value cannot be obtained.
	AssetName pulumi.StringPtrInput `pulumi:"assetName"`
	// Asset classificationNote: This field may return null, indicating that a valid value cannot be obtained.
	AssetType pulumi.StringPtrInput `pulumi:"assetType"`
	// Asset typeNote: This field may return null, indicating that a valid value cannot be obtained.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// RegionNote: This field may return null, indicating that a valid value cannot be obtained.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (RiskCenterAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterAsset)(nil)).Elem()
}

func (i RiskCenterAssetArgs) ToRiskCenterAssetOutput() RiskCenterAssetOutput {
	return i.ToRiskCenterAssetOutputWithContext(context.Background())
}

func (i RiskCenterAssetArgs) ToRiskCenterAssetOutputWithContext(ctx context.Context) RiskCenterAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterAssetOutput)
}

// RiskCenterAssetArrayInput is an input type that accepts RiskCenterAssetArray and RiskCenterAssetArrayOutput values.
// You can construct a concrete instance of `RiskCenterAssetArrayInput` via:
//
//	RiskCenterAssetArray{ RiskCenterAssetArgs{...} }
type RiskCenterAssetArrayInput interface {
	pulumi.Input

	ToRiskCenterAssetArrayOutput() RiskCenterAssetArrayOutput
	ToRiskCenterAssetArrayOutputWithContext(context.Context) RiskCenterAssetArrayOutput
}

type RiskCenterAssetArray []RiskCenterAssetInput

func (RiskCenterAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterAsset)(nil)).Elem()
}

func (i RiskCenterAssetArray) ToRiskCenterAssetArrayOutput() RiskCenterAssetArrayOutput {
	return i.ToRiskCenterAssetArrayOutputWithContext(context.Background())
}

func (i RiskCenterAssetArray) ToRiskCenterAssetArrayOutputWithContext(ctx context.Context) RiskCenterAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterAssetArrayOutput)
}

type RiskCenterAssetOutput struct{ *pulumi.OutputState }

func (RiskCenterAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterAsset)(nil)).Elem()
}

func (o RiskCenterAssetOutput) ToRiskCenterAssetOutput() RiskCenterAssetOutput {
	return o
}

func (o RiskCenterAssetOutput) ToRiskCenterAssetOutputWithContext(ctx context.Context) RiskCenterAssetOutput {
	return o
}

// Multi-cloud asset unique idNote: This field may return null, indicating that a valid value cannot be obtained.
func (o RiskCenterAssetOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Ip/ domain name/asset id, database id, etc.
func (o RiskCenterAssetOutput) Asset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.Asset }).(pulumi.StringPtrOutput)
}

// Asset nameNote: This field may return null, indicating that a valid value cannot be obtained.
func (o RiskCenterAssetOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.AssetName }).(pulumi.StringPtrOutput)
}

// Asset classificationNote: This field may return null, indicating that a valid value cannot be obtained.
func (o RiskCenterAssetOutput) AssetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.AssetType }).(pulumi.StringPtrOutput)
}

// Asset typeNote: This field may return null, indicating that a valid value cannot be obtained.
func (o RiskCenterAssetOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// RegionNote: This field may return null, indicating that a valid value cannot be obtained.
func (o RiskCenterAssetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskCenterAsset) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type RiskCenterAssetArrayOutput struct{ *pulumi.OutputState }

func (RiskCenterAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterAsset)(nil)).Elem()
}

func (o RiskCenterAssetArrayOutput) ToRiskCenterAssetArrayOutput() RiskCenterAssetArrayOutput {
	return o
}

func (o RiskCenterAssetArrayOutput) ToRiskCenterAssetArrayOutputWithContext(ctx context.Context) RiskCenterAssetArrayOutput {
	return o
}

func (o RiskCenterAssetArrayOutput) Index(i pulumi.IntInput) RiskCenterAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RiskCenterAsset {
		return vs[0].([]RiskCenterAsset)[vs[1].(int)]
	}).(RiskCenterAssetOutput)
}

type RiskCenterTaskAdvanceCfg struct {
	// Configure advanced risk Settings.
	CfgRisks []RiskCenterTaskAdvanceCfgCfgRisk `pulumi:"cfgRisks"`
	// Advanced Port Risk Configuration.
	PortRisks []RiskCenterTaskAdvanceCfgPortRisk `pulumi:"portRisks"`
	// Advanced vulnerability risk configuration.
	VulRisks []RiskCenterTaskAdvanceCfgVulRisk `pulumi:"vulRisks"`
	// Weak password risk advanced configuration.
	WeakPwdRisks []RiskCenterTaskAdvanceCfgWeakPwdRisk `pulumi:"weakPwdRisks"`
}

// RiskCenterTaskAdvanceCfgInput is an input type that accepts RiskCenterTaskAdvanceCfgArgs and RiskCenterTaskAdvanceCfgOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgInput` via:
//
//	RiskCenterTaskAdvanceCfgArgs{...}
type RiskCenterTaskAdvanceCfgInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgOutput() RiskCenterTaskAdvanceCfgOutput
	ToRiskCenterTaskAdvanceCfgOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgOutput
}

type RiskCenterTaskAdvanceCfgArgs struct {
	// Configure advanced risk Settings.
	CfgRisks RiskCenterTaskAdvanceCfgCfgRiskArrayInput `pulumi:"cfgRisks"`
	// Advanced Port Risk Configuration.
	PortRisks RiskCenterTaskAdvanceCfgPortRiskArrayInput `pulumi:"portRisks"`
	// Advanced vulnerability risk configuration.
	VulRisks RiskCenterTaskAdvanceCfgVulRiskArrayInput `pulumi:"vulRisks"`
	// Weak password risk advanced configuration.
	WeakPwdRisks RiskCenterTaskAdvanceCfgWeakPwdRiskArrayInput `pulumi:"weakPwdRisks"`
}

func (RiskCenterTaskAdvanceCfgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfg)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgArgs) ToRiskCenterTaskAdvanceCfgOutput() RiskCenterTaskAdvanceCfgOutput {
	return i.ToRiskCenterTaskAdvanceCfgOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgArgs) ToRiskCenterTaskAdvanceCfgOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgOutput)
}

func (i RiskCenterTaskAdvanceCfgArgs) ToRiskCenterTaskAdvanceCfgPtrOutput() RiskCenterTaskAdvanceCfgPtrOutput {
	return i.ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgArgs) ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgOutput).ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(ctx)
}

// RiskCenterTaskAdvanceCfgPtrInput is an input type that accepts RiskCenterTaskAdvanceCfgArgs, RiskCenterTaskAdvanceCfgPtr and RiskCenterTaskAdvanceCfgPtrOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgPtrInput` via:
//
//	        RiskCenterTaskAdvanceCfgArgs{...}
//
//	or:
//
//	        nil
type RiskCenterTaskAdvanceCfgPtrInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgPtrOutput() RiskCenterTaskAdvanceCfgPtrOutput
	ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgPtrOutput
}

type riskCenterTaskAdvanceCfgPtrType RiskCenterTaskAdvanceCfgArgs

func RiskCenterTaskAdvanceCfgPtr(v *RiskCenterTaskAdvanceCfgArgs) RiskCenterTaskAdvanceCfgPtrInput {
	return (*riskCenterTaskAdvanceCfgPtrType)(v)
}

func (*riskCenterTaskAdvanceCfgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskCenterTaskAdvanceCfg)(nil)).Elem()
}

func (i *riskCenterTaskAdvanceCfgPtrType) ToRiskCenterTaskAdvanceCfgPtrOutput() RiskCenterTaskAdvanceCfgPtrOutput {
	return i.ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(context.Background())
}

func (i *riskCenterTaskAdvanceCfgPtrType) ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgPtrOutput)
}

type RiskCenterTaskAdvanceCfgOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfg)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgOutput) ToRiskCenterTaskAdvanceCfgOutput() RiskCenterTaskAdvanceCfgOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgOutput) ToRiskCenterTaskAdvanceCfgOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgOutput) ToRiskCenterTaskAdvanceCfgPtrOutput() RiskCenterTaskAdvanceCfgPtrOutput {
	return o.ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(context.Background())
}

func (o RiskCenterTaskAdvanceCfgOutput) ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskCenterTaskAdvanceCfg) *RiskCenterTaskAdvanceCfg {
		return &v
	}).(RiskCenterTaskAdvanceCfgPtrOutput)
}

// Configure advanced risk Settings.
func (o RiskCenterTaskAdvanceCfgOutput) CfgRisks() RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgCfgRisk { return v.CfgRisks }).(RiskCenterTaskAdvanceCfgCfgRiskArrayOutput)
}

// Advanced Port Risk Configuration.
func (o RiskCenterTaskAdvanceCfgOutput) PortRisks() RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgPortRisk { return v.PortRisks }).(RiskCenterTaskAdvanceCfgPortRiskArrayOutput)
}

// Advanced vulnerability risk configuration.
func (o RiskCenterTaskAdvanceCfgOutput) VulRisks() RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgVulRisk { return v.VulRisks }).(RiskCenterTaskAdvanceCfgVulRiskArrayOutput)
}

// Weak password risk advanced configuration.
func (o RiskCenterTaskAdvanceCfgOutput) WeakPwdRisks() RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgWeakPwdRisk { return v.WeakPwdRisks }).(RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgPtrOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskCenterTaskAdvanceCfg)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgPtrOutput) ToRiskCenterTaskAdvanceCfgPtrOutput() RiskCenterTaskAdvanceCfgPtrOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgPtrOutput) ToRiskCenterTaskAdvanceCfgPtrOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPtrOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgPtrOutput) Elem() RiskCenterTaskAdvanceCfgOutput {
	return o.ApplyT(func(v *RiskCenterTaskAdvanceCfg) RiskCenterTaskAdvanceCfg {
		if v != nil {
			return *v
		}
		var ret RiskCenterTaskAdvanceCfg
		return ret
	}).(RiskCenterTaskAdvanceCfgOutput)
}

// Configure advanced risk Settings.
func (o RiskCenterTaskAdvanceCfgPtrOutput) CfgRisks() RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return o.ApplyT(func(v *RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgCfgRisk {
		if v == nil {
			return nil
		}
		return v.CfgRisks
	}).(RiskCenterTaskAdvanceCfgCfgRiskArrayOutput)
}

// Advanced Port Risk Configuration.
func (o RiskCenterTaskAdvanceCfgPtrOutput) PortRisks() RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return o.ApplyT(func(v *RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgPortRisk {
		if v == nil {
			return nil
		}
		return v.PortRisks
	}).(RiskCenterTaskAdvanceCfgPortRiskArrayOutput)
}

// Advanced vulnerability risk configuration.
func (o RiskCenterTaskAdvanceCfgPtrOutput) VulRisks() RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return o.ApplyT(func(v *RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgVulRisk {
		if v == nil {
			return nil
		}
		return v.VulRisks
	}).(RiskCenterTaskAdvanceCfgVulRiskArrayOutput)
}

// Weak password risk advanced configuration.
func (o RiskCenterTaskAdvanceCfgPtrOutput) WeakPwdRisks() RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return o.ApplyT(func(v *RiskCenterTaskAdvanceCfg) []RiskCenterTaskAdvanceCfgWeakPwdRisk {
		if v == nil {
			return nil
		}
		return v.WeakPwdRisks
	}).(RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgCfgRisk struct {
	// Whether to enable, 0- No, 1- Enable.
	Enable int `pulumi:"enable"`
	// Detection item ID.
	ItemId string `pulumi:"itemId"`
	// Resource type.
	ResourceType string `pulumi:"resourceType"`
}

// RiskCenterTaskAdvanceCfgCfgRiskInput is an input type that accepts RiskCenterTaskAdvanceCfgCfgRiskArgs and RiskCenterTaskAdvanceCfgCfgRiskOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgCfgRiskInput` via:
//
//	RiskCenterTaskAdvanceCfgCfgRiskArgs{...}
type RiskCenterTaskAdvanceCfgCfgRiskInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgCfgRiskOutput() RiskCenterTaskAdvanceCfgCfgRiskOutput
	ToRiskCenterTaskAdvanceCfgCfgRiskOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgCfgRiskOutput
}

type RiskCenterTaskAdvanceCfgCfgRiskArgs struct {
	// Whether to enable, 0- No, 1- Enable.
	Enable pulumi.IntInput `pulumi:"enable"`
	// Detection item ID.
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// Resource type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (RiskCenterTaskAdvanceCfgCfgRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgCfgRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgCfgRiskArgs) ToRiskCenterTaskAdvanceCfgCfgRiskOutput() RiskCenterTaskAdvanceCfgCfgRiskOutput {
	return i.ToRiskCenterTaskAdvanceCfgCfgRiskOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgCfgRiskArgs) ToRiskCenterTaskAdvanceCfgCfgRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgCfgRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgCfgRiskOutput)
}

// RiskCenterTaskAdvanceCfgCfgRiskArrayInput is an input type that accepts RiskCenterTaskAdvanceCfgCfgRiskArray and RiskCenterTaskAdvanceCfgCfgRiskArrayOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgCfgRiskArrayInput` via:
//
//	RiskCenterTaskAdvanceCfgCfgRiskArray{ RiskCenterTaskAdvanceCfgCfgRiskArgs{...} }
type RiskCenterTaskAdvanceCfgCfgRiskArrayInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutput() RiskCenterTaskAdvanceCfgCfgRiskArrayOutput
	ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgCfgRiskArrayOutput
}

type RiskCenterTaskAdvanceCfgCfgRiskArray []RiskCenterTaskAdvanceCfgCfgRiskInput

func (RiskCenterTaskAdvanceCfgCfgRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgCfgRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgCfgRiskArray) ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutput() RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return i.ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgCfgRiskArray) ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgCfgRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgCfgRiskOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgCfgRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgCfgRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgCfgRiskOutput) ToRiskCenterTaskAdvanceCfgCfgRiskOutput() RiskCenterTaskAdvanceCfgCfgRiskOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgCfgRiskOutput) ToRiskCenterTaskAdvanceCfgCfgRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgCfgRiskOutput {
	return o
}

// Whether to enable, 0- No, 1- Enable.
func (o RiskCenterTaskAdvanceCfgCfgRiskOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgCfgRisk) int { return v.Enable }).(pulumi.IntOutput)
}

// Detection item ID.
func (o RiskCenterTaskAdvanceCfgCfgRiskOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgCfgRisk) string { return v.ItemId }).(pulumi.StringOutput)
}

// Resource type.
func (o RiskCenterTaskAdvanceCfgCfgRiskOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgCfgRisk) string { return v.ResourceType }).(pulumi.StringOutput)
}

type RiskCenterTaskAdvanceCfgCfgRiskArrayOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgCfgRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgCfgRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgCfgRiskArrayOutput) ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutput() RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgCfgRiskArrayOutput) ToRiskCenterTaskAdvanceCfgCfgRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgCfgRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgCfgRiskArrayOutput) Index(i pulumi.IntInput) RiskCenterTaskAdvanceCfgCfgRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RiskCenterTaskAdvanceCfgCfgRisk {
		return vs[0].([]RiskCenterTaskAdvanceCfgCfgRisk)[vs[1].(int)]
	}).(RiskCenterTaskAdvanceCfgCfgRiskOutput)
}

type RiskCenterTaskAdvanceCfgPortRisk struct {
	// Detection item type, 0-system defined, 1-user-defined.
	CheckType int `pulumi:"checkType"`
	// Description of detection items.
	Detail string `pulumi:"detail"`
	// Whether to enable, 0- No, 1- Enable.
	Enable int `pulumi:"enable"`
	// Port collection, separated by commas.
	PortSets string `pulumi:"portSets"`
}

// RiskCenterTaskAdvanceCfgPortRiskInput is an input type that accepts RiskCenterTaskAdvanceCfgPortRiskArgs and RiskCenterTaskAdvanceCfgPortRiskOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgPortRiskInput` via:
//
//	RiskCenterTaskAdvanceCfgPortRiskArgs{...}
type RiskCenterTaskAdvanceCfgPortRiskInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgPortRiskOutput() RiskCenterTaskAdvanceCfgPortRiskOutput
	ToRiskCenterTaskAdvanceCfgPortRiskOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgPortRiskOutput
}

type RiskCenterTaskAdvanceCfgPortRiskArgs struct {
	// Detection item type, 0-system defined, 1-user-defined.
	CheckType pulumi.IntInput `pulumi:"checkType"`
	// Description of detection items.
	Detail pulumi.StringInput `pulumi:"detail"`
	// Whether to enable, 0- No, 1- Enable.
	Enable pulumi.IntInput `pulumi:"enable"`
	// Port collection, separated by commas.
	PortSets pulumi.StringInput `pulumi:"portSets"`
}

func (RiskCenterTaskAdvanceCfgPortRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgPortRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgPortRiskArgs) ToRiskCenterTaskAdvanceCfgPortRiskOutput() RiskCenterTaskAdvanceCfgPortRiskOutput {
	return i.ToRiskCenterTaskAdvanceCfgPortRiskOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgPortRiskArgs) ToRiskCenterTaskAdvanceCfgPortRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPortRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgPortRiskOutput)
}

// RiskCenterTaskAdvanceCfgPortRiskArrayInput is an input type that accepts RiskCenterTaskAdvanceCfgPortRiskArray and RiskCenterTaskAdvanceCfgPortRiskArrayOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgPortRiskArrayInput` via:
//
//	RiskCenterTaskAdvanceCfgPortRiskArray{ RiskCenterTaskAdvanceCfgPortRiskArgs{...} }
type RiskCenterTaskAdvanceCfgPortRiskArrayInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgPortRiskArrayOutput() RiskCenterTaskAdvanceCfgPortRiskArrayOutput
	ToRiskCenterTaskAdvanceCfgPortRiskArrayOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgPortRiskArrayOutput
}

type RiskCenterTaskAdvanceCfgPortRiskArray []RiskCenterTaskAdvanceCfgPortRiskInput

func (RiskCenterTaskAdvanceCfgPortRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgPortRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgPortRiskArray) ToRiskCenterTaskAdvanceCfgPortRiskArrayOutput() RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return i.ToRiskCenterTaskAdvanceCfgPortRiskArrayOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgPortRiskArray) ToRiskCenterTaskAdvanceCfgPortRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgPortRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgPortRiskOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgPortRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgPortRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgPortRiskOutput) ToRiskCenterTaskAdvanceCfgPortRiskOutput() RiskCenterTaskAdvanceCfgPortRiskOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgPortRiskOutput) ToRiskCenterTaskAdvanceCfgPortRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPortRiskOutput {
	return o
}

// Detection item type, 0-system defined, 1-user-defined.
func (o RiskCenterTaskAdvanceCfgPortRiskOutput) CheckType() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgPortRisk) int { return v.CheckType }).(pulumi.IntOutput)
}

// Description of detection items.
func (o RiskCenterTaskAdvanceCfgPortRiskOutput) Detail() pulumi.StringOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgPortRisk) string { return v.Detail }).(pulumi.StringOutput)
}

// Whether to enable, 0- No, 1- Enable.
func (o RiskCenterTaskAdvanceCfgPortRiskOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgPortRisk) int { return v.Enable }).(pulumi.IntOutput)
}

// Port collection, separated by commas.
func (o RiskCenterTaskAdvanceCfgPortRiskOutput) PortSets() pulumi.StringOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgPortRisk) string { return v.PortSets }).(pulumi.StringOutput)
}

type RiskCenterTaskAdvanceCfgPortRiskArrayOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgPortRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgPortRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgPortRiskArrayOutput) ToRiskCenterTaskAdvanceCfgPortRiskArrayOutput() RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgPortRiskArrayOutput) ToRiskCenterTaskAdvanceCfgPortRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgPortRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgPortRiskArrayOutput) Index(i pulumi.IntInput) RiskCenterTaskAdvanceCfgPortRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RiskCenterTaskAdvanceCfgPortRisk {
		return vs[0].([]RiskCenterTaskAdvanceCfgPortRisk)[vs[1].(int)]
	}).(RiskCenterTaskAdvanceCfgPortRiskOutput)
}

type RiskCenterTaskAdvanceCfgVulRisk struct {
	// Whether to enable, 0- No, 1- Enable.
	Enable int `pulumi:"enable"`
	// Risk ID.
	RiskId string `pulumi:"riskId"`
}

// RiskCenterTaskAdvanceCfgVulRiskInput is an input type that accepts RiskCenterTaskAdvanceCfgVulRiskArgs and RiskCenterTaskAdvanceCfgVulRiskOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgVulRiskInput` via:
//
//	RiskCenterTaskAdvanceCfgVulRiskArgs{...}
type RiskCenterTaskAdvanceCfgVulRiskInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgVulRiskOutput() RiskCenterTaskAdvanceCfgVulRiskOutput
	ToRiskCenterTaskAdvanceCfgVulRiskOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgVulRiskOutput
}

type RiskCenterTaskAdvanceCfgVulRiskArgs struct {
	// Whether to enable, 0- No, 1- Enable.
	Enable pulumi.IntInput `pulumi:"enable"`
	// Risk ID.
	RiskId pulumi.StringInput `pulumi:"riskId"`
}

func (RiskCenterTaskAdvanceCfgVulRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgVulRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgVulRiskArgs) ToRiskCenterTaskAdvanceCfgVulRiskOutput() RiskCenterTaskAdvanceCfgVulRiskOutput {
	return i.ToRiskCenterTaskAdvanceCfgVulRiskOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgVulRiskArgs) ToRiskCenterTaskAdvanceCfgVulRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgVulRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgVulRiskOutput)
}

// RiskCenterTaskAdvanceCfgVulRiskArrayInput is an input type that accepts RiskCenterTaskAdvanceCfgVulRiskArray and RiskCenterTaskAdvanceCfgVulRiskArrayOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgVulRiskArrayInput` via:
//
//	RiskCenterTaskAdvanceCfgVulRiskArray{ RiskCenterTaskAdvanceCfgVulRiskArgs{...} }
type RiskCenterTaskAdvanceCfgVulRiskArrayInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgVulRiskArrayOutput() RiskCenterTaskAdvanceCfgVulRiskArrayOutput
	ToRiskCenterTaskAdvanceCfgVulRiskArrayOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgVulRiskArrayOutput
}

type RiskCenterTaskAdvanceCfgVulRiskArray []RiskCenterTaskAdvanceCfgVulRiskInput

func (RiskCenterTaskAdvanceCfgVulRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgVulRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgVulRiskArray) ToRiskCenterTaskAdvanceCfgVulRiskArrayOutput() RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return i.ToRiskCenterTaskAdvanceCfgVulRiskArrayOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgVulRiskArray) ToRiskCenterTaskAdvanceCfgVulRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgVulRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgVulRiskOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgVulRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgVulRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgVulRiskOutput) ToRiskCenterTaskAdvanceCfgVulRiskOutput() RiskCenterTaskAdvanceCfgVulRiskOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgVulRiskOutput) ToRiskCenterTaskAdvanceCfgVulRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgVulRiskOutput {
	return o
}

// Whether to enable, 0- No, 1- Enable.
func (o RiskCenterTaskAdvanceCfgVulRiskOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgVulRisk) int { return v.Enable }).(pulumi.IntOutput)
}

// Risk ID.
func (o RiskCenterTaskAdvanceCfgVulRiskOutput) RiskId() pulumi.StringOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgVulRisk) string { return v.RiskId }).(pulumi.StringOutput)
}

type RiskCenterTaskAdvanceCfgVulRiskArrayOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgVulRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgVulRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgVulRiskArrayOutput) ToRiskCenterTaskAdvanceCfgVulRiskArrayOutput() RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgVulRiskArrayOutput) ToRiskCenterTaskAdvanceCfgVulRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgVulRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgVulRiskArrayOutput) Index(i pulumi.IntInput) RiskCenterTaskAdvanceCfgVulRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RiskCenterTaskAdvanceCfgVulRisk {
		return vs[0].([]RiskCenterTaskAdvanceCfgVulRisk)[vs[1].(int)]
	}).(RiskCenterTaskAdvanceCfgVulRiskOutput)
}

type RiskCenterTaskAdvanceCfgWeakPwdRisk struct {
	// Detection item ID.
	CheckItemId int `pulumi:"checkItemId"`
	// Whether to enable, 0- No, 1- Enable.
	Enable int `pulumi:"enable"`
}

// RiskCenterTaskAdvanceCfgWeakPwdRiskInput is an input type that accepts RiskCenterTaskAdvanceCfgWeakPwdRiskArgs and RiskCenterTaskAdvanceCfgWeakPwdRiskOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgWeakPwdRiskInput` via:
//
//	RiskCenterTaskAdvanceCfgWeakPwdRiskArgs{...}
type RiskCenterTaskAdvanceCfgWeakPwdRiskInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskOutput
	ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskOutput
}

type RiskCenterTaskAdvanceCfgWeakPwdRiskArgs struct {
	// Detection item ID.
	CheckItemId pulumi.IntInput `pulumi:"checkItemId"`
	// Whether to enable, 0- No, 1- Enable.
	Enable pulumi.IntInput `pulumi:"enable"`
}

func (RiskCenterTaskAdvanceCfgWeakPwdRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgWeakPwdRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgWeakPwdRiskArgs) ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskOutput {
	return i.ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgWeakPwdRiskArgs) ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgWeakPwdRiskOutput)
}

// RiskCenterTaskAdvanceCfgWeakPwdRiskArrayInput is an input type that accepts RiskCenterTaskAdvanceCfgWeakPwdRiskArray and RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput values.
// You can construct a concrete instance of `RiskCenterTaskAdvanceCfgWeakPwdRiskArrayInput` via:
//
//	RiskCenterTaskAdvanceCfgWeakPwdRiskArray{ RiskCenterTaskAdvanceCfgWeakPwdRiskArgs{...} }
type RiskCenterTaskAdvanceCfgWeakPwdRiskArrayInput interface {
	pulumi.Input

	ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput
	ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutputWithContext(context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput
}

type RiskCenterTaskAdvanceCfgWeakPwdRiskArray []RiskCenterTaskAdvanceCfgWeakPwdRiskInput

func (RiskCenterTaskAdvanceCfgWeakPwdRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgWeakPwdRisk)(nil)).Elem()
}

func (i RiskCenterTaskAdvanceCfgWeakPwdRiskArray) ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return i.ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutputWithContext(context.Background())
}

func (i RiskCenterTaskAdvanceCfgWeakPwdRiskArray) ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput)
}

type RiskCenterTaskAdvanceCfgWeakPwdRiskOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgWeakPwdRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskCenterTaskAdvanceCfgWeakPwdRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgWeakPwdRiskOutput) ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgWeakPwdRiskOutput) ToRiskCenterTaskAdvanceCfgWeakPwdRiskOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskOutput {
	return o
}

// Detection item ID.
func (o RiskCenterTaskAdvanceCfgWeakPwdRiskOutput) CheckItemId() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgWeakPwdRisk) int { return v.CheckItemId }).(pulumi.IntOutput)
}

// Whether to enable, 0- No, 1- Enable.
func (o RiskCenterTaskAdvanceCfgWeakPwdRiskOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v RiskCenterTaskAdvanceCfgWeakPwdRisk) int { return v.Enable }).(pulumi.IntOutput)
}

type RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput struct{ *pulumi.OutputState }

func (RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RiskCenterTaskAdvanceCfgWeakPwdRisk)(nil)).Elem()
}

func (o RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput) ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput() RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput) ToRiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutputWithContext(ctx context.Context) RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput {
	return o
}

func (o RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput) Index(i pulumi.IntInput) RiskCenterTaskAdvanceCfgWeakPwdRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RiskCenterTaskAdvanceCfgWeakPwdRisk {
		return vs[0].([]RiskCenterTaskAdvanceCfgWeakPwdRisk)[vs[1].(int)]
	}).(RiskCenterTaskAdvanceCfgWeakPwdRiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterAssetInput)(nil)).Elem(), RiskCenterAssetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterAssetArrayInput)(nil)).Elem(), RiskCenterAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgPtrInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgCfgRiskInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgCfgRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgCfgRiskArrayInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgCfgRiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgPortRiskInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgPortRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgPortRiskArrayInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgPortRiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgVulRiskInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgVulRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgVulRiskArrayInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgVulRiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgWeakPwdRiskInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgWeakPwdRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskCenterTaskAdvanceCfgWeakPwdRiskArrayInput)(nil)).Elem(), RiskCenterTaskAdvanceCfgWeakPwdRiskArray{})
	pulumi.RegisterOutputType(RiskCenterAssetOutput{})
	pulumi.RegisterOutputType(RiskCenterAssetArrayOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgPtrOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgCfgRiskOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgCfgRiskArrayOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgPortRiskOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgPortRiskArrayOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgVulRiskOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgVulRiskArrayOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgWeakPwdRiskOutput{})
	pulumi.RegisterOutputType(RiskCenterTaskAdvanceCfgWeakPwdRiskArrayOutput{})
}
