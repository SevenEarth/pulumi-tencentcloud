// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ImagesImage struct {
	Architecture     string                `pulumi:"architecture"`
	CreatedTime      string                `pulumi:"createdTime"`
	ImageCreator     string                `pulumi:"imageCreator"`
	ImageDescription string                `pulumi:"imageDescription"`
	ImageId          string                `pulumi:"imageId"`
	ImageName        string                `pulumi:"imageName"`
	ImageSize        int                   `pulumi:"imageSize"`
	ImageSource      string                `pulumi:"imageSource"`
	ImageState       string                `pulumi:"imageState"`
	ImageType        string                `pulumi:"imageType"`
	OsName           string                `pulumi:"osName"`
	Platform         string                `pulumi:"platform"`
	Snapshots        []ImagesImageSnapshot `pulumi:"snapshots"`
	SupportCloudInit bool                  `pulumi:"supportCloudInit"`
	SyncPercent      int                   `pulumi:"syncPercent"`
}

// ImagesImageInput is an input type that accepts ImagesImageArgs and ImagesImageOutput values.
// You can construct a concrete instance of `ImagesImageInput` via:
//
//          ImagesImageArgs{...}
type ImagesImageInput interface {
	pulumi.Input

	ToImagesImageOutput() ImagesImageOutput
	ToImagesImageOutputWithContext(context.Context) ImagesImageOutput
}

type ImagesImageArgs struct {
	Architecture     pulumi.StringInput            `pulumi:"architecture"`
	CreatedTime      pulumi.StringInput            `pulumi:"createdTime"`
	ImageCreator     pulumi.StringInput            `pulumi:"imageCreator"`
	ImageDescription pulumi.StringInput            `pulumi:"imageDescription"`
	ImageId          pulumi.StringInput            `pulumi:"imageId"`
	ImageName        pulumi.StringInput            `pulumi:"imageName"`
	ImageSize        pulumi.IntInput               `pulumi:"imageSize"`
	ImageSource      pulumi.StringInput            `pulumi:"imageSource"`
	ImageState       pulumi.StringInput            `pulumi:"imageState"`
	ImageType        pulumi.StringInput            `pulumi:"imageType"`
	OsName           pulumi.StringInput            `pulumi:"osName"`
	Platform         pulumi.StringInput            `pulumi:"platform"`
	Snapshots        ImagesImageSnapshotArrayInput `pulumi:"snapshots"`
	SupportCloudInit pulumi.BoolInput              `pulumi:"supportCloudInit"`
	SyncPercent      pulumi.IntInput               `pulumi:"syncPercent"`
}

func (ImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesImage)(nil)).Elem()
}

func (i ImagesImageArgs) ToImagesImageOutput() ImagesImageOutput {
	return i.ToImagesImageOutputWithContext(context.Background())
}

func (i ImagesImageArgs) ToImagesImageOutputWithContext(ctx context.Context) ImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagesImageOutput)
}

// ImagesImageArrayInput is an input type that accepts ImagesImageArray and ImagesImageArrayOutput values.
// You can construct a concrete instance of `ImagesImageArrayInput` via:
//
//          ImagesImageArray{ ImagesImageArgs{...} }
type ImagesImageArrayInput interface {
	pulumi.Input

	ToImagesImageArrayOutput() ImagesImageArrayOutput
	ToImagesImageArrayOutputWithContext(context.Context) ImagesImageArrayOutput
}

type ImagesImageArray []ImagesImageInput

func (ImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagesImage)(nil)).Elem()
}

func (i ImagesImageArray) ToImagesImageArrayOutput() ImagesImageArrayOutput {
	return i.ToImagesImageArrayOutputWithContext(context.Background())
}

func (i ImagesImageArray) ToImagesImageArrayOutputWithContext(ctx context.Context) ImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagesImageArrayOutput)
}

type ImagesImageOutput struct{ *pulumi.OutputState }

func (ImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesImage)(nil)).Elem()
}

func (o ImagesImageOutput) ToImagesImageOutput() ImagesImageOutput {
	return o
}

func (o ImagesImageOutput) ToImagesImageOutputWithContext(ctx context.Context) ImagesImageOutput {
	return o
}

func (o ImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageCreator() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageCreator }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageDescription() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageDescription }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v ImagesImage) int { return v.ImageSize }).(pulumi.IntOutput)
}

func (o ImagesImageOutput) ImageSource() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageSource }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageState() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageState }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.OsName }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImage) string { return v.Platform }).(pulumi.StringOutput)
}

func (o ImagesImageOutput) Snapshots() ImagesImageSnapshotArrayOutput {
	return o.ApplyT(func(v ImagesImage) []ImagesImageSnapshot { return v.Snapshots }).(ImagesImageSnapshotArrayOutput)
}

func (o ImagesImageOutput) SupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v ImagesImage) bool { return v.SupportCloudInit }).(pulumi.BoolOutput)
}

func (o ImagesImageOutput) SyncPercent() pulumi.IntOutput {
	return o.ApplyT(func(v ImagesImage) int { return v.SyncPercent }).(pulumi.IntOutput)
}

type ImagesImageArrayOutput struct{ *pulumi.OutputState }

func (ImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagesImage)(nil)).Elem()
}

func (o ImagesImageArrayOutput) ToImagesImageArrayOutput() ImagesImageArrayOutput {
	return o
}

func (o ImagesImageArrayOutput) ToImagesImageArrayOutputWithContext(ctx context.Context) ImagesImageArrayOutput {
	return o
}

func (o ImagesImageArrayOutput) Index(i pulumi.IntInput) ImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImagesImage {
		return vs[0].([]ImagesImage)[vs[1].(int)]
	}).(ImagesImageOutput)
}

type ImagesImageSnapshot struct {
	DiskSize     int    `pulumi:"diskSize"`
	DiskUsage    string `pulumi:"diskUsage"`
	SnapshotId   string `pulumi:"snapshotId"`
	SnapshotName string `pulumi:"snapshotName"`
}

// ImagesImageSnapshotInput is an input type that accepts ImagesImageSnapshotArgs and ImagesImageSnapshotOutput values.
// You can construct a concrete instance of `ImagesImageSnapshotInput` via:
//
//          ImagesImageSnapshotArgs{...}
type ImagesImageSnapshotInput interface {
	pulumi.Input

	ToImagesImageSnapshotOutput() ImagesImageSnapshotOutput
	ToImagesImageSnapshotOutputWithContext(context.Context) ImagesImageSnapshotOutput
}

type ImagesImageSnapshotArgs struct {
	DiskSize     pulumi.IntInput    `pulumi:"diskSize"`
	DiskUsage    pulumi.StringInput `pulumi:"diskUsage"`
	SnapshotId   pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
}

func (ImagesImageSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesImageSnapshot)(nil)).Elem()
}

func (i ImagesImageSnapshotArgs) ToImagesImageSnapshotOutput() ImagesImageSnapshotOutput {
	return i.ToImagesImageSnapshotOutputWithContext(context.Background())
}

func (i ImagesImageSnapshotArgs) ToImagesImageSnapshotOutputWithContext(ctx context.Context) ImagesImageSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagesImageSnapshotOutput)
}

// ImagesImageSnapshotArrayInput is an input type that accepts ImagesImageSnapshotArray and ImagesImageSnapshotArrayOutput values.
// You can construct a concrete instance of `ImagesImageSnapshotArrayInput` via:
//
//          ImagesImageSnapshotArray{ ImagesImageSnapshotArgs{...} }
type ImagesImageSnapshotArrayInput interface {
	pulumi.Input

	ToImagesImageSnapshotArrayOutput() ImagesImageSnapshotArrayOutput
	ToImagesImageSnapshotArrayOutputWithContext(context.Context) ImagesImageSnapshotArrayOutput
}

type ImagesImageSnapshotArray []ImagesImageSnapshotInput

func (ImagesImageSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagesImageSnapshot)(nil)).Elem()
}

func (i ImagesImageSnapshotArray) ToImagesImageSnapshotArrayOutput() ImagesImageSnapshotArrayOutput {
	return i.ToImagesImageSnapshotArrayOutputWithContext(context.Background())
}

func (i ImagesImageSnapshotArray) ToImagesImageSnapshotArrayOutputWithContext(ctx context.Context) ImagesImageSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagesImageSnapshotArrayOutput)
}

type ImagesImageSnapshotOutput struct{ *pulumi.OutputState }

func (ImagesImageSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesImageSnapshot)(nil)).Elem()
}

func (o ImagesImageSnapshotOutput) ToImagesImageSnapshotOutput() ImagesImageSnapshotOutput {
	return o
}

func (o ImagesImageSnapshotOutput) ToImagesImageSnapshotOutputWithContext(ctx context.Context) ImagesImageSnapshotOutput {
	return o
}

func (o ImagesImageSnapshotOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v ImagesImageSnapshot) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o ImagesImageSnapshotOutput) DiskUsage() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImageSnapshot) string { return v.DiskUsage }).(pulumi.StringOutput)
}

func (o ImagesImageSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImageSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o ImagesImageSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v ImagesImageSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

type ImagesImageSnapshotArrayOutput struct{ *pulumi.OutputState }

func (ImagesImageSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImagesImageSnapshot)(nil)).Elem()
}

func (o ImagesImageSnapshotArrayOutput) ToImagesImageSnapshotArrayOutput() ImagesImageSnapshotArrayOutput {
	return o
}

func (o ImagesImageSnapshotArrayOutput) ToImagesImageSnapshotArrayOutputWithContext(ctx context.Context) ImagesImageSnapshotArrayOutput {
	return o
}

func (o ImagesImageSnapshotArrayOutput) Index(i pulumi.IntInput) ImagesImageSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImagesImageSnapshot {
		return vs[0].([]ImagesImageSnapshot)[vs[1].(int)]
	}).(ImagesImageSnapshotOutput)
}

type InstanceDataDisk struct {
	DataDiskId            *string `pulumi:"dataDiskId"`
	DataDiskSize          int     `pulumi:"dataDiskSize"`
	DataDiskSnapshotId    *string `pulumi:"dataDiskSnapshotId"`
	DataDiskType          string  `pulumi:"dataDiskType"`
	DeleteWithInstance    *bool   `pulumi:"deleteWithInstance"`
	Encrypt               *bool   `pulumi:"encrypt"`
	ThroughputPerformance *int    `pulumi:"throughputPerformance"`
}

// InstanceDataDiskInput is an input type that accepts InstanceDataDiskArgs and InstanceDataDiskOutput values.
// You can construct a concrete instance of `InstanceDataDiskInput` via:
//
//          InstanceDataDiskArgs{...}
type InstanceDataDiskInput interface {
	pulumi.Input

	ToInstanceDataDiskOutput() InstanceDataDiskOutput
	ToInstanceDataDiskOutputWithContext(context.Context) InstanceDataDiskOutput
}

type InstanceDataDiskArgs struct {
	DataDiskId            pulumi.StringPtrInput `pulumi:"dataDiskId"`
	DataDiskSize          pulumi.IntInput       `pulumi:"dataDiskSize"`
	DataDiskSnapshotId    pulumi.StringPtrInput `pulumi:"dataDiskSnapshotId"`
	DataDiskType          pulumi.StringInput    `pulumi:"dataDiskType"`
	DeleteWithInstance    pulumi.BoolPtrInput   `pulumi:"deleteWithInstance"`
	Encrypt               pulumi.BoolPtrInput   `pulumi:"encrypt"`
	ThroughputPerformance pulumi.IntPtrInput    `pulumi:"throughputPerformance"`
}

func (InstanceDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisk)(nil)).Elem()
}

func (i InstanceDataDiskArgs) ToInstanceDataDiskOutput() InstanceDataDiskOutput {
	return i.ToInstanceDataDiskOutputWithContext(context.Background())
}

func (i InstanceDataDiskArgs) ToInstanceDataDiskOutputWithContext(ctx context.Context) InstanceDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDiskOutput)
}

// InstanceDataDiskArrayInput is an input type that accepts InstanceDataDiskArray and InstanceDataDiskArrayOutput values.
// You can construct a concrete instance of `InstanceDataDiskArrayInput` via:
//
//          InstanceDataDiskArray{ InstanceDataDiskArgs{...} }
type InstanceDataDiskArrayInput interface {
	pulumi.Input

	ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput
	ToInstanceDataDiskArrayOutputWithContext(context.Context) InstanceDataDiskArrayOutput
}

type InstanceDataDiskArray []InstanceDataDiskInput

func (InstanceDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataDisk)(nil)).Elem()
}

func (i InstanceDataDiskArray) ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput {
	return i.ToInstanceDataDiskArrayOutputWithContext(context.Background())
}

func (i InstanceDataDiskArray) ToInstanceDataDiskArrayOutputWithContext(ctx context.Context) InstanceDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDiskArrayOutput)
}

type InstanceDataDiskOutput struct{ *pulumi.OutputState }

func (InstanceDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisk)(nil)).Elem()
}

func (o InstanceDataDiskOutput) ToInstanceDataDiskOutput() InstanceDataDiskOutput {
	return o
}

func (o InstanceDataDiskOutput) ToInstanceDataDiskOutputWithContext(ctx context.Context) InstanceDataDiskOutput {
	return o
}

func (o InstanceDataDiskOutput) DataDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.DataDiskId }).(pulumi.StringPtrOutput)
}

func (o InstanceDataDiskOutput) DataDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceDataDisk) int { return v.DataDiskSize }).(pulumi.IntOutput)
}

func (o InstanceDataDiskOutput) DataDiskSnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.DataDiskSnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceDataDiskOutput) DataDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataDisk) string { return v.DataDiskType }).(pulumi.StringOutput)
}

func (o InstanceDataDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

func (o InstanceDataDiskOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

func (o InstanceDataDiskOutput) ThroughputPerformance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *int { return v.ThroughputPerformance }).(pulumi.IntPtrOutput)
}

type InstanceDataDiskArrayOutput struct{ *pulumi.OutputState }

func (InstanceDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataDisk)(nil)).Elem()
}

func (o InstanceDataDiskArrayOutput) ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput {
	return o
}

func (o InstanceDataDiskArrayOutput) ToInstanceDataDiskArrayOutputWithContext(ctx context.Context) InstanceDataDiskArrayOutput {
	return o
}

func (o InstanceDataDiskArrayOutput) Index(i pulumi.IntInput) InstanceDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDataDisk {
		return vs[0].([]InstanceDataDisk)[vs[1].(int)]
	}).(InstanceDataDiskOutput)
}

type InstancesTypesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// InstancesTypesFilterInput is an input type that accepts InstancesTypesFilterArgs and InstancesTypesFilterOutput values.
// You can construct a concrete instance of `InstancesTypesFilterInput` via:
//
//          InstancesTypesFilterArgs{...}
type InstancesTypesFilterInput interface {
	pulumi.Input

	ToInstancesTypesFilterOutput() InstancesTypesFilterOutput
	ToInstancesTypesFilterOutputWithContext(context.Context) InstancesTypesFilterOutput
}

type InstancesTypesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (InstancesTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTypesFilter)(nil)).Elem()
}

func (i InstancesTypesFilterArgs) ToInstancesTypesFilterOutput() InstancesTypesFilterOutput {
	return i.ToInstancesTypesFilterOutputWithContext(context.Background())
}

func (i InstancesTypesFilterArgs) ToInstancesTypesFilterOutputWithContext(ctx context.Context) InstancesTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTypesFilterOutput)
}

// InstancesTypesFilterArrayInput is an input type that accepts InstancesTypesFilterArray and InstancesTypesFilterArrayOutput values.
// You can construct a concrete instance of `InstancesTypesFilterArrayInput` via:
//
//          InstancesTypesFilterArray{ InstancesTypesFilterArgs{...} }
type InstancesTypesFilterArrayInput interface {
	pulumi.Input

	ToInstancesTypesFilterArrayOutput() InstancesTypesFilterArrayOutput
	ToInstancesTypesFilterArrayOutputWithContext(context.Context) InstancesTypesFilterArrayOutput
}

type InstancesTypesFilterArray []InstancesTypesFilterInput

func (InstancesTypesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTypesFilter)(nil)).Elem()
}

func (i InstancesTypesFilterArray) ToInstancesTypesFilterArrayOutput() InstancesTypesFilterArrayOutput {
	return i.ToInstancesTypesFilterArrayOutputWithContext(context.Background())
}

func (i InstancesTypesFilterArray) ToInstancesTypesFilterArrayOutputWithContext(ctx context.Context) InstancesTypesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTypesFilterArrayOutput)
}

type InstancesTypesFilterOutput struct{ *pulumi.OutputState }

func (InstancesTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTypesFilter)(nil)).Elem()
}

func (o InstancesTypesFilterOutput) ToInstancesTypesFilterOutput() InstancesTypesFilterOutput {
	return o
}

func (o InstancesTypesFilterOutput) ToInstancesTypesFilterOutputWithContext(ctx context.Context) InstancesTypesFilterOutput {
	return o
}

func (o InstancesTypesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstancesTypesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesTypesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type InstancesTypesFilterArrayOutput struct{ *pulumi.OutputState }

func (InstancesTypesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTypesFilter)(nil)).Elem()
}

func (o InstancesTypesFilterArrayOutput) ToInstancesTypesFilterArrayOutput() InstancesTypesFilterArrayOutput {
	return o
}

func (o InstancesTypesFilterArrayOutput) ToInstancesTypesFilterArrayOutputWithContext(ctx context.Context) InstancesTypesFilterArrayOutput {
	return o
}

func (o InstancesTypesFilterArrayOutput) Index(i pulumi.IntInput) InstancesTypesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesTypesFilter {
		return vs[0].([]InstancesTypesFilter)[vs[1].(int)]
	}).(InstancesTypesFilterOutput)
}

type InstancesTypesInstanceType struct {
	AvailabilityZone   string `pulumi:"availabilityZone"`
	CpuCoreCount       int    `pulumi:"cpuCoreCount"`
	Family             string `pulumi:"family"`
	GpuCoreCount       int    `pulumi:"gpuCoreCount"`
	InstanceChargeType string `pulumi:"instanceChargeType"`
	InstanceType       string `pulumi:"instanceType"`
	MemorySize         int    `pulumi:"memorySize"`
	Status             string `pulumi:"status"`
}

// InstancesTypesInstanceTypeInput is an input type that accepts InstancesTypesInstanceTypeArgs and InstancesTypesInstanceTypeOutput values.
// You can construct a concrete instance of `InstancesTypesInstanceTypeInput` via:
//
//          InstancesTypesInstanceTypeArgs{...}
type InstancesTypesInstanceTypeInput interface {
	pulumi.Input

	ToInstancesTypesInstanceTypeOutput() InstancesTypesInstanceTypeOutput
	ToInstancesTypesInstanceTypeOutputWithContext(context.Context) InstancesTypesInstanceTypeOutput
}

type InstancesTypesInstanceTypeArgs struct {
	AvailabilityZone   pulumi.StringInput `pulumi:"availabilityZone"`
	CpuCoreCount       pulumi.IntInput    `pulumi:"cpuCoreCount"`
	Family             pulumi.StringInput `pulumi:"family"`
	GpuCoreCount       pulumi.IntInput    `pulumi:"gpuCoreCount"`
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	InstanceType       pulumi.StringInput `pulumi:"instanceType"`
	MemorySize         pulumi.IntInput    `pulumi:"memorySize"`
	Status             pulumi.StringInput `pulumi:"status"`
}

func (InstancesTypesInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTypesInstanceType)(nil)).Elem()
}

func (i InstancesTypesInstanceTypeArgs) ToInstancesTypesInstanceTypeOutput() InstancesTypesInstanceTypeOutput {
	return i.ToInstancesTypesInstanceTypeOutputWithContext(context.Background())
}

func (i InstancesTypesInstanceTypeArgs) ToInstancesTypesInstanceTypeOutputWithContext(ctx context.Context) InstancesTypesInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTypesInstanceTypeOutput)
}

// InstancesTypesInstanceTypeArrayInput is an input type that accepts InstancesTypesInstanceTypeArray and InstancesTypesInstanceTypeArrayOutput values.
// You can construct a concrete instance of `InstancesTypesInstanceTypeArrayInput` via:
//
//          InstancesTypesInstanceTypeArray{ InstancesTypesInstanceTypeArgs{...} }
type InstancesTypesInstanceTypeArrayInput interface {
	pulumi.Input

	ToInstancesTypesInstanceTypeArrayOutput() InstancesTypesInstanceTypeArrayOutput
	ToInstancesTypesInstanceTypeArrayOutputWithContext(context.Context) InstancesTypesInstanceTypeArrayOutput
}

type InstancesTypesInstanceTypeArray []InstancesTypesInstanceTypeInput

func (InstancesTypesInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTypesInstanceType)(nil)).Elem()
}

func (i InstancesTypesInstanceTypeArray) ToInstancesTypesInstanceTypeArrayOutput() InstancesTypesInstanceTypeArrayOutput {
	return i.ToInstancesTypesInstanceTypeArrayOutputWithContext(context.Background())
}

func (i InstancesTypesInstanceTypeArray) ToInstancesTypesInstanceTypeArrayOutputWithContext(ctx context.Context) InstancesTypesInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTypesInstanceTypeArrayOutput)
}

type InstancesTypesInstanceTypeOutput struct{ *pulumi.OutputState }

func (InstancesTypesInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTypesInstanceType)(nil)).Elem()
}

func (o InstancesTypesInstanceTypeOutput) ToInstancesTypesInstanceTypeOutput() InstancesTypesInstanceTypeOutput {
	return o
}

func (o InstancesTypesInstanceTypeOutput) ToInstancesTypesInstanceTypeOutputWithContext(ctx context.Context) InstancesTypesInstanceTypeOutput {
	return o
}

func (o InstancesTypesInstanceTypeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o InstancesTypesInstanceTypeOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

func (o InstancesTypesInstanceTypeOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) string { return v.Family }).(pulumi.StringOutput)
}

func (o InstancesTypesInstanceTypeOutput) GpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) int { return v.GpuCoreCount }).(pulumi.IntOutput)
}

func (o InstancesTypesInstanceTypeOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

func (o InstancesTypesInstanceTypeOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o InstancesTypesInstanceTypeOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) int { return v.MemorySize }).(pulumi.IntOutput)
}

func (o InstancesTypesInstanceTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTypesInstanceType) string { return v.Status }).(pulumi.StringOutput)
}

type InstancesTypesInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (InstancesTypesInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTypesInstanceType)(nil)).Elem()
}

func (o InstancesTypesInstanceTypeArrayOutput) ToInstancesTypesInstanceTypeArrayOutput() InstancesTypesInstanceTypeArrayOutput {
	return o
}

func (o InstancesTypesInstanceTypeArrayOutput) ToInstancesTypesInstanceTypeArrayOutputWithContext(ctx context.Context) InstancesTypesInstanceTypeArrayOutput {
	return o
}

func (o InstancesTypesInstanceTypeArrayOutput) Index(i pulumi.IntInput) InstancesTypesInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesTypesInstanceType {
		return vs[0].([]InstancesTypesInstanceType)[vs[1].(int)]
	}).(InstancesTypesInstanceTypeOutput)
}

type ReservedInstanceConfigsConfigList struct {
	AvailabilityZone string  `pulumi:"availabilityZone"`
	ConfigId         string  `pulumi:"configId"`
	CurrencyCode     string  `pulumi:"currencyCode"`
	Duration         int     `pulumi:"duration"`
	InstanceType     string  `pulumi:"instanceType"`
	OfferingType     string  `pulumi:"offeringType"`
	Platform         string  `pulumi:"platform"`
	Price            float64 `pulumi:"price"`
	UsagePrice       float64 `pulumi:"usagePrice"`
}

// ReservedInstanceConfigsConfigListInput is an input type that accepts ReservedInstanceConfigsConfigListArgs and ReservedInstanceConfigsConfigListOutput values.
// You can construct a concrete instance of `ReservedInstanceConfigsConfigListInput` via:
//
//          ReservedInstanceConfigsConfigListArgs{...}
type ReservedInstanceConfigsConfigListInput interface {
	pulumi.Input

	ToReservedInstanceConfigsConfigListOutput() ReservedInstanceConfigsConfigListOutput
	ToReservedInstanceConfigsConfigListOutputWithContext(context.Context) ReservedInstanceConfigsConfigListOutput
}

type ReservedInstanceConfigsConfigListArgs struct {
	AvailabilityZone pulumi.StringInput  `pulumi:"availabilityZone"`
	ConfigId         pulumi.StringInput  `pulumi:"configId"`
	CurrencyCode     pulumi.StringInput  `pulumi:"currencyCode"`
	Duration         pulumi.IntInput     `pulumi:"duration"`
	InstanceType     pulumi.StringInput  `pulumi:"instanceType"`
	OfferingType     pulumi.StringInput  `pulumi:"offeringType"`
	Platform         pulumi.StringInput  `pulumi:"platform"`
	Price            pulumi.Float64Input `pulumi:"price"`
	UsagePrice       pulumi.Float64Input `pulumi:"usagePrice"`
}

func (ReservedInstanceConfigsConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstanceConfigsConfigList)(nil)).Elem()
}

func (i ReservedInstanceConfigsConfigListArgs) ToReservedInstanceConfigsConfigListOutput() ReservedInstanceConfigsConfigListOutput {
	return i.ToReservedInstanceConfigsConfigListOutputWithContext(context.Background())
}

func (i ReservedInstanceConfigsConfigListArgs) ToReservedInstanceConfigsConfigListOutputWithContext(ctx context.Context) ReservedInstanceConfigsConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedInstanceConfigsConfigListOutput)
}

// ReservedInstanceConfigsConfigListArrayInput is an input type that accepts ReservedInstanceConfigsConfigListArray and ReservedInstanceConfigsConfigListArrayOutput values.
// You can construct a concrete instance of `ReservedInstanceConfigsConfigListArrayInput` via:
//
//          ReservedInstanceConfigsConfigListArray{ ReservedInstanceConfigsConfigListArgs{...} }
type ReservedInstanceConfigsConfigListArrayInput interface {
	pulumi.Input

	ToReservedInstanceConfigsConfigListArrayOutput() ReservedInstanceConfigsConfigListArrayOutput
	ToReservedInstanceConfigsConfigListArrayOutputWithContext(context.Context) ReservedInstanceConfigsConfigListArrayOutput
}

type ReservedInstanceConfigsConfigListArray []ReservedInstanceConfigsConfigListInput

func (ReservedInstanceConfigsConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedInstanceConfigsConfigList)(nil)).Elem()
}

func (i ReservedInstanceConfigsConfigListArray) ToReservedInstanceConfigsConfigListArrayOutput() ReservedInstanceConfigsConfigListArrayOutput {
	return i.ToReservedInstanceConfigsConfigListArrayOutputWithContext(context.Background())
}

func (i ReservedInstanceConfigsConfigListArray) ToReservedInstanceConfigsConfigListArrayOutputWithContext(ctx context.Context) ReservedInstanceConfigsConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedInstanceConfigsConfigListArrayOutput)
}

type ReservedInstanceConfigsConfigListOutput struct{ *pulumi.OutputState }

func (ReservedInstanceConfigsConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstanceConfigsConfigList)(nil)).Elem()
}

func (o ReservedInstanceConfigsConfigListOutput) ToReservedInstanceConfigsConfigListOutput() ReservedInstanceConfigsConfigListOutput {
	return o
}

func (o ReservedInstanceConfigsConfigListOutput) ToReservedInstanceConfigsConfigListOutputWithContext(ctx context.Context) ReservedInstanceConfigsConfigListOutput {
	return o
}

func (o ReservedInstanceConfigsConfigListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.ConfigId }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) int { return v.Duration }).(pulumi.IntOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) OfferingType() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.OfferingType }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) string { return v.Platform }).(pulumi.StringOutput)
}

func (o ReservedInstanceConfigsConfigListOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) float64 { return v.Price }).(pulumi.Float64Output)
}

func (o ReservedInstanceConfigsConfigListOutput) UsagePrice() pulumi.Float64Output {
	return o.ApplyT(func(v ReservedInstanceConfigsConfigList) float64 { return v.UsagePrice }).(pulumi.Float64Output)
}

type ReservedInstanceConfigsConfigListArrayOutput struct{ *pulumi.OutputState }

func (ReservedInstanceConfigsConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedInstanceConfigsConfigList)(nil)).Elem()
}

func (o ReservedInstanceConfigsConfigListArrayOutput) ToReservedInstanceConfigsConfigListArrayOutput() ReservedInstanceConfigsConfigListArrayOutput {
	return o
}

func (o ReservedInstanceConfigsConfigListArrayOutput) ToReservedInstanceConfigsConfigListArrayOutputWithContext(ctx context.Context) ReservedInstanceConfigsConfigListArrayOutput {
	return o
}

func (o ReservedInstanceConfigsConfigListArrayOutput) Index(i pulumi.IntInput) ReservedInstanceConfigsConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReservedInstanceConfigsConfigList {
		return vs[0].([]ReservedInstanceConfigsConfigList)[vs[1].(int)]
	}).(ReservedInstanceConfigsConfigListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesImageInput)(nil)).Elem(), ImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesImageArrayInput)(nil)).Elem(), ImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesImageSnapshotInput)(nil)).Elem(), ImagesImageSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesImageSnapshotArrayInput)(nil)).Elem(), ImagesImageSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataDiskInput)(nil)).Elem(), InstanceDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataDiskArrayInput)(nil)).Elem(), InstanceDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTypesFilterInput)(nil)).Elem(), InstancesTypesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTypesFilterArrayInput)(nil)).Elem(), InstancesTypesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTypesInstanceTypeInput)(nil)).Elem(), InstancesTypesInstanceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTypesInstanceTypeArrayInput)(nil)).Elem(), InstancesTypesInstanceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedInstanceConfigsConfigListInput)(nil)).Elem(), ReservedInstanceConfigsConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedInstanceConfigsConfigListArrayInput)(nil)).Elem(), ReservedInstanceConfigsConfigListArray{})
	pulumi.RegisterOutputType(ImagesImageOutput{})
	pulumi.RegisterOutputType(ImagesImageArrayOutput{})
	pulumi.RegisterOutputType(ImagesImageSnapshotOutput{})
	pulumi.RegisterOutputType(ImagesImageSnapshotArrayOutput{})
	pulumi.RegisterOutputType(InstanceDataDiskOutput{})
	pulumi.RegisterOutputType(InstanceDataDiskArrayOutput{})
	pulumi.RegisterOutputType(InstancesTypesFilterOutput{})
	pulumi.RegisterOutputType(InstancesTypesFilterArrayOutput{})
	pulumi.RegisterOutputType(InstancesTypesInstanceTypeOutput{})
	pulumi.RegisterOutputType(InstancesTypesInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(ReservedInstanceConfigsConfigListOutput{})
	pulumi.RegisterOutputType(ReservedInstanceConfigsConfigListArrayOutput{})
}
