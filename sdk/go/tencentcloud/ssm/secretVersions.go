// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func SecretVersions(ctx *pulumi.Context, args *SecretVersionsArgs, opts ...pulumi.InvokeOption) (*SecretVersionsResult, error) {
	var rv SecretVersionsResult
	err := ctx.Invoke("tencentcloud:Ssm/secretVersions:SecretVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking SecretVersions.
type SecretVersionsArgs struct {
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SecretName       string  `pulumi:"secretName"`
	VersionId        *string `pulumi:"versionId"`
}

// A collection of values returned by SecretVersions.
type SecretVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string                            `pulumi:"id"`
	ResultOutputFile   *string                           `pulumi:"resultOutputFile"`
	SecretName         string                            `pulumi:"secretName"`
	SecretVersionLists []SecretVersionsSecretVersionList `pulumi:"secretVersionLists"`
	VersionId          *string                           `pulumi:"versionId"`
}

func SecretVersionsOutput(ctx *pulumi.Context, args SecretVersionsOutputArgs, opts ...pulumi.InvokeOption) SecretVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SecretVersionsResult, error) {
			args := v.(SecretVersionsArgs)
			r, err := SecretVersions(ctx, &args, opts...)
			var s SecretVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SecretVersionsResultOutput)
}

// A collection of arguments for invoking SecretVersions.
type SecretVersionsOutputArgs struct {
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SecretName       pulumi.StringInput    `pulumi:"secretName"`
	VersionId        pulumi.StringPtrInput `pulumi:"versionId"`
}

func (SecretVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretVersionsArgs)(nil)).Elem()
}

// A collection of values returned by SecretVersions.
type SecretVersionsResultOutput struct{ *pulumi.OutputState }

func (SecretVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretVersionsResult)(nil)).Elem()
}

func (o SecretVersionsResultOutput) ToSecretVersionsResultOutput() SecretVersionsResultOutput {
	return o
}

func (o SecretVersionsResultOutput) ToSecretVersionsResultOutputWithContext(ctx context.Context) SecretVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o SecretVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SecretVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o SecretVersionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretVersionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o SecretVersionsResultOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretVersionsResult) string { return v.SecretName }).(pulumi.StringOutput)
}

func (o SecretVersionsResultOutput) SecretVersionLists() SecretVersionsSecretVersionListArrayOutput {
	return o.ApplyT(func(v SecretVersionsResult) []SecretVersionsSecretVersionList { return v.SecretVersionLists }).(SecretVersionsSecretVersionListArrayOutput)
}

func (o SecretVersionsResultOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretVersionsResult) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretVersionsResultOutput{})
}
