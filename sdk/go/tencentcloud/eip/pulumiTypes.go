// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstancesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// InstancesFilterInput is an input type that accepts InstancesFilterArgs and InstancesFilterOutput values.
// You can construct a concrete instance of `InstancesFilterInput` via:
//
//          InstancesFilterArgs{...}
type InstancesFilterInput interface {
	pulumi.Input

	ToInstancesFilterOutput() InstancesFilterOutput
	ToInstancesFilterOutputWithContext(context.Context) InstancesFilterOutput
}

type InstancesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (InstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesFilter)(nil)).Elem()
}

func (i InstancesFilterArgs) ToInstancesFilterOutput() InstancesFilterOutput {
	return i.ToInstancesFilterOutputWithContext(context.Background())
}

func (i InstancesFilterArgs) ToInstancesFilterOutputWithContext(ctx context.Context) InstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesFilterOutput)
}

// InstancesFilterArrayInput is an input type that accepts InstancesFilterArray and InstancesFilterArrayOutput values.
// You can construct a concrete instance of `InstancesFilterArrayInput` via:
//
//          InstancesFilterArray{ InstancesFilterArgs{...} }
type InstancesFilterArrayInput interface {
	pulumi.Input

	ToInstancesFilterArrayOutput() InstancesFilterArrayOutput
	ToInstancesFilterArrayOutputWithContext(context.Context) InstancesFilterArrayOutput
}

type InstancesFilterArray []InstancesFilterInput

func (InstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesFilter)(nil)).Elem()
}

func (i InstancesFilterArray) ToInstancesFilterArrayOutput() InstancesFilterArrayOutput {
	return i.ToInstancesFilterArrayOutputWithContext(context.Background())
}

func (i InstancesFilterArray) ToInstancesFilterArrayOutputWithContext(ctx context.Context) InstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesFilterArrayOutput)
}

type InstancesFilterOutput struct{ *pulumi.OutputState }

func (InstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesFilter)(nil)).Elem()
}

func (o InstancesFilterOutput) ToInstancesFilterOutput() InstancesFilterOutput {
	return o
}

func (o InstancesFilterOutput) ToInstancesFilterOutputWithContext(ctx context.Context) InstancesFilterOutput {
	return o
}

func (o InstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type InstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (InstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesFilter)(nil)).Elem()
}

func (o InstancesFilterArrayOutput) ToInstancesFilterArrayOutput() InstancesFilterArrayOutput {
	return o
}

func (o InstancesFilterArrayOutput) ToInstancesFilterArrayOutputWithContext(ctx context.Context) InstancesFilterArrayOutput {
	return o
}

func (o InstancesFilterArrayOutput) Index(i pulumi.IntInput) InstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesFilter {
		return vs[0].([]InstancesFilter)[vs[1].(int)]
	}).(InstancesFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesFilterInput)(nil)).Elem(), InstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesFilterArrayInput)(nil)).Elem(), InstancesFilterArray{})
	pulumi.RegisterOutputType(InstancesFilterOutput{})
	pulumi.RegisterOutputType(InstancesFilterArrayOutput{})
}
