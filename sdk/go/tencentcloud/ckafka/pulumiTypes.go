// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AclsAclList struct {
	Host           string `pulumi:"host"`
	OperationType  string `pulumi:"operationType"`
	PermissionType string `pulumi:"permissionType"`
	Principal      string `pulumi:"principal"`
	ResourceName   string `pulumi:"resourceName"`
	ResourceType   string `pulumi:"resourceType"`
}

// AclsAclListInput is an input type that accepts AclsAclListArgs and AclsAclListOutput values.
// You can construct a concrete instance of `AclsAclListInput` via:
//
//          AclsAclListArgs{...}
type AclsAclListInput interface {
	pulumi.Input

	ToAclsAclListOutput() AclsAclListOutput
	ToAclsAclListOutputWithContext(context.Context) AclsAclListOutput
}

type AclsAclListArgs struct {
	Host           pulumi.StringInput `pulumi:"host"`
	OperationType  pulumi.StringInput `pulumi:"operationType"`
	PermissionType pulumi.StringInput `pulumi:"permissionType"`
	Principal      pulumi.StringInput `pulumi:"principal"`
	ResourceName   pulumi.StringInput `pulumi:"resourceName"`
	ResourceType   pulumi.StringInput `pulumi:"resourceType"`
}

func (AclsAclListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclList)(nil)).Elem()
}

func (i AclsAclListArgs) ToAclsAclListOutput() AclsAclListOutput {
	return i.ToAclsAclListOutputWithContext(context.Background())
}

func (i AclsAclListArgs) ToAclsAclListOutputWithContext(ctx context.Context) AclsAclListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclListOutput)
}

// AclsAclListArrayInput is an input type that accepts AclsAclListArray and AclsAclListArrayOutput values.
// You can construct a concrete instance of `AclsAclListArrayInput` via:
//
//          AclsAclListArray{ AclsAclListArgs{...} }
type AclsAclListArrayInput interface {
	pulumi.Input

	ToAclsAclListArrayOutput() AclsAclListArrayOutput
	ToAclsAclListArrayOutputWithContext(context.Context) AclsAclListArrayOutput
}

type AclsAclListArray []AclsAclListInput

func (AclsAclListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclList)(nil)).Elem()
}

func (i AclsAclListArray) ToAclsAclListArrayOutput() AclsAclListArrayOutput {
	return i.ToAclsAclListArrayOutputWithContext(context.Background())
}

func (i AclsAclListArray) ToAclsAclListArrayOutputWithContext(ctx context.Context) AclsAclListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclListArrayOutput)
}

type AclsAclListOutput struct{ *pulumi.OutputState }

func (AclsAclListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclList)(nil)).Elem()
}

func (o AclsAclListOutput) ToAclsAclListOutput() AclsAclListOutput {
	return o
}

func (o AclsAclListOutput) ToAclsAclListOutputWithContext(ctx context.Context) AclsAclListOutput {
	return o
}

func (o AclsAclListOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.Host }).(pulumi.StringOutput)
}

func (o AclsAclListOutput) OperationType() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.OperationType }).(pulumi.StringOutput)
}

func (o AclsAclListOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.PermissionType }).(pulumi.StringOutput)
}

func (o AclsAclListOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.Principal }).(pulumi.StringOutput)
}

func (o AclsAclListOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.ResourceName }).(pulumi.StringOutput)
}

func (o AclsAclListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclList) string { return v.ResourceType }).(pulumi.StringOutput)
}

type AclsAclListArrayOutput struct{ *pulumi.OutputState }

func (AclsAclListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclList)(nil)).Elem()
}

func (o AclsAclListArrayOutput) ToAclsAclListArrayOutput() AclsAclListArrayOutput {
	return o
}

func (o AclsAclListArrayOutput) ToAclsAclListArrayOutputWithContext(ctx context.Context) AclsAclListArrayOutput {
	return o
}

func (o AclsAclListArrayOutput) Index(i pulumi.IntInput) AclsAclListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclsAclList {
		return vs[0].([]AclsAclList)[vs[1].(int)]
	}).(AclsAclListOutput)
}

type InstanceConfig struct {
	AutoCreateTopicEnable    bool `pulumi:"autoCreateTopicEnable"`
	DefaultNumPartitions     int  `pulumi:"defaultNumPartitions"`
	DefaultReplicationFactor int  `pulumi:"defaultReplicationFactor"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//          InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

type InstanceConfigArgs struct {
	AutoCreateTopicEnable    pulumi.BoolInput `pulumi:"autoCreateTopicEnable"`
	DefaultNumPartitions     pulumi.IntInput  `pulumi:"defaultNumPartitions"`
	DefaultReplicationFactor pulumi.IntInput  `pulumi:"defaultReplicationFactor"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput).ToInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceConfigPtrInput is an input type that accepts InstanceConfigArgs, InstanceConfigPtr and InstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceConfigPtrInput` via:
//
//          InstanceConfigArgs{...}
//
//  or:
//
//          nil
type InstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceConfigPtrOutput() InstanceConfigPtrOutput
	ToInstanceConfigPtrOutputWithContext(context.Context) InstanceConfigPtrOutput
}

type instanceConfigPtrType InstanceConfigArgs

func InstanceConfigPtr(v *InstanceConfigArgs) InstanceConfigPtrInput {
	return (*instanceConfigPtrType)(v)
}

func (*instanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigPtrOutput)
}

type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfig) *InstanceConfig {
		return &v
	}).(InstanceConfigPtrOutput)
}

func (o InstanceConfigOutput) AutoCreateTopicEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceConfig) bool { return v.AutoCreateTopicEnable }).(pulumi.BoolOutput)
}

func (o InstanceConfigOutput) DefaultNumPartitions() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultNumPartitions }).(pulumi.IntOutput)
}

func (o InstanceConfigOutput) DefaultReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultReplicationFactor }).(pulumi.IntOutput)
}

type InstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) Elem() InstanceConfigOutput {
	return o.ApplyT(func(v *InstanceConfig) InstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceConfig
		return ret
	}).(InstanceConfigOutput)
}

func (o InstanceConfigPtrOutput) AutoCreateTopicEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoCreateTopicEnable
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceConfigPtrOutput) DefaultNumPartitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultNumPartitions
	}).(pulumi.IntPtrOutput)
}

func (o InstanceConfigPtrOutput) DefaultReplicationFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultReplicationFactor
	}).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfig struct {
	BottomRetention       *int `pulumi:"bottomRetention"`
	DiskQuotaPercentage   *int `pulumi:"diskQuotaPercentage"`
	Enable                *int `pulumi:"enable"`
	StepForwardPercentage *int `pulumi:"stepForwardPercentage"`
}

// InstanceDynamicRetentionConfigInput is an input type that accepts InstanceDynamicRetentionConfigArgs and InstanceDynamicRetentionConfigOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigInput` via:
//
//          InstanceDynamicRetentionConfigArgs{...}
type InstanceDynamicRetentionConfigInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput
	ToInstanceDynamicRetentionConfigOutputWithContext(context.Context) InstanceDynamicRetentionConfigOutput
}

type InstanceDynamicRetentionConfigArgs struct {
	BottomRetention       pulumi.IntPtrInput `pulumi:"bottomRetention"`
	DiskQuotaPercentage   pulumi.IntPtrInput `pulumi:"diskQuotaPercentage"`
	Enable                pulumi.IntPtrInput `pulumi:"enable"`
	StepForwardPercentage pulumi.IntPtrInput `pulumi:"stepForwardPercentage"`
}

func (InstanceDynamicRetentionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return i.ToInstanceDynamicRetentionConfigOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput)
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput).ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx)
}

// InstanceDynamicRetentionConfigPtrInput is an input type that accepts InstanceDynamicRetentionConfigArgs, InstanceDynamicRetentionConfigPtr and InstanceDynamicRetentionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigPtrInput` via:
//
//          InstanceDynamicRetentionConfigArgs{...}
//
//  or:
//
//          nil
type InstanceDynamicRetentionConfigPtrInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput
	ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Context) InstanceDynamicRetentionConfigPtrOutput
}

type instanceDynamicRetentionConfigPtrType InstanceDynamicRetentionConfigArgs

func InstanceDynamicRetentionConfigPtr(v *InstanceDynamicRetentionConfigArgs) InstanceDynamicRetentionConfigPtrInput {
	return (*instanceDynamicRetentionConfigPtrType)(v)
}

func (*instanceDynamicRetentionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigPtrOutput)
}

type InstanceDynamicRetentionConfigOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDynamicRetentionConfig) *InstanceDynamicRetentionConfig {
		return &v
	}).(InstanceDynamicRetentionConfigPtrOutput)
}

func (o InstanceDynamicRetentionConfigOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.BottomRetention }).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.DiskQuotaPercentage }).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.Enable }).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.StepForwardPercentage }).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) Elem() InstanceDynamicRetentionConfigOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) InstanceDynamicRetentionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceDynamicRetentionConfig
		return ret
	}).(InstanceDynamicRetentionConfigOutput)
}

func (o InstanceDynamicRetentionConfigPtrOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.BottomRetention
	}).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigPtrOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskQuotaPercentage
	}).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigPtrOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.IntPtrOutput)
}

func (o InstanceDynamicRetentionConfigPtrOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.StepForwardPercentage
	}).(pulumi.IntPtrOutput)
}

type InstanceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//          InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//          InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type TopicsInstanceList struct {
	CleanUpPolicy               string `pulumi:"cleanUpPolicy"`
	CreateTime                  string `pulumi:"createTime"`
	EnableWhiteList             bool   `pulumi:"enableWhiteList"`
	ForwardCosBucket            string `pulumi:"forwardCosBucket"`
	ForwardInterval             int    `pulumi:"forwardInterval"`
	ForwardStatus               int    `pulumi:"forwardStatus"`
	IpWhiteListCount            int    `pulumi:"ipWhiteListCount"`
	MaxMessageBytes             int    `pulumi:"maxMessageBytes"`
	Note                        string `pulumi:"note"`
	PartitionNum                int    `pulumi:"partitionNum"`
	ReplicaNum                  int    `pulumi:"replicaNum"`
	Retention                   int    `pulumi:"retention"`
	Segment                     int    `pulumi:"segment"`
	SegmentBytes                int    `pulumi:"segmentBytes"`
	SyncReplicaMinNum           int    `pulumi:"syncReplicaMinNum"`
	TopicId                     string `pulumi:"topicId"`
	TopicName                   string `pulumi:"topicName"`
	UncleanLeaderElectionEnable bool   `pulumi:"uncleanLeaderElectionEnable"`
}

// TopicsInstanceListInput is an input type that accepts TopicsInstanceListArgs and TopicsInstanceListOutput values.
// You can construct a concrete instance of `TopicsInstanceListInput` via:
//
//          TopicsInstanceListArgs{...}
type TopicsInstanceListInput interface {
	pulumi.Input

	ToTopicsInstanceListOutput() TopicsInstanceListOutput
	ToTopicsInstanceListOutputWithContext(context.Context) TopicsInstanceListOutput
}

type TopicsInstanceListArgs struct {
	CleanUpPolicy               pulumi.StringInput `pulumi:"cleanUpPolicy"`
	CreateTime                  pulumi.StringInput `pulumi:"createTime"`
	EnableWhiteList             pulumi.BoolInput   `pulumi:"enableWhiteList"`
	ForwardCosBucket            pulumi.StringInput `pulumi:"forwardCosBucket"`
	ForwardInterval             pulumi.IntInput    `pulumi:"forwardInterval"`
	ForwardStatus               pulumi.IntInput    `pulumi:"forwardStatus"`
	IpWhiteListCount            pulumi.IntInput    `pulumi:"ipWhiteListCount"`
	MaxMessageBytes             pulumi.IntInput    `pulumi:"maxMessageBytes"`
	Note                        pulumi.StringInput `pulumi:"note"`
	PartitionNum                pulumi.IntInput    `pulumi:"partitionNum"`
	ReplicaNum                  pulumi.IntInput    `pulumi:"replicaNum"`
	Retention                   pulumi.IntInput    `pulumi:"retention"`
	Segment                     pulumi.IntInput    `pulumi:"segment"`
	SegmentBytes                pulumi.IntInput    `pulumi:"segmentBytes"`
	SyncReplicaMinNum           pulumi.IntInput    `pulumi:"syncReplicaMinNum"`
	TopicId                     pulumi.StringInput `pulumi:"topicId"`
	TopicName                   pulumi.StringInput `pulumi:"topicName"`
	UncleanLeaderElectionEnable pulumi.BoolInput   `pulumi:"uncleanLeaderElectionEnable"`
}

func (TopicsInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicsInstanceList)(nil)).Elem()
}

func (i TopicsInstanceListArgs) ToTopicsInstanceListOutput() TopicsInstanceListOutput {
	return i.ToTopicsInstanceListOutputWithContext(context.Background())
}

func (i TopicsInstanceListArgs) ToTopicsInstanceListOutputWithContext(ctx context.Context) TopicsInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicsInstanceListOutput)
}

// TopicsInstanceListArrayInput is an input type that accepts TopicsInstanceListArray and TopicsInstanceListArrayOutput values.
// You can construct a concrete instance of `TopicsInstanceListArrayInput` via:
//
//          TopicsInstanceListArray{ TopicsInstanceListArgs{...} }
type TopicsInstanceListArrayInput interface {
	pulumi.Input

	ToTopicsInstanceListArrayOutput() TopicsInstanceListArrayOutput
	ToTopicsInstanceListArrayOutputWithContext(context.Context) TopicsInstanceListArrayOutput
}

type TopicsInstanceListArray []TopicsInstanceListInput

func (TopicsInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicsInstanceList)(nil)).Elem()
}

func (i TopicsInstanceListArray) ToTopicsInstanceListArrayOutput() TopicsInstanceListArrayOutput {
	return i.ToTopicsInstanceListArrayOutputWithContext(context.Background())
}

func (i TopicsInstanceListArray) ToTopicsInstanceListArrayOutputWithContext(ctx context.Context) TopicsInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicsInstanceListArrayOutput)
}

type TopicsInstanceListOutput struct{ *pulumi.OutputState }

func (TopicsInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicsInstanceList)(nil)).Elem()
}

func (o TopicsInstanceListOutput) ToTopicsInstanceListOutput() TopicsInstanceListOutput {
	return o
}

func (o TopicsInstanceListOutput) ToTopicsInstanceListOutputWithContext(ctx context.Context) TopicsInstanceListOutput {
	return o
}

func (o TopicsInstanceListOutput) CleanUpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.CleanUpPolicy }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) EnableWhiteList() pulumi.BoolOutput {
	return o.ApplyT(func(v TopicsInstanceList) bool { return v.EnableWhiteList }).(pulumi.BoolOutput)
}

func (o TopicsInstanceListOutput) ForwardCosBucket() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.ForwardCosBucket }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) ForwardInterval() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.ForwardInterval }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) ForwardStatus() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.ForwardStatus }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) IpWhiteListCount() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.IpWhiteListCount }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) MaxMessageBytes() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.MaxMessageBytes }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.Note }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.PartitionNum }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) ReplicaNum() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.ReplicaNum }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.Retention }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) Segment() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.Segment }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) SegmentBytes() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.SegmentBytes }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) SyncReplicaMinNum() pulumi.IntOutput {
	return o.ApplyT(func(v TopicsInstanceList) int { return v.SyncReplicaMinNum }).(pulumi.IntOutput)
}

func (o TopicsInstanceListOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.TopicId }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsInstanceList) string { return v.TopicName }).(pulumi.StringOutput)
}

func (o TopicsInstanceListOutput) UncleanLeaderElectionEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v TopicsInstanceList) bool { return v.UncleanLeaderElectionEnable }).(pulumi.BoolOutput)
}

type TopicsInstanceListArrayOutput struct{ *pulumi.OutputState }

func (TopicsInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicsInstanceList)(nil)).Elem()
}

func (o TopicsInstanceListArrayOutput) ToTopicsInstanceListArrayOutput() TopicsInstanceListArrayOutput {
	return o
}

func (o TopicsInstanceListArrayOutput) ToTopicsInstanceListArrayOutputWithContext(ctx context.Context) TopicsInstanceListArrayOutput {
	return o
}

func (o TopicsInstanceListArrayOutput) Index(i pulumi.IntInput) TopicsInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicsInstanceList {
		return vs[0].([]TopicsInstanceList)[vs[1].(int)]
	}).(TopicsInstanceListOutput)
}

type UsersUserList struct {
	AccountName string `pulumi:"accountName"`
	CreateTime  string `pulumi:"createTime"`
	UpdateTime  string `pulumi:"updateTime"`
}

// UsersUserListInput is an input type that accepts UsersUserListArgs and UsersUserListOutput values.
// You can construct a concrete instance of `UsersUserListInput` via:
//
//          UsersUserListArgs{...}
type UsersUserListInput interface {
	pulumi.Input

	ToUsersUserListOutput() UsersUserListOutput
	ToUsersUserListOutputWithContext(context.Context) UsersUserListOutput
}

type UsersUserListArgs struct {
	AccountName pulumi.StringInput `pulumi:"accountName"`
	CreateTime  pulumi.StringInput `pulumi:"createTime"`
	UpdateTime  pulumi.StringInput `pulumi:"updateTime"`
}

func (UsersUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsersUserList)(nil)).Elem()
}

func (i UsersUserListArgs) ToUsersUserListOutput() UsersUserListOutput {
	return i.ToUsersUserListOutputWithContext(context.Background())
}

func (i UsersUserListArgs) ToUsersUserListOutputWithContext(ctx context.Context) UsersUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersUserListOutput)
}

// UsersUserListArrayInput is an input type that accepts UsersUserListArray and UsersUserListArrayOutput values.
// You can construct a concrete instance of `UsersUserListArrayInput` via:
//
//          UsersUserListArray{ UsersUserListArgs{...} }
type UsersUserListArrayInput interface {
	pulumi.Input

	ToUsersUserListArrayOutput() UsersUserListArrayOutput
	ToUsersUserListArrayOutputWithContext(context.Context) UsersUserListArrayOutput
}

type UsersUserListArray []UsersUserListInput

func (UsersUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsersUserList)(nil)).Elem()
}

func (i UsersUserListArray) ToUsersUserListArrayOutput() UsersUserListArrayOutput {
	return i.ToUsersUserListArrayOutputWithContext(context.Background())
}

func (i UsersUserListArray) ToUsersUserListArrayOutputWithContext(ctx context.Context) UsersUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersUserListArrayOutput)
}

type UsersUserListOutput struct{ *pulumi.OutputState }

func (UsersUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsersUserList)(nil)).Elem()
}

func (o UsersUserListOutput) ToUsersUserListOutput() UsersUserListOutput {
	return o
}

func (o UsersUserListOutput) ToUsersUserListOutputWithContext(ctx context.Context) UsersUserListOutput {
	return o
}

func (o UsersUserListOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type UsersUserListArrayOutput struct{ *pulumi.OutputState }

func (UsersUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsersUserList)(nil)).Elem()
}

func (o UsersUserListArrayOutput) ToUsersUserListArrayOutput() UsersUserListArrayOutput {
	return o
}

func (o UsersUserListArrayOutput) ToUsersUserListArrayOutputWithContext(ctx context.Context) UsersUserListArrayOutput {
	return o
}

func (o UsersUserListArrayOutput) Index(i pulumi.IntInput) UsersUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsersUserList {
		return vs[0].([]UsersUserList)[vs[1].(int)]
	}).(UsersUserListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclListInput)(nil)).Elem(), AclsAclListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclListArrayInput)(nil)).Elem(), AclsAclListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigPtrInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigPtrInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicsInstanceListInput)(nil)).Elem(), TopicsInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicsInstanceListArrayInput)(nil)).Elem(), TopicsInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersUserListInput)(nil)).Elem(), UsersUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersUserListArrayInput)(nil)).Elem(), UsersUserListArray{})
	pulumi.RegisterOutputType(AclsAclListOutput{})
	pulumi.RegisterOutputType(AclsAclListArrayOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(TopicsInstanceListOutput{})
	pulumi.RegisterOutputType(TopicsInstanceListArrayOutput{})
	pulumi.RegisterOutputType(UsersUserListOutput{})
	pulumi.RegisterOutputType(UsersUserListArrayOutput{})
}
