// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectResourceClickhouseConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Password for Clickhouse connection source.
	Password string `pulumi:"password"`
	// Clickhouse connection port.
	Port int `pulumi:"port"`
	// Instance resources for Click House connection sources.
	Resource string `pulumi:"resource"`
	// Whether the Clickhouse connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// The username of the clickhouse connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceClickhouseConnectParamInput is an input type that accepts ConnectResourceClickhouseConnectParamArgs and ConnectResourceClickhouseConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceClickhouseConnectParamInput` via:
//
//          ConnectResourceClickhouseConnectParamArgs{...}
type ConnectResourceClickhouseConnectParamInput interface {
	pulumi.Input

	ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput
	ToConnectResourceClickhouseConnectParamOutputWithContext(context.Context) ConnectResourceClickhouseConnectParamOutput
}

type ConnectResourceClickhouseConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Password for Clickhouse connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// Clickhouse connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resources for Click House connection sources.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Clickhouse connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// The username of the clickhouse connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceClickhouseConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput {
	return i.ToConnectResourceClickhouseConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamOutput)
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return i.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamOutput).ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceClickhouseConnectParamPtrInput is an input type that accepts ConnectResourceClickhouseConnectParamArgs, ConnectResourceClickhouseConnectParamPtr and ConnectResourceClickhouseConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceClickhouseConnectParamPtrInput` via:
//
//          ConnectResourceClickhouseConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceClickhouseConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput
	ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Context) ConnectResourceClickhouseConnectParamPtrOutput
}

type connectResourceClickhouseConnectParamPtrType ConnectResourceClickhouseConnectParamArgs

func ConnectResourceClickhouseConnectParamPtr(v *ConnectResourceClickhouseConnectParamArgs) ConnectResourceClickhouseConnectParamPtrInput {
	return (*connectResourceClickhouseConnectParamPtrType)(v)
}

func (*connectResourceClickhouseConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (i *connectResourceClickhouseConnectParamPtrType) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return i.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceClickhouseConnectParamPtrType) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamPtrOutput)
}

type ConnectResourceClickhouseConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceClickhouseConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return o.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceClickhouseConnectParam) *ConnectResourceClickhouseConnectParam {
		return &v
	}).(ConnectResourceClickhouseConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceClickhouseConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Password for Clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Clickhouse connection port.
func (o ConnectResourceClickhouseConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resources for Click House connection sources.
func (o ConnectResourceClickhouseConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Clickhouse connection source is a self-built cluster.
func (o ConnectResourceClickhouseConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// The username of the clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceClickhouseConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceClickhouseConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) Elem() ConnectResourceClickhouseConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) ConnectResourceClickhouseConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceClickhouseConnectParam
		return ret
	}).(ConnectResourceClickhouseConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceClickhouseConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Password for Clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Clickhouse connection port.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resources for Click House connection sources.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Clickhouse connection source is a self-built cluster.
func (o ConnectResourceClickhouseConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// The username of the clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceDorisConnectParam struct {
	// Doris http CLB port, Usually mapped to port 8040 of be.
	BePort *int `pulumi:"bePort"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Doris  password.
	Password string `pulumi:"password"`
	// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
	Port int `pulumi:"port"`
	// Doris  instanceId.
	Resource string `pulumi:"resource"`
	// Doris Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// Doris vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// Doris vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Doris  The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceDorisConnectParamInput is an input type that accepts ConnectResourceDorisConnectParamArgs and ConnectResourceDorisConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceDorisConnectParamInput` via:
//
//          ConnectResourceDorisConnectParamArgs{...}
type ConnectResourceDorisConnectParamInput interface {
	pulumi.Input

	ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput
	ToConnectResourceDorisConnectParamOutputWithContext(context.Context) ConnectResourceDorisConnectParamOutput
}

type ConnectResourceDorisConnectParamArgs struct {
	// Doris http CLB port, Usually mapped to port 8040 of be.
	BePort pulumi.IntPtrInput `pulumi:"bePort"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Doris  password.
	Password pulumi.StringInput `pulumi:"password"`
	// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
	Port pulumi.IntInput `pulumi:"port"`
	// Doris  instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Doris Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// Doris vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// Doris vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Doris  The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceDorisConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput {
	return i.ToConnectResourceDorisConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamOutput)
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return i.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamOutput).ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceDorisConnectParamPtrInput is an input type that accepts ConnectResourceDorisConnectParamArgs, ConnectResourceDorisConnectParamPtr and ConnectResourceDorisConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceDorisConnectParamPtrInput` via:
//
//          ConnectResourceDorisConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceDorisConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput
	ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Context) ConnectResourceDorisConnectParamPtrOutput
}

type connectResourceDorisConnectParamPtrType ConnectResourceDorisConnectParamArgs

func ConnectResourceDorisConnectParamPtr(v *ConnectResourceDorisConnectParamArgs) ConnectResourceDorisConnectParamPtrInput {
	return (*connectResourceDorisConnectParamPtrType)(v)
}

func (*connectResourceDorisConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (i *connectResourceDorisConnectParamPtrType) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return i.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceDorisConnectParamPtrType) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamPtrOutput)
}

type ConnectResourceDorisConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceDorisConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput {
	return o
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamOutput {
	return o
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return o.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceDorisConnectParam) *ConnectResourceDorisConnectParam {
		return &v
	}).(ConnectResourceDorisConnectParamPtrOutput)
}

// Doris http CLB port, Usually mapped to port 8040 of be.
func (o ConnectResourceDorisConnectParamOutput) BePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *int { return v.BePort }).(pulumi.IntPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDorisConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Doris  password.
func (o ConnectResourceDorisConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
func (o ConnectResourceDorisConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Doris  instanceId.
func (o ConnectResourceDorisConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Doris Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceDorisConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// Doris vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// Doris vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Doris  The username of the connection source.
func (o ConnectResourceDorisConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceDorisConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceDorisConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (o ConnectResourceDorisConnectParamPtrOutput) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDorisConnectParamPtrOutput) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDorisConnectParamPtrOutput) Elem() ConnectResourceDorisConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) ConnectResourceDorisConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceDorisConnectParam
		return ret
	}).(ConnectResourceDorisConnectParamOutput)
}

// Doris http CLB port, Usually mapped to port 8040 of be.
func (o ConnectResourceDorisConnectParamPtrOutput) BePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *int {
		if v == nil {
			return nil
		}
		return v.BePort
	}).(pulumi.IntPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDorisConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Doris  password.
func (o ConnectResourceDorisConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
func (o ConnectResourceDorisConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Doris  instanceId.
func (o ConnectResourceDorisConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Doris Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceDorisConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// Doris vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// Doris vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Doris  The username of the connection source.
func (o ConnectResourceDorisConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceDtsConnectParam struct {
	// Id of the Dts consumption group.
	GroupId string `pulumi:"groupId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// The password of the Dts consumption group.
	Password string `pulumi:"password"`
	// Dts port.
	Port int `pulumi:"port"`
	// Dts instance Id.
	Resource string `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic string `pulumi:"topic"`
	// The account number of the Dts consumption group.
	UserName string `pulumi:"userName"`
}

// ConnectResourceDtsConnectParamInput is an input type that accepts ConnectResourceDtsConnectParamArgs and ConnectResourceDtsConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceDtsConnectParamInput` via:
//
//          ConnectResourceDtsConnectParamArgs{...}
type ConnectResourceDtsConnectParamInput interface {
	pulumi.Input

	ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput
	ToConnectResourceDtsConnectParamOutputWithContext(context.Context) ConnectResourceDtsConnectParamOutput
}

type ConnectResourceDtsConnectParamArgs struct {
	// Id of the Dts consumption group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// The password of the Dts consumption group.
	Password pulumi.StringInput `pulumi:"password"`
	// Dts port.
	Port pulumi.IntInput `pulumi:"port"`
	// Dts instance Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic pulumi.StringInput `pulumi:"topic"`
	// The account number of the Dts consumption group.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceDtsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput {
	return i.ToConnectResourceDtsConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamOutput)
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return i.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamOutput).ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceDtsConnectParamPtrInput is an input type that accepts ConnectResourceDtsConnectParamArgs, ConnectResourceDtsConnectParamPtr and ConnectResourceDtsConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceDtsConnectParamPtrInput` via:
//
//          ConnectResourceDtsConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceDtsConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput
	ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Context) ConnectResourceDtsConnectParamPtrOutput
}

type connectResourceDtsConnectParamPtrType ConnectResourceDtsConnectParamArgs

func ConnectResourceDtsConnectParamPtr(v *ConnectResourceDtsConnectParamArgs) ConnectResourceDtsConnectParamPtrInput {
	return (*connectResourceDtsConnectParamPtrType)(v)
}

func (*connectResourceDtsConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (i *connectResourceDtsConnectParamPtrType) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return i.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceDtsConnectParamPtrType) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamPtrOutput)
}

type ConnectResourceDtsConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceDtsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput {
	return o
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamOutput {
	return o
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return o.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceDtsConnectParam) *ConnectResourceDtsConnectParam {
		return &v
	}).(ConnectResourceDtsConnectParamPtrOutput)
}

// Id of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.GroupId }).(pulumi.StringOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDtsConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// The password of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Dts port.
func (o ConnectResourceDtsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Dts instance Id.
func (o ConnectResourceDtsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Topic subscribed by Dts.
func (o ConnectResourceDtsConnectParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Topic }).(pulumi.StringOutput)
}

// The account number of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceDtsConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceDtsConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (o ConnectResourceDtsConnectParamPtrOutput) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDtsConnectParamPtrOutput) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDtsConnectParamPtrOutput) Elem() ConnectResourceDtsConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) ConnectResourceDtsConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceDtsConnectParam
		return ret
	}).(ConnectResourceDtsConnectParamOutput)
}

// Id of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDtsConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// The password of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Dts port.
func (o ConnectResourceDtsConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o ConnectResourceDtsConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Topic subscribed by Dts.
func (o ConnectResourceDtsConnectParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

// The account number of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceEsConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Es The password of the connection source.
	Password string `pulumi:"password"`
	// Es port.
	Port int `pulumi:"port"`
	// Instance resource of Es connection source.
	Resource string `pulumi:"resource"`
	// Whether the Es connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Es The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceEsConnectParamInput is an input type that accepts ConnectResourceEsConnectParamArgs and ConnectResourceEsConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceEsConnectParamInput` via:
//
//          ConnectResourceEsConnectParamArgs{...}
type ConnectResourceEsConnectParamInput interface {
	pulumi.Input

	ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput
	ToConnectResourceEsConnectParamOutputWithContext(context.Context) ConnectResourceEsConnectParamOutput
}

type ConnectResourceEsConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Es The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// Es port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of Es connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Es connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Es The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceEsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceEsConnectParam)(nil)).Elem()
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput {
	return i.ToConnectResourceEsConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamOutput)
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return i.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamOutput).ToConnectResourceEsConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceEsConnectParamPtrInput is an input type that accepts ConnectResourceEsConnectParamArgs, ConnectResourceEsConnectParamPtr and ConnectResourceEsConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceEsConnectParamPtrInput` via:
//
//          ConnectResourceEsConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceEsConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput
	ToConnectResourceEsConnectParamPtrOutputWithContext(context.Context) ConnectResourceEsConnectParamPtrOutput
}

type connectResourceEsConnectParamPtrType ConnectResourceEsConnectParamArgs

func ConnectResourceEsConnectParamPtr(v *ConnectResourceEsConnectParamArgs) ConnectResourceEsConnectParamPtrInput {
	return (*connectResourceEsConnectParamPtrType)(v)
}

func (*connectResourceEsConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceEsConnectParam)(nil)).Elem()
}

func (i *connectResourceEsConnectParamPtrType) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return i.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceEsConnectParamPtrType) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamPtrOutput)
}

type ConnectResourceEsConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceEsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceEsConnectParam)(nil)).Elem()
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput {
	return o
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamOutput {
	return o
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return o.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceEsConnectParam) *ConnectResourceEsConnectParam {
		return &v
	}).(ConnectResourceEsConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceEsConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Es The password of the connection source.
func (o ConnectResourceEsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Es port.
func (o ConnectResourceEsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of Es connection source.
func (o ConnectResourceEsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Es connection source is a self-built cluster.
func (o ConnectResourceEsConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Es The username of the connection source.
func (o ConnectResourceEsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceEsConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceEsConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceEsConnectParam)(nil)).Elem()
}

func (o ConnectResourceEsConnectParamPtrOutput) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceEsConnectParamPtrOutput) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceEsConnectParamPtrOutput) Elem() ConnectResourceEsConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) ConnectResourceEsConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceEsConnectParam
		return ret
	}).(ConnectResourceEsConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceEsConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Es The password of the connection source.
func (o ConnectResourceEsConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Es port.
func (o ConnectResourceEsConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of Es connection source.
func (o ConnectResourceEsConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Es connection source is a self-built cluster.
func (o ConnectResourceEsConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Es The username of the connection source.
func (o ConnectResourceEsConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceKafkaConnectParam struct {
	// Kafka broker ip, Mandatory when self-built.
	BrokerAddress *string `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// CKafka instanceId region, Required when crossing regions.
	Region *string `pulumi:"region"`
	// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
	Resource *string `pulumi:"resource"`
	// Whether it is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
}

// ConnectResourceKafkaConnectParamInput is an input type that accepts ConnectResourceKafkaConnectParamArgs and ConnectResourceKafkaConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceKafkaConnectParamInput` via:
//
//          ConnectResourceKafkaConnectParamArgs{...}
type ConnectResourceKafkaConnectParamInput interface {
	pulumi.Input

	ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput
	ToConnectResourceKafkaConnectParamOutputWithContext(context.Context) ConnectResourceKafkaConnectParamOutput
}

type ConnectResourceKafkaConnectParamArgs struct {
	// Kafka broker ip, Mandatory when self-built.
	BrokerAddress pulumi.StringPtrInput `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// CKafka instanceId region, Required when crossing regions.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Whether it is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
}

func (ConnectResourceKafkaConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput {
	return i.ToConnectResourceKafkaConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamOutput)
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return i.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamOutput).ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceKafkaConnectParamPtrInput is an input type that accepts ConnectResourceKafkaConnectParamArgs, ConnectResourceKafkaConnectParamPtr and ConnectResourceKafkaConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceKafkaConnectParamPtrInput` via:
//
//          ConnectResourceKafkaConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceKafkaConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput
	ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Context) ConnectResourceKafkaConnectParamPtrOutput
}

type connectResourceKafkaConnectParamPtrType ConnectResourceKafkaConnectParamArgs

func ConnectResourceKafkaConnectParamPtr(v *ConnectResourceKafkaConnectParamArgs) ConnectResourceKafkaConnectParamPtrInput {
	return (*connectResourceKafkaConnectParamPtrType)(v)
}

func (*connectResourceKafkaConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (i *connectResourceKafkaConnectParamPtrType) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return i.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceKafkaConnectParamPtrType) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamPtrOutput)
}

type ConnectResourceKafkaConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceKafkaConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return o.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceKafkaConnectParam) *ConnectResourceKafkaConnectParam {
		return &v
	}).(ConnectResourceKafkaConnectParamPtrOutput)
}

// Kafka broker ip, Mandatory when self-built.
func (o ConnectResourceKafkaConnectParamOutput) BrokerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.BrokerAddress }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceKafkaConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// CKafka instanceId region, Required when crossing regions.
func (o ConnectResourceKafkaConnectParamOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceKafkaConnectParamOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster, default: false.
func (o ConnectResourceKafkaConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

type ConnectResourceKafkaConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceKafkaConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (o ConnectResourceKafkaConnectParamPtrOutput) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamPtrOutput) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamPtrOutput) Elem() ConnectResourceKafkaConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) ConnectResourceKafkaConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceKafkaConnectParam
		return ret
	}).(ConnectResourceKafkaConnectParamOutput)
}

// Kafka broker ip, Mandatory when self-built.
func (o ConnectResourceKafkaConnectParamPtrOutput) BrokerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.BrokerAddress
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceKafkaConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// CKafka instanceId region, Required when crossing regions.
func (o ConnectResourceKafkaConnectParamPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceKafkaConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster, default: false.
func (o ConnectResourceKafkaConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

type ConnectResourceMariadbConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// MariaDB password.
	Password string `pulumi:"password"`
	// MariaDB port.
	Port int `pulumi:"port"`
	// MariaDB instanceId.
	Resource string `pulumi:"resource"`
	// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// MariaDB The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMariadbConnectParamInput is an input type that accepts ConnectResourceMariadbConnectParamArgs and ConnectResourceMariadbConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMariadbConnectParamInput` via:
//
//          ConnectResourceMariadbConnectParamArgs{...}
type ConnectResourceMariadbConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput
	ToConnectResourceMariadbConnectParamOutputWithContext(context.Context) ConnectResourceMariadbConnectParamOutput
}

type ConnectResourceMariadbConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// MariaDB password.
	Password pulumi.StringInput `pulumi:"password"`
	// MariaDB port.
	Port pulumi.IntInput `pulumi:"port"`
	// MariaDB instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// MariaDB The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMariadbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput {
	return i.ToConnectResourceMariadbConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamOutput)
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return i.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamOutput).ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMariadbConnectParamPtrInput is an input type that accepts ConnectResourceMariadbConnectParamArgs, ConnectResourceMariadbConnectParamPtr and ConnectResourceMariadbConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMariadbConnectParamPtrInput` via:
//
//          ConnectResourceMariadbConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceMariadbConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput
	ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Context) ConnectResourceMariadbConnectParamPtrOutput
}

type connectResourceMariadbConnectParamPtrType ConnectResourceMariadbConnectParamArgs

func ConnectResourceMariadbConnectParamPtr(v *ConnectResourceMariadbConnectParamArgs) ConnectResourceMariadbConnectParamPtrInput {
	return (*connectResourceMariadbConnectParamPtrType)(v)
}

func (*connectResourceMariadbConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (i *connectResourceMariadbConnectParamPtrType) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return i.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMariadbConnectParamPtrType) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamPtrOutput)
}

type ConnectResourceMariadbConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMariadbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return o.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMariadbConnectParam) *ConnectResourceMariadbConnectParam {
		return &v
	}).(ConnectResourceMariadbConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMariadbConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// MariaDB password.
func (o ConnectResourceMariadbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MariaDB port.
func (o ConnectResourceMariadbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// MariaDB instanceId.
func (o ConnectResourceMariadbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// MariaDB The username of the connection source.
func (o ConnectResourceMariadbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMariadbConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMariadbConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMariadbConnectParamPtrOutput) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamPtrOutput) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamPtrOutput) Elem() ConnectResourceMariadbConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) ConnectResourceMariadbConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMariadbConnectParam
		return ret
	}).(ConnectResourceMariadbConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMariadbConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// MariaDB password.
func (o ConnectResourceMariadbConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MariaDB port.
func (o ConnectResourceMariadbConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// MariaDB instanceId.
func (o ConnectResourceMariadbConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// MariaDB The username of the connection source.
func (o ConnectResourceMariadbConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceMongodbConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Password for the source of the Mongo DB connection.
	Password string `pulumi:"password"`
	// MongoDB port.
	Port int `pulumi:"port"`
	// Instance resource of Mongo DB connection source.
	Resource string `pulumi:"resource"`
	// Whether the Mongo DB connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// The username of the Mongo DB connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMongodbConnectParamInput is an input type that accepts ConnectResourceMongodbConnectParamArgs and ConnectResourceMongodbConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMongodbConnectParamInput` via:
//
//          ConnectResourceMongodbConnectParamArgs{...}
type ConnectResourceMongodbConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput
	ToConnectResourceMongodbConnectParamOutputWithContext(context.Context) ConnectResourceMongodbConnectParamOutput
}

type ConnectResourceMongodbConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Password for the source of the Mongo DB connection.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of Mongo DB connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Mongo DB connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// The username of the Mongo DB connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMongodbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput {
	return i.ToConnectResourceMongodbConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamOutput)
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return i.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamOutput).ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMongodbConnectParamPtrInput is an input type that accepts ConnectResourceMongodbConnectParamArgs, ConnectResourceMongodbConnectParamPtr and ConnectResourceMongodbConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMongodbConnectParamPtrInput` via:
//
//          ConnectResourceMongodbConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceMongodbConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput
	ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Context) ConnectResourceMongodbConnectParamPtrOutput
}

type connectResourceMongodbConnectParamPtrType ConnectResourceMongodbConnectParamArgs

func ConnectResourceMongodbConnectParamPtr(v *ConnectResourceMongodbConnectParamArgs) ConnectResourceMongodbConnectParamPtrInput {
	return (*connectResourceMongodbConnectParamPtrType)(v)
}

func (*connectResourceMongodbConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (i *connectResourceMongodbConnectParamPtrType) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return i.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMongodbConnectParamPtrType) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamPtrOutput)
}

type ConnectResourceMongodbConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMongodbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return o.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMongodbConnectParam) *ConnectResourceMongodbConnectParam {
		return &v
	}).(ConnectResourceMongodbConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMongodbConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Password for the source of the Mongo DB connection.
func (o ConnectResourceMongodbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB port.
func (o ConnectResourceMongodbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Mongo DB connection source is a self-built cluster.
func (o ConnectResourceMongodbConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMongodbConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
func (o ConnectResourceMongodbConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// The username of the Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMongodbConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMongodbConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMongodbConnectParamPtrOutput) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamPtrOutput) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamPtrOutput) Elem() ConnectResourceMongodbConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) ConnectResourceMongodbConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMongodbConnectParam
		return ret
	}).(ConnectResourceMongodbConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMongodbConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Password for the source of the Mongo DB connection.
func (o ConnectResourceMongodbConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MongoDB port.
func (o ConnectResourceMongodbConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Mongo DB connection source is a self-built cluster.
func (o ConnectResourceMongodbConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMongodbConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
func (o ConnectResourceMongodbConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// The username of the Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceMysqlConnectParam struct {
	// Required when type is TDSQL C_MYSQL.
	ClusterId *string `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Mysql connection source password.
	Password string `pulumi:"password"`
	// MySQL port.
	Port int `pulumi:"port"`
	// Instance resource of My SQL connection source.
	Resource string `pulumi:"resource"`
	// Mysql Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Username of Mysql connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMysqlConnectParamInput is an input type that accepts ConnectResourceMysqlConnectParamArgs and ConnectResourceMysqlConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMysqlConnectParamInput` via:
//
//          ConnectResourceMysqlConnectParamArgs{...}
type ConnectResourceMysqlConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput
	ToConnectResourceMysqlConnectParamOutputWithContext(context.Context) ConnectResourceMysqlConnectParamOutput
}

type ConnectResourceMysqlConnectParamArgs struct {
	// Required when type is TDSQL C_MYSQL.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Mysql connection source password.
	Password pulumi.StringInput `pulumi:"password"`
	// MySQL port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of My SQL connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Mysql Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Username of Mysql connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMysqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput {
	return i.ToConnectResourceMysqlConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamOutput)
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return i.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamOutput).ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMysqlConnectParamPtrInput is an input type that accepts ConnectResourceMysqlConnectParamArgs, ConnectResourceMysqlConnectParamPtr and ConnectResourceMysqlConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMysqlConnectParamPtrInput` via:
//
//          ConnectResourceMysqlConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceMysqlConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput
	ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Context) ConnectResourceMysqlConnectParamPtrOutput
}

type connectResourceMysqlConnectParamPtrType ConnectResourceMysqlConnectParamArgs

func ConnectResourceMysqlConnectParamPtr(v *ConnectResourceMysqlConnectParamArgs) ConnectResourceMysqlConnectParamPtrInput {
	return (*connectResourceMysqlConnectParamPtrType)(v)
}

func (*connectResourceMysqlConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (i *connectResourceMysqlConnectParamPtrType) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return i.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMysqlConnectParamPtrType) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamPtrOutput)
}

type ConnectResourceMysqlConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMysqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return o.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMysqlConnectParam) *ConnectResourceMysqlConnectParam {
		return &v
	}).(ConnectResourceMysqlConnectParamPtrOutput)
}

// Required when type is TDSQL C_MYSQL.
func (o ConnectResourceMysqlConnectParamOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMysqlConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Mysql connection source password.
func (o ConnectResourceMysqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MySQL port.
func (o ConnectResourceMysqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of My SQL connection source.
func (o ConnectResourceMysqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Mysql Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceMysqlConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Username of Mysql connection source.
func (o ConnectResourceMysqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMysqlConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMysqlConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (o ConnectResourceMysqlConnectParamPtrOutput) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamPtrOutput) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamPtrOutput) Elem() ConnectResourceMysqlConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) ConnectResourceMysqlConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMysqlConnectParam
		return ret
	}).(ConnectResourceMysqlConnectParamOutput)
}

// Required when type is TDSQL C_MYSQL.
func (o ConnectResourceMysqlConnectParamPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMysqlConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Mysql connection source password.
func (o ConnectResourceMysqlConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MySQL port.
func (o ConnectResourceMysqlConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of My SQL connection source.
func (o ConnectResourceMysqlConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Mysql Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceMysqlConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Username of Mysql connection source.
func (o ConnectResourceMysqlConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourcePostgresqlConnectParam struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId *string `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// PostgreSQL password.
	Password string `pulumi:"password"`
	// PostgreSQL port.
	Port int `pulumi:"port"`
	// PostgreSQL instanceId.
	Resource string `pulumi:"resource"`
	// PostgreSQL Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// PostgreSQL The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourcePostgresqlConnectParamInput is an input type that accepts ConnectResourcePostgresqlConnectParamArgs and ConnectResourcePostgresqlConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourcePostgresqlConnectParamInput` via:
//
//          ConnectResourcePostgresqlConnectParamArgs{...}
type ConnectResourcePostgresqlConnectParamInput interface {
	pulumi.Input

	ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput
	ToConnectResourcePostgresqlConnectParamOutputWithContext(context.Context) ConnectResourcePostgresqlConnectParamOutput
}

type ConnectResourcePostgresqlConnectParamArgs struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// PostgreSQL password.
	Password pulumi.StringInput `pulumi:"password"`
	// PostgreSQL port.
	Port pulumi.IntInput `pulumi:"port"`
	// PostgreSQL instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// PostgreSQL Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// PostgreSQL The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourcePostgresqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput {
	return i.ToConnectResourcePostgresqlConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamOutput)
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return i.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamOutput).ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourcePostgresqlConnectParamPtrInput is an input type that accepts ConnectResourcePostgresqlConnectParamArgs, ConnectResourcePostgresqlConnectParamPtr and ConnectResourcePostgresqlConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourcePostgresqlConnectParamPtrInput` via:
//
//          ConnectResourcePostgresqlConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourcePostgresqlConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput
	ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Context) ConnectResourcePostgresqlConnectParamPtrOutput
}

type connectResourcePostgresqlConnectParamPtrType ConnectResourcePostgresqlConnectParamArgs

func ConnectResourcePostgresqlConnectParamPtr(v *ConnectResourcePostgresqlConnectParamArgs) ConnectResourcePostgresqlConnectParamPtrInput {
	return (*connectResourcePostgresqlConnectParamPtrType)(v)
}

func (*connectResourcePostgresqlConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (i *connectResourcePostgresqlConnectParamPtrType) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return i.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourcePostgresqlConnectParamPtrType) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamPtrOutput)
}

type ConnectResourcePostgresqlConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourcePostgresqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return o.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourcePostgresqlConnectParam) *ConnectResourcePostgresqlConnectParam {
		return &v
	}).(ConnectResourcePostgresqlConnectParamPtrOutput)
}

// Required when type is TDSQL C_POSTGRESQL.
func (o ConnectResourcePostgresqlConnectParamOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourcePostgresqlConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// PostgreSQL password.
func (o ConnectResourcePostgresqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// PostgreSQL port.
func (o ConnectResourcePostgresqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// PostgreSQL instanceId.
func (o ConnectResourcePostgresqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// PostgreSQL Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourcePostgresqlConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// PostgreSQL The username of the connection source.
func (o ConnectResourcePostgresqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourcePostgresqlConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourcePostgresqlConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) Elem() ConnectResourcePostgresqlConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) ConnectResourcePostgresqlConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourcePostgresqlConnectParam
		return ret
	}).(ConnectResourcePostgresqlConnectParamOutput)
}

// Required when type is TDSQL C_POSTGRESQL.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// PostgreSQL password.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL port.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL instanceId.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL The username of the connection source.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceSqlserverConnectParam struct {
	// Whether to update to the associated Dip task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// SQLServer password.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// SQLServer instanceId.
	Resource string `pulumi:"resource"`
	// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// SQLServer The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceSqlserverConnectParamInput is an input type that accepts ConnectResourceSqlserverConnectParamArgs and ConnectResourceSqlserverConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceSqlserverConnectParamInput` via:
//
//          ConnectResourceSqlserverConnectParamArgs{...}
type ConnectResourceSqlserverConnectParamInput interface {
	pulumi.Input

	ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput
	ToConnectResourceSqlserverConnectParamOutputWithContext(context.Context) ConnectResourceSqlserverConnectParamOutput
}

type ConnectResourceSqlserverConnectParamArgs struct {
	// Whether to update to the associated Dip task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// SQLServer password.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// SQLServer instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// SQLServer The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceSqlserverConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput {
	return i.ToConnectResourceSqlserverConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamOutput)
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return i.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamOutput).ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceSqlserverConnectParamPtrInput is an input type that accepts ConnectResourceSqlserverConnectParamArgs, ConnectResourceSqlserverConnectParamPtr and ConnectResourceSqlserverConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceSqlserverConnectParamPtrInput` via:
//
//          ConnectResourceSqlserverConnectParamArgs{...}
//
//  or:
//
//          nil
type ConnectResourceSqlserverConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput
	ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Context) ConnectResourceSqlserverConnectParamPtrOutput
}

type connectResourceSqlserverConnectParamPtrType ConnectResourceSqlserverConnectParamArgs

func ConnectResourceSqlserverConnectParamPtr(v *ConnectResourceSqlserverConnectParamArgs) ConnectResourceSqlserverConnectParamPtrInput {
	return (*connectResourceSqlserverConnectParamPtrType)(v)
}

func (*connectResourceSqlserverConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (i *connectResourceSqlserverConnectParamPtrType) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return i.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceSqlserverConnectParamPtrType) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamPtrOutput)
}

type ConnectResourceSqlserverConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceSqlserverConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return o.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceSqlserverConnectParam) *ConnectResourceSqlserverConnectParam {
		return &v
	}).(ConnectResourceSqlserverConnectParamPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceSqlserverConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// SQLServer password.
func (o ConnectResourceSqlserverConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o ConnectResourceSqlserverConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// SQLServer instanceId.
func (o ConnectResourceSqlserverConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// SQLServer The username of the connection source.
func (o ConnectResourceSqlserverConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceSqlserverConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceSqlserverConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) Elem() ConnectResourceSqlserverConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) ConnectResourceSqlserverConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceSqlserverConnectParam
		return ret
	}).(ConnectResourceSqlserverConnectParamOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceSqlserverConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// SQLServer password.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// SQLServer port.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// SQLServer instanceId.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// SQLServer The username of the connection source.
func (o ConnectResourceSqlserverConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type InstanceConfig struct {
	// Automatic creation. true: enabled, false: not enabled.
	AutoCreateTopicEnable bool `pulumi:"autoCreateTopicEnable"`
	// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
	DefaultNumPartitions int `pulumi:"defaultNumPartitions"`
	// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
	DefaultReplicationFactor int `pulumi:"defaultReplicationFactor"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//          InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

type InstanceConfigArgs struct {
	// Automatic creation. true: enabled, false: not enabled.
	AutoCreateTopicEnable pulumi.BoolInput `pulumi:"autoCreateTopicEnable"`
	// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
	DefaultNumPartitions pulumi.IntInput `pulumi:"defaultNumPartitions"`
	// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
	DefaultReplicationFactor pulumi.IntInput `pulumi:"defaultReplicationFactor"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput).ToInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceConfigPtrInput is an input type that accepts InstanceConfigArgs, InstanceConfigPtr and InstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceConfigPtrInput` via:
//
//          InstanceConfigArgs{...}
//
//  or:
//
//          nil
type InstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceConfigPtrOutput() InstanceConfigPtrOutput
	ToInstanceConfigPtrOutputWithContext(context.Context) InstanceConfigPtrOutput
}

type instanceConfigPtrType InstanceConfigArgs

func InstanceConfigPtr(v *InstanceConfigArgs) InstanceConfigPtrInput {
	return (*instanceConfigPtrType)(v)
}

func (*instanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigPtrOutput)
}

type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfig) *InstanceConfig {
		return &v
	}).(InstanceConfigPtrOutput)
}

// Automatic creation. true: enabled, false: not enabled.
func (o InstanceConfigOutput) AutoCreateTopicEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceConfig) bool { return v.AutoCreateTopicEnable }).(pulumi.BoolOutput)
}

// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
func (o InstanceConfigOutput) DefaultNumPartitions() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultNumPartitions }).(pulumi.IntOutput)
}

// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
func (o InstanceConfigOutput) DefaultReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultReplicationFactor }).(pulumi.IntOutput)
}

type InstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) Elem() InstanceConfigOutput {
	return o.ApplyT(func(v *InstanceConfig) InstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceConfig
		return ret
	}).(InstanceConfigOutput)
}

// Automatic creation. true: enabled, false: not enabled.
func (o InstanceConfigPtrOutput) AutoCreateTopicEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoCreateTopicEnable
	}).(pulumi.BoolPtrOutput)
}

// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
func (o InstanceConfigPtrOutput) DefaultNumPartitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultNumPartitions
	}).(pulumi.IntPtrOutput)
}

// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
func (o InstanceConfigPtrOutput) DefaultReplicationFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultReplicationFactor
	}).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfig struct {
	// Minimum retention time, in minutes.
	BottomRetention *int `pulumi:"bottomRetention"`
	// Disk quota threshold (in percentage) for triggering the message retention time change event.
	DiskQuotaPercentage *int `pulumi:"diskQuotaPercentage"`
	// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
	Enable *int `pulumi:"enable"`
	// Percentage by which the message retention time is shortened each time.
	StepForwardPercentage *int `pulumi:"stepForwardPercentage"`
}

// InstanceDynamicRetentionConfigInput is an input type that accepts InstanceDynamicRetentionConfigArgs and InstanceDynamicRetentionConfigOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigInput` via:
//
//          InstanceDynamicRetentionConfigArgs{...}
type InstanceDynamicRetentionConfigInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput
	ToInstanceDynamicRetentionConfigOutputWithContext(context.Context) InstanceDynamicRetentionConfigOutput
}

type InstanceDynamicRetentionConfigArgs struct {
	// Minimum retention time, in minutes.
	BottomRetention pulumi.IntPtrInput `pulumi:"bottomRetention"`
	// Disk quota threshold (in percentage) for triggering the message retention time change event.
	DiskQuotaPercentage pulumi.IntPtrInput `pulumi:"diskQuotaPercentage"`
	// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
	Enable pulumi.IntPtrInput `pulumi:"enable"`
	// Percentage by which the message retention time is shortened each time.
	StepForwardPercentage pulumi.IntPtrInput `pulumi:"stepForwardPercentage"`
}

func (InstanceDynamicRetentionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return i.ToInstanceDynamicRetentionConfigOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput)
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput).ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx)
}

// InstanceDynamicRetentionConfigPtrInput is an input type that accepts InstanceDynamicRetentionConfigArgs, InstanceDynamicRetentionConfigPtr and InstanceDynamicRetentionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigPtrInput` via:
//
//          InstanceDynamicRetentionConfigArgs{...}
//
//  or:
//
//          nil
type InstanceDynamicRetentionConfigPtrInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput
	ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Context) InstanceDynamicRetentionConfigPtrOutput
}

type instanceDynamicRetentionConfigPtrType InstanceDynamicRetentionConfigArgs

func InstanceDynamicRetentionConfigPtr(v *InstanceDynamicRetentionConfigArgs) InstanceDynamicRetentionConfigPtrInput {
	return (*instanceDynamicRetentionConfigPtrType)(v)
}

func (*instanceDynamicRetentionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigPtrOutput)
}

type InstanceDynamicRetentionConfigOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDynamicRetentionConfig) *InstanceDynamicRetentionConfig {
		return &v
	}).(InstanceDynamicRetentionConfigPtrOutput)
}

// Minimum retention time, in minutes.
func (o InstanceDynamicRetentionConfigOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.BottomRetention }).(pulumi.IntPtrOutput)
}

// Disk quota threshold (in percentage) for triggering the message retention time change event.
func (o InstanceDynamicRetentionConfigOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.DiskQuotaPercentage }).(pulumi.IntPtrOutput)
}

// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
func (o InstanceDynamicRetentionConfigOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.Enable }).(pulumi.IntPtrOutput)
}

// Percentage by which the message retention time is shortened each time.
func (o InstanceDynamicRetentionConfigOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.StepForwardPercentage }).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) Elem() InstanceDynamicRetentionConfigOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) InstanceDynamicRetentionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceDynamicRetentionConfig
		return ret
	}).(InstanceDynamicRetentionConfigOutput)
}

// Minimum retention time, in minutes.
func (o InstanceDynamicRetentionConfigPtrOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.BottomRetention
	}).(pulumi.IntPtrOutput)
}

// Disk quota threshold (in percentage) for triggering the message retention time change event.
func (o InstanceDynamicRetentionConfigPtrOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskQuotaPercentage
	}).(pulumi.IntPtrOutput)
}

// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
func (o InstanceDynamicRetentionConfigPtrOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.IntPtrOutput)
}

// Percentage by which the message retention time is shortened each time.
func (o InstanceDynamicRetentionConfigPtrOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.StepForwardPercentage
	}).(pulumi.IntPtrOutput)
}

type InstanceTag struct {
	// Tag key.
	Key string `pulumi:"key"`
	// Tag value.
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//          InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	// Tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//          InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

// Tag key.
func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag value.
func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type GetAclsAclList struct {
	// Host substr used for querying.
	Host string `pulumi:"host"`
	// ACL operation mode.
	OperationType string `pulumi:"operationType"`
	// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
	PermissionType string `pulumi:"permissionType"`
	// User which can access. `*` means that any user can access.
	Principal string `pulumi:"principal"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName string `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType string `pulumi:"resourceType"`
}

// GetAclsAclListInput is an input type that accepts GetAclsAclListArgs and GetAclsAclListOutput values.
// You can construct a concrete instance of `GetAclsAclListInput` via:
//
//          GetAclsAclListArgs{...}
type GetAclsAclListInput interface {
	pulumi.Input

	ToGetAclsAclListOutput() GetAclsAclListOutput
	ToGetAclsAclListOutputWithContext(context.Context) GetAclsAclListOutput
}

type GetAclsAclListArgs struct {
	// Host substr used for querying.
	Host pulumi.StringInput `pulumi:"host"`
	// ACL operation mode.
	OperationType pulumi.StringInput `pulumi:"operationType"`
	// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
	PermissionType pulumi.StringInput `pulumi:"permissionType"`
	// User which can access. `*` means that any user can access.
	Principal pulumi.StringInput `pulumi:"principal"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetAclsAclListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return i.ToGetAclsAclListOutputWithContext(context.Background())
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListOutput)
}

// GetAclsAclListArrayInput is an input type that accepts GetAclsAclListArray and GetAclsAclListArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListArrayInput` via:
//
//          GetAclsAclListArray{ GetAclsAclListArgs{...} }
type GetAclsAclListArrayInput interface {
	pulumi.Input

	ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput
	ToGetAclsAclListArrayOutputWithContext(context.Context) GetAclsAclListArrayOutput
}

type GetAclsAclListArray []GetAclsAclListInput

func (GetAclsAclListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return i.ToGetAclsAclListArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListArrayOutput)
}

type GetAclsAclListOutput struct{ *pulumi.OutputState }

func (GetAclsAclListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return o
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return o
}

// Host substr used for querying.
func (o GetAclsAclListOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Host }).(pulumi.StringOutput)
}

// ACL operation mode.
func (o GetAclsAclListOutput) OperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.OperationType }).(pulumi.StringOutput)
}

// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
func (o GetAclsAclListOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.PermissionType }).(pulumi.StringOutput)
}

// User which can access. `*` means that any user can access.
func (o GetAclsAclListOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Principal }).(pulumi.StringOutput)
}

// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
func (o GetAclsAclListOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.ResourceName }).(pulumi.StringOutput)
}

// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
func (o GetAclsAclListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetAclsAclListArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) Index(i pulumi.IntInput) GetAclsAclListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclList {
		return vs[0].([]GetAclsAclList)[vs[1].(int)]
	}).(GetAclsAclListOutput)
}

type GetInstancesFilter struct {
	// The field that needs to be filtered.
	Name string `pulumi:"name"`
	// The filtered value of the field.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//          GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// The field that needs to be filtered.
	Name pulumi.StringInput `pulumi:"name"`
	// The filtered value of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//          GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// The field that needs to be filtered.
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The filtered value of the field.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstanceList struct {
	// Instance bandwidth, in Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The time when the instance was created.
	CreateTime int `pulumi:"createTime"`
	// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
	Cvm int `pulumi:"cvm"`
	// The storage size of the instance, in GB.
	DiskSize int `pulumi:"diskSize"`
	// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
	DiskType string `pulumi:"diskType"`
	// The instance expiration time.
	ExpireTime int `pulumi:"expireTime"`
	// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
	Healthy int `pulumi:"healthy"`
	// Instance status information.
	HealthyMessage string `pulumi:"healthyMessage"`
	// The instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The instance name.
	InstanceName string `pulumi:"instanceName"`
	// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
	InstanceType string `pulumi:"instanceType"`
	// Whether it is an internal customer. A value of 1 indicates an internal customer.
	IsInternal int `pulumi:"isInternal"`
	// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
	MaxPartitionNumber int `pulumi:"maxPartitionNumber"`
	// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
	MaxTopicNumber int `pulumi:"maxTopicNumber"`
	// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
	PartitionNumber int `pulumi:"partitionNumber"`
	// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetwork int `pulumi:"publicNetwork"`
	// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetworkChargeType string `pulumi:"publicNetworkChargeType"`
	// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
	RebalanceTime string `pulumi:"rebalanceTime"`
	// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
	RenewFlag int `pulumi:"renewFlag"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Status int `pulumi:"status"`
	// Subnet id.
	SubnetId string `pulumi:"subnetId"`
	// Tag information.
	Tags []GetInstancesInstanceListTag `pulumi:"tags"`
	// The number of topics.
	TopicNum int `pulumi:"topicNum"`
	// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
	Version string `pulumi:"version"`
	// Virtual IP.
	Vip string `pulumi:"vip"`
	// Virtual IP entities.
	VipList GetInstancesInstanceListVipList `pulumi:"vipList"`
	// VpcId, if empty, indicates that it is the underlying network.
	VpcId string `pulumi:"vpcId"`
	// Virtual PORT.
	Vport string `pulumi:"vport"`
	// Availability Zone ID.
	ZoneId int `pulumi:"zoneId"`
	// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
	ZoneIds []int `pulumi:"zoneIds"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//          GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Instance bandwidth, in Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The time when the instance was created.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
	Cvm pulumi.IntInput `pulumi:"cvm"`
	// The storage size of the instance, in GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The instance expiration time.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
	Healthy pulumi.IntInput `pulumi:"healthy"`
	// Instance status information.
	HealthyMessage pulumi.StringInput `pulumi:"healthyMessage"`
	// The instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The instance name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Whether it is an internal customer. A value of 1 indicates an internal customer.
	IsInternal pulumi.IntInput `pulumi:"isInternal"`
	// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
	MaxPartitionNumber pulumi.IntInput `pulumi:"maxPartitionNumber"`
	// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
	MaxTopicNumber pulumi.IntInput `pulumi:"maxTopicNumber"`
	// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
	PartitionNumber pulumi.IntInput `pulumi:"partitionNumber"`
	// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetwork pulumi.IntInput `pulumi:"publicNetwork"`
	// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetworkChargeType pulumi.StringInput `pulumi:"publicNetworkChargeType"`
	// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
	RebalanceTime pulumi.StringInput `pulumi:"rebalanceTime"`
	// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
	RenewFlag pulumi.IntInput `pulumi:"renewFlag"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Status pulumi.IntInput `pulumi:"status"`
	// Subnet id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tag information.
	Tags GetInstancesInstanceListTagArrayInput `pulumi:"tags"`
	// The number of topics.
	TopicNum pulumi.IntInput `pulumi:"topicNum"`
	// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
	Version pulumi.StringInput `pulumi:"version"`
	// Virtual IP.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Virtual IP entities.
	VipList GetInstancesInstanceListVipListInput `pulumi:"vipList"`
	// VpcId, if empty, indicates that it is the underlying network.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Virtual PORT.
	Vport pulumi.StringInput `pulumi:"vport"`
	// Availability Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
	// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
	ZoneIds pulumi.IntArrayInput `pulumi:"zoneIds"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//          GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Instance bandwidth, in Mbps.
func (o GetInstancesInstanceListOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The time when the instance was created.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) Cvm() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Cvm }).(pulumi.IntOutput)
}

// The storage size of the instance, in GB.
func (o GetInstancesInstanceListOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.DiskType }).(pulumi.StringOutput)
}

// The instance expiration time.
func (o GetInstancesInstanceListOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
func (o GetInstancesInstanceListOutput) Healthy() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Healthy }).(pulumi.IntOutput)
}

// Instance status information.
func (o GetInstancesInstanceListOutput) HealthyMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.HealthyMessage }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The instance name.
func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Whether it is an internal customer. A value of 1 indicates an internal customer.
func (o GetInstancesInstanceListOutput) IsInternal() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.IsInternal }).(pulumi.IntOutput)
}

// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) MaxPartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.MaxPartitionNumber }).(pulumi.IntOutput)
}

// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) MaxTopicNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.MaxTopicNumber }).(pulumi.IntOutput)
}

// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.PartitionNumber }).(pulumi.IntOutput)
}

// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PublicNetwork() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.PublicNetwork }).(pulumi.IntOutput)
}

// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PublicNetworkChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.PublicNetworkChargeType }).(pulumi.StringOutput)
}

// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) RebalanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.RebalanceTime }).(pulumi.StringOutput)
}

// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
func (o GetInstancesInstanceListOutput) RenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.RenewFlag }).(pulumi.IntOutput)
}

// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
func (o GetInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// Subnet id.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tag information.
func (o GetInstancesInstanceListOutput) Tags() GetInstancesInstanceListTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListTag { return v.Tags }).(GetInstancesInstanceListTagArrayOutput)
}

// The number of topics.
func (o GetInstancesInstanceListOutput) TopicNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.TopicNum }).(pulumi.IntOutput)
}

// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Version }).(pulumi.StringOutput)
}

// Virtual IP.
func (o GetInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Virtual IP entities.
func (o GetInstancesInstanceListOutput) VipList() GetInstancesInstanceListVipListOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) GetInstancesInstanceListVipList { return v.VipList }).(GetInstancesInstanceListVipListOutput)
}

// VpcId, if empty, indicates that it is the underlying network.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Virtual PORT.
func (o GetInstancesInstanceListOutput) Vport() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vport }).(pulumi.StringOutput)
}

// Availability Zone ID.
func (o GetInstancesInstanceListOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ZoneId }).(pulumi.IntOutput)
}

// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) ZoneIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []int { return v.ZoneIds }).(pulumi.IntArrayOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetInstancesInstanceListTag struct {
	// Matches the tag key value.
	TagKey string `pulumi:"tagKey"`
	// Tag Value.
	TagValue string `pulumi:"tagValue"`
}

// GetInstancesInstanceListTagInput is an input type that accepts GetInstancesInstanceListTagArgs and GetInstancesInstanceListTagOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListTagInput` via:
//
//          GetInstancesInstanceListTagArgs{...}
type GetInstancesInstanceListTagInput interface {
	pulumi.Input

	ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput
	ToGetInstancesInstanceListTagOutputWithContext(context.Context) GetInstancesInstanceListTagOutput
}

type GetInstancesInstanceListTagArgs struct {
	// Matches the tag key value.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Tag Value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetInstancesInstanceListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListTag)(nil)).Elem()
}

func (i GetInstancesInstanceListTagArgs) ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput {
	return i.ToGetInstancesInstanceListTagOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListTagArgs) ToGetInstancesInstanceListTagOutputWithContext(ctx context.Context) GetInstancesInstanceListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListTagOutput)
}

// GetInstancesInstanceListTagArrayInput is an input type that accepts GetInstancesInstanceListTagArray and GetInstancesInstanceListTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListTagArrayInput` via:
//
//          GetInstancesInstanceListTagArray{ GetInstancesInstanceListTagArgs{...} }
type GetInstancesInstanceListTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput
	ToGetInstancesInstanceListTagArrayOutputWithContext(context.Context) GetInstancesInstanceListTagArrayOutput
}

type GetInstancesInstanceListTagArray []GetInstancesInstanceListTagInput

func (GetInstancesInstanceListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListTag)(nil)).Elem()
}

func (i GetInstancesInstanceListTagArray) ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput {
	return i.ToGetInstancesInstanceListTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListTagArray) ToGetInstancesInstanceListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListTagArrayOutput)
}

type GetInstancesInstanceListTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListTag)(nil)).Elem()
}

func (o GetInstancesInstanceListTagOutput) ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput {
	return o
}

func (o GetInstancesInstanceListTagOutput) ToGetInstancesInstanceListTagOutputWithContext(ctx context.Context) GetInstancesInstanceListTagOutput {
	return o
}

// Matches the tag key value.
func (o GetInstancesInstanceListTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListTag) string { return v.TagKey }).(pulumi.StringOutput)
}

// Tag Value.
func (o GetInstancesInstanceListTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetInstancesInstanceListTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListTag)(nil)).Elem()
}

func (o GetInstancesInstanceListTagArrayOutput) ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput {
	return o
}

func (o GetInstancesInstanceListTagArrayOutput) ToGetInstancesInstanceListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListTagArrayOutput {
	return o
}

func (o GetInstancesInstanceListTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListTag {
		return vs[0].([]GetInstancesInstanceListTag)[vs[1].(int)]
	}).(GetInstancesInstanceListTagOutput)
}

type GetInstancesInstanceListVipList struct {
	// Virtual IP.
	Vip string `pulumi:"vip"`
	// Virtual PORT.
	Vport string `pulumi:"vport"`
}

// GetInstancesInstanceListVipListInput is an input type that accepts GetInstancesInstanceListVipListArgs and GetInstancesInstanceListVipListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListVipListInput` via:
//
//          GetInstancesInstanceListVipListArgs{...}
type GetInstancesInstanceListVipListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput
	ToGetInstancesInstanceListVipListOutputWithContext(context.Context) GetInstancesInstanceListVipListOutput
}

type GetInstancesInstanceListVipListArgs struct {
	// Virtual IP.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Virtual PORT.
	Vport pulumi.StringInput `pulumi:"vport"`
}

func (GetInstancesInstanceListVipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListVipList)(nil)).Elem()
}

func (i GetInstancesInstanceListVipListArgs) ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput {
	return i.ToGetInstancesInstanceListVipListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListVipListArgs) ToGetInstancesInstanceListVipListOutputWithContext(ctx context.Context) GetInstancesInstanceListVipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListVipListOutput)
}

type GetInstancesInstanceListVipListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListVipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListVipList)(nil)).Elem()
}

func (o GetInstancesInstanceListVipListOutput) ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput {
	return o
}

func (o GetInstancesInstanceListVipListOutput) ToGetInstancesInstanceListVipListOutputWithContext(ctx context.Context) GetInstancesInstanceListVipListOutput {
	return o
}

// Virtual IP.
func (o GetInstancesInstanceListVipListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListVipList) string { return v.Vip }).(pulumi.StringOutput)
}

// Virtual PORT.
func (o GetInstancesInstanceListVipListOutput) Vport() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListVipList) string { return v.Vport }).(pulumi.StringOutput)
}

type GetTopicsInstanceList struct {
	// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
	CleanUpPolicy string `pulumi:"cleanUpPolicy"`
	// Create time of the CKafka topic.
	CreateTime string `pulumi:"createTime"`
	// Whether to open the IP Whitelist. `true`: open, `false`: close.
	EnableWhiteList bool `pulumi:"enableWhiteList"`
	// Data backup cos bucket: the bucket address that is dumped to cos.
	ForwardCosBucket string `pulumi:"forwardCosBucket"`
	// Periodic frequency of data backup to cos.
	ForwardInterval int `pulumi:"forwardInterval"`
	// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
	ForwardStatus int `pulumi:"forwardStatus"`
	// IP Whitelist count.
	IpWhiteListCount int `pulumi:"ipWhiteListCount"`
	// Max message bytes.
	MaxMessageBytes int `pulumi:"maxMessageBytes"`
	// CKafka topic note description.
	Note string `pulumi:"note"`
	// The number of partition.
	PartitionNum int `pulumi:"partitionNum"`
	// The number of replica.
	ReplicaNum int `pulumi:"replicaNum"`
	// Message can be selected. Retention time(unit ms).
	Retention int `pulumi:"retention"`
	// Segment scrolling time, in ms.
	Segment int `pulumi:"segment"`
	// Number of bytes rolled by shard.
	SegmentBytes int `pulumi:"segmentBytes"`
	// Min number of sync replicas.
	SyncReplicaMinNum int `pulumi:"syncReplicaMinNum"`
	// ID of the CKafka topic.
	TopicId string `pulumi:"topicId"`
	// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
	TopicName string `pulumi:"topicName"`
	// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
	UncleanLeaderElectionEnable bool `pulumi:"uncleanLeaderElectionEnable"`
}

// GetTopicsInstanceListInput is an input type that accepts GetTopicsInstanceListArgs and GetTopicsInstanceListOutput values.
// You can construct a concrete instance of `GetTopicsInstanceListInput` via:
//
//          GetTopicsInstanceListArgs{...}
type GetTopicsInstanceListInput interface {
	pulumi.Input

	ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput
	ToGetTopicsInstanceListOutputWithContext(context.Context) GetTopicsInstanceListOutput
}

type GetTopicsInstanceListArgs struct {
	// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
	CleanUpPolicy pulumi.StringInput `pulumi:"cleanUpPolicy"`
	// Create time of the CKafka topic.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether to open the IP Whitelist. `true`: open, `false`: close.
	EnableWhiteList pulumi.BoolInput `pulumi:"enableWhiteList"`
	// Data backup cos bucket: the bucket address that is dumped to cos.
	ForwardCosBucket pulumi.StringInput `pulumi:"forwardCosBucket"`
	// Periodic frequency of data backup to cos.
	ForwardInterval pulumi.IntInput `pulumi:"forwardInterval"`
	// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
	ForwardStatus pulumi.IntInput `pulumi:"forwardStatus"`
	// IP Whitelist count.
	IpWhiteListCount pulumi.IntInput `pulumi:"ipWhiteListCount"`
	// Max message bytes.
	MaxMessageBytes pulumi.IntInput `pulumi:"maxMessageBytes"`
	// CKafka topic note description.
	Note pulumi.StringInput `pulumi:"note"`
	// The number of partition.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// The number of replica.
	ReplicaNum pulumi.IntInput `pulumi:"replicaNum"`
	// Message can be selected. Retention time(unit ms).
	Retention pulumi.IntInput `pulumi:"retention"`
	// Segment scrolling time, in ms.
	Segment pulumi.IntInput `pulumi:"segment"`
	// Number of bytes rolled by shard.
	SegmentBytes pulumi.IntInput `pulumi:"segmentBytes"`
	// Min number of sync replicas.
	SyncReplicaMinNum pulumi.IntInput `pulumi:"syncReplicaMinNum"`
	// ID of the CKafka topic.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
	UncleanLeaderElectionEnable pulumi.BoolInput `pulumi:"uncleanLeaderElectionEnable"`
}

func (GetTopicsInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsInstanceList)(nil)).Elem()
}

func (i GetTopicsInstanceListArgs) ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput {
	return i.ToGetTopicsInstanceListOutputWithContext(context.Background())
}

func (i GetTopicsInstanceListArgs) ToGetTopicsInstanceListOutputWithContext(ctx context.Context) GetTopicsInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsInstanceListOutput)
}

// GetTopicsInstanceListArrayInput is an input type that accepts GetTopicsInstanceListArray and GetTopicsInstanceListArrayOutput values.
// You can construct a concrete instance of `GetTopicsInstanceListArrayInput` via:
//
//          GetTopicsInstanceListArray{ GetTopicsInstanceListArgs{...} }
type GetTopicsInstanceListArrayInput interface {
	pulumi.Input

	ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput
	ToGetTopicsInstanceListArrayOutputWithContext(context.Context) GetTopicsInstanceListArrayOutput
}

type GetTopicsInstanceListArray []GetTopicsInstanceListInput

func (GetTopicsInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsInstanceList)(nil)).Elem()
}

func (i GetTopicsInstanceListArray) ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput {
	return i.ToGetTopicsInstanceListArrayOutputWithContext(context.Background())
}

func (i GetTopicsInstanceListArray) ToGetTopicsInstanceListArrayOutputWithContext(ctx context.Context) GetTopicsInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsInstanceListArrayOutput)
}

type GetTopicsInstanceListOutput struct{ *pulumi.OutputState }

func (GetTopicsInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsInstanceList)(nil)).Elem()
}

func (o GetTopicsInstanceListOutput) ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput {
	return o
}

func (o GetTopicsInstanceListOutput) ToGetTopicsInstanceListOutputWithContext(ctx context.Context) GetTopicsInstanceListOutput {
	return o
}

// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
func (o GetTopicsInstanceListOutput) CleanUpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.CleanUpPolicy }).(pulumi.StringOutput)
}

// Create time of the CKafka topic.
func (o GetTopicsInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether to open the IP Whitelist. `true`: open, `false`: close.
func (o GetTopicsInstanceListOutput) EnableWhiteList() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) bool { return v.EnableWhiteList }).(pulumi.BoolOutput)
}

// Data backup cos bucket: the bucket address that is dumped to cos.
func (o GetTopicsInstanceListOutput) ForwardCosBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.ForwardCosBucket }).(pulumi.StringOutput)
}

// Periodic frequency of data backup to cos.
func (o GetTopicsInstanceListOutput) ForwardInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ForwardInterval }).(pulumi.IntOutput)
}

// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
func (o GetTopicsInstanceListOutput) ForwardStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ForwardStatus }).(pulumi.IntOutput)
}

// IP Whitelist count.
func (o GetTopicsInstanceListOutput) IpWhiteListCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.IpWhiteListCount }).(pulumi.IntOutput)
}

// Max message bytes.
func (o GetTopicsInstanceListOutput) MaxMessageBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.MaxMessageBytes }).(pulumi.IntOutput)
}

// CKafka topic note description.
func (o GetTopicsInstanceListOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.Note }).(pulumi.StringOutput)
}

// The number of partition.
func (o GetTopicsInstanceListOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// The number of replica.
func (o GetTopicsInstanceListOutput) ReplicaNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ReplicaNum }).(pulumi.IntOutput)
}

// Message can be selected. Retention time(unit ms).
func (o GetTopicsInstanceListOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.Retention }).(pulumi.IntOutput)
}

// Segment scrolling time, in ms.
func (o GetTopicsInstanceListOutput) Segment() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.Segment }).(pulumi.IntOutput)
}

// Number of bytes rolled by shard.
func (o GetTopicsInstanceListOutput) SegmentBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.SegmentBytes }).(pulumi.IntOutput)
}

// Min number of sync replicas.
func (o GetTopicsInstanceListOutput) SyncReplicaMinNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.SyncReplicaMinNum }).(pulumi.IntOutput)
}

// ID of the CKafka topic.
func (o GetTopicsInstanceListOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.TopicId }).(pulumi.StringOutput)
}

// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
func (o GetTopicsInstanceListOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.TopicName }).(pulumi.StringOutput)
}

// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
func (o GetTopicsInstanceListOutput) UncleanLeaderElectionEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) bool { return v.UncleanLeaderElectionEnable }).(pulumi.BoolOutput)
}

type GetTopicsInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetTopicsInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsInstanceList)(nil)).Elem()
}

func (o GetTopicsInstanceListArrayOutput) ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput {
	return o
}

func (o GetTopicsInstanceListArrayOutput) ToGetTopicsInstanceListArrayOutputWithContext(ctx context.Context) GetTopicsInstanceListArrayOutput {
	return o
}

func (o GetTopicsInstanceListArrayOutput) Index(i pulumi.IntInput) GetTopicsInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicsInstanceList {
		return vs[0].([]GetTopicsInstanceList)[vs[1].(int)]
	}).(GetTopicsInstanceListOutput)
}

type GetUsersUserList struct {
	// Account name used when query ckafka users' infos. Could be a substr of user name.
	AccountName string `pulumi:"accountName"`
	// Creation time of the account.
	CreateTime string `pulumi:"createTime"`
	// The last update time of the account.
	UpdateTime string `pulumi:"updateTime"`
}

// GetUsersUserListInput is an input type that accepts GetUsersUserListArgs and GetUsersUserListOutput values.
// You can construct a concrete instance of `GetUsersUserListInput` via:
//
//          GetUsersUserListArgs{...}
type GetUsersUserListInput interface {
	pulumi.Input

	ToGetUsersUserListOutput() GetUsersUserListOutput
	ToGetUsersUserListOutputWithContext(context.Context) GetUsersUserListOutput
}

type GetUsersUserListArgs struct {
	// Account name used when query ckafka users' infos. Could be a substr of user name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Creation time of the account.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The last update time of the account.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetUsersUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return i.ToGetUsersUserListOutputWithContext(context.Background())
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListOutput)
}

// GetUsersUserListArrayInput is an input type that accepts GetUsersUserListArray and GetUsersUserListArrayOutput values.
// You can construct a concrete instance of `GetUsersUserListArrayInput` via:
//
//          GetUsersUserListArray{ GetUsersUserListArgs{...} }
type GetUsersUserListArrayInput interface {
	pulumi.Input

	ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput
	ToGetUsersUserListArrayOutputWithContext(context.Context) GetUsersUserListArrayOutput
}

type GetUsersUserListArray []GetUsersUserListInput

func (GetUsersUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return i.ToGetUsersUserListArrayOutputWithContext(context.Background())
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListArrayOutput)
}

type GetUsersUserListOutput struct{ *pulumi.OutputState }

func (GetUsersUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return o
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return o
}

// Account name used when query ckafka users' infos. Could be a substr of user name.
func (o GetUsersUserListOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.AccountName }).(pulumi.StringOutput)
}

// Creation time of the account.
func (o GetUsersUserListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The last update time of the account.
func (o GetUsersUserListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetUsersUserListArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) Index(i pulumi.IntInput) GetUsersUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserList {
		return vs[0].([]GetUsersUserList)[vs[1].(int)]
	}).(GetUsersUserListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceClickhouseConnectParamInput)(nil)).Elem(), ConnectResourceClickhouseConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceClickhouseConnectParamPtrInput)(nil)).Elem(), ConnectResourceClickhouseConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDorisConnectParamInput)(nil)).Elem(), ConnectResourceDorisConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDorisConnectParamPtrInput)(nil)).Elem(), ConnectResourceDorisConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDtsConnectParamInput)(nil)).Elem(), ConnectResourceDtsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDtsConnectParamPtrInput)(nil)).Elem(), ConnectResourceDtsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceEsConnectParamInput)(nil)).Elem(), ConnectResourceEsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceEsConnectParamPtrInput)(nil)).Elem(), ConnectResourceEsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceKafkaConnectParamInput)(nil)).Elem(), ConnectResourceKafkaConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceKafkaConnectParamPtrInput)(nil)).Elem(), ConnectResourceKafkaConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMariadbConnectParamInput)(nil)).Elem(), ConnectResourceMariadbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMariadbConnectParamPtrInput)(nil)).Elem(), ConnectResourceMariadbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMongodbConnectParamInput)(nil)).Elem(), ConnectResourceMongodbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMongodbConnectParamPtrInput)(nil)).Elem(), ConnectResourceMongodbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMysqlConnectParamInput)(nil)).Elem(), ConnectResourceMysqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMysqlConnectParamPtrInput)(nil)).Elem(), ConnectResourceMysqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourcePostgresqlConnectParamInput)(nil)).Elem(), ConnectResourcePostgresqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourcePostgresqlConnectParamPtrInput)(nil)).Elem(), ConnectResourcePostgresqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceSqlserverConnectParamInput)(nil)).Elem(), ConnectResourceSqlserverConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceSqlserverConnectParamPtrInput)(nil)).Elem(), ConnectResourceSqlserverConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigPtrInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigPtrInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListInput)(nil)).Elem(), GetAclsAclListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListArrayInput)(nil)).Elem(), GetAclsAclListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListTagInput)(nil)).Elem(), GetInstancesInstanceListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListTagArrayInput)(nil)).Elem(), GetInstancesInstanceListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListVipListInput)(nil)).Elem(), GetInstancesInstanceListVipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsInstanceListInput)(nil)).Elem(), GetTopicsInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsInstanceListArrayInput)(nil)).Elem(), GetTopicsInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListInput)(nil)).Elem(), GetUsersUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListArrayInput)(nil)).Elem(), GetUsersUserListArray{})
	pulumi.RegisterOutputType(ConnectResourceClickhouseConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceClickhouseConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceDorisConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceDorisConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceDtsConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceDtsConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceEsConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceEsConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceKafkaConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceKafkaConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMariadbConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMariadbConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMongodbConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMongodbConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMysqlConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMysqlConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourcePostgresqlConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourcePostgresqlConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceSqlserverConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceSqlserverConnectParamPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclListOutput{})
	pulumi.RegisterOutputType(GetAclsAclListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListVipListOutput{})
	pulumi.RegisterOutputType(GetTopicsInstanceListOutput{})
	pulumi.RegisterOutputType(GetTopicsInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserListOutput{})
	pulumi.RegisterOutputType(GetUsersUserListArrayOutput{})
}
