// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Topics(ctx *pulumi.Context, args *TopicsArgs, opts ...pulumi.InvokeOption) (*TopicsResult, error) {
	var rv TopicsResult
	err := ctx.Invoke("tencentcloud:Ckafka/topics:Topics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Topics.
type TopicsArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	TopicName        *string `pulumi:"topicName"`
}

// A collection of values returned by Topics.
type TopicsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string               `pulumi:"id"`
	InstanceId       string               `pulumi:"instanceId"`
	InstanceLists    []TopicsInstanceList `pulumi:"instanceLists"`
	ResultOutputFile *string              `pulumi:"resultOutputFile"`
	TopicName        *string              `pulumi:"topicName"`
}

func TopicsOutput(ctx *pulumi.Context, args TopicsOutputArgs, opts ...pulumi.InvokeOption) TopicsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TopicsResult, error) {
			args := v.(TopicsArgs)
			r, err := Topics(ctx, &args, opts...)
			var s TopicsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TopicsResultOutput)
}

// A collection of arguments for invoking Topics.
type TopicsOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	TopicName        pulumi.StringPtrInput `pulumi:"topicName"`
}

func (TopicsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicsArgs)(nil)).Elem()
}

// A collection of values returned by Topics.
type TopicsResultOutput struct{ *pulumi.OutputState }

func (TopicsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicsResult)(nil)).Elem()
}

func (o TopicsResultOutput) ToTopicsResultOutput() TopicsResultOutput {
	return o
}

func (o TopicsResultOutput) ToTopicsResultOutputWithContext(ctx context.Context) TopicsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TopicsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TopicsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TopicsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o TopicsResultOutput) InstanceLists() TopicsInstanceListArrayOutput {
	return o.ApplyT(func(v TopicsResult) []TopicsInstanceList { return v.InstanceLists }).(TopicsInstanceListArrayOutput)
}

func (o TopicsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o TopicsResultOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicsResult) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicsResultOutput{})
}
