// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CertificatesCertificate struct {
	BeginTime  string `pulumi:"beginTime"`
	CreateTime string `pulumi:"createTime"`
	EndTime    string `pulumi:"endTime"`
	Id         string `pulumi:"id"`
	IssuerCn   string `pulumi:"issuerCn"`
	Name       string `pulumi:"name"`
	SubjectCn  string `pulumi:"subjectCn"`
	Type       string `pulumi:"type"`
}

// CertificatesCertificateInput is an input type that accepts CertificatesCertificateArgs and CertificatesCertificateOutput values.
// You can construct a concrete instance of `CertificatesCertificateInput` via:
//
//          CertificatesCertificateArgs{...}
type CertificatesCertificateInput interface {
	pulumi.Input

	ToCertificatesCertificateOutput() CertificatesCertificateOutput
	ToCertificatesCertificateOutputWithContext(context.Context) CertificatesCertificateOutput
}

type CertificatesCertificateArgs struct {
	BeginTime  pulumi.StringInput `pulumi:"beginTime"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Id         pulumi.StringInput `pulumi:"id"`
	IssuerCn   pulumi.StringInput `pulumi:"issuerCn"`
	Name       pulumi.StringInput `pulumi:"name"`
	SubjectCn  pulumi.StringInput `pulumi:"subjectCn"`
	Type       pulumi.StringInput `pulumi:"type"`
}

func (CertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return i.ToCertificatesCertificateOutputWithContext(context.Background())
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateOutput)
}

// CertificatesCertificateArrayInput is an input type that accepts CertificatesCertificateArray and CertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `CertificatesCertificateArrayInput` via:
//
//          CertificatesCertificateArray{ CertificatesCertificateArgs{...} }
type CertificatesCertificateArrayInput interface {
	pulumi.Input

	ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput
	ToCertificatesCertificateArrayOutputWithContext(context.Context) CertificatesCertificateArrayOutput
}

type CertificatesCertificateArray []CertificatesCertificateInput

func (CertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return i.ToCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateArrayOutput)
}

type CertificatesCertificateOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return o
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return o
}

func (o CertificatesCertificateOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.BeginTime }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) IssuerCn() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.IssuerCn }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Name }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) SubjectCn() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.SubjectCn }).(pulumi.StringOutput)
}

func (o CertificatesCertificateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Type }).(pulumi.StringOutput)
}

type CertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) Index(i pulumi.IntInput) CertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificatesCertificate {
		return vs[0].([]CertificatesCertificate)[vs[1].(int)]
	}).(CertificatesCertificateOutput)
}

type DomainErrorPageInfoListErrorPageInfoList struct {
	Body          string                 `pulumi:"body"`
	ClearHeaders  []string               `pulumi:"clearHeaders"`
	Domain        string                 `pulumi:"domain"`
	ErrorCodes    []int                  `pulumi:"errorCodes"`
	Id            string                 `pulumi:"id"`
	ListenerId    string                 `pulumi:"listenerId"`
	NewErrorCodes int                    `pulumi:"newErrorCodes"`
	SetHeaders    map[string]interface{} `pulumi:"setHeaders"`
}

// DomainErrorPageInfoListErrorPageInfoListInput is an input type that accepts DomainErrorPageInfoListErrorPageInfoListArgs and DomainErrorPageInfoListErrorPageInfoListOutput values.
// You can construct a concrete instance of `DomainErrorPageInfoListErrorPageInfoListInput` via:
//
//          DomainErrorPageInfoListErrorPageInfoListArgs{...}
type DomainErrorPageInfoListErrorPageInfoListInput interface {
	pulumi.Input

	ToDomainErrorPageInfoListErrorPageInfoListOutput() DomainErrorPageInfoListErrorPageInfoListOutput
	ToDomainErrorPageInfoListErrorPageInfoListOutputWithContext(context.Context) DomainErrorPageInfoListErrorPageInfoListOutput
}

type DomainErrorPageInfoListErrorPageInfoListArgs struct {
	Body          pulumi.StringInput      `pulumi:"body"`
	ClearHeaders  pulumi.StringArrayInput `pulumi:"clearHeaders"`
	Domain        pulumi.StringInput      `pulumi:"domain"`
	ErrorCodes    pulumi.IntArrayInput    `pulumi:"errorCodes"`
	Id            pulumi.StringInput      `pulumi:"id"`
	ListenerId    pulumi.StringInput      `pulumi:"listenerId"`
	NewErrorCodes pulumi.IntInput         `pulumi:"newErrorCodes"`
	SetHeaders    pulumi.MapInput         `pulumi:"setHeaders"`
}

func (DomainErrorPageInfoListErrorPageInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPageInfoListErrorPageInfoList)(nil)).Elem()
}

func (i DomainErrorPageInfoListErrorPageInfoListArgs) ToDomainErrorPageInfoListErrorPageInfoListOutput() DomainErrorPageInfoListErrorPageInfoListOutput {
	return i.ToDomainErrorPageInfoListErrorPageInfoListOutputWithContext(context.Background())
}

func (i DomainErrorPageInfoListErrorPageInfoListArgs) ToDomainErrorPageInfoListErrorPageInfoListOutputWithContext(ctx context.Context) DomainErrorPageInfoListErrorPageInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageInfoListErrorPageInfoListOutput)
}

// DomainErrorPageInfoListErrorPageInfoListArrayInput is an input type that accepts DomainErrorPageInfoListErrorPageInfoListArray and DomainErrorPageInfoListErrorPageInfoListArrayOutput values.
// You can construct a concrete instance of `DomainErrorPageInfoListErrorPageInfoListArrayInput` via:
//
//          DomainErrorPageInfoListErrorPageInfoListArray{ DomainErrorPageInfoListErrorPageInfoListArgs{...} }
type DomainErrorPageInfoListErrorPageInfoListArrayInput interface {
	pulumi.Input

	ToDomainErrorPageInfoListErrorPageInfoListArrayOutput() DomainErrorPageInfoListErrorPageInfoListArrayOutput
	ToDomainErrorPageInfoListErrorPageInfoListArrayOutputWithContext(context.Context) DomainErrorPageInfoListErrorPageInfoListArrayOutput
}

type DomainErrorPageInfoListErrorPageInfoListArray []DomainErrorPageInfoListErrorPageInfoListInput

func (DomainErrorPageInfoListErrorPageInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainErrorPageInfoListErrorPageInfoList)(nil)).Elem()
}

func (i DomainErrorPageInfoListErrorPageInfoListArray) ToDomainErrorPageInfoListErrorPageInfoListArrayOutput() DomainErrorPageInfoListErrorPageInfoListArrayOutput {
	return i.ToDomainErrorPageInfoListErrorPageInfoListArrayOutputWithContext(context.Background())
}

func (i DomainErrorPageInfoListErrorPageInfoListArray) ToDomainErrorPageInfoListErrorPageInfoListArrayOutputWithContext(ctx context.Context) DomainErrorPageInfoListErrorPageInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageInfoListErrorPageInfoListArrayOutput)
}

type DomainErrorPageInfoListErrorPageInfoListOutput struct{ *pulumi.OutputState }

func (DomainErrorPageInfoListErrorPageInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPageInfoListErrorPageInfoList)(nil)).Elem()
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) ToDomainErrorPageInfoListErrorPageInfoListOutput() DomainErrorPageInfoListErrorPageInfoListOutput {
	return o
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) ToDomainErrorPageInfoListErrorPageInfoListOutputWithContext(ctx context.Context) DomainErrorPageInfoListErrorPageInfoListOutput {
	return o
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) string { return v.Body }).(pulumi.StringOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) ClearHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) []string { return v.ClearHeaders }).(pulumi.StringArrayOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) ErrorCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) []int { return v.ErrorCodes }).(pulumi.IntArrayOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) string { return v.Id }).(pulumi.StringOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) NewErrorCodes() pulumi.IntOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) int { return v.NewErrorCodes }).(pulumi.IntOutput)
}

func (o DomainErrorPageInfoListErrorPageInfoListOutput) SetHeaders() pulumi.MapOutput {
	return o.ApplyT(func(v DomainErrorPageInfoListErrorPageInfoList) map[string]interface{} { return v.SetHeaders }).(pulumi.MapOutput)
}

type DomainErrorPageInfoListErrorPageInfoListArrayOutput struct{ *pulumi.OutputState }

func (DomainErrorPageInfoListErrorPageInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainErrorPageInfoListErrorPageInfoList)(nil)).Elem()
}

func (o DomainErrorPageInfoListErrorPageInfoListArrayOutput) ToDomainErrorPageInfoListErrorPageInfoListArrayOutput() DomainErrorPageInfoListErrorPageInfoListArrayOutput {
	return o
}

func (o DomainErrorPageInfoListErrorPageInfoListArrayOutput) ToDomainErrorPageInfoListErrorPageInfoListArrayOutputWithContext(ctx context.Context) DomainErrorPageInfoListErrorPageInfoListArrayOutput {
	return o
}

func (o DomainErrorPageInfoListErrorPageInfoListArrayOutput) Index(i pulumi.IntInput) DomainErrorPageInfoListErrorPageInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainErrorPageInfoListErrorPageInfoList {
		return vs[0].([]DomainErrorPageInfoListErrorPageInfoList)[vs[1].(int)]
	}).(DomainErrorPageInfoListErrorPageInfoListOutput)
}

type HttpDomainsDomain struct {
	BasicAuth     bool   `pulumi:"basicAuth"`
	BasicAuthId   string `pulumi:"basicAuthId"`
	CertificateId string `pulumi:"certificateId"`
	// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
	ClientCertificateId         string   `pulumi:"clientCertificateId"`
	ClientCertificateIds        []string `pulumi:"clientCertificateIds"`
	Domain                      string   `pulumi:"domain"`
	GaapAuth                    bool     `pulumi:"gaapAuth"`
	GaapAuthId                  string   `pulumi:"gaapAuthId"`
	RealserverAuth              bool     `pulumi:"realserverAuth"`
	RealserverCertificateDomain string   `pulumi:"realserverCertificateDomain"`
	// Deprecated: It has been deprecated from version 1.28.0. Use `realserver_certificate_ids` instead.
	RealserverCertificateId  string   `pulumi:"realserverCertificateId"`
	RealserverCertificateIds []string `pulumi:"realserverCertificateIds"`
}

// HttpDomainsDomainInput is an input type that accepts HttpDomainsDomainArgs and HttpDomainsDomainOutput values.
// You can construct a concrete instance of `HttpDomainsDomainInput` via:
//
//          HttpDomainsDomainArgs{...}
type HttpDomainsDomainInput interface {
	pulumi.Input

	ToHttpDomainsDomainOutput() HttpDomainsDomainOutput
	ToHttpDomainsDomainOutputWithContext(context.Context) HttpDomainsDomainOutput
}

type HttpDomainsDomainArgs struct {
	BasicAuth     pulumi.BoolInput   `pulumi:"basicAuth"`
	BasicAuthId   pulumi.StringInput `pulumi:"basicAuthId"`
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
	ClientCertificateId         pulumi.StringInput      `pulumi:"clientCertificateId"`
	ClientCertificateIds        pulumi.StringArrayInput `pulumi:"clientCertificateIds"`
	Domain                      pulumi.StringInput      `pulumi:"domain"`
	GaapAuth                    pulumi.BoolInput        `pulumi:"gaapAuth"`
	GaapAuthId                  pulumi.StringInput      `pulumi:"gaapAuthId"`
	RealserverAuth              pulumi.BoolInput        `pulumi:"realserverAuth"`
	RealserverCertificateDomain pulumi.StringInput      `pulumi:"realserverCertificateDomain"`
	// Deprecated: It has been deprecated from version 1.28.0. Use `realserver_certificate_ids` instead.
	RealserverCertificateId  pulumi.StringInput      `pulumi:"realserverCertificateId"`
	RealserverCertificateIds pulumi.StringArrayInput `pulumi:"realserverCertificateIds"`
}

func (HttpDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDomainsDomain)(nil)).Elem()
}

func (i HttpDomainsDomainArgs) ToHttpDomainsDomainOutput() HttpDomainsDomainOutput {
	return i.ToHttpDomainsDomainOutputWithContext(context.Background())
}

func (i HttpDomainsDomainArgs) ToHttpDomainsDomainOutputWithContext(ctx context.Context) HttpDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDomainsDomainOutput)
}

// HttpDomainsDomainArrayInput is an input type that accepts HttpDomainsDomainArray and HttpDomainsDomainArrayOutput values.
// You can construct a concrete instance of `HttpDomainsDomainArrayInput` via:
//
//          HttpDomainsDomainArray{ HttpDomainsDomainArgs{...} }
type HttpDomainsDomainArrayInput interface {
	pulumi.Input

	ToHttpDomainsDomainArrayOutput() HttpDomainsDomainArrayOutput
	ToHttpDomainsDomainArrayOutputWithContext(context.Context) HttpDomainsDomainArrayOutput
}

type HttpDomainsDomainArray []HttpDomainsDomainInput

func (HttpDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpDomainsDomain)(nil)).Elem()
}

func (i HttpDomainsDomainArray) ToHttpDomainsDomainArrayOutput() HttpDomainsDomainArrayOutput {
	return i.ToHttpDomainsDomainArrayOutputWithContext(context.Background())
}

func (i HttpDomainsDomainArray) ToHttpDomainsDomainArrayOutputWithContext(ctx context.Context) HttpDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDomainsDomainArrayOutput)
}

type HttpDomainsDomainOutput struct{ *pulumi.OutputState }

func (HttpDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDomainsDomain)(nil)).Elem()
}

func (o HttpDomainsDomainOutput) ToHttpDomainsDomainOutput() HttpDomainsDomainOutput {
	return o
}

func (o HttpDomainsDomainOutput) ToHttpDomainsDomainOutputWithContext(ctx context.Context) HttpDomainsDomainOutput {
	return o
}

func (o HttpDomainsDomainOutput) BasicAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v HttpDomainsDomain) bool { return v.BasicAuth }).(pulumi.BoolOutput)
}

func (o HttpDomainsDomainOutput) BasicAuthId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.BasicAuthId }).(pulumi.StringOutput)
}

func (o HttpDomainsDomainOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.CertificateId }).(pulumi.StringOutput)
}

// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
func (o HttpDomainsDomainOutput) ClientCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.ClientCertificateId }).(pulumi.StringOutput)
}

func (o HttpDomainsDomainOutput) ClientCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpDomainsDomain) []string { return v.ClientCertificateIds }).(pulumi.StringArrayOutput)
}

func (o HttpDomainsDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.Domain }).(pulumi.StringOutput)
}

func (o HttpDomainsDomainOutput) GaapAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v HttpDomainsDomain) bool { return v.GaapAuth }).(pulumi.BoolOutput)
}

func (o HttpDomainsDomainOutput) GaapAuthId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.GaapAuthId }).(pulumi.StringOutput)
}

func (o HttpDomainsDomainOutput) RealserverAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v HttpDomainsDomain) bool { return v.RealserverAuth }).(pulumi.BoolOutput)
}

func (o HttpDomainsDomainOutput) RealserverCertificateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.RealserverCertificateDomain }).(pulumi.StringOutput)
}

// Deprecated: It has been deprecated from version 1.28.0. Use `realserver_certificate_ids` instead.
func (o HttpDomainsDomainOutput) RealserverCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDomainsDomain) string { return v.RealserverCertificateId }).(pulumi.StringOutput)
}

func (o HttpDomainsDomainOutput) RealserverCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpDomainsDomain) []string { return v.RealserverCertificateIds }).(pulumi.StringArrayOutput)
}

type HttpDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (HttpDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpDomainsDomain)(nil)).Elem()
}

func (o HttpDomainsDomainArrayOutput) ToHttpDomainsDomainArrayOutput() HttpDomainsDomainArrayOutput {
	return o
}

func (o HttpDomainsDomainArrayOutput) ToHttpDomainsDomainArrayOutputWithContext(ctx context.Context) HttpDomainsDomainArrayOutput {
	return o
}

func (o HttpDomainsDomainArrayOutput) Index(i pulumi.IntInput) HttpDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpDomainsDomain {
		return vs[0].([]HttpDomainsDomain)[vs[1].(int)]
	}).(HttpDomainsDomainOutput)
}

type HttpRuleRealserver struct {
	Id     string `pulumi:"id"`
	Ip     string `pulumi:"ip"`
	Port   int    `pulumi:"port"`
	Weight *int   `pulumi:"weight"`
}

// HttpRuleRealserverInput is an input type that accepts HttpRuleRealserverArgs and HttpRuleRealserverOutput values.
// You can construct a concrete instance of `HttpRuleRealserverInput` via:
//
//          HttpRuleRealserverArgs{...}
type HttpRuleRealserverInput interface {
	pulumi.Input

	ToHttpRuleRealserverOutput() HttpRuleRealserverOutput
	ToHttpRuleRealserverOutputWithContext(context.Context) HttpRuleRealserverOutput
}

type HttpRuleRealserverArgs struct {
	Id     pulumi.StringInput `pulumi:"id"`
	Ip     pulumi.StringInput `pulumi:"ip"`
	Port   pulumi.IntInput    `pulumi:"port"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (HttpRuleRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRuleRealserver)(nil)).Elem()
}

func (i HttpRuleRealserverArgs) ToHttpRuleRealserverOutput() HttpRuleRealserverOutput {
	return i.ToHttpRuleRealserverOutputWithContext(context.Background())
}

func (i HttpRuleRealserverArgs) ToHttpRuleRealserverOutputWithContext(ctx context.Context) HttpRuleRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRuleRealserverOutput)
}

// HttpRuleRealserverArrayInput is an input type that accepts HttpRuleRealserverArray and HttpRuleRealserverArrayOutput values.
// You can construct a concrete instance of `HttpRuleRealserverArrayInput` via:
//
//          HttpRuleRealserverArray{ HttpRuleRealserverArgs{...} }
type HttpRuleRealserverArrayInput interface {
	pulumi.Input

	ToHttpRuleRealserverArrayOutput() HttpRuleRealserverArrayOutput
	ToHttpRuleRealserverArrayOutputWithContext(context.Context) HttpRuleRealserverArrayOutput
}

type HttpRuleRealserverArray []HttpRuleRealserverInput

func (HttpRuleRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRuleRealserver)(nil)).Elem()
}

func (i HttpRuleRealserverArray) ToHttpRuleRealserverArrayOutput() HttpRuleRealserverArrayOutput {
	return i.ToHttpRuleRealserverArrayOutputWithContext(context.Background())
}

func (i HttpRuleRealserverArray) ToHttpRuleRealserverArrayOutputWithContext(ctx context.Context) HttpRuleRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRuleRealserverArrayOutput)
}

type HttpRuleRealserverOutput struct{ *pulumi.OutputState }

func (HttpRuleRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRuleRealserver)(nil)).Elem()
}

func (o HttpRuleRealserverOutput) ToHttpRuleRealserverOutput() HttpRuleRealserverOutput {
	return o
}

func (o HttpRuleRealserverOutput) ToHttpRuleRealserverOutputWithContext(ctx context.Context) HttpRuleRealserverOutput {
	return o
}

func (o HttpRuleRealserverOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRuleRealserver) string { return v.Id }).(pulumi.StringOutput)
}

func (o HttpRuleRealserverOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRuleRealserver) string { return v.Ip }).(pulumi.StringOutput)
}

func (o HttpRuleRealserverOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRuleRealserver) int { return v.Port }).(pulumi.IntOutput)
}

func (o HttpRuleRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpRuleRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type HttpRuleRealserverArrayOutput struct{ *pulumi.OutputState }

func (HttpRuleRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRuleRealserver)(nil)).Elem()
}

func (o HttpRuleRealserverArrayOutput) ToHttpRuleRealserverArrayOutput() HttpRuleRealserverArrayOutput {
	return o
}

func (o HttpRuleRealserverArrayOutput) ToHttpRuleRealserverArrayOutputWithContext(ctx context.Context) HttpRuleRealserverArrayOutput {
	return o
}

func (o HttpRuleRealserverArrayOutput) Index(i pulumi.IntInput) HttpRuleRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpRuleRealserver {
		return vs[0].([]HttpRuleRealserver)[vs[1].(int)]
	}).(HttpRuleRealserverOutput)
}

type HttpRulesRule struct {
	ConnectTimeout         int                       `pulumi:"connectTimeout"`
	Domain                 string                    `pulumi:"domain"`
	ForwardHost            string                    `pulumi:"forwardHost"`
	HealthCheck            bool                      `pulumi:"healthCheck"`
	HealthCheckMethod      string                    `pulumi:"healthCheckMethod"`
	HealthCheckPath        string                    `pulumi:"healthCheckPath"`
	HealthCheckStatusCodes []int                     `pulumi:"healthCheckStatusCodes"`
	Id                     string                    `pulumi:"id"`
	Interval               int                       `pulumi:"interval"`
	ListenerId             string                    `pulumi:"listenerId"`
	Path                   string                    `pulumi:"path"`
	RealserverType         string                    `pulumi:"realserverType"`
	Realservers            []HttpRulesRuleRealserver `pulumi:"realservers"`
	Scheduler              string                    `pulumi:"scheduler"`
	Sni                    string                    `pulumi:"sni"`
	SniSwitch              string                    `pulumi:"sniSwitch"`
}

// HttpRulesRuleInput is an input type that accepts HttpRulesRuleArgs and HttpRulesRuleOutput values.
// You can construct a concrete instance of `HttpRulesRuleInput` via:
//
//          HttpRulesRuleArgs{...}
type HttpRulesRuleInput interface {
	pulumi.Input

	ToHttpRulesRuleOutput() HttpRulesRuleOutput
	ToHttpRulesRuleOutputWithContext(context.Context) HttpRulesRuleOutput
}

type HttpRulesRuleArgs struct {
	ConnectTimeout         pulumi.IntInput                   `pulumi:"connectTimeout"`
	Domain                 pulumi.StringInput                `pulumi:"domain"`
	ForwardHost            pulumi.StringInput                `pulumi:"forwardHost"`
	HealthCheck            pulumi.BoolInput                  `pulumi:"healthCheck"`
	HealthCheckMethod      pulumi.StringInput                `pulumi:"healthCheckMethod"`
	HealthCheckPath        pulumi.StringInput                `pulumi:"healthCheckPath"`
	HealthCheckStatusCodes pulumi.IntArrayInput              `pulumi:"healthCheckStatusCodes"`
	Id                     pulumi.StringInput                `pulumi:"id"`
	Interval               pulumi.IntInput                   `pulumi:"interval"`
	ListenerId             pulumi.StringInput                `pulumi:"listenerId"`
	Path                   pulumi.StringInput                `pulumi:"path"`
	RealserverType         pulumi.StringInput                `pulumi:"realserverType"`
	Realservers            HttpRulesRuleRealserverArrayInput `pulumi:"realservers"`
	Scheduler              pulumi.StringInput                `pulumi:"scheduler"`
	Sni                    pulumi.StringInput                `pulumi:"sni"`
	SniSwitch              pulumi.StringInput                `pulumi:"sniSwitch"`
}

func (HttpRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRulesRule)(nil)).Elem()
}

func (i HttpRulesRuleArgs) ToHttpRulesRuleOutput() HttpRulesRuleOutput {
	return i.ToHttpRulesRuleOutputWithContext(context.Background())
}

func (i HttpRulesRuleArgs) ToHttpRulesRuleOutputWithContext(ctx context.Context) HttpRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRulesRuleOutput)
}

// HttpRulesRuleArrayInput is an input type that accepts HttpRulesRuleArray and HttpRulesRuleArrayOutput values.
// You can construct a concrete instance of `HttpRulesRuleArrayInput` via:
//
//          HttpRulesRuleArray{ HttpRulesRuleArgs{...} }
type HttpRulesRuleArrayInput interface {
	pulumi.Input

	ToHttpRulesRuleArrayOutput() HttpRulesRuleArrayOutput
	ToHttpRulesRuleArrayOutputWithContext(context.Context) HttpRulesRuleArrayOutput
}

type HttpRulesRuleArray []HttpRulesRuleInput

func (HttpRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRulesRule)(nil)).Elem()
}

func (i HttpRulesRuleArray) ToHttpRulesRuleArrayOutput() HttpRulesRuleArrayOutput {
	return i.ToHttpRulesRuleArrayOutputWithContext(context.Background())
}

func (i HttpRulesRuleArray) ToHttpRulesRuleArrayOutputWithContext(ctx context.Context) HttpRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRulesRuleArrayOutput)
}

type HttpRulesRuleOutput struct{ *pulumi.OutputState }

func (HttpRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRulesRule)(nil)).Elem()
}

func (o HttpRulesRuleOutput) ToHttpRulesRuleOutput() HttpRulesRuleOutput {
	return o
}

func (o HttpRulesRuleOutput) ToHttpRulesRuleOutputWithContext(ctx context.Context) HttpRulesRuleOutput {
	return o
}

func (o HttpRulesRuleOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRulesRule) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

func (o HttpRulesRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.Domain }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) ForwardHost() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.ForwardHost }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) HealthCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v HttpRulesRule) bool { return v.HealthCheck }).(pulumi.BoolOutput)
}

func (o HttpRulesRuleOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) HealthCheckStatusCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v HttpRulesRule) []int { return v.HealthCheckStatusCodes }).(pulumi.IntArrayOutput)
}

func (o HttpRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRulesRule) int { return v.Interval }).(pulumi.IntOutput)
}

func (o HttpRulesRuleOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.Path }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) RealserverType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.RealserverType }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) Realservers() HttpRulesRuleRealserverArrayOutput {
	return o.ApplyT(func(v HttpRulesRule) []HttpRulesRuleRealserver { return v.Realservers }).(HttpRulesRuleRealserverArrayOutput)
}

func (o HttpRulesRuleOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.Scheduler }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) Sni() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.Sni }).(pulumi.StringOutput)
}

func (o HttpRulesRuleOutput) SniSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRule) string { return v.SniSwitch }).(pulumi.StringOutput)
}

type HttpRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (HttpRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRulesRule)(nil)).Elem()
}

func (o HttpRulesRuleArrayOutput) ToHttpRulesRuleArrayOutput() HttpRulesRuleArrayOutput {
	return o
}

func (o HttpRulesRuleArrayOutput) ToHttpRulesRuleArrayOutputWithContext(ctx context.Context) HttpRulesRuleArrayOutput {
	return o
}

func (o HttpRulesRuleArrayOutput) Index(i pulumi.IntInput) HttpRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpRulesRule {
		return vs[0].([]HttpRulesRule)[vs[1].(int)]
	}).(HttpRulesRuleOutput)
}

type HttpRulesRuleRealserver struct {
	Domain string `pulumi:"domain"`
	Id     string `pulumi:"id"`
	Ip     string `pulumi:"ip"`
	Port   int    `pulumi:"port"`
	Status int    `pulumi:"status"`
	Weight int    `pulumi:"weight"`
}

// HttpRulesRuleRealserverInput is an input type that accepts HttpRulesRuleRealserverArgs and HttpRulesRuleRealserverOutput values.
// You can construct a concrete instance of `HttpRulesRuleRealserverInput` via:
//
//          HttpRulesRuleRealserverArgs{...}
type HttpRulesRuleRealserverInput interface {
	pulumi.Input

	ToHttpRulesRuleRealserverOutput() HttpRulesRuleRealserverOutput
	ToHttpRulesRuleRealserverOutputWithContext(context.Context) HttpRulesRuleRealserverOutput
}

type HttpRulesRuleRealserverArgs struct {
	Domain pulumi.StringInput `pulumi:"domain"`
	Id     pulumi.StringInput `pulumi:"id"`
	Ip     pulumi.StringInput `pulumi:"ip"`
	Port   pulumi.IntInput    `pulumi:"port"`
	Status pulumi.IntInput    `pulumi:"status"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (HttpRulesRuleRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRulesRuleRealserver)(nil)).Elem()
}

func (i HttpRulesRuleRealserverArgs) ToHttpRulesRuleRealserverOutput() HttpRulesRuleRealserverOutput {
	return i.ToHttpRulesRuleRealserverOutputWithContext(context.Background())
}

func (i HttpRulesRuleRealserverArgs) ToHttpRulesRuleRealserverOutputWithContext(ctx context.Context) HttpRulesRuleRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRulesRuleRealserverOutput)
}

// HttpRulesRuleRealserverArrayInput is an input type that accepts HttpRulesRuleRealserverArray and HttpRulesRuleRealserverArrayOutput values.
// You can construct a concrete instance of `HttpRulesRuleRealserverArrayInput` via:
//
//          HttpRulesRuleRealserverArray{ HttpRulesRuleRealserverArgs{...} }
type HttpRulesRuleRealserverArrayInput interface {
	pulumi.Input

	ToHttpRulesRuleRealserverArrayOutput() HttpRulesRuleRealserverArrayOutput
	ToHttpRulesRuleRealserverArrayOutputWithContext(context.Context) HttpRulesRuleRealserverArrayOutput
}

type HttpRulesRuleRealserverArray []HttpRulesRuleRealserverInput

func (HttpRulesRuleRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRulesRuleRealserver)(nil)).Elem()
}

func (i HttpRulesRuleRealserverArray) ToHttpRulesRuleRealserverArrayOutput() HttpRulesRuleRealserverArrayOutput {
	return i.ToHttpRulesRuleRealserverArrayOutputWithContext(context.Background())
}

func (i HttpRulesRuleRealserverArray) ToHttpRulesRuleRealserverArrayOutputWithContext(ctx context.Context) HttpRulesRuleRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpRulesRuleRealserverArrayOutput)
}

type HttpRulesRuleRealserverOutput struct{ *pulumi.OutputState }

func (HttpRulesRuleRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRulesRuleRealserver)(nil)).Elem()
}

func (o HttpRulesRuleRealserverOutput) ToHttpRulesRuleRealserverOutput() HttpRulesRuleRealserverOutput {
	return o
}

func (o HttpRulesRuleRealserverOutput) ToHttpRulesRuleRealserverOutputWithContext(ctx context.Context) HttpRulesRuleRealserverOutput {
	return o
}

func (o HttpRulesRuleRealserverOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) string { return v.Domain }).(pulumi.StringOutput)
}

func (o HttpRulesRuleRealserverOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) string { return v.Id }).(pulumi.StringOutput)
}

func (o HttpRulesRuleRealserverOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) string { return v.Ip }).(pulumi.StringOutput)
}

func (o HttpRulesRuleRealserverOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) int { return v.Port }).(pulumi.IntOutput)
}

func (o HttpRulesRuleRealserverOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) int { return v.Status }).(pulumi.IntOutput)
}

func (o HttpRulesRuleRealserverOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v HttpRulesRuleRealserver) int { return v.Weight }).(pulumi.IntOutput)
}

type HttpRulesRuleRealserverArrayOutput struct{ *pulumi.OutputState }

func (HttpRulesRuleRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpRulesRuleRealserver)(nil)).Elem()
}

func (o HttpRulesRuleRealserverArrayOutput) ToHttpRulesRuleRealserverArrayOutput() HttpRulesRuleRealserverArrayOutput {
	return o
}

func (o HttpRulesRuleRealserverArrayOutput) ToHttpRulesRuleRealserverArrayOutputWithContext(ctx context.Context) HttpRulesRuleRealserverArrayOutput {
	return o
}

func (o HttpRulesRuleRealserverArrayOutput) Index(i pulumi.IntInput) HttpRulesRuleRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpRulesRuleRealserver {
		return vs[0].([]HttpRulesRuleRealserver)[vs[1].(int)]
	}).(HttpRulesRuleRealserverOutput)
}

type Layer4ListenerRealserverBindSet struct {
	Id     string `pulumi:"id"`
	Ip     string `pulumi:"ip"`
	Port   int    `pulumi:"port"`
	Weight *int   `pulumi:"weight"`
}

// Layer4ListenerRealserverBindSetInput is an input type that accepts Layer4ListenerRealserverBindSetArgs and Layer4ListenerRealserverBindSetOutput values.
// You can construct a concrete instance of `Layer4ListenerRealserverBindSetInput` via:
//
//          Layer4ListenerRealserverBindSetArgs{...}
type Layer4ListenerRealserverBindSetInput interface {
	pulumi.Input

	ToLayer4ListenerRealserverBindSetOutput() Layer4ListenerRealserverBindSetOutput
	ToLayer4ListenerRealserverBindSetOutputWithContext(context.Context) Layer4ListenerRealserverBindSetOutput
}

type Layer4ListenerRealserverBindSetArgs struct {
	Id     pulumi.StringInput `pulumi:"id"`
	Ip     pulumi.StringInput `pulumi:"ip"`
	Port   pulumi.IntInput    `pulumi:"port"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Layer4ListenerRealserverBindSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer4ListenerRealserverBindSet)(nil)).Elem()
}

func (i Layer4ListenerRealserverBindSetArgs) ToLayer4ListenerRealserverBindSetOutput() Layer4ListenerRealserverBindSetOutput {
	return i.ToLayer4ListenerRealserverBindSetOutputWithContext(context.Background())
}

func (i Layer4ListenerRealserverBindSetArgs) ToLayer4ListenerRealserverBindSetOutputWithContext(ctx context.Context) Layer4ListenerRealserverBindSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer4ListenerRealserverBindSetOutput)
}

// Layer4ListenerRealserverBindSetArrayInput is an input type that accepts Layer4ListenerRealserverBindSetArray and Layer4ListenerRealserverBindSetArrayOutput values.
// You can construct a concrete instance of `Layer4ListenerRealserverBindSetArrayInput` via:
//
//          Layer4ListenerRealserverBindSetArray{ Layer4ListenerRealserverBindSetArgs{...} }
type Layer4ListenerRealserverBindSetArrayInput interface {
	pulumi.Input

	ToLayer4ListenerRealserverBindSetArrayOutput() Layer4ListenerRealserverBindSetArrayOutput
	ToLayer4ListenerRealserverBindSetArrayOutputWithContext(context.Context) Layer4ListenerRealserverBindSetArrayOutput
}

type Layer4ListenerRealserverBindSetArray []Layer4ListenerRealserverBindSetInput

func (Layer4ListenerRealserverBindSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer4ListenerRealserverBindSet)(nil)).Elem()
}

func (i Layer4ListenerRealserverBindSetArray) ToLayer4ListenerRealserverBindSetArrayOutput() Layer4ListenerRealserverBindSetArrayOutput {
	return i.ToLayer4ListenerRealserverBindSetArrayOutputWithContext(context.Background())
}

func (i Layer4ListenerRealserverBindSetArray) ToLayer4ListenerRealserverBindSetArrayOutputWithContext(ctx context.Context) Layer4ListenerRealserverBindSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer4ListenerRealserverBindSetArrayOutput)
}

type Layer4ListenerRealserverBindSetOutput struct{ *pulumi.OutputState }

func (Layer4ListenerRealserverBindSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer4ListenerRealserverBindSet)(nil)).Elem()
}

func (o Layer4ListenerRealserverBindSetOutput) ToLayer4ListenerRealserverBindSetOutput() Layer4ListenerRealserverBindSetOutput {
	return o
}

func (o Layer4ListenerRealserverBindSetOutput) ToLayer4ListenerRealserverBindSetOutputWithContext(ctx context.Context) Layer4ListenerRealserverBindSetOutput {
	return o
}

func (o Layer4ListenerRealserverBindSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenerRealserverBindSet) string { return v.Id }).(pulumi.StringOutput)
}

func (o Layer4ListenerRealserverBindSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenerRealserverBindSet) string { return v.Ip }).(pulumi.StringOutput)
}

func (o Layer4ListenerRealserverBindSetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Layer4ListenerRealserverBindSet) int { return v.Port }).(pulumi.IntOutput)
}

func (o Layer4ListenerRealserverBindSetOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer4ListenerRealserverBindSet) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Layer4ListenerRealserverBindSetArrayOutput struct{ *pulumi.OutputState }

func (Layer4ListenerRealserverBindSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer4ListenerRealserverBindSet)(nil)).Elem()
}

func (o Layer4ListenerRealserverBindSetArrayOutput) ToLayer4ListenerRealserverBindSetArrayOutput() Layer4ListenerRealserverBindSetArrayOutput {
	return o
}

func (o Layer4ListenerRealserverBindSetArrayOutput) ToLayer4ListenerRealserverBindSetArrayOutputWithContext(ctx context.Context) Layer4ListenerRealserverBindSetArrayOutput {
	return o
}

func (o Layer4ListenerRealserverBindSetArrayOutput) Index(i pulumi.IntInput) Layer4ListenerRealserverBindSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Layer4ListenerRealserverBindSet {
		return vs[0].([]Layer4ListenerRealserverBindSet)[vs[1].(int)]
	}).(Layer4ListenerRealserverBindSetOutput)
}

type Layer4ListenersListener struct {
	ConnectTimeout int    `pulumi:"connectTimeout"`
	CreateTime     string `pulumi:"createTime"`
	HealthCheck    bool   `pulumi:"healthCheck"`
	Id             string `pulumi:"id"`
	Interval       int    `pulumi:"interval"`
	Name           string `pulumi:"name"`
	Port           int    `pulumi:"port"`
	Protocol       string `pulumi:"protocol"`
	RealserverType string `pulumi:"realserverType"`
	Scheduler      string `pulumi:"scheduler"`
	Status         int    `pulumi:"status"`
}

// Layer4ListenersListenerInput is an input type that accepts Layer4ListenersListenerArgs and Layer4ListenersListenerOutput values.
// You can construct a concrete instance of `Layer4ListenersListenerInput` via:
//
//          Layer4ListenersListenerArgs{...}
type Layer4ListenersListenerInput interface {
	pulumi.Input

	ToLayer4ListenersListenerOutput() Layer4ListenersListenerOutput
	ToLayer4ListenersListenerOutputWithContext(context.Context) Layer4ListenersListenerOutput
}

type Layer4ListenersListenerArgs struct {
	ConnectTimeout pulumi.IntInput    `pulumi:"connectTimeout"`
	CreateTime     pulumi.StringInput `pulumi:"createTime"`
	HealthCheck    pulumi.BoolInput   `pulumi:"healthCheck"`
	Id             pulumi.StringInput `pulumi:"id"`
	Interval       pulumi.IntInput    `pulumi:"interval"`
	Name           pulumi.StringInput `pulumi:"name"`
	Port           pulumi.IntInput    `pulumi:"port"`
	Protocol       pulumi.StringInput `pulumi:"protocol"`
	RealserverType pulumi.StringInput `pulumi:"realserverType"`
	Scheduler      pulumi.StringInput `pulumi:"scheduler"`
	Status         pulumi.IntInput    `pulumi:"status"`
}

func (Layer4ListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer4ListenersListener)(nil)).Elem()
}

func (i Layer4ListenersListenerArgs) ToLayer4ListenersListenerOutput() Layer4ListenersListenerOutput {
	return i.ToLayer4ListenersListenerOutputWithContext(context.Background())
}

func (i Layer4ListenersListenerArgs) ToLayer4ListenersListenerOutputWithContext(ctx context.Context) Layer4ListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer4ListenersListenerOutput)
}

// Layer4ListenersListenerArrayInput is an input type that accepts Layer4ListenersListenerArray and Layer4ListenersListenerArrayOutput values.
// You can construct a concrete instance of `Layer4ListenersListenerArrayInput` via:
//
//          Layer4ListenersListenerArray{ Layer4ListenersListenerArgs{...} }
type Layer4ListenersListenerArrayInput interface {
	pulumi.Input

	ToLayer4ListenersListenerArrayOutput() Layer4ListenersListenerArrayOutput
	ToLayer4ListenersListenerArrayOutputWithContext(context.Context) Layer4ListenersListenerArrayOutput
}

type Layer4ListenersListenerArray []Layer4ListenersListenerInput

func (Layer4ListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer4ListenersListener)(nil)).Elem()
}

func (i Layer4ListenersListenerArray) ToLayer4ListenersListenerArrayOutput() Layer4ListenersListenerArrayOutput {
	return i.ToLayer4ListenersListenerArrayOutputWithContext(context.Background())
}

func (i Layer4ListenersListenerArray) ToLayer4ListenersListenerArrayOutputWithContext(ctx context.Context) Layer4ListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer4ListenersListenerArrayOutput)
}

type Layer4ListenersListenerOutput struct{ *pulumi.OutputState }

func (Layer4ListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer4ListenersListener)(nil)).Elem()
}

func (o Layer4ListenersListenerOutput) ToLayer4ListenersListenerOutput() Layer4ListenersListenerOutput {
	return o
}

func (o Layer4ListenersListenerOutput) ToLayer4ListenersListenerOutputWithContext(ctx context.Context) Layer4ListenersListenerOutput {
	return o
}

func (o Layer4ListenersListenerOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v Layer4ListenersListener) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

func (o Layer4ListenersListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) HealthCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v Layer4ListenersListener) bool { return v.HealthCheck }).(pulumi.BoolOutput)
}

func (o Layer4ListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v Layer4ListenersListener) int { return v.Interval }).(pulumi.IntOutput)
}

func (o Layer4ListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Layer4ListenersListener) int { return v.Port }).(pulumi.IntOutput)
}

func (o Layer4ListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) RealserverType() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.RealserverType }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v Layer4ListenersListener) string { return v.Scheduler }).(pulumi.StringOutput)
}

func (o Layer4ListenersListenerOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v Layer4ListenersListener) int { return v.Status }).(pulumi.IntOutput)
}

type Layer4ListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (Layer4ListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer4ListenersListener)(nil)).Elem()
}

func (o Layer4ListenersListenerArrayOutput) ToLayer4ListenersListenerArrayOutput() Layer4ListenersListenerArrayOutput {
	return o
}

func (o Layer4ListenersListenerArrayOutput) ToLayer4ListenersListenerArrayOutputWithContext(ctx context.Context) Layer4ListenersListenerArrayOutput {
	return o
}

func (o Layer4ListenersListenerArrayOutput) Index(i pulumi.IntInput) Layer4ListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Layer4ListenersListener {
		return vs[0].([]Layer4ListenersListener)[vs[1].(int)]
	}).(Layer4ListenersListenerOutput)
}

type Layer7ListenersListener struct {
	AuthType      int    `pulumi:"authType"`
	CertificateId string `pulumi:"certificateId"`
	// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
	ClientCertificateId  string   `pulumi:"clientCertificateId"`
	ClientCertificateIds []string `pulumi:"clientCertificateIds"`
	CreateTime           string   `pulumi:"createTime"`
	ForwardProtocol      string   `pulumi:"forwardProtocol"`
	Id                   string   `pulumi:"id"`
	Name                 string   `pulumi:"name"`
	Port                 int      `pulumi:"port"`
	Protocol             string   `pulumi:"protocol"`
	Status               int      `pulumi:"status"`
}

// Layer7ListenersListenerInput is an input type that accepts Layer7ListenersListenerArgs and Layer7ListenersListenerOutput values.
// You can construct a concrete instance of `Layer7ListenersListenerInput` via:
//
//          Layer7ListenersListenerArgs{...}
type Layer7ListenersListenerInput interface {
	pulumi.Input

	ToLayer7ListenersListenerOutput() Layer7ListenersListenerOutput
	ToLayer7ListenersListenerOutputWithContext(context.Context) Layer7ListenersListenerOutput
}

type Layer7ListenersListenerArgs struct {
	AuthType      pulumi.IntInput    `pulumi:"authType"`
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
	ClientCertificateId  pulumi.StringInput      `pulumi:"clientCertificateId"`
	ClientCertificateIds pulumi.StringArrayInput `pulumi:"clientCertificateIds"`
	CreateTime           pulumi.StringInput      `pulumi:"createTime"`
	ForwardProtocol      pulumi.StringInput      `pulumi:"forwardProtocol"`
	Id                   pulumi.StringInput      `pulumi:"id"`
	Name                 pulumi.StringInput      `pulumi:"name"`
	Port                 pulumi.IntInput         `pulumi:"port"`
	Protocol             pulumi.StringInput      `pulumi:"protocol"`
	Status               pulumi.IntInput         `pulumi:"status"`
}

func (Layer7ListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer7ListenersListener)(nil)).Elem()
}

func (i Layer7ListenersListenerArgs) ToLayer7ListenersListenerOutput() Layer7ListenersListenerOutput {
	return i.ToLayer7ListenersListenerOutputWithContext(context.Background())
}

func (i Layer7ListenersListenerArgs) ToLayer7ListenersListenerOutputWithContext(ctx context.Context) Layer7ListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer7ListenersListenerOutput)
}

// Layer7ListenersListenerArrayInput is an input type that accepts Layer7ListenersListenerArray and Layer7ListenersListenerArrayOutput values.
// You can construct a concrete instance of `Layer7ListenersListenerArrayInput` via:
//
//          Layer7ListenersListenerArray{ Layer7ListenersListenerArgs{...} }
type Layer7ListenersListenerArrayInput interface {
	pulumi.Input

	ToLayer7ListenersListenerArrayOutput() Layer7ListenersListenerArrayOutput
	ToLayer7ListenersListenerArrayOutputWithContext(context.Context) Layer7ListenersListenerArrayOutput
}

type Layer7ListenersListenerArray []Layer7ListenersListenerInput

func (Layer7ListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer7ListenersListener)(nil)).Elem()
}

func (i Layer7ListenersListenerArray) ToLayer7ListenersListenerArrayOutput() Layer7ListenersListenerArrayOutput {
	return i.ToLayer7ListenersListenerArrayOutputWithContext(context.Background())
}

func (i Layer7ListenersListenerArray) ToLayer7ListenersListenerArrayOutputWithContext(ctx context.Context) Layer7ListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer7ListenersListenerArrayOutput)
}

type Layer7ListenersListenerOutput struct{ *pulumi.OutputState }

func (Layer7ListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer7ListenersListener)(nil)).Elem()
}

func (o Layer7ListenersListenerOutput) ToLayer7ListenersListenerOutput() Layer7ListenersListenerOutput {
	return o
}

func (o Layer7ListenersListenerOutput) ToLayer7ListenersListenerOutputWithContext(ctx context.Context) Layer7ListenersListenerOutput {
	return o
}

func (o Layer7ListenersListenerOutput) AuthType() pulumi.IntOutput {
	return o.ApplyT(func(v Layer7ListenersListener) int { return v.AuthType }).(pulumi.IntOutput)
}

func (o Layer7ListenersListenerOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.CertificateId }).(pulumi.StringOutput)
}

// Deprecated: It has been deprecated from version 1.26.0. Use `client_certificate_ids` instead.
func (o Layer7ListenersListenerOutput) ClientCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.ClientCertificateId }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) ClientCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Layer7ListenersListener) []string { return v.ClientCertificateIds }).(pulumi.StringArrayOutput)
}

func (o Layer7ListenersListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) ForwardProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.ForwardProtocol }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Layer7ListenersListener) int { return v.Port }).(pulumi.IntOutput)
}

func (o Layer7ListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Layer7ListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o Layer7ListenersListenerOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v Layer7ListenersListener) int { return v.Status }).(pulumi.IntOutput)
}

type Layer7ListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (Layer7ListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Layer7ListenersListener)(nil)).Elem()
}

func (o Layer7ListenersListenerArrayOutput) ToLayer7ListenersListenerArrayOutput() Layer7ListenersListenerArrayOutput {
	return o
}

func (o Layer7ListenersListenerArrayOutput) ToLayer7ListenersListenerArrayOutputWithContext(ctx context.Context) Layer7ListenersListenerArrayOutput {
	return o
}

func (o Layer7ListenersListenerArrayOutput) Index(i pulumi.IntInput) Layer7ListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Layer7ListenersListener {
		return vs[0].([]Layer7ListenersListener)[vs[1].(int)]
	}).(Layer7ListenersListenerOutput)
}

type ProxiesProxy struct {
	AccessRegion     string                 `pulumi:"accessRegion"`
	Bandwidth        int                    `pulumi:"bandwidth"`
	Concurrent       int                    `pulumi:"concurrent"`
	CreateTime       string                 `pulumi:"createTime"`
	Domain           string                 `pulumi:"domain"`
	ForwardIp        string                 `pulumi:"forwardIp"`
	Id               string                 `pulumi:"id"`
	Ip               string                 `pulumi:"ip"`
	Name             string                 `pulumi:"name"`
	PolicyId         string                 `pulumi:"policyId"`
	ProjectId        int                    `pulumi:"projectId"`
	RealserverRegion string                 `pulumi:"realserverRegion"`
	Scalable         bool                   `pulumi:"scalable"`
	Status           string                 `pulumi:"status"`
	SupportProtocols []string               `pulumi:"supportProtocols"`
	Tags             map[string]interface{} `pulumi:"tags"`
	Version          string                 `pulumi:"version"`
}

// ProxiesProxyInput is an input type that accepts ProxiesProxyArgs and ProxiesProxyOutput values.
// You can construct a concrete instance of `ProxiesProxyInput` via:
//
//          ProxiesProxyArgs{...}
type ProxiesProxyInput interface {
	pulumi.Input

	ToProxiesProxyOutput() ProxiesProxyOutput
	ToProxiesProxyOutputWithContext(context.Context) ProxiesProxyOutput
}

type ProxiesProxyArgs struct {
	AccessRegion     pulumi.StringInput      `pulumi:"accessRegion"`
	Bandwidth        pulumi.IntInput         `pulumi:"bandwidth"`
	Concurrent       pulumi.IntInput         `pulumi:"concurrent"`
	CreateTime       pulumi.StringInput      `pulumi:"createTime"`
	Domain           pulumi.StringInput      `pulumi:"domain"`
	ForwardIp        pulumi.StringInput      `pulumi:"forwardIp"`
	Id               pulumi.StringInput      `pulumi:"id"`
	Ip               pulumi.StringInput      `pulumi:"ip"`
	Name             pulumi.StringInput      `pulumi:"name"`
	PolicyId         pulumi.StringInput      `pulumi:"policyId"`
	ProjectId        pulumi.IntInput         `pulumi:"projectId"`
	RealserverRegion pulumi.StringInput      `pulumi:"realserverRegion"`
	Scalable         pulumi.BoolInput        `pulumi:"scalable"`
	Status           pulumi.StringInput      `pulumi:"status"`
	SupportProtocols pulumi.StringArrayInput `pulumi:"supportProtocols"`
	Tags             pulumi.MapInput         `pulumi:"tags"`
	Version          pulumi.StringInput      `pulumi:"version"`
}

func (ProxiesProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxiesProxy)(nil)).Elem()
}

func (i ProxiesProxyArgs) ToProxiesProxyOutput() ProxiesProxyOutput {
	return i.ToProxiesProxyOutputWithContext(context.Background())
}

func (i ProxiesProxyArgs) ToProxiesProxyOutputWithContext(ctx context.Context) ProxiesProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxiesProxyOutput)
}

// ProxiesProxyArrayInput is an input type that accepts ProxiesProxyArray and ProxiesProxyArrayOutput values.
// You can construct a concrete instance of `ProxiesProxyArrayInput` via:
//
//          ProxiesProxyArray{ ProxiesProxyArgs{...} }
type ProxiesProxyArrayInput interface {
	pulumi.Input

	ToProxiesProxyArrayOutput() ProxiesProxyArrayOutput
	ToProxiesProxyArrayOutputWithContext(context.Context) ProxiesProxyArrayOutput
}

type ProxiesProxyArray []ProxiesProxyInput

func (ProxiesProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxiesProxy)(nil)).Elem()
}

func (i ProxiesProxyArray) ToProxiesProxyArrayOutput() ProxiesProxyArrayOutput {
	return i.ToProxiesProxyArrayOutputWithContext(context.Background())
}

func (i ProxiesProxyArray) ToProxiesProxyArrayOutputWithContext(ctx context.Context) ProxiesProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxiesProxyArrayOutput)
}

type ProxiesProxyOutput struct{ *pulumi.OutputState }

func (ProxiesProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxiesProxy)(nil)).Elem()
}

func (o ProxiesProxyOutput) ToProxiesProxyOutput() ProxiesProxyOutput {
	return o
}

func (o ProxiesProxyOutput) ToProxiesProxyOutputWithContext(ctx context.Context) ProxiesProxyOutput {
	return o
}

func (o ProxiesProxyOutput) AccessRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.AccessRegion }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ProxiesProxy) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o ProxiesProxyOutput) Concurrent() pulumi.IntOutput {
	return o.ApplyT(func(v ProxiesProxy) int { return v.Concurrent }).(pulumi.IntOutput)
}

func (o ProxiesProxyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Domain }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) ForwardIp() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.ForwardIp }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Id }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Ip }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v ProxiesProxy) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o ProxiesProxyOutput) RealserverRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.RealserverRegion }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) Scalable() pulumi.BoolOutput {
	return o.ApplyT(func(v ProxiesProxy) bool { return v.Scalable }).(pulumi.BoolOutput)
}

func (o ProxiesProxyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Status }).(pulumi.StringOutput)
}

func (o ProxiesProxyOutput) SupportProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProxiesProxy) []string { return v.SupportProtocols }).(pulumi.StringArrayOutput)
}

func (o ProxiesProxyOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v ProxiesProxy) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o ProxiesProxyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ProxiesProxy) string { return v.Version }).(pulumi.StringOutput)
}

type ProxiesProxyArrayOutput struct{ *pulumi.OutputState }

func (ProxiesProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxiesProxy)(nil)).Elem()
}

func (o ProxiesProxyArrayOutput) ToProxiesProxyArrayOutput() ProxiesProxyArrayOutput {
	return o
}

func (o ProxiesProxyArrayOutput) ToProxiesProxyArrayOutputWithContext(ctx context.Context) ProxiesProxyArrayOutput {
	return o
}

func (o ProxiesProxyArrayOutput) Index(i pulumi.IntInput) ProxiesProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxiesProxy {
		return vs[0].([]ProxiesProxy)[vs[1].(int)]
	}).(ProxiesProxyOutput)
}

type RealserversRealserver struct {
	Domain    string                 `pulumi:"domain"`
	Id        string                 `pulumi:"id"`
	Ip        string                 `pulumi:"ip"`
	Name      string                 `pulumi:"name"`
	ProjectId int                    `pulumi:"projectId"`
	Tags      map[string]interface{} `pulumi:"tags"`
}

// RealserversRealserverInput is an input type that accepts RealserversRealserverArgs and RealserversRealserverOutput values.
// You can construct a concrete instance of `RealserversRealserverInput` via:
//
//          RealserversRealserverArgs{...}
type RealserversRealserverInput interface {
	pulumi.Input

	ToRealserversRealserverOutput() RealserversRealserverOutput
	ToRealserversRealserverOutputWithContext(context.Context) RealserversRealserverOutput
}

type RealserversRealserverArgs struct {
	Domain    pulumi.StringInput `pulumi:"domain"`
	Id        pulumi.StringInput `pulumi:"id"`
	Ip        pulumi.StringInput `pulumi:"ip"`
	Name      pulumi.StringInput `pulumi:"name"`
	ProjectId pulumi.IntInput    `pulumi:"projectId"`
	Tags      pulumi.MapInput    `pulumi:"tags"`
}

func (RealserversRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealserversRealserver)(nil)).Elem()
}

func (i RealserversRealserverArgs) ToRealserversRealserverOutput() RealserversRealserverOutput {
	return i.ToRealserversRealserverOutputWithContext(context.Background())
}

func (i RealserversRealserverArgs) ToRealserversRealserverOutputWithContext(ctx context.Context) RealserversRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealserversRealserverOutput)
}

// RealserversRealserverArrayInput is an input type that accepts RealserversRealserverArray and RealserversRealserverArrayOutput values.
// You can construct a concrete instance of `RealserversRealserverArrayInput` via:
//
//          RealserversRealserverArray{ RealserversRealserverArgs{...} }
type RealserversRealserverArrayInput interface {
	pulumi.Input

	ToRealserversRealserverArrayOutput() RealserversRealserverArrayOutput
	ToRealserversRealserverArrayOutputWithContext(context.Context) RealserversRealserverArrayOutput
}

type RealserversRealserverArray []RealserversRealserverInput

func (RealserversRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealserversRealserver)(nil)).Elem()
}

func (i RealserversRealserverArray) ToRealserversRealserverArrayOutput() RealserversRealserverArrayOutput {
	return i.ToRealserversRealserverArrayOutputWithContext(context.Background())
}

func (i RealserversRealserverArray) ToRealserversRealserverArrayOutputWithContext(ctx context.Context) RealserversRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealserversRealserverArrayOutput)
}

type RealserversRealserverOutput struct{ *pulumi.OutputState }

func (RealserversRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealserversRealserver)(nil)).Elem()
}

func (o RealserversRealserverOutput) ToRealserversRealserverOutput() RealserversRealserverOutput {
	return o
}

func (o RealserversRealserverOutput) ToRealserversRealserverOutputWithContext(ctx context.Context) RealserversRealserverOutput {
	return o
}

func (o RealserversRealserverOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v RealserversRealserver) string { return v.Domain }).(pulumi.StringOutput)
}

func (o RealserversRealserverOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RealserversRealserver) string { return v.Id }).(pulumi.StringOutput)
}

func (o RealserversRealserverOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v RealserversRealserver) string { return v.Ip }).(pulumi.StringOutput)
}

func (o RealserversRealserverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RealserversRealserver) string { return v.Name }).(pulumi.StringOutput)
}

func (o RealserversRealserverOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v RealserversRealserver) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o RealserversRealserverOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v RealserversRealserver) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type RealserversRealserverArrayOutput struct{ *pulumi.OutputState }

func (RealserversRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealserversRealserver)(nil)).Elem()
}

func (o RealserversRealserverArrayOutput) ToRealserversRealserverArrayOutput() RealserversRealserverArrayOutput {
	return o
}

func (o RealserversRealserverArrayOutput) ToRealserversRealserverArrayOutputWithContext(ctx context.Context) RealserversRealserverArrayOutput {
	return o
}

func (o RealserversRealserverArrayOutput) Index(i pulumi.IntInput) RealserversRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealserversRealserver {
		return vs[0].([]RealserversRealserver)[vs[1].(int)]
	}).(RealserversRealserverOutput)
}

type SecurityRulesRule struct {
	Action   string `pulumi:"action"`
	CidrIp   string `pulumi:"cidrIp"`
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Port     string `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// SecurityRulesRuleInput is an input type that accepts SecurityRulesRuleArgs and SecurityRulesRuleOutput values.
// You can construct a concrete instance of `SecurityRulesRuleInput` via:
//
//          SecurityRulesRuleArgs{...}
type SecurityRulesRuleInput interface {
	pulumi.Input

	ToSecurityRulesRuleOutput() SecurityRulesRuleOutput
	ToSecurityRulesRuleOutputWithContext(context.Context) SecurityRulesRuleOutput
}

type SecurityRulesRuleArgs struct {
	Action   pulumi.StringInput `pulumi:"action"`
	CidrIp   pulumi.StringInput `pulumi:"cidrIp"`
	Id       pulumi.StringInput `pulumi:"id"`
	Name     pulumi.StringInput `pulumi:"name"`
	Port     pulumi.StringInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (SecurityRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulesRule)(nil)).Elem()
}

func (i SecurityRulesRuleArgs) ToSecurityRulesRuleOutput() SecurityRulesRuleOutput {
	return i.ToSecurityRulesRuleOutputWithContext(context.Background())
}

func (i SecurityRulesRuleArgs) ToSecurityRulesRuleOutputWithContext(ctx context.Context) SecurityRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulesRuleOutput)
}

// SecurityRulesRuleArrayInput is an input type that accepts SecurityRulesRuleArray and SecurityRulesRuleArrayOutput values.
// You can construct a concrete instance of `SecurityRulesRuleArrayInput` via:
//
//          SecurityRulesRuleArray{ SecurityRulesRuleArgs{...} }
type SecurityRulesRuleArrayInput interface {
	pulumi.Input

	ToSecurityRulesRuleArrayOutput() SecurityRulesRuleArrayOutput
	ToSecurityRulesRuleArrayOutputWithContext(context.Context) SecurityRulesRuleArrayOutput
}

type SecurityRulesRuleArray []SecurityRulesRuleInput

func (SecurityRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRulesRule)(nil)).Elem()
}

func (i SecurityRulesRuleArray) ToSecurityRulesRuleArrayOutput() SecurityRulesRuleArrayOutput {
	return i.ToSecurityRulesRuleArrayOutputWithContext(context.Background())
}

func (i SecurityRulesRuleArray) ToSecurityRulesRuleArrayOutputWithContext(ctx context.Context) SecurityRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulesRuleArrayOutput)
}

type SecurityRulesRuleOutput struct{ *pulumi.OutputState }

func (SecurityRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulesRule)(nil)).Elem()
}

func (o SecurityRulesRuleOutput) ToSecurityRulesRuleOutput() SecurityRulesRuleOutput {
	return o
}

func (o SecurityRulesRuleOutput) ToSecurityRulesRuleOutputWithContext(ctx context.Context) SecurityRulesRuleOutput {
	return o
}

func (o SecurityRulesRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o SecurityRulesRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

func (o SecurityRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o SecurityRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o SecurityRulesRuleOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.Port }).(pulumi.StringOutput)
}

func (o SecurityRulesRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulesRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type SecurityRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRulesRule)(nil)).Elem()
}

func (o SecurityRulesRuleArrayOutput) ToSecurityRulesRuleArrayOutput() SecurityRulesRuleArrayOutput {
	return o
}

func (o SecurityRulesRuleArrayOutput) ToSecurityRulesRuleArrayOutputWithContext(ctx context.Context) SecurityRulesRuleArrayOutput {
	return o
}

func (o SecurityRulesRuleArrayOutput) Index(i pulumi.IntInput) SecurityRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRulesRule {
		return vs[0].([]SecurityRulesRule)[vs[1].(int)]
	}).(SecurityRulesRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateInput)(nil)).Elem(), CertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateArrayInput)(nil)).Elem(), CertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageInfoListErrorPageInfoListInput)(nil)).Elem(), DomainErrorPageInfoListErrorPageInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageInfoListErrorPageInfoListArrayInput)(nil)).Elem(), DomainErrorPageInfoListErrorPageInfoListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpDomainsDomainInput)(nil)).Elem(), HttpDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpDomainsDomainArrayInput)(nil)).Elem(), HttpDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRuleRealserverInput)(nil)).Elem(), HttpRuleRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRuleRealserverArrayInput)(nil)).Elem(), HttpRuleRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRulesRuleInput)(nil)).Elem(), HttpRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRulesRuleArrayInput)(nil)).Elem(), HttpRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRulesRuleRealserverInput)(nil)).Elem(), HttpRulesRuleRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRulesRuleRealserverArrayInput)(nil)).Elem(), HttpRulesRuleRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer4ListenerRealserverBindSetInput)(nil)).Elem(), Layer4ListenerRealserverBindSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer4ListenerRealserverBindSetArrayInput)(nil)).Elem(), Layer4ListenerRealserverBindSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer4ListenersListenerInput)(nil)).Elem(), Layer4ListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer4ListenersListenerArrayInput)(nil)).Elem(), Layer4ListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer7ListenersListenerInput)(nil)).Elem(), Layer7ListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer7ListenersListenerArrayInput)(nil)).Elem(), Layer7ListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxiesProxyInput)(nil)).Elem(), ProxiesProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxiesProxyArrayInput)(nil)).Elem(), ProxiesProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealserversRealserverInput)(nil)).Elem(), RealserversRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealserversRealserverArrayInput)(nil)).Elem(), RealserversRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityRulesRuleInput)(nil)).Elem(), SecurityRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityRulesRuleArrayInput)(nil)).Elem(), SecurityRulesRuleArray{})
	pulumi.RegisterOutputType(CertificatesCertificateOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(DomainErrorPageInfoListErrorPageInfoListOutput{})
	pulumi.RegisterOutputType(DomainErrorPageInfoListErrorPageInfoListArrayOutput{})
	pulumi.RegisterOutputType(HttpDomainsDomainOutput{})
	pulumi.RegisterOutputType(HttpDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(HttpRuleRealserverOutput{})
	pulumi.RegisterOutputType(HttpRuleRealserverArrayOutput{})
	pulumi.RegisterOutputType(HttpRulesRuleOutput{})
	pulumi.RegisterOutputType(HttpRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(HttpRulesRuleRealserverOutput{})
	pulumi.RegisterOutputType(HttpRulesRuleRealserverArrayOutput{})
	pulumi.RegisterOutputType(Layer4ListenerRealserverBindSetOutput{})
	pulumi.RegisterOutputType(Layer4ListenerRealserverBindSetArrayOutput{})
	pulumi.RegisterOutputType(Layer4ListenersListenerOutput{})
	pulumi.RegisterOutputType(Layer4ListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(Layer7ListenersListenerOutput{})
	pulumi.RegisterOutputType(Layer7ListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(ProxiesProxyOutput{})
	pulumi.RegisterOutputType(ProxiesProxyArrayOutput{})
	pulumi.RegisterOutputType(RealserversRealserverOutput{})
	pulumi.RegisterOutputType(RealserversRealserverArrayOutput{})
	pulumi.RegisterOutputType(SecurityRulesRuleOutput{})
	pulumi.RegisterOutputType(SecurityRulesRuleArrayOutput{})
}
