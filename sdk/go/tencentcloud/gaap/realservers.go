// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Realservers(ctx *pulumi.Context, args *RealserversArgs, opts ...pulumi.InvokeOption) (*RealserversResult, error) {
	var rv RealserversResult
	err := ctx.Invoke("tencentcloud:Gaap/realservers:Realservers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Realservers.
type RealserversArgs struct {
	Domain           *string                `pulumi:"domain"`
	Ip               *string                `pulumi:"ip"`
	Name             *string                `pulumi:"name"`
	ProjectId        *int                   `pulumi:"projectId"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by Realservers.
type RealserversResult struct {
	Domain *string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                  `pulumi:"id"`
	Ip               *string                 `pulumi:"ip"`
	Name             *string                 `pulumi:"name"`
	ProjectId        *int                    `pulumi:"projectId"`
	Realservers      []RealserversRealserver `pulumi:"realservers"`
	ResultOutputFile *string                 `pulumi:"resultOutputFile"`
	Tags             map[string]interface{}  `pulumi:"tags"`
}

func RealserversOutput(ctx *pulumi.Context, args RealserversOutputArgs, opts ...pulumi.InvokeOption) RealserversResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RealserversResult, error) {
			args := v.(RealserversArgs)
			r, err := Realservers(ctx, &args, opts...)
			var s RealserversResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RealserversResultOutput)
}

// A collection of arguments for invoking Realservers.
type RealserversOutputArgs struct {
	Domain           pulumi.StringPtrInput `pulumi:"domain"`
	Ip               pulumi.StringPtrInput `pulumi:"ip"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ProjectId        pulumi.IntPtrInput    `pulumi:"projectId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (RealserversOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealserversArgs)(nil)).Elem()
}

// A collection of values returned by Realservers.
type RealserversResultOutput struct{ *pulumi.OutputState }

func (RealserversResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealserversResult)(nil)).Elem()
}

func (o RealserversResultOutput) ToRealserversResultOutput() RealserversResultOutput {
	return o
}

func (o RealserversResultOutput) ToRealserversResultOutputWithContext(ctx context.Context) RealserversResultOutput {
	return o
}

func (o RealserversResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealserversResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RealserversResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RealserversResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o RealserversResultOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealserversResult) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RealserversResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealserversResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RealserversResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RealserversResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func (o RealserversResultOutput) Realservers() RealserversRealserverArrayOutput {
	return o.ApplyT(func(v RealserversResult) []RealserversRealserver { return v.Realservers }).(RealserversRealserverArrayOutput)
}

func (o RealserversResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealserversResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o RealserversResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v RealserversResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(RealserversResultOutput{})
}
