// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountDBAttachment struct {
	pulumi.CustomResourceState

	// SQL Server account name.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// SQL Server DB name.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// SQL Server instance ID that the account belongs to.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
	Privilege pulumi.StringOutput `pulumi:"privilege"`
}

// NewAccountDBAttachment registers a new resource with the given unique name, arguments, and options.
func NewAccountDBAttachment(ctx *pulumi.Context,
	name string, args *AccountDBAttachmentArgs, opts ...pulumi.ResourceOption) (*AccountDBAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.DbName == nil {
		return nil, errors.New("invalid value for required argument 'DbName'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Privilege == nil {
		return nil, errors.New("invalid value for required argument 'Privilege'")
	}
	var resource AccountDBAttachment
	err := ctx.RegisterResource("tencentcloud:Sqlserver/accountDBAttachment:AccountDBAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountDBAttachment gets an existing AccountDBAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountDBAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountDBAttachmentState, opts ...pulumi.ResourceOption) (*AccountDBAttachment, error) {
	var resource AccountDBAttachment
	err := ctx.ReadResource("tencentcloud:Sqlserver/accountDBAttachment:AccountDBAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountDBAttachment resources.
type accountDBAttachmentState struct {
	// SQL Server account name.
	AccountName *string `pulumi:"accountName"`
	// SQL Server DB name.
	DbName *string `pulumi:"dbName"`
	// SQL Server instance ID that the account belongs to.
	InstanceId *string `pulumi:"instanceId"`
	// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
	Privilege *string `pulumi:"privilege"`
}

type AccountDBAttachmentState struct {
	// SQL Server account name.
	AccountName pulumi.StringPtrInput
	// SQL Server DB name.
	DbName pulumi.StringPtrInput
	// SQL Server instance ID that the account belongs to.
	InstanceId pulumi.StringPtrInput
	// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
	Privilege pulumi.StringPtrInput
}

func (AccountDBAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountDBAttachmentState)(nil)).Elem()
}

type accountDBAttachmentArgs struct {
	// SQL Server account name.
	AccountName string `pulumi:"accountName"`
	// SQL Server DB name.
	DbName string `pulumi:"dbName"`
	// SQL Server instance ID that the account belongs to.
	InstanceId string `pulumi:"instanceId"`
	// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
	Privilege string `pulumi:"privilege"`
}

// The set of arguments for constructing a AccountDBAttachment resource.
type AccountDBAttachmentArgs struct {
	// SQL Server account name.
	AccountName pulumi.StringInput
	// SQL Server DB name.
	DbName pulumi.StringInput
	// SQL Server instance ID that the account belongs to.
	InstanceId pulumi.StringInput
	// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
	Privilege pulumi.StringInput
}

func (AccountDBAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountDBAttachmentArgs)(nil)).Elem()
}

type AccountDBAttachmentInput interface {
	pulumi.Input

	ToAccountDBAttachmentOutput() AccountDBAttachmentOutput
	ToAccountDBAttachmentOutputWithContext(ctx context.Context) AccountDBAttachmentOutput
}

func (*AccountDBAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountDBAttachment)(nil)).Elem()
}

func (i *AccountDBAttachment) ToAccountDBAttachmentOutput() AccountDBAttachmentOutput {
	return i.ToAccountDBAttachmentOutputWithContext(context.Background())
}

func (i *AccountDBAttachment) ToAccountDBAttachmentOutputWithContext(ctx context.Context) AccountDBAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDBAttachmentOutput)
}

// AccountDBAttachmentArrayInput is an input type that accepts AccountDBAttachmentArray and AccountDBAttachmentArrayOutput values.
// You can construct a concrete instance of `AccountDBAttachmentArrayInput` via:
//
//          AccountDBAttachmentArray{ AccountDBAttachmentArgs{...} }
type AccountDBAttachmentArrayInput interface {
	pulumi.Input

	ToAccountDBAttachmentArrayOutput() AccountDBAttachmentArrayOutput
	ToAccountDBAttachmentArrayOutputWithContext(context.Context) AccountDBAttachmentArrayOutput
}

type AccountDBAttachmentArray []AccountDBAttachmentInput

func (AccountDBAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountDBAttachment)(nil)).Elem()
}

func (i AccountDBAttachmentArray) ToAccountDBAttachmentArrayOutput() AccountDBAttachmentArrayOutput {
	return i.ToAccountDBAttachmentArrayOutputWithContext(context.Background())
}

func (i AccountDBAttachmentArray) ToAccountDBAttachmentArrayOutputWithContext(ctx context.Context) AccountDBAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDBAttachmentArrayOutput)
}

// AccountDBAttachmentMapInput is an input type that accepts AccountDBAttachmentMap and AccountDBAttachmentMapOutput values.
// You can construct a concrete instance of `AccountDBAttachmentMapInput` via:
//
//          AccountDBAttachmentMap{ "key": AccountDBAttachmentArgs{...} }
type AccountDBAttachmentMapInput interface {
	pulumi.Input

	ToAccountDBAttachmentMapOutput() AccountDBAttachmentMapOutput
	ToAccountDBAttachmentMapOutputWithContext(context.Context) AccountDBAttachmentMapOutput
}

type AccountDBAttachmentMap map[string]AccountDBAttachmentInput

func (AccountDBAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountDBAttachment)(nil)).Elem()
}

func (i AccountDBAttachmentMap) ToAccountDBAttachmentMapOutput() AccountDBAttachmentMapOutput {
	return i.ToAccountDBAttachmentMapOutputWithContext(context.Background())
}

func (i AccountDBAttachmentMap) ToAccountDBAttachmentMapOutputWithContext(ctx context.Context) AccountDBAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDBAttachmentMapOutput)
}

type AccountDBAttachmentOutput struct{ *pulumi.OutputState }

func (AccountDBAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountDBAttachment)(nil)).Elem()
}

func (o AccountDBAttachmentOutput) ToAccountDBAttachmentOutput() AccountDBAttachmentOutput {
	return o
}

func (o AccountDBAttachmentOutput) ToAccountDBAttachmentOutputWithContext(ctx context.Context) AccountDBAttachmentOutput {
	return o
}

// SQL Server account name.
func (o AccountDBAttachmentOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountDBAttachment) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// SQL Server DB name.
func (o AccountDBAttachmentOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountDBAttachment) pulumi.StringOutput { return v.DbName }).(pulumi.StringOutput)
}

// SQL Server instance ID that the account belongs to.
func (o AccountDBAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountDBAttachment) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Privilege of the account on DB. Valid values: `ReadOnly`, `ReadWrite`.
func (o AccountDBAttachmentOutput) Privilege() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountDBAttachment) pulumi.StringOutput { return v.Privilege }).(pulumi.StringOutput)
}

type AccountDBAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AccountDBAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountDBAttachment)(nil)).Elem()
}

func (o AccountDBAttachmentArrayOutput) ToAccountDBAttachmentArrayOutput() AccountDBAttachmentArrayOutput {
	return o
}

func (o AccountDBAttachmentArrayOutput) ToAccountDBAttachmentArrayOutputWithContext(ctx context.Context) AccountDBAttachmentArrayOutput {
	return o
}

func (o AccountDBAttachmentArrayOutput) Index(i pulumi.IntInput) AccountDBAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountDBAttachment {
		return vs[0].([]*AccountDBAttachment)[vs[1].(int)]
	}).(AccountDBAttachmentOutput)
}

type AccountDBAttachmentMapOutput struct{ *pulumi.OutputState }

func (AccountDBAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountDBAttachment)(nil)).Elem()
}

func (o AccountDBAttachmentMapOutput) ToAccountDBAttachmentMapOutput() AccountDBAttachmentMapOutput {
	return o
}

func (o AccountDBAttachmentMapOutput) ToAccountDBAttachmentMapOutputWithContext(ctx context.Context) AccountDBAttachmentMapOutput {
	return o
}

func (o AccountDBAttachmentMapOutput) MapIndex(k pulumi.StringInput) AccountDBAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountDBAttachment {
		return vs[0].(map[string]*AccountDBAttachment)[vs[1].(string)]
	}).(AccountDBAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountDBAttachmentInput)(nil)).Elem(), &AccountDBAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountDBAttachmentArrayInput)(nil)).Elem(), AccountDBAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountDBAttachmentMapInput)(nil)).Elem(), AccountDBAttachmentMap{})
	pulumi.RegisterOutputType(AccountDBAttachmentOutput{})
	pulumi.RegisterOutputType(AccountDBAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AccountDBAttachmentMapOutput{})
}
