// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query Publish Subscribe resources for the specific SQL Server instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Sqlserver.NewPublishSubscribe(ctx, "example", &Sqlserver.PublishSubscribeArgs{
// 			PublishInstanceId:    pulumi.Any(tencentcloud_sqlserver_instance.Publish_instance.Id),
// 			SubscribeInstanceId:  pulumi.Any(tencentcloud_sqlserver_instance.Subscribe_instance.Id),
// 			PublishSubscribeName: pulumi.String("example"),
// 			DeleteSubscribeDb:    pulumi.Bool(false),
// 			DatabaseTuples: sqlserver.PublishSubscribeDatabaseTupleArray{
// 				&sqlserver.PublishSubscribeDatabaseTupleArgs{
// 					PublishDatabase: pulumi.Any(tencentcloud_sqlserver_db.Test_publish_subscribe.Name),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPublishSubscribes(ctx *pulumi.Context, args *GetPublishSubscribesArgs, opts ...pulumi.InvokeOption) (*GetPublishSubscribesResult, error) {
	var rv GetPublishSubscribesResult
	err := ctx.Invoke("tencentcloud:Sqlserver/getPublishSubscribes:getPublishSubscribes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPublishSubscribes.
type GetPublishSubscribesArgs struct {
	// ID of the SQL Server instance.
	InstanceId string `pulumi:"instanceId"`
	// The subscribe/publish instance ID. It is related to whether the `instanceId` is a publish instance or a subscribe instance. when `instanceId` is a publish instance, this field is filtered according to the subscribe instance ID; when `instanceId` is a subscribe instance, this field is filtering according to the publish instance ID.
	PubOrSubInstanceId *string `pulumi:"pubOrSubInstanceId"`
	// The intranet IP of the subscribe/publish instance. It is related to whether the `instanceId` is a publish instance or a subscribe instance. when `instanceId` is a publish instance, this field is filtered according to the intranet IP of the subscribe instance; when `instanceId` is a subscribe instance, this field is based on the publish instance intranet IP filter.
	PubOrSubInstanceIp *string `pulumi:"pubOrSubInstanceIp"`
	// Name of publish database.
	PublishDatabase *string `pulumi:"publishDatabase"`
	// The id of the Publish and Subscribe.
	PublishSubscribeId *int `pulumi:"publishSubscribeId"`
	// The name of the Publish and Subscribe.
	PublishSubscribeName *string `pulumi:"publishSubscribeName"`
	// Used to store results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Name of subscribe database.
	SubscribeDatabase *string `pulumi:"subscribeDatabase"`
}

// A collection of values returned by getPublishSubscribes.
type GetPublishSubscribesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string  `pulumi:"id"`
	InstanceId         string  `pulumi:"instanceId"`
	PubOrSubInstanceId *string `pulumi:"pubOrSubInstanceId"`
	PubOrSubInstanceIp *string `pulumi:"pubOrSubInstanceIp"`
	// Name of the publish SQL Server instance.
	PublishDatabase *string `pulumi:"publishDatabase"`
	// The id of the Publish and Subscribe.
	PublishSubscribeId *int `pulumi:"publishSubscribeId"`
	// Publish and subscribe list. Each element contains the following attributes.
	PublishSubscribeLists []GetPublishSubscribesPublishSubscribeList `pulumi:"publishSubscribeLists"`
	// The name of the Publish and Subscribe.
	PublishSubscribeName *string `pulumi:"publishSubscribeName"`
	ResultOutputFile     *string `pulumi:"resultOutputFile"`
	// Name of the subscribe SQL Server instance.
	SubscribeDatabase *string `pulumi:"subscribeDatabase"`
}

func GetPublishSubscribesOutput(ctx *pulumi.Context, args GetPublishSubscribesOutputArgs, opts ...pulumi.InvokeOption) GetPublishSubscribesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPublishSubscribesResult, error) {
			args := v.(GetPublishSubscribesArgs)
			r, err := GetPublishSubscribes(ctx, &args, opts...)
			var s GetPublishSubscribesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPublishSubscribesResultOutput)
}

// A collection of arguments for invoking getPublishSubscribes.
type GetPublishSubscribesOutputArgs struct {
	// ID of the SQL Server instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The subscribe/publish instance ID. It is related to whether the `instanceId` is a publish instance or a subscribe instance. when `instanceId` is a publish instance, this field is filtered according to the subscribe instance ID; when `instanceId` is a subscribe instance, this field is filtering according to the publish instance ID.
	PubOrSubInstanceId pulumi.StringPtrInput `pulumi:"pubOrSubInstanceId"`
	// The intranet IP of the subscribe/publish instance. It is related to whether the `instanceId` is a publish instance or a subscribe instance. when `instanceId` is a publish instance, this field is filtered according to the intranet IP of the subscribe instance; when `instanceId` is a subscribe instance, this field is based on the publish instance intranet IP filter.
	PubOrSubInstanceIp pulumi.StringPtrInput `pulumi:"pubOrSubInstanceIp"`
	// Name of publish database.
	PublishDatabase pulumi.StringPtrInput `pulumi:"publishDatabase"`
	// The id of the Publish and Subscribe.
	PublishSubscribeId pulumi.IntPtrInput `pulumi:"publishSubscribeId"`
	// The name of the Publish and Subscribe.
	PublishSubscribeName pulumi.StringPtrInput `pulumi:"publishSubscribeName"`
	// Used to store results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Name of subscribe database.
	SubscribeDatabase pulumi.StringPtrInput `pulumi:"subscribeDatabase"`
}

func (GetPublishSubscribesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesArgs)(nil)).Elem()
}

// A collection of values returned by getPublishSubscribes.
type GetPublishSubscribesResultOutput struct{ *pulumi.OutputState }

func (GetPublishSubscribesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesResult)(nil)).Elem()
}

func (o GetPublishSubscribesResultOutput) ToGetPublishSubscribesResultOutput() GetPublishSubscribesResultOutput {
	return o
}

func (o GetPublishSubscribesResultOutput) ToGetPublishSubscribesResultOutputWithContext(ctx context.Context) GetPublishSubscribesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPublishSubscribesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPublishSubscribesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetPublishSubscribesResultOutput) PubOrSubInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.PubOrSubInstanceId }).(pulumi.StringPtrOutput)
}

func (o GetPublishSubscribesResultOutput) PubOrSubInstanceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.PubOrSubInstanceIp }).(pulumi.StringPtrOutput)
}

// Name of the publish SQL Server instance.
func (o GetPublishSubscribesResultOutput) PublishDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.PublishDatabase }).(pulumi.StringPtrOutput)
}

// The id of the Publish and Subscribe.
func (o GetPublishSubscribesResultOutput) PublishSubscribeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *int { return v.PublishSubscribeId }).(pulumi.IntPtrOutput)
}

// Publish and subscribe list. Each element contains the following attributes.
func (o GetPublishSubscribesResultOutput) PublishSubscribeLists() GetPublishSubscribesPublishSubscribeListArrayOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) []GetPublishSubscribesPublishSubscribeList {
		return v.PublishSubscribeLists
	}).(GetPublishSubscribesPublishSubscribeListArrayOutput)
}

// The name of the Publish and Subscribe.
func (o GetPublishSubscribesResultOutput) PublishSubscribeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.PublishSubscribeName }).(pulumi.StringPtrOutput)
}

func (o GetPublishSubscribesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Name of the subscribe SQL Server instance.
func (o GetPublishSubscribesResultOutput) SubscribeDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishSubscribesResult) *string { return v.SubscribeDatabase }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPublishSubscribesResultOutput{})
}
