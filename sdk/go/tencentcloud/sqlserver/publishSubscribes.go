// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func PublishSubscribes(ctx *pulumi.Context, args *PublishSubscribesArgs, opts ...pulumi.InvokeOption) (*PublishSubscribesResult, error) {
	var rv PublishSubscribesResult
	err := ctx.Invoke("tencentcloud:Sqlserver/publishSubscribes:PublishSubscribes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking PublishSubscribes.
type PublishSubscribesArgs struct {
	InstanceId           string  `pulumi:"instanceId"`
	PubOrSubInstanceId   *string `pulumi:"pubOrSubInstanceId"`
	PubOrSubInstanceIp   *string `pulumi:"pubOrSubInstanceIp"`
	PublishDatabase      *string `pulumi:"publishDatabase"`
	PublishSubscribeId   *int    `pulumi:"publishSubscribeId"`
	PublishSubscribeName *string `pulumi:"publishSubscribeName"`
	ResultOutputFile     *string `pulumi:"resultOutputFile"`
	SubscribeDatabase    *string `pulumi:"subscribeDatabase"`
}

// A collection of values returned by PublishSubscribes.
type PublishSubscribesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                    string                                  `pulumi:"id"`
	InstanceId            string                                  `pulumi:"instanceId"`
	PubOrSubInstanceId    *string                                 `pulumi:"pubOrSubInstanceId"`
	PubOrSubInstanceIp    *string                                 `pulumi:"pubOrSubInstanceIp"`
	PublishDatabase       *string                                 `pulumi:"publishDatabase"`
	PublishSubscribeId    *int                                    `pulumi:"publishSubscribeId"`
	PublishSubscribeLists []PublishSubscribesPublishSubscribeList `pulumi:"publishSubscribeLists"`
	PublishSubscribeName  *string                                 `pulumi:"publishSubscribeName"`
	ResultOutputFile      *string                                 `pulumi:"resultOutputFile"`
	SubscribeDatabase     *string                                 `pulumi:"subscribeDatabase"`
}

func PublishSubscribesOutput(ctx *pulumi.Context, args PublishSubscribesOutputArgs, opts ...pulumi.InvokeOption) PublishSubscribesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (PublishSubscribesResult, error) {
			args := v.(PublishSubscribesArgs)
			r, err := PublishSubscribes(ctx, &args, opts...)
			var s PublishSubscribesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(PublishSubscribesResultOutput)
}

// A collection of arguments for invoking PublishSubscribes.
type PublishSubscribesOutputArgs struct {
	InstanceId           pulumi.StringInput    `pulumi:"instanceId"`
	PubOrSubInstanceId   pulumi.StringPtrInput `pulumi:"pubOrSubInstanceId"`
	PubOrSubInstanceIp   pulumi.StringPtrInput `pulumi:"pubOrSubInstanceIp"`
	PublishDatabase      pulumi.StringPtrInput `pulumi:"publishDatabase"`
	PublishSubscribeId   pulumi.IntPtrInput    `pulumi:"publishSubscribeId"`
	PublishSubscribeName pulumi.StringPtrInput `pulumi:"publishSubscribeName"`
	ResultOutputFile     pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SubscribeDatabase    pulumi.StringPtrInput `pulumi:"subscribeDatabase"`
}

func (PublishSubscribesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishSubscribesArgs)(nil)).Elem()
}

// A collection of values returned by PublishSubscribes.
type PublishSubscribesResultOutput struct{ *pulumi.OutputState }

func (PublishSubscribesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishSubscribesResult)(nil)).Elem()
}

func (o PublishSubscribesResultOutput) ToPublishSubscribesResultOutput() PublishSubscribesResultOutput {
	return o
}

func (o PublishSubscribesResultOutput) ToPublishSubscribesResultOutputWithContext(ctx context.Context) PublishSubscribesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o PublishSubscribesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PublishSubscribesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o PublishSubscribesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v PublishSubscribesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o PublishSubscribesResultOutput) PubOrSubInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.PubOrSubInstanceId }).(pulumi.StringPtrOutput)
}

func (o PublishSubscribesResultOutput) PubOrSubInstanceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.PubOrSubInstanceIp }).(pulumi.StringPtrOutput)
}

func (o PublishSubscribesResultOutput) PublishDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.PublishDatabase }).(pulumi.StringPtrOutput)
}

func (o PublishSubscribesResultOutput) PublishSubscribeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *int { return v.PublishSubscribeId }).(pulumi.IntPtrOutput)
}

func (o PublishSubscribesResultOutput) PublishSubscribeLists() PublishSubscribesPublishSubscribeListArrayOutput {
	return o.ApplyT(func(v PublishSubscribesResult) []PublishSubscribesPublishSubscribeList {
		return v.PublishSubscribeLists
	}).(PublishSubscribesPublishSubscribeListArrayOutput)
}

func (o PublishSubscribesResultOutput) PublishSubscribeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.PublishSubscribeName }).(pulumi.StringPtrOutput)
}

func (o PublishSubscribesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o PublishSubscribesResultOutput) SubscribeDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublishSubscribesResult) *string { return v.SubscribeDatabase }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PublishSubscribesResultOutput{})
}
