// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceSnatIp struct {
	Ip       *string `pulumi:"ip"`
	SubnetId string  `pulumi:"subnetId"`
}

// InstanceSnatIpInput is an input type that accepts InstanceSnatIpArgs and InstanceSnatIpOutput values.
// You can construct a concrete instance of `InstanceSnatIpInput` via:
//
//          InstanceSnatIpArgs{...}
type InstanceSnatIpInput interface {
	pulumi.Input

	ToInstanceSnatIpOutput() InstanceSnatIpOutput
	ToInstanceSnatIpOutputWithContext(context.Context) InstanceSnatIpOutput
}

type InstanceSnatIpArgs struct {
	Ip       pulumi.StringPtrInput `pulumi:"ip"`
	SubnetId pulumi.StringInput    `pulumi:"subnetId"`
}

func (InstanceSnatIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSnatIp)(nil)).Elem()
}

func (i InstanceSnatIpArgs) ToInstanceSnatIpOutput() InstanceSnatIpOutput {
	return i.ToInstanceSnatIpOutputWithContext(context.Background())
}

func (i InstanceSnatIpArgs) ToInstanceSnatIpOutputWithContext(ctx context.Context) InstanceSnatIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSnatIpOutput)
}

// InstanceSnatIpArrayInput is an input type that accepts InstanceSnatIpArray and InstanceSnatIpArrayOutput values.
// You can construct a concrete instance of `InstanceSnatIpArrayInput` via:
//
//          InstanceSnatIpArray{ InstanceSnatIpArgs{...} }
type InstanceSnatIpArrayInput interface {
	pulumi.Input

	ToInstanceSnatIpArrayOutput() InstanceSnatIpArrayOutput
	ToInstanceSnatIpArrayOutputWithContext(context.Context) InstanceSnatIpArrayOutput
}

type InstanceSnatIpArray []InstanceSnatIpInput

func (InstanceSnatIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSnatIp)(nil)).Elem()
}

func (i InstanceSnatIpArray) ToInstanceSnatIpArrayOutput() InstanceSnatIpArrayOutput {
	return i.ToInstanceSnatIpArrayOutputWithContext(context.Background())
}

func (i InstanceSnatIpArray) ToInstanceSnatIpArrayOutputWithContext(ctx context.Context) InstanceSnatIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSnatIpArrayOutput)
}

type InstanceSnatIpOutput struct{ *pulumi.OutputState }

func (InstanceSnatIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSnatIp)(nil)).Elem()
}

func (o InstanceSnatIpOutput) ToInstanceSnatIpOutput() InstanceSnatIpOutput {
	return o
}

func (o InstanceSnatIpOutput) ToInstanceSnatIpOutputWithContext(ctx context.Context) InstanceSnatIpOutput {
	return o
}

func (o InstanceSnatIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSnatIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o InstanceSnatIpOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSnatIp) string { return v.SubnetId }).(pulumi.StringOutput)
}

type InstanceSnatIpArrayOutput struct{ *pulumi.OutputState }

func (InstanceSnatIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSnatIp)(nil)).Elem()
}

func (o InstanceSnatIpArrayOutput) ToInstanceSnatIpArrayOutput() InstanceSnatIpArrayOutput {
	return o
}

func (o InstanceSnatIpArrayOutput) ToInstanceSnatIpArrayOutputWithContext(ctx context.Context) InstanceSnatIpArrayOutput {
	return o
}

func (o InstanceSnatIpArrayOutput) Index(i pulumi.IntInput) InstanceSnatIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSnatIp {
		return vs[0].([]InstanceSnatIp)[vs[1].(int)]
	}).(InstanceSnatIpOutput)
}

type InstancesClbList struct {
	AddressIpVersion        string                 `pulumi:"addressIpVersion"`
	ClbId                   string                 `pulumi:"clbId"`
	ClbName                 string                 `pulumi:"clbName"`
	ClbVips                 []string               `pulumi:"clbVips"`
	CreateTime              string                 `pulumi:"createTime"`
	InternetBandwidthMaxOut int                    `pulumi:"internetBandwidthMaxOut"`
	InternetChargeType      string                 `pulumi:"internetChargeType"`
	LocalZone               bool                   `pulumi:"localZone"`
	NetworkType             string                 `pulumi:"networkType"`
	ProjectId               int                    `pulumi:"projectId"`
	SecurityGroups          []string               `pulumi:"securityGroups"`
	Status                  int                    `pulumi:"status"`
	StatusTime              string                 `pulumi:"statusTime"`
	SubnetId                string                 `pulumi:"subnetId"`
	Tags                    map[string]interface{} `pulumi:"tags"`
	TargetRegionInfoRegion  string                 `pulumi:"targetRegionInfoRegion"`
	TargetRegionInfoVpcId   string                 `pulumi:"targetRegionInfoVpcId"`
	VipIsp                  string                 `pulumi:"vipIsp"`
	VpcId                   string                 `pulumi:"vpcId"`
	Zone                    string                 `pulumi:"zone"`
	ZoneId                  int                    `pulumi:"zoneId"`
	ZoneName                string                 `pulumi:"zoneName"`
	ZoneRegion              string                 `pulumi:"zoneRegion"`
}

// InstancesClbListInput is an input type that accepts InstancesClbListArgs and InstancesClbListOutput values.
// You can construct a concrete instance of `InstancesClbListInput` via:
//
//          InstancesClbListArgs{...}
type InstancesClbListInput interface {
	pulumi.Input

	ToInstancesClbListOutput() InstancesClbListOutput
	ToInstancesClbListOutputWithContext(context.Context) InstancesClbListOutput
}

type InstancesClbListArgs struct {
	AddressIpVersion        pulumi.StringInput      `pulumi:"addressIpVersion"`
	ClbId                   pulumi.StringInput      `pulumi:"clbId"`
	ClbName                 pulumi.StringInput      `pulumi:"clbName"`
	ClbVips                 pulumi.StringArrayInput `pulumi:"clbVips"`
	CreateTime              pulumi.StringInput      `pulumi:"createTime"`
	InternetBandwidthMaxOut pulumi.IntInput         `pulumi:"internetBandwidthMaxOut"`
	InternetChargeType      pulumi.StringInput      `pulumi:"internetChargeType"`
	LocalZone               pulumi.BoolInput        `pulumi:"localZone"`
	NetworkType             pulumi.StringInput      `pulumi:"networkType"`
	ProjectId               pulumi.IntInput         `pulumi:"projectId"`
	SecurityGroups          pulumi.StringArrayInput `pulumi:"securityGroups"`
	Status                  pulumi.IntInput         `pulumi:"status"`
	StatusTime              pulumi.StringInput      `pulumi:"statusTime"`
	SubnetId                pulumi.StringInput      `pulumi:"subnetId"`
	Tags                    pulumi.MapInput         `pulumi:"tags"`
	TargetRegionInfoRegion  pulumi.StringInput      `pulumi:"targetRegionInfoRegion"`
	TargetRegionInfoVpcId   pulumi.StringInput      `pulumi:"targetRegionInfoVpcId"`
	VipIsp                  pulumi.StringInput      `pulumi:"vipIsp"`
	VpcId                   pulumi.StringInput      `pulumi:"vpcId"`
	Zone                    pulumi.StringInput      `pulumi:"zone"`
	ZoneId                  pulumi.IntInput         `pulumi:"zoneId"`
	ZoneName                pulumi.StringInput      `pulumi:"zoneName"`
	ZoneRegion              pulumi.StringInput      `pulumi:"zoneRegion"`
}

func (InstancesClbListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesClbList)(nil)).Elem()
}

func (i InstancesClbListArgs) ToInstancesClbListOutput() InstancesClbListOutput {
	return i.ToInstancesClbListOutputWithContext(context.Background())
}

func (i InstancesClbListArgs) ToInstancesClbListOutputWithContext(ctx context.Context) InstancesClbListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesClbListOutput)
}

// InstancesClbListArrayInput is an input type that accepts InstancesClbListArray and InstancesClbListArrayOutput values.
// You can construct a concrete instance of `InstancesClbListArrayInput` via:
//
//          InstancesClbListArray{ InstancesClbListArgs{...} }
type InstancesClbListArrayInput interface {
	pulumi.Input

	ToInstancesClbListArrayOutput() InstancesClbListArrayOutput
	ToInstancesClbListArrayOutputWithContext(context.Context) InstancesClbListArrayOutput
}

type InstancesClbListArray []InstancesClbListInput

func (InstancesClbListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesClbList)(nil)).Elem()
}

func (i InstancesClbListArray) ToInstancesClbListArrayOutput() InstancesClbListArrayOutput {
	return i.ToInstancesClbListArrayOutputWithContext(context.Background())
}

func (i InstancesClbListArray) ToInstancesClbListArrayOutputWithContext(ctx context.Context) InstancesClbListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesClbListArrayOutput)
}

type InstancesClbListOutput struct{ *pulumi.OutputState }

func (InstancesClbListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesClbList)(nil)).Elem()
}

func (o InstancesClbListOutput) ToInstancesClbListOutput() InstancesClbListOutput {
	return o
}

func (o InstancesClbListOutput) ToInstancesClbListOutputWithContext(ctx context.Context) InstancesClbListOutput {
	return o
}

func (o InstancesClbListOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.ClbId }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ClbName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.ClbName }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ClbVips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesClbList) []string { return v.ClbVips }).(pulumi.StringArrayOutput)
}

func (o InstancesClbListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) InternetBandwidthMaxOut() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesClbList) int { return v.InternetBandwidthMaxOut }).(pulumi.IntOutput)
}

func (o InstancesClbListOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) LocalZone() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesClbList) bool { return v.LocalZone }).(pulumi.BoolOutput)
}

func (o InstancesClbListOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesClbList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o InstancesClbListOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesClbList) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o InstancesClbListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesClbList) int { return v.Status }).(pulumi.IntOutput)
}

func (o InstancesClbListOutput) StatusTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.StatusTime }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v InstancesClbList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o InstancesClbListOutput) TargetRegionInfoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.TargetRegionInfoRegion }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) TargetRegionInfoVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.TargetRegionInfoVpcId }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) VipIsp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.VipIsp }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.Zone }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesClbList) int { return v.ZoneId }).(pulumi.IntOutput)
}

func (o InstancesClbListOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.ZoneName }).(pulumi.StringOutput)
}

func (o InstancesClbListOutput) ZoneRegion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesClbList) string { return v.ZoneRegion }).(pulumi.StringOutput)
}

type InstancesClbListArrayOutput struct{ *pulumi.OutputState }

func (InstancesClbListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesClbList)(nil)).Elem()
}

func (o InstancesClbListArrayOutput) ToInstancesClbListArrayOutput() InstancesClbListArrayOutput {
	return o
}

func (o InstancesClbListArrayOutput) ToInstancesClbListArrayOutputWithContext(ctx context.Context) InstancesClbListArrayOutput {
	return o
}

func (o InstancesClbListArrayOutput) Index(i pulumi.IntInput) InstancesClbListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesClbList {
		return vs[0].([]InstancesClbList)[vs[1].(int)]
	}).(InstancesClbListOutput)
}

type ListenerRulesRuleList struct {
	CertificateCaId         string  `pulumi:"certificateCaId"`
	CertificateId           string  `pulumi:"certificateId"`
	CertificateSslMode      string  `pulumi:"certificateSslMode"`
	ClbId                   string  `pulumi:"clbId"`
	Domain                  *string `pulumi:"domain"`
	HealthCheckHealthNum    int     `pulumi:"healthCheckHealthNum"`
	HealthCheckHttpCode     int     `pulumi:"healthCheckHttpCode"`
	HealthCheckHttpDomain   string  `pulumi:"healthCheckHttpDomain"`
	HealthCheckHttpMethod   string  `pulumi:"healthCheckHttpMethod"`
	HealthCheckHttpPath     string  `pulumi:"healthCheckHttpPath"`
	HealthCheckIntervalTime int     `pulumi:"healthCheckIntervalTime"`
	HealthCheckSwitch       bool    `pulumi:"healthCheckSwitch"`
	HealthCheckUnhealthNum  int     `pulumi:"healthCheckUnhealthNum"`
	Http2Switch             bool    `pulumi:"http2Switch"`
	ListenerId              string  `pulumi:"listenerId"`
	RuleId                  string  `pulumi:"ruleId"`
	Scheduler               string  `pulumi:"scheduler"`
	SessionExpireTime       int     `pulumi:"sessionExpireTime"`
	Url                     *string `pulumi:"url"`
}

// ListenerRulesRuleListInput is an input type that accepts ListenerRulesRuleListArgs and ListenerRulesRuleListOutput values.
// You can construct a concrete instance of `ListenerRulesRuleListInput` via:
//
//          ListenerRulesRuleListArgs{...}
type ListenerRulesRuleListInput interface {
	pulumi.Input

	ToListenerRulesRuleListOutput() ListenerRulesRuleListOutput
	ToListenerRulesRuleListOutputWithContext(context.Context) ListenerRulesRuleListOutput
}

type ListenerRulesRuleListArgs struct {
	CertificateCaId         pulumi.StringInput    `pulumi:"certificateCaId"`
	CertificateId           pulumi.StringInput    `pulumi:"certificateId"`
	CertificateSslMode      pulumi.StringInput    `pulumi:"certificateSslMode"`
	ClbId                   pulumi.StringInput    `pulumi:"clbId"`
	Domain                  pulumi.StringPtrInput `pulumi:"domain"`
	HealthCheckHealthNum    pulumi.IntInput       `pulumi:"healthCheckHealthNum"`
	HealthCheckHttpCode     pulumi.IntInput       `pulumi:"healthCheckHttpCode"`
	HealthCheckHttpDomain   pulumi.StringInput    `pulumi:"healthCheckHttpDomain"`
	HealthCheckHttpMethod   pulumi.StringInput    `pulumi:"healthCheckHttpMethod"`
	HealthCheckHttpPath     pulumi.StringInput    `pulumi:"healthCheckHttpPath"`
	HealthCheckIntervalTime pulumi.IntInput       `pulumi:"healthCheckIntervalTime"`
	HealthCheckSwitch       pulumi.BoolInput      `pulumi:"healthCheckSwitch"`
	HealthCheckUnhealthNum  pulumi.IntInput       `pulumi:"healthCheckUnhealthNum"`
	Http2Switch             pulumi.BoolInput      `pulumi:"http2Switch"`
	ListenerId              pulumi.StringInput    `pulumi:"listenerId"`
	RuleId                  pulumi.StringInput    `pulumi:"ruleId"`
	Scheduler               pulumi.StringInput    `pulumi:"scheduler"`
	SessionExpireTime       pulumi.IntInput       `pulumi:"sessionExpireTime"`
	Url                     pulumi.StringPtrInput `pulumi:"url"`
}

func (ListenerRulesRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRulesRuleList)(nil)).Elem()
}

func (i ListenerRulesRuleListArgs) ToListenerRulesRuleListOutput() ListenerRulesRuleListOutput {
	return i.ToListenerRulesRuleListOutputWithContext(context.Background())
}

func (i ListenerRulesRuleListArgs) ToListenerRulesRuleListOutputWithContext(ctx context.Context) ListenerRulesRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRulesRuleListOutput)
}

// ListenerRulesRuleListArrayInput is an input type that accepts ListenerRulesRuleListArray and ListenerRulesRuleListArrayOutput values.
// You can construct a concrete instance of `ListenerRulesRuleListArrayInput` via:
//
//          ListenerRulesRuleListArray{ ListenerRulesRuleListArgs{...} }
type ListenerRulesRuleListArrayInput interface {
	pulumi.Input

	ToListenerRulesRuleListArrayOutput() ListenerRulesRuleListArrayOutput
	ToListenerRulesRuleListArrayOutputWithContext(context.Context) ListenerRulesRuleListArrayOutput
}

type ListenerRulesRuleListArray []ListenerRulesRuleListInput

func (ListenerRulesRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRulesRuleList)(nil)).Elem()
}

func (i ListenerRulesRuleListArray) ToListenerRulesRuleListArrayOutput() ListenerRulesRuleListArrayOutput {
	return i.ToListenerRulesRuleListArrayOutputWithContext(context.Background())
}

func (i ListenerRulesRuleListArray) ToListenerRulesRuleListArrayOutputWithContext(ctx context.Context) ListenerRulesRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRulesRuleListArrayOutput)
}

type ListenerRulesRuleListOutput struct{ *pulumi.OutputState }

func (ListenerRulesRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRulesRuleList)(nil)).Elem()
}

func (o ListenerRulesRuleListOutput) ToListenerRulesRuleListOutput() ListenerRulesRuleListOutput {
	return o
}

func (o ListenerRulesRuleListOutput) ToListenerRulesRuleListOutputWithContext(ctx context.Context) ListenerRulesRuleListOutput {
	return o
}

func (o ListenerRulesRuleListOutput) CertificateCaId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.CertificateCaId }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) CertificateSslMode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.CertificateSslMode }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.ClbId }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckHealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) int { return v.HealthCheckHealthNum }).(pulumi.IntOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckHttpCode() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) int { return v.HealthCheckHttpCode }).(pulumi.IntOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckHttpDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.HealthCheckHttpDomain }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckHttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.HealthCheckHttpMethod }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckHttpPath() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.HealthCheckHttpPath }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckIntervalTime() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) int { return v.HealthCheckIntervalTime }).(pulumi.IntOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) bool { return v.HealthCheckSwitch }).(pulumi.BoolOutput)
}

func (o ListenerRulesRuleListOutput) HealthCheckUnhealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) int { return v.HealthCheckUnhealthNum }).(pulumi.IntOutput)
}

func (o ListenerRulesRuleListOutput) Http2Switch() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) bool { return v.Http2Switch }).(pulumi.BoolOutput)
}

func (o ListenerRulesRuleListOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) string { return v.Scheduler }).(pulumi.StringOutput)
}

func (o ListenerRulesRuleListOutput) SessionExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) int { return v.SessionExpireTime }).(pulumi.IntOutput)
}

func (o ListenerRulesRuleListOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRulesRuleList) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ListenerRulesRuleListArrayOutput struct{ *pulumi.OutputState }

func (ListenerRulesRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRulesRuleList)(nil)).Elem()
}

func (o ListenerRulesRuleListArrayOutput) ToListenerRulesRuleListArrayOutput() ListenerRulesRuleListArrayOutput {
	return o
}

func (o ListenerRulesRuleListArrayOutput) ToListenerRulesRuleListArrayOutputWithContext(ctx context.Context) ListenerRulesRuleListArrayOutput {
	return o
}

func (o ListenerRulesRuleListArrayOutput) Index(i pulumi.IntInput) ListenerRulesRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRulesRuleList {
		return vs[0].([]ListenerRulesRuleList)[vs[1].(int)]
	}).(ListenerRulesRuleListOutput)
}

type ListenersListenerList struct {
	CertificateCaId         string `pulumi:"certificateCaId"`
	CertificateId           string `pulumi:"certificateId"`
	CertificateSslMode      string `pulumi:"certificateSslMode"`
	ClbId                   string `pulumi:"clbId"`
	HealthCheckContextType  string `pulumi:"healthCheckContextType"`
	HealthCheckHealthNum    int    `pulumi:"healthCheckHealthNum"`
	HealthCheckHttpCode     int    `pulumi:"healthCheckHttpCode"`
	HealthCheckHttpDomain   string `pulumi:"healthCheckHttpDomain"`
	HealthCheckHttpMethod   string `pulumi:"healthCheckHttpMethod"`
	HealthCheckHttpPath     string `pulumi:"healthCheckHttpPath"`
	HealthCheckHttpVersion  string `pulumi:"healthCheckHttpVersion"`
	HealthCheckIntervalTime int    `pulumi:"healthCheckIntervalTime"`
	HealthCheckPort         int    `pulumi:"healthCheckPort"`
	HealthCheckRecvContext  string `pulumi:"healthCheckRecvContext"`
	HealthCheckSendContext  string `pulumi:"healthCheckSendContext"`
	HealthCheckSwitch       bool   `pulumi:"healthCheckSwitch"`
	HealthCheckTimeOut      int    `pulumi:"healthCheckTimeOut"`
	HealthCheckType         string `pulumi:"healthCheckType"`
	HealthCheckUnhealthNum  int    `pulumi:"healthCheckUnhealthNum"`
	ListenerId              string `pulumi:"listenerId"`
	ListenerName            string `pulumi:"listenerName"`
	Port                    int    `pulumi:"port"`
	Protocol                string `pulumi:"protocol"`
	Scheduler               string `pulumi:"scheduler"`
	SessionExpireTime       int    `pulumi:"sessionExpireTime"`
	SniSwitch               bool   `pulumi:"sniSwitch"`
}

// ListenersListenerListInput is an input type that accepts ListenersListenerListArgs and ListenersListenerListOutput values.
// You can construct a concrete instance of `ListenersListenerListInput` via:
//
//          ListenersListenerListArgs{...}
type ListenersListenerListInput interface {
	pulumi.Input

	ToListenersListenerListOutput() ListenersListenerListOutput
	ToListenersListenerListOutputWithContext(context.Context) ListenersListenerListOutput
}

type ListenersListenerListArgs struct {
	CertificateCaId         pulumi.StringInput `pulumi:"certificateCaId"`
	CertificateId           pulumi.StringInput `pulumi:"certificateId"`
	CertificateSslMode      pulumi.StringInput `pulumi:"certificateSslMode"`
	ClbId                   pulumi.StringInput `pulumi:"clbId"`
	HealthCheckContextType  pulumi.StringInput `pulumi:"healthCheckContextType"`
	HealthCheckHealthNum    pulumi.IntInput    `pulumi:"healthCheckHealthNum"`
	HealthCheckHttpCode     pulumi.IntInput    `pulumi:"healthCheckHttpCode"`
	HealthCheckHttpDomain   pulumi.StringInput `pulumi:"healthCheckHttpDomain"`
	HealthCheckHttpMethod   pulumi.StringInput `pulumi:"healthCheckHttpMethod"`
	HealthCheckHttpPath     pulumi.StringInput `pulumi:"healthCheckHttpPath"`
	HealthCheckHttpVersion  pulumi.StringInput `pulumi:"healthCheckHttpVersion"`
	HealthCheckIntervalTime pulumi.IntInput    `pulumi:"healthCheckIntervalTime"`
	HealthCheckPort         pulumi.IntInput    `pulumi:"healthCheckPort"`
	HealthCheckRecvContext  pulumi.StringInput `pulumi:"healthCheckRecvContext"`
	HealthCheckSendContext  pulumi.StringInput `pulumi:"healthCheckSendContext"`
	HealthCheckSwitch       pulumi.BoolInput   `pulumi:"healthCheckSwitch"`
	HealthCheckTimeOut      pulumi.IntInput    `pulumi:"healthCheckTimeOut"`
	HealthCheckType         pulumi.StringInput `pulumi:"healthCheckType"`
	HealthCheckUnhealthNum  pulumi.IntInput    `pulumi:"healthCheckUnhealthNum"`
	ListenerId              pulumi.StringInput `pulumi:"listenerId"`
	ListenerName            pulumi.StringInput `pulumi:"listenerName"`
	Port                    pulumi.IntInput    `pulumi:"port"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Scheduler               pulumi.StringInput `pulumi:"scheduler"`
	SessionExpireTime       pulumi.IntInput    `pulumi:"sessionExpireTime"`
	SniSwitch               pulumi.BoolInput   `pulumi:"sniSwitch"`
}

func (ListenersListenerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerList)(nil)).Elem()
}

func (i ListenersListenerListArgs) ToListenersListenerListOutput() ListenersListenerListOutput {
	return i.ToListenersListenerListOutputWithContext(context.Background())
}

func (i ListenersListenerListArgs) ToListenersListenerListOutputWithContext(ctx context.Context) ListenersListenerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerListOutput)
}

// ListenersListenerListArrayInput is an input type that accepts ListenersListenerListArray and ListenersListenerListArrayOutput values.
// You can construct a concrete instance of `ListenersListenerListArrayInput` via:
//
//          ListenersListenerListArray{ ListenersListenerListArgs{...} }
type ListenersListenerListArrayInput interface {
	pulumi.Input

	ToListenersListenerListArrayOutput() ListenersListenerListArrayOutput
	ToListenersListenerListArrayOutputWithContext(context.Context) ListenersListenerListArrayOutput
}

type ListenersListenerListArray []ListenersListenerListInput

func (ListenersListenerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerList)(nil)).Elem()
}

func (i ListenersListenerListArray) ToListenersListenerListArrayOutput() ListenersListenerListArrayOutput {
	return i.ToListenersListenerListArrayOutputWithContext(context.Background())
}

func (i ListenersListenerListArray) ToListenersListenerListArrayOutputWithContext(ctx context.Context) ListenersListenerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerListArrayOutput)
}

type ListenersListenerListOutput struct{ *pulumi.OutputState }

func (ListenersListenerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerList)(nil)).Elem()
}

func (o ListenersListenerListOutput) ToListenersListenerListOutput() ListenersListenerListOutput {
	return o
}

func (o ListenersListenerListOutput) ToListenersListenerListOutputWithContext(ctx context.Context) ListenersListenerListOutput {
	return o
}

func (o ListenersListenerListOutput) CertificateCaId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.CertificateCaId }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) CertificateSslMode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.CertificateSslMode }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.ClbId }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckContextType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckContextType }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckHealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckHealthNum }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) HealthCheckHttpCode() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckHttpCode }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) HealthCheckHttpDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckHttpDomain }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckHttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckHttpMethod }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckHttpPath() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckHttpPath }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckHttpVersion }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckIntervalTime() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckIntervalTime }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) HealthCheckPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckPort }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) HealthCheckRecvContext() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckRecvContext }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckSendContext() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckSendContext }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenersListenerList) bool { return v.HealthCheckSwitch }).(pulumi.BoolOutput)
}

func (o ListenersListenerListOutput) HealthCheckTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckTimeOut }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.HealthCheckType }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) HealthCheckUnhealthNum() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.HealthCheckUnhealthNum }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.ListenerName }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.Port }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerList) string { return v.Scheduler }).(pulumi.StringOutput)
}

func (o ListenersListenerListOutput) SessionExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListenerList) int { return v.SessionExpireTime }).(pulumi.IntOutput)
}

func (o ListenersListenerListOutput) SniSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenersListenerList) bool { return v.SniSwitch }).(pulumi.BoolOutput)
}

type ListenersListenerListArrayOutput struct{ *pulumi.OutputState }

func (ListenersListenerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerList)(nil)).Elem()
}

func (o ListenersListenerListArrayOutput) ToListenersListenerListArrayOutput() ListenersListenerListArrayOutput {
	return o
}

func (o ListenersListenerListArrayOutput) ToListenersListenerListArrayOutputWithContext(ctx context.Context) ListenersListenerListArrayOutput {
	return o
}

func (o ListenersListenerListArrayOutput) Index(i pulumi.IntInput) ListenersListenerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenersListenerList {
		return vs[0].([]ListenersListenerList)[vs[1].(int)]
	}).(ListenersListenerListOutput)
}

type RedirectionsRedirectionList struct {
	ClbId            string `pulumi:"clbId"`
	SourceListenerId string `pulumi:"sourceListenerId"`
	SourceRuleId     string `pulumi:"sourceRuleId"`
	TargetListenerId string `pulumi:"targetListenerId"`
	TargetRuleId     string `pulumi:"targetRuleId"`
}

// RedirectionsRedirectionListInput is an input type that accepts RedirectionsRedirectionListArgs and RedirectionsRedirectionListOutput values.
// You can construct a concrete instance of `RedirectionsRedirectionListInput` via:
//
//          RedirectionsRedirectionListArgs{...}
type RedirectionsRedirectionListInput interface {
	pulumi.Input

	ToRedirectionsRedirectionListOutput() RedirectionsRedirectionListOutput
	ToRedirectionsRedirectionListOutputWithContext(context.Context) RedirectionsRedirectionListOutput
}

type RedirectionsRedirectionListArgs struct {
	ClbId            pulumi.StringInput `pulumi:"clbId"`
	SourceListenerId pulumi.StringInput `pulumi:"sourceListenerId"`
	SourceRuleId     pulumi.StringInput `pulumi:"sourceRuleId"`
	TargetListenerId pulumi.StringInput `pulumi:"targetListenerId"`
	TargetRuleId     pulumi.StringInput `pulumi:"targetRuleId"`
}

func (RedirectionsRedirectionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectionsRedirectionList)(nil)).Elem()
}

func (i RedirectionsRedirectionListArgs) ToRedirectionsRedirectionListOutput() RedirectionsRedirectionListOutput {
	return i.ToRedirectionsRedirectionListOutputWithContext(context.Background())
}

func (i RedirectionsRedirectionListArgs) ToRedirectionsRedirectionListOutputWithContext(ctx context.Context) RedirectionsRedirectionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectionsRedirectionListOutput)
}

// RedirectionsRedirectionListArrayInput is an input type that accepts RedirectionsRedirectionListArray and RedirectionsRedirectionListArrayOutput values.
// You can construct a concrete instance of `RedirectionsRedirectionListArrayInput` via:
//
//          RedirectionsRedirectionListArray{ RedirectionsRedirectionListArgs{...} }
type RedirectionsRedirectionListArrayInput interface {
	pulumi.Input

	ToRedirectionsRedirectionListArrayOutput() RedirectionsRedirectionListArrayOutput
	ToRedirectionsRedirectionListArrayOutputWithContext(context.Context) RedirectionsRedirectionListArrayOutput
}

type RedirectionsRedirectionListArray []RedirectionsRedirectionListInput

func (RedirectionsRedirectionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedirectionsRedirectionList)(nil)).Elem()
}

func (i RedirectionsRedirectionListArray) ToRedirectionsRedirectionListArrayOutput() RedirectionsRedirectionListArrayOutput {
	return i.ToRedirectionsRedirectionListArrayOutputWithContext(context.Background())
}

func (i RedirectionsRedirectionListArray) ToRedirectionsRedirectionListArrayOutputWithContext(ctx context.Context) RedirectionsRedirectionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectionsRedirectionListArrayOutput)
}

type RedirectionsRedirectionListOutput struct{ *pulumi.OutputState }

func (RedirectionsRedirectionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectionsRedirectionList)(nil)).Elem()
}

func (o RedirectionsRedirectionListOutput) ToRedirectionsRedirectionListOutput() RedirectionsRedirectionListOutput {
	return o
}

func (o RedirectionsRedirectionListOutput) ToRedirectionsRedirectionListOutputWithContext(ctx context.Context) RedirectionsRedirectionListOutput {
	return o
}

func (o RedirectionsRedirectionListOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectionsRedirectionList) string { return v.ClbId }).(pulumi.StringOutput)
}

func (o RedirectionsRedirectionListOutput) SourceListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectionsRedirectionList) string { return v.SourceListenerId }).(pulumi.StringOutput)
}

func (o RedirectionsRedirectionListOutput) SourceRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectionsRedirectionList) string { return v.SourceRuleId }).(pulumi.StringOutput)
}

func (o RedirectionsRedirectionListOutput) TargetListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectionsRedirectionList) string { return v.TargetListenerId }).(pulumi.StringOutput)
}

func (o RedirectionsRedirectionListOutput) TargetRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectionsRedirectionList) string { return v.TargetRuleId }).(pulumi.StringOutput)
}

type RedirectionsRedirectionListArrayOutput struct{ *pulumi.OutputState }

func (RedirectionsRedirectionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedirectionsRedirectionList)(nil)).Elem()
}

func (o RedirectionsRedirectionListArrayOutput) ToRedirectionsRedirectionListArrayOutput() RedirectionsRedirectionListArrayOutput {
	return o
}

func (o RedirectionsRedirectionListArrayOutput) ToRedirectionsRedirectionListArrayOutputWithContext(ctx context.Context) RedirectionsRedirectionListArrayOutput {
	return o
}

func (o RedirectionsRedirectionListArrayOutput) Index(i pulumi.IntInput) RedirectionsRedirectionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedirectionsRedirectionList {
		return vs[0].([]RedirectionsRedirectionList)[vs[1].(int)]
	}).(RedirectionsRedirectionListOutput)
}

type ServerAttachmentTarget struct {
	EniIp      *string `pulumi:"eniIp"`
	InstanceId *string `pulumi:"instanceId"`
	Port       int     `pulumi:"port"`
	Weight     *int    `pulumi:"weight"`
}

// ServerAttachmentTargetInput is an input type that accepts ServerAttachmentTargetArgs and ServerAttachmentTargetOutput values.
// You can construct a concrete instance of `ServerAttachmentTargetInput` via:
//
//          ServerAttachmentTargetArgs{...}
type ServerAttachmentTargetInput interface {
	pulumi.Input

	ToServerAttachmentTargetOutput() ServerAttachmentTargetOutput
	ToServerAttachmentTargetOutputWithContext(context.Context) ServerAttachmentTargetOutput
}

type ServerAttachmentTargetArgs struct {
	EniIp      pulumi.StringPtrInput `pulumi:"eniIp"`
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	Port       pulumi.IntInput       `pulumi:"port"`
	Weight     pulumi.IntPtrInput    `pulumi:"weight"`
}

func (ServerAttachmentTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentTarget)(nil)).Elem()
}

func (i ServerAttachmentTargetArgs) ToServerAttachmentTargetOutput() ServerAttachmentTargetOutput {
	return i.ToServerAttachmentTargetOutputWithContext(context.Background())
}

func (i ServerAttachmentTargetArgs) ToServerAttachmentTargetOutputWithContext(ctx context.Context) ServerAttachmentTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentTargetOutput)
}

// ServerAttachmentTargetArrayInput is an input type that accepts ServerAttachmentTargetArray and ServerAttachmentTargetArrayOutput values.
// You can construct a concrete instance of `ServerAttachmentTargetArrayInput` via:
//
//          ServerAttachmentTargetArray{ ServerAttachmentTargetArgs{...} }
type ServerAttachmentTargetArrayInput interface {
	pulumi.Input

	ToServerAttachmentTargetArrayOutput() ServerAttachmentTargetArrayOutput
	ToServerAttachmentTargetArrayOutputWithContext(context.Context) ServerAttachmentTargetArrayOutput
}

type ServerAttachmentTargetArray []ServerAttachmentTargetInput

func (ServerAttachmentTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentTarget)(nil)).Elem()
}

func (i ServerAttachmentTargetArray) ToServerAttachmentTargetArrayOutput() ServerAttachmentTargetArrayOutput {
	return i.ToServerAttachmentTargetArrayOutputWithContext(context.Background())
}

func (i ServerAttachmentTargetArray) ToServerAttachmentTargetArrayOutputWithContext(ctx context.Context) ServerAttachmentTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentTargetArrayOutput)
}

type ServerAttachmentTargetOutput struct{ *pulumi.OutputState }

func (ServerAttachmentTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentTarget)(nil)).Elem()
}

func (o ServerAttachmentTargetOutput) ToServerAttachmentTargetOutput() ServerAttachmentTargetOutput {
	return o
}

func (o ServerAttachmentTargetOutput) ToServerAttachmentTargetOutputWithContext(ctx context.Context) ServerAttachmentTargetOutput {
	return o
}

func (o ServerAttachmentTargetOutput) EniIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerAttachmentTarget) *string { return v.EniIp }).(pulumi.StringPtrOutput)
}

func (o ServerAttachmentTargetOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerAttachmentTarget) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o ServerAttachmentTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerAttachmentTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o ServerAttachmentTargetOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerAttachmentTarget) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServerAttachmentTargetArrayOutput struct{ *pulumi.OutputState }

func (ServerAttachmentTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentTarget)(nil)).Elem()
}

func (o ServerAttachmentTargetArrayOutput) ToServerAttachmentTargetArrayOutput() ServerAttachmentTargetArrayOutput {
	return o
}

func (o ServerAttachmentTargetArrayOutput) ToServerAttachmentTargetArrayOutputWithContext(ctx context.Context) ServerAttachmentTargetArrayOutput {
	return o
}

func (o ServerAttachmentTargetArrayOutput) Index(i pulumi.IntInput) ServerAttachmentTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerAttachmentTarget {
		return vs[0].([]ServerAttachmentTarget)[vs[1].(int)]
	}).(ServerAttachmentTargetOutput)
}

type ServerAttachmentsAttachmentList struct {
	ClbId        string                                  `pulumi:"clbId"`
	ListenerId   string                                  `pulumi:"listenerId"`
	ProtocolType string                                  `pulumi:"protocolType"`
	RuleId       string                                  `pulumi:"ruleId"`
	Targets      []ServerAttachmentsAttachmentListTarget `pulumi:"targets"`
}

// ServerAttachmentsAttachmentListInput is an input type that accepts ServerAttachmentsAttachmentListArgs and ServerAttachmentsAttachmentListOutput values.
// You can construct a concrete instance of `ServerAttachmentsAttachmentListInput` via:
//
//          ServerAttachmentsAttachmentListArgs{...}
type ServerAttachmentsAttachmentListInput interface {
	pulumi.Input

	ToServerAttachmentsAttachmentListOutput() ServerAttachmentsAttachmentListOutput
	ToServerAttachmentsAttachmentListOutputWithContext(context.Context) ServerAttachmentsAttachmentListOutput
}

type ServerAttachmentsAttachmentListArgs struct {
	ClbId        pulumi.StringInput                              `pulumi:"clbId"`
	ListenerId   pulumi.StringInput                              `pulumi:"listenerId"`
	ProtocolType pulumi.StringInput                              `pulumi:"protocolType"`
	RuleId       pulumi.StringInput                              `pulumi:"ruleId"`
	Targets      ServerAttachmentsAttachmentListTargetArrayInput `pulumi:"targets"`
}

func (ServerAttachmentsAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentsAttachmentList)(nil)).Elem()
}

func (i ServerAttachmentsAttachmentListArgs) ToServerAttachmentsAttachmentListOutput() ServerAttachmentsAttachmentListOutput {
	return i.ToServerAttachmentsAttachmentListOutputWithContext(context.Background())
}

func (i ServerAttachmentsAttachmentListArgs) ToServerAttachmentsAttachmentListOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentsAttachmentListOutput)
}

// ServerAttachmentsAttachmentListArrayInput is an input type that accepts ServerAttachmentsAttachmentListArray and ServerAttachmentsAttachmentListArrayOutput values.
// You can construct a concrete instance of `ServerAttachmentsAttachmentListArrayInput` via:
//
//          ServerAttachmentsAttachmentListArray{ ServerAttachmentsAttachmentListArgs{...} }
type ServerAttachmentsAttachmentListArrayInput interface {
	pulumi.Input

	ToServerAttachmentsAttachmentListArrayOutput() ServerAttachmentsAttachmentListArrayOutput
	ToServerAttachmentsAttachmentListArrayOutputWithContext(context.Context) ServerAttachmentsAttachmentListArrayOutput
}

type ServerAttachmentsAttachmentListArray []ServerAttachmentsAttachmentListInput

func (ServerAttachmentsAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentsAttachmentList)(nil)).Elem()
}

func (i ServerAttachmentsAttachmentListArray) ToServerAttachmentsAttachmentListArrayOutput() ServerAttachmentsAttachmentListArrayOutput {
	return i.ToServerAttachmentsAttachmentListArrayOutputWithContext(context.Background())
}

func (i ServerAttachmentsAttachmentListArray) ToServerAttachmentsAttachmentListArrayOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentsAttachmentListArrayOutput)
}

type ServerAttachmentsAttachmentListOutput struct{ *pulumi.OutputState }

func (ServerAttachmentsAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentsAttachmentList)(nil)).Elem()
}

func (o ServerAttachmentsAttachmentListOutput) ToServerAttachmentsAttachmentListOutput() ServerAttachmentsAttachmentListOutput {
	return o
}

func (o ServerAttachmentsAttachmentListOutput) ToServerAttachmentsAttachmentListOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListOutput {
	return o
}

func (o ServerAttachmentsAttachmentListOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentList) string { return v.ClbId }).(pulumi.StringOutput)
}

func (o ServerAttachmentsAttachmentListOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentList) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ServerAttachmentsAttachmentListOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentList) string { return v.ProtocolType }).(pulumi.StringOutput)
}

func (o ServerAttachmentsAttachmentListOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentList) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o ServerAttachmentsAttachmentListOutput) Targets() ServerAttachmentsAttachmentListTargetArrayOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentList) []ServerAttachmentsAttachmentListTarget { return v.Targets }).(ServerAttachmentsAttachmentListTargetArrayOutput)
}

type ServerAttachmentsAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (ServerAttachmentsAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentsAttachmentList)(nil)).Elem()
}

func (o ServerAttachmentsAttachmentListArrayOutput) ToServerAttachmentsAttachmentListArrayOutput() ServerAttachmentsAttachmentListArrayOutput {
	return o
}

func (o ServerAttachmentsAttachmentListArrayOutput) ToServerAttachmentsAttachmentListArrayOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListArrayOutput {
	return o
}

func (o ServerAttachmentsAttachmentListArrayOutput) Index(i pulumi.IntInput) ServerAttachmentsAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerAttachmentsAttachmentList {
		return vs[0].([]ServerAttachmentsAttachmentList)[vs[1].(int)]
	}).(ServerAttachmentsAttachmentListOutput)
}

type ServerAttachmentsAttachmentListTarget struct {
	InstanceId string `pulumi:"instanceId"`
	Port       int    `pulumi:"port"`
	Weight     int    `pulumi:"weight"`
}

// ServerAttachmentsAttachmentListTargetInput is an input type that accepts ServerAttachmentsAttachmentListTargetArgs and ServerAttachmentsAttachmentListTargetOutput values.
// You can construct a concrete instance of `ServerAttachmentsAttachmentListTargetInput` via:
//
//          ServerAttachmentsAttachmentListTargetArgs{...}
type ServerAttachmentsAttachmentListTargetInput interface {
	pulumi.Input

	ToServerAttachmentsAttachmentListTargetOutput() ServerAttachmentsAttachmentListTargetOutput
	ToServerAttachmentsAttachmentListTargetOutputWithContext(context.Context) ServerAttachmentsAttachmentListTargetOutput
}

type ServerAttachmentsAttachmentListTargetArgs struct {
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	Port       pulumi.IntInput    `pulumi:"port"`
	Weight     pulumi.IntInput    `pulumi:"weight"`
}

func (ServerAttachmentsAttachmentListTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentsAttachmentListTarget)(nil)).Elem()
}

func (i ServerAttachmentsAttachmentListTargetArgs) ToServerAttachmentsAttachmentListTargetOutput() ServerAttachmentsAttachmentListTargetOutput {
	return i.ToServerAttachmentsAttachmentListTargetOutputWithContext(context.Background())
}

func (i ServerAttachmentsAttachmentListTargetArgs) ToServerAttachmentsAttachmentListTargetOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentsAttachmentListTargetOutput)
}

// ServerAttachmentsAttachmentListTargetArrayInput is an input type that accepts ServerAttachmentsAttachmentListTargetArray and ServerAttachmentsAttachmentListTargetArrayOutput values.
// You can construct a concrete instance of `ServerAttachmentsAttachmentListTargetArrayInput` via:
//
//          ServerAttachmentsAttachmentListTargetArray{ ServerAttachmentsAttachmentListTargetArgs{...} }
type ServerAttachmentsAttachmentListTargetArrayInput interface {
	pulumi.Input

	ToServerAttachmentsAttachmentListTargetArrayOutput() ServerAttachmentsAttachmentListTargetArrayOutput
	ToServerAttachmentsAttachmentListTargetArrayOutputWithContext(context.Context) ServerAttachmentsAttachmentListTargetArrayOutput
}

type ServerAttachmentsAttachmentListTargetArray []ServerAttachmentsAttachmentListTargetInput

func (ServerAttachmentsAttachmentListTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentsAttachmentListTarget)(nil)).Elem()
}

func (i ServerAttachmentsAttachmentListTargetArray) ToServerAttachmentsAttachmentListTargetArrayOutput() ServerAttachmentsAttachmentListTargetArrayOutput {
	return i.ToServerAttachmentsAttachmentListTargetArrayOutputWithContext(context.Background())
}

func (i ServerAttachmentsAttachmentListTargetArray) ToServerAttachmentsAttachmentListTargetArrayOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAttachmentsAttachmentListTargetArrayOutput)
}

type ServerAttachmentsAttachmentListTargetOutput struct{ *pulumi.OutputState }

func (ServerAttachmentsAttachmentListTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAttachmentsAttachmentListTarget)(nil)).Elem()
}

func (o ServerAttachmentsAttachmentListTargetOutput) ToServerAttachmentsAttachmentListTargetOutput() ServerAttachmentsAttachmentListTargetOutput {
	return o
}

func (o ServerAttachmentsAttachmentListTargetOutput) ToServerAttachmentsAttachmentListTargetOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListTargetOutput {
	return o
}

func (o ServerAttachmentsAttachmentListTargetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentListTarget) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o ServerAttachmentsAttachmentListTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentListTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o ServerAttachmentsAttachmentListTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ServerAttachmentsAttachmentListTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type ServerAttachmentsAttachmentListTargetArrayOutput struct{ *pulumi.OutputState }

func (ServerAttachmentsAttachmentListTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerAttachmentsAttachmentListTarget)(nil)).Elem()
}

func (o ServerAttachmentsAttachmentListTargetArrayOutput) ToServerAttachmentsAttachmentListTargetArrayOutput() ServerAttachmentsAttachmentListTargetArrayOutput {
	return o
}

func (o ServerAttachmentsAttachmentListTargetArrayOutput) ToServerAttachmentsAttachmentListTargetArrayOutputWithContext(ctx context.Context) ServerAttachmentsAttachmentListTargetArrayOutput {
	return o
}

func (o ServerAttachmentsAttachmentListTargetArrayOutput) Index(i pulumi.IntInput) ServerAttachmentsAttachmentListTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerAttachmentsAttachmentListTarget {
		return vs[0].([]ServerAttachmentsAttachmentListTarget)[vs[1].(int)]
	}).(ServerAttachmentsAttachmentListTargetOutput)
}

type TargetGroupTargetGroupInstance struct {
	BindIp  string `pulumi:"bindIp"`
	NewPort *int   `pulumi:"newPort"`
	Port    int    `pulumi:"port"`
	Weight  *int   `pulumi:"weight"`
}

// TargetGroupTargetGroupInstanceInput is an input type that accepts TargetGroupTargetGroupInstanceArgs and TargetGroupTargetGroupInstanceOutput values.
// You can construct a concrete instance of `TargetGroupTargetGroupInstanceInput` via:
//
//          TargetGroupTargetGroupInstanceArgs{...}
type TargetGroupTargetGroupInstanceInput interface {
	pulumi.Input

	ToTargetGroupTargetGroupInstanceOutput() TargetGroupTargetGroupInstanceOutput
	ToTargetGroupTargetGroupInstanceOutputWithContext(context.Context) TargetGroupTargetGroupInstanceOutput
}

type TargetGroupTargetGroupInstanceArgs struct {
	BindIp  pulumi.StringInput `pulumi:"bindIp"`
	NewPort pulumi.IntPtrInput `pulumi:"newPort"`
	Port    pulumi.IntInput    `pulumi:"port"`
	Weight  pulumi.IntPtrInput `pulumi:"weight"`
}

func (TargetGroupTargetGroupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetGroupInstance)(nil)).Elem()
}

func (i TargetGroupTargetGroupInstanceArgs) ToTargetGroupTargetGroupInstanceOutput() TargetGroupTargetGroupInstanceOutput {
	return i.ToTargetGroupTargetGroupInstanceOutputWithContext(context.Background())
}

func (i TargetGroupTargetGroupInstanceArgs) ToTargetGroupTargetGroupInstanceOutputWithContext(ctx context.Context) TargetGroupTargetGroupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetGroupInstanceOutput)
}

// TargetGroupTargetGroupInstanceArrayInput is an input type that accepts TargetGroupTargetGroupInstanceArray and TargetGroupTargetGroupInstanceArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetGroupInstanceArrayInput` via:
//
//          TargetGroupTargetGroupInstanceArray{ TargetGroupTargetGroupInstanceArgs{...} }
type TargetGroupTargetGroupInstanceArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetGroupInstanceArrayOutput() TargetGroupTargetGroupInstanceArrayOutput
	ToTargetGroupTargetGroupInstanceArrayOutputWithContext(context.Context) TargetGroupTargetGroupInstanceArrayOutput
}

type TargetGroupTargetGroupInstanceArray []TargetGroupTargetGroupInstanceInput

func (TargetGroupTargetGroupInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetGroupInstance)(nil)).Elem()
}

func (i TargetGroupTargetGroupInstanceArray) ToTargetGroupTargetGroupInstanceArrayOutput() TargetGroupTargetGroupInstanceArrayOutput {
	return i.ToTargetGroupTargetGroupInstanceArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetGroupInstanceArray) ToTargetGroupTargetGroupInstanceArrayOutputWithContext(ctx context.Context) TargetGroupTargetGroupInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetGroupInstanceArrayOutput)
}

type TargetGroupTargetGroupInstanceOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetGroupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetGroupInstance)(nil)).Elem()
}

func (o TargetGroupTargetGroupInstanceOutput) ToTargetGroupTargetGroupInstanceOutput() TargetGroupTargetGroupInstanceOutput {
	return o
}

func (o TargetGroupTargetGroupInstanceOutput) ToTargetGroupTargetGroupInstanceOutputWithContext(ctx context.Context) TargetGroupTargetGroupInstanceOutput {
	return o
}

func (o TargetGroupTargetGroupInstanceOutput) BindIp() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTargetGroupInstance) string { return v.BindIp }).(pulumi.StringOutput)
}

func (o TargetGroupTargetGroupInstanceOutput) NewPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupTargetGroupInstance) *int { return v.NewPort }).(pulumi.IntPtrOutput)
}

func (o TargetGroupTargetGroupInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupTargetGroupInstance) int { return v.Port }).(pulumi.IntOutput)
}

func (o TargetGroupTargetGroupInstanceOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupTargetGroupInstance) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type TargetGroupTargetGroupInstanceArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetGroupInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetGroupInstance)(nil)).Elem()
}

func (o TargetGroupTargetGroupInstanceArrayOutput) ToTargetGroupTargetGroupInstanceArrayOutput() TargetGroupTargetGroupInstanceArrayOutput {
	return o
}

func (o TargetGroupTargetGroupInstanceArrayOutput) ToTargetGroupTargetGroupInstanceArrayOutputWithContext(ctx context.Context) TargetGroupTargetGroupInstanceArrayOutput {
	return o
}

func (o TargetGroupTargetGroupInstanceArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetGroupInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTargetGroupInstance {
		return vs[0].([]TargetGroupTargetGroupInstance)[vs[1].(int)]
	}).(TargetGroupTargetGroupInstanceOutput)
}

type TargetGroupsList struct {
	AssociatedRuleLists      []TargetGroupsListAssociatedRuleList      `pulumi:"associatedRuleLists"`
	CreateTime               string                                    `pulumi:"createTime"`
	Port                     int                                       `pulumi:"port"`
	TargetGroupId            string                                    `pulumi:"targetGroupId"`
	TargetGroupInstanceLists []TargetGroupsListTargetGroupInstanceList `pulumi:"targetGroupInstanceLists"`
	TargetGroupName          string                                    `pulumi:"targetGroupName"`
	UpdateTime               string                                    `pulumi:"updateTime"`
	VpcId                    string                                    `pulumi:"vpcId"`
}

// TargetGroupsListInput is an input type that accepts TargetGroupsListArgs and TargetGroupsListOutput values.
// You can construct a concrete instance of `TargetGroupsListInput` via:
//
//          TargetGroupsListArgs{...}
type TargetGroupsListInput interface {
	pulumi.Input

	ToTargetGroupsListOutput() TargetGroupsListOutput
	ToTargetGroupsListOutputWithContext(context.Context) TargetGroupsListOutput
}

type TargetGroupsListArgs struct {
	AssociatedRuleLists      TargetGroupsListAssociatedRuleListArrayInput      `pulumi:"associatedRuleLists"`
	CreateTime               pulumi.StringInput                                `pulumi:"createTime"`
	Port                     pulumi.IntInput                                   `pulumi:"port"`
	TargetGroupId            pulumi.StringInput                                `pulumi:"targetGroupId"`
	TargetGroupInstanceLists TargetGroupsListTargetGroupInstanceListArrayInput `pulumi:"targetGroupInstanceLists"`
	TargetGroupName          pulumi.StringInput                                `pulumi:"targetGroupName"`
	UpdateTime               pulumi.StringInput                                `pulumi:"updateTime"`
	VpcId                    pulumi.StringInput                                `pulumi:"vpcId"`
}

func (TargetGroupsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsList)(nil)).Elem()
}

func (i TargetGroupsListArgs) ToTargetGroupsListOutput() TargetGroupsListOutput {
	return i.ToTargetGroupsListOutputWithContext(context.Background())
}

func (i TargetGroupsListArgs) ToTargetGroupsListOutputWithContext(ctx context.Context) TargetGroupsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListOutput)
}

// TargetGroupsListArrayInput is an input type that accepts TargetGroupsListArray and TargetGroupsListArrayOutput values.
// You can construct a concrete instance of `TargetGroupsListArrayInput` via:
//
//          TargetGroupsListArray{ TargetGroupsListArgs{...} }
type TargetGroupsListArrayInput interface {
	pulumi.Input

	ToTargetGroupsListArrayOutput() TargetGroupsListArrayOutput
	ToTargetGroupsListArrayOutputWithContext(context.Context) TargetGroupsListArrayOutput
}

type TargetGroupsListArray []TargetGroupsListInput

func (TargetGroupsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsList)(nil)).Elem()
}

func (i TargetGroupsListArray) ToTargetGroupsListArrayOutput() TargetGroupsListArrayOutput {
	return i.ToTargetGroupsListArrayOutputWithContext(context.Background())
}

func (i TargetGroupsListArray) ToTargetGroupsListArrayOutputWithContext(ctx context.Context) TargetGroupsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListArrayOutput)
}

type TargetGroupsListOutput struct{ *pulumi.OutputState }

func (TargetGroupsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsList)(nil)).Elem()
}

func (o TargetGroupsListOutput) ToTargetGroupsListOutput() TargetGroupsListOutput {
	return o
}

func (o TargetGroupsListOutput) ToTargetGroupsListOutputWithContext(ctx context.Context) TargetGroupsListOutput {
	return o
}

func (o TargetGroupsListOutput) AssociatedRuleLists() TargetGroupsListAssociatedRuleListArrayOutput {
	return o.ApplyT(func(v TargetGroupsList) []TargetGroupsListAssociatedRuleList { return v.AssociatedRuleLists }).(TargetGroupsListAssociatedRuleListArrayOutput)
}

func (o TargetGroupsListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o TargetGroupsListOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupsList) int { return v.Port }).(pulumi.IntOutput)
}

func (o TargetGroupsListOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsList) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

func (o TargetGroupsListOutput) TargetGroupInstanceLists() TargetGroupsListTargetGroupInstanceListArrayOutput {
	return o.ApplyT(func(v TargetGroupsList) []TargetGroupsListTargetGroupInstanceList { return v.TargetGroupInstanceLists }).(TargetGroupsListTargetGroupInstanceListArrayOutput)
}

func (o TargetGroupsListOutput) TargetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsList) string { return v.TargetGroupName }).(pulumi.StringOutput)
}

func (o TargetGroupsListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o TargetGroupsListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsList) string { return v.VpcId }).(pulumi.StringOutput)
}

type TargetGroupsListArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsList)(nil)).Elem()
}

func (o TargetGroupsListArrayOutput) ToTargetGroupsListArrayOutput() TargetGroupsListArrayOutput {
	return o
}

func (o TargetGroupsListArrayOutput) ToTargetGroupsListArrayOutputWithContext(ctx context.Context) TargetGroupsListArrayOutput {
	return o
}

func (o TargetGroupsListArrayOutput) Index(i pulumi.IntInput) TargetGroupsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupsList {
		return vs[0].([]TargetGroupsList)[vs[1].(int)]
	}).(TargetGroupsListOutput)
}

type TargetGroupsListAssociatedRuleList struct {
	Domain           string `pulumi:"domain"`
	ListenerId       string `pulumi:"listenerId"`
	ListenerName     string `pulumi:"listenerName"`
	ListenerPort     int    `pulumi:"listenerPort"`
	LoadBalancerId   string `pulumi:"loadBalancerId"`
	LoadBalancerName string `pulumi:"loadBalancerName"`
	LocationId       string `pulumi:"locationId"`
	Protocol         string `pulumi:"protocol"`
	Url              string `pulumi:"url"`
}

// TargetGroupsListAssociatedRuleListInput is an input type that accepts TargetGroupsListAssociatedRuleListArgs and TargetGroupsListAssociatedRuleListOutput values.
// You can construct a concrete instance of `TargetGroupsListAssociatedRuleListInput` via:
//
//          TargetGroupsListAssociatedRuleListArgs{...}
type TargetGroupsListAssociatedRuleListInput interface {
	pulumi.Input

	ToTargetGroupsListAssociatedRuleListOutput() TargetGroupsListAssociatedRuleListOutput
	ToTargetGroupsListAssociatedRuleListOutputWithContext(context.Context) TargetGroupsListAssociatedRuleListOutput
}

type TargetGroupsListAssociatedRuleListArgs struct {
	Domain           pulumi.StringInput `pulumi:"domain"`
	ListenerId       pulumi.StringInput `pulumi:"listenerId"`
	ListenerName     pulumi.StringInput `pulumi:"listenerName"`
	ListenerPort     pulumi.IntInput    `pulumi:"listenerPort"`
	LoadBalancerId   pulumi.StringInput `pulumi:"loadBalancerId"`
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	LocationId       pulumi.StringInput `pulumi:"locationId"`
	Protocol         pulumi.StringInput `pulumi:"protocol"`
	Url              pulumi.StringInput `pulumi:"url"`
}

func (TargetGroupsListAssociatedRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsListAssociatedRuleList)(nil)).Elem()
}

func (i TargetGroupsListAssociatedRuleListArgs) ToTargetGroupsListAssociatedRuleListOutput() TargetGroupsListAssociatedRuleListOutput {
	return i.ToTargetGroupsListAssociatedRuleListOutputWithContext(context.Background())
}

func (i TargetGroupsListAssociatedRuleListArgs) ToTargetGroupsListAssociatedRuleListOutputWithContext(ctx context.Context) TargetGroupsListAssociatedRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListAssociatedRuleListOutput)
}

// TargetGroupsListAssociatedRuleListArrayInput is an input type that accepts TargetGroupsListAssociatedRuleListArray and TargetGroupsListAssociatedRuleListArrayOutput values.
// You can construct a concrete instance of `TargetGroupsListAssociatedRuleListArrayInput` via:
//
//          TargetGroupsListAssociatedRuleListArray{ TargetGroupsListAssociatedRuleListArgs{...} }
type TargetGroupsListAssociatedRuleListArrayInput interface {
	pulumi.Input

	ToTargetGroupsListAssociatedRuleListArrayOutput() TargetGroupsListAssociatedRuleListArrayOutput
	ToTargetGroupsListAssociatedRuleListArrayOutputWithContext(context.Context) TargetGroupsListAssociatedRuleListArrayOutput
}

type TargetGroupsListAssociatedRuleListArray []TargetGroupsListAssociatedRuleListInput

func (TargetGroupsListAssociatedRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsListAssociatedRuleList)(nil)).Elem()
}

func (i TargetGroupsListAssociatedRuleListArray) ToTargetGroupsListAssociatedRuleListArrayOutput() TargetGroupsListAssociatedRuleListArrayOutput {
	return i.ToTargetGroupsListAssociatedRuleListArrayOutputWithContext(context.Background())
}

func (i TargetGroupsListAssociatedRuleListArray) ToTargetGroupsListAssociatedRuleListArrayOutputWithContext(ctx context.Context) TargetGroupsListAssociatedRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListAssociatedRuleListArrayOutput)
}

type TargetGroupsListAssociatedRuleListOutput struct{ *pulumi.OutputState }

func (TargetGroupsListAssociatedRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsListAssociatedRuleList)(nil)).Elem()
}

func (o TargetGroupsListAssociatedRuleListOutput) ToTargetGroupsListAssociatedRuleListOutput() TargetGroupsListAssociatedRuleListOutput {
	return o
}

func (o TargetGroupsListAssociatedRuleListOutput) ToTargetGroupsListAssociatedRuleListOutputWithContext(ctx context.Context) TargetGroupsListAssociatedRuleListOutput {
	return o
}

func (o TargetGroupsListAssociatedRuleListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.ListenerName }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) int { return v.ListenerPort }).(pulumi.IntOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) LocationId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.LocationId }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o TargetGroupsListAssociatedRuleListOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListAssociatedRuleList) string { return v.Url }).(pulumi.StringOutput)
}

type TargetGroupsListAssociatedRuleListArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupsListAssociatedRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsListAssociatedRuleList)(nil)).Elem()
}

func (o TargetGroupsListAssociatedRuleListArrayOutput) ToTargetGroupsListAssociatedRuleListArrayOutput() TargetGroupsListAssociatedRuleListArrayOutput {
	return o
}

func (o TargetGroupsListAssociatedRuleListArrayOutput) ToTargetGroupsListAssociatedRuleListArrayOutputWithContext(ctx context.Context) TargetGroupsListAssociatedRuleListArrayOutput {
	return o
}

func (o TargetGroupsListAssociatedRuleListArrayOutput) Index(i pulumi.IntInput) TargetGroupsListAssociatedRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupsListAssociatedRuleList {
		return vs[0].([]TargetGroupsListAssociatedRuleList)[vs[1].(int)]
	}).(TargetGroupsListAssociatedRuleListOutput)
}

type TargetGroupsListTargetGroupInstanceList struct {
	EniId              string        `pulumi:"eniId"`
	InstanceId         string        `pulumi:"instanceId"`
	InstanceName       string        `pulumi:"instanceName"`
	PrivateIpAddresses []interface{} `pulumi:"privateIpAddresses"`
	PublicIpAddresses  []interface{} `pulumi:"publicIpAddresses"`
	RegisteredTime     string        `pulumi:"registeredTime"`
	ServerPort         int           `pulumi:"serverPort"`
	ServerType         string        `pulumi:"serverType"`
	Weight             int           `pulumi:"weight"`
}

// TargetGroupsListTargetGroupInstanceListInput is an input type that accepts TargetGroupsListTargetGroupInstanceListArgs and TargetGroupsListTargetGroupInstanceListOutput values.
// You can construct a concrete instance of `TargetGroupsListTargetGroupInstanceListInput` via:
//
//          TargetGroupsListTargetGroupInstanceListArgs{...}
type TargetGroupsListTargetGroupInstanceListInput interface {
	pulumi.Input

	ToTargetGroupsListTargetGroupInstanceListOutput() TargetGroupsListTargetGroupInstanceListOutput
	ToTargetGroupsListTargetGroupInstanceListOutputWithContext(context.Context) TargetGroupsListTargetGroupInstanceListOutput
}

type TargetGroupsListTargetGroupInstanceListArgs struct {
	EniId              pulumi.StringInput `pulumi:"eniId"`
	InstanceId         pulumi.StringInput `pulumi:"instanceId"`
	InstanceName       pulumi.StringInput `pulumi:"instanceName"`
	PrivateIpAddresses pulumi.ArrayInput  `pulumi:"privateIpAddresses"`
	PublicIpAddresses  pulumi.ArrayInput  `pulumi:"publicIpAddresses"`
	RegisteredTime     pulumi.StringInput `pulumi:"registeredTime"`
	ServerPort         pulumi.IntInput    `pulumi:"serverPort"`
	ServerType         pulumi.StringInput `pulumi:"serverType"`
	Weight             pulumi.IntInput    `pulumi:"weight"`
}

func (TargetGroupsListTargetGroupInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsListTargetGroupInstanceList)(nil)).Elem()
}

func (i TargetGroupsListTargetGroupInstanceListArgs) ToTargetGroupsListTargetGroupInstanceListOutput() TargetGroupsListTargetGroupInstanceListOutput {
	return i.ToTargetGroupsListTargetGroupInstanceListOutputWithContext(context.Background())
}

func (i TargetGroupsListTargetGroupInstanceListArgs) ToTargetGroupsListTargetGroupInstanceListOutputWithContext(ctx context.Context) TargetGroupsListTargetGroupInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListTargetGroupInstanceListOutput)
}

// TargetGroupsListTargetGroupInstanceListArrayInput is an input type that accepts TargetGroupsListTargetGroupInstanceListArray and TargetGroupsListTargetGroupInstanceListArrayOutput values.
// You can construct a concrete instance of `TargetGroupsListTargetGroupInstanceListArrayInput` via:
//
//          TargetGroupsListTargetGroupInstanceListArray{ TargetGroupsListTargetGroupInstanceListArgs{...} }
type TargetGroupsListTargetGroupInstanceListArrayInput interface {
	pulumi.Input

	ToTargetGroupsListTargetGroupInstanceListArrayOutput() TargetGroupsListTargetGroupInstanceListArrayOutput
	ToTargetGroupsListTargetGroupInstanceListArrayOutputWithContext(context.Context) TargetGroupsListTargetGroupInstanceListArrayOutput
}

type TargetGroupsListTargetGroupInstanceListArray []TargetGroupsListTargetGroupInstanceListInput

func (TargetGroupsListTargetGroupInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsListTargetGroupInstanceList)(nil)).Elem()
}

func (i TargetGroupsListTargetGroupInstanceListArray) ToTargetGroupsListTargetGroupInstanceListArrayOutput() TargetGroupsListTargetGroupInstanceListArrayOutput {
	return i.ToTargetGroupsListTargetGroupInstanceListArrayOutputWithContext(context.Background())
}

func (i TargetGroupsListTargetGroupInstanceListArray) ToTargetGroupsListTargetGroupInstanceListArrayOutputWithContext(ctx context.Context) TargetGroupsListTargetGroupInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupsListTargetGroupInstanceListArrayOutput)
}

type TargetGroupsListTargetGroupInstanceListOutput struct{ *pulumi.OutputState }

func (TargetGroupsListTargetGroupInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupsListTargetGroupInstanceList)(nil)).Elem()
}

func (o TargetGroupsListTargetGroupInstanceListOutput) ToTargetGroupsListTargetGroupInstanceListOutput() TargetGroupsListTargetGroupInstanceListOutput {
	return o
}

func (o TargetGroupsListTargetGroupInstanceListOutput) ToTargetGroupsListTargetGroupInstanceListOutputWithContext(ctx context.Context) TargetGroupsListTargetGroupInstanceListOutput {
	return o
}

func (o TargetGroupsListTargetGroupInstanceListOutput) EniId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) string { return v.EniId }).(pulumi.StringOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) PrivateIpAddresses() pulumi.ArrayOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) []interface{} { return v.PrivateIpAddresses }).(pulumi.ArrayOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) PublicIpAddresses() pulumi.ArrayOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) []interface{} { return v.PublicIpAddresses }).(pulumi.ArrayOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) RegisteredTime() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) string { return v.RegisteredTime }).(pulumi.StringOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) int { return v.ServerPort }).(pulumi.IntOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) string { return v.ServerType }).(pulumi.StringOutput)
}

func (o TargetGroupsListTargetGroupInstanceListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupsListTargetGroupInstanceList) int { return v.Weight }).(pulumi.IntOutput)
}

type TargetGroupsListTargetGroupInstanceListArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupsListTargetGroupInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupsListTargetGroupInstanceList)(nil)).Elem()
}

func (o TargetGroupsListTargetGroupInstanceListArrayOutput) ToTargetGroupsListTargetGroupInstanceListArrayOutput() TargetGroupsListTargetGroupInstanceListArrayOutput {
	return o
}

func (o TargetGroupsListTargetGroupInstanceListArrayOutput) ToTargetGroupsListTargetGroupInstanceListArrayOutputWithContext(ctx context.Context) TargetGroupsListTargetGroupInstanceListArrayOutput {
	return o
}

func (o TargetGroupsListTargetGroupInstanceListArrayOutput) Index(i pulumi.IntInput) TargetGroupsListTargetGroupInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupsListTargetGroupInstanceList {
		return vs[0].([]TargetGroupsListTargetGroupInstanceList)[vs[1].(int)]
	}).(TargetGroupsListTargetGroupInstanceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSnatIpInput)(nil)).Elem(), InstanceSnatIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSnatIpArrayInput)(nil)).Elem(), InstanceSnatIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesClbListInput)(nil)).Elem(), InstancesClbListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesClbListArrayInput)(nil)).Elem(), InstancesClbListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRulesRuleListInput)(nil)).Elem(), ListenerRulesRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRulesRuleListArrayInput)(nil)).Elem(), ListenerRulesRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerListInput)(nil)).Elem(), ListenersListenerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerListArrayInput)(nil)).Elem(), ListenersListenerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedirectionsRedirectionListInput)(nil)).Elem(), RedirectionsRedirectionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedirectionsRedirectionListArrayInput)(nil)).Elem(), RedirectionsRedirectionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentTargetInput)(nil)).Elem(), ServerAttachmentTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentTargetArrayInput)(nil)).Elem(), ServerAttachmentTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentsAttachmentListInput)(nil)).Elem(), ServerAttachmentsAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentsAttachmentListArrayInput)(nil)).Elem(), ServerAttachmentsAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentsAttachmentListTargetInput)(nil)).Elem(), ServerAttachmentsAttachmentListTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAttachmentsAttachmentListTargetArrayInput)(nil)).Elem(), ServerAttachmentsAttachmentListTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetGroupInstanceInput)(nil)).Elem(), TargetGroupTargetGroupInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetGroupInstanceArrayInput)(nil)).Elem(), TargetGroupTargetGroupInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListInput)(nil)).Elem(), TargetGroupsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListArrayInput)(nil)).Elem(), TargetGroupsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListAssociatedRuleListInput)(nil)).Elem(), TargetGroupsListAssociatedRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListAssociatedRuleListArrayInput)(nil)).Elem(), TargetGroupsListAssociatedRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListTargetGroupInstanceListInput)(nil)).Elem(), TargetGroupsListTargetGroupInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupsListTargetGroupInstanceListArrayInput)(nil)).Elem(), TargetGroupsListTargetGroupInstanceListArray{})
	pulumi.RegisterOutputType(InstanceSnatIpOutput{})
	pulumi.RegisterOutputType(InstanceSnatIpArrayOutput{})
	pulumi.RegisterOutputType(InstancesClbListOutput{})
	pulumi.RegisterOutputType(InstancesClbListArrayOutput{})
	pulumi.RegisterOutputType(ListenerRulesRuleListOutput{})
	pulumi.RegisterOutputType(ListenerRulesRuleListArrayOutput{})
	pulumi.RegisterOutputType(ListenersListenerListOutput{})
	pulumi.RegisterOutputType(ListenersListenerListArrayOutput{})
	pulumi.RegisterOutputType(RedirectionsRedirectionListOutput{})
	pulumi.RegisterOutputType(RedirectionsRedirectionListArrayOutput{})
	pulumi.RegisterOutputType(ServerAttachmentTargetOutput{})
	pulumi.RegisterOutputType(ServerAttachmentTargetArrayOutput{})
	pulumi.RegisterOutputType(ServerAttachmentsAttachmentListOutput{})
	pulumi.RegisterOutputType(ServerAttachmentsAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(ServerAttachmentsAttachmentListTargetOutput{})
	pulumi.RegisterOutputType(ServerAttachmentsAttachmentListTargetArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetGroupInstanceOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetGroupInstanceArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupsListOutput{})
	pulumi.RegisterOutputType(TargetGroupsListArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupsListAssociatedRuleListOutput{})
	pulumi.RegisterOutputType(TargetGroupsListAssociatedRuleListArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupsListTargetGroupInstanceListOutput{})
	pulumi.RegisterOutputType(TargetGroupsListTargetGroupInstanceListArrayOutput{})
}
