// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Listeners(ctx *pulumi.Context, args *ListenersArgs, opts ...pulumi.InvokeOption) (*ListenersResult, error) {
	var rv ListenersResult
	err := ctx.Invoke("tencentcloud:Clb/listeners:Listeners", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Listeners.
type ListenersArgs struct {
	ClbId            string  `pulumi:"clbId"`
	ListenerId       *string `pulumi:"listenerId"`
	Port             *int    `pulumi:"port"`
	Protocol         *string `pulumi:"protocol"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by Listeners.
type ListenersResult struct {
	ClbId string `pulumi:"clbId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                  `pulumi:"id"`
	ListenerId       *string                 `pulumi:"listenerId"`
	ListenerLists    []ListenersListenerList `pulumi:"listenerLists"`
	Port             *int                    `pulumi:"port"`
	Protocol         *string                 `pulumi:"protocol"`
	ResultOutputFile *string                 `pulumi:"resultOutputFile"`
}

func ListenersOutput(ctx *pulumi.Context, args ListenersOutputArgs, opts ...pulumi.InvokeOption) ListenersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListenersResult, error) {
			args := v.(ListenersArgs)
			r, err := Listeners(ctx, &args, opts...)
			var s ListenersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListenersResultOutput)
}

// A collection of arguments for invoking Listeners.
type ListenersOutputArgs struct {
	ClbId            pulumi.StringInput    `pulumi:"clbId"`
	ListenerId       pulumi.StringPtrInput `pulumi:"listenerId"`
	Port             pulumi.IntPtrInput    `pulumi:"port"`
	Protocol         pulumi.StringPtrInput `pulumi:"protocol"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (ListenersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersArgs)(nil)).Elem()
}

// A collection of values returned by Listeners.
type ListenersResultOutput struct{ *pulumi.OutputState }

func (ListenersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersResult)(nil)).Elem()
}

func (o ListenersResultOutput) ToListenersResultOutput() ListenersResultOutput {
	return o
}

func (o ListenersResultOutput) ToListenersResultOutputWithContext(ctx context.Context) ListenersResultOutput {
	return o
}

func (o ListenersResultOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersResult) string { return v.ClbId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ListenersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ListenersResultOutput) ListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenersResult) *string { return v.ListenerId }).(pulumi.StringPtrOutput)
}

func (o ListenersResultOutput) ListenerLists() ListenersListenerListArrayOutput {
	return o.ApplyT(func(v ListenersResult) []ListenersListenerList { return v.ListenerLists }).(ListenersListenerListArrayOutput)
}

func (o ListenersResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenersResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ListenersResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenersResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o ListenersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListenersResultOutput{})
}
