// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessGroupsAccessGroupList struct {
	AccessGroupId string `pulumi:"accessGroupId"`
	CreateTime    string `pulumi:"createTime"`
	Description   string `pulumi:"description"`
	Name          string `pulumi:"name"`
}

// AccessGroupsAccessGroupListInput is an input type that accepts AccessGroupsAccessGroupListArgs and AccessGroupsAccessGroupListOutput values.
// You can construct a concrete instance of `AccessGroupsAccessGroupListInput` via:
//
//          AccessGroupsAccessGroupListArgs{...}
type AccessGroupsAccessGroupListInput interface {
	pulumi.Input

	ToAccessGroupsAccessGroupListOutput() AccessGroupsAccessGroupListOutput
	ToAccessGroupsAccessGroupListOutputWithContext(context.Context) AccessGroupsAccessGroupListOutput
}

type AccessGroupsAccessGroupListArgs struct {
	AccessGroupId pulumi.StringInput `pulumi:"accessGroupId"`
	CreateTime    pulumi.StringInput `pulumi:"createTime"`
	Description   pulumi.StringInput `pulumi:"description"`
	Name          pulumi.StringInput `pulumi:"name"`
}

func (AccessGroupsAccessGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupsAccessGroupList)(nil)).Elem()
}

func (i AccessGroupsAccessGroupListArgs) ToAccessGroupsAccessGroupListOutput() AccessGroupsAccessGroupListOutput {
	return i.ToAccessGroupsAccessGroupListOutputWithContext(context.Background())
}

func (i AccessGroupsAccessGroupListArgs) ToAccessGroupsAccessGroupListOutputWithContext(ctx context.Context) AccessGroupsAccessGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupsAccessGroupListOutput)
}

// AccessGroupsAccessGroupListArrayInput is an input type that accepts AccessGroupsAccessGroupListArray and AccessGroupsAccessGroupListArrayOutput values.
// You can construct a concrete instance of `AccessGroupsAccessGroupListArrayInput` via:
//
//          AccessGroupsAccessGroupListArray{ AccessGroupsAccessGroupListArgs{...} }
type AccessGroupsAccessGroupListArrayInput interface {
	pulumi.Input

	ToAccessGroupsAccessGroupListArrayOutput() AccessGroupsAccessGroupListArrayOutput
	ToAccessGroupsAccessGroupListArrayOutputWithContext(context.Context) AccessGroupsAccessGroupListArrayOutput
}

type AccessGroupsAccessGroupListArray []AccessGroupsAccessGroupListInput

func (AccessGroupsAccessGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupsAccessGroupList)(nil)).Elem()
}

func (i AccessGroupsAccessGroupListArray) ToAccessGroupsAccessGroupListArrayOutput() AccessGroupsAccessGroupListArrayOutput {
	return i.ToAccessGroupsAccessGroupListArrayOutputWithContext(context.Background())
}

func (i AccessGroupsAccessGroupListArray) ToAccessGroupsAccessGroupListArrayOutputWithContext(ctx context.Context) AccessGroupsAccessGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupsAccessGroupListArrayOutput)
}

type AccessGroupsAccessGroupListOutput struct{ *pulumi.OutputState }

func (AccessGroupsAccessGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupsAccessGroupList)(nil)).Elem()
}

func (o AccessGroupsAccessGroupListOutput) ToAccessGroupsAccessGroupListOutput() AccessGroupsAccessGroupListOutput {
	return o
}

func (o AccessGroupsAccessGroupListOutput) ToAccessGroupsAccessGroupListOutputWithContext(ctx context.Context) AccessGroupsAccessGroupListOutput {
	return o
}

func (o AccessGroupsAccessGroupListOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupsAccessGroupList) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

func (o AccessGroupsAccessGroupListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupsAccessGroupList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o AccessGroupsAccessGroupListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupsAccessGroupList) string { return v.Description }).(pulumi.StringOutput)
}

func (o AccessGroupsAccessGroupListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupsAccessGroupList) string { return v.Name }).(pulumi.StringOutput)
}

type AccessGroupsAccessGroupListArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupsAccessGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupsAccessGroupList)(nil)).Elem()
}

func (o AccessGroupsAccessGroupListArrayOutput) ToAccessGroupsAccessGroupListArrayOutput() AccessGroupsAccessGroupListArrayOutput {
	return o
}

func (o AccessGroupsAccessGroupListArrayOutput) ToAccessGroupsAccessGroupListArrayOutputWithContext(ctx context.Context) AccessGroupsAccessGroupListArrayOutput {
	return o
}

func (o AccessGroupsAccessGroupListArrayOutput) Index(i pulumi.IntInput) AccessGroupsAccessGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupsAccessGroupList {
		return vs[0].([]AccessGroupsAccessGroupList)[vs[1].(int)]
	}).(AccessGroupsAccessGroupListOutput)
}

type AccessRulesAccessRuleList struct {
	AccessRuleId   string `pulumi:"accessRuleId"`
	AuthClientIp   string `pulumi:"authClientIp"`
	Priority       int    `pulumi:"priority"`
	RwPermission   string `pulumi:"rwPermission"`
	UserPermission string `pulumi:"userPermission"`
}

// AccessRulesAccessRuleListInput is an input type that accepts AccessRulesAccessRuleListArgs and AccessRulesAccessRuleListOutput values.
// You can construct a concrete instance of `AccessRulesAccessRuleListInput` via:
//
//          AccessRulesAccessRuleListArgs{...}
type AccessRulesAccessRuleListInput interface {
	pulumi.Input

	ToAccessRulesAccessRuleListOutput() AccessRulesAccessRuleListOutput
	ToAccessRulesAccessRuleListOutputWithContext(context.Context) AccessRulesAccessRuleListOutput
}

type AccessRulesAccessRuleListArgs struct {
	AccessRuleId   pulumi.StringInput `pulumi:"accessRuleId"`
	AuthClientIp   pulumi.StringInput `pulumi:"authClientIp"`
	Priority       pulumi.IntInput    `pulumi:"priority"`
	RwPermission   pulumi.StringInput `pulumi:"rwPermission"`
	UserPermission pulumi.StringInput `pulumi:"userPermission"`
}

func (AccessRulesAccessRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRulesAccessRuleList)(nil)).Elem()
}

func (i AccessRulesAccessRuleListArgs) ToAccessRulesAccessRuleListOutput() AccessRulesAccessRuleListOutput {
	return i.ToAccessRulesAccessRuleListOutputWithContext(context.Background())
}

func (i AccessRulesAccessRuleListArgs) ToAccessRulesAccessRuleListOutputWithContext(ctx context.Context) AccessRulesAccessRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRulesAccessRuleListOutput)
}

// AccessRulesAccessRuleListArrayInput is an input type that accepts AccessRulesAccessRuleListArray and AccessRulesAccessRuleListArrayOutput values.
// You can construct a concrete instance of `AccessRulesAccessRuleListArrayInput` via:
//
//          AccessRulesAccessRuleListArray{ AccessRulesAccessRuleListArgs{...} }
type AccessRulesAccessRuleListArrayInput interface {
	pulumi.Input

	ToAccessRulesAccessRuleListArrayOutput() AccessRulesAccessRuleListArrayOutput
	ToAccessRulesAccessRuleListArrayOutputWithContext(context.Context) AccessRulesAccessRuleListArrayOutput
}

type AccessRulesAccessRuleListArray []AccessRulesAccessRuleListInput

func (AccessRulesAccessRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessRulesAccessRuleList)(nil)).Elem()
}

func (i AccessRulesAccessRuleListArray) ToAccessRulesAccessRuleListArrayOutput() AccessRulesAccessRuleListArrayOutput {
	return i.ToAccessRulesAccessRuleListArrayOutputWithContext(context.Background())
}

func (i AccessRulesAccessRuleListArray) ToAccessRulesAccessRuleListArrayOutputWithContext(ctx context.Context) AccessRulesAccessRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRulesAccessRuleListArrayOutput)
}

type AccessRulesAccessRuleListOutput struct{ *pulumi.OutputState }

func (AccessRulesAccessRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRulesAccessRuleList)(nil)).Elem()
}

func (o AccessRulesAccessRuleListOutput) ToAccessRulesAccessRuleListOutput() AccessRulesAccessRuleListOutput {
	return o
}

func (o AccessRulesAccessRuleListOutput) ToAccessRulesAccessRuleListOutputWithContext(ctx context.Context) AccessRulesAccessRuleListOutput {
	return o
}

func (o AccessRulesAccessRuleListOutput) AccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRulesAccessRuleList) string { return v.AccessRuleId }).(pulumi.StringOutput)
}

func (o AccessRulesAccessRuleListOutput) AuthClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRulesAccessRuleList) string { return v.AuthClientIp }).(pulumi.StringOutput)
}

func (o AccessRulesAccessRuleListOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v AccessRulesAccessRuleList) int { return v.Priority }).(pulumi.IntOutput)
}

func (o AccessRulesAccessRuleListOutput) RwPermission() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRulesAccessRuleList) string { return v.RwPermission }).(pulumi.StringOutput)
}

func (o AccessRulesAccessRuleListOutput) UserPermission() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRulesAccessRuleList) string { return v.UserPermission }).(pulumi.StringOutput)
}

type AccessRulesAccessRuleListArrayOutput struct{ *pulumi.OutputState }

func (AccessRulesAccessRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessRulesAccessRuleList)(nil)).Elem()
}

func (o AccessRulesAccessRuleListArrayOutput) ToAccessRulesAccessRuleListArrayOutput() AccessRulesAccessRuleListArrayOutput {
	return o
}

func (o AccessRulesAccessRuleListArrayOutput) ToAccessRulesAccessRuleListArrayOutputWithContext(ctx context.Context) AccessRulesAccessRuleListArrayOutput {
	return o
}

func (o AccessRulesAccessRuleListArrayOutput) Index(i pulumi.IntInput) AccessRulesAccessRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessRulesAccessRuleList {
		return vs[0].([]AccessRulesAccessRuleList)[vs[1].(int)]
	}).(AccessRulesAccessRuleListOutput)
}

type FileSystemsFileSystemList struct {
	AccessGroupId    string `pulumi:"accessGroupId"`
	AvailabilityZone string `pulumi:"availabilityZone"`
	CreateTime       string `pulumi:"createTime"`
	FileSystemId     string `pulumi:"fileSystemId"`
	Name             string `pulumi:"name"`
	Protocol         string `pulumi:"protocol"`
	SizeLimit        int    `pulumi:"sizeLimit"`
	SizeUsed         int    `pulumi:"sizeUsed"`
	Status           string `pulumi:"status"`
	StorageType      string `pulumi:"storageType"`
}

// FileSystemsFileSystemListInput is an input type that accepts FileSystemsFileSystemListArgs and FileSystemsFileSystemListOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemListInput` via:
//
//          FileSystemsFileSystemListArgs{...}
type FileSystemsFileSystemListInput interface {
	pulumi.Input

	ToFileSystemsFileSystemListOutput() FileSystemsFileSystemListOutput
	ToFileSystemsFileSystemListOutputWithContext(context.Context) FileSystemsFileSystemListOutput
}

type FileSystemsFileSystemListArgs struct {
	AccessGroupId    pulumi.StringInput `pulumi:"accessGroupId"`
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	CreateTime       pulumi.StringInput `pulumi:"createTime"`
	FileSystemId     pulumi.StringInput `pulumi:"fileSystemId"`
	Name             pulumi.StringInput `pulumi:"name"`
	Protocol         pulumi.StringInput `pulumi:"protocol"`
	SizeLimit        pulumi.IntInput    `pulumi:"sizeLimit"`
	SizeUsed         pulumi.IntInput    `pulumi:"sizeUsed"`
	Status           pulumi.StringInput `pulumi:"status"`
	StorageType      pulumi.StringInput `pulumi:"storageType"`
}

func (FileSystemsFileSystemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemList)(nil)).Elem()
}

func (i FileSystemsFileSystemListArgs) ToFileSystemsFileSystemListOutput() FileSystemsFileSystemListOutput {
	return i.ToFileSystemsFileSystemListOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemListArgs) ToFileSystemsFileSystemListOutputWithContext(ctx context.Context) FileSystemsFileSystemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemListOutput)
}

// FileSystemsFileSystemListArrayInput is an input type that accepts FileSystemsFileSystemListArray and FileSystemsFileSystemListArrayOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemListArrayInput` via:
//
//          FileSystemsFileSystemListArray{ FileSystemsFileSystemListArgs{...} }
type FileSystemsFileSystemListArrayInput interface {
	pulumi.Input

	ToFileSystemsFileSystemListArrayOutput() FileSystemsFileSystemListArrayOutput
	ToFileSystemsFileSystemListArrayOutputWithContext(context.Context) FileSystemsFileSystemListArrayOutput
}

type FileSystemsFileSystemListArray []FileSystemsFileSystemListInput

func (FileSystemsFileSystemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystemList)(nil)).Elem()
}

func (i FileSystemsFileSystemListArray) ToFileSystemsFileSystemListArrayOutput() FileSystemsFileSystemListArrayOutput {
	return i.ToFileSystemsFileSystemListArrayOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemListArray) ToFileSystemsFileSystemListArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemListArrayOutput)
}

type FileSystemsFileSystemListOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemList)(nil)).Elem()
}

func (o FileSystemsFileSystemListOutput) ToFileSystemsFileSystemListOutput() FileSystemsFileSystemListOutput {
	return o
}

func (o FileSystemsFileSystemListOutput) ToFileSystemsFileSystemListOutputWithContext(ctx context.Context) FileSystemsFileSystemListOutput {
	return o
}

func (o FileSystemsFileSystemListOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.FileSystemId }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.Name }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) SizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) int { return v.SizeLimit }).(pulumi.IntOutput)
}

func (o FileSystemsFileSystemListOutput) SizeUsed() pulumi.IntOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) int { return v.SizeUsed }).(pulumi.IntOutput)
}

func (o FileSystemsFileSystemListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.Status }).(pulumi.StringOutput)
}

func (o FileSystemsFileSystemListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemList) string { return v.StorageType }).(pulumi.StringOutput)
}

type FileSystemsFileSystemListArrayOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystemList)(nil)).Elem()
}

func (o FileSystemsFileSystemListArrayOutput) ToFileSystemsFileSystemListArrayOutput() FileSystemsFileSystemListArrayOutput {
	return o
}

func (o FileSystemsFileSystemListArrayOutput) ToFileSystemsFileSystemListArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemListArrayOutput {
	return o
}

func (o FileSystemsFileSystemListArrayOutput) Index(i pulumi.IntInput) FileSystemsFileSystemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemsFileSystemList {
		return vs[0].([]FileSystemsFileSystemList)[vs[1].(int)]
	}).(FileSystemsFileSystemListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupsAccessGroupListInput)(nil)).Elem(), AccessGroupsAccessGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupsAccessGroupListArrayInput)(nil)).Elem(), AccessGroupsAccessGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRulesAccessRuleListInput)(nil)).Elem(), AccessRulesAccessRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRulesAccessRuleListArrayInput)(nil)).Elem(), AccessRulesAccessRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemListInput)(nil)).Elem(), FileSystemsFileSystemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemListArrayInput)(nil)).Elem(), FileSystemsFileSystemListArray{})
	pulumi.RegisterOutputType(AccessGroupsAccessGroupListOutput{})
	pulumi.RegisterOutputType(AccessGroupsAccessGroupListArrayOutput{})
	pulumi.RegisterOutputType(AccessRulesAccessRuleListOutput{})
	pulumi.RegisterOutputType(AccessRulesAccessRuleListArrayOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemListOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemListArrayOutput{})
}
