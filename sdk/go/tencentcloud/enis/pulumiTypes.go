// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package enis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstancesEni struct {
	CreateTime     string                 `pulumi:"createTime"`
	Description    string                 `pulumi:"description"`
	Id             string                 `pulumi:"id"`
	InstanceId     string                 `pulumi:"instanceId"`
	Ipv4s          []InstancesEniIpv4     `pulumi:"ipv4s"`
	Mac            string                 `pulumi:"mac"`
	Name           string                 `pulumi:"name"`
	Primary        bool                   `pulumi:"primary"`
	SecurityGroups []string               `pulumi:"securityGroups"`
	State          string                 `pulumi:"state"`
	SubnetId       string                 `pulumi:"subnetId"`
	Tags           map[string]interface{} `pulumi:"tags"`
	VpcId          string                 `pulumi:"vpcId"`
}

// InstancesEniInput is an input type that accepts InstancesEniArgs and InstancesEniOutput values.
// You can construct a concrete instance of `InstancesEniInput` via:
//
//          InstancesEniArgs{...}
type InstancesEniInput interface {
	pulumi.Input

	ToInstancesEniOutput() InstancesEniOutput
	ToInstancesEniOutputWithContext(context.Context) InstancesEniOutput
}

type InstancesEniArgs struct {
	CreateTime     pulumi.StringInput         `pulumi:"createTime"`
	Description    pulumi.StringInput         `pulumi:"description"`
	Id             pulumi.StringInput         `pulumi:"id"`
	InstanceId     pulumi.StringInput         `pulumi:"instanceId"`
	Ipv4s          InstancesEniIpv4ArrayInput `pulumi:"ipv4s"`
	Mac            pulumi.StringInput         `pulumi:"mac"`
	Name           pulumi.StringInput         `pulumi:"name"`
	Primary        pulumi.BoolInput           `pulumi:"primary"`
	SecurityGroups pulumi.StringArrayInput    `pulumi:"securityGroups"`
	State          pulumi.StringInput         `pulumi:"state"`
	SubnetId       pulumi.StringInput         `pulumi:"subnetId"`
	Tags           pulumi.MapInput            `pulumi:"tags"`
	VpcId          pulumi.StringInput         `pulumi:"vpcId"`
}

func (InstancesEniArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesEni)(nil)).Elem()
}

func (i InstancesEniArgs) ToInstancesEniOutput() InstancesEniOutput {
	return i.ToInstancesEniOutputWithContext(context.Background())
}

func (i InstancesEniArgs) ToInstancesEniOutputWithContext(ctx context.Context) InstancesEniOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesEniOutput)
}

// InstancesEniArrayInput is an input type that accepts InstancesEniArray and InstancesEniArrayOutput values.
// You can construct a concrete instance of `InstancesEniArrayInput` via:
//
//          InstancesEniArray{ InstancesEniArgs{...} }
type InstancesEniArrayInput interface {
	pulumi.Input

	ToInstancesEniArrayOutput() InstancesEniArrayOutput
	ToInstancesEniArrayOutputWithContext(context.Context) InstancesEniArrayOutput
}

type InstancesEniArray []InstancesEniInput

func (InstancesEniArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesEni)(nil)).Elem()
}

func (i InstancesEniArray) ToInstancesEniArrayOutput() InstancesEniArrayOutput {
	return i.ToInstancesEniArrayOutputWithContext(context.Background())
}

func (i InstancesEniArray) ToInstancesEniArrayOutputWithContext(ctx context.Context) InstancesEniArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesEniArrayOutput)
}

type InstancesEniOutput struct{ *pulumi.OutputState }

func (InstancesEniOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesEni)(nil)).Elem()
}

func (o InstancesEniOutput) ToInstancesEniOutput() InstancesEniOutput {
	return o
}

func (o InstancesEniOutput) ToInstancesEniOutputWithContext(ctx context.Context) InstancesEniOutput {
	return o
}

func (o InstancesEniOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.Description }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.Id }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Ipv4s() InstancesEniIpv4ArrayOutput {
	return o.ApplyT(func(v InstancesEni) []InstancesEniIpv4 { return v.Ipv4s }).(InstancesEniIpv4ArrayOutput)
}

func (o InstancesEniOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.Mac }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesEni) bool { return v.Primary }).(pulumi.BoolOutput)
}

func (o InstancesEniOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesEni) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o InstancesEniOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.State }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesEniOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v InstancesEni) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o InstancesEniOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEni) string { return v.VpcId }).(pulumi.StringOutput)
}

type InstancesEniArrayOutput struct{ *pulumi.OutputState }

func (InstancesEniArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesEni)(nil)).Elem()
}

func (o InstancesEniArrayOutput) ToInstancesEniArrayOutput() InstancesEniArrayOutput {
	return o
}

func (o InstancesEniArrayOutput) ToInstancesEniArrayOutputWithContext(ctx context.Context) InstancesEniArrayOutput {
	return o
}

func (o InstancesEniArrayOutput) Index(i pulumi.IntInput) InstancesEniOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesEni {
		return vs[0].([]InstancesEni)[vs[1].(int)]
	}).(InstancesEniOutput)
}

type InstancesEniIpv4 struct {
	Description string `pulumi:"description"`
	Ip          string `pulumi:"ip"`
	Primary     bool   `pulumi:"primary"`
}

// InstancesEniIpv4Input is an input type that accepts InstancesEniIpv4Args and InstancesEniIpv4Output values.
// You can construct a concrete instance of `InstancesEniIpv4Input` via:
//
//          InstancesEniIpv4Args{...}
type InstancesEniIpv4Input interface {
	pulumi.Input

	ToInstancesEniIpv4Output() InstancesEniIpv4Output
	ToInstancesEniIpv4OutputWithContext(context.Context) InstancesEniIpv4Output
}

type InstancesEniIpv4Args struct {
	Description pulumi.StringInput `pulumi:"description"`
	Ip          pulumi.StringInput `pulumi:"ip"`
	Primary     pulumi.BoolInput   `pulumi:"primary"`
}

func (InstancesEniIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesEniIpv4)(nil)).Elem()
}

func (i InstancesEniIpv4Args) ToInstancesEniIpv4Output() InstancesEniIpv4Output {
	return i.ToInstancesEniIpv4OutputWithContext(context.Background())
}

func (i InstancesEniIpv4Args) ToInstancesEniIpv4OutputWithContext(ctx context.Context) InstancesEniIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesEniIpv4Output)
}

// InstancesEniIpv4ArrayInput is an input type that accepts InstancesEniIpv4Array and InstancesEniIpv4ArrayOutput values.
// You can construct a concrete instance of `InstancesEniIpv4ArrayInput` via:
//
//          InstancesEniIpv4Array{ InstancesEniIpv4Args{...} }
type InstancesEniIpv4ArrayInput interface {
	pulumi.Input

	ToInstancesEniIpv4ArrayOutput() InstancesEniIpv4ArrayOutput
	ToInstancesEniIpv4ArrayOutputWithContext(context.Context) InstancesEniIpv4ArrayOutput
}

type InstancesEniIpv4Array []InstancesEniIpv4Input

func (InstancesEniIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesEniIpv4)(nil)).Elem()
}

func (i InstancesEniIpv4Array) ToInstancesEniIpv4ArrayOutput() InstancesEniIpv4ArrayOutput {
	return i.ToInstancesEniIpv4ArrayOutputWithContext(context.Background())
}

func (i InstancesEniIpv4Array) ToInstancesEniIpv4ArrayOutputWithContext(ctx context.Context) InstancesEniIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesEniIpv4ArrayOutput)
}

type InstancesEniIpv4Output struct{ *pulumi.OutputState }

func (InstancesEniIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesEniIpv4)(nil)).Elem()
}

func (o InstancesEniIpv4Output) ToInstancesEniIpv4Output() InstancesEniIpv4Output {
	return o
}

func (o InstancesEniIpv4Output) ToInstancesEniIpv4OutputWithContext(ctx context.Context) InstancesEniIpv4Output {
	return o
}

func (o InstancesEniIpv4Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEniIpv4) string { return v.Description }).(pulumi.StringOutput)
}

func (o InstancesEniIpv4Output) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesEniIpv4) string { return v.Ip }).(pulumi.StringOutput)
}

func (o InstancesEniIpv4Output) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesEniIpv4) bool { return v.Primary }).(pulumi.BoolOutput)
}

type InstancesEniIpv4ArrayOutput struct{ *pulumi.OutputState }

func (InstancesEniIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesEniIpv4)(nil)).Elem()
}

func (o InstancesEniIpv4ArrayOutput) ToInstancesEniIpv4ArrayOutput() InstancesEniIpv4ArrayOutput {
	return o
}

func (o InstancesEniIpv4ArrayOutput) ToInstancesEniIpv4ArrayOutputWithContext(ctx context.Context) InstancesEniIpv4ArrayOutput {
	return o
}

func (o InstancesEniIpv4ArrayOutput) Index(i pulumi.IntInput) InstancesEniIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesEniIpv4 {
		return vs[0].([]InstancesEniIpv4)[vs[1].(int)]
	}).(InstancesEniIpv4Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesEniInput)(nil)).Elem(), InstancesEniArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesEniArrayInput)(nil)).Elem(), InstancesEniArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesEniIpv4Input)(nil)).Elem(), InstancesEniIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesEniIpv4ArrayInput)(nil)).Elem(), InstancesEniIpv4Array{})
	pulumi.RegisterOutputType(InstancesEniOutput{})
	pulumi.RegisterOutputType(InstancesEniArrayOutput{})
	pulumi.RegisterOutputType(InstancesEniIpv4Output{})
	pulumi.RegisterOutputType(InstancesEniIpv4ArrayOutput{})
}
