// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nats

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Instances(ctx *pulumi.Context, args *InstancesArgs, opts ...pulumi.InvokeOption) (*InstancesResult, error) {
	var rv InstancesResult
	err := ctx.Invoke("tencentcloud:Nats/instances:Instances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Instances.
type InstancesArgs struct {
	Bandwidth     *int    `pulumi:"bandwidth"`
	Id            *string `pulumi:"id"`
	MaxConcurrent *int    `pulumi:"maxConcurrent"`
	Name          *string `pulumi:"name"`
	State         *int    `pulumi:"state"`
	VpcId         *string `pulumi:"vpcId"`
}

// A collection of values returned by Instances.
type InstancesResult struct {
	Bandwidth     *int           `pulumi:"bandwidth"`
	Id            *string        `pulumi:"id"`
	MaxConcurrent *int           `pulumi:"maxConcurrent"`
	Name          *string        `pulumi:"name"`
	Nats          []InstancesNat `pulumi:"nats"`
	State         *int           `pulumi:"state"`
	VpcId         *string        `pulumi:"vpcId"`
}

func InstancesOutput(ctx *pulumi.Context, args InstancesOutputArgs, opts ...pulumi.InvokeOption) InstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (InstancesResult, error) {
			args := v.(InstancesArgs)
			r, err := Instances(ctx, &args, opts...)
			var s InstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(InstancesResultOutput)
}

// A collection of arguments for invoking Instances.
type InstancesOutputArgs struct {
	Bandwidth     pulumi.IntPtrInput    `pulumi:"bandwidth"`
	Id            pulumi.StringPtrInput `pulumi:"id"`
	MaxConcurrent pulumi.IntPtrInput    `pulumi:"maxConcurrent"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	State         pulumi.IntPtrInput    `pulumi:"state"`
	VpcId         pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (InstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesArgs)(nil)).Elem()
}

// A collection of values returned by Instances.
type InstancesResultOutput struct{ *pulumi.OutputState }

func (InstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesResult)(nil)).Elem()
}

func (o InstancesResultOutput) ToInstancesResultOutput() InstancesResultOutput {
	return o
}

func (o InstancesResultOutput) ToInstancesResultOutputWithContext(ctx context.Context) InstancesResultOutput {
	return o
}

func (o InstancesResultOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancesResult) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

func (o InstancesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) MaxConcurrent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancesResult) *int { return v.MaxConcurrent }).(pulumi.IntPtrOutput)
}

func (o InstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) Nats() InstancesNatArrayOutput {
	return o.ApplyT(func(v InstancesResult) []InstancesNat { return v.Nats }).(InstancesNatArrayOutput)
}

func (o InstancesResultOutput) State() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancesResult) *int { return v.State }).(pulumi.IntPtrOutput)
}

func (o InstancesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InstancesResultOutput{})
}
