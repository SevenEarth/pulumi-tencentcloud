// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ScalingGroups(ctx *pulumi.Context, args *ScalingGroupsArgs, opts ...pulumi.InvokeOption) (*ScalingGroupsResult, error) {
	var rv ScalingGroupsResult
	err := ctx.Invoke("tencentcloud:As/scalingGroups:ScalingGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ScalingGroups.
type ScalingGroupsArgs struct {
	ConfigurationId  *string                `pulumi:"configurationId"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	ScalingGroupId   *string                `pulumi:"scalingGroupId"`
	ScalingGroupName *string                `pulumi:"scalingGroupName"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by ScalingGroups.
type ScalingGroupsResult struct {
	ConfigurationId *string `pulumi:"configurationId"`
	// The provider-assigned unique ID for this managed resource.
	Id                string                          `pulumi:"id"`
	ResultOutputFile  *string                         `pulumi:"resultOutputFile"`
	ScalingGroupId    *string                         `pulumi:"scalingGroupId"`
	ScalingGroupLists []ScalingGroupsScalingGroupList `pulumi:"scalingGroupLists"`
	ScalingGroupName  *string                         `pulumi:"scalingGroupName"`
	Tags              map[string]interface{}          `pulumi:"tags"`
}

func ScalingGroupsOutput(ctx *pulumi.Context, args ScalingGroupsOutputArgs, opts ...pulumi.InvokeOption) ScalingGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ScalingGroupsResult, error) {
			args := v.(ScalingGroupsArgs)
			r, err := ScalingGroups(ctx, &args, opts...)
			var s ScalingGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ScalingGroupsResultOutput)
}

// A collection of arguments for invoking ScalingGroups.
type ScalingGroupsOutputArgs struct {
	ConfigurationId  pulumi.StringPtrInput `pulumi:"configurationId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	ScalingGroupId   pulumi.StringPtrInput `pulumi:"scalingGroupId"`
	ScalingGroupName pulumi.StringPtrInput `pulumi:"scalingGroupName"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (ScalingGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingGroupsArgs)(nil)).Elem()
}

// A collection of values returned by ScalingGroups.
type ScalingGroupsResultOutput struct{ *pulumi.OutputState }

func (ScalingGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingGroupsResult)(nil)).Elem()
}

func (o ScalingGroupsResultOutput) ToScalingGroupsResultOutput() ScalingGroupsResultOutput {
	return o
}

func (o ScalingGroupsResultOutput) ToScalingGroupsResultOutputWithContext(ctx context.Context) ScalingGroupsResultOutput {
	return o
}

func (o ScalingGroupsResultOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ScalingGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ScalingGroupsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o ScalingGroupsResultOutput) ScalingGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.ScalingGroupId }).(pulumi.StringPtrOutput)
}

func (o ScalingGroupsResultOutput) ScalingGroupLists() ScalingGroupsScalingGroupListArrayOutput {
	return o.ApplyT(func(v ScalingGroupsResult) []ScalingGroupsScalingGroupList { return v.ScalingGroupLists }).(ScalingGroupsScalingGroupListArrayOutput)
}

func (o ScalingGroupsResultOutput) ScalingGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.ScalingGroupName }).(pulumi.StringPtrOutput)
}

func (o ScalingGroupsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v ScalingGroupsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(ScalingGroupsResultOutput{})
}
