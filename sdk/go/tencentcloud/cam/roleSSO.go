// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RoleSSO struct {
	pulumi.CustomResourceState

	// Client ids.
	ClientIds pulumi.StringArrayOutput `pulumi:"clientIds"`
	// The description of resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Sign the public key.
	IdentityKey pulumi.StringOutput `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl pulumi.StringOutput `pulumi:"identityUrl"`
	// The name of resource.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewRoleSSO registers a new resource with the given unique name, arguments, and options.
func NewRoleSSO(ctx *pulumi.Context,
	name string, args *RoleSSOArgs, opts ...pulumi.ResourceOption) (*RoleSSO, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientIds == nil {
		return nil, errors.New("invalid value for required argument 'ClientIds'")
	}
	if args.IdentityKey == nil {
		return nil, errors.New("invalid value for required argument 'IdentityKey'")
	}
	if args.IdentityUrl == nil {
		return nil, errors.New("invalid value for required argument 'IdentityUrl'")
	}
	var resource RoleSSO
	err := ctx.RegisterResource("tencentcloud:Cam/roleSSO:RoleSSO", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleSSO gets an existing RoleSSO resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleSSO(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleSSOState, opts ...pulumi.ResourceOption) (*RoleSSO, error) {
	var resource RoleSSO
	err := ctx.ReadResource("tencentcloud:Cam/roleSSO:RoleSSO", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleSSO resources.
type roleSSOState struct {
	// Client ids.
	ClientIds []string `pulumi:"clientIds"`
	// The description of resource.
	Description *string `pulumi:"description"`
	// Sign the public key.
	IdentityKey *string `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl *string `pulumi:"identityUrl"`
	// The name of resource.
	Name *string `pulumi:"name"`
}

type RoleSSOState struct {
	// Client ids.
	ClientIds pulumi.StringArrayInput
	// The description of resource.
	Description pulumi.StringPtrInput
	// Sign the public key.
	IdentityKey pulumi.StringPtrInput
	// Identity provider URL.
	IdentityUrl pulumi.StringPtrInput
	// The name of resource.
	Name pulumi.StringPtrInput
}

func (RoleSSOState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleSSOState)(nil)).Elem()
}

type roleSSOArgs struct {
	// Client ids.
	ClientIds []string `pulumi:"clientIds"`
	// The description of resource.
	Description *string `pulumi:"description"`
	// Sign the public key.
	IdentityKey string `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl string `pulumi:"identityUrl"`
	// The name of resource.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a RoleSSO resource.
type RoleSSOArgs struct {
	// Client ids.
	ClientIds pulumi.StringArrayInput
	// The description of resource.
	Description pulumi.StringPtrInput
	// Sign the public key.
	IdentityKey pulumi.StringInput
	// Identity provider URL.
	IdentityUrl pulumi.StringInput
	// The name of resource.
	Name pulumi.StringPtrInput
}

func (RoleSSOArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleSSOArgs)(nil)).Elem()
}

type RoleSSOInput interface {
	pulumi.Input

	ToRoleSSOOutput() RoleSSOOutput
	ToRoleSSOOutputWithContext(ctx context.Context) RoleSSOOutput
}

func (*RoleSSO) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleSSO)(nil)).Elem()
}

func (i *RoleSSO) ToRoleSSOOutput() RoleSSOOutput {
	return i.ToRoleSSOOutputWithContext(context.Background())
}

func (i *RoleSSO) ToRoleSSOOutputWithContext(ctx context.Context) RoleSSOOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSSOOutput)
}

// RoleSSOArrayInput is an input type that accepts RoleSSOArray and RoleSSOArrayOutput values.
// You can construct a concrete instance of `RoleSSOArrayInput` via:
//
//          RoleSSOArray{ RoleSSOArgs{...} }
type RoleSSOArrayInput interface {
	pulumi.Input

	ToRoleSSOArrayOutput() RoleSSOArrayOutput
	ToRoleSSOArrayOutputWithContext(context.Context) RoleSSOArrayOutput
}

type RoleSSOArray []RoleSSOInput

func (RoleSSOArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoleSSO)(nil)).Elem()
}

func (i RoleSSOArray) ToRoleSSOArrayOutput() RoleSSOArrayOutput {
	return i.ToRoleSSOArrayOutputWithContext(context.Background())
}

func (i RoleSSOArray) ToRoleSSOArrayOutputWithContext(ctx context.Context) RoleSSOArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSSOArrayOutput)
}

// RoleSSOMapInput is an input type that accepts RoleSSOMap and RoleSSOMapOutput values.
// You can construct a concrete instance of `RoleSSOMapInput` via:
//
//          RoleSSOMap{ "key": RoleSSOArgs{...} }
type RoleSSOMapInput interface {
	pulumi.Input

	ToRoleSSOMapOutput() RoleSSOMapOutput
	ToRoleSSOMapOutputWithContext(context.Context) RoleSSOMapOutput
}

type RoleSSOMap map[string]RoleSSOInput

func (RoleSSOMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoleSSO)(nil)).Elem()
}

func (i RoleSSOMap) ToRoleSSOMapOutput() RoleSSOMapOutput {
	return i.ToRoleSSOMapOutputWithContext(context.Background())
}

func (i RoleSSOMap) ToRoleSSOMapOutputWithContext(ctx context.Context) RoleSSOMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSSOMapOutput)
}

type RoleSSOOutput struct{ *pulumi.OutputState }

func (RoleSSOOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleSSO)(nil)).Elem()
}

func (o RoleSSOOutput) ToRoleSSOOutput() RoleSSOOutput {
	return o
}

func (o RoleSSOOutput) ToRoleSSOOutputWithContext(ctx context.Context) RoleSSOOutput {
	return o
}

// Client ids.
func (o RoleSSOOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleSSO) pulumi.StringArrayOutput { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// The description of resource.
func (o RoleSSOOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleSSO) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Sign the public key.
func (o RoleSSOOutput) IdentityKey() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSSO) pulumi.StringOutput { return v.IdentityKey }).(pulumi.StringOutput)
}

// Identity provider URL.
func (o RoleSSOOutput) IdentityUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSSO) pulumi.StringOutput { return v.IdentityUrl }).(pulumi.StringOutput)
}

// The name of resource.
func (o RoleSSOOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSSO) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type RoleSSOArrayOutput struct{ *pulumi.OutputState }

func (RoleSSOArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoleSSO)(nil)).Elem()
}

func (o RoleSSOArrayOutput) ToRoleSSOArrayOutput() RoleSSOArrayOutput {
	return o
}

func (o RoleSSOArrayOutput) ToRoleSSOArrayOutputWithContext(ctx context.Context) RoleSSOArrayOutput {
	return o
}

func (o RoleSSOArrayOutput) Index(i pulumi.IntInput) RoleSSOOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RoleSSO {
		return vs[0].([]*RoleSSO)[vs[1].(int)]
	}).(RoleSSOOutput)
}

type RoleSSOMapOutput struct{ *pulumi.OutputState }

func (RoleSSOMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoleSSO)(nil)).Elem()
}

func (o RoleSSOMapOutput) ToRoleSSOMapOutput() RoleSSOMapOutput {
	return o
}

func (o RoleSSOMapOutput) ToRoleSSOMapOutputWithContext(ctx context.Context) RoleSSOMapOutput {
	return o
}

func (o RoleSSOMapOutput) MapIndex(k pulumi.StringInput) RoleSSOOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RoleSSO {
		return vs[0].(map[string]*RoleSSO)[vs[1].(string)]
	}).(RoleSSOOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSSOInput)(nil)).Elem(), &RoleSSO{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSSOArrayInput)(nil)).Elem(), RoleSSOArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSSOMapInput)(nil)).Elem(), RoleSSOMap{})
	pulumi.RegisterOutputType(RoleSSOOutput{})
	pulumi.RegisterOutputType(RoleSSOArrayOutput{})
	pulumi.RegisterOutputType(RoleSSOMapOutput{})
}
