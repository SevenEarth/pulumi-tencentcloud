// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetGroupMembershipsMembershipList struct {
	// ID of CAM group to be queried.
	GroupId string `pulumi:"groupId"`
	// (**Deprecated**) It has been deprecated from version 1.59.5. Use `userNames` instead. ID set of the CAM group members.
	//
	// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
	UserIds []string `pulumi:"userIds"`
	// ID set of the CAM group members.
	UserNames []string `pulumi:"userNames"`
}

// GetGroupMembershipsMembershipListInput is an input type that accepts GetGroupMembershipsMembershipListArgs and GetGroupMembershipsMembershipListOutput values.
// You can construct a concrete instance of `GetGroupMembershipsMembershipListInput` via:
//
//	GetGroupMembershipsMembershipListArgs{...}
type GetGroupMembershipsMembershipListInput interface {
	pulumi.Input

	ToGetGroupMembershipsMembershipListOutput() GetGroupMembershipsMembershipListOutput
	ToGetGroupMembershipsMembershipListOutputWithContext(context.Context) GetGroupMembershipsMembershipListOutput
}

type GetGroupMembershipsMembershipListArgs struct {
	// ID of CAM group to be queried.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// (**Deprecated**) It has been deprecated from version 1.59.5. Use `userNames` instead. ID set of the CAM group members.
	//
	// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
	// ID set of the CAM group members.
	UserNames pulumi.StringArrayInput `pulumi:"userNames"`
}

func (GetGroupMembershipsMembershipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMembershipsMembershipList)(nil)).Elem()
}

func (i GetGroupMembershipsMembershipListArgs) ToGetGroupMembershipsMembershipListOutput() GetGroupMembershipsMembershipListOutput {
	return i.ToGetGroupMembershipsMembershipListOutputWithContext(context.Background())
}

func (i GetGroupMembershipsMembershipListArgs) ToGetGroupMembershipsMembershipListOutputWithContext(ctx context.Context) GetGroupMembershipsMembershipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMembershipsMembershipListOutput)
}

// GetGroupMembershipsMembershipListArrayInput is an input type that accepts GetGroupMembershipsMembershipListArray and GetGroupMembershipsMembershipListArrayOutput values.
// You can construct a concrete instance of `GetGroupMembershipsMembershipListArrayInput` via:
//
//	GetGroupMembershipsMembershipListArray{ GetGroupMembershipsMembershipListArgs{...} }
type GetGroupMembershipsMembershipListArrayInput interface {
	pulumi.Input

	ToGetGroupMembershipsMembershipListArrayOutput() GetGroupMembershipsMembershipListArrayOutput
	ToGetGroupMembershipsMembershipListArrayOutputWithContext(context.Context) GetGroupMembershipsMembershipListArrayOutput
}

type GetGroupMembershipsMembershipListArray []GetGroupMembershipsMembershipListInput

func (GetGroupMembershipsMembershipListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMembershipsMembershipList)(nil)).Elem()
}

func (i GetGroupMembershipsMembershipListArray) ToGetGroupMembershipsMembershipListArrayOutput() GetGroupMembershipsMembershipListArrayOutput {
	return i.ToGetGroupMembershipsMembershipListArrayOutputWithContext(context.Background())
}

func (i GetGroupMembershipsMembershipListArray) ToGetGroupMembershipsMembershipListArrayOutputWithContext(ctx context.Context) GetGroupMembershipsMembershipListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMembershipsMembershipListArrayOutput)
}

type GetGroupMembershipsMembershipListOutput struct{ *pulumi.OutputState }

func (GetGroupMembershipsMembershipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMembershipsMembershipList)(nil)).Elem()
}

func (o GetGroupMembershipsMembershipListOutput) ToGetGroupMembershipsMembershipListOutput() GetGroupMembershipsMembershipListOutput {
	return o
}

func (o GetGroupMembershipsMembershipListOutput) ToGetGroupMembershipsMembershipListOutputWithContext(ctx context.Context) GetGroupMembershipsMembershipListOutput {
	return o
}

// ID of CAM group to be queried.
func (o GetGroupMembershipsMembershipListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipsMembershipList) string { return v.GroupId }).(pulumi.StringOutput)
}

// (**Deprecated**) It has been deprecated from version 1.59.5. Use `userNames` instead. ID set of the CAM group members.
//
// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
func (o GetGroupMembershipsMembershipListOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupMembershipsMembershipList) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

// ID set of the CAM group members.
func (o GetGroupMembershipsMembershipListOutput) UserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupMembershipsMembershipList) []string { return v.UserNames }).(pulumi.StringArrayOutput)
}

type GetGroupMembershipsMembershipListArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMembershipsMembershipListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMembershipsMembershipList)(nil)).Elem()
}

func (o GetGroupMembershipsMembershipListArrayOutput) ToGetGroupMembershipsMembershipListArrayOutput() GetGroupMembershipsMembershipListArrayOutput {
	return o
}

func (o GetGroupMembershipsMembershipListArrayOutput) ToGetGroupMembershipsMembershipListArrayOutputWithContext(ctx context.Context) GetGroupMembershipsMembershipListArrayOutput {
	return o
}

func (o GetGroupMembershipsMembershipListArrayOutput) Index(i pulumi.IntInput) GetGroupMembershipsMembershipListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMembershipsMembershipList {
		return vs[0].([]GetGroupMembershipsMembershipList)[vs[1].(int)]
	}).(GetGroupMembershipsMembershipListOutput)
}

type GetGroupPolicyAttachmentsGroupPolicyAttachmentList struct {
	// Mode of creation of the CAM user policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode int `pulumi:"createMode"`
	// Create time of the CAM group policy attachment.
	CreateTime string `pulumi:"createTime"`
	// ID of the attached CAM group to be queried.
	GroupId string `pulumi:"groupId"`
	// ID of CAM policy to be queried.
	PolicyId string `pulumi:"policyId"`
	// Name of the policy.
	PolicyName string `pulumi:"policyName"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType string `pulumi:"policyType"`
}

// GetGroupPolicyAttachmentsGroupPolicyAttachmentListInput is an input type that accepts GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs and GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput values.
// You can construct a concrete instance of `GetGroupPolicyAttachmentsGroupPolicyAttachmentListInput` via:
//
//	GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs{...}
type GetGroupPolicyAttachmentsGroupPolicyAttachmentListInput interface {
	pulumi.Input

	ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput
	ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput
}

type GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs struct {
	// Mode of creation of the CAM user policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode pulumi.IntInput `pulumi:"createMode"`
	// Create time of the CAM group policy attachment.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ID of the attached CAM group to be queried.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// ID of CAM policy to be queried.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (i GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return i.ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(context.Background())
}

func (i GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(ctx context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput)
}

// GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput is an input type that accepts GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray and GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput` via:
//
//	GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray{ GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs{...} }
type GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput
	ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput
}

type GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray []GetGroupPolicyAttachmentsGroupPolicyAttachmentListInput

func (GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (i GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return i.ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput)
}

type GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return o
}

func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(ctx context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return o
}

// Mode of creation of the CAM user policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

// Create time of the CAM group policy attachment.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ID of the attached CAM group to be queried.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.GroupId }).(pulumi.StringOutput)
}

// ID of CAM policy to be queried.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

// Name of the policy.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

type GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return o
}

func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ToGetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return o
}

func (o GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupPolicyAttachmentsGroupPolicyAttachmentList {
		return vs[0].([]GetGroupPolicyAttachmentsGroupPolicyAttachmentList)[vs[1].(int)]
	}).(GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput)
}

type GetGroupsGroupList struct {
	// Create time of the CAM group.
	CreateTime string `pulumi:"createTime"`
	// ID of CAM group to be queried.
	GroupId string `pulumi:"groupId"`
	// Name of the CAM group to be queried.
	Name string `pulumi:"name"`
	// Description of the cam group to be queried.
	Remark string `pulumi:"remark"`
}

// GetGroupsGroupListInput is an input type that accepts GetGroupsGroupListArgs and GetGroupsGroupListOutput values.
// You can construct a concrete instance of `GetGroupsGroupListInput` via:
//
//	GetGroupsGroupListArgs{...}
type GetGroupsGroupListInput interface {
	pulumi.Input

	ToGetGroupsGroupListOutput() GetGroupsGroupListOutput
	ToGetGroupsGroupListOutputWithContext(context.Context) GetGroupsGroupListOutput
}

type GetGroupsGroupListArgs struct {
	// Create time of the CAM group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ID of CAM group to be queried.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Name of the CAM group to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// Description of the cam group to be queried.
	Remark pulumi.StringInput `pulumi:"remark"`
}

func (GetGroupsGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroupList)(nil)).Elem()
}

func (i GetGroupsGroupListArgs) ToGetGroupsGroupListOutput() GetGroupsGroupListOutput {
	return i.ToGetGroupsGroupListOutputWithContext(context.Background())
}

func (i GetGroupsGroupListArgs) ToGetGroupsGroupListOutputWithContext(ctx context.Context) GetGroupsGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupListOutput)
}

// GetGroupsGroupListArrayInput is an input type that accepts GetGroupsGroupListArray and GetGroupsGroupListArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupListArrayInput` via:
//
//	GetGroupsGroupListArray{ GetGroupsGroupListArgs{...} }
type GetGroupsGroupListArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupListArrayOutput() GetGroupsGroupListArrayOutput
	ToGetGroupsGroupListArrayOutputWithContext(context.Context) GetGroupsGroupListArrayOutput
}

type GetGroupsGroupListArray []GetGroupsGroupListInput

func (GetGroupsGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroupList)(nil)).Elem()
}

func (i GetGroupsGroupListArray) ToGetGroupsGroupListArrayOutput() GetGroupsGroupListArrayOutput {
	return i.ToGetGroupsGroupListArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupListArray) ToGetGroupsGroupListArrayOutputWithContext(ctx context.Context) GetGroupsGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupListArrayOutput)
}

type GetGroupsGroupListOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroupList)(nil)).Elem()
}

func (o GetGroupsGroupListOutput) ToGetGroupsGroupListOutput() GetGroupsGroupListOutput {
	return o
}

func (o GetGroupsGroupListOutput) ToGetGroupsGroupListOutputWithContext(ctx context.Context) GetGroupsGroupListOutput {
	return o
}

// Create time of the CAM group.
func (o GetGroupsGroupListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroupList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ID of CAM group to be queried.
func (o GetGroupsGroupListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroupList) string { return v.GroupId }).(pulumi.StringOutput)
}

// Name of the CAM group to be queried.
func (o GetGroupsGroupListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroupList) string { return v.Name }).(pulumi.StringOutput)
}

// Description of the cam group to be queried.
func (o GetGroupsGroupListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroupList) string { return v.Remark }).(pulumi.StringOutput)
}

type GetGroupsGroupListArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroupList)(nil)).Elem()
}

func (o GetGroupsGroupListArrayOutput) ToGetGroupsGroupListArrayOutput() GetGroupsGroupListArrayOutput {
	return o
}

func (o GetGroupsGroupListArrayOutput) ToGetGroupsGroupListArrayOutputWithContext(ctx context.Context) GetGroupsGroupListArrayOutput {
	return o
}

func (o GetGroupsGroupListArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroupList {
		return vs[0].([]GetGroupsGroupList)[vs[1].(int)]
	}).(GetGroupsGroupListOutput)
}

type GetPoliciesPolicyList struct {
	// Number of attached users.
	Attachments int `pulumi:"attachments"`
	// Mode of creation of policy strategy. Valid values: `1`, `2`. `1` means policy was created with console, and `2` means it was created by strategies.
	CreateMode int `pulumi:"createMode"`
	// Create time of the CAM policy.
	CreateTime string `pulumi:"createTime"`
	// The description of the CAM policy.
	Description string `pulumi:"description"`
	// Name of the CAM policy to be queried.
	Name string `pulumi:"name"`
	// ID of CAM policy to be queried.
	PolicyId string `pulumi:"policyId"`
	// Name of attached products.
	ServiceType string `pulumi:"serviceType"`
	// Type of the policy strategy. Valid values: `1`, `2`. `1` means customer strategy and `2` means preset strategy.
	Type int `pulumi:"type"`
}

// GetPoliciesPolicyListInput is an input type that accepts GetPoliciesPolicyListArgs and GetPoliciesPolicyListOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyListInput` via:
//
//	GetPoliciesPolicyListArgs{...}
type GetPoliciesPolicyListInput interface {
	pulumi.Input

	ToGetPoliciesPolicyListOutput() GetPoliciesPolicyListOutput
	ToGetPoliciesPolicyListOutputWithContext(context.Context) GetPoliciesPolicyListOutput
}

type GetPoliciesPolicyListArgs struct {
	// Number of attached users.
	Attachments pulumi.IntInput `pulumi:"attachments"`
	// Mode of creation of policy strategy. Valid values: `1`, `2`. `1` means policy was created with console, and `2` means it was created by strategies.
	CreateMode pulumi.IntInput `pulumi:"createMode"`
	// Create time of the CAM policy.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the CAM policy.
	Description pulumi.StringInput `pulumi:"description"`
	// Name of the CAM policy to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// ID of CAM policy to be queried.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Name of attached products.
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// Type of the policy strategy. Valid values: `1`, `2`. `1` means customer strategy and `2` means preset strategy.
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetPoliciesPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyList)(nil)).Elem()
}

func (i GetPoliciesPolicyListArgs) ToGetPoliciesPolicyListOutput() GetPoliciesPolicyListOutput {
	return i.ToGetPoliciesPolicyListOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyListArgs) ToGetPoliciesPolicyListOutputWithContext(ctx context.Context) GetPoliciesPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyListOutput)
}

// GetPoliciesPolicyListArrayInput is an input type that accepts GetPoliciesPolicyListArray and GetPoliciesPolicyListArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyListArrayInput` via:
//
//	GetPoliciesPolicyListArray{ GetPoliciesPolicyListArgs{...} }
type GetPoliciesPolicyListArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyListArrayOutput() GetPoliciesPolicyListArrayOutput
	ToGetPoliciesPolicyListArrayOutputWithContext(context.Context) GetPoliciesPolicyListArrayOutput
}

type GetPoliciesPolicyListArray []GetPoliciesPolicyListInput

func (GetPoliciesPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyList)(nil)).Elem()
}

func (i GetPoliciesPolicyListArray) ToGetPoliciesPolicyListArrayOutput() GetPoliciesPolicyListArrayOutput {
	return i.ToGetPoliciesPolicyListArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyListArray) ToGetPoliciesPolicyListArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyListArrayOutput)
}

type GetPoliciesPolicyListOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyList)(nil)).Elem()
}

func (o GetPoliciesPolicyListOutput) ToGetPoliciesPolicyListOutput() GetPoliciesPolicyListOutput {
	return o
}

func (o GetPoliciesPolicyListOutput) ToGetPoliciesPolicyListOutputWithContext(ctx context.Context) GetPoliciesPolicyListOutput {
	return o
}

// Number of attached users.
func (o GetPoliciesPolicyListOutput) Attachments() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) int { return v.Attachments }).(pulumi.IntOutput)
}

// Mode of creation of policy strategy. Valid values: `1`, `2`. `1` means policy was created with console, and `2` means it was created by strategies.
func (o GetPoliciesPolicyListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) int { return v.CreateMode }).(pulumi.IntOutput)
}

// Create time of the CAM policy.
func (o GetPoliciesPolicyListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the CAM policy.
func (o GetPoliciesPolicyListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) string { return v.Description }).(pulumi.StringOutput)
}

// Name of the CAM policy to be queried.
func (o GetPoliciesPolicyListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) string { return v.Name }).(pulumi.StringOutput)
}

// ID of CAM policy to be queried.
func (o GetPoliciesPolicyListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) string { return v.PolicyId }).(pulumi.StringOutput)
}

// Name of attached products.
func (o GetPoliciesPolicyListOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) string { return v.ServiceType }).(pulumi.StringOutput)
}

// Type of the policy strategy. Valid values: `1`, `2`. `1` means customer strategy and `2` means preset strategy.
func (o GetPoliciesPolicyListOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicyList) int { return v.Type }).(pulumi.IntOutput)
}

type GetPoliciesPolicyListArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyList)(nil)).Elem()
}

func (o GetPoliciesPolicyListArrayOutput) ToGetPoliciesPolicyListArrayOutput() GetPoliciesPolicyListArrayOutput {
	return o
}

func (o GetPoliciesPolicyListArrayOutput) ToGetPoliciesPolicyListArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyListArrayOutput {
	return o
}

func (o GetPoliciesPolicyListArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicyList {
		return vs[0].([]GetPoliciesPolicyList)[vs[1].(int)]
	}).(GetPoliciesPolicyListOutput)
}

type GetRolePolicyAttachmentsRolePolicyAttachmentList struct {
	// Mode of Creation of the CAM user policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode int `pulumi:"createMode"`
	// Create time of the CAM role policy attachment.
	CreateTime string `pulumi:"createTime"`
	// ID of CAM policy to be queried.
	PolicyId string `pulumi:"policyId"`
	// Name of the policy.
	PolicyName string `pulumi:"policyName"`
	// Type of the policy strategy. Valid values are 'User', 'QCS'. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType string `pulumi:"policyType"`
	// ID of the attached CAM role to be queried.
	RoleId string `pulumi:"roleId"`
}

// GetRolePolicyAttachmentsRolePolicyAttachmentListInput is an input type that accepts GetRolePolicyAttachmentsRolePolicyAttachmentListArgs and GetRolePolicyAttachmentsRolePolicyAttachmentListOutput values.
// You can construct a concrete instance of `GetRolePolicyAttachmentsRolePolicyAttachmentListInput` via:
//
//	GetRolePolicyAttachmentsRolePolicyAttachmentListArgs{...}
type GetRolePolicyAttachmentsRolePolicyAttachmentListInput interface {
	pulumi.Input

	ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListOutput
	ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListOutput
}

type GetRolePolicyAttachmentsRolePolicyAttachmentListArgs struct {
	// Mode of Creation of the CAM user policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode pulumi.IntInput `pulumi:"createMode"`
	// Create time of the CAM role policy attachment.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ID of CAM policy to be queried.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// Type of the policy strategy. Valid values are 'User', 'QCS'. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// ID of the attached CAM role to be queried.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetRolePolicyAttachmentsRolePolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (i GetRolePolicyAttachmentsRolePolicyAttachmentListArgs) ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return i.ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(context.Background())
}

func (i GetRolePolicyAttachmentsRolePolicyAttachmentListArgs) ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(ctx context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolePolicyAttachmentsRolePolicyAttachmentListOutput)
}

// GetRolePolicyAttachmentsRolePolicyAttachmentListArrayInput is an input type that accepts GetRolePolicyAttachmentsRolePolicyAttachmentListArray and GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `GetRolePolicyAttachmentsRolePolicyAttachmentListArrayInput` via:
//
//	GetRolePolicyAttachmentsRolePolicyAttachmentListArray{ GetRolePolicyAttachmentsRolePolicyAttachmentListArgs{...} }
type GetRolePolicyAttachmentsRolePolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput
	ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput
}

type GetRolePolicyAttachmentsRolePolicyAttachmentListArray []GetRolePolicyAttachmentsRolePolicyAttachmentListInput

func (GetRolePolicyAttachmentsRolePolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (i GetRolePolicyAttachmentsRolePolicyAttachmentListArray) ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return i.ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i GetRolePolicyAttachmentsRolePolicyAttachmentListArray) ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput)
}

type GetRolePolicyAttachmentsRolePolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return o
}

func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) ToGetRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(ctx context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return o
}

// Mode of Creation of the CAM user policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

// Create time of the CAM role policy attachment.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ID of CAM policy to be queried.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

// Name of the policy.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

// Type of the policy strategy. Valid values are 'User', 'QCS'. 'User' means customer strategy and 'QCS' means preset strategy.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

// ID of the attached CAM role to be queried.
func (o GetRolePolicyAttachmentsRolePolicyAttachmentListOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePolicyAttachmentsRolePolicyAttachmentList) string { return v.RoleId }).(pulumi.StringOutput)
}

type GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (o GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return o
}

func (o GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ToGetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return o
}

func (o GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) GetRolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolePolicyAttachmentsRolePolicyAttachmentList {
		return vs[0].([]GetRolePolicyAttachmentsRolePolicyAttachmentList)[vs[1].(int)]
	}).(GetRolePolicyAttachmentsRolePolicyAttachmentListOutput)
}

type GetRolesRoleList struct {
	// Indicate whether the CAM role can be login or not.
	ConsoleLogin bool `pulumi:"consoleLogin"`
	// The create time of the CAM role.
	CreateTime string `pulumi:"createTime"`
	// The description of the CAM role to be queried.
	Description string `pulumi:"description"`
	// Policy document of CAM role.
	Document string `pulumi:"document"`
	// Name of the CAM policy to be queried.
	Name string `pulumi:"name"`
	// ID of the CAM role to be queried.
	RoleId string `pulumi:"roleId"`
	// The last update time of the CAM role.
	UpdateTime string `pulumi:"updateTime"`
}

// GetRolesRoleListInput is an input type that accepts GetRolesRoleListArgs and GetRolesRoleListOutput values.
// You can construct a concrete instance of `GetRolesRoleListInput` via:
//
//	GetRolesRoleListArgs{...}
type GetRolesRoleListInput interface {
	pulumi.Input

	ToGetRolesRoleListOutput() GetRolesRoleListOutput
	ToGetRolesRoleListOutputWithContext(context.Context) GetRolesRoleListOutput
}

type GetRolesRoleListArgs struct {
	// Indicate whether the CAM role can be login or not.
	ConsoleLogin pulumi.BoolInput `pulumi:"consoleLogin"`
	// The create time of the CAM role.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the CAM role to be queried.
	Description pulumi.StringInput `pulumi:"description"`
	// Policy document of CAM role.
	Document pulumi.StringInput `pulumi:"document"`
	// Name of the CAM policy to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the CAM role to be queried.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// The last update time of the CAM role.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetRolesRoleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRoleList)(nil)).Elem()
}

func (i GetRolesRoleListArgs) ToGetRolesRoleListOutput() GetRolesRoleListOutput {
	return i.ToGetRolesRoleListOutputWithContext(context.Background())
}

func (i GetRolesRoleListArgs) ToGetRolesRoleListOutputWithContext(ctx context.Context) GetRolesRoleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleListOutput)
}

// GetRolesRoleListArrayInput is an input type that accepts GetRolesRoleListArray and GetRolesRoleListArrayOutput values.
// You can construct a concrete instance of `GetRolesRoleListArrayInput` via:
//
//	GetRolesRoleListArray{ GetRolesRoleListArgs{...} }
type GetRolesRoleListArrayInput interface {
	pulumi.Input

	ToGetRolesRoleListArrayOutput() GetRolesRoleListArrayOutput
	ToGetRolesRoleListArrayOutputWithContext(context.Context) GetRolesRoleListArrayOutput
}

type GetRolesRoleListArray []GetRolesRoleListInput

func (GetRolesRoleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRoleList)(nil)).Elem()
}

func (i GetRolesRoleListArray) ToGetRolesRoleListArrayOutput() GetRolesRoleListArrayOutput {
	return i.ToGetRolesRoleListArrayOutputWithContext(context.Background())
}

func (i GetRolesRoleListArray) ToGetRolesRoleListArrayOutputWithContext(ctx context.Context) GetRolesRoleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleListArrayOutput)
}

type GetRolesRoleListOutput struct{ *pulumi.OutputState }

func (GetRolesRoleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRoleList)(nil)).Elem()
}

func (o GetRolesRoleListOutput) ToGetRolesRoleListOutput() GetRolesRoleListOutput {
	return o
}

func (o GetRolesRoleListOutput) ToGetRolesRoleListOutputWithContext(ctx context.Context) GetRolesRoleListOutput {
	return o
}

// Indicate whether the CAM role can be login or not.
func (o GetRolesRoleListOutput) ConsoleLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRolesRoleList) bool { return v.ConsoleLogin }).(pulumi.BoolOutput)
}

// The create time of the CAM role.
func (o GetRolesRoleListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the CAM role to be queried.
func (o GetRolesRoleListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.Description }).(pulumi.StringOutput)
}

// Policy document of CAM role.
func (o GetRolesRoleListOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.Document }).(pulumi.StringOutput)
}

// Name of the CAM policy to be queried.
func (o GetRolesRoleListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the CAM role to be queried.
func (o GetRolesRoleListOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.RoleId }).(pulumi.StringOutput)
}

// The last update time of the CAM role.
func (o GetRolesRoleListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRoleList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetRolesRoleListArrayOutput struct{ *pulumi.OutputState }

func (GetRolesRoleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRoleList)(nil)).Elem()
}

func (o GetRolesRoleListArrayOutput) ToGetRolesRoleListArrayOutput() GetRolesRoleListArrayOutput {
	return o
}

func (o GetRolesRoleListArrayOutput) ToGetRolesRoleListArrayOutputWithContext(ctx context.Context) GetRolesRoleListArrayOutput {
	return o
}

func (o GetRolesRoleListArrayOutput) Index(i pulumi.IntInput) GetRolesRoleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesRoleList {
		return vs[0].([]GetRolesRoleList)[vs[1].(int)]
	}).(GetRolesRoleListOutput)
}

type GetSamlProvidersProviderList struct {
	// Create time of the CAM SAML provider.
	CreateTime string `pulumi:"createTime"`
	// The description of the CAM SAML provider.
	Description string `pulumi:"description"`
	// The last modify time of the CAM SAML provider.
	ModifyTime string `pulumi:"modifyTime"`
	// Name of the CAM SAML provider to be queried.
	Name string `pulumi:"name"`
}

// GetSamlProvidersProviderListInput is an input type that accepts GetSamlProvidersProviderListArgs and GetSamlProvidersProviderListOutput values.
// You can construct a concrete instance of `GetSamlProvidersProviderListInput` via:
//
//	GetSamlProvidersProviderListArgs{...}
type GetSamlProvidersProviderListInput interface {
	pulumi.Input

	ToGetSamlProvidersProviderListOutput() GetSamlProvidersProviderListOutput
	ToGetSamlProvidersProviderListOutputWithContext(context.Context) GetSamlProvidersProviderListOutput
}

type GetSamlProvidersProviderListArgs struct {
	// Create time of the CAM SAML provider.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the CAM SAML provider.
	Description pulumi.StringInput `pulumi:"description"`
	// The last modify time of the CAM SAML provider.
	ModifyTime pulumi.StringInput `pulumi:"modifyTime"`
	// Name of the CAM SAML provider to be queried.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSamlProvidersProviderListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlProvidersProviderList)(nil)).Elem()
}

func (i GetSamlProvidersProviderListArgs) ToGetSamlProvidersProviderListOutput() GetSamlProvidersProviderListOutput {
	return i.ToGetSamlProvidersProviderListOutputWithContext(context.Background())
}

func (i GetSamlProvidersProviderListArgs) ToGetSamlProvidersProviderListOutputWithContext(ctx context.Context) GetSamlProvidersProviderListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlProvidersProviderListOutput)
}

// GetSamlProvidersProviderListArrayInput is an input type that accepts GetSamlProvidersProviderListArray and GetSamlProvidersProviderListArrayOutput values.
// You can construct a concrete instance of `GetSamlProvidersProviderListArrayInput` via:
//
//	GetSamlProvidersProviderListArray{ GetSamlProvidersProviderListArgs{...} }
type GetSamlProvidersProviderListArrayInput interface {
	pulumi.Input

	ToGetSamlProvidersProviderListArrayOutput() GetSamlProvidersProviderListArrayOutput
	ToGetSamlProvidersProviderListArrayOutputWithContext(context.Context) GetSamlProvidersProviderListArrayOutput
}

type GetSamlProvidersProviderListArray []GetSamlProvidersProviderListInput

func (GetSamlProvidersProviderListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlProvidersProviderList)(nil)).Elem()
}

func (i GetSamlProvidersProviderListArray) ToGetSamlProvidersProviderListArrayOutput() GetSamlProvidersProviderListArrayOutput {
	return i.ToGetSamlProvidersProviderListArrayOutputWithContext(context.Background())
}

func (i GetSamlProvidersProviderListArray) ToGetSamlProvidersProviderListArrayOutputWithContext(ctx context.Context) GetSamlProvidersProviderListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlProvidersProviderListArrayOutput)
}

type GetSamlProvidersProviderListOutput struct{ *pulumi.OutputState }

func (GetSamlProvidersProviderListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlProvidersProviderList)(nil)).Elem()
}

func (o GetSamlProvidersProviderListOutput) ToGetSamlProvidersProviderListOutput() GetSamlProvidersProviderListOutput {
	return o
}

func (o GetSamlProvidersProviderListOutput) ToGetSamlProvidersProviderListOutputWithContext(ctx context.Context) GetSamlProvidersProviderListOutput {
	return o
}

// Create time of the CAM SAML provider.
func (o GetSamlProvidersProviderListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProviderList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the CAM SAML provider.
func (o GetSamlProvidersProviderListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProviderList) string { return v.Description }).(pulumi.StringOutput)
}

// The last modify time of the CAM SAML provider.
func (o GetSamlProvidersProviderListOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProviderList) string { return v.ModifyTime }).(pulumi.StringOutput)
}

// Name of the CAM SAML provider to be queried.
func (o GetSamlProvidersProviderListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProviderList) string { return v.Name }).(pulumi.StringOutput)
}

type GetSamlProvidersProviderListArrayOutput struct{ *pulumi.OutputState }

func (GetSamlProvidersProviderListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlProvidersProviderList)(nil)).Elem()
}

func (o GetSamlProvidersProviderListArrayOutput) ToGetSamlProvidersProviderListArrayOutput() GetSamlProvidersProviderListArrayOutput {
	return o
}

func (o GetSamlProvidersProviderListArrayOutput) ToGetSamlProvidersProviderListArrayOutputWithContext(ctx context.Context) GetSamlProvidersProviderListArrayOutput {
	return o
}

func (o GetSamlProvidersProviderListArrayOutput) Index(i pulumi.IntInput) GetSamlProvidersProviderListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlProvidersProviderList {
		return vs[0].([]GetSamlProvidersProviderList)[vs[1].(int)]
	}).(GetSamlProvidersProviderListOutput)
}

type GetUserPolicyAttachmentsUserPolicyAttachmentList struct {
	// Mode of Creation of the CAM user policy attachment. `1` means the CAM policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode int `pulumi:"createMode"`
	// The create time of the CAM user policy attachment.
	CreateTime string `pulumi:"createTime"`
	// ID of CAM policy to be queried.
	PolicyId string `pulumi:"policyId"`
	// The name of the policy.
	PolicyName string `pulumi:"policyName"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType string `pulumi:"policyType"`
	// It has been deprecated from version 1.59.6. Use `userName` instead. ID of the attached CAM user to be queried.
	//
	// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
	UserId string `pulumi:"userId"`
	// Name of the attached CAM user as unique key to be queried.
	UserName string `pulumi:"userName"`
}

// GetUserPolicyAttachmentsUserPolicyAttachmentListInput is an input type that accepts GetUserPolicyAttachmentsUserPolicyAttachmentListArgs and GetUserPolicyAttachmentsUserPolicyAttachmentListOutput values.
// You can construct a concrete instance of `GetUserPolicyAttachmentsUserPolicyAttachmentListInput` via:
//
//	GetUserPolicyAttachmentsUserPolicyAttachmentListArgs{...}
type GetUserPolicyAttachmentsUserPolicyAttachmentListInput interface {
	pulumi.Input

	ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListOutput
	ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListOutput
}

type GetUserPolicyAttachmentsUserPolicyAttachmentListArgs struct {
	// Mode of Creation of the CAM user policy attachment. `1` means the CAM policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode pulumi.IntInput `pulumi:"createMode"`
	// The create time of the CAM user policy attachment.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ID of CAM policy to be queried.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// It has been deprecated from version 1.59.6. Use `userName` instead. ID of the attached CAM user to be queried.
	//
	// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
	UserId pulumi.StringInput `pulumi:"userId"`
	// Name of the attached CAM user as unique key to be queried.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUserPolicyAttachmentsUserPolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (i GetUserPolicyAttachmentsUserPolicyAttachmentListArgs) ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return i.ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(context.Background())
}

func (i GetUserPolicyAttachmentsUserPolicyAttachmentListArgs) ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(ctx context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPolicyAttachmentsUserPolicyAttachmentListOutput)
}

// GetUserPolicyAttachmentsUserPolicyAttachmentListArrayInput is an input type that accepts GetUserPolicyAttachmentsUserPolicyAttachmentListArray and GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `GetUserPolicyAttachmentsUserPolicyAttachmentListArrayInput` via:
//
//	GetUserPolicyAttachmentsUserPolicyAttachmentListArray{ GetUserPolicyAttachmentsUserPolicyAttachmentListArgs{...} }
type GetUserPolicyAttachmentsUserPolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput
	ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput
}

type GetUserPolicyAttachmentsUserPolicyAttachmentListArray []GetUserPolicyAttachmentsUserPolicyAttachmentListInput

func (GetUserPolicyAttachmentsUserPolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (i GetUserPolicyAttachmentsUserPolicyAttachmentListArray) ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return i.ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i GetUserPolicyAttachmentsUserPolicyAttachmentListArray) ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput)
}

type GetUserPolicyAttachmentsUserPolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return o
}

func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) ToGetUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(ctx context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return o
}

// Mode of Creation of the CAM user policy attachment. `1` means the CAM policy attachment is created by production, and the others indicate syntax strategy ways.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

// The create time of the CAM user policy attachment.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ID of CAM policy to be queried.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

// It has been deprecated from version 1.59.6. Use `userName` instead. ID of the attached CAM user to be queried.
//
// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.UserId }).(pulumi.StringOutput)
}

// Name of the attached CAM user as unique key to be queried.
func (o GetUserPolicyAttachmentsUserPolicyAttachmentListOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPolicyAttachmentsUserPolicyAttachmentList) string { return v.UserName }).(pulumi.StringOutput)
}

type GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (o GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return o
}

func (o GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ToGetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return o
}

func (o GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) GetUserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserPolicyAttachmentsUserPolicyAttachmentList {
		return vs[0].([]GetUserPolicyAttachmentsUserPolicyAttachmentList)[vs[1].(int)]
	}).(GetUserPolicyAttachmentsUserPolicyAttachmentListOutput)
}

type GetUsersUserList struct {
	// Indicate whether the user can login in.
	ConsoleLogin *bool `pulumi:"consoleLogin"`
	// Country code of the CAM user to be queried.
	CountryCode string `pulumi:"countryCode"`
	// Email of the CAM user to be queried.
	Email string `pulumi:"email"`
	// Name of CAM user to be queried.
	Name string `pulumi:"name"`
	// Phone num of the CAM user to be queried.
	PhoneNum string `pulumi:"phoneNum"`
	// Remark of the CAM user to be queried.
	Remark string `pulumi:"remark"`
	// Uid of the CAM user to be queried.
	Uid int `pulumi:"uid"`
	// Uin of the CAM user to be queried.
	Uin int `pulumi:"uin"`
	// ID of CAM user. Its value equals to `name` argument.
	UserId string `pulumi:"userId"`
}

// GetUsersUserListInput is an input type that accepts GetUsersUserListArgs and GetUsersUserListOutput values.
// You can construct a concrete instance of `GetUsersUserListInput` via:
//
//	GetUsersUserListArgs{...}
type GetUsersUserListInput interface {
	pulumi.Input

	ToGetUsersUserListOutput() GetUsersUserListOutput
	ToGetUsersUserListOutputWithContext(context.Context) GetUsersUserListOutput
}

type GetUsersUserListArgs struct {
	// Indicate whether the user can login in.
	ConsoleLogin pulumi.BoolPtrInput `pulumi:"consoleLogin"`
	// Country code of the CAM user to be queried.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// Email of the CAM user to be queried.
	Email pulumi.StringInput `pulumi:"email"`
	// Name of CAM user to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// Phone num of the CAM user to be queried.
	PhoneNum pulumi.StringInput `pulumi:"phoneNum"`
	// Remark of the CAM user to be queried.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Uid of the CAM user to be queried.
	Uid pulumi.IntInput `pulumi:"uid"`
	// Uin of the CAM user to be queried.
	Uin pulumi.IntInput `pulumi:"uin"`
	// ID of CAM user. Its value equals to `name` argument.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUsersUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return i.ToGetUsersUserListOutputWithContext(context.Background())
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListOutput)
}

// GetUsersUserListArrayInput is an input type that accepts GetUsersUserListArray and GetUsersUserListArrayOutput values.
// You can construct a concrete instance of `GetUsersUserListArrayInput` via:
//
//	GetUsersUserListArray{ GetUsersUserListArgs{...} }
type GetUsersUserListArrayInput interface {
	pulumi.Input

	ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput
	ToGetUsersUserListArrayOutputWithContext(context.Context) GetUsersUserListArrayOutput
}

type GetUsersUserListArray []GetUsersUserListInput

func (GetUsersUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return i.ToGetUsersUserListArrayOutputWithContext(context.Background())
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListArrayOutput)
}

type GetUsersUserListOutput struct{ *pulumi.OutputState }

func (GetUsersUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return o
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return o
}

// Indicate whether the user can login in.
func (o GetUsersUserListOutput) ConsoleLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersUserList) *bool { return v.ConsoleLogin }).(pulumi.BoolPtrOutput)
}

// Country code of the CAM user to be queried.
func (o GetUsersUserListOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.CountryCode }).(pulumi.StringOutput)
}

// Email of the CAM user to be queried.
func (o GetUsersUserListOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.Email }).(pulumi.StringOutput)
}

// Name of CAM user to be queried.
func (o GetUsersUserListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.Name }).(pulumi.StringOutput)
}

// Phone num of the CAM user to be queried.
func (o GetUsersUserListOutput) PhoneNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.PhoneNum }).(pulumi.StringOutput)
}

// Remark of the CAM user to be queried.
func (o GetUsersUserListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.Remark }).(pulumi.StringOutput)
}

// Uid of the CAM user to be queried.
func (o GetUsersUserListOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserList) int { return v.Uid }).(pulumi.IntOutput)
}

// Uin of the CAM user to be queried.
func (o GetUsersUserListOutput) Uin() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserList) int { return v.Uin }).(pulumi.IntOutput)
}

// ID of CAM user. Its value equals to `name` argument.
func (o GetUsersUserListOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.UserId }).(pulumi.StringOutput)
}

type GetUsersUserListArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) Index(i pulumi.IntInput) GetUsersUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserList {
		return vs[0].([]GetUsersUserList)[vs[1].(int)]
	}).(GetUsersUserListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMembershipsMembershipListInput)(nil)).Elem(), GetGroupMembershipsMembershipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMembershipsMembershipListArrayInput)(nil)).Elem(), GetGroupMembershipsMembershipListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupPolicyAttachmentsGroupPolicyAttachmentListInput)(nil)).Elem(), GetGroupPolicyAttachmentsGroupPolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput)(nil)).Elem(), GetGroupPolicyAttachmentsGroupPolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupListInput)(nil)).Elem(), GetGroupsGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupListArrayInput)(nil)).Elem(), GetGroupsGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyListInput)(nil)).Elem(), GetPoliciesPolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyListArrayInput)(nil)).Elem(), GetPoliciesPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolePolicyAttachmentsRolePolicyAttachmentListInput)(nil)).Elem(), GetRolePolicyAttachmentsRolePolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolePolicyAttachmentsRolePolicyAttachmentListArrayInput)(nil)).Elem(), GetRolePolicyAttachmentsRolePolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleListInput)(nil)).Elem(), GetRolesRoleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleListArrayInput)(nil)).Elem(), GetRolesRoleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlProvidersProviderListInput)(nil)).Elem(), GetSamlProvidersProviderListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlProvidersProviderListArrayInput)(nil)).Elem(), GetSamlProvidersProviderListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPolicyAttachmentsUserPolicyAttachmentListInput)(nil)).Elem(), GetUserPolicyAttachmentsUserPolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPolicyAttachmentsUserPolicyAttachmentListArrayInput)(nil)).Elem(), GetUserPolicyAttachmentsUserPolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListInput)(nil)).Elem(), GetUsersUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListArrayInput)(nil)).Elem(), GetUsersUserListArray{})
	pulumi.RegisterOutputType(GetGroupMembershipsMembershipListOutput{})
	pulumi.RegisterOutputType(GetGroupMembershipsMembershipListArrayOutput{})
	pulumi.RegisterOutputType(GetGroupPolicyAttachmentsGroupPolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupListOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupListArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyListOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyListArrayOutput{})
	pulumi.RegisterOutputType(GetRolePolicyAttachmentsRolePolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(GetRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(GetRolesRoleListOutput{})
	pulumi.RegisterOutputType(GetRolesRoleListArrayOutput{})
	pulumi.RegisterOutputType(GetSamlProvidersProviderListOutput{})
	pulumi.RegisterOutputType(GetSamlProvidersProviderListArrayOutput{})
	pulumi.RegisterOutputType(GetUserPolicyAttachmentsUserPolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(GetUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserListOutput{})
	pulumi.RegisterOutputType(GetUsersUserListArrayOutput{})
}
