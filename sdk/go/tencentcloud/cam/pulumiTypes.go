// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GroupMembershipsMembershipList struct {
	GroupId string `pulumi:"groupId"`
	// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
	UserIds   []string `pulumi:"userIds"`
	UserNames []string `pulumi:"userNames"`
}

// GroupMembershipsMembershipListInput is an input type that accepts GroupMembershipsMembershipListArgs and GroupMembershipsMembershipListOutput values.
// You can construct a concrete instance of `GroupMembershipsMembershipListInput` via:
//
//          GroupMembershipsMembershipListArgs{...}
type GroupMembershipsMembershipListInput interface {
	pulumi.Input

	ToGroupMembershipsMembershipListOutput() GroupMembershipsMembershipListOutput
	ToGroupMembershipsMembershipListOutputWithContext(context.Context) GroupMembershipsMembershipListOutput
}

type GroupMembershipsMembershipListArgs struct {
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
	UserIds   pulumi.StringArrayInput `pulumi:"userIds"`
	UserNames pulumi.StringArrayInput `pulumi:"userNames"`
}

func (GroupMembershipsMembershipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMembershipsMembershipList)(nil)).Elem()
}

func (i GroupMembershipsMembershipListArgs) ToGroupMembershipsMembershipListOutput() GroupMembershipsMembershipListOutput {
	return i.ToGroupMembershipsMembershipListOutputWithContext(context.Background())
}

func (i GroupMembershipsMembershipListArgs) ToGroupMembershipsMembershipListOutputWithContext(ctx context.Context) GroupMembershipsMembershipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMembershipsMembershipListOutput)
}

// GroupMembershipsMembershipListArrayInput is an input type that accepts GroupMembershipsMembershipListArray and GroupMembershipsMembershipListArrayOutput values.
// You can construct a concrete instance of `GroupMembershipsMembershipListArrayInput` via:
//
//          GroupMembershipsMembershipListArray{ GroupMembershipsMembershipListArgs{...} }
type GroupMembershipsMembershipListArrayInput interface {
	pulumi.Input

	ToGroupMembershipsMembershipListArrayOutput() GroupMembershipsMembershipListArrayOutput
	ToGroupMembershipsMembershipListArrayOutputWithContext(context.Context) GroupMembershipsMembershipListArrayOutput
}

type GroupMembershipsMembershipListArray []GroupMembershipsMembershipListInput

func (GroupMembershipsMembershipListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMembershipsMembershipList)(nil)).Elem()
}

func (i GroupMembershipsMembershipListArray) ToGroupMembershipsMembershipListArrayOutput() GroupMembershipsMembershipListArrayOutput {
	return i.ToGroupMembershipsMembershipListArrayOutputWithContext(context.Background())
}

func (i GroupMembershipsMembershipListArray) ToGroupMembershipsMembershipListArrayOutputWithContext(ctx context.Context) GroupMembershipsMembershipListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMembershipsMembershipListArrayOutput)
}

type GroupMembershipsMembershipListOutput struct{ *pulumi.OutputState }

func (GroupMembershipsMembershipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMembershipsMembershipList)(nil)).Elem()
}

func (o GroupMembershipsMembershipListOutput) ToGroupMembershipsMembershipListOutput() GroupMembershipsMembershipListOutput {
	return o
}

func (o GroupMembershipsMembershipListOutput) ToGroupMembershipsMembershipListOutputWithContext(ctx context.Context) GroupMembershipsMembershipListOutput {
	return o
}

func (o GroupMembershipsMembershipListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupMembershipsMembershipList) string { return v.GroupId }).(pulumi.StringOutput)
}

// Deprecated: It has been deprecated from version 1.59.5. Use `user_names` instead.
func (o GroupMembershipsMembershipListOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupMembershipsMembershipList) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

func (o GroupMembershipsMembershipListOutput) UserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupMembershipsMembershipList) []string { return v.UserNames }).(pulumi.StringArrayOutput)
}

type GroupMembershipsMembershipListArrayOutput struct{ *pulumi.OutputState }

func (GroupMembershipsMembershipListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMembershipsMembershipList)(nil)).Elem()
}

func (o GroupMembershipsMembershipListArrayOutput) ToGroupMembershipsMembershipListArrayOutput() GroupMembershipsMembershipListArrayOutput {
	return o
}

func (o GroupMembershipsMembershipListArrayOutput) ToGroupMembershipsMembershipListArrayOutputWithContext(ctx context.Context) GroupMembershipsMembershipListArrayOutput {
	return o
}

func (o GroupMembershipsMembershipListArrayOutput) Index(i pulumi.IntInput) GroupMembershipsMembershipListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMembershipsMembershipList {
		return vs[0].([]GroupMembershipsMembershipList)[vs[1].(int)]
	}).(GroupMembershipsMembershipListOutput)
}

type GroupPolicyAttachmentsGroupPolicyAttachmentList struct {
	CreateMode int    `pulumi:"createMode"`
	CreateTime string `pulumi:"createTime"`
	GroupId    string `pulumi:"groupId"`
	PolicyId   string `pulumi:"policyId"`
	PolicyName string `pulumi:"policyName"`
	PolicyType string `pulumi:"policyType"`
}

// GroupPolicyAttachmentsGroupPolicyAttachmentListInput is an input type that accepts GroupPolicyAttachmentsGroupPolicyAttachmentListArgs and GroupPolicyAttachmentsGroupPolicyAttachmentListOutput values.
// You can construct a concrete instance of `GroupPolicyAttachmentsGroupPolicyAttachmentListInput` via:
//
//          GroupPolicyAttachmentsGroupPolicyAttachmentListArgs{...}
type GroupPolicyAttachmentsGroupPolicyAttachmentListInput interface {
	pulumi.Input

	ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListOutput
	ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListOutput
}

type GroupPolicyAttachmentsGroupPolicyAttachmentListArgs struct {
	CreateMode pulumi.IntInput    `pulumi:"createMode"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	GroupId    pulumi.StringInput `pulumi:"groupId"`
	PolicyId   pulumi.StringInput `pulumi:"policyId"`
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (GroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (i GroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return i.ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(context.Background())
}

func (i GroupPolicyAttachmentsGroupPolicyAttachmentListArgs) ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(ctx context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAttachmentsGroupPolicyAttachmentListOutput)
}

// GroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput is an input type that accepts GroupPolicyAttachmentsGroupPolicyAttachmentListArray and GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput` via:
//
//          GroupPolicyAttachmentsGroupPolicyAttachmentListArray{ GroupPolicyAttachmentsGroupPolicyAttachmentListArgs{...} }
type GroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput
	ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput
}

type GroupPolicyAttachmentsGroupPolicyAttachmentListArray []GroupPolicyAttachmentsGroupPolicyAttachmentListInput

func (GroupPolicyAttachmentsGroupPolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (i GroupPolicyAttachmentsGroupPolicyAttachmentListArray) ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return i.ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAttachmentsGroupPolicyAttachmentListArray) ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput)
}

type GroupPolicyAttachmentsGroupPolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return o
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) ToGroupPolicyAttachmentsGroupPolicyAttachmentListOutputWithContext(ctx context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return o
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAttachmentsGroupPolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

type GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAttachmentsGroupPolicyAttachmentList)(nil)).Elem()
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput() GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return o
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) ToGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutputWithContext(ctx context.Context) GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return o
}

func (o GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) GroupPolicyAttachmentsGroupPolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAttachmentsGroupPolicyAttachmentList {
		return vs[0].([]GroupPolicyAttachmentsGroupPolicyAttachmentList)[vs[1].(int)]
	}).(GroupPolicyAttachmentsGroupPolicyAttachmentListOutput)
}

type GroupsGroupList struct {
	CreateTime string `pulumi:"createTime"`
	GroupId    string `pulumi:"groupId"`
	Name       string `pulumi:"name"`
	Remark     string `pulumi:"remark"`
}

// GroupsGroupListInput is an input type that accepts GroupsGroupListArgs and GroupsGroupListOutput values.
// You can construct a concrete instance of `GroupsGroupListInput` via:
//
//          GroupsGroupListArgs{...}
type GroupsGroupListInput interface {
	pulumi.Input

	ToGroupsGroupListOutput() GroupsGroupListOutput
	ToGroupsGroupListOutputWithContext(context.Context) GroupsGroupListOutput
}

type GroupsGroupListArgs struct {
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	GroupId    pulumi.StringInput `pulumi:"groupId"`
	Name       pulumi.StringInput `pulumi:"name"`
	Remark     pulumi.StringInput `pulumi:"remark"`
}

func (GroupsGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupsGroupList)(nil)).Elem()
}

func (i GroupsGroupListArgs) ToGroupsGroupListOutput() GroupsGroupListOutput {
	return i.ToGroupsGroupListOutputWithContext(context.Background())
}

func (i GroupsGroupListArgs) ToGroupsGroupListOutputWithContext(ctx context.Context) GroupsGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupsGroupListOutput)
}

// GroupsGroupListArrayInput is an input type that accepts GroupsGroupListArray and GroupsGroupListArrayOutput values.
// You can construct a concrete instance of `GroupsGroupListArrayInput` via:
//
//          GroupsGroupListArray{ GroupsGroupListArgs{...} }
type GroupsGroupListArrayInput interface {
	pulumi.Input

	ToGroupsGroupListArrayOutput() GroupsGroupListArrayOutput
	ToGroupsGroupListArrayOutputWithContext(context.Context) GroupsGroupListArrayOutput
}

type GroupsGroupListArray []GroupsGroupListInput

func (GroupsGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupsGroupList)(nil)).Elem()
}

func (i GroupsGroupListArray) ToGroupsGroupListArrayOutput() GroupsGroupListArrayOutput {
	return i.ToGroupsGroupListArrayOutputWithContext(context.Background())
}

func (i GroupsGroupListArray) ToGroupsGroupListArrayOutputWithContext(ctx context.Context) GroupsGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupsGroupListArrayOutput)
}

type GroupsGroupListOutput struct{ *pulumi.OutputState }

func (GroupsGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupsGroupList)(nil)).Elem()
}

func (o GroupsGroupListOutput) ToGroupsGroupListOutput() GroupsGroupListOutput {
	return o
}

func (o GroupsGroupListOutput) ToGroupsGroupListOutputWithContext(ctx context.Context) GroupsGroupListOutput {
	return o
}

func (o GroupsGroupListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsGroupList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GroupsGroupListOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsGroupList) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o GroupsGroupListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsGroupList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GroupsGroupListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsGroupList) string { return v.Remark }).(pulumi.StringOutput)
}

type GroupsGroupListArrayOutput struct{ *pulumi.OutputState }

func (GroupsGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupsGroupList)(nil)).Elem()
}

func (o GroupsGroupListArrayOutput) ToGroupsGroupListArrayOutput() GroupsGroupListArrayOutput {
	return o
}

func (o GroupsGroupListArrayOutput) ToGroupsGroupListArrayOutputWithContext(ctx context.Context) GroupsGroupListArrayOutput {
	return o
}

func (o GroupsGroupListArrayOutput) Index(i pulumi.IntInput) GroupsGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupsGroupList {
		return vs[0].([]GroupsGroupList)[vs[1].(int)]
	}).(GroupsGroupListOutput)
}

type PoliciesPolicyList struct {
	Attachments int    `pulumi:"attachments"`
	CreateMode  int    `pulumi:"createMode"`
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	Name        string `pulumi:"name"`
	PolicyId    string `pulumi:"policyId"`
	ServiceType string `pulumi:"serviceType"`
	Type        int    `pulumi:"type"`
}

// PoliciesPolicyListInput is an input type that accepts PoliciesPolicyListArgs and PoliciesPolicyListOutput values.
// You can construct a concrete instance of `PoliciesPolicyListInput` via:
//
//          PoliciesPolicyListArgs{...}
type PoliciesPolicyListInput interface {
	pulumi.Input

	ToPoliciesPolicyListOutput() PoliciesPolicyListOutput
	ToPoliciesPolicyListOutputWithContext(context.Context) PoliciesPolicyListOutput
}

type PoliciesPolicyListArgs struct {
	Attachments pulumi.IntInput    `pulumi:"attachments"`
	CreateMode  pulumi.IntInput    `pulumi:"createMode"`
	CreateTime  pulumi.StringInput `pulumi:"createTime"`
	Description pulumi.StringInput `pulumi:"description"`
	Name        pulumi.StringInput `pulumi:"name"`
	PolicyId    pulumi.StringInput `pulumi:"policyId"`
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	Type        pulumi.IntInput    `pulumi:"type"`
}

func (PoliciesPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesPolicyList)(nil)).Elem()
}

func (i PoliciesPolicyListArgs) ToPoliciesPolicyListOutput() PoliciesPolicyListOutput {
	return i.ToPoliciesPolicyListOutputWithContext(context.Background())
}

func (i PoliciesPolicyListArgs) ToPoliciesPolicyListOutputWithContext(ctx context.Context) PoliciesPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesPolicyListOutput)
}

// PoliciesPolicyListArrayInput is an input type that accepts PoliciesPolicyListArray and PoliciesPolicyListArrayOutput values.
// You can construct a concrete instance of `PoliciesPolicyListArrayInput` via:
//
//          PoliciesPolicyListArray{ PoliciesPolicyListArgs{...} }
type PoliciesPolicyListArrayInput interface {
	pulumi.Input

	ToPoliciesPolicyListArrayOutput() PoliciesPolicyListArrayOutput
	ToPoliciesPolicyListArrayOutputWithContext(context.Context) PoliciesPolicyListArrayOutput
}

type PoliciesPolicyListArray []PoliciesPolicyListInput

func (PoliciesPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoliciesPolicyList)(nil)).Elem()
}

func (i PoliciesPolicyListArray) ToPoliciesPolicyListArrayOutput() PoliciesPolicyListArrayOutput {
	return i.ToPoliciesPolicyListArrayOutputWithContext(context.Background())
}

func (i PoliciesPolicyListArray) ToPoliciesPolicyListArrayOutputWithContext(ctx context.Context) PoliciesPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesPolicyListArrayOutput)
}

type PoliciesPolicyListOutput struct{ *pulumi.OutputState }

func (PoliciesPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesPolicyList)(nil)).Elem()
}

func (o PoliciesPolicyListOutput) ToPoliciesPolicyListOutput() PoliciesPolicyListOutput {
	return o
}

func (o PoliciesPolicyListOutput) ToPoliciesPolicyListOutputWithContext(ctx context.Context) PoliciesPolicyListOutput {
	return o
}

func (o PoliciesPolicyListOutput) Attachments() pulumi.IntOutput {
	return o.ApplyT(func(v PoliciesPolicyList) int { return v.Attachments }).(pulumi.IntOutput)
}

func (o PoliciesPolicyListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v PoliciesPolicyList) int { return v.CreateMode }).(pulumi.IntOutput)
}

func (o PoliciesPolicyListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v PoliciesPolicyList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o PoliciesPolicyListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PoliciesPolicyList) string { return v.Description }).(pulumi.StringOutput)
}

func (o PoliciesPolicyListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoliciesPolicyList) string { return v.Name }).(pulumi.StringOutput)
}

func (o PoliciesPolicyListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v PoliciesPolicyList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o PoliciesPolicyListOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v PoliciesPolicyList) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o PoliciesPolicyListOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v PoliciesPolicyList) int { return v.Type }).(pulumi.IntOutput)
}

type PoliciesPolicyListArrayOutput struct{ *pulumi.OutputState }

func (PoliciesPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoliciesPolicyList)(nil)).Elem()
}

func (o PoliciesPolicyListArrayOutput) ToPoliciesPolicyListArrayOutput() PoliciesPolicyListArrayOutput {
	return o
}

func (o PoliciesPolicyListArrayOutput) ToPoliciesPolicyListArrayOutputWithContext(ctx context.Context) PoliciesPolicyListArrayOutput {
	return o
}

func (o PoliciesPolicyListArrayOutput) Index(i pulumi.IntInput) PoliciesPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoliciesPolicyList {
		return vs[0].([]PoliciesPolicyList)[vs[1].(int)]
	}).(PoliciesPolicyListOutput)
}

type RolePolicyAttachmentsRolePolicyAttachmentList struct {
	CreateMode int    `pulumi:"createMode"`
	CreateTime string `pulumi:"createTime"`
	PolicyId   string `pulumi:"policyId"`
	PolicyName string `pulumi:"policyName"`
	PolicyType string `pulumi:"policyType"`
	RoleId     string `pulumi:"roleId"`
}

// RolePolicyAttachmentsRolePolicyAttachmentListInput is an input type that accepts RolePolicyAttachmentsRolePolicyAttachmentListArgs and RolePolicyAttachmentsRolePolicyAttachmentListOutput values.
// You can construct a concrete instance of `RolePolicyAttachmentsRolePolicyAttachmentListInput` via:
//
//          RolePolicyAttachmentsRolePolicyAttachmentListArgs{...}
type RolePolicyAttachmentsRolePolicyAttachmentListInput interface {
	pulumi.Input

	ToRolePolicyAttachmentsRolePolicyAttachmentListOutput() RolePolicyAttachmentsRolePolicyAttachmentListOutput
	ToRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(context.Context) RolePolicyAttachmentsRolePolicyAttachmentListOutput
}

type RolePolicyAttachmentsRolePolicyAttachmentListArgs struct {
	CreateMode pulumi.IntInput    `pulumi:"createMode"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	PolicyId   pulumi.StringInput `pulumi:"policyId"`
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	RoleId     pulumi.StringInput `pulumi:"roleId"`
}

func (RolePolicyAttachmentsRolePolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (i RolePolicyAttachmentsRolePolicyAttachmentListArgs) ToRolePolicyAttachmentsRolePolicyAttachmentListOutput() RolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return i.ToRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(context.Background())
}

func (i RolePolicyAttachmentsRolePolicyAttachmentListArgs) ToRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(ctx context.Context) RolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyAttachmentsRolePolicyAttachmentListOutput)
}

// RolePolicyAttachmentsRolePolicyAttachmentListArrayInput is an input type that accepts RolePolicyAttachmentsRolePolicyAttachmentListArray and RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `RolePolicyAttachmentsRolePolicyAttachmentListArrayInput` via:
//
//          RolePolicyAttachmentsRolePolicyAttachmentListArray{ RolePolicyAttachmentsRolePolicyAttachmentListArgs{...} }
type RolePolicyAttachmentsRolePolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput
	ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(context.Context) RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput
}

type RolePolicyAttachmentsRolePolicyAttachmentListArray []RolePolicyAttachmentsRolePolicyAttachmentListInput

func (RolePolicyAttachmentsRolePolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (i RolePolicyAttachmentsRolePolicyAttachmentListArray) ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return i.ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i RolePolicyAttachmentsRolePolicyAttachmentListArray) ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(ctx context.Context) RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput)
}

type RolePolicyAttachmentsRolePolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (RolePolicyAttachmentsRolePolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) ToRolePolicyAttachmentsRolePolicyAttachmentListOutput() RolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return o
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) ToRolePolicyAttachmentsRolePolicyAttachmentListOutputWithContext(ctx context.Context) RolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return o
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyAttachmentsRolePolicyAttachmentList) string { return v.RoleId }).(pulumi.StringOutput)
}

type RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicyAttachmentsRolePolicyAttachmentList)(nil)).Elem()
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutput() RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return o
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) ToRolePolicyAttachmentsRolePolicyAttachmentListArrayOutputWithContext(ctx context.Context) RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput {
	return o
}

func (o RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) RolePolicyAttachmentsRolePolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePolicyAttachmentsRolePolicyAttachmentList {
		return vs[0].([]RolePolicyAttachmentsRolePolicyAttachmentList)[vs[1].(int)]
	}).(RolePolicyAttachmentsRolePolicyAttachmentListOutput)
}

type RolesRoleList struct {
	ConsoleLogin bool   `pulumi:"consoleLogin"`
	CreateTime   string `pulumi:"createTime"`
	Description  string `pulumi:"description"`
	Document     string `pulumi:"document"`
	Name         string `pulumi:"name"`
	RoleId       string `pulumi:"roleId"`
	UpdateTime   string `pulumi:"updateTime"`
}

// RolesRoleListInput is an input type that accepts RolesRoleListArgs and RolesRoleListOutput values.
// You can construct a concrete instance of `RolesRoleListInput` via:
//
//          RolesRoleListArgs{...}
type RolesRoleListInput interface {
	pulumi.Input

	ToRolesRoleListOutput() RolesRoleListOutput
	ToRolesRoleListOutputWithContext(context.Context) RolesRoleListOutput
}

type RolesRoleListArgs struct {
	ConsoleLogin pulumi.BoolInput   `pulumi:"consoleLogin"`
	CreateTime   pulumi.StringInput `pulumi:"createTime"`
	Description  pulumi.StringInput `pulumi:"description"`
	Document     pulumi.StringInput `pulumi:"document"`
	Name         pulumi.StringInput `pulumi:"name"`
	RoleId       pulumi.StringInput `pulumi:"roleId"`
	UpdateTime   pulumi.StringInput `pulumi:"updateTime"`
}

func (RolesRoleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesRoleList)(nil)).Elem()
}

func (i RolesRoleListArgs) ToRolesRoleListOutput() RolesRoleListOutput {
	return i.ToRolesRoleListOutputWithContext(context.Background())
}

func (i RolesRoleListArgs) ToRolesRoleListOutputWithContext(ctx context.Context) RolesRoleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesRoleListOutput)
}

// RolesRoleListArrayInput is an input type that accepts RolesRoleListArray and RolesRoleListArrayOutput values.
// You can construct a concrete instance of `RolesRoleListArrayInput` via:
//
//          RolesRoleListArray{ RolesRoleListArgs{...} }
type RolesRoleListArrayInput interface {
	pulumi.Input

	ToRolesRoleListArrayOutput() RolesRoleListArrayOutput
	ToRolesRoleListArrayOutputWithContext(context.Context) RolesRoleListArrayOutput
}

type RolesRoleListArray []RolesRoleListInput

func (RolesRoleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolesRoleList)(nil)).Elem()
}

func (i RolesRoleListArray) ToRolesRoleListArrayOutput() RolesRoleListArrayOutput {
	return i.ToRolesRoleListArrayOutputWithContext(context.Background())
}

func (i RolesRoleListArray) ToRolesRoleListArrayOutputWithContext(ctx context.Context) RolesRoleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesRoleListArrayOutput)
}

type RolesRoleListOutput struct{ *pulumi.OutputState }

func (RolesRoleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesRoleList)(nil)).Elem()
}

func (o RolesRoleListOutput) ToRolesRoleListOutput() RolesRoleListOutput {
	return o
}

func (o RolesRoleListOutput) ToRolesRoleListOutputWithContext(ctx context.Context) RolesRoleListOutput {
	return o
}

func (o RolesRoleListOutput) ConsoleLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v RolesRoleList) bool { return v.ConsoleLogin }).(pulumi.BoolOutput)
}

func (o RolesRoleListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o RolesRoleListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.Description }).(pulumi.StringOutput)
}

func (o RolesRoleListOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.Document }).(pulumi.StringOutput)
}

func (o RolesRoleListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.Name }).(pulumi.StringOutput)
}

func (o RolesRoleListOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o RolesRoleListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolesRoleList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type RolesRoleListArrayOutput struct{ *pulumi.OutputState }

func (RolesRoleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolesRoleList)(nil)).Elem()
}

func (o RolesRoleListArrayOutput) ToRolesRoleListArrayOutput() RolesRoleListArrayOutput {
	return o
}

func (o RolesRoleListArrayOutput) ToRolesRoleListArrayOutputWithContext(ctx context.Context) RolesRoleListArrayOutput {
	return o
}

func (o RolesRoleListArrayOutput) Index(i pulumi.IntInput) RolesRoleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolesRoleList {
		return vs[0].([]RolesRoleList)[vs[1].(int)]
	}).(RolesRoleListOutput)
}

type SAMLProvidersProviderList struct {
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	ModifyTime  string `pulumi:"modifyTime"`
	Name        string `pulumi:"name"`
}

// SAMLProvidersProviderListInput is an input type that accepts SAMLProvidersProviderListArgs and SAMLProvidersProviderListOutput values.
// You can construct a concrete instance of `SAMLProvidersProviderListInput` via:
//
//          SAMLProvidersProviderListArgs{...}
type SAMLProvidersProviderListInput interface {
	pulumi.Input

	ToSAMLProvidersProviderListOutput() SAMLProvidersProviderListOutput
	ToSAMLProvidersProviderListOutputWithContext(context.Context) SAMLProvidersProviderListOutput
}

type SAMLProvidersProviderListArgs struct {
	CreateTime  pulumi.StringInput `pulumi:"createTime"`
	Description pulumi.StringInput `pulumi:"description"`
	ModifyTime  pulumi.StringInput `pulumi:"modifyTime"`
	Name        pulumi.StringInput `pulumi:"name"`
}

func (SAMLProvidersProviderListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLProvidersProviderList)(nil)).Elem()
}

func (i SAMLProvidersProviderListArgs) ToSAMLProvidersProviderListOutput() SAMLProvidersProviderListOutput {
	return i.ToSAMLProvidersProviderListOutputWithContext(context.Background())
}

func (i SAMLProvidersProviderListArgs) ToSAMLProvidersProviderListOutputWithContext(ctx context.Context) SAMLProvidersProviderListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLProvidersProviderListOutput)
}

// SAMLProvidersProviderListArrayInput is an input type that accepts SAMLProvidersProviderListArray and SAMLProvidersProviderListArrayOutput values.
// You can construct a concrete instance of `SAMLProvidersProviderListArrayInput` via:
//
//          SAMLProvidersProviderListArray{ SAMLProvidersProviderListArgs{...} }
type SAMLProvidersProviderListArrayInput interface {
	pulumi.Input

	ToSAMLProvidersProviderListArrayOutput() SAMLProvidersProviderListArrayOutput
	ToSAMLProvidersProviderListArrayOutputWithContext(context.Context) SAMLProvidersProviderListArrayOutput
}

type SAMLProvidersProviderListArray []SAMLProvidersProviderListInput

func (SAMLProvidersProviderListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SAMLProvidersProviderList)(nil)).Elem()
}

func (i SAMLProvidersProviderListArray) ToSAMLProvidersProviderListArrayOutput() SAMLProvidersProviderListArrayOutput {
	return i.ToSAMLProvidersProviderListArrayOutputWithContext(context.Background())
}

func (i SAMLProvidersProviderListArray) ToSAMLProvidersProviderListArrayOutputWithContext(ctx context.Context) SAMLProvidersProviderListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLProvidersProviderListArrayOutput)
}

type SAMLProvidersProviderListOutput struct{ *pulumi.OutputState }

func (SAMLProvidersProviderListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLProvidersProviderList)(nil)).Elem()
}

func (o SAMLProvidersProviderListOutput) ToSAMLProvidersProviderListOutput() SAMLProvidersProviderListOutput {
	return o
}

func (o SAMLProvidersProviderListOutput) ToSAMLProvidersProviderListOutputWithContext(ctx context.Context) SAMLProvidersProviderListOutput {
	return o
}

func (o SAMLProvidersProviderListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLProvidersProviderList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o SAMLProvidersProviderListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLProvidersProviderList) string { return v.Description }).(pulumi.StringOutput)
}

func (o SAMLProvidersProviderListOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLProvidersProviderList) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o SAMLProvidersProviderListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLProvidersProviderList) string { return v.Name }).(pulumi.StringOutput)
}

type SAMLProvidersProviderListArrayOutput struct{ *pulumi.OutputState }

func (SAMLProvidersProviderListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SAMLProvidersProviderList)(nil)).Elem()
}

func (o SAMLProvidersProviderListArrayOutput) ToSAMLProvidersProviderListArrayOutput() SAMLProvidersProviderListArrayOutput {
	return o
}

func (o SAMLProvidersProviderListArrayOutput) ToSAMLProvidersProviderListArrayOutputWithContext(ctx context.Context) SAMLProvidersProviderListArrayOutput {
	return o
}

func (o SAMLProvidersProviderListArrayOutput) Index(i pulumi.IntInput) SAMLProvidersProviderListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SAMLProvidersProviderList {
		return vs[0].([]SAMLProvidersProviderList)[vs[1].(int)]
	}).(SAMLProvidersProviderListOutput)
}

type UserPolicyAttachmentsUserPolicyAttachmentList struct {
	CreateMode int    `pulumi:"createMode"`
	CreateTime string `pulumi:"createTime"`
	PolicyId   string `pulumi:"policyId"`
	PolicyName string `pulumi:"policyName"`
	PolicyType string `pulumi:"policyType"`
	// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
	UserId   string `pulumi:"userId"`
	UserName string `pulumi:"userName"`
}

// UserPolicyAttachmentsUserPolicyAttachmentListInput is an input type that accepts UserPolicyAttachmentsUserPolicyAttachmentListArgs and UserPolicyAttachmentsUserPolicyAttachmentListOutput values.
// You can construct a concrete instance of `UserPolicyAttachmentsUserPolicyAttachmentListInput` via:
//
//          UserPolicyAttachmentsUserPolicyAttachmentListArgs{...}
type UserPolicyAttachmentsUserPolicyAttachmentListInput interface {
	pulumi.Input

	ToUserPolicyAttachmentsUserPolicyAttachmentListOutput() UserPolicyAttachmentsUserPolicyAttachmentListOutput
	ToUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(context.Context) UserPolicyAttachmentsUserPolicyAttachmentListOutput
}

type UserPolicyAttachmentsUserPolicyAttachmentListArgs struct {
	CreateMode pulumi.IntInput    `pulumi:"createMode"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	PolicyId   pulumi.StringInput `pulumi:"policyId"`
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
	UserId   pulumi.StringInput `pulumi:"userId"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (UserPolicyAttachmentsUserPolicyAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (i UserPolicyAttachmentsUserPolicyAttachmentListArgs) ToUserPolicyAttachmentsUserPolicyAttachmentListOutput() UserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return i.ToUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(context.Background())
}

func (i UserPolicyAttachmentsUserPolicyAttachmentListArgs) ToUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(ctx context.Context) UserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyAttachmentsUserPolicyAttachmentListOutput)
}

// UserPolicyAttachmentsUserPolicyAttachmentListArrayInput is an input type that accepts UserPolicyAttachmentsUserPolicyAttachmentListArray and UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput values.
// You can construct a concrete instance of `UserPolicyAttachmentsUserPolicyAttachmentListArrayInput` via:
//
//          UserPolicyAttachmentsUserPolicyAttachmentListArray{ UserPolicyAttachmentsUserPolicyAttachmentListArgs{...} }
type UserPolicyAttachmentsUserPolicyAttachmentListArrayInput interface {
	pulumi.Input

	ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput
	ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(context.Context) UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput
}

type UserPolicyAttachmentsUserPolicyAttachmentListArray []UserPolicyAttachmentsUserPolicyAttachmentListInput

func (UserPolicyAttachmentsUserPolicyAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (i UserPolicyAttachmentsUserPolicyAttachmentListArray) ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return i.ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(context.Background())
}

func (i UserPolicyAttachmentsUserPolicyAttachmentListArray) ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(ctx context.Context) UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput)
}

type UserPolicyAttachmentsUserPolicyAttachmentListOutput struct{ *pulumi.OutputState }

func (UserPolicyAttachmentsUserPolicyAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) ToUserPolicyAttachmentsUserPolicyAttachmentListOutput() UserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return o
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) ToUserPolicyAttachmentsUserPolicyAttachmentListOutputWithContext(ctx context.Context) UserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return o
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) CreateMode() pulumi.IntOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) int { return v.CreateMode }).(pulumi.IntOutput)
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyName }).(pulumi.StringOutput)
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Deprecated: It has been deprecated from version 1.59.6. Use `user_name` instead.
func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.UserId }).(pulumi.StringOutput)
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyAttachmentsUserPolicyAttachmentList) string { return v.UserName }).(pulumi.StringOutput)
}

type UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicyAttachmentsUserPolicyAttachmentList)(nil)).Elem()
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutput() UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return o
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) ToUserPolicyAttachmentsUserPolicyAttachmentListArrayOutputWithContext(ctx context.Context) UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput {
	return o
}

func (o UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput) Index(i pulumi.IntInput) UserPolicyAttachmentsUserPolicyAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPolicyAttachmentsUserPolicyAttachmentList {
		return vs[0].([]UserPolicyAttachmentsUserPolicyAttachmentList)[vs[1].(int)]
	}).(UserPolicyAttachmentsUserPolicyAttachmentListOutput)
}

type UsersUserList struct {
	ConsoleLogin *bool  `pulumi:"consoleLogin"`
	CountryCode  string `pulumi:"countryCode"`
	Email        string `pulumi:"email"`
	Name         string `pulumi:"name"`
	PhoneNum     string `pulumi:"phoneNum"`
	Remark       string `pulumi:"remark"`
	Uid          int    `pulumi:"uid"`
	Uin          int    `pulumi:"uin"`
	UserId       string `pulumi:"userId"`
}

// UsersUserListInput is an input type that accepts UsersUserListArgs and UsersUserListOutput values.
// You can construct a concrete instance of `UsersUserListInput` via:
//
//          UsersUserListArgs{...}
type UsersUserListInput interface {
	pulumi.Input

	ToUsersUserListOutput() UsersUserListOutput
	ToUsersUserListOutputWithContext(context.Context) UsersUserListOutput
}

type UsersUserListArgs struct {
	ConsoleLogin pulumi.BoolPtrInput `pulumi:"consoleLogin"`
	CountryCode  pulumi.StringInput  `pulumi:"countryCode"`
	Email        pulumi.StringInput  `pulumi:"email"`
	Name         pulumi.StringInput  `pulumi:"name"`
	PhoneNum     pulumi.StringInput  `pulumi:"phoneNum"`
	Remark       pulumi.StringInput  `pulumi:"remark"`
	Uid          pulumi.IntInput     `pulumi:"uid"`
	Uin          pulumi.IntInput     `pulumi:"uin"`
	UserId       pulumi.StringInput  `pulumi:"userId"`
}

func (UsersUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsersUserList)(nil)).Elem()
}

func (i UsersUserListArgs) ToUsersUserListOutput() UsersUserListOutput {
	return i.ToUsersUserListOutputWithContext(context.Background())
}

func (i UsersUserListArgs) ToUsersUserListOutputWithContext(ctx context.Context) UsersUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersUserListOutput)
}

// UsersUserListArrayInput is an input type that accepts UsersUserListArray and UsersUserListArrayOutput values.
// You can construct a concrete instance of `UsersUserListArrayInput` via:
//
//          UsersUserListArray{ UsersUserListArgs{...} }
type UsersUserListArrayInput interface {
	pulumi.Input

	ToUsersUserListArrayOutput() UsersUserListArrayOutput
	ToUsersUserListArrayOutputWithContext(context.Context) UsersUserListArrayOutput
}

type UsersUserListArray []UsersUserListInput

func (UsersUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsersUserList)(nil)).Elem()
}

func (i UsersUserListArray) ToUsersUserListArrayOutput() UsersUserListArrayOutput {
	return i.ToUsersUserListArrayOutputWithContext(context.Background())
}

func (i UsersUserListArray) ToUsersUserListArrayOutputWithContext(ctx context.Context) UsersUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersUserListArrayOutput)
}

type UsersUserListOutput struct{ *pulumi.OutputState }

func (UsersUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsersUserList)(nil)).Elem()
}

func (o UsersUserListOutput) ToUsersUserListOutput() UsersUserListOutput {
	return o
}

func (o UsersUserListOutput) ToUsersUserListOutputWithContext(ctx context.Context) UsersUserListOutput {
	return o
}

func (o UsersUserListOutput) ConsoleLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsersUserList) *bool { return v.ConsoleLogin }).(pulumi.BoolPtrOutput)
}

func (o UsersUserListOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.Email }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.Name }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) PhoneNum() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.PhoneNum }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.Remark }).(pulumi.StringOutput)
}

func (o UsersUserListOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v UsersUserList) int { return v.Uid }).(pulumi.IntOutput)
}

func (o UsersUserListOutput) Uin() pulumi.IntOutput {
	return o.ApplyT(func(v UsersUserList) int { return v.Uin }).(pulumi.IntOutput)
}

func (o UsersUserListOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UsersUserList) string { return v.UserId }).(pulumi.StringOutput)
}

type UsersUserListArrayOutput struct{ *pulumi.OutputState }

func (UsersUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsersUserList)(nil)).Elem()
}

func (o UsersUserListArrayOutput) ToUsersUserListArrayOutput() UsersUserListArrayOutput {
	return o
}

func (o UsersUserListArrayOutput) ToUsersUserListArrayOutputWithContext(ctx context.Context) UsersUserListArrayOutput {
	return o
}

func (o UsersUserListArrayOutput) Index(i pulumi.IntInput) UsersUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsersUserList {
		return vs[0].([]UsersUserList)[vs[1].(int)]
	}).(UsersUserListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMembershipsMembershipListInput)(nil)).Elem(), GroupMembershipsMembershipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMembershipsMembershipListArrayInput)(nil)).Elem(), GroupMembershipsMembershipListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAttachmentsGroupPolicyAttachmentListInput)(nil)).Elem(), GroupPolicyAttachmentsGroupPolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAttachmentsGroupPolicyAttachmentListArrayInput)(nil)).Elem(), GroupPolicyAttachmentsGroupPolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupsGroupListInput)(nil)).Elem(), GroupsGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupsGroupListArrayInput)(nil)).Elem(), GroupsGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesPolicyListInput)(nil)).Elem(), PoliciesPolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesPolicyListArrayInput)(nil)).Elem(), PoliciesPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePolicyAttachmentsRolePolicyAttachmentListInput)(nil)).Elem(), RolePolicyAttachmentsRolePolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePolicyAttachmentsRolePolicyAttachmentListArrayInput)(nil)).Elem(), RolePolicyAttachmentsRolePolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesRoleListInput)(nil)).Elem(), RolesRoleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesRoleListArrayInput)(nil)).Elem(), RolesRoleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SAMLProvidersProviderListInput)(nil)).Elem(), SAMLProvidersProviderListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SAMLProvidersProviderListArrayInput)(nil)).Elem(), SAMLProvidersProviderListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyAttachmentsUserPolicyAttachmentListInput)(nil)).Elem(), UserPolicyAttachmentsUserPolicyAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyAttachmentsUserPolicyAttachmentListArrayInput)(nil)).Elem(), UserPolicyAttachmentsUserPolicyAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersUserListInput)(nil)).Elem(), UsersUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersUserListArrayInput)(nil)).Elem(), UsersUserListArray{})
	pulumi.RegisterOutputType(GroupMembershipsMembershipListOutput{})
	pulumi.RegisterOutputType(GroupMembershipsMembershipListArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicyAttachmentsGroupPolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(GroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(GroupsGroupListOutput{})
	pulumi.RegisterOutputType(GroupsGroupListArrayOutput{})
	pulumi.RegisterOutputType(PoliciesPolicyListOutput{})
	pulumi.RegisterOutputType(PoliciesPolicyListArrayOutput{})
	pulumi.RegisterOutputType(RolePolicyAttachmentsRolePolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(RolePolicyAttachmentsRolePolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(RolesRoleListOutput{})
	pulumi.RegisterOutputType(RolesRoleListArrayOutput{})
	pulumi.RegisterOutputType(SAMLProvidersProviderListOutput{})
	pulumi.RegisterOutputType(SAMLProvidersProviderListArrayOutput{})
	pulumi.RegisterOutputType(UserPolicyAttachmentsUserPolicyAttachmentListOutput{})
	pulumi.RegisterOutputType(UserPolicyAttachmentsUserPolicyAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(UsersUserListOutput{})
	pulumi.RegisterOutputType(UsersUserListArrayOutput{})
}
