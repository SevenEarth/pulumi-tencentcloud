// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Roles(ctx *pulumi.Context, args *RolesArgs, opts ...pulumi.InvokeOption) (*RolesResult, error) {
	var rv RolesResult
	err := ctx.Invoke("tencentcloud:Cam/roles:Roles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Roles.
type RolesArgs struct {
	Description      *string `pulumi:"description"`
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RoleId           *string `pulumi:"roleId"`
}

// A collection of values returned by Roles.
type RolesResult struct {
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id               string          `pulumi:"id"`
	Name             *string         `pulumi:"name"`
	ResultOutputFile *string         `pulumi:"resultOutputFile"`
	RoleId           *string         `pulumi:"roleId"`
	RoleLists        []RolesRoleList `pulumi:"roleLists"`
}

func RolesOutput(ctx *pulumi.Context, args RolesOutputArgs, opts ...pulumi.InvokeOption) RolesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RolesResult, error) {
			args := v.(RolesArgs)
			r, err := Roles(ctx, &args, opts...)
			var s RolesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RolesResultOutput)
}

// A collection of arguments for invoking Roles.
type RolesOutputArgs struct {
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RoleId           pulumi.StringPtrInput `pulumi:"roleId"`
}

func (RolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesArgs)(nil)).Elem()
}

// A collection of values returned by Roles.
type RolesResultOutput struct{ *pulumi.OutputState }

func (RolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesResult)(nil)).Elem()
}

func (o RolesResultOutput) ToRolesResultOutput() RolesResultOutput {
	return o
}

func (o RolesResultOutput) ToRolesResultOutputWithContext(ctx context.Context) RolesResultOutput {
	return o
}

func (o RolesResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o RolesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RolesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o RolesResultOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesResult) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o RolesResultOutput) RoleLists() RolesRoleListArrayOutput {
	return o.ApplyT(func(v RolesResult) []RolesRoleList { return v.RoleLists }).(RolesRoleListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(RolesResultOutput{})
}
