// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cbs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SnapshotPoliciesSnapshotPolicyList struct {
	AttachedStorageIds []string `pulumi:"attachedStorageIds"`
	CreateTime         string   `pulumi:"createTime"`
	RepeatHours        []int    `pulumi:"repeatHours"`
	RepeatWeekdays     []int    `pulumi:"repeatWeekdays"`
	RetentionDays      int      `pulumi:"retentionDays"`
	SnapshotPolicyId   string   `pulumi:"snapshotPolicyId"`
	SnapshotPolicyName string   `pulumi:"snapshotPolicyName"`
	Status             string   `pulumi:"status"`
}

// SnapshotPoliciesSnapshotPolicyListInput is an input type that accepts SnapshotPoliciesSnapshotPolicyListArgs and SnapshotPoliciesSnapshotPolicyListOutput values.
// You can construct a concrete instance of `SnapshotPoliciesSnapshotPolicyListInput` via:
//
//          SnapshotPoliciesSnapshotPolicyListArgs{...}
type SnapshotPoliciesSnapshotPolicyListInput interface {
	pulumi.Input

	ToSnapshotPoliciesSnapshotPolicyListOutput() SnapshotPoliciesSnapshotPolicyListOutput
	ToSnapshotPoliciesSnapshotPolicyListOutputWithContext(context.Context) SnapshotPoliciesSnapshotPolicyListOutput
}

type SnapshotPoliciesSnapshotPolicyListArgs struct {
	AttachedStorageIds pulumi.StringArrayInput `pulumi:"attachedStorageIds"`
	CreateTime         pulumi.StringInput      `pulumi:"createTime"`
	RepeatHours        pulumi.IntArrayInput    `pulumi:"repeatHours"`
	RepeatWeekdays     pulumi.IntArrayInput    `pulumi:"repeatWeekdays"`
	RetentionDays      pulumi.IntInput         `pulumi:"retentionDays"`
	SnapshotPolicyId   pulumi.StringInput      `pulumi:"snapshotPolicyId"`
	SnapshotPolicyName pulumi.StringInput      `pulumi:"snapshotPolicyName"`
	Status             pulumi.StringInput      `pulumi:"status"`
}

func (SnapshotPoliciesSnapshotPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPoliciesSnapshotPolicyList)(nil)).Elem()
}

func (i SnapshotPoliciesSnapshotPolicyListArgs) ToSnapshotPoliciesSnapshotPolicyListOutput() SnapshotPoliciesSnapshotPolicyListOutput {
	return i.ToSnapshotPoliciesSnapshotPolicyListOutputWithContext(context.Background())
}

func (i SnapshotPoliciesSnapshotPolicyListArgs) ToSnapshotPoliciesSnapshotPolicyListOutputWithContext(ctx context.Context) SnapshotPoliciesSnapshotPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPoliciesSnapshotPolicyListOutput)
}

// SnapshotPoliciesSnapshotPolicyListArrayInput is an input type that accepts SnapshotPoliciesSnapshotPolicyListArray and SnapshotPoliciesSnapshotPolicyListArrayOutput values.
// You can construct a concrete instance of `SnapshotPoliciesSnapshotPolicyListArrayInput` via:
//
//          SnapshotPoliciesSnapshotPolicyListArray{ SnapshotPoliciesSnapshotPolicyListArgs{...} }
type SnapshotPoliciesSnapshotPolicyListArrayInput interface {
	pulumi.Input

	ToSnapshotPoliciesSnapshotPolicyListArrayOutput() SnapshotPoliciesSnapshotPolicyListArrayOutput
	ToSnapshotPoliciesSnapshotPolicyListArrayOutputWithContext(context.Context) SnapshotPoliciesSnapshotPolicyListArrayOutput
}

type SnapshotPoliciesSnapshotPolicyListArray []SnapshotPoliciesSnapshotPolicyListInput

func (SnapshotPoliciesSnapshotPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotPoliciesSnapshotPolicyList)(nil)).Elem()
}

func (i SnapshotPoliciesSnapshotPolicyListArray) ToSnapshotPoliciesSnapshotPolicyListArrayOutput() SnapshotPoliciesSnapshotPolicyListArrayOutput {
	return i.ToSnapshotPoliciesSnapshotPolicyListArrayOutputWithContext(context.Background())
}

func (i SnapshotPoliciesSnapshotPolicyListArray) ToSnapshotPoliciesSnapshotPolicyListArrayOutputWithContext(ctx context.Context) SnapshotPoliciesSnapshotPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPoliciesSnapshotPolicyListArrayOutput)
}

type SnapshotPoliciesSnapshotPolicyListOutput struct{ *pulumi.OutputState }

func (SnapshotPoliciesSnapshotPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPoliciesSnapshotPolicyList)(nil)).Elem()
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) ToSnapshotPoliciesSnapshotPolicyListOutput() SnapshotPoliciesSnapshotPolicyListOutput {
	return o
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) ToSnapshotPoliciesSnapshotPolicyListOutputWithContext(ctx context.Context) SnapshotPoliciesSnapshotPolicyListOutput {
	return o
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) AttachedStorageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) []string { return v.AttachedStorageIds }).(pulumi.StringArrayOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) RepeatHours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) []int { return v.RepeatHours }).(pulumi.IntArrayOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) RepeatWeekdays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) []int { return v.RepeatWeekdays }).(pulumi.IntArrayOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) int { return v.RetentionDays }).(pulumi.IntOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) SnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) string { return v.SnapshotPolicyId }).(pulumi.StringOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) SnapshotPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) string { return v.SnapshotPolicyName }).(pulumi.StringOutput)
}

func (o SnapshotPoliciesSnapshotPolicyListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPoliciesSnapshotPolicyList) string { return v.Status }).(pulumi.StringOutput)
}

type SnapshotPoliciesSnapshotPolicyListArrayOutput struct{ *pulumi.OutputState }

func (SnapshotPoliciesSnapshotPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotPoliciesSnapshotPolicyList)(nil)).Elem()
}

func (o SnapshotPoliciesSnapshotPolicyListArrayOutput) ToSnapshotPoliciesSnapshotPolicyListArrayOutput() SnapshotPoliciesSnapshotPolicyListArrayOutput {
	return o
}

func (o SnapshotPoliciesSnapshotPolicyListArrayOutput) ToSnapshotPoliciesSnapshotPolicyListArrayOutputWithContext(ctx context.Context) SnapshotPoliciesSnapshotPolicyListArrayOutput {
	return o
}

func (o SnapshotPoliciesSnapshotPolicyListArrayOutput) Index(i pulumi.IntInput) SnapshotPoliciesSnapshotPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotPoliciesSnapshotPolicyList {
		return vs[0].([]SnapshotPoliciesSnapshotPolicyList)[vs[1].(int)]
	}).(SnapshotPoliciesSnapshotPolicyListOutput)
}

type SnapshotsSnapshotList struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	CreateTime       string `pulumi:"createTime"`
	Encrypt          bool   `pulumi:"encrypt"`
	Percent          int    `pulumi:"percent"`
	ProjectId        int    `pulumi:"projectId"`
	SnapshotId       string `pulumi:"snapshotId"`
	SnapshotName     string `pulumi:"snapshotName"`
	StorageId        string `pulumi:"storageId"`
	StorageSize      int    `pulumi:"storageSize"`
	StorageUsage     string `pulumi:"storageUsage"`
}

// SnapshotsSnapshotListInput is an input type that accepts SnapshotsSnapshotListArgs and SnapshotsSnapshotListOutput values.
// You can construct a concrete instance of `SnapshotsSnapshotListInput` via:
//
//          SnapshotsSnapshotListArgs{...}
type SnapshotsSnapshotListInput interface {
	pulumi.Input

	ToSnapshotsSnapshotListOutput() SnapshotsSnapshotListOutput
	ToSnapshotsSnapshotListOutputWithContext(context.Context) SnapshotsSnapshotListOutput
}

type SnapshotsSnapshotListArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	CreateTime       pulumi.StringInput `pulumi:"createTime"`
	Encrypt          pulumi.BoolInput   `pulumi:"encrypt"`
	Percent          pulumi.IntInput    `pulumi:"percent"`
	ProjectId        pulumi.IntInput    `pulumi:"projectId"`
	SnapshotId       pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotName     pulumi.StringInput `pulumi:"snapshotName"`
	StorageId        pulumi.StringInput `pulumi:"storageId"`
	StorageSize      pulumi.IntInput    `pulumi:"storageSize"`
	StorageUsage     pulumi.StringInput `pulumi:"storageUsage"`
}

func (SnapshotsSnapshotListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsSnapshotList)(nil)).Elem()
}

func (i SnapshotsSnapshotListArgs) ToSnapshotsSnapshotListOutput() SnapshotsSnapshotListOutput {
	return i.ToSnapshotsSnapshotListOutputWithContext(context.Background())
}

func (i SnapshotsSnapshotListArgs) ToSnapshotsSnapshotListOutputWithContext(ctx context.Context) SnapshotsSnapshotListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotsSnapshotListOutput)
}

// SnapshotsSnapshotListArrayInput is an input type that accepts SnapshotsSnapshotListArray and SnapshotsSnapshotListArrayOutput values.
// You can construct a concrete instance of `SnapshotsSnapshotListArrayInput` via:
//
//          SnapshotsSnapshotListArray{ SnapshotsSnapshotListArgs{...} }
type SnapshotsSnapshotListArrayInput interface {
	pulumi.Input

	ToSnapshotsSnapshotListArrayOutput() SnapshotsSnapshotListArrayOutput
	ToSnapshotsSnapshotListArrayOutputWithContext(context.Context) SnapshotsSnapshotListArrayOutput
}

type SnapshotsSnapshotListArray []SnapshotsSnapshotListInput

func (SnapshotsSnapshotListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotsSnapshotList)(nil)).Elem()
}

func (i SnapshotsSnapshotListArray) ToSnapshotsSnapshotListArrayOutput() SnapshotsSnapshotListArrayOutput {
	return i.ToSnapshotsSnapshotListArrayOutputWithContext(context.Background())
}

func (i SnapshotsSnapshotListArray) ToSnapshotsSnapshotListArrayOutputWithContext(ctx context.Context) SnapshotsSnapshotListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotsSnapshotListArrayOutput)
}

type SnapshotsSnapshotListOutput struct{ *pulumi.OutputState }

func (SnapshotsSnapshotListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsSnapshotList)(nil)).Elem()
}

func (o SnapshotsSnapshotListOutput) ToSnapshotsSnapshotListOutput() SnapshotsSnapshotListOutput {
	return o
}

func (o SnapshotsSnapshotListOutput) ToSnapshotsSnapshotListOutputWithContext(ctx context.Context) SnapshotsSnapshotListOutput {
	return o
}

func (o SnapshotsSnapshotListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o SnapshotsSnapshotListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o SnapshotsSnapshotListOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

func (o SnapshotsSnapshotListOutput) Percent() pulumi.IntOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) int { return v.Percent }).(pulumi.IntOutput)
}

func (o SnapshotsSnapshotListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o SnapshotsSnapshotListOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o SnapshotsSnapshotListOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.SnapshotName }).(pulumi.StringOutput)
}

func (o SnapshotsSnapshotListOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.StorageId }).(pulumi.StringOutput)
}

func (o SnapshotsSnapshotListOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) int { return v.StorageSize }).(pulumi.IntOutput)
}

func (o SnapshotsSnapshotListOutput) StorageUsage() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsSnapshotList) string { return v.StorageUsage }).(pulumi.StringOutput)
}

type SnapshotsSnapshotListArrayOutput struct{ *pulumi.OutputState }

func (SnapshotsSnapshotListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotsSnapshotList)(nil)).Elem()
}

func (o SnapshotsSnapshotListArrayOutput) ToSnapshotsSnapshotListArrayOutput() SnapshotsSnapshotListArrayOutput {
	return o
}

func (o SnapshotsSnapshotListArrayOutput) ToSnapshotsSnapshotListArrayOutputWithContext(ctx context.Context) SnapshotsSnapshotListArrayOutput {
	return o
}

func (o SnapshotsSnapshotListArrayOutput) Index(i pulumi.IntInput) SnapshotsSnapshotListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotsSnapshotList {
		return vs[0].([]SnapshotsSnapshotList)[vs[1].(int)]
	}).(SnapshotsSnapshotListOutput)
}

type StoragesStorageList struct {
	Attached              bool                   `pulumi:"attached"`
	AvailabilityZone      string                 `pulumi:"availabilityZone"`
	ChargeType            string                 `pulumi:"chargeType"`
	CreateTime            string                 `pulumi:"createTime"`
	Encrypt               bool                   `pulumi:"encrypt"`
	InstanceId            string                 `pulumi:"instanceId"`
	PrepaidRenewFlag      string                 `pulumi:"prepaidRenewFlag"`
	ProjectId             int                    `pulumi:"projectId"`
	Status                string                 `pulumi:"status"`
	StorageId             string                 `pulumi:"storageId"`
	StorageName           string                 `pulumi:"storageName"`
	StorageSize           int                    `pulumi:"storageSize"`
	StorageType           string                 `pulumi:"storageType"`
	StorageUsage          string                 `pulumi:"storageUsage"`
	Tags                  map[string]interface{} `pulumi:"tags"`
	ThroughputPerformance int                    `pulumi:"throughputPerformance"`
}

// StoragesStorageListInput is an input type that accepts StoragesStorageListArgs and StoragesStorageListOutput values.
// You can construct a concrete instance of `StoragesStorageListInput` via:
//
//          StoragesStorageListArgs{...}
type StoragesStorageListInput interface {
	pulumi.Input

	ToStoragesStorageListOutput() StoragesStorageListOutput
	ToStoragesStorageListOutputWithContext(context.Context) StoragesStorageListOutput
}

type StoragesStorageListArgs struct {
	Attached              pulumi.BoolInput   `pulumi:"attached"`
	AvailabilityZone      pulumi.StringInput `pulumi:"availabilityZone"`
	ChargeType            pulumi.StringInput `pulumi:"chargeType"`
	CreateTime            pulumi.StringInput `pulumi:"createTime"`
	Encrypt               pulumi.BoolInput   `pulumi:"encrypt"`
	InstanceId            pulumi.StringInput `pulumi:"instanceId"`
	PrepaidRenewFlag      pulumi.StringInput `pulumi:"prepaidRenewFlag"`
	ProjectId             pulumi.IntInput    `pulumi:"projectId"`
	Status                pulumi.StringInput `pulumi:"status"`
	StorageId             pulumi.StringInput `pulumi:"storageId"`
	StorageName           pulumi.StringInput `pulumi:"storageName"`
	StorageSize           pulumi.IntInput    `pulumi:"storageSize"`
	StorageType           pulumi.StringInput `pulumi:"storageType"`
	StorageUsage          pulumi.StringInput `pulumi:"storageUsage"`
	Tags                  pulumi.MapInput    `pulumi:"tags"`
	ThroughputPerformance pulumi.IntInput    `pulumi:"throughputPerformance"`
}

func (StoragesStorageListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StoragesStorageList)(nil)).Elem()
}

func (i StoragesStorageListArgs) ToStoragesStorageListOutput() StoragesStorageListOutput {
	return i.ToStoragesStorageListOutputWithContext(context.Background())
}

func (i StoragesStorageListArgs) ToStoragesStorageListOutputWithContext(ctx context.Context) StoragesStorageListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragesStorageListOutput)
}

// StoragesStorageListArrayInput is an input type that accepts StoragesStorageListArray and StoragesStorageListArrayOutput values.
// You can construct a concrete instance of `StoragesStorageListArrayInput` via:
//
//          StoragesStorageListArray{ StoragesStorageListArgs{...} }
type StoragesStorageListArrayInput interface {
	pulumi.Input

	ToStoragesStorageListArrayOutput() StoragesStorageListArrayOutput
	ToStoragesStorageListArrayOutputWithContext(context.Context) StoragesStorageListArrayOutput
}

type StoragesStorageListArray []StoragesStorageListInput

func (StoragesStorageListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StoragesStorageList)(nil)).Elem()
}

func (i StoragesStorageListArray) ToStoragesStorageListArrayOutput() StoragesStorageListArrayOutput {
	return i.ToStoragesStorageListArrayOutputWithContext(context.Background())
}

func (i StoragesStorageListArray) ToStoragesStorageListArrayOutputWithContext(ctx context.Context) StoragesStorageListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragesStorageListArrayOutput)
}

type StoragesStorageListOutput struct{ *pulumi.OutputState }

func (StoragesStorageListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoragesStorageList)(nil)).Elem()
}

func (o StoragesStorageListOutput) ToStoragesStorageListOutput() StoragesStorageListOutput {
	return o
}

func (o StoragesStorageListOutput) ToStoragesStorageListOutputWithContext(ctx context.Context) StoragesStorageListOutput {
	return o
}

func (o StoragesStorageListOutput) Attached() pulumi.BoolOutput {
	return o.ApplyT(func(v StoragesStorageList) bool { return v.Attached }).(pulumi.BoolOutput)
}

func (o StoragesStorageListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.ChargeType }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v StoragesStorageList) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

func (o StoragesStorageListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) PrepaidRenewFlag() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.PrepaidRenewFlag }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v StoragesStorageList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o StoragesStorageListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.Status }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.StorageId }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) StorageName() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.StorageName }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v StoragesStorageList) int { return v.StorageSize }).(pulumi.IntOutput)
}

func (o StoragesStorageListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.StorageType }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) StorageUsage() pulumi.StringOutput {
	return o.ApplyT(func(v StoragesStorageList) string { return v.StorageUsage }).(pulumi.StringOutput)
}

func (o StoragesStorageListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v StoragesStorageList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o StoragesStorageListOutput) ThroughputPerformance() pulumi.IntOutput {
	return o.ApplyT(func(v StoragesStorageList) int { return v.ThroughputPerformance }).(pulumi.IntOutput)
}

type StoragesStorageListArrayOutput struct{ *pulumi.OutputState }

func (StoragesStorageListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StoragesStorageList)(nil)).Elem()
}

func (o StoragesStorageListArrayOutput) ToStoragesStorageListArrayOutput() StoragesStorageListArrayOutput {
	return o
}

func (o StoragesStorageListArrayOutput) ToStoragesStorageListArrayOutputWithContext(ctx context.Context) StoragesStorageListArrayOutput {
	return o
}

func (o StoragesStorageListArrayOutput) Index(i pulumi.IntInput) StoragesStorageListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StoragesStorageList {
		return vs[0].([]StoragesStorageList)[vs[1].(int)]
	}).(StoragesStorageListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPoliciesSnapshotPolicyListInput)(nil)).Elem(), SnapshotPoliciesSnapshotPolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPoliciesSnapshotPolicyListArrayInput)(nil)).Elem(), SnapshotPoliciesSnapshotPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotsSnapshotListInput)(nil)).Elem(), SnapshotsSnapshotListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotsSnapshotListArrayInput)(nil)).Elem(), SnapshotsSnapshotListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragesStorageListInput)(nil)).Elem(), StoragesStorageListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragesStorageListArrayInput)(nil)).Elem(), StoragesStorageListArray{})
	pulumi.RegisterOutputType(SnapshotPoliciesSnapshotPolicyListOutput{})
	pulumi.RegisterOutputType(SnapshotPoliciesSnapshotPolicyListArrayOutput{})
	pulumi.RegisterOutputType(SnapshotsSnapshotListOutput{})
	pulumi.RegisterOutputType(SnapshotsSnapshotListArrayOutput{})
	pulumi.RegisterOutputType(StoragesStorageListOutput{})
	pulumi.RegisterOutputType(StoragesStorageListArrayOutput{})
}
