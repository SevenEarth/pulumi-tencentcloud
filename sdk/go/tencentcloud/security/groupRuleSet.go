// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create security group rule. This resource is similar with tencentcloud_security_group_lite_rule, rules can be ordered and configure descriptions.
//
// > **NOTE:** This resource must exclusive in one security group, do not declare additional rule resources of this security group elsewhere.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sglab1Group, err := Security.NewGroup(ctx, "sglab1Group", &Security.GroupArgs{
// 			Description: pulumi.String("favourite sg_1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = Security.NewGroupRuleSet(ctx, "sglab1GroupRuleSet", &Security.GroupRuleSetArgs{
// 			SecurityGroupId: sglab1Group.ID(),
// 			Ingresses: security.GroupRuleSetIngressArray{
// 				&security.GroupRuleSetIngressArgs{
// 					CidrBlock:   pulumi.String("10.0.0.0/16"),
// 					Protocol:    pulumi.String("TCP"),
// 					Port:        pulumi.String("80"),
// 					Action:      pulumi.String("ACCEPT"),
// 					Description: pulumi.String("favourite sg rule_1"),
// 				},
// 				&security.GroupRuleSetIngressArgs{
// 					Protocol:         pulumi.String("TCP"),
// 					Port:             pulumi.String("80"),
// 					Action:           pulumi.String("ACCEPT"),
// 					SourceSecurityId: pulumi.Any(tencentcloud_security_group.Sglab_3.Id),
// 					Description:      pulumi.String("favourite sg rule_2"),
// 				},
// 			},
// 			Egresses: security.GroupRuleSetEgressArray{
// 				&security.GroupRuleSetEgressArgs{
// 					Action:            pulumi.String("ACCEPT"),
// 					AddressTemplateId: pulumi.String("ipm-xxxxxxxx"),
// 					Description:       pulumi.String("Allow address template"),
// 				},
// 				&security.GroupRuleSetEgressArgs{
// 					Action:               pulumi.String("ACCEPT"),
// 					ServiceTemplateGroup: pulumi.String("ppmg-xxxxxxxx"),
// 					Description:          pulumi.String("Allow protocol template"),
// 				},
// 				&security.GroupRuleSetEgressArgs{
// 					CidrBlock:   pulumi.String("10.0.0.0/16"),
// 					Protocol:    pulumi.String("TCP"),
// 					Port:        pulumi.String("80"),
// 					Action:      pulumi.String("DROP"),
// 					Description: pulumi.String("favourite sg egress rule"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Resource tencentcloud_security_group_rule_set can be imported by passing security grou id
//
// ```sh
//  $ pulumi import tencentcloud:Security/groupRuleSet:GroupRuleSet sglab_1 sg-xxxxxxxx
// ```
type GroupRuleSet struct {
	pulumi.CustomResourceState

	// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Egresses GroupRuleSetEgressArrayOutput `pulumi:"egresses"`
	// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Ingresses GroupRuleSetIngressArrayOutput `pulumi:"ingresses"`
	// ID of the security group to be queried.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Security policies version, auto increment for every update.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewGroupRuleSet registers a new resource with the given unique name, arguments, and options.
func NewGroupRuleSet(ctx *pulumi.Context,
	name string, args *GroupRuleSetArgs, opts ...pulumi.ResourceOption) (*GroupRuleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GroupRuleSet
	err := ctx.RegisterResource("tencentcloud:Security/groupRuleSet:GroupRuleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupRuleSet gets an existing GroupRuleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupRuleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupRuleSetState, opts ...pulumi.ResourceOption) (*GroupRuleSet, error) {
	var resource GroupRuleSet
	err := ctx.ReadResource("tencentcloud:Security/groupRuleSet:GroupRuleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupRuleSet resources.
type groupRuleSetState struct {
	// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Egresses []GroupRuleSetEgress `pulumi:"egresses"`
	// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Ingresses []GroupRuleSetIngress `pulumi:"ingresses"`
	// ID of the security group to be queried.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Security policies version, auto increment for every update.
	Version *string `pulumi:"version"`
}

type GroupRuleSetState struct {
	// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Egresses GroupRuleSetEgressArrayInput
	// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Ingresses GroupRuleSetIngressArrayInput
	// ID of the security group to be queried.
	SecurityGroupId pulumi.StringPtrInput
	// Security policies version, auto increment for every update.
	Version pulumi.StringPtrInput
}

func (GroupRuleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupRuleSetState)(nil)).Elem()
}

type groupRuleSetArgs struct {
	// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Egresses []GroupRuleSetEgress `pulumi:"egresses"`
	// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Ingresses []GroupRuleSetIngress `pulumi:"ingresses"`
	// ID of the security group to be queried.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a GroupRuleSet resource.
type GroupRuleSetArgs struct {
	// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Egresses GroupRuleSetEgressArrayInput
	// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
	Ingresses GroupRuleSetIngressArrayInput
	// ID of the security group to be queried.
	SecurityGroupId pulumi.StringInput
}

func (GroupRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupRuleSetArgs)(nil)).Elem()
}

type GroupRuleSetInput interface {
	pulumi.Input

	ToGroupRuleSetOutput() GroupRuleSetOutput
	ToGroupRuleSetOutputWithContext(ctx context.Context) GroupRuleSetOutput
}

func (*GroupRuleSet) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleSet)(nil)).Elem()
}

func (i *GroupRuleSet) ToGroupRuleSetOutput() GroupRuleSetOutput {
	return i.ToGroupRuleSetOutputWithContext(context.Background())
}

func (i *GroupRuleSet) ToGroupRuleSetOutputWithContext(ctx context.Context) GroupRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleSetOutput)
}

// GroupRuleSetArrayInput is an input type that accepts GroupRuleSetArray and GroupRuleSetArrayOutput values.
// You can construct a concrete instance of `GroupRuleSetArrayInput` via:
//
//          GroupRuleSetArray{ GroupRuleSetArgs{...} }
type GroupRuleSetArrayInput interface {
	pulumi.Input

	ToGroupRuleSetArrayOutput() GroupRuleSetArrayOutput
	ToGroupRuleSetArrayOutputWithContext(context.Context) GroupRuleSetArrayOutput
}

type GroupRuleSetArray []GroupRuleSetInput

func (GroupRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupRuleSet)(nil)).Elem()
}

func (i GroupRuleSetArray) ToGroupRuleSetArrayOutput() GroupRuleSetArrayOutput {
	return i.ToGroupRuleSetArrayOutputWithContext(context.Background())
}

func (i GroupRuleSetArray) ToGroupRuleSetArrayOutputWithContext(ctx context.Context) GroupRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleSetArrayOutput)
}

// GroupRuleSetMapInput is an input type that accepts GroupRuleSetMap and GroupRuleSetMapOutput values.
// You can construct a concrete instance of `GroupRuleSetMapInput` via:
//
//          GroupRuleSetMap{ "key": GroupRuleSetArgs{...} }
type GroupRuleSetMapInput interface {
	pulumi.Input

	ToGroupRuleSetMapOutput() GroupRuleSetMapOutput
	ToGroupRuleSetMapOutputWithContext(context.Context) GroupRuleSetMapOutput
}

type GroupRuleSetMap map[string]GroupRuleSetInput

func (GroupRuleSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupRuleSet)(nil)).Elem()
}

func (i GroupRuleSetMap) ToGroupRuleSetMapOutput() GroupRuleSetMapOutput {
	return i.ToGroupRuleSetMapOutputWithContext(context.Background())
}

func (i GroupRuleSetMap) ToGroupRuleSetMapOutputWithContext(ctx context.Context) GroupRuleSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleSetMapOutput)
}

type GroupRuleSetOutput struct{ *pulumi.OutputState }

func (GroupRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleSet)(nil)).Elem()
}

func (o GroupRuleSetOutput) ToGroupRuleSetOutput() GroupRuleSetOutput {
	return o
}

func (o GroupRuleSetOutput) ToGroupRuleSetOutputWithContext(ctx context.Context) GroupRuleSetOutput {
	return o
}

// List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
func (o GroupRuleSetOutput) Egresses() GroupRuleSetEgressArrayOutput {
	return o.ApplyT(func(v *GroupRuleSet) GroupRuleSetEgressArrayOutput { return v.Egresses }).(GroupRuleSetEgressArrayOutput)
}

// List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
func (o GroupRuleSetOutput) Ingresses() GroupRuleSetIngressArrayOutput {
	return o.ApplyT(func(v *GroupRuleSet) GroupRuleSetIngressArrayOutput { return v.Ingresses }).(GroupRuleSetIngressArrayOutput)
}

// ID of the security group to be queried.
func (o GroupRuleSetOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupRuleSet) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Security policies version, auto increment for every update.
func (o GroupRuleSetOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupRuleSet) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type GroupRuleSetArrayOutput struct{ *pulumi.OutputState }

func (GroupRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupRuleSet)(nil)).Elem()
}

func (o GroupRuleSetArrayOutput) ToGroupRuleSetArrayOutput() GroupRuleSetArrayOutput {
	return o
}

func (o GroupRuleSetArrayOutput) ToGroupRuleSetArrayOutputWithContext(ctx context.Context) GroupRuleSetArrayOutput {
	return o
}

func (o GroupRuleSetArrayOutput) Index(i pulumi.IntInput) GroupRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GroupRuleSet {
		return vs[0].([]*GroupRuleSet)[vs[1].(int)]
	}).(GroupRuleSetOutput)
}

type GroupRuleSetMapOutput struct{ *pulumi.OutputState }

func (GroupRuleSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupRuleSet)(nil)).Elem()
}

func (o GroupRuleSetMapOutput) ToGroupRuleSetMapOutput() GroupRuleSetMapOutput {
	return o
}

func (o GroupRuleSetMapOutput) ToGroupRuleSetMapOutputWithContext(ctx context.Context) GroupRuleSetMapOutput {
	return o
}

func (o GroupRuleSetMapOutput) MapIndex(k pulumi.StringInput) GroupRuleSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GroupRuleSet {
		return vs[0].(map[string]*GroupRuleSet)[vs[1].(string)]
	}).(GroupRuleSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleSetInput)(nil)).Elem(), &GroupRuleSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleSetArrayInput)(nil)).Elem(), GroupRuleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleSetMapInput)(nil)).Elem(), GroupRuleSetMap{})
	pulumi.RegisterOutputType(GroupRuleSetOutput{})
	pulumi.RegisterOutputType(GroupRuleSetArrayOutput{})
	pulumi.RegisterOutputType(GroupRuleSetMapOutput{})
}
