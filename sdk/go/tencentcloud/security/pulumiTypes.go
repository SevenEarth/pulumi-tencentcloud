// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GroupRuleAddressTemplate struct {
	GroupId    *string `pulumi:"groupId"`
	TemplateId *string `pulumi:"templateId"`
}

// GroupRuleAddressTemplateInput is an input type that accepts GroupRuleAddressTemplateArgs and GroupRuleAddressTemplateOutput values.
// You can construct a concrete instance of `GroupRuleAddressTemplateInput` via:
//
//          GroupRuleAddressTemplateArgs{...}
type GroupRuleAddressTemplateInput interface {
	pulumi.Input

	ToGroupRuleAddressTemplateOutput() GroupRuleAddressTemplateOutput
	ToGroupRuleAddressTemplateOutputWithContext(context.Context) GroupRuleAddressTemplateOutput
}

type GroupRuleAddressTemplateArgs struct {
	GroupId    pulumi.StringPtrInput `pulumi:"groupId"`
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
}

func (GroupRuleAddressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupRuleAddressTemplate)(nil)).Elem()
}

func (i GroupRuleAddressTemplateArgs) ToGroupRuleAddressTemplateOutput() GroupRuleAddressTemplateOutput {
	return i.ToGroupRuleAddressTemplateOutputWithContext(context.Background())
}

func (i GroupRuleAddressTemplateArgs) ToGroupRuleAddressTemplateOutputWithContext(ctx context.Context) GroupRuleAddressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleAddressTemplateOutput)
}

func (i GroupRuleAddressTemplateArgs) ToGroupRuleAddressTemplatePtrOutput() GroupRuleAddressTemplatePtrOutput {
	return i.ToGroupRuleAddressTemplatePtrOutputWithContext(context.Background())
}

func (i GroupRuleAddressTemplateArgs) ToGroupRuleAddressTemplatePtrOutputWithContext(ctx context.Context) GroupRuleAddressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleAddressTemplateOutput).ToGroupRuleAddressTemplatePtrOutputWithContext(ctx)
}

// GroupRuleAddressTemplatePtrInput is an input type that accepts GroupRuleAddressTemplateArgs, GroupRuleAddressTemplatePtr and GroupRuleAddressTemplatePtrOutput values.
// You can construct a concrete instance of `GroupRuleAddressTemplatePtrInput` via:
//
//          GroupRuleAddressTemplateArgs{...}
//
//  or:
//
//          nil
type GroupRuleAddressTemplatePtrInput interface {
	pulumi.Input

	ToGroupRuleAddressTemplatePtrOutput() GroupRuleAddressTemplatePtrOutput
	ToGroupRuleAddressTemplatePtrOutputWithContext(context.Context) GroupRuleAddressTemplatePtrOutput
}

type groupRuleAddressTemplatePtrType GroupRuleAddressTemplateArgs

func GroupRuleAddressTemplatePtr(v *GroupRuleAddressTemplateArgs) GroupRuleAddressTemplatePtrInput {
	return (*groupRuleAddressTemplatePtrType)(v)
}

func (*groupRuleAddressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleAddressTemplate)(nil)).Elem()
}

func (i *groupRuleAddressTemplatePtrType) ToGroupRuleAddressTemplatePtrOutput() GroupRuleAddressTemplatePtrOutput {
	return i.ToGroupRuleAddressTemplatePtrOutputWithContext(context.Background())
}

func (i *groupRuleAddressTemplatePtrType) ToGroupRuleAddressTemplatePtrOutputWithContext(ctx context.Context) GroupRuleAddressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleAddressTemplatePtrOutput)
}

type GroupRuleAddressTemplateOutput struct{ *pulumi.OutputState }

func (GroupRuleAddressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupRuleAddressTemplate)(nil)).Elem()
}

func (o GroupRuleAddressTemplateOutput) ToGroupRuleAddressTemplateOutput() GroupRuleAddressTemplateOutput {
	return o
}

func (o GroupRuleAddressTemplateOutput) ToGroupRuleAddressTemplateOutputWithContext(ctx context.Context) GroupRuleAddressTemplateOutput {
	return o
}

func (o GroupRuleAddressTemplateOutput) ToGroupRuleAddressTemplatePtrOutput() GroupRuleAddressTemplatePtrOutput {
	return o.ToGroupRuleAddressTemplatePtrOutputWithContext(context.Background())
}

func (o GroupRuleAddressTemplateOutput) ToGroupRuleAddressTemplatePtrOutputWithContext(ctx context.Context) GroupRuleAddressTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupRuleAddressTemplate) *GroupRuleAddressTemplate {
		return &v
	}).(GroupRuleAddressTemplatePtrOutput)
}

func (o GroupRuleAddressTemplateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupRuleAddressTemplate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o GroupRuleAddressTemplateOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupRuleAddressTemplate) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

type GroupRuleAddressTemplatePtrOutput struct{ *pulumi.OutputState }

func (GroupRuleAddressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleAddressTemplate)(nil)).Elem()
}

func (o GroupRuleAddressTemplatePtrOutput) ToGroupRuleAddressTemplatePtrOutput() GroupRuleAddressTemplatePtrOutput {
	return o
}

func (o GroupRuleAddressTemplatePtrOutput) ToGroupRuleAddressTemplatePtrOutputWithContext(ctx context.Context) GroupRuleAddressTemplatePtrOutput {
	return o
}

func (o GroupRuleAddressTemplatePtrOutput) Elem() GroupRuleAddressTemplateOutput {
	return o.ApplyT(func(v *GroupRuleAddressTemplate) GroupRuleAddressTemplate {
		if v != nil {
			return *v
		}
		var ret GroupRuleAddressTemplate
		return ret
	}).(GroupRuleAddressTemplateOutput)
}

func (o GroupRuleAddressTemplatePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupRuleAddressTemplate) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

func (o GroupRuleAddressTemplatePtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupRuleAddressTemplate) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

type GroupRuleProtocolTemplate struct {
	GroupId    *string `pulumi:"groupId"`
	TemplateId *string `pulumi:"templateId"`
}

// GroupRuleProtocolTemplateInput is an input type that accepts GroupRuleProtocolTemplateArgs and GroupRuleProtocolTemplateOutput values.
// You can construct a concrete instance of `GroupRuleProtocolTemplateInput` via:
//
//          GroupRuleProtocolTemplateArgs{...}
type GroupRuleProtocolTemplateInput interface {
	pulumi.Input

	ToGroupRuleProtocolTemplateOutput() GroupRuleProtocolTemplateOutput
	ToGroupRuleProtocolTemplateOutputWithContext(context.Context) GroupRuleProtocolTemplateOutput
}

type GroupRuleProtocolTemplateArgs struct {
	GroupId    pulumi.StringPtrInput `pulumi:"groupId"`
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
}

func (GroupRuleProtocolTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupRuleProtocolTemplate)(nil)).Elem()
}

func (i GroupRuleProtocolTemplateArgs) ToGroupRuleProtocolTemplateOutput() GroupRuleProtocolTemplateOutput {
	return i.ToGroupRuleProtocolTemplateOutputWithContext(context.Background())
}

func (i GroupRuleProtocolTemplateArgs) ToGroupRuleProtocolTemplateOutputWithContext(ctx context.Context) GroupRuleProtocolTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleProtocolTemplateOutput)
}

func (i GroupRuleProtocolTemplateArgs) ToGroupRuleProtocolTemplatePtrOutput() GroupRuleProtocolTemplatePtrOutput {
	return i.ToGroupRuleProtocolTemplatePtrOutputWithContext(context.Background())
}

func (i GroupRuleProtocolTemplateArgs) ToGroupRuleProtocolTemplatePtrOutputWithContext(ctx context.Context) GroupRuleProtocolTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleProtocolTemplateOutput).ToGroupRuleProtocolTemplatePtrOutputWithContext(ctx)
}

// GroupRuleProtocolTemplatePtrInput is an input type that accepts GroupRuleProtocolTemplateArgs, GroupRuleProtocolTemplatePtr and GroupRuleProtocolTemplatePtrOutput values.
// You can construct a concrete instance of `GroupRuleProtocolTemplatePtrInput` via:
//
//          GroupRuleProtocolTemplateArgs{...}
//
//  or:
//
//          nil
type GroupRuleProtocolTemplatePtrInput interface {
	pulumi.Input

	ToGroupRuleProtocolTemplatePtrOutput() GroupRuleProtocolTemplatePtrOutput
	ToGroupRuleProtocolTemplatePtrOutputWithContext(context.Context) GroupRuleProtocolTemplatePtrOutput
}

type groupRuleProtocolTemplatePtrType GroupRuleProtocolTemplateArgs

func GroupRuleProtocolTemplatePtr(v *GroupRuleProtocolTemplateArgs) GroupRuleProtocolTemplatePtrInput {
	return (*groupRuleProtocolTemplatePtrType)(v)
}

func (*groupRuleProtocolTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleProtocolTemplate)(nil)).Elem()
}

func (i *groupRuleProtocolTemplatePtrType) ToGroupRuleProtocolTemplatePtrOutput() GroupRuleProtocolTemplatePtrOutput {
	return i.ToGroupRuleProtocolTemplatePtrOutputWithContext(context.Background())
}

func (i *groupRuleProtocolTemplatePtrType) ToGroupRuleProtocolTemplatePtrOutputWithContext(ctx context.Context) GroupRuleProtocolTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupRuleProtocolTemplatePtrOutput)
}

type GroupRuleProtocolTemplateOutput struct{ *pulumi.OutputState }

func (GroupRuleProtocolTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupRuleProtocolTemplate)(nil)).Elem()
}

func (o GroupRuleProtocolTemplateOutput) ToGroupRuleProtocolTemplateOutput() GroupRuleProtocolTemplateOutput {
	return o
}

func (o GroupRuleProtocolTemplateOutput) ToGroupRuleProtocolTemplateOutputWithContext(ctx context.Context) GroupRuleProtocolTemplateOutput {
	return o
}

func (o GroupRuleProtocolTemplateOutput) ToGroupRuleProtocolTemplatePtrOutput() GroupRuleProtocolTemplatePtrOutput {
	return o.ToGroupRuleProtocolTemplatePtrOutputWithContext(context.Background())
}

func (o GroupRuleProtocolTemplateOutput) ToGroupRuleProtocolTemplatePtrOutputWithContext(ctx context.Context) GroupRuleProtocolTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupRuleProtocolTemplate) *GroupRuleProtocolTemplate {
		return &v
	}).(GroupRuleProtocolTemplatePtrOutput)
}

func (o GroupRuleProtocolTemplateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupRuleProtocolTemplate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o GroupRuleProtocolTemplateOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupRuleProtocolTemplate) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

type GroupRuleProtocolTemplatePtrOutput struct{ *pulumi.OutputState }

func (GroupRuleProtocolTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupRuleProtocolTemplate)(nil)).Elem()
}

func (o GroupRuleProtocolTemplatePtrOutput) ToGroupRuleProtocolTemplatePtrOutput() GroupRuleProtocolTemplatePtrOutput {
	return o
}

func (o GroupRuleProtocolTemplatePtrOutput) ToGroupRuleProtocolTemplatePtrOutputWithContext(ctx context.Context) GroupRuleProtocolTemplatePtrOutput {
	return o
}

func (o GroupRuleProtocolTemplatePtrOutput) Elem() GroupRuleProtocolTemplateOutput {
	return o.ApplyT(func(v *GroupRuleProtocolTemplate) GroupRuleProtocolTemplate {
		if v != nil {
			return *v
		}
		var ret GroupRuleProtocolTemplate
		return ret
	}).(GroupRuleProtocolTemplateOutput)
}

func (o GroupRuleProtocolTemplatePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupRuleProtocolTemplate) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

func (o GroupRuleProtocolTemplatePtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupRuleProtocolTemplate) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

type GroupsSecurityGroup struct {
	BeAssociateCount int                    `pulumi:"beAssociateCount"`
	CreateTime       string                 `pulumi:"createTime"`
	Description      string                 `pulumi:"description"`
	Egresses         []string               `pulumi:"egresses"`
	Ingresses        []string               `pulumi:"ingresses"`
	Name             string                 `pulumi:"name"`
	ProjectId        int                    `pulumi:"projectId"`
	SecurityGroupId  string                 `pulumi:"securityGroupId"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// GroupsSecurityGroupInput is an input type that accepts GroupsSecurityGroupArgs and GroupsSecurityGroupOutput values.
// You can construct a concrete instance of `GroupsSecurityGroupInput` via:
//
//          GroupsSecurityGroupArgs{...}
type GroupsSecurityGroupInput interface {
	pulumi.Input

	ToGroupsSecurityGroupOutput() GroupsSecurityGroupOutput
	ToGroupsSecurityGroupOutputWithContext(context.Context) GroupsSecurityGroupOutput
}

type GroupsSecurityGroupArgs struct {
	BeAssociateCount pulumi.IntInput         `pulumi:"beAssociateCount"`
	CreateTime       pulumi.StringInput      `pulumi:"createTime"`
	Description      pulumi.StringInput      `pulumi:"description"`
	Egresses         pulumi.StringArrayInput `pulumi:"egresses"`
	Ingresses        pulumi.StringArrayInput `pulumi:"ingresses"`
	Name             pulumi.StringInput      `pulumi:"name"`
	ProjectId        pulumi.IntInput         `pulumi:"projectId"`
	SecurityGroupId  pulumi.StringInput      `pulumi:"securityGroupId"`
	Tags             pulumi.MapInput         `pulumi:"tags"`
}

func (GroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupsSecurityGroup)(nil)).Elem()
}

func (i GroupsSecurityGroupArgs) ToGroupsSecurityGroupOutput() GroupsSecurityGroupOutput {
	return i.ToGroupsSecurityGroupOutputWithContext(context.Background())
}

func (i GroupsSecurityGroupArgs) ToGroupsSecurityGroupOutputWithContext(ctx context.Context) GroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupsSecurityGroupOutput)
}

// GroupsSecurityGroupArrayInput is an input type that accepts GroupsSecurityGroupArray and GroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GroupsSecurityGroupArrayInput` via:
//
//          GroupsSecurityGroupArray{ GroupsSecurityGroupArgs{...} }
type GroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToGroupsSecurityGroupArrayOutput() GroupsSecurityGroupArrayOutput
	ToGroupsSecurityGroupArrayOutputWithContext(context.Context) GroupsSecurityGroupArrayOutput
}

type GroupsSecurityGroupArray []GroupsSecurityGroupInput

func (GroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupsSecurityGroup)(nil)).Elem()
}

func (i GroupsSecurityGroupArray) ToGroupsSecurityGroupArrayOutput() GroupsSecurityGroupArrayOutput {
	return i.ToGroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GroupsSecurityGroupArray) ToGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupsSecurityGroupArrayOutput)
}

type GroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (GroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupsSecurityGroup)(nil)).Elem()
}

func (o GroupsSecurityGroupOutput) ToGroupsSecurityGroupOutput() GroupsSecurityGroupOutput {
	return o
}

func (o GroupsSecurityGroupOutput) ToGroupsSecurityGroupOutputWithContext(ctx context.Context) GroupsSecurityGroupOutput {
	return o
}

func (o GroupsSecurityGroupOutput) BeAssociateCount() pulumi.IntOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) int { return v.BeAssociateCount }).(pulumi.IntOutput)
}

func (o GroupsSecurityGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GroupsSecurityGroupOutput) Egresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) []string { return v.Egresses }).(pulumi.StringArrayOutput)
}

func (o GroupsSecurityGroupOutput) Ingresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) []string { return v.Ingresses }).(pulumi.StringArrayOutput)
}

func (o GroupsSecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GroupsSecurityGroupOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o GroupsSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GroupsSecurityGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GroupsSecurityGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupsSecurityGroup)(nil)).Elem()
}

func (o GroupsSecurityGroupArrayOutput) ToGroupsSecurityGroupArrayOutput() GroupsSecurityGroupArrayOutput {
	return o
}

func (o GroupsSecurityGroupArrayOutput) ToGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GroupsSecurityGroupArrayOutput {
	return o
}

func (o GroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) GroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupsSecurityGroup {
		return vs[0].([]GroupsSecurityGroup)[vs[1].(int)]
	}).(GroupsSecurityGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleAddressTemplateInput)(nil)).Elem(), GroupRuleAddressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleAddressTemplatePtrInput)(nil)).Elem(), GroupRuleAddressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleProtocolTemplateInput)(nil)).Elem(), GroupRuleProtocolTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupRuleProtocolTemplatePtrInput)(nil)).Elem(), GroupRuleProtocolTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupsSecurityGroupInput)(nil)).Elem(), GroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupsSecurityGroupArrayInput)(nil)).Elem(), GroupsSecurityGroupArray{})
	pulumi.RegisterOutputType(GroupRuleAddressTemplateOutput{})
	pulumi.RegisterOutputType(GroupRuleAddressTemplatePtrOutput{})
	pulumi.RegisterOutputType(GroupRuleProtocolTemplateOutput{})
	pulumi.RegisterOutputType(GroupRuleProtocolTemplatePtrOutput{})
	pulumi.RegisterOutputType(GroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(GroupsSecurityGroupArrayOutput{})
}
