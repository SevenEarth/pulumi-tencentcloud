// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ProcedureTemplates(ctx *pulumi.Context, args *ProcedureTemplatesArgs, opts ...pulumi.InvokeOption) (*ProcedureTemplatesResult, error) {
	var rv ProcedureTemplatesResult
	err := ctx.Invoke("tencentcloud:Vod/procedureTemplates:ProcedureTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ProcedureTemplates.
type ProcedureTemplatesArgs struct {
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	Type             *string `pulumi:"type"`
}

// A collection of values returned by ProcedureTemplates.
type ProcedureTemplatesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                           `pulumi:"id"`
	Name             *string                          `pulumi:"name"`
	ResultOutputFile *string                          `pulumi:"resultOutputFile"`
	SubAppId         *int                             `pulumi:"subAppId"`
	TemplateLists    []ProcedureTemplatesTemplateList `pulumi:"templateLists"`
	Type             *string                          `pulumi:"type"`
}

func ProcedureTemplatesOutput(ctx *pulumi.Context, args ProcedureTemplatesOutputArgs, opts ...pulumi.InvokeOption) ProcedureTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ProcedureTemplatesResult, error) {
			args := v.(ProcedureTemplatesArgs)
			r, err := ProcedureTemplates(ctx, &args, opts...)
			var s ProcedureTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ProcedureTemplatesResultOutput)
}

// A collection of arguments for invoking ProcedureTemplates.
type ProcedureTemplatesOutputArgs struct {
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SubAppId         pulumi.IntPtrInput    `pulumi:"subAppId"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (ProcedureTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by ProcedureTemplates.
type ProcedureTemplatesResultOutput struct{ *pulumi.OutputState }

func (ProcedureTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplatesResult)(nil)).Elem()
}

func (o ProcedureTemplatesResultOutput) ToProcedureTemplatesResultOutput() ProcedureTemplatesResultOutput {
	return o
}

func (o ProcedureTemplatesResultOutput) ToProcedureTemplatesResultOutputWithContext(ctx context.Context) ProcedureTemplatesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o ProcedureTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ProcedureTemplatesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ProcedureTemplatesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o ProcedureTemplatesResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

func (o ProcedureTemplatesResultOutput) TemplateLists() ProcedureTemplatesTemplateListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) []ProcedureTemplatesTemplateList { return v.TemplateLists }).(ProcedureTemplatesTemplateListArrayOutput)
}

func (o ProcedureTemplatesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplatesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProcedureTemplatesResultOutput{})
}
