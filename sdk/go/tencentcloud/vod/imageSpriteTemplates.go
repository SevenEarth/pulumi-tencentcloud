// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ImageSpriteTemplates(ctx *pulumi.Context, args *ImageSpriteTemplatesArgs, opts ...pulumi.InvokeOption) (*ImageSpriteTemplatesResult, error) {
	var rv ImageSpriteTemplatesResult
	err := ctx.Invoke("tencentcloud:Vod/imageSpriteTemplates:ImageSpriteTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ImageSpriteTemplates.
type ImageSpriteTemplatesArgs struct {
	Definition       *string `pulumi:"definition"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	Type             *string `pulumi:"type"`
}

// A collection of values returned by ImageSpriteTemplates.
type ImageSpriteTemplatesResult struct {
	Definition *string `pulumi:"definition"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                             `pulumi:"id"`
	ResultOutputFile *string                            `pulumi:"resultOutputFile"`
	SubAppId         *int                               `pulumi:"subAppId"`
	TemplateLists    []ImageSpriteTemplatesTemplateList `pulumi:"templateLists"`
	Type             *string                            `pulumi:"type"`
}

func ImageSpriteTemplatesOutput(ctx *pulumi.Context, args ImageSpriteTemplatesOutputArgs, opts ...pulumi.InvokeOption) ImageSpriteTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ImageSpriteTemplatesResult, error) {
			args := v.(ImageSpriteTemplatesArgs)
			r, err := ImageSpriteTemplates(ctx, &args, opts...)
			var s ImageSpriteTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ImageSpriteTemplatesResultOutput)
}

// A collection of arguments for invoking ImageSpriteTemplates.
type ImageSpriteTemplatesOutputArgs struct {
	Definition       pulumi.StringPtrInput `pulumi:"definition"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SubAppId         pulumi.IntPtrInput    `pulumi:"subAppId"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (ImageSpriteTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSpriteTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by ImageSpriteTemplates.
type ImageSpriteTemplatesResultOutput struct{ *pulumi.OutputState }

func (ImageSpriteTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSpriteTemplatesResult)(nil)).Elem()
}

func (o ImageSpriteTemplatesResultOutput) ToImageSpriteTemplatesResultOutput() ImageSpriteTemplatesResultOutput {
	return o
}

func (o ImageSpriteTemplatesResultOutput) ToImageSpriteTemplatesResultOutputWithContext(ctx context.Context) ImageSpriteTemplatesResultOutput {
	return o
}

func (o ImageSpriteTemplatesResultOutput) Definition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) *string { return v.Definition }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ImageSpriteTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ImageSpriteTemplatesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o ImageSpriteTemplatesResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

func (o ImageSpriteTemplatesResultOutput) TemplateLists() ImageSpriteTemplatesTemplateListArrayOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) []ImageSpriteTemplatesTemplateList { return v.TemplateLists }).(ImageSpriteTemplatesTemplateListArrayOutput)
}

func (o ImageSpriteTemplatesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageSpriteTemplatesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ImageSpriteTemplatesResultOutput{})
}
