// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a teo ruleEnginePriority
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Teo.NewRuleEnginePriority(ctx, "ruleEnginePriority", &Teo.RuleEnginePriorityArgs{
// 			RulesPriorities: teo.RuleEnginePriorityRulesPriorityArray{
// 				&teo.RuleEnginePriorityRulesPriorityArgs{
// 					Index: pulumi.Int(0),
// 					Value: pulumi.String("rule-m9jlttua"),
// 				},
// 				&teo.RuleEnginePriorityRulesPriorityArgs{
// 					Index: pulumi.Int(1),
// 					Value: pulumi.String("rule-m5l9t4k1"),
// 				},
// 			},
// 			ZoneId: pulumi.String("zone-294v965lwmn6"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// teo rule_engine_priority can be imported using the zone_id, e.g.
//
// ```sh
//  $ pulumi import tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority rule_engine_priority zone-294v965lwmn6
// ```
type RuleEnginePriority struct {
	pulumi.CustomResourceState

	// Priority of rules.
	RulesPriorities RuleEnginePriorityRulesPriorityArrayOutput `pulumi:"rulesPriorities"`
	// Site ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewRuleEnginePriority registers a new resource with the given unique name, arguments, and options.
func NewRuleEnginePriority(ctx *pulumi.Context,
	name string, args *RuleEnginePriorityArgs, opts ...pulumi.ResourceOption) (*RuleEnginePriority, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RuleEnginePriority
	err := ctx.RegisterResource("tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleEnginePriority gets an existing RuleEnginePriority resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleEnginePriority(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleEnginePriorityState, opts ...pulumi.ResourceOption) (*RuleEnginePriority, error) {
	var resource RuleEnginePriority
	err := ctx.ReadResource("tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleEnginePriority resources.
type ruleEnginePriorityState struct {
	// Priority of rules.
	RulesPriorities []RuleEnginePriorityRulesPriority `pulumi:"rulesPriorities"`
	// Site ID.
	ZoneId *string `pulumi:"zoneId"`
}

type RuleEnginePriorityState struct {
	// Priority of rules.
	RulesPriorities RuleEnginePriorityRulesPriorityArrayInput
	// Site ID.
	ZoneId pulumi.StringPtrInput
}

func (RuleEnginePriorityState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleEnginePriorityState)(nil)).Elem()
}

type ruleEnginePriorityArgs struct {
	// Priority of rules.
	RulesPriorities []RuleEnginePriorityRulesPriority `pulumi:"rulesPriorities"`
	// Site ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a RuleEnginePriority resource.
type RuleEnginePriorityArgs struct {
	// Priority of rules.
	RulesPriorities RuleEnginePriorityRulesPriorityArrayInput
	// Site ID.
	ZoneId pulumi.StringInput
}

func (RuleEnginePriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleEnginePriorityArgs)(nil)).Elem()
}

type RuleEnginePriorityInput interface {
	pulumi.Input

	ToRuleEnginePriorityOutput() RuleEnginePriorityOutput
	ToRuleEnginePriorityOutputWithContext(ctx context.Context) RuleEnginePriorityOutput
}

func (*RuleEnginePriority) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEnginePriority)(nil)).Elem()
}

func (i *RuleEnginePriority) ToRuleEnginePriorityOutput() RuleEnginePriorityOutput {
	return i.ToRuleEnginePriorityOutputWithContext(context.Background())
}

func (i *RuleEnginePriority) ToRuleEnginePriorityOutputWithContext(ctx context.Context) RuleEnginePriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEnginePriorityOutput)
}

// RuleEnginePriorityArrayInput is an input type that accepts RuleEnginePriorityArray and RuleEnginePriorityArrayOutput values.
// You can construct a concrete instance of `RuleEnginePriorityArrayInput` via:
//
//          RuleEnginePriorityArray{ RuleEnginePriorityArgs{...} }
type RuleEnginePriorityArrayInput interface {
	pulumi.Input

	ToRuleEnginePriorityArrayOutput() RuleEnginePriorityArrayOutput
	ToRuleEnginePriorityArrayOutputWithContext(context.Context) RuleEnginePriorityArrayOutput
}

type RuleEnginePriorityArray []RuleEnginePriorityInput

func (RuleEnginePriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleEnginePriority)(nil)).Elem()
}

func (i RuleEnginePriorityArray) ToRuleEnginePriorityArrayOutput() RuleEnginePriorityArrayOutput {
	return i.ToRuleEnginePriorityArrayOutputWithContext(context.Background())
}

func (i RuleEnginePriorityArray) ToRuleEnginePriorityArrayOutputWithContext(ctx context.Context) RuleEnginePriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEnginePriorityArrayOutput)
}

// RuleEnginePriorityMapInput is an input type that accepts RuleEnginePriorityMap and RuleEnginePriorityMapOutput values.
// You can construct a concrete instance of `RuleEnginePriorityMapInput` via:
//
//          RuleEnginePriorityMap{ "key": RuleEnginePriorityArgs{...} }
type RuleEnginePriorityMapInput interface {
	pulumi.Input

	ToRuleEnginePriorityMapOutput() RuleEnginePriorityMapOutput
	ToRuleEnginePriorityMapOutputWithContext(context.Context) RuleEnginePriorityMapOutput
}

type RuleEnginePriorityMap map[string]RuleEnginePriorityInput

func (RuleEnginePriorityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleEnginePriority)(nil)).Elem()
}

func (i RuleEnginePriorityMap) ToRuleEnginePriorityMapOutput() RuleEnginePriorityMapOutput {
	return i.ToRuleEnginePriorityMapOutputWithContext(context.Background())
}

func (i RuleEnginePriorityMap) ToRuleEnginePriorityMapOutputWithContext(ctx context.Context) RuleEnginePriorityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEnginePriorityMapOutput)
}

type RuleEnginePriorityOutput struct{ *pulumi.OutputState }

func (RuleEnginePriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEnginePriority)(nil)).Elem()
}

func (o RuleEnginePriorityOutput) ToRuleEnginePriorityOutput() RuleEnginePriorityOutput {
	return o
}

func (o RuleEnginePriorityOutput) ToRuleEnginePriorityOutputWithContext(ctx context.Context) RuleEnginePriorityOutput {
	return o
}

// Priority of rules.
func (o RuleEnginePriorityOutput) RulesPriorities() RuleEnginePriorityRulesPriorityArrayOutput {
	return o.ApplyT(func(v *RuleEnginePriority) RuleEnginePriorityRulesPriorityArrayOutput { return v.RulesPriorities }).(RuleEnginePriorityRulesPriorityArrayOutput)
}

// Site ID.
func (o RuleEnginePriorityOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleEnginePriority) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type RuleEnginePriorityArrayOutput struct{ *pulumi.OutputState }

func (RuleEnginePriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleEnginePriority)(nil)).Elem()
}

func (o RuleEnginePriorityArrayOutput) ToRuleEnginePriorityArrayOutput() RuleEnginePriorityArrayOutput {
	return o
}

func (o RuleEnginePriorityArrayOutput) ToRuleEnginePriorityArrayOutputWithContext(ctx context.Context) RuleEnginePriorityArrayOutput {
	return o
}

func (o RuleEnginePriorityArrayOutput) Index(i pulumi.IntInput) RuleEnginePriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleEnginePriority {
		return vs[0].([]*RuleEnginePriority)[vs[1].(int)]
	}).(RuleEnginePriorityOutput)
}

type RuleEnginePriorityMapOutput struct{ *pulumi.OutputState }

func (RuleEnginePriorityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleEnginePriority)(nil)).Elem()
}

func (o RuleEnginePriorityMapOutput) ToRuleEnginePriorityMapOutput() RuleEnginePriorityMapOutput {
	return o
}

func (o RuleEnginePriorityMapOutput) ToRuleEnginePriorityMapOutputWithContext(ctx context.Context) RuleEnginePriorityMapOutput {
	return o
}

func (o RuleEnginePriorityMapOutput) MapIndex(k pulumi.StringInput) RuleEnginePriorityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleEnginePriority {
		return vs[0].(map[string]*RuleEnginePriority)[vs[1].(string)]
	}).(RuleEnginePriorityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEnginePriorityInput)(nil)).Elem(), &RuleEnginePriority{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEnginePriorityArrayInput)(nil)).Elem(), RuleEnginePriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEnginePriorityMapInput)(nil)).Elem(), RuleEnginePriorityMap{})
	pulumi.RegisterOutputType(RuleEnginePriorityOutput{})
	pulumi.RegisterOutputType(RuleEnginePriorityArrayOutput{})
	pulumi.RegisterOutputType(RuleEnginePriorityMapOutput{})
}
