// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a teo securityPolicy
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Teo.NewSecurityPolicy(ctx, "securityPolicy", &Teo.SecurityPolicyArgs{
// 			Config: &teo.SecurityPolicyConfigArgs{
// 				AclConfig: &teo.SecurityPolicyConfigAclConfigArgs{
// 					Switch: pulumi.String("off"),
// 				},
// 				BotConfig: &teo.SecurityPolicyConfigBotConfigArgs{
// 					IntelligenceRule: &teo.SecurityPolicyConfigBotConfigIntelligenceRuleArgs{
// 						Items: teo.SecurityPolicyConfigBotConfigIntelligenceRuleItemArray{
// 							&teo.SecurityPolicyConfigBotConfigIntelligenceRuleItemArgs{
// 								Action: pulumi.String("drop"),
// 								Label:  pulumi.String("evil_bot"),
// 							},
// 							&teo.SecurityPolicyConfigBotConfigIntelligenceRuleItemArgs{
// 								Action: pulumi.String("alg"),
// 								Label:  pulumi.String("suspect_bot"),
// 							},
// 							&teo.SecurityPolicyConfigBotConfigIntelligenceRuleItemArgs{
// 								Action: pulumi.String("monitor"),
// 								Label:  pulumi.String("good_bot"),
// 							},
// 							&teo.SecurityPolicyConfigBotConfigIntelligenceRuleItemArgs{
// 								Action: pulumi.String("trans"),
// 								Label:  pulumi.String("normal"),
// 							},
// 						},
// 						Switch: pulumi.String("off"),
// 					},
// 					ManagedRule: &teo.SecurityPolicyConfigBotConfigManagedRuleArgs{
// 						Action:          pulumi.String("monitor"),
// 						AlgManagedIds:   pulumi.IntArray{},
// 						CapManagedIds:   pulumi.IntArray{},
// 						DropManagedIds:  pulumi.IntArray{},
// 						MonManagedIds:   pulumi.IntArray{},
// 						PageId:          pulumi.Int(0),
// 						PunishTime:      pulumi.Int(0),
// 						ResponseCode:    pulumi.Int(0),
// 						RuleId:          pulumi.Int(0),
// 						TransManagedIds: pulumi.IntArray{},
// 					},
// 					PortraitRule: &teo.SecurityPolicyConfigBotConfigPortraitRuleArgs{
// 						AlgManagedIds:  pulumi.IntArray{},
// 						CapManagedIds:  pulumi.IntArray{},
// 						DropManagedIds: pulumi.IntArray{},
// 						MonManagedIds:  pulumi.IntArray{},
// 						RuleId:         -1,
// 						Switch:         pulumi.String("off"),
// 					},
// 					Switch: pulumi.String("off"),
// 				},
// 				DropPageConfig: &teo.SecurityPolicyConfigDropPageConfigArgs{
// 					AclDropPageDetail: &teo.SecurityPolicyConfigDropPageConfigAclDropPageDetailArgs{
// 						Name:       pulumi.String("-"),
// 						PageId:     pulumi.Int(0),
// 						StatusCode: pulumi.Int(569),
// 						Type:       pulumi.String("default"),
// 					},
// 					Switch: pulumi.String("on"),
// 					WafDropPageDetail: &teo.SecurityPolicyConfigDropPageConfigWafDropPageDetailArgs{
// 						Name:       pulumi.String("-"),
// 						PageId:     pulumi.Int(0),
// 						StatusCode: pulumi.Int(566),
// 						Type:       pulumi.String("default"),
// 					},
// 				},
// 				ExceptConfig: &teo.SecurityPolicyConfigExceptConfigArgs{
// 					Switch: pulumi.String("on"),
// 				},
// 				IpTableConfig: &teo.SecurityPolicyConfigIpTableConfigArgs{
// 					Switch: pulumi.String("off"),
// 				},
// 				RateLimitConfig: &teo.SecurityPolicyConfigRateLimitConfigArgs{
// 					Intelligence: &teo.SecurityPolicyConfigRateLimitConfigIntelligenceArgs{
// 						Action: pulumi.String("monitor"),
// 						Switch: pulumi.String("off"),
// 					},
// 					Switch: pulumi.String("on"),
// 					Template: &teo.SecurityPolicyConfigRateLimitConfigTemplateArgs{
// 						Detail: &teo.SecurityPolicyConfigRateLimitConfigTemplateDetailArgs{
// 							Action:     pulumi.String("alg"),
// 							Id:         pulumi.Int(831807989),
// 							Mode:       pulumi.String("sup_loose"),
// 							Period:     pulumi.Int(1),
// 							PunishTime: pulumi.Int(0),
// 							Threshold:  pulumi.Int(2000),
// 						},
// 						Mode: pulumi.String("sup_loose"),
// 					},
// 				},
// 				SwitchConfig: &teo.SecurityPolicyConfigSwitchConfigArgs{
// 					WebSwitch: pulumi.String("on"),
// 				},
// 				WafConfig: &teo.SecurityPolicyConfigWafConfigArgs{
// 					AiRule: &teo.SecurityPolicyConfigWafConfigAiRuleArgs{
// 						Mode: pulumi.String("smart_status_close"),
// 					},
// 					Level:  pulumi.String("strict"),
// 					Mode:   pulumi.String("block"),
// 					Switch: pulumi.String("on"),
// 					WafRules: &teo.SecurityPolicyConfigWafConfigWafRulesArgs{
// 						BlockRuleIds: pulumi.IntArray{
// 							pulumi.Int(22),
// 							pulumi.Int(84214562),
// 							pulumi.Int(106246133),
// 							pulumi.Int(106246507),
// 							pulumi.Int(106246508),
// 							pulumi.Int(106246523),
// 							pulumi.Int(106246524),
// 							pulumi.Int(106246679),
// 							pulumi.Int(106247029),
// 							pulumi.Int(106247048),
// 							pulumi.Int(106247140),
// 							pulumi.Int(106247356),
// 							pulumi.Int(106247357),
// 							pulumi.Int(106247358),
// 							pulumi.Int(106247378),
// 							pulumi.Int(106247389),
// 							pulumi.Int(106247392),
// 							pulumi.Int(106247394),
// 							pulumi.Int(106247405),
// 							pulumi.Int(106247409),
// 							pulumi.Int(106247413),
// 							pulumi.Int(106247558),
// 							pulumi.Int(106247795),
// 							pulumi.Int(106247819),
// 							pulumi.Int(106248021),
// 						},
// 						ObserveRuleIds: pulumi.IntArray{},
// 						Switch:         pulumi.String("off"),
// 					},
// 				},
// 			},
// 			Entity: pulumi.String("aaa.sfurnace.work"),
// 			ZoneId: pulumi.String("zone-2983wizgxqvm"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// teo security_policy can be imported using the zoneId#entity, e.g.
//
// ```sh
//  $ pulumi import tencentcloud:Teo/securityPolicy:SecurityPolicy security_policy zone-2983wizgxqvm#aaa.sfurnace.work
// ```
type SecurityPolicy struct {
	pulumi.CustomResourceState

	// Security policy configuration.
	Config SecurityPolicyConfigOutput `pulumi:"config"`
	// Subdomain.
	Entity pulumi.StringOutput `pulumi:"entity"`
	// Site ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecurityPolicy(ctx *pulumi.Context,
	name string, args *SecurityPolicyArgs, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entity == nil {
		return nil, errors.New("invalid value for required argument 'Entity'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SecurityPolicy
	err := ctx.RegisterResource("tencentcloud:Teo/securityPolicy:SecurityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityPolicy gets an existing SecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityPolicyState, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	var resource SecurityPolicy
	err := ctx.ReadResource("tencentcloud:Teo/securityPolicy:SecurityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityPolicy resources.
type securityPolicyState struct {
	// Security policy configuration.
	Config *SecurityPolicyConfig `pulumi:"config"`
	// Subdomain.
	Entity *string `pulumi:"entity"`
	// Site ID.
	ZoneId *string `pulumi:"zoneId"`
}

type SecurityPolicyState struct {
	// Security policy configuration.
	Config SecurityPolicyConfigPtrInput
	// Subdomain.
	Entity pulumi.StringPtrInput
	// Site ID.
	ZoneId pulumi.StringPtrInput
}

func (SecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyState)(nil)).Elem()
}

type securityPolicyArgs struct {
	// Security policy configuration.
	Config *SecurityPolicyConfig `pulumi:"config"`
	// Subdomain.
	Entity string `pulumi:"entity"`
	// Site ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a SecurityPolicy resource.
type SecurityPolicyArgs struct {
	// Security policy configuration.
	Config SecurityPolicyConfigPtrInput
	// Subdomain.
	Entity pulumi.StringInput
	// Site ID.
	ZoneId pulumi.StringInput
}

func (SecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyArgs)(nil)).Elem()
}

type SecurityPolicyInput interface {
	pulumi.Input

	ToSecurityPolicyOutput() SecurityPolicyOutput
	ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput
}

func (*SecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (i *SecurityPolicy) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return i.ToSecurityPolicyOutputWithContext(context.Background())
}

func (i *SecurityPolicy) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyOutput)
}

// SecurityPolicyArrayInput is an input type that accepts SecurityPolicyArray and SecurityPolicyArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyArrayInput` via:
//
//          SecurityPolicyArray{ SecurityPolicyArgs{...} }
type SecurityPolicyArrayInput interface {
	pulumi.Input

	ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput
	ToSecurityPolicyArrayOutputWithContext(context.Context) SecurityPolicyArrayOutput
}

type SecurityPolicyArray []SecurityPolicyInput

func (SecurityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicy)(nil)).Elem()
}

func (i SecurityPolicyArray) ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput {
	return i.ToSecurityPolicyArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyArray) ToSecurityPolicyArrayOutputWithContext(ctx context.Context) SecurityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyArrayOutput)
}

// SecurityPolicyMapInput is an input type that accepts SecurityPolicyMap and SecurityPolicyMapOutput values.
// You can construct a concrete instance of `SecurityPolicyMapInput` via:
//
//          SecurityPolicyMap{ "key": SecurityPolicyArgs{...} }
type SecurityPolicyMapInput interface {
	pulumi.Input

	ToSecurityPolicyMapOutput() SecurityPolicyMapOutput
	ToSecurityPolicyMapOutputWithContext(context.Context) SecurityPolicyMapOutput
}

type SecurityPolicyMap map[string]SecurityPolicyInput

func (SecurityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicy)(nil)).Elem()
}

func (i SecurityPolicyMap) ToSecurityPolicyMapOutput() SecurityPolicyMapOutput {
	return i.ToSecurityPolicyMapOutputWithContext(context.Background())
}

func (i SecurityPolicyMap) ToSecurityPolicyMapOutputWithContext(ctx context.Context) SecurityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyMapOutput)
}

type SecurityPolicyOutput struct{ *pulumi.OutputState }

func (SecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return o
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return o
}

// Security policy configuration.
func (o SecurityPolicyOutput) Config() SecurityPolicyConfigOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyConfigOutput { return v.Config }).(SecurityPolicyConfigOutput)
}

// Subdomain.
func (o SecurityPolicyOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Entity }).(pulumi.StringOutput)
}

// Site ID.
func (o SecurityPolicyOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type SecurityPolicyArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyArrayOutput) ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput {
	return o
}

func (o SecurityPolicyArrayOutput) ToSecurityPolicyArrayOutputWithContext(ctx context.Context) SecurityPolicyArrayOutput {
	return o
}

func (o SecurityPolicyArrayOutput) Index(i pulumi.IntInput) SecurityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityPolicy {
		return vs[0].([]*SecurityPolicy)[vs[1].(int)]
	}).(SecurityPolicyOutput)
}

type SecurityPolicyMapOutput struct{ *pulumi.OutputState }

func (SecurityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyMapOutput) ToSecurityPolicyMapOutput() SecurityPolicyMapOutput {
	return o
}

func (o SecurityPolicyMapOutput) ToSecurityPolicyMapOutputWithContext(ctx context.Context) SecurityPolicyMapOutput {
	return o
}

func (o SecurityPolicyMapOutput) MapIndex(k pulumi.StringInput) SecurityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityPolicy {
		return vs[0].(map[string]*SecurityPolicy)[vs[1].(string)]
	}).(SecurityPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyInput)(nil)).Elem(), &SecurityPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyArrayInput)(nil)).Elem(), SecurityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyMapInput)(nil)).Elem(), SecurityPolicyMap{})
	pulumi.RegisterOutputType(SecurityPolicyOutput{})
	pulumi.RegisterOutputType(SecurityPolicyArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyMapOutput{})
}
