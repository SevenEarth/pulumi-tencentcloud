// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type APIKey struct {
	pulumi.CustomResourceState

	// Created API key.
	AccessKeySecret pulumi.StringOutput `pulumi:"accessKeySecret"`
	// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	ModifyTime pulumi.StringOutput `pulumi:"modifyTime"`
	// Custom key name.
	SecretName pulumi.StringOutput `pulumi:"secretName"`
	// Key status. Valid values: `on`, `off`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
}

// NewAPIKey registers a new resource with the given unique name, arguments, and options.
func NewAPIKey(ctx *pulumi.Context,
	name string, args *APIKeyArgs, opts ...pulumi.ResourceOption) (*APIKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	var resource APIKey
	err := ctx.RegisterResource("tencentcloud:APIGateway/aPIKey:APIKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAPIKey gets an existing APIKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAPIKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *APIKeyState, opts ...pulumi.ResourceOption) (*APIKey, error) {
	var resource APIKey
	err := ctx.ReadResource("tencentcloud:APIGateway/aPIKey:APIKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering APIKey resources.
type apikeyState struct {
	// Created API key.
	AccessKeySecret *string `pulumi:"accessKeySecret"`
	// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	CreateTime *string `pulumi:"createTime"`
	// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	ModifyTime *string `pulumi:"modifyTime"`
	// Custom key name.
	SecretName *string `pulumi:"secretName"`
	// Key status. Valid values: `on`, `off`.
	Status *string `pulumi:"status"`
}

type APIKeyState struct {
	// Created API key.
	AccessKeySecret pulumi.StringPtrInput
	// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	CreateTime pulumi.StringPtrInput
	// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	ModifyTime pulumi.StringPtrInput
	// Custom key name.
	SecretName pulumi.StringPtrInput
	// Key status. Valid values: `on`, `off`.
	Status pulumi.StringPtrInput
}

func (APIKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apikeyState)(nil)).Elem()
}

type apikeyArgs struct {
	// Custom key name.
	SecretName string `pulumi:"secretName"`
	// Key status. Valid values: `on`, `off`.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a APIKey resource.
type APIKeyArgs struct {
	// Custom key name.
	SecretName pulumi.StringInput
	// Key status. Valid values: `on`, `off`.
	Status pulumi.StringPtrInput
}

func (APIKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apikeyArgs)(nil)).Elem()
}

type APIKeyInput interface {
	pulumi.Input

	ToAPIKeyOutput() APIKeyOutput
	ToAPIKeyOutputWithContext(ctx context.Context) APIKeyOutput
}

func (*APIKey) ElementType() reflect.Type {
	return reflect.TypeOf((**APIKey)(nil)).Elem()
}

func (i *APIKey) ToAPIKeyOutput() APIKeyOutput {
	return i.ToAPIKeyOutputWithContext(context.Background())
}

func (i *APIKey) ToAPIKeyOutputWithContext(ctx context.Context) APIKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIKeyOutput)
}

// APIKeyArrayInput is an input type that accepts APIKeyArray and APIKeyArrayOutput values.
// You can construct a concrete instance of `APIKeyArrayInput` via:
//
//          APIKeyArray{ APIKeyArgs{...} }
type APIKeyArrayInput interface {
	pulumi.Input

	ToAPIKeyArrayOutput() APIKeyArrayOutput
	ToAPIKeyArrayOutputWithContext(context.Context) APIKeyArrayOutput
}

type APIKeyArray []APIKeyInput

func (APIKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*APIKey)(nil)).Elem()
}

func (i APIKeyArray) ToAPIKeyArrayOutput() APIKeyArrayOutput {
	return i.ToAPIKeyArrayOutputWithContext(context.Background())
}

func (i APIKeyArray) ToAPIKeyArrayOutputWithContext(ctx context.Context) APIKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIKeyArrayOutput)
}

// APIKeyMapInput is an input type that accepts APIKeyMap and APIKeyMapOutput values.
// You can construct a concrete instance of `APIKeyMapInput` via:
//
//          APIKeyMap{ "key": APIKeyArgs{...} }
type APIKeyMapInput interface {
	pulumi.Input

	ToAPIKeyMapOutput() APIKeyMapOutput
	ToAPIKeyMapOutputWithContext(context.Context) APIKeyMapOutput
}

type APIKeyMap map[string]APIKeyInput

func (APIKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*APIKey)(nil)).Elem()
}

func (i APIKeyMap) ToAPIKeyMapOutput() APIKeyMapOutput {
	return i.ToAPIKeyMapOutputWithContext(context.Background())
}

func (i APIKeyMap) ToAPIKeyMapOutputWithContext(ctx context.Context) APIKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIKeyMapOutput)
}

type APIKeyOutput struct{ *pulumi.OutputState }

func (APIKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APIKey)(nil)).Elem()
}

func (o APIKeyOutput) ToAPIKeyOutput() APIKeyOutput {
	return o
}

func (o APIKeyOutput) ToAPIKeyOutputWithContext(ctx context.Context) APIKeyOutput {
	return o
}

// Created API key.
func (o APIKeyOutput) AccessKeySecret() pulumi.StringOutput {
	return o.ApplyT(func(v *APIKey) pulumi.StringOutput { return v.AccessKeySecret }).(pulumi.StringOutput)
}

// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
func (o APIKeyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *APIKey) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
func (o APIKeyOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v *APIKey) pulumi.StringOutput { return v.ModifyTime }).(pulumi.StringOutput)
}

// Custom key name.
func (o APIKeyOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *APIKey) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

// Key status. Valid values: `on`, `off`.
func (o APIKeyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APIKey) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

type APIKeyArrayOutput struct{ *pulumi.OutputState }

func (APIKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*APIKey)(nil)).Elem()
}

func (o APIKeyArrayOutput) ToAPIKeyArrayOutput() APIKeyArrayOutput {
	return o
}

func (o APIKeyArrayOutput) ToAPIKeyArrayOutputWithContext(ctx context.Context) APIKeyArrayOutput {
	return o
}

func (o APIKeyArrayOutput) Index(i pulumi.IntInput) APIKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *APIKey {
		return vs[0].([]*APIKey)[vs[1].(int)]
	}).(APIKeyOutput)
}

type APIKeyMapOutput struct{ *pulumi.OutputState }

func (APIKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*APIKey)(nil)).Elem()
}

func (o APIKeyMapOutput) ToAPIKeyMapOutput() APIKeyMapOutput {
	return o
}

func (o APIKeyMapOutput) ToAPIKeyMapOutputWithContext(ctx context.Context) APIKeyMapOutput {
	return o
}

func (o APIKeyMapOutput) MapIndex(k pulumi.StringInput) APIKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *APIKey {
		return vs[0].(map[string]*APIKey)[vs[1].(string)]
	}).(APIKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*APIKeyInput)(nil)).Elem(), &APIKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*APIKeyArrayInput)(nil)).Elem(), APIKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*APIKeyMapInput)(nil)).Elem(), APIKeyMap{})
	pulumi.RegisterOutputType(APIKeyOutput{})
	pulumi.RegisterOutputType(APIKeyArrayOutput{})
	pulumi.RegisterOutputType(APIKeyMapOutput{})
}
