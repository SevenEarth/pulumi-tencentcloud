// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type APIRequestParameter struct {
	DefaultValue *string `pulumi:"defaultValue"`
	Desc         *string `pulumi:"desc"`
	Name         string  `pulumi:"name"`
	Position     string  `pulumi:"position"`
	Required     *bool   `pulumi:"required"`
	Type         string  `pulumi:"type"`
}

// APIRequestParameterInput is an input type that accepts APIRequestParameterArgs and APIRequestParameterOutput values.
// You can construct a concrete instance of `APIRequestParameterInput` via:
//
//          APIRequestParameterArgs{...}
type APIRequestParameterInput interface {
	pulumi.Input

	ToAPIRequestParameterOutput() APIRequestParameterOutput
	ToAPIRequestParameterOutputWithContext(context.Context) APIRequestParameterOutput
}

type APIRequestParameterArgs struct {
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	Desc         pulumi.StringPtrInput `pulumi:"desc"`
	Name         pulumi.StringInput    `pulumi:"name"`
	Position     pulumi.StringInput    `pulumi:"position"`
	Required     pulumi.BoolPtrInput   `pulumi:"required"`
	Type         pulumi.StringInput    `pulumi:"type"`
}

func (APIRequestParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIRequestParameter)(nil)).Elem()
}

func (i APIRequestParameterArgs) ToAPIRequestParameterOutput() APIRequestParameterOutput {
	return i.ToAPIRequestParameterOutputWithContext(context.Background())
}

func (i APIRequestParameterArgs) ToAPIRequestParameterOutputWithContext(ctx context.Context) APIRequestParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIRequestParameterOutput)
}

// APIRequestParameterArrayInput is an input type that accepts APIRequestParameterArray and APIRequestParameterArrayOutput values.
// You can construct a concrete instance of `APIRequestParameterArrayInput` via:
//
//          APIRequestParameterArray{ APIRequestParameterArgs{...} }
type APIRequestParameterArrayInput interface {
	pulumi.Input

	ToAPIRequestParameterArrayOutput() APIRequestParameterArrayOutput
	ToAPIRequestParameterArrayOutputWithContext(context.Context) APIRequestParameterArrayOutput
}

type APIRequestParameterArray []APIRequestParameterInput

func (APIRequestParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]APIRequestParameter)(nil)).Elem()
}

func (i APIRequestParameterArray) ToAPIRequestParameterArrayOutput() APIRequestParameterArrayOutput {
	return i.ToAPIRequestParameterArrayOutputWithContext(context.Background())
}

func (i APIRequestParameterArray) ToAPIRequestParameterArrayOutputWithContext(ctx context.Context) APIRequestParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIRequestParameterArrayOutput)
}

type APIRequestParameterOutput struct{ *pulumi.OutputState }

func (APIRequestParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIRequestParameter)(nil)).Elem()
}

func (o APIRequestParameterOutput) ToAPIRequestParameterOutput() APIRequestParameterOutput {
	return o
}

func (o APIRequestParameterOutput) ToAPIRequestParameterOutputWithContext(ctx context.Context) APIRequestParameterOutput {
	return o
}

func (o APIRequestParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIRequestParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

func (o APIRequestParameterOutput) Desc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIRequestParameter) *string { return v.Desc }).(pulumi.StringPtrOutput)
}

func (o APIRequestParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v APIRequestParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o APIRequestParameterOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v APIRequestParameter) string { return v.Position }).(pulumi.StringOutput)
}

func (o APIRequestParameterOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v APIRequestParameter) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o APIRequestParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v APIRequestParameter) string { return v.Type }).(pulumi.StringOutput)
}

type APIRequestParameterArrayOutput struct{ *pulumi.OutputState }

func (APIRequestParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]APIRequestParameter)(nil)).Elem()
}

func (o APIRequestParameterArrayOutput) ToAPIRequestParameterArrayOutput() APIRequestParameterArrayOutput {
	return o
}

func (o APIRequestParameterArrayOutput) ToAPIRequestParameterArrayOutputWithContext(ctx context.Context) APIRequestParameterArrayOutput {
	return o
}

func (o APIRequestParameterArrayOutput) Index(i pulumi.IntInput) APIRequestParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) APIRequestParameter {
		return vs[0].([]APIRequestParameter)[vs[1].(int)]
	}).(APIRequestParameterOutput)
}

type APIResponseErrorCode struct {
	Code          int     `pulumi:"code"`
	ConvertedCode *int    `pulumi:"convertedCode"`
	Desc          *string `pulumi:"desc"`
	Msg           string  `pulumi:"msg"`
	NeedConvert   *bool   `pulumi:"needConvert"`
}

// APIResponseErrorCodeInput is an input type that accepts APIResponseErrorCodeArgs and APIResponseErrorCodeOutput values.
// You can construct a concrete instance of `APIResponseErrorCodeInput` via:
//
//          APIResponseErrorCodeArgs{...}
type APIResponseErrorCodeInput interface {
	pulumi.Input

	ToAPIResponseErrorCodeOutput() APIResponseErrorCodeOutput
	ToAPIResponseErrorCodeOutputWithContext(context.Context) APIResponseErrorCodeOutput
}

type APIResponseErrorCodeArgs struct {
	Code          pulumi.IntInput       `pulumi:"code"`
	ConvertedCode pulumi.IntPtrInput    `pulumi:"convertedCode"`
	Desc          pulumi.StringPtrInput `pulumi:"desc"`
	Msg           pulumi.StringInput    `pulumi:"msg"`
	NeedConvert   pulumi.BoolPtrInput   `pulumi:"needConvert"`
}

func (APIResponseErrorCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIResponseErrorCode)(nil)).Elem()
}

func (i APIResponseErrorCodeArgs) ToAPIResponseErrorCodeOutput() APIResponseErrorCodeOutput {
	return i.ToAPIResponseErrorCodeOutputWithContext(context.Background())
}

func (i APIResponseErrorCodeArgs) ToAPIResponseErrorCodeOutputWithContext(ctx context.Context) APIResponseErrorCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIResponseErrorCodeOutput)
}

// APIResponseErrorCodeArrayInput is an input type that accepts APIResponseErrorCodeArray and APIResponseErrorCodeArrayOutput values.
// You can construct a concrete instance of `APIResponseErrorCodeArrayInput` via:
//
//          APIResponseErrorCodeArray{ APIResponseErrorCodeArgs{...} }
type APIResponseErrorCodeArrayInput interface {
	pulumi.Input

	ToAPIResponseErrorCodeArrayOutput() APIResponseErrorCodeArrayOutput
	ToAPIResponseErrorCodeArrayOutputWithContext(context.Context) APIResponseErrorCodeArrayOutput
}

type APIResponseErrorCodeArray []APIResponseErrorCodeInput

func (APIResponseErrorCodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]APIResponseErrorCode)(nil)).Elem()
}

func (i APIResponseErrorCodeArray) ToAPIResponseErrorCodeArrayOutput() APIResponseErrorCodeArrayOutput {
	return i.ToAPIResponseErrorCodeArrayOutputWithContext(context.Background())
}

func (i APIResponseErrorCodeArray) ToAPIResponseErrorCodeArrayOutputWithContext(ctx context.Context) APIResponseErrorCodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIResponseErrorCodeArrayOutput)
}

type APIResponseErrorCodeOutput struct{ *pulumi.OutputState }

func (APIResponseErrorCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIResponseErrorCode)(nil)).Elem()
}

func (o APIResponseErrorCodeOutput) ToAPIResponseErrorCodeOutput() APIResponseErrorCodeOutput {
	return o
}

func (o APIResponseErrorCodeOutput) ToAPIResponseErrorCodeOutputWithContext(ctx context.Context) APIResponseErrorCodeOutput {
	return o
}

func (o APIResponseErrorCodeOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v APIResponseErrorCode) int { return v.Code }).(pulumi.IntOutput)
}

func (o APIResponseErrorCodeOutput) ConvertedCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v APIResponseErrorCode) *int { return v.ConvertedCode }).(pulumi.IntPtrOutput)
}

func (o APIResponseErrorCodeOutput) Desc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIResponseErrorCode) *string { return v.Desc }).(pulumi.StringPtrOutput)
}

func (o APIResponseErrorCodeOutput) Msg() pulumi.StringOutput {
	return o.ApplyT(func(v APIResponseErrorCode) string { return v.Msg }).(pulumi.StringOutput)
}

func (o APIResponseErrorCodeOutput) NeedConvert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v APIResponseErrorCode) *bool { return v.NeedConvert }).(pulumi.BoolPtrOutput)
}

type APIResponseErrorCodeArrayOutput struct{ *pulumi.OutputState }

func (APIResponseErrorCodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]APIResponseErrorCode)(nil)).Elem()
}

func (o APIResponseErrorCodeArrayOutput) ToAPIResponseErrorCodeArrayOutput() APIResponseErrorCodeArrayOutput {
	return o
}

func (o APIResponseErrorCodeArrayOutput) ToAPIResponseErrorCodeArrayOutputWithContext(ctx context.Context) APIResponseErrorCodeArrayOutput {
	return o
}

func (o APIResponseErrorCodeArrayOutput) Index(i pulumi.IntInput) APIResponseErrorCodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) APIResponseErrorCode {
		return vs[0].([]APIResponseErrorCode)[vs[1].(int)]
	}).(APIResponseErrorCodeOutput)
}

type ServiceApiList struct {
	ApiDesc *string `pulumi:"apiDesc"`
	ApiId   *string `pulumi:"apiId"`
	ApiName *string `pulumi:"apiName"`
	Method  *string `pulumi:"method"`
	Path    *string `pulumi:"path"`
}

// ServiceApiListInput is an input type that accepts ServiceApiListArgs and ServiceApiListOutput values.
// You can construct a concrete instance of `ServiceApiListInput` via:
//
//          ServiceApiListArgs{...}
type ServiceApiListInput interface {
	pulumi.Input

	ToServiceApiListOutput() ServiceApiListOutput
	ToServiceApiListOutputWithContext(context.Context) ServiceApiListOutput
}

type ServiceApiListArgs struct {
	ApiDesc pulumi.StringPtrInput `pulumi:"apiDesc"`
	ApiId   pulumi.StringPtrInput `pulumi:"apiId"`
	ApiName pulumi.StringPtrInput `pulumi:"apiName"`
	Method  pulumi.StringPtrInput `pulumi:"method"`
	Path    pulumi.StringPtrInput `pulumi:"path"`
}

func (ServiceApiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiList)(nil)).Elem()
}

func (i ServiceApiListArgs) ToServiceApiListOutput() ServiceApiListOutput {
	return i.ToServiceApiListOutputWithContext(context.Background())
}

func (i ServiceApiListArgs) ToServiceApiListOutputWithContext(ctx context.Context) ServiceApiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiListOutput)
}

// ServiceApiListArrayInput is an input type that accepts ServiceApiListArray and ServiceApiListArrayOutput values.
// You can construct a concrete instance of `ServiceApiListArrayInput` via:
//
//          ServiceApiListArray{ ServiceApiListArgs{...} }
type ServiceApiListArrayInput interface {
	pulumi.Input

	ToServiceApiListArrayOutput() ServiceApiListArrayOutput
	ToServiceApiListArrayOutputWithContext(context.Context) ServiceApiListArrayOutput
}

type ServiceApiListArray []ServiceApiListInput

func (ServiceApiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiList)(nil)).Elem()
}

func (i ServiceApiListArray) ToServiceApiListArrayOutput() ServiceApiListArrayOutput {
	return i.ToServiceApiListArrayOutputWithContext(context.Background())
}

func (i ServiceApiListArray) ToServiceApiListArrayOutputWithContext(ctx context.Context) ServiceApiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiListArrayOutput)
}

type ServiceApiListOutput struct{ *pulumi.OutputState }

func (ServiceApiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiList)(nil)).Elem()
}

func (o ServiceApiListOutput) ToServiceApiListOutput() ServiceApiListOutput {
	return o
}

func (o ServiceApiListOutput) ToServiceApiListOutputWithContext(ctx context.Context) ServiceApiListOutput {
	return o
}

func (o ServiceApiListOutput) ApiDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiList) *string { return v.ApiDesc }).(pulumi.StringPtrOutput)
}

func (o ServiceApiListOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiList) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

func (o ServiceApiListOutput) ApiName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiList) *string { return v.ApiName }).(pulumi.StringPtrOutput)
}

func (o ServiceApiListOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiList) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o ServiceApiListOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiList) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ServiceApiListArrayOutput struct{ *pulumi.OutputState }

func (ServiceApiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiList)(nil)).Elem()
}

func (o ServiceApiListArrayOutput) ToServiceApiListArrayOutput() ServiceApiListArrayOutput {
	return o
}

func (o ServiceApiListArrayOutput) ToServiceApiListArrayOutputWithContext(ctx context.Context) ServiceApiListArrayOutput {
	return o
}

func (o ServiceApiListArrayOutput) Index(i pulumi.IntInput) ServiceApiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceApiList {
		return vs[0].([]ServiceApiList)[vs[1].(int)]
	}).(ServiceApiListOutput)
}

type ServiceUsagePlanList struct {
	ApiId         *string `pulumi:"apiId"`
	BindType      *string `pulumi:"bindType"`
	UsagePlanId   *string `pulumi:"usagePlanId"`
	UsagePlanName *string `pulumi:"usagePlanName"`
}

// ServiceUsagePlanListInput is an input type that accepts ServiceUsagePlanListArgs and ServiceUsagePlanListOutput values.
// You can construct a concrete instance of `ServiceUsagePlanListInput` via:
//
//          ServiceUsagePlanListArgs{...}
type ServiceUsagePlanListInput interface {
	pulumi.Input

	ToServiceUsagePlanListOutput() ServiceUsagePlanListOutput
	ToServiceUsagePlanListOutputWithContext(context.Context) ServiceUsagePlanListOutput
}

type ServiceUsagePlanListArgs struct {
	ApiId         pulumi.StringPtrInput `pulumi:"apiId"`
	BindType      pulumi.StringPtrInput `pulumi:"bindType"`
	UsagePlanId   pulumi.StringPtrInput `pulumi:"usagePlanId"`
	UsagePlanName pulumi.StringPtrInput `pulumi:"usagePlanName"`
}

func (ServiceUsagePlanListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUsagePlanList)(nil)).Elem()
}

func (i ServiceUsagePlanListArgs) ToServiceUsagePlanListOutput() ServiceUsagePlanListOutput {
	return i.ToServiceUsagePlanListOutputWithContext(context.Background())
}

func (i ServiceUsagePlanListArgs) ToServiceUsagePlanListOutputWithContext(ctx context.Context) ServiceUsagePlanListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUsagePlanListOutput)
}

// ServiceUsagePlanListArrayInput is an input type that accepts ServiceUsagePlanListArray and ServiceUsagePlanListArrayOutput values.
// You can construct a concrete instance of `ServiceUsagePlanListArrayInput` via:
//
//          ServiceUsagePlanListArray{ ServiceUsagePlanListArgs{...} }
type ServiceUsagePlanListArrayInput interface {
	pulumi.Input

	ToServiceUsagePlanListArrayOutput() ServiceUsagePlanListArrayOutput
	ToServiceUsagePlanListArrayOutputWithContext(context.Context) ServiceUsagePlanListArrayOutput
}

type ServiceUsagePlanListArray []ServiceUsagePlanListInput

func (ServiceUsagePlanListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUsagePlanList)(nil)).Elem()
}

func (i ServiceUsagePlanListArray) ToServiceUsagePlanListArrayOutput() ServiceUsagePlanListArrayOutput {
	return i.ToServiceUsagePlanListArrayOutputWithContext(context.Background())
}

func (i ServiceUsagePlanListArray) ToServiceUsagePlanListArrayOutputWithContext(ctx context.Context) ServiceUsagePlanListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUsagePlanListArrayOutput)
}

type ServiceUsagePlanListOutput struct{ *pulumi.OutputState }

func (ServiceUsagePlanListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUsagePlanList)(nil)).Elem()
}

func (o ServiceUsagePlanListOutput) ToServiceUsagePlanListOutput() ServiceUsagePlanListOutput {
	return o
}

func (o ServiceUsagePlanListOutput) ToServiceUsagePlanListOutputWithContext(ctx context.Context) ServiceUsagePlanListOutput {
	return o
}

func (o ServiceUsagePlanListOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUsagePlanList) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

func (o ServiceUsagePlanListOutput) BindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUsagePlanList) *string { return v.BindType }).(pulumi.StringPtrOutput)
}

func (o ServiceUsagePlanListOutput) UsagePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUsagePlanList) *string { return v.UsagePlanId }).(pulumi.StringPtrOutput)
}

func (o ServiceUsagePlanListOutput) UsagePlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUsagePlanList) *string { return v.UsagePlanName }).(pulumi.StringPtrOutput)
}

type ServiceUsagePlanListArrayOutput struct{ *pulumi.OutputState }

func (ServiceUsagePlanListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUsagePlanList)(nil)).Elem()
}

func (o ServiceUsagePlanListArrayOutput) ToServiceUsagePlanListArrayOutput() ServiceUsagePlanListArrayOutput {
	return o
}

func (o ServiceUsagePlanListArrayOutput) ToServiceUsagePlanListArrayOutputWithContext(ctx context.Context) ServiceUsagePlanListArrayOutput {
	return o
}

func (o ServiceUsagePlanListArrayOutput) Index(i pulumi.IntInput) ServiceUsagePlanListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceUsagePlanList {
		return vs[0].([]ServiceUsagePlanList)[vs[1].(int)]
	}).(ServiceUsagePlanListOutput)
}

type UsagePlanAttachList struct {
	ApiId       *string `pulumi:"apiId"`
	ApiName     *string `pulumi:"apiName"`
	CreateTime  *string `pulumi:"createTime"`
	Environment *string `pulumi:"environment"`
	Method      *string `pulumi:"method"`
	ModifyTime  *string `pulumi:"modifyTime"`
	Path        *string `pulumi:"path"`
	ServiceId   *string `pulumi:"serviceId"`
	ServiceName *string `pulumi:"serviceName"`
}

// UsagePlanAttachListInput is an input type that accepts UsagePlanAttachListArgs and UsagePlanAttachListOutput values.
// You can construct a concrete instance of `UsagePlanAttachListInput` via:
//
//          UsagePlanAttachListArgs{...}
type UsagePlanAttachListInput interface {
	pulumi.Input

	ToUsagePlanAttachListOutput() UsagePlanAttachListOutput
	ToUsagePlanAttachListOutputWithContext(context.Context) UsagePlanAttachListOutput
}

type UsagePlanAttachListArgs struct {
	ApiId       pulumi.StringPtrInput `pulumi:"apiId"`
	ApiName     pulumi.StringPtrInput `pulumi:"apiName"`
	CreateTime  pulumi.StringPtrInput `pulumi:"createTime"`
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	Method      pulumi.StringPtrInput `pulumi:"method"`
	ModifyTime  pulumi.StringPtrInput `pulumi:"modifyTime"`
	Path        pulumi.StringPtrInput `pulumi:"path"`
	ServiceId   pulumi.StringPtrInput `pulumi:"serviceId"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (UsagePlanAttachListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanAttachList)(nil)).Elem()
}

func (i UsagePlanAttachListArgs) ToUsagePlanAttachListOutput() UsagePlanAttachListOutput {
	return i.ToUsagePlanAttachListOutputWithContext(context.Background())
}

func (i UsagePlanAttachListArgs) ToUsagePlanAttachListOutputWithContext(ctx context.Context) UsagePlanAttachListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanAttachListOutput)
}

// UsagePlanAttachListArrayInput is an input type that accepts UsagePlanAttachListArray and UsagePlanAttachListArrayOutput values.
// You can construct a concrete instance of `UsagePlanAttachListArrayInput` via:
//
//          UsagePlanAttachListArray{ UsagePlanAttachListArgs{...} }
type UsagePlanAttachListArrayInput interface {
	pulumi.Input

	ToUsagePlanAttachListArrayOutput() UsagePlanAttachListArrayOutput
	ToUsagePlanAttachListArrayOutputWithContext(context.Context) UsagePlanAttachListArrayOutput
}

type UsagePlanAttachListArray []UsagePlanAttachListInput

func (UsagePlanAttachListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanAttachList)(nil)).Elem()
}

func (i UsagePlanAttachListArray) ToUsagePlanAttachListArrayOutput() UsagePlanAttachListArrayOutput {
	return i.ToUsagePlanAttachListArrayOutputWithContext(context.Background())
}

func (i UsagePlanAttachListArray) ToUsagePlanAttachListArrayOutputWithContext(ctx context.Context) UsagePlanAttachListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanAttachListArrayOutput)
}

type UsagePlanAttachListOutput struct{ *pulumi.OutputState }

func (UsagePlanAttachListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanAttachList)(nil)).Elem()
}

func (o UsagePlanAttachListOutput) ToUsagePlanAttachListOutput() UsagePlanAttachListOutput {
	return o
}

func (o UsagePlanAttachListOutput) ToUsagePlanAttachListOutputWithContext(ctx context.Context) UsagePlanAttachListOutput {
	return o
}

func (o UsagePlanAttachListOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) ApiName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.ApiName }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) ModifyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.ModifyTime }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

func (o UsagePlanAttachListOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanAttachList) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type UsagePlanAttachListArrayOutput struct{ *pulumi.OutputState }

func (UsagePlanAttachListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanAttachList)(nil)).Elem()
}

func (o UsagePlanAttachListArrayOutput) ToUsagePlanAttachListArrayOutput() UsagePlanAttachListArrayOutput {
	return o
}

func (o UsagePlanAttachListArrayOutput) ToUsagePlanAttachListArrayOutputWithContext(ctx context.Context) UsagePlanAttachListArrayOutput {
	return o
}

func (o UsagePlanAttachListArrayOutput) Index(i pulumi.IntInput) UsagePlanAttachListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsagePlanAttachList {
		return vs[0].([]UsagePlanAttachList)[vs[1].(int)]
	}).(UsagePlanAttachListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*APIRequestParameterInput)(nil)).Elem(), APIRequestParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*APIRequestParameterArrayInput)(nil)).Elem(), APIRequestParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*APIResponseErrorCodeInput)(nil)).Elem(), APIResponseErrorCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*APIResponseErrorCodeArrayInput)(nil)).Elem(), APIResponseErrorCodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceApiListInput)(nil)).Elem(), ServiceApiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceApiListArrayInput)(nil)).Elem(), ServiceApiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceUsagePlanListInput)(nil)).Elem(), ServiceUsagePlanListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceUsagePlanListArrayInput)(nil)).Elem(), ServiceUsagePlanListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsagePlanAttachListInput)(nil)).Elem(), UsagePlanAttachListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsagePlanAttachListArrayInput)(nil)).Elem(), UsagePlanAttachListArray{})
	pulumi.RegisterOutputType(APIRequestParameterOutput{})
	pulumi.RegisterOutputType(APIRequestParameterArrayOutput{})
	pulumi.RegisterOutputType(APIResponseErrorCodeOutput{})
	pulumi.RegisterOutputType(APIResponseErrorCodeArrayOutput{})
	pulumi.RegisterOutputType(ServiceApiListOutput{})
	pulumi.RegisterOutputType(ServiceApiListArrayOutput{})
	pulumi.RegisterOutputType(ServiceUsagePlanListOutput{})
	pulumi.RegisterOutputType(ServiceUsagePlanListArrayOutput{})
	pulumi.RegisterOutputType(UsagePlanAttachListOutput{})
	pulumi.RegisterOutputType(UsagePlanAttachListArrayOutput{})
}
