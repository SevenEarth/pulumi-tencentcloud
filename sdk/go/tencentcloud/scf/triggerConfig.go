// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a scf triggerConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Scf.NewTriggerConfig(ctx, "triggerConfig", &Scf.TriggerConfigArgs{
// 			Enable:       pulumi.String("OPEN"),
// 			FunctionName: pulumi.String("keep-1676351130"),
// 			Namespace:    pulumi.String("default"),
// 			Qualifier:    pulumi.String(fmt.Sprintf("%v%v", "$", "DEFAULT")),
// 			TriggerName:  pulumi.String("SCF-timer-1685540160"),
// 			Type:         pulumi.String("timer"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// scf trigger_config can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import tencentcloud:Scf/triggerConfig:TriggerConfig trigger_config functionName#namespace#triggerName
// ```
type TriggerConfig struct {
	pulumi.CustomResourceState

	// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
	Enable pulumi.StringOutput `pulumi:"enable"`
	// Function name.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// Function namespace.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
	Qualifier pulumi.StringPtrOutput `pulumi:"qualifier"`
	// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
	TriggerDesc pulumi.StringOutput `pulumi:"triggerDesc"`
	// Trigger name.
	TriggerName pulumi.StringOutput `pulumi:"triggerName"`
	// Trigger Type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTriggerConfig registers a new resource with the given unique name, arguments, and options.
func NewTriggerConfig(ctx *pulumi.Context,
	name string, args *TriggerConfigArgs, opts ...pulumi.ResourceOption) (*TriggerConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	if args.TriggerName == nil {
		return nil, errors.New("invalid value for required argument 'TriggerName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TriggerConfig
	err := ctx.RegisterResource("tencentcloud:Scf/triggerConfig:TriggerConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTriggerConfig gets an existing TriggerConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTriggerConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TriggerConfigState, opts ...pulumi.ResourceOption) (*TriggerConfig, error) {
	var resource TriggerConfig
	err := ctx.ReadResource("tencentcloud:Scf/triggerConfig:TriggerConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TriggerConfig resources.
type triggerConfigState struct {
	// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
	Enable *string `pulumi:"enable"`
	// Function name.
	FunctionName *string `pulumi:"functionName"`
	// Function namespace.
	Namespace *string `pulumi:"namespace"`
	// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
	Qualifier *string `pulumi:"qualifier"`
	// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
	TriggerDesc *string `pulumi:"triggerDesc"`
	// Trigger name.
	TriggerName *string `pulumi:"triggerName"`
	// Trigger Type.
	Type *string `pulumi:"type"`
}

type TriggerConfigState struct {
	// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
	Enable pulumi.StringPtrInput
	// Function name.
	FunctionName pulumi.StringPtrInput
	// Function namespace.
	Namespace pulumi.StringPtrInput
	// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
	Qualifier pulumi.StringPtrInput
	// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
	TriggerDesc pulumi.StringPtrInput
	// Trigger name.
	TriggerName pulumi.StringPtrInput
	// Trigger Type.
	Type pulumi.StringPtrInput
}

func (TriggerConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerConfigState)(nil)).Elem()
}

type triggerConfigArgs struct {
	// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
	Enable string `pulumi:"enable"`
	// Function name.
	FunctionName string `pulumi:"functionName"`
	// Function namespace.
	Namespace *string `pulumi:"namespace"`
	// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
	Qualifier *string `pulumi:"qualifier"`
	// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
	TriggerDesc *string `pulumi:"triggerDesc"`
	// Trigger name.
	TriggerName string `pulumi:"triggerName"`
	// Trigger Type.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a TriggerConfig resource.
type TriggerConfigArgs struct {
	// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
	Enable pulumi.StringInput
	// Function name.
	FunctionName pulumi.StringInput
	// Function namespace.
	Namespace pulumi.StringPtrInput
	// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
	Qualifier pulumi.StringPtrInput
	// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
	TriggerDesc pulumi.StringPtrInput
	// Trigger name.
	TriggerName pulumi.StringInput
	// Trigger Type.
	Type pulumi.StringInput
}

func (TriggerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerConfigArgs)(nil)).Elem()
}

type TriggerConfigInput interface {
	pulumi.Input

	ToTriggerConfigOutput() TriggerConfigOutput
	ToTriggerConfigOutputWithContext(ctx context.Context) TriggerConfigOutput
}

func (*TriggerConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerConfig)(nil)).Elem()
}

func (i *TriggerConfig) ToTriggerConfigOutput() TriggerConfigOutput {
	return i.ToTriggerConfigOutputWithContext(context.Background())
}

func (i *TriggerConfig) ToTriggerConfigOutputWithContext(ctx context.Context) TriggerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerConfigOutput)
}

// TriggerConfigArrayInput is an input type that accepts TriggerConfigArray and TriggerConfigArrayOutput values.
// You can construct a concrete instance of `TriggerConfigArrayInput` via:
//
//          TriggerConfigArray{ TriggerConfigArgs{...} }
type TriggerConfigArrayInput interface {
	pulumi.Input

	ToTriggerConfigArrayOutput() TriggerConfigArrayOutput
	ToTriggerConfigArrayOutputWithContext(context.Context) TriggerConfigArrayOutput
}

type TriggerConfigArray []TriggerConfigInput

func (TriggerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TriggerConfig)(nil)).Elem()
}

func (i TriggerConfigArray) ToTriggerConfigArrayOutput() TriggerConfigArrayOutput {
	return i.ToTriggerConfigArrayOutputWithContext(context.Background())
}

func (i TriggerConfigArray) ToTriggerConfigArrayOutputWithContext(ctx context.Context) TriggerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerConfigArrayOutput)
}

// TriggerConfigMapInput is an input type that accepts TriggerConfigMap and TriggerConfigMapOutput values.
// You can construct a concrete instance of `TriggerConfigMapInput` via:
//
//          TriggerConfigMap{ "key": TriggerConfigArgs{...} }
type TriggerConfigMapInput interface {
	pulumi.Input

	ToTriggerConfigMapOutput() TriggerConfigMapOutput
	ToTriggerConfigMapOutputWithContext(context.Context) TriggerConfigMapOutput
}

type TriggerConfigMap map[string]TriggerConfigInput

func (TriggerConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TriggerConfig)(nil)).Elem()
}

func (i TriggerConfigMap) ToTriggerConfigMapOutput() TriggerConfigMapOutput {
	return i.ToTriggerConfigMapOutputWithContext(context.Background())
}

func (i TriggerConfigMap) ToTriggerConfigMapOutputWithContext(ctx context.Context) TriggerConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerConfigMapOutput)
}

type TriggerConfigOutput struct{ *pulumi.OutputState }

func (TriggerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerConfig)(nil)).Elem()
}

func (o TriggerConfigOutput) ToTriggerConfigOutput() TriggerConfigOutput {
	return o
}

func (o TriggerConfigOutput) ToTriggerConfigOutputWithContext(ctx context.Context) TriggerConfigOutput {
	return o
}

// Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
func (o TriggerConfigOutput) Enable() pulumi.StringOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringOutput { return v.Enable }).(pulumi.StringOutput)
}

// Function name.
func (o TriggerConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// Function namespace.
func (o TriggerConfigOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
func (o TriggerConfigOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringPtrOutput { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
func (o TriggerConfigOutput) TriggerDesc() pulumi.StringOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringOutput { return v.TriggerDesc }).(pulumi.StringOutput)
}

// Trigger name.
func (o TriggerConfigOutput) TriggerName() pulumi.StringOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringOutput { return v.TriggerName }).(pulumi.StringOutput)
}

// Trigger Type.
func (o TriggerConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TriggerConfig) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type TriggerConfigArrayOutput struct{ *pulumi.OutputState }

func (TriggerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TriggerConfig)(nil)).Elem()
}

func (o TriggerConfigArrayOutput) ToTriggerConfigArrayOutput() TriggerConfigArrayOutput {
	return o
}

func (o TriggerConfigArrayOutput) ToTriggerConfigArrayOutputWithContext(ctx context.Context) TriggerConfigArrayOutput {
	return o
}

func (o TriggerConfigArrayOutput) Index(i pulumi.IntInput) TriggerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TriggerConfig {
		return vs[0].([]*TriggerConfig)[vs[1].(int)]
	}).(TriggerConfigOutput)
}

type TriggerConfigMapOutput struct{ *pulumi.OutputState }

func (TriggerConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TriggerConfig)(nil)).Elem()
}

func (o TriggerConfigMapOutput) ToTriggerConfigMapOutput() TriggerConfigMapOutput {
	return o
}

func (o TriggerConfigMapOutput) ToTriggerConfigMapOutputWithContext(ctx context.Context) TriggerConfigMapOutput {
	return o
}

func (o TriggerConfigMapOutput) MapIndex(k pulumi.StringInput) TriggerConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TriggerConfig {
		return vs[0].(map[string]*TriggerConfig)[vs[1].(string)]
	}).(TriggerConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerConfigInput)(nil)).Elem(), &TriggerConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerConfigArrayInput)(nil)).Elem(), TriggerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerConfigMapInput)(nil)).Elem(), TriggerConfigMap{})
	pulumi.RegisterOutputType(TriggerConfigOutput{})
	pulumi.RegisterOutputType(TriggerConfigArrayOutput{})
	pulumi.RegisterOutputType(TriggerConfigMapOutput{})
}
