// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Logs(ctx *pulumi.Context, args *LogsArgs, opts ...pulumi.InvokeOption) (*LogsResult, error) {
	var rv LogsResult
	err := ctx.Invoke("tencentcloud:Scf/logs:Logs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Logs.
type LogsArgs struct {
	EndTime          *string `pulumi:"endTime"`
	FunctionName     string  `pulumi:"functionName"`
	InvokeRequestId  *string `pulumi:"invokeRequestId"`
	Limit            *int    `pulumi:"limit"`
	Namespace        *string `pulumi:"namespace"`
	Offset           *int    `pulumi:"offset"`
	Order            *string `pulumi:"order"`
	OrderBy          *string `pulumi:"orderBy"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RetCode          *string `pulumi:"retCode"`
	StartTime        *string `pulumi:"startTime"`
}

// A collection of values returned by Logs.
type LogsResult struct {
	EndTime      *string `pulumi:"endTime"`
	FunctionName string  `pulumi:"functionName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string    `pulumi:"id"`
	InvokeRequestId  *string   `pulumi:"invokeRequestId"`
	Limit            *int      `pulumi:"limit"`
	Logs             []LogsLog `pulumi:"logs"`
	Namespace        *string   `pulumi:"namespace"`
	Offset           *int      `pulumi:"offset"`
	Order            *string   `pulumi:"order"`
	OrderBy          *string   `pulumi:"orderBy"`
	ResultOutputFile *string   `pulumi:"resultOutputFile"`
	RetCode          *string   `pulumi:"retCode"`
	StartTime        *string   `pulumi:"startTime"`
}

func LogsOutput(ctx *pulumi.Context, args LogsOutputArgs, opts ...pulumi.InvokeOption) LogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LogsResult, error) {
			args := v.(LogsArgs)
			r, err := Logs(ctx, &args, opts...)
			var s LogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LogsResultOutput)
}

// A collection of arguments for invoking Logs.
type LogsOutputArgs struct {
	EndTime          pulumi.StringPtrInput `pulumi:"endTime"`
	FunctionName     pulumi.StringInput    `pulumi:"functionName"`
	InvokeRequestId  pulumi.StringPtrInput `pulumi:"invokeRequestId"`
	Limit            pulumi.IntPtrInput    `pulumi:"limit"`
	Namespace        pulumi.StringPtrInput `pulumi:"namespace"`
	Offset           pulumi.IntPtrInput    `pulumi:"offset"`
	Order            pulumi.StringPtrInput `pulumi:"order"`
	OrderBy          pulumi.StringPtrInput `pulumi:"orderBy"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RetCode          pulumi.StringPtrInput `pulumi:"retCode"`
	StartTime        pulumi.StringPtrInput `pulumi:"startTime"`
}

func (LogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsArgs)(nil)).Elem()
}

// A collection of values returned by Logs.
type LogsResultOutput struct{ *pulumi.OutputState }

func (LogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsResult)(nil)).Elem()
}

func (o LogsResultOutput) ToLogsResultOutput() LogsResultOutput {
	return o
}

func (o LogsResultOutput) ToLogsResultOutputWithContext(ctx context.Context) LogsResultOutput {
	return o
}

func (o LogsResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v LogsResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LogsResultOutput) InvokeRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.InvokeRequestId }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o LogsResultOutput) Logs() LogsLogArrayOutput {
	return o.ApplyT(func(v LogsResult) []LogsLog { return v.Logs }).(LogsLogArrayOutput)
}

func (o LogsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o LogsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) RetCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.RetCode }).(pulumi.StringPtrOutput)
}

func (o LogsResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LogsResultOutput{})
}
