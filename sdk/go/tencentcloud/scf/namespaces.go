// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Namespaces(ctx *pulumi.Context, args *NamespacesArgs, opts ...pulumi.InvokeOption) (*NamespacesResult, error) {
	var rv NamespacesResult
	err := ctx.Invoke("tencentcloud:Scf/namespaces:Namespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Namespaces.
type NamespacesArgs struct {
	Description      *string `pulumi:"description"`
	Namespace        *string `pulumi:"namespace"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by Namespaces.
type NamespacesResult struct {
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	Namespace        *string               `pulumi:"namespace"`
	Namespaces       []NamespacesNamespace `pulumi:"namespaces"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
}

func NamespacesOutput(ctx *pulumi.Context, args NamespacesOutputArgs, opts ...pulumi.InvokeOption) NamespacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (NamespacesResult, error) {
			args := v.(NamespacesArgs)
			r, err := Namespaces(ctx, &args, opts...)
			var s NamespacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(NamespacesResultOutput)
}

// A collection of arguments for invoking Namespaces.
type NamespacesOutputArgs struct {
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Namespace        pulumi.StringPtrInput `pulumi:"namespace"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (NamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacesArgs)(nil)).Elem()
}

// A collection of values returned by Namespaces.
type NamespacesResultOutput struct{ *pulumi.OutputState }

func (NamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacesResult)(nil)).Elem()
}

func (o NamespacesResultOutput) ToNamespacesResultOutput() NamespacesResultOutput {
	return o
}

func (o NamespacesResultOutput) ToNamespacesResultOutputWithContext(ctx context.Context) NamespacesResultOutput {
	return o
}

func (o NamespacesResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacesResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o NamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o NamespacesResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacesResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o NamespacesResultOutput) Namespaces() NamespacesNamespaceArrayOutput {
	return o.ApplyT(func(v NamespacesResult) []NamespacesNamespace { return v.Namespaces }).(NamespacesNamespaceArrayOutput)
}

func (o NamespacesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NamespacesResultOutput{})
}
