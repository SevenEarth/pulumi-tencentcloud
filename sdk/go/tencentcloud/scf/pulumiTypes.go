// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FunctionCfsConfig struct {
	CfsId          string  `pulumi:"cfsId"`
	IpAddress      *string `pulumi:"ipAddress"`
	LocalMountDir  string  `pulumi:"localMountDir"`
	MountInsId     string  `pulumi:"mountInsId"`
	MountSubnetId  *string `pulumi:"mountSubnetId"`
	MountVpcId     *string `pulumi:"mountVpcId"`
	RemoteMountDir string  `pulumi:"remoteMountDir"`
	UserGroupId    string  `pulumi:"userGroupId"`
	UserId         string  `pulumi:"userId"`
}

// FunctionCfsConfigInput is an input type that accepts FunctionCfsConfigArgs and FunctionCfsConfigOutput values.
// You can construct a concrete instance of `FunctionCfsConfigInput` via:
//
//          FunctionCfsConfigArgs{...}
type FunctionCfsConfigInput interface {
	pulumi.Input

	ToFunctionCfsConfigOutput() FunctionCfsConfigOutput
	ToFunctionCfsConfigOutputWithContext(context.Context) FunctionCfsConfigOutput
}

type FunctionCfsConfigArgs struct {
	CfsId          pulumi.StringInput    `pulumi:"cfsId"`
	IpAddress      pulumi.StringPtrInput `pulumi:"ipAddress"`
	LocalMountDir  pulumi.StringInput    `pulumi:"localMountDir"`
	MountInsId     pulumi.StringInput    `pulumi:"mountInsId"`
	MountSubnetId  pulumi.StringPtrInput `pulumi:"mountSubnetId"`
	MountVpcId     pulumi.StringPtrInput `pulumi:"mountVpcId"`
	RemoteMountDir pulumi.StringInput    `pulumi:"remoteMountDir"`
	UserGroupId    pulumi.StringInput    `pulumi:"userGroupId"`
	UserId         pulumi.StringInput    `pulumi:"userId"`
}

func (FunctionCfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCfsConfig)(nil)).Elem()
}

func (i FunctionCfsConfigArgs) ToFunctionCfsConfigOutput() FunctionCfsConfigOutput {
	return i.ToFunctionCfsConfigOutputWithContext(context.Background())
}

func (i FunctionCfsConfigArgs) ToFunctionCfsConfigOutputWithContext(ctx context.Context) FunctionCfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCfsConfigOutput)
}

// FunctionCfsConfigArrayInput is an input type that accepts FunctionCfsConfigArray and FunctionCfsConfigArrayOutput values.
// You can construct a concrete instance of `FunctionCfsConfigArrayInput` via:
//
//          FunctionCfsConfigArray{ FunctionCfsConfigArgs{...} }
type FunctionCfsConfigArrayInput interface {
	pulumi.Input

	ToFunctionCfsConfigArrayOutput() FunctionCfsConfigArrayOutput
	ToFunctionCfsConfigArrayOutputWithContext(context.Context) FunctionCfsConfigArrayOutput
}

type FunctionCfsConfigArray []FunctionCfsConfigInput

func (FunctionCfsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionCfsConfig)(nil)).Elem()
}

func (i FunctionCfsConfigArray) ToFunctionCfsConfigArrayOutput() FunctionCfsConfigArrayOutput {
	return i.ToFunctionCfsConfigArrayOutputWithContext(context.Background())
}

func (i FunctionCfsConfigArray) ToFunctionCfsConfigArrayOutputWithContext(ctx context.Context) FunctionCfsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCfsConfigArrayOutput)
}

type FunctionCfsConfigOutput struct{ *pulumi.OutputState }

func (FunctionCfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCfsConfig)(nil)).Elem()
}

func (o FunctionCfsConfigOutput) ToFunctionCfsConfigOutput() FunctionCfsConfigOutput {
	return o
}

func (o FunctionCfsConfigOutput) ToFunctionCfsConfigOutputWithContext(ctx context.Context) FunctionCfsConfigOutput {
	return o
}

func (o FunctionCfsConfigOutput) CfsId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.CfsId }).(pulumi.StringOutput)
}

func (o FunctionCfsConfigOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCfsConfig) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o FunctionCfsConfigOutput) LocalMountDir() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.LocalMountDir }).(pulumi.StringOutput)
}

func (o FunctionCfsConfigOutput) MountInsId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.MountInsId }).(pulumi.StringOutput)
}

func (o FunctionCfsConfigOutput) MountSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCfsConfig) *string { return v.MountSubnetId }).(pulumi.StringPtrOutput)
}

func (o FunctionCfsConfigOutput) MountVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCfsConfig) *string { return v.MountVpcId }).(pulumi.StringPtrOutput)
}

func (o FunctionCfsConfigOutput) RemoteMountDir() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.RemoteMountDir }).(pulumi.StringOutput)
}

func (o FunctionCfsConfigOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.UserGroupId }).(pulumi.StringOutput)
}

func (o FunctionCfsConfigOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCfsConfig) string { return v.UserId }).(pulumi.StringOutput)
}

type FunctionCfsConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionCfsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionCfsConfig)(nil)).Elem()
}

func (o FunctionCfsConfigArrayOutput) ToFunctionCfsConfigArrayOutput() FunctionCfsConfigArrayOutput {
	return o
}

func (o FunctionCfsConfigArrayOutput) ToFunctionCfsConfigArrayOutputWithContext(ctx context.Context) FunctionCfsConfigArrayOutput {
	return o
}

func (o FunctionCfsConfigArrayOutput) Index(i pulumi.IntInput) FunctionCfsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionCfsConfig {
		return vs[0].([]FunctionCfsConfig)[vs[1].(int)]
	}).(FunctionCfsConfigOutput)
}

type FunctionImageConfig struct {
	Args       *string `pulumi:"args"`
	Command    *string `pulumi:"command"`
	EntryPoint *string `pulumi:"entryPoint"`
	ImageType  string  `pulumi:"imageType"`
	ImageUri   string  `pulumi:"imageUri"`
	RegistryId *string `pulumi:"registryId"`
}

// FunctionImageConfigInput is an input type that accepts FunctionImageConfigArgs and FunctionImageConfigOutput values.
// You can construct a concrete instance of `FunctionImageConfigInput` via:
//
//          FunctionImageConfigArgs{...}
type FunctionImageConfigInput interface {
	pulumi.Input

	ToFunctionImageConfigOutput() FunctionImageConfigOutput
	ToFunctionImageConfigOutputWithContext(context.Context) FunctionImageConfigOutput
}

type FunctionImageConfigArgs struct {
	Args       pulumi.StringPtrInput `pulumi:"args"`
	Command    pulumi.StringPtrInput `pulumi:"command"`
	EntryPoint pulumi.StringPtrInput `pulumi:"entryPoint"`
	ImageType  pulumi.StringInput    `pulumi:"imageType"`
	ImageUri   pulumi.StringInput    `pulumi:"imageUri"`
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
}

func (FunctionImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return i.ToFunctionImageConfigOutputWithContext(context.Background())
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigOutput)
}

// FunctionImageConfigArrayInput is an input type that accepts FunctionImageConfigArray and FunctionImageConfigArrayOutput values.
// You can construct a concrete instance of `FunctionImageConfigArrayInput` via:
//
//          FunctionImageConfigArray{ FunctionImageConfigArgs{...} }
type FunctionImageConfigArrayInput interface {
	pulumi.Input

	ToFunctionImageConfigArrayOutput() FunctionImageConfigArrayOutput
	ToFunctionImageConfigArrayOutputWithContext(context.Context) FunctionImageConfigArrayOutput
}

type FunctionImageConfigArray []FunctionImageConfigInput

func (FunctionImageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionImageConfig)(nil)).Elem()
}

func (i FunctionImageConfigArray) ToFunctionImageConfigArrayOutput() FunctionImageConfigArrayOutput {
	return i.ToFunctionImageConfigArrayOutputWithContext(context.Background())
}

func (i FunctionImageConfigArray) ToFunctionImageConfigArrayOutputWithContext(ctx context.Context) FunctionImageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigArrayOutput)
}

type FunctionImageConfigOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.Args }).(pulumi.StringPtrOutput)
}

func (o FunctionImageConfigOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.Command }).(pulumi.StringPtrOutput)
}

func (o FunctionImageConfigOutput) EntryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.EntryPoint }).(pulumi.StringPtrOutput)
}

func (o FunctionImageConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionImageConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o FunctionImageConfigOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionImageConfig) string { return v.ImageUri }).(pulumi.StringOutput)
}

func (o FunctionImageConfigOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

type FunctionImageConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigArrayOutput) ToFunctionImageConfigArrayOutput() FunctionImageConfigArrayOutput {
	return o
}

func (o FunctionImageConfigArrayOutput) ToFunctionImageConfigArrayOutputWithContext(ctx context.Context) FunctionImageConfigArrayOutput {
	return o
}

func (o FunctionImageConfigArrayOutput) Index(i pulumi.IntInput) FunctionImageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionImageConfig {
		return vs[0].([]FunctionImageConfig)[vs[1].(int)]
	}).(FunctionImageConfigOutput)
}

type FunctionLayer struct {
	LayerName    string `pulumi:"layerName"`
	LayerVersion int    `pulumi:"layerVersion"`
}

// FunctionLayerInput is an input type that accepts FunctionLayerArgs and FunctionLayerOutput values.
// You can construct a concrete instance of `FunctionLayerInput` via:
//
//          FunctionLayerArgs{...}
type FunctionLayerInput interface {
	pulumi.Input

	ToFunctionLayerOutput() FunctionLayerOutput
	ToFunctionLayerOutputWithContext(context.Context) FunctionLayerOutput
}

type FunctionLayerArgs struct {
	LayerName    pulumi.StringInput `pulumi:"layerName"`
	LayerVersion pulumi.IntInput    `pulumi:"layerVersion"`
}

func (FunctionLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionLayer)(nil)).Elem()
}

func (i FunctionLayerArgs) ToFunctionLayerOutput() FunctionLayerOutput {
	return i.ToFunctionLayerOutputWithContext(context.Background())
}

func (i FunctionLayerArgs) ToFunctionLayerOutputWithContext(ctx context.Context) FunctionLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionLayerOutput)
}

// FunctionLayerArrayInput is an input type that accepts FunctionLayerArray and FunctionLayerArrayOutput values.
// You can construct a concrete instance of `FunctionLayerArrayInput` via:
//
//          FunctionLayerArray{ FunctionLayerArgs{...} }
type FunctionLayerArrayInput interface {
	pulumi.Input

	ToFunctionLayerArrayOutput() FunctionLayerArrayOutput
	ToFunctionLayerArrayOutputWithContext(context.Context) FunctionLayerArrayOutput
}

type FunctionLayerArray []FunctionLayerInput

func (FunctionLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionLayer)(nil)).Elem()
}

func (i FunctionLayerArray) ToFunctionLayerArrayOutput() FunctionLayerArrayOutput {
	return i.ToFunctionLayerArrayOutputWithContext(context.Background())
}

func (i FunctionLayerArray) ToFunctionLayerArrayOutputWithContext(ctx context.Context) FunctionLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionLayerArrayOutput)
}

type FunctionLayerOutput struct{ *pulumi.OutputState }

func (FunctionLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionLayer)(nil)).Elem()
}

func (o FunctionLayerOutput) ToFunctionLayerOutput() FunctionLayerOutput {
	return o
}

func (o FunctionLayerOutput) ToFunctionLayerOutputWithContext(ctx context.Context) FunctionLayerOutput {
	return o
}

func (o FunctionLayerOutput) LayerName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionLayer) string { return v.LayerName }).(pulumi.StringOutput)
}

func (o FunctionLayerOutput) LayerVersion() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionLayer) int { return v.LayerVersion }).(pulumi.IntOutput)
}

type FunctionLayerArrayOutput struct{ *pulumi.OutputState }

func (FunctionLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionLayer)(nil)).Elem()
}

func (o FunctionLayerArrayOutput) ToFunctionLayerArrayOutput() FunctionLayerArrayOutput {
	return o
}

func (o FunctionLayerArrayOutput) ToFunctionLayerArrayOutputWithContext(ctx context.Context) FunctionLayerArrayOutput {
	return o
}

func (o FunctionLayerArrayOutput) Index(i pulumi.IntInput) FunctionLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionLayer {
		return vs[0].([]FunctionLayer)[vs[1].(int)]
	}).(FunctionLayerOutput)
}

type FunctionTrigger struct {
	CosRegion   *string `pulumi:"cosRegion"`
	Name        string  `pulumi:"name"`
	TriggerDesc string  `pulumi:"triggerDesc"`
	Type        string  `pulumi:"type"`
}

// FunctionTriggerInput is an input type that accepts FunctionTriggerArgs and FunctionTriggerOutput values.
// You can construct a concrete instance of `FunctionTriggerInput` via:
//
//          FunctionTriggerArgs{...}
type FunctionTriggerInput interface {
	pulumi.Input

	ToFunctionTriggerOutput() FunctionTriggerOutput
	ToFunctionTriggerOutputWithContext(context.Context) FunctionTriggerOutput
}

type FunctionTriggerArgs struct {
	CosRegion   pulumi.StringPtrInput `pulumi:"cosRegion"`
	Name        pulumi.StringInput    `pulumi:"name"`
	TriggerDesc pulumi.StringInput    `pulumi:"triggerDesc"`
	Type        pulumi.StringInput    `pulumi:"type"`
}

func (FunctionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTrigger)(nil)).Elem()
}

func (i FunctionTriggerArgs) ToFunctionTriggerOutput() FunctionTriggerOutput {
	return i.ToFunctionTriggerOutputWithContext(context.Background())
}

func (i FunctionTriggerArgs) ToFunctionTriggerOutputWithContext(ctx context.Context) FunctionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerOutput)
}

// FunctionTriggerArrayInput is an input type that accepts FunctionTriggerArray and FunctionTriggerArrayOutput values.
// You can construct a concrete instance of `FunctionTriggerArrayInput` via:
//
//          FunctionTriggerArray{ FunctionTriggerArgs{...} }
type FunctionTriggerArrayInput interface {
	pulumi.Input

	ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput
	ToFunctionTriggerArrayOutputWithContext(context.Context) FunctionTriggerArrayOutput
}

type FunctionTriggerArray []FunctionTriggerInput

func (FunctionTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTrigger)(nil)).Elem()
}

func (i FunctionTriggerArray) ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput {
	return i.ToFunctionTriggerArrayOutputWithContext(context.Background())
}

func (i FunctionTriggerArray) ToFunctionTriggerArrayOutputWithContext(ctx context.Context) FunctionTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerArrayOutput)
}

type FunctionTriggerOutput struct{ *pulumi.OutputState }

func (FunctionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTrigger)(nil)).Elem()
}

func (o FunctionTriggerOutput) ToFunctionTriggerOutput() FunctionTriggerOutput {
	return o
}

func (o FunctionTriggerOutput) ToFunctionTriggerOutputWithContext(ctx context.Context) FunctionTriggerOutput {
	return o
}

func (o FunctionTriggerOutput) CosRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTrigger) *string { return v.CosRegion }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTrigger) string { return v.Name }).(pulumi.StringOutput)
}

func (o FunctionTriggerOutput) TriggerDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTrigger) string { return v.TriggerDesc }).(pulumi.StringOutput)
}

func (o FunctionTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTrigger) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionTriggerArrayOutput struct{ *pulumi.OutputState }

func (FunctionTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTrigger)(nil)).Elem()
}

func (o FunctionTriggerArrayOutput) ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput {
	return o
}

func (o FunctionTriggerArrayOutput) ToFunctionTriggerArrayOutputWithContext(ctx context.Context) FunctionTriggerArrayOutput {
	return o
}

func (o FunctionTriggerArrayOutput) Index(i pulumi.IntInput) FunctionTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionTrigger {
		return vs[0].([]FunctionTrigger)[vs[1].(int)]
	}).(FunctionTriggerOutput)
}

type FunctionTriggerInfo struct {
	CreateTime     *string `pulumi:"createTime"`
	CustomArgument *string `pulumi:"customArgument"`
	Enable         *bool   `pulumi:"enable"`
	ModifyTime     *string `pulumi:"modifyTime"`
	Name           *string `pulumi:"name"`
	TriggerDesc    *string `pulumi:"triggerDesc"`
	Type           *string `pulumi:"type"`
}

// FunctionTriggerInfoInput is an input type that accepts FunctionTriggerInfoArgs and FunctionTriggerInfoOutput values.
// You can construct a concrete instance of `FunctionTriggerInfoInput` via:
//
//          FunctionTriggerInfoArgs{...}
type FunctionTriggerInfoInput interface {
	pulumi.Input

	ToFunctionTriggerInfoOutput() FunctionTriggerInfoOutput
	ToFunctionTriggerInfoOutputWithContext(context.Context) FunctionTriggerInfoOutput
}

type FunctionTriggerInfoArgs struct {
	CreateTime     pulumi.StringPtrInput `pulumi:"createTime"`
	CustomArgument pulumi.StringPtrInput `pulumi:"customArgument"`
	Enable         pulumi.BoolPtrInput   `pulumi:"enable"`
	ModifyTime     pulumi.StringPtrInput `pulumi:"modifyTime"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
	TriggerDesc    pulumi.StringPtrInput `pulumi:"triggerDesc"`
	Type           pulumi.StringPtrInput `pulumi:"type"`
}

func (FunctionTriggerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerInfo)(nil)).Elem()
}

func (i FunctionTriggerInfoArgs) ToFunctionTriggerInfoOutput() FunctionTriggerInfoOutput {
	return i.ToFunctionTriggerInfoOutputWithContext(context.Background())
}

func (i FunctionTriggerInfoArgs) ToFunctionTriggerInfoOutputWithContext(ctx context.Context) FunctionTriggerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerInfoOutput)
}

// FunctionTriggerInfoArrayInput is an input type that accepts FunctionTriggerInfoArray and FunctionTriggerInfoArrayOutput values.
// You can construct a concrete instance of `FunctionTriggerInfoArrayInput` via:
//
//          FunctionTriggerInfoArray{ FunctionTriggerInfoArgs{...} }
type FunctionTriggerInfoArrayInput interface {
	pulumi.Input

	ToFunctionTriggerInfoArrayOutput() FunctionTriggerInfoArrayOutput
	ToFunctionTriggerInfoArrayOutputWithContext(context.Context) FunctionTriggerInfoArrayOutput
}

type FunctionTriggerInfoArray []FunctionTriggerInfoInput

func (FunctionTriggerInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTriggerInfo)(nil)).Elem()
}

func (i FunctionTriggerInfoArray) ToFunctionTriggerInfoArrayOutput() FunctionTriggerInfoArrayOutput {
	return i.ToFunctionTriggerInfoArrayOutputWithContext(context.Background())
}

func (i FunctionTriggerInfoArray) ToFunctionTriggerInfoArrayOutputWithContext(ctx context.Context) FunctionTriggerInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerInfoArrayOutput)
}

type FunctionTriggerInfoOutput struct{ *pulumi.OutputState }

func (FunctionTriggerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerInfo)(nil)).Elem()
}

func (o FunctionTriggerInfoOutput) ToFunctionTriggerInfoOutput() FunctionTriggerInfoOutput {
	return o
}

func (o FunctionTriggerInfoOutput) ToFunctionTriggerInfoOutputWithContext(ctx context.Context) FunctionTriggerInfoOutput {
	return o
}

func (o FunctionTriggerInfoOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerInfoOutput) CustomArgument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.CustomArgument }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerInfoOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o FunctionTriggerInfoOutput) ModifyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.ModifyTime }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerInfoOutput) TriggerDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.TriggerDesc }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FunctionTriggerInfoArrayOutput struct{ *pulumi.OutputState }

func (FunctionTriggerInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTriggerInfo)(nil)).Elem()
}

func (o FunctionTriggerInfoArrayOutput) ToFunctionTriggerInfoArrayOutput() FunctionTriggerInfoArrayOutput {
	return o
}

func (o FunctionTriggerInfoArrayOutput) ToFunctionTriggerInfoArrayOutputWithContext(ctx context.Context) FunctionTriggerInfoArrayOutput {
	return o
}

func (o FunctionTriggerInfoArrayOutput) Index(i pulumi.IntInput) FunctionTriggerInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionTriggerInfo {
		return vs[0].([]FunctionTriggerInfo)[vs[1].(int)]
	}).(FunctionTriggerInfoOutput)
}

type FunctionsFunction struct {
	ClsLogsetId       string                         `pulumi:"clsLogsetId"`
	ClsTopicId        string                         `pulumi:"clsTopicId"`
	CodeError         string                         `pulumi:"codeError"`
	CodeResult        string                         `pulumi:"codeResult"`
	CodeSize          int                            `pulumi:"codeSize"`
	CreateTime        string                         `pulumi:"createTime"`
	Description       string                         `pulumi:"description"`
	EipFixed          bool                           `pulumi:"eipFixed"`
	Eips              []string                       `pulumi:"eips"`
	EnableEipConfig   bool                           `pulumi:"enableEipConfig"`
	EnablePublicNet   bool                           `pulumi:"enablePublicNet"`
	Environment       map[string]interface{}         `pulumi:"environment"`
	ErrNo             int                            `pulumi:"errNo"`
	Handler           string                         `pulumi:"handler"`
	Host              string                         `pulumi:"host"`
	InstallDependency bool                           `pulumi:"installDependency"`
	L5Enable          bool                           `pulumi:"l5Enable"`
	MemSize           int                            `pulumi:"memSize"`
	ModifyTime        string                         `pulumi:"modifyTime"`
	Name              string                         `pulumi:"name"`
	Namespace         string                         `pulumi:"namespace"`
	Role              string                         `pulumi:"role"`
	Runtime           string                         `pulumi:"runtime"`
	Status            string                         `pulumi:"status"`
	StatusDesc        string                         `pulumi:"statusDesc"`
	SubnetId          string                         `pulumi:"subnetId"`
	Tags              map[string]interface{}         `pulumi:"tags"`
	Timeout           int                            `pulumi:"timeout"`
	TriggerInfos      []FunctionsFunctionTriggerInfo `pulumi:"triggerInfos"`
	Vip               string                         `pulumi:"vip"`
	VpcId             string                         `pulumi:"vpcId"`
}

// FunctionsFunctionInput is an input type that accepts FunctionsFunctionArgs and FunctionsFunctionOutput values.
// You can construct a concrete instance of `FunctionsFunctionInput` via:
//
//          FunctionsFunctionArgs{...}
type FunctionsFunctionInput interface {
	pulumi.Input

	ToFunctionsFunctionOutput() FunctionsFunctionOutput
	ToFunctionsFunctionOutputWithContext(context.Context) FunctionsFunctionOutput
}

type FunctionsFunctionArgs struct {
	ClsLogsetId       pulumi.StringInput                     `pulumi:"clsLogsetId"`
	ClsTopicId        pulumi.StringInput                     `pulumi:"clsTopicId"`
	CodeError         pulumi.StringInput                     `pulumi:"codeError"`
	CodeResult        pulumi.StringInput                     `pulumi:"codeResult"`
	CodeSize          pulumi.IntInput                        `pulumi:"codeSize"`
	CreateTime        pulumi.StringInput                     `pulumi:"createTime"`
	Description       pulumi.StringInput                     `pulumi:"description"`
	EipFixed          pulumi.BoolInput                       `pulumi:"eipFixed"`
	Eips              pulumi.StringArrayInput                `pulumi:"eips"`
	EnableEipConfig   pulumi.BoolInput                       `pulumi:"enableEipConfig"`
	EnablePublicNet   pulumi.BoolInput                       `pulumi:"enablePublicNet"`
	Environment       pulumi.MapInput                        `pulumi:"environment"`
	ErrNo             pulumi.IntInput                        `pulumi:"errNo"`
	Handler           pulumi.StringInput                     `pulumi:"handler"`
	Host              pulumi.StringInput                     `pulumi:"host"`
	InstallDependency pulumi.BoolInput                       `pulumi:"installDependency"`
	L5Enable          pulumi.BoolInput                       `pulumi:"l5Enable"`
	MemSize           pulumi.IntInput                        `pulumi:"memSize"`
	ModifyTime        pulumi.StringInput                     `pulumi:"modifyTime"`
	Name              pulumi.StringInput                     `pulumi:"name"`
	Namespace         pulumi.StringInput                     `pulumi:"namespace"`
	Role              pulumi.StringInput                     `pulumi:"role"`
	Runtime           pulumi.StringInput                     `pulumi:"runtime"`
	Status            pulumi.StringInput                     `pulumi:"status"`
	StatusDesc        pulumi.StringInput                     `pulumi:"statusDesc"`
	SubnetId          pulumi.StringInput                     `pulumi:"subnetId"`
	Tags              pulumi.MapInput                        `pulumi:"tags"`
	Timeout           pulumi.IntInput                        `pulumi:"timeout"`
	TriggerInfos      FunctionsFunctionTriggerInfoArrayInput `pulumi:"triggerInfos"`
	Vip               pulumi.StringInput                     `pulumi:"vip"`
	VpcId             pulumi.StringInput                     `pulumi:"vpcId"`
}

func (FunctionsFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsFunction)(nil)).Elem()
}

func (i FunctionsFunctionArgs) ToFunctionsFunctionOutput() FunctionsFunctionOutput {
	return i.ToFunctionsFunctionOutputWithContext(context.Background())
}

func (i FunctionsFunctionArgs) ToFunctionsFunctionOutputWithContext(ctx context.Context) FunctionsFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsFunctionOutput)
}

// FunctionsFunctionArrayInput is an input type that accepts FunctionsFunctionArray and FunctionsFunctionArrayOutput values.
// You can construct a concrete instance of `FunctionsFunctionArrayInput` via:
//
//          FunctionsFunctionArray{ FunctionsFunctionArgs{...} }
type FunctionsFunctionArrayInput interface {
	pulumi.Input

	ToFunctionsFunctionArrayOutput() FunctionsFunctionArrayOutput
	ToFunctionsFunctionArrayOutputWithContext(context.Context) FunctionsFunctionArrayOutput
}

type FunctionsFunctionArray []FunctionsFunctionInput

func (FunctionsFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsFunction)(nil)).Elem()
}

func (i FunctionsFunctionArray) ToFunctionsFunctionArrayOutput() FunctionsFunctionArrayOutput {
	return i.ToFunctionsFunctionArrayOutputWithContext(context.Background())
}

func (i FunctionsFunctionArray) ToFunctionsFunctionArrayOutputWithContext(ctx context.Context) FunctionsFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsFunctionArrayOutput)
}

type FunctionsFunctionOutput struct{ *pulumi.OutputState }

func (FunctionsFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsFunction)(nil)).Elem()
}

func (o FunctionsFunctionOutput) ToFunctionsFunctionOutput() FunctionsFunctionOutput {
	return o
}

func (o FunctionsFunctionOutput) ToFunctionsFunctionOutputWithContext(ctx context.Context) FunctionsFunctionOutput {
	return o
}

func (o FunctionsFunctionOutput) ClsLogsetId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.ClsLogsetId }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) ClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.ClsTopicId }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) CodeError() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.CodeError }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) CodeResult() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.CodeResult }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) CodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsFunction) int { return v.CodeSize }).(pulumi.IntOutput)
}

func (o FunctionsFunctionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Description }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) EipFixed() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunction) bool { return v.EipFixed }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionOutput) Eips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionsFunction) []string { return v.Eips }).(pulumi.StringArrayOutput)
}

func (o FunctionsFunctionOutput) EnableEipConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunction) bool { return v.EnableEipConfig }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionOutput) EnablePublicNet() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunction) bool { return v.EnablePublicNet }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionOutput) Environment() pulumi.MapOutput {
	return o.ApplyT(func(v FunctionsFunction) map[string]interface{} { return v.Environment }).(pulumi.MapOutput)
}

func (o FunctionsFunctionOutput) ErrNo() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsFunction) int { return v.ErrNo }).(pulumi.IntOutput)
}

func (o FunctionsFunctionOutput) Handler() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Handler }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Host }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) InstallDependency() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunction) bool { return v.InstallDependency }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionOutput) L5Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunction) bool { return v.L5Enable }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsFunction) int { return v.MemSize }).(pulumi.IntOutput)
}

func (o FunctionsFunctionOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Name }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Role }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Runtime }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Status }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) StatusDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.StatusDesc }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v FunctionsFunction) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o FunctionsFunctionOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsFunction) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o FunctionsFunctionOutput) TriggerInfos() FunctionsFunctionTriggerInfoArrayOutput {
	return o.ApplyT(func(v FunctionsFunction) []FunctionsFunctionTriggerInfo { return v.TriggerInfos }).(FunctionsFunctionTriggerInfoArrayOutput)
}

func (o FunctionsFunctionOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.Vip }).(pulumi.StringOutput)
}

func (o FunctionsFunctionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunction) string { return v.VpcId }).(pulumi.StringOutput)
}

type FunctionsFunctionArrayOutput struct{ *pulumi.OutputState }

func (FunctionsFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsFunction)(nil)).Elem()
}

func (o FunctionsFunctionArrayOutput) ToFunctionsFunctionArrayOutput() FunctionsFunctionArrayOutput {
	return o
}

func (o FunctionsFunctionArrayOutput) ToFunctionsFunctionArrayOutputWithContext(ctx context.Context) FunctionsFunctionArrayOutput {
	return o
}

func (o FunctionsFunctionArrayOutput) Index(i pulumi.IntInput) FunctionsFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsFunction {
		return vs[0].([]FunctionsFunction)[vs[1].(int)]
	}).(FunctionsFunctionOutput)
}

type FunctionsFunctionTriggerInfo struct {
	CreateTime     string `pulumi:"createTime"`
	CustomArgument string `pulumi:"customArgument"`
	Enable         bool   `pulumi:"enable"`
	ModifyTime     string `pulumi:"modifyTime"`
	Name           string `pulumi:"name"`
	TriggerDesc    string `pulumi:"triggerDesc"`
	Type           string `pulumi:"type"`
}

// FunctionsFunctionTriggerInfoInput is an input type that accepts FunctionsFunctionTriggerInfoArgs and FunctionsFunctionTriggerInfoOutput values.
// You can construct a concrete instance of `FunctionsFunctionTriggerInfoInput` via:
//
//          FunctionsFunctionTriggerInfoArgs{...}
type FunctionsFunctionTriggerInfoInput interface {
	pulumi.Input

	ToFunctionsFunctionTriggerInfoOutput() FunctionsFunctionTriggerInfoOutput
	ToFunctionsFunctionTriggerInfoOutputWithContext(context.Context) FunctionsFunctionTriggerInfoOutput
}

type FunctionsFunctionTriggerInfoArgs struct {
	CreateTime     pulumi.StringInput `pulumi:"createTime"`
	CustomArgument pulumi.StringInput `pulumi:"customArgument"`
	Enable         pulumi.BoolInput   `pulumi:"enable"`
	ModifyTime     pulumi.StringInput `pulumi:"modifyTime"`
	Name           pulumi.StringInput `pulumi:"name"`
	TriggerDesc    pulumi.StringInput `pulumi:"triggerDesc"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (FunctionsFunctionTriggerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsFunctionTriggerInfo)(nil)).Elem()
}

func (i FunctionsFunctionTriggerInfoArgs) ToFunctionsFunctionTriggerInfoOutput() FunctionsFunctionTriggerInfoOutput {
	return i.ToFunctionsFunctionTriggerInfoOutputWithContext(context.Background())
}

func (i FunctionsFunctionTriggerInfoArgs) ToFunctionsFunctionTriggerInfoOutputWithContext(ctx context.Context) FunctionsFunctionTriggerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsFunctionTriggerInfoOutput)
}

// FunctionsFunctionTriggerInfoArrayInput is an input type that accepts FunctionsFunctionTriggerInfoArray and FunctionsFunctionTriggerInfoArrayOutput values.
// You can construct a concrete instance of `FunctionsFunctionTriggerInfoArrayInput` via:
//
//          FunctionsFunctionTriggerInfoArray{ FunctionsFunctionTriggerInfoArgs{...} }
type FunctionsFunctionTriggerInfoArrayInput interface {
	pulumi.Input

	ToFunctionsFunctionTriggerInfoArrayOutput() FunctionsFunctionTriggerInfoArrayOutput
	ToFunctionsFunctionTriggerInfoArrayOutputWithContext(context.Context) FunctionsFunctionTriggerInfoArrayOutput
}

type FunctionsFunctionTriggerInfoArray []FunctionsFunctionTriggerInfoInput

func (FunctionsFunctionTriggerInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsFunctionTriggerInfo)(nil)).Elem()
}

func (i FunctionsFunctionTriggerInfoArray) ToFunctionsFunctionTriggerInfoArrayOutput() FunctionsFunctionTriggerInfoArrayOutput {
	return i.ToFunctionsFunctionTriggerInfoArrayOutputWithContext(context.Background())
}

func (i FunctionsFunctionTriggerInfoArray) ToFunctionsFunctionTriggerInfoArrayOutputWithContext(ctx context.Context) FunctionsFunctionTriggerInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsFunctionTriggerInfoArrayOutput)
}

type FunctionsFunctionTriggerInfoOutput struct{ *pulumi.OutputState }

func (FunctionsFunctionTriggerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsFunctionTriggerInfo)(nil)).Elem()
}

func (o FunctionsFunctionTriggerInfoOutput) ToFunctionsFunctionTriggerInfoOutput() FunctionsFunctionTriggerInfoOutput {
	return o
}

func (o FunctionsFunctionTriggerInfoOutput) ToFunctionsFunctionTriggerInfoOutputWithContext(ctx context.Context) FunctionsFunctionTriggerInfoOutput {
	return o
}

func (o FunctionsFunctionTriggerInfoOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) CustomArgument() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.CustomArgument }).(pulumi.StringOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) bool { return v.Enable }).(pulumi.BoolOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) TriggerDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.TriggerDesc }).(pulumi.StringOutput)
}

func (o FunctionsFunctionTriggerInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsFunctionTriggerInfo) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionsFunctionTriggerInfoArrayOutput struct{ *pulumi.OutputState }

func (FunctionsFunctionTriggerInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsFunctionTriggerInfo)(nil)).Elem()
}

func (o FunctionsFunctionTriggerInfoArrayOutput) ToFunctionsFunctionTriggerInfoArrayOutput() FunctionsFunctionTriggerInfoArrayOutput {
	return o
}

func (o FunctionsFunctionTriggerInfoArrayOutput) ToFunctionsFunctionTriggerInfoArrayOutputWithContext(ctx context.Context) FunctionsFunctionTriggerInfoArrayOutput {
	return o
}

func (o FunctionsFunctionTriggerInfoArrayOutput) Index(i pulumi.IntInput) FunctionsFunctionTriggerInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsFunctionTriggerInfo {
		return vs[0].([]FunctionsFunctionTriggerInfo)[vs[1].(int)]
	}).(FunctionsFunctionTriggerInfoOutput)
}

type LayerContent struct {
	CosBucketName   *string `pulumi:"cosBucketName"`
	CosBucketRegion *string `pulumi:"cosBucketRegion"`
	CosObjectName   *string `pulumi:"cosObjectName"`
	ZipFile         *string `pulumi:"zipFile"`
}

// LayerContentInput is an input type that accepts LayerContentArgs and LayerContentOutput values.
// You can construct a concrete instance of `LayerContentInput` via:
//
//          LayerContentArgs{...}
type LayerContentInput interface {
	pulumi.Input

	ToLayerContentOutput() LayerContentOutput
	ToLayerContentOutputWithContext(context.Context) LayerContentOutput
}

type LayerContentArgs struct {
	CosBucketName   pulumi.StringPtrInput `pulumi:"cosBucketName"`
	CosBucketRegion pulumi.StringPtrInput `pulumi:"cosBucketRegion"`
	CosObjectName   pulumi.StringPtrInput `pulumi:"cosObjectName"`
	ZipFile         pulumi.StringPtrInput `pulumi:"zipFile"`
}

func (LayerContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LayerContent)(nil)).Elem()
}

func (i LayerContentArgs) ToLayerContentOutput() LayerContentOutput {
	return i.ToLayerContentOutputWithContext(context.Background())
}

func (i LayerContentArgs) ToLayerContentOutputWithContext(ctx context.Context) LayerContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerContentOutput)
}

func (i LayerContentArgs) ToLayerContentPtrOutput() LayerContentPtrOutput {
	return i.ToLayerContentPtrOutputWithContext(context.Background())
}

func (i LayerContentArgs) ToLayerContentPtrOutputWithContext(ctx context.Context) LayerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerContentOutput).ToLayerContentPtrOutputWithContext(ctx)
}

// LayerContentPtrInput is an input type that accepts LayerContentArgs, LayerContentPtr and LayerContentPtrOutput values.
// You can construct a concrete instance of `LayerContentPtrInput` via:
//
//          LayerContentArgs{...}
//
//  or:
//
//          nil
type LayerContentPtrInput interface {
	pulumi.Input

	ToLayerContentPtrOutput() LayerContentPtrOutput
	ToLayerContentPtrOutputWithContext(context.Context) LayerContentPtrOutput
}

type layerContentPtrType LayerContentArgs

func LayerContentPtr(v *LayerContentArgs) LayerContentPtrInput {
	return (*layerContentPtrType)(v)
}

func (*layerContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LayerContent)(nil)).Elem()
}

func (i *layerContentPtrType) ToLayerContentPtrOutput() LayerContentPtrOutput {
	return i.ToLayerContentPtrOutputWithContext(context.Background())
}

func (i *layerContentPtrType) ToLayerContentPtrOutputWithContext(ctx context.Context) LayerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerContentPtrOutput)
}

type LayerContentOutput struct{ *pulumi.OutputState }

func (LayerContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LayerContent)(nil)).Elem()
}

func (o LayerContentOutput) ToLayerContentOutput() LayerContentOutput {
	return o
}

func (o LayerContentOutput) ToLayerContentOutputWithContext(ctx context.Context) LayerContentOutput {
	return o
}

func (o LayerContentOutput) ToLayerContentPtrOutput() LayerContentPtrOutput {
	return o.ToLayerContentPtrOutputWithContext(context.Background())
}

func (o LayerContentOutput) ToLayerContentPtrOutputWithContext(ctx context.Context) LayerContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LayerContent) *LayerContent {
		return &v
	}).(LayerContentPtrOutput)
}

func (o LayerContentOutput) CosBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerContent) *string { return v.CosBucketName }).(pulumi.StringPtrOutput)
}

func (o LayerContentOutput) CosBucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerContent) *string { return v.CosBucketRegion }).(pulumi.StringPtrOutput)
}

func (o LayerContentOutput) CosObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerContent) *string { return v.CosObjectName }).(pulumi.StringPtrOutput)
}

func (o LayerContentOutput) ZipFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerContent) *string { return v.ZipFile }).(pulumi.StringPtrOutput)
}

type LayerContentPtrOutput struct{ *pulumi.OutputState }

func (LayerContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LayerContent)(nil)).Elem()
}

func (o LayerContentPtrOutput) ToLayerContentPtrOutput() LayerContentPtrOutput {
	return o
}

func (o LayerContentPtrOutput) ToLayerContentPtrOutputWithContext(ctx context.Context) LayerContentPtrOutput {
	return o
}

func (o LayerContentPtrOutput) Elem() LayerContentOutput {
	return o.ApplyT(func(v *LayerContent) LayerContent {
		if v != nil {
			return *v
		}
		var ret LayerContent
		return ret
	}).(LayerContentOutput)
}

func (o LayerContentPtrOutput) CosBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerContent) *string {
		if v == nil {
			return nil
		}
		return v.CosBucketName
	}).(pulumi.StringPtrOutput)
}

func (o LayerContentPtrOutput) CosBucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerContent) *string {
		if v == nil {
			return nil
		}
		return v.CosBucketRegion
	}).(pulumi.StringPtrOutput)
}

func (o LayerContentPtrOutput) CosObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerContent) *string {
		if v == nil {
			return nil
		}
		return v.CosObjectName
	}).(pulumi.StringPtrOutput)
}

func (o LayerContentPtrOutput) ZipFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerContent) *string {
		if v == nil {
			return nil
		}
		return v.ZipFile
	}).(pulumi.StringPtrOutput)
}

type LogsLog struct {
	BillDuration   int     `pulumi:"billDuration"`
	Duration       float64 `pulumi:"duration"`
	FunctionName   string  `pulumi:"functionName"`
	InvokeFinished int     `pulumi:"invokeFinished"`
	Level          string  `pulumi:"level"`
	Log            string  `pulumi:"log"`
	MemUsage       int     `pulumi:"memUsage"`
	RequestId      string  `pulumi:"requestId"`
	RetCode        int     `pulumi:"retCode"`
	RetMsg         string  `pulumi:"retMsg"`
	Source         string  `pulumi:"source"`
	StartTime      string  `pulumi:"startTime"`
}

// LogsLogInput is an input type that accepts LogsLogArgs and LogsLogOutput values.
// You can construct a concrete instance of `LogsLogInput` via:
//
//          LogsLogArgs{...}
type LogsLogInput interface {
	pulumi.Input

	ToLogsLogOutput() LogsLogOutput
	ToLogsLogOutputWithContext(context.Context) LogsLogOutput
}

type LogsLogArgs struct {
	BillDuration   pulumi.IntInput     `pulumi:"billDuration"`
	Duration       pulumi.Float64Input `pulumi:"duration"`
	FunctionName   pulumi.StringInput  `pulumi:"functionName"`
	InvokeFinished pulumi.IntInput     `pulumi:"invokeFinished"`
	Level          pulumi.StringInput  `pulumi:"level"`
	Log            pulumi.StringInput  `pulumi:"log"`
	MemUsage       pulumi.IntInput     `pulumi:"memUsage"`
	RequestId      pulumi.StringInput  `pulumi:"requestId"`
	RetCode        pulumi.IntInput     `pulumi:"retCode"`
	RetMsg         pulumi.StringInput  `pulumi:"retMsg"`
	Source         pulumi.StringInput  `pulumi:"source"`
	StartTime      pulumi.StringInput  `pulumi:"startTime"`
}

func (LogsLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLog)(nil)).Elem()
}

func (i LogsLogArgs) ToLogsLogOutput() LogsLogOutput {
	return i.ToLogsLogOutputWithContext(context.Background())
}

func (i LogsLogArgs) ToLogsLogOutputWithContext(ctx context.Context) LogsLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogOutput)
}

// LogsLogArrayInput is an input type that accepts LogsLogArray and LogsLogArrayOutput values.
// You can construct a concrete instance of `LogsLogArrayInput` via:
//
//          LogsLogArray{ LogsLogArgs{...} }
type LogsLogArrayInput interface {
	pulumi.Input

	ToLogsLogArrayOutput() LogsLogArrayOutput
	ToLogsLogArrayOutputWithContext(context.Context) LogsLogArrayOutput
}

type LogsLogArray []LogsLogInput

func (LogsLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsLog)(nil)).Elem()
}

func (i LogsLogArray) ToLogsLogArrayOutput() LogsLogArrayOutput {
	return i.ToLogsLogArrayOutputWithContext(context.Background())
}

func (i LogsLogArray) ToLogsLogArrayOutputWithContext(ctx context.Context) LogsLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogArrayOutput)
}

type LogsLogOutput struct{ *pulumi.OutputState }

func (LogsLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLog)(nil)).Elem()
}

func (o LogsLogOutput) ToLogsLogOutput() LogsLogOutput {
	return o
}

func (o LogsLogOutput) ToLogsLogOutputWithContext(ctx context.Context) LogsLogOutput {
	return o
}

func (o LogsLogOutput) BillDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LogsLog) int { return v.BillDuration }).(pulumi.IntOutput)
}

func (o LogsLogOutput) Duration() pulumi.Float64Output {
	return o.ApplyT(func(v LogsLog) float64 { return v.Duration }).(pulumi.Float64Output)
}

func (o LogsLogOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.FunctionName }).(pulumi.StringOutput)
}

func (o LogsLogOutput) InvokeFinished() pulumi.IntOutput {
	return o.ApplyT(func(v LogsLog) int { return v.InvokeFinished }).(pulumi.IntOutput)
}

func (o LogsLogOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.Level }).(pulumi.StringOutput)
}

func (o LogsLogOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.Log }).(pulumi.StringOutput)
}

func (o LogsLogOutput) MemUsage() pulumi.IntOutput {
	return o.ApplyT(func(v LogsLog) int { return v.MemUsage }).(pulumi.IntOutput)
}

func (o LogsLogOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o LogsLogOutput) RetCode() pulumi.IntOutput {
	return o.ApplyT(func(v LogsLog) int { return v.RetCode }).(pulumi.IntOutput)
}

func (o LogsLogOutput) RetMsg() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.RetMsg }).(pulumi.StringOutput)
}

func (o LogsLogOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.Source }).(pulumi.StringOutput)
}

func (o LogsLogOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLog) string { return v.StartTime }).(pulumi.StringOutput)
}

type LogsLogArrayOutput struct{ *pulumi.OutputState }

func (LogsLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsLog)(nil)).Elem()
}

func (o LogsLogArrayOutput) ToLogsLogArrayOutput() LogsLogArrayOutput {
	return o
}

func (o LogsLogArrayOutput) ToLogsLogArrayOutputWithContext(ctx context.Context) LogsLogArrayOutput {
	return o
}

func (o LogsLogArrayOutput) Index(i pulumi.IntInput) LogsLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsLog {
		return vs[0].([]LogsLog)[vs[1].(int)]
	}).(LogsLogOutput)
}

type NamespacesNamespace struct {
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	ModifyTime  string `pulumi:"modifyTime"`
	Namespace   string `pulumi:"namespace"`
	Type        string `pulumi:"type"`
}

// NamespacesNamespaceInput is an input type that accepts NamespacesNamespaceArgs and NamespacesNamespaceOutput values.
// You can construct a concrete instance of `NamespacesNamespaceInput` via:
//
//          NamespacesNamespaceArgs{...}
type NamespacesNamespaceInput interface {
	pulumi.Input

	ToNamespacesNamespaceOutput() NamespacesNamespaceOutput
	ToNamespacesNamespaceOutputWithContext(context.Context) NamespacesNamespaceOutput
}

type NamespacesNamespaceArgs struct {
	CreateTime  pulumi.StringInput `pulumi:"createTime"`
	Description pulumi.StringInput `pulumi:"description"`
	ModifyTime  pulumi.StringInput `pulumi:"modifyTime"`
	Namespace   pulumi.StringInput `pulumi:"namespace"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (NamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacesNamespace)(nil)).Elem()
}

func (i NamespacesNamespaceArgs) ToNamespacesNamespaceOutput() NamespacesNamespaceOutput {
	return i.ToNamespacesNamespaceOutputWithContext(context.Background())
}

func (i NamespacesNamespaceArgs) ToNamespacesNamespaceOutputWithContext(ctx context.Context) NamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacesNamespaceOutput)
}

// NamespacesNamespaceArrayInput is an input type that accepts NamespacesNamespaceArray and NamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `NamespacesNamespaceArrayInput` via:
//
//          NamespacesNamespaceArray{ NamespacesNamespaceArgs{...} }
type NamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToNamespacesNamespaceArrayOutput() NamespacesNamespaceArrayOutput
	ToNamespacesNamespaceArrayOutputWithContext(context.Context) NamespacesNamespaceArrayOutput
}

type NamespacesNamespaceArray []NamespacesNamespaceInput

func (NamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespacesNamespace)(nil)).Elem()
}

func (i NamespacesNamespaceArray) ToNamespacesNamespaceArrayOutput() NamespacesNamespaceArrayOutput {
	return i.ToNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i NamespacesNamespaceArray) ToNamespacesNamespaceArrayOutputWithContext(ctx context.Context) NamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacesNamespaceArrayOutput)
}

type NamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (NamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacesNamespace)(nil)).Elem()
}

func (o NamespacesNamespaceOutput) ToNamespacesNamespaceOutput() NamespacesNamespaceOutput {
	return o
}

func (o NamespacesNamespaceOutput) ToNamespacesNamespaceOutputWithContext(ctx context.Context) NamespacesNamespaceOutput {
	return o
}

func (o NamespacesNamespaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesNamespace) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o NamespacesNamespaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesNamespace) string { return v.Description }).(pulumi.StringOutput)
}

func (o NamespacesNamespaceOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesNamespace) string { return v.ModifyTime }).(pulumi.StringOutput)
}

func (o NamespacesNamespaceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesNamespace) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o NamespacesNamespaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacesNamespace) string { return v.Type }).(pulumi.StringOutput)
}

type NamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (NamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespacesNamespace)(nil)).Elem()
}

func (o NamespacesNamespaceArrayOutput) ToNamespacesNamespaceArrayOutput() NamespacesNamespaceArrayOutput {
	return o
}

func (o NamespacesNamespaceArrayOutput) ToNamespacesNamespaceArrayOutputWithContext(ctx context.Context) NamespacesNamespaceArrayOutput {
	return o
}

func (o NamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) NamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespacesNamespace {
		return vs[0].([]NamespacesNamespace)[vs[1].(int)]
	}).(NamespacesNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCfsConfigInput)(nil)).Elem(), FunctionCfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCfsConfigArrayInput)(nil)).Elem(), FunctionCfsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigInput)(nil)).Elem(), FunctionImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigArrayInput)(nil)).Elem(), FunctionImageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionLayerInput)(nil)).Elem(), FunctionLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionLayerArrayInput)(nil)).Elem(), FunctionLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerInput)(nil)).Elem(), FunctionTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerArrayInput)(nil)).Elem(), FunctionTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerInfoInput)(nil)).Elem(), FunctionTriggerInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerInfoArrayInput)(nil)).Elem(), FunctionTriggerInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsFunctionInput)(nil)).Elem(), FunctionsFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsFunctionArrayInput)(nil)).Elem(), FunctionsFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsFunctionTriggerInfoInput)(nil)).Elem(), FunctionsFunctionTriggerInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsFunctionTriggerInfoArrayInput)(nil)).Elem(), FunctionsFunctionTriggerInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LayerContentInput)(nil)).Elem(), LayerContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LayerContentPtrInput)(nil)).Elem(), LayerContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsLogInput)(nil)).Elem(), LogsLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsLogArrayInput)(nil)).Elem(), LogsLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacesNamespaceInput)(nil)).Elem(), NamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacesNamespaceArrayInput)(nil)).Elem(), NamespacesNamespaceArray{})
	pulumi.RegisterOutputType(FunctionCfsConfigOutput{})
	pulumi.RegisterOutputType(FunctionCfsConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionLayerOutput{})
	pulumi.RegisterOutputType(FunctionLayerArrayOutput{})
	pulumi.RegisterOutputType(FunctionTriggerOutput{})
	pulumi.RegisterOutputType(FunctionTriggerArrayOutput{})
	pulumi.RegisterOutputType(FunctionTriggerInfoOutput{})
	pulumi.RegisterOutputType(FunctionTriggerInfoArrayOutput{})
	pulumi.RegisterOutputType(FunctionsFunctionOutput{})
	pulumi.RegisterOutputType(FunctionsFunctionArrayOutput{})
	pulumi.RegisterOutputType(FunctionsFunctionTriggerInfoOutput{})
	pulumi.RegisterOutputType(FunctionsFunctionTriggerInfoArrayOutput{})
	pulumi.RegisterOutputType(LayerContentOutput{})
	pulumi.RegisterOutputType(LayerContentPtrOutput{})
	pulumi.RegisterOutputType(LogsLogOutput{})
	pulumi.RegisterOutputType(LogsLogArrayOutput{})
	pulumi.RegisterOutputType(NamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(NamespacesNamespaceArrayOutput{})
}
