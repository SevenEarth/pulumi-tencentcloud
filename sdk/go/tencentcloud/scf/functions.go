// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Functions(ctx *pulumi.Context, args *FunctionsArgs, opts ...pulumi.InvokeOption) (*FunctionsResult, error) {
	var rv FunctionsResult
	err := ctx.Invoke("tencentcloud:Scf/functions:Functions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Functions.
type FunctionsArgs struct {
	Description      *string                `pulumi:"description"`
	Name             *string                `pulumi:"name"`
	Namespace        *string                `pulumi:"namespace"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by Functions.
type FunctionsResult struct {
	Description *string             `pulumi:"description"`
	Functions   []FunctionsFunction `pulumi:"functions"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	Name             *string                `pulumi:"name"`
	Namespace        *string                `pulumi:"namespace"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func FunctionsOutput(ctx *pulumi.Context, args FunctionsOutputArgs, opts ...pulumi.InvokeOption) FunctionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (FunctionsResult, error) {
			args := v.(FunctionsArgs)
			r, err := Functions(ctx, &args, opts...)
			var s FunctionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(FunctionsResultOutput)
}

// A collection of arguments for invoking Functions.
type FunctionsOutputArgs struct {
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	Namespace        pulumi.StringPtrInput `pulumi:"namespace"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (FunctionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsArgs)(nil)).Elem()
}

// A collection of values returned by Functions.
type FunctionsResultOutput struct{ *pulumi.OutputState }

func (FunctionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsResult)(nil)).Elem()
}

func (o FunctionsResultOutput) ToFunctionsResultOutput() FunctionsResultOutput {
	return o
}

func (o FunctionsResultOutput) ToFunctionsResultOutputWithContext(ctx context.Context) FunctionsResultOutput {
	return o
}

func (o FunctionsResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionsResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionsResultOutput) Functions() FunctionsFunctionArrayOutput {
	return o.ApplyT(func(v FunctionsResult) []FunctionsFunction { return v.Functions }).(FunctionsFunctionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o FunctionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o FunctionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FunctionsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o FunctionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o FunctionsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v FunctionsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(FunctionsResultOutput{})
}
