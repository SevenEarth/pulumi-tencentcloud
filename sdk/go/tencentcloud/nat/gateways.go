// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Gateways(ctx *pulumi.Context, args *GatewaysArgs, opts ...pulumi.InvokeOption) (*GatewaysResult, error) {
	var rv GatewaysResult
	err := ctx.Invoke("tencentcloud:Nat/gateways:Gateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Gateways.
type GatewaysArgs struct {
	Id               *string `pulumi:"id"`
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	VpcId            *string `pulumi:"vpcId"`
}

// A collection of values returned by Gateways.
type GatewaysResult struct {
	Id               *string           `pulumi:"id"`
	Name             *string           `pulumi:"name"`
	Nats             []GatewaysNatType `pulumi:"nats"`
	ResultOutputFile *string           `pulumi:"resultOutputFile"`
	VpcId            *string           `pulumi:"vpcId"`
}

func GatewaysOutput(ctx *pulumi.Context, args GatewaysOutputArgs, opts ...pulumi.InvokeOption) GatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GatewaysResult, error) {
			args := v.(GatewaysArgs)
			r, err := Gateways(ctx, &args, opts...)
			var s GatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GatewaysResultOutput)
}

// A collection of arguments for invoking Gateways.
type GatewaysOutputArgs struct {
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	VpcId            pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysArgs)(nil)).Elem()
}

// A collection of values returned by Gateways.
type GatewaysResultOutput struct{ *pulumi.OutputState }

func (GatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysResult)(nil)).Elem()
}

func (o GatewaysResultOutput) ToGatewaysResultOutput() GatewaysResultOutput {
	return o
}

func (o GatewaysResultOutput) ToGatewaysResultOutputWithContext(ctx context.Context) GatewaysResultOutput {
	return o
}

func (o GatewaysResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GatewaysResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GatewaysResultOutput) Nats() GatewaysNatTypeArrayOutput {
	return o.ApplyT(func(v GatewaysResult) []GatewaysNatType { return v.Nats }).(GatewaysNatTypeArrayOutput)
}

func (o GatewaysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GatewaysResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GatewaysResultOutput{})
}
