// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GatewaySnatsSnatList struct {
	CreateTime            string   `pulumi:"createTime"`
	Description           string   `pulumi:"description"`
	InstanceId            *string  `pulumi:"instanceId"`
	InstancePrivateIpAddr *string  `pulumi:"instancePrivateIpAddr"`
	NatGatewayId          string   `pulumi:"natGatewayId"`
	PublicIpAddrs         []string `pulumi:"publicIpAddrs"`
	ResourceType          string   `pulumi:"resourceType"`
	SnatId                string   `pulumi:"snatId"`
	SubnetCidrBlock       *string  `pulumi:"subnetCidrBlock"`
	SubnetId              *string  `pulumi:"subnetId"`
}

// GatewaySnatsSnatListInput is an input type that accepts GatewaySnatsSnatListArgs and GatewaySnatsSnatListOutput values.
// You can construct a concrete instance of `GatewaySnatsSnatListInput` via:
//
//          GatewaySnatsSnatListArgs{...}
type GatewaySnatsSnatListInput interface {
	pulumi.Input

	ToGatewaySnatsSnatListOutput() GatewaySnatsSnatListOutput
	ToGatewaySnatsSnatListOutputWithContext(context.Context) GatewaySnatsSnatListOutput
}

type GatewaySnatsSnatListArgs struct {
	CreateTime            pulumi.StringInput      `pulumi:"createTime"`
	Description           pulumi.StringInput      `pulumi:"description"`
	InstanceId            pulumi.StringPtrInput   `pulumi:"instanceId"`
	InstancePrivateIpAddr pulumi.StringPtrInput   `pulumi:"instancePrivateIpAddr"`
	NatGatewayId          pulumi.StringInput      `pulumi:"natGatewayId"`
	PublicIpAddrs         pulumi.StringArrayInput `pulumi:"publicIpAddrs"`
	ResourceType          pulumi.StringInput      `pulumi:"resourceType"`
	SnatId                pulumi.StringInput      `pulumi:"snatId"`
	SubnetCidrBlock       pulumi.StringPtrInput   `pulumi:"subnetCidrBlock"`
	SubnetId              pulumi.StringPtrInput   `pulumi:"subnetId"`
}

func (GatewaySnatsSnatListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySnatsSnatList)(nil)).Elem()
}

func (i GatewaySnatsSnatListArgs) ToGatewaySnatsSnatListOutput() GatewaySnatsSnatListOutput {
	return i.ToGatewaySnatsSnatListOutputWithContext(context.Background())
}

func (i GatewaySnatsSnatListArgs) ToGatewaySnatsSnatListOutputWithContext(ctx context.Context) GatewaySnatsSnatListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySnatsSnatListOutput)
}

// GatewaySnatsSnatListArrayInput is an input type that accepts GatewaySnatsSnatListArray and GatewaySnatsSnatListArrayOutput values.
// You can construct a concrete instance of `GatewaySnatsSnatListArrayInput` via:
//
//          GatewaySnatsSnatListArray{ GatewaySnatsSnatListArgs{...} }
type GatewaySnatsSnatListArrayInput interface {
	pulumi.Input

	ToGatewaySnatsSnatListArrayOutput() GatewaySnatsSnatListArrayOutput
	ToGatewaySnatsSnatListArrayOutputWithContext(context.Context) GatewaySnatsSnatListArrayOutput
}

type GatewaySnatsSnatListArray []GatewaySnatsSnatListInput

func (GatewaySnatsSnatListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySnatsSnatList)(nil)).Elem()
}

func (i GatewaySnatsSnatListArray) ToGatewaySnatsSnatListArrayOutput() GatewaySnatsSnatListArrayOutput {
	return i.ToGatewaySnatsSnatListArrayOutputWithContext(context.Background())
}

func (i GatewaySnatsSnatListArray) ToGatewaySnatsSnatListArrayOutputWithContext(ctx context.Context) GatewaySnatsSnatListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySnatsSnatListArrayOutput)
}

type GatewaySnatsSnatListOutput struct{ *pulumi.OutputState }

func (GatewaySnatsSnatListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySnatsSnatList)(nil)).Elem()
}

func (o GatewaySnatsSnatListOutput) ToGatewaySnatsSnatListOutput() GatewaySnatsSnatListOutput {
	return o
}

func (o GatewaySnatsSnatListOutput) ToGatewaySnatsSnatListOutputWithContext(ctx context.Context) GatewaySnatsSnatListOutput {
	return o
}

func (o GatewaySnatsSnatListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GatewaySnatsSnatListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) string { return v.Description }).(pulumi.StringOutput)
}

func (o GatewaySnatsSnatListOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GatewaySnatsSnatListOutput) InstancePrivateIpAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) *string { return v.InstancePrivateIpAddr }).(pulumi.StringPtrOutput)
}

func (o GatewaySnatsSnatListOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

func (o GatewaySnatsSnatListOutput) PublicIpAddrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) []string { return v.PublicIpAddrs }).(pulumi.StringArrayOutput)
}

func (o GatewaySnatsSnatListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GatewaySnatsSnatListOutput) SnatId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) string { return v.SnatId }).(pulumi.StringOutput)
}

func (o GatewaySnatsSnatListOutput) SubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) *string { return v.SubnetCidrBlock }).(pulumi.StringPtrOutput)
}

func (o GatewaySnatsSnatListOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySnatsSnatList) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type GatewaySnatsSnatListArrayOutput struct{ *pulumi.OutputState }

func (GatewaySnatsSnatListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySnatsSnatList)(nil)).Elem()
}

func (o GatewaySnatsSnatListArrayOutput) ToGatewaySnatsSnatListArrayOutput() GatewaySnatsSnatListArrayOutput {
	return o
}

func (o GatewaySnatsSnatListArrayOutput) ToGatewaySnatsSnatListArrayOutputWithContext(ctx context.Context) GatewaySnatsSnatListArrayOutput {
	return o
}

func (o GatewaySnatsSnatListArrayOutput) Index(i pulumi.IntInput) GatewaySnatsSnatListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaySnatsSnatList {
		return vs[0].([]GatewaySnatsSnatList)[vs[1].(int)]
	}).(GatewaySnatsSnatListOutput)
}

type GatewaysNatType struct {
	AssignedEipSets []string               `pulumi:"assignedEipSets"`
	Bandwidth       int                    `pulumi:"bandwidth"`
	CreateTime      string                 `pulumi:"createTime"`
	Id              string                 `pulumi:"id"`
	MaxConcurrent   int                    `pulumi:"maxConcurrent"`
	Name            string                 `pulumi:"name"`
	State           string                 `pulumi:"state"`
	Tags            map[string]interface{} `pulumi:"tags"`
	VpcId           string                 `pulumi:"vpcId"`
}

// GatewaysNatTypeInput is an input type that accepts GatewaysNatTypeArgs and GatewaysNatTypeOutput values.
// You can construct a concrete instance of `GatewaysNatTypeInput` via:
//
//          GatewaysNatTypeArgs{...}
type GatewaysNatTypeInput interface {
	pulumi.Input

	ToGatewaysNatTypeOutput() GatewaysNatTypeOutput
	ToGatewaysNatTypeOutputWithContext(context.Context) GatewaysNatTypeOutput
}

type GatewaysNatTypeArgs struct {
	AssignedEipSets pulumi.StringArrayInput `pulumi:"assignedEipSets"`
	Bandwidth       pulumi.IntInput         `pulumi:"bandwidth"`
	CreateTime      pulumi.StringInput      `pulumi:"createTime"`
	Id              pulumi.StringInput      `pulumi:"id"`
	MaxConcurrent   pulumi.IntInput         `pulumi:"maxConcurrent"`
	Name            pulumi.StringInput      `pulumi:"name"`
	State           pulumi.StringInput      `pulumi:"state"`
	Tags            pulumi.MapInput         `pulumi:"tags"`
	VpcId           pulumi.StringInput      `pulumi:"vpcId"`
}

func (GatewaysNatTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysNatType)(nil)).Elem()
}

func (i GatewaysNatTypeArgs) ToGatewaysNatTypeOutput() GatewaysNatTypeOutput {
	return i.ToGatewaysNatTypeOutputWithContext(context.Background())
}

func (i GatewaysNatTypeArgs) ToGatewaysNatTypeOutputWithContext(ctx context.Context) GatewaysNatTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysNatTypeOutput)
}

// GatewaysNatTypeArrayInput is an input type that accepts GatewaysNatTypeArray and GatewaysNatTypeArrayOutput values.
// You can construct a concrete instance of `GatewaysNatTypeArrayInput` via:
//
//          GatewaysNatTypeArray{ GatewaysNatTypeArgs{...} }
type GatewaysNatTypeArrayInput interface {
	pulumi.Input

	ToGatewaysNatTypeArrayOutput() GatewaysNatTypeArrayOutput
	ToGatewaysNatTypeArrayOutputWithContext(context.Context) GatewaysNatTypeArrayOutput
}

type GatewaysNatTypeArray []GatewaysNatTypeInput

func (GatewaysNatTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysNatType)(nil)).Elem()
}

func (i GatewaysNatTypeArray) ToGatewaysNatTypeArrayOutput() GatewaysNatTypeArrayOutput {
	return i.ToGatewaysNatTypeArrayOutputWithContext(context.Background())
}

func (i GatewaysNatTypeArray) ToGatewaysNatTypeArrayOutputWithContext(ctx context.Context) GatewaysNatTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysNatTypeArrayOutput)
}

type GatewaysNatTypeOutput struct{ *pulumi.OutputState }

func (GatewaysNatTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysNatType)(nil)).Elem()
}

func (o GatewaysNatTypeOutput) ToGatewaysNatTypeOutput() GatewaysNatTypeOutput {
	return o
}

func (o GatewaysNatTypeOutput) ToGatewaysNatTypeOutputWithContext(ctx context.Context) GatewaysNatTypeOutput {
	return o
}

func (o GatewaysNatTypeOutput) AssignedEipSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaysNatType) []string { return v.AssignedEipSets }).(pulumi.StringArrayOutput)
}

func (o GatewaysNatTypeOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GatewaysNatType) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o GatewaysNatTypeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysNatType) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GatewaysNatTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysNatType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GatewaysNatTypeOutput) MaxConcurrent() pulumi.IntOutput {
	return o.ApplyT(func(v GatewaysNatType) int { return v.MaxConcurrent }).(pulumi.IntOutput)
}

func (o GatewaysNatTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysNatType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GatewaysNatTypeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysNatType) string { return v.State }).(pulumi.StringOutput)
}

func (o GatewaysNatTypeOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GatewaysNatType) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GatewaysNatTypeOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysNatType) string { return v.VpcId }).(pulumi.StringOutput)
}

type GatewaysNatTypeArrayOutput struct{ *pulumi.OutputState }

func (GatewaysNatTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysNatType)(nil)).Elem()
}

func (o GatewaysNatTypeArrayOutput) ToGatewaysNatTypeArrayOutput() GatewaysNatTypeArrayOutput {
	return o
}

func (o GatewaysNatTypeArrayOutput) ToGatewaysNatTypeArrayOutputWithContext(ctx context.Context) GatewaysNatTypeArrayOutput {
	return o
}

func (o GatewaysNatTypeArrayOutput) Index(i pulumi.IntInput) GatewaysNatTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaysNatType {
		return vs[0].([]GatewaysNatType)[vs[1].(int)]
	}).(GatewaysNatTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySnatsSnatListInput)(nil)).Elem(), GatewaySnatsSnatListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySnatsSnatListArrayInput)(nil)).Elem(), GatewaySnatsSnatListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysNatTypeInput)(nil)).Elem(), GatewaysNatTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysNatTypeArrayInput)(nil)).Elem(), GatewaysNatTypeArray{})
	pulumi.RegisterOutputType(GatewaySnatsSnatListOutput{})
	pulumi.RegisterOutputType(GatewaySnatsSnatListArrayOutput{})
	pulumi.RegisterOutputType(GatewaysNatTypeOutput{})
	pulumi.RegisterOutputType(GatewaysNatTypeArrayOutput{})
}
