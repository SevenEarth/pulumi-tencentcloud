// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tke

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Charts(ctx *pulumi.Context, args *ChartsArgs, opts ...pulumi.InvokeOption) (*ChartsResult, error) {
	var rv ChartsResult
	err := ctx.Invoke("tencentcloud:Tke/charts:Charts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Charts.
type ChartsArgs struct {
	Arch             *string `pulumi:"arch"`
	ClusterType      *string `pulumi:"clusterType"`
	Kind             *string `pulumi:"kind"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by Charts.
type ChartsResult struct {
	Arch        *string           `pulumi:"arch"`
	ChartLists  []ChartsChartList `pulumi:"chartLists"`
	ClusterType *string           `pulumi:"clusterType"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	Kind             *string `pulumi:"kind"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func ChartsOutput(ctx *pulumi.Context, args ChartsOutputArgs, opts ...pulumi.InvokeOption) ChartsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ChartsResult, error) {
			args := v.(ChartsArgs)
			r, err := Charts(ctx, &args, opts...)
			var s ChartsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ChartsResultOutput)
}

// A collection of arguments for invoking Charts.
type ChartsOutputArgs struct {
	Arch             pulumi.StringPtrInput `pulumi:"arch"`
	ClusterType      pulumi.StringPtrInput `pulumi:"clusterType"`
	Kind             pulumi.StringPtrInput `pulumi:"kind"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (ChartsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChartsArgs)(nil)).Elem()
}

// A collection of values returned by Charts.
type ChartsResultOutput struct{ *pulumi.OutputState }

func (ChartsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChartsResult)(nil)).Elem()
}

func (o ChartsResultOutput) ToChartsResultOutput() ChartsResultOutput {
	return o
}

func (o ChartsResultOutput) ToChartsResultOutputWithContext(ctx context.Context) ChartsResultOutput {
	return o
}

func (o ChartsResultOutput) Arch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChartsResult) *string { return v.Arch }).(pulumi.StringPtrOutput)
}

func (o ChartsResultOutput) ChartLists() ChartsChartListArrayOutput {
	return o.ApplyT(func(v ChartsResult) []ChartsChartList { return v.ChartLists }).(ChartsChartListArrayOutput)
}

func (o ChartsResultOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChartsResult) *string { return v.ClusterType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ChartsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ChartsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ChartsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChartsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ChartsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChartsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ChartsResultOutput{})
}
