// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of rum tawInstance
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := Rum.GetTawInstance(ctx, &rum.GetTawInstanceArgs{
// AreaIds: interface{}{
// 1,
// },
// ChargeStatuses: interface{}{
// 1,
// },
// ChargeTypes: interface{}{
// 1,
// },
// InstanceIds: []string{
// "rum-pasZKEI3RLgakj",
// },
// InstanceStatuses: interface{}{
// 2,
// },
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// <!--End PulumiCodeChooser -->
func LookupTawInstance(ctx *pulumi.Context, args *LookupTawInstanceArgs, opts ...pulumi.InvokeOption) (*LookupTawInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTawInstanceResult
	err := ctx.Invoke("tencentcloud:Rum/getTawInstance:getTawInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTawInstance.
type LookupTawInstanceArgs struct {
	// Region ID.
	AreaIds []int `pulumi:"areaIds"`
	// Billing status.
	ChargeStatuses []int `pulumi:"chargeStatuses"`
	// Billing type.
	ChargeTypes []int `pulumi:"chargeTypes"`
	// Instance ID.
	InstanceIds []string `pulumi:"instanceIds"`
	// Instance status (`1`: creating; `2`: running; `3`: exceptional; `4`: restarting; `5`: stopping; `6`: stopped; `7`: terminating; `8`: terminated).
	InstanceStatuses []int `pulumi:"instanceStatuses"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getTawInstance.
type LookupTawInstanceResult struct {
	AreaIds        []int `pulumi:"areaIds"`
	ChargeStatuses []int `pulumi:"chargeStatuses"`
	ChargeTypes    []int `pulumi:"chargeTypes"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	InstanceIds []string `pulumi:"instanceIds"`
	// Instance list.
	InstanceSets     []GetTawInstanceInstanceSet `pulumi:"instanceSets"`
	InstanceStatuses []int                       `pulumi:"instanceStatuses"`
	ResultOutputFile *string                     `pulumi:"resultOutputFile"`
}

func LookupTawInstanceOutput(ctx *pulumi.Context, args LookupTawInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupTawInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTawInstanceResult, error) {
			args := v.(LookupTawInstanceArgs)
			r, err := LookupTawInstance(ctx, &args, opts...)
			var s LookupTawInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTawInstanceResultOutput)
}

// A collection of arguments for invoking getTawInstance.
type LookupTawInstanceOutputArgs struct {
	// Region ID.
	AreaIds pulumi.IntArrayInput `pulumi:"areaIds"`
	// Billing status.
	ChargeStatuses pulumi.IntArrayInput `pulumi:"chargeStatuses"`
	// Billing type.
	ChargeTypes pulumi.IntArrayInput `pulumi:"chargeTypes"`
	// Instance ID.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Instance status (`1`: creating; `2`: running; `3`: exceptional; `4`: restarting; `5`: stopping; `6`: stopped; `7`: terminating; `8`: terminated).
	InstanceStatuses pulumi.IntArrayInput `pulumi:"instanceStatuses"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupTawInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTawInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getTawInstance.
type LookupTawInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupTawInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTawInstanceResult)(nil)).Elem()
}

func (o LookupTawInstanceResultOutput) ToLookupTawInstanceResultOutput() LookupTawInstanceResultOutput {
	return o
}

func (o LookupTawInstanceResultOutput) ToLookupTawInstanceResultOutputWithContext(ctx context.Context) LookupTawInstanceResultOutput {
	return o
}

func (o LookupTawInstanceResultOutput) AreaIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []int { return v.AreaIds }).(pulumi.IntArrayOutput)
}

func (o LookupTawInstanceResultOutput) ChargeStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []int { return v.ChargeStatuses }).(pulumi.IntArrayOutput)
}

func (o LookupTawInstanceResultOutput) ChargeTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []int { return v.ChargeTypes }).(pulumi.IntArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTawInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTawInstanceResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// Instance list.
func (o LookupTawInstanceResultOutput) InstanceSets() GetTawInstanceInstanceSetArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []GetTawInstanceInstanceSet { return v.InstanceSets }).(GetTawInstanceInstanceSetArrayOutput)
}

func (o LookupTawInstanceResultOutput) InstanceStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) []int { return v.InstanceStatuses }).(pulumi.IntArrayOutput)
}

func (o LookupTawInstanceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTawInstanceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTawInstanceResultOutput{})
}
