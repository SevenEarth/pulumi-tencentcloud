// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstancesInstanceList struct {
	// Bandwidth of the DC.
	Bandwidth int `pulumi:"bandwidth"`
	// BGP ASN of the user.
	BgpAsn int `pulumi:"bgpAsn"`
	// BGP key of the user.
	BgpAuthKey string `pulumi:"bgpAuthKey"`
	// Creation time of resource.
	CreateTime string `pulumi:"createTime"`
	// Interconnect IP of the DC within client.
	CustomerAddress string `pulumi:"customerAddress"`
	// ID of the DC.
	DcId string `pulumi:"dcId"`
	// ID of the DC Gateway. Currently only new in the console.
	DcgId string `pulumi:"dcgId"`
	// ID of the dedicated tunnels to be queried.
	DcxId string `pulumi:"dcxId"`
	// Name of the dedicated tunnels to be queried.
	Name string `pulumi:"name"`
	// The region of the dedicated tunnel.
	NetworkRegion string `pulumi:"networkRegion"`
	// Type of the network. Valid values: `VPC`, `BMVPC` and `CCN`. The default value is `VPC`.
	NetworkType string `pulumi:"networkType"`
	// Static route, the network address of the user IDC.
	RouteFilterPrefixes []string `pulumi:"routeFilterPrefixes"`
	// Type of the route. Valid values: `BGP` and `STATIC`. The default value is `BGP`.
	RouteType string `pulumi:"routeType"`
	// State of the dedicated tunnels. Valid values: `PENDING`, `ALLOCATING`, `ALLOCATED`, `ALTERING`, `DELETING`, `DELETED`, `COMFIRMING` and `REJECTED`.
	State string `pulumi:"state"`
	// Interconnect IP of the DC within Tencent.
	TencentAddress string `pulumi:"tencentAddress"`
	// Vlan of the dedicated tunnels.  Valid value ranges: [0-3000]. `0` means that only one tunnel can be created for the physical connect.
	Vlan int `pulumi:"vlan"`
	// ID of the VPC or BMVPC.
	VpcId string `pulumi:"vpcId"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Bandwidth of the DC.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// BGP ASN of the user.
	BgpAsn pulumi.IntInput `pulumi:"bgpAsn"`
	// BGP key of the user.
	BgpAuthKey pulumi.StringInput `pulumi:"bgpAuthKey"`
	// Creation time of resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Interconnect IP of the DC within client.
	CustomerAddress pulumi.StringInput `pulumi:"customerAddress"`
	// ID of the DC.
	DcId pulumi.StringInput `pulumi:"dcId"`
	// ID of the DC Gateway. Currently only new in the console.
	DcgId pulumi.StringInput `pulumi:"dcgId"`
	// ID of the dedicated tunnels to be queried.
	DcxId pulumi.StringInput `pulumi:"dcxId"`
	// Name of the dedicated tunnels to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// The region of the dedicated tunnel.
	NetworkRegion pulumi.StringInput `pulumi:"networkRegion"`
	// Type of the network. Valid values: `VPC`, `BMVPC` and `CCN`. The default value is `VPC`.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Static route, the network address of the user IDC.
	RouteFilterPrefixes pulumi.StringArrayInput `pulumi:"routeFilterPrefixes"`
	// Type of the route. Valid values: `BGP` and `STATIC`. The default value is `BGP`.
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// State of the dedicated tunnels. Valid values: `PENDING`, `ALLOCATING`, `ALLOCATED`, `ALTERING`, `DELETING`, `DELETED`, `COMFIRMING` and `REJECTED`.
	State pulumi.StringInput `pulumi:"state"`
	// Interconnect IP of the DC within Tencent.
	TencentAddress pulumi.StringInput `pulumi:"tencentAddress"`
	// Vlan of the dedicated tunnels.  Valid value ranges: [0-3000]. `0` means that only one tunnel can be created for the physical connect.
	Vlan pulumi.IntInput `pulumi:"vlan"`
	// ID of the VPC or BMVPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Bandwidth of the DC.
func (o GetInstancesInstanceListOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// BGP ASN of the user.
func (o GetInstancesInstanceListOutput) BgpAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.BgpAsn }).(pulumi.IntOutput)
}

// BGP key of the user.
func (o GetInstancesInstanceListOutput) BgpAuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.BgpAuthKey }).(pulumi.StringOutput)
}

// Creation time of resource.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Interconnect IP of the DC within client.
func (o GetInstancesInstanceListOutput) CustomerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CustomerAddress }).(pulumi.StringOutput)
}

// ID of the DC.
func (o GetInstancesInstanceListOutput) DcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.DcId }).(pulumi.StringOutput)
}

// ID of the DC Gateway. Currently only new in the console.
func (o GetInstancesInstanceListOutput) DcgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.DcgId }).(pulumi.StringOutput)
}

// ID of the dedicated tunnels to be queried.
func (o GetInstancesInstanceListOutput) DcxId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.DcxId }).(pulumi.StringOutput)
}

// Name of the dedicated tunnels to be queried.
func (o GetInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// The region of the dedicated tunnel.
func (o GetInstancesInstanceListOutput) NetworkRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.NetworkRegion }).(pulumi.StringOutput)
}

// Type of the network. Valid values: `VPC`, `BMVPC` and `CCN`. The default value is `VPC`.
func (o GetInstancesInstanceListOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Static route, the network address of the user IDC.
func (o GetInstancesInstanceListOutput) RouteFilterPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []string { return v.RouteFilterPrefixes }).(pulumi.StringArrayOutput)
}

// Type of the route. Valid values: `BGP` and `STATIC`. The default value is `BGP`.
func (o GetInstancesInstanceListOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.RouteType }).(pulumi.StringOutput)
}

// State of the dedicated tunnels. Valid values: `PENDING`, `ALLOCATING`, `ALLOCATED`, `ALTERING`, `DELETING`, `DELETED`, `COMFIRMING` and `REJECTED`.
func (o GetInstancesInstanceListOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.State }).(pulumi.StringOutput)
}

// Interconnect IP of the DC within Tencent.
func (o GetInstancesInstanceListOutput) TencentAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.TencentAddress }).(pulumi.StringOutput)
}

// Vlan of the dedicated tunnels.  Valid value ranges: [0-3000]. `0` means that only one tunnel can be created for the physical connect.
func (o GetInstancesInstanceListOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Vlan }).(pulumi.IntOutput)
}

// ID of the VPC or BMVPC.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
}
