// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instances

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstancesInstanceList struct {
	AllocatePublicIp                   bool                            `pulumi:"allocatePublicIp"`
	AvailabilityZone                   string                          `pulumi:"availabilityZone"`
	CamRoleName                        string                          `pulumi:"camRoleName"`
	Cpu                                int                             `pulumi:"cpu"`
	CreateTime                         string                          `pulumi:"createTime"`
	DataDisks                          []InstancesInstanceListDataDisk `pulumi:"dataDisks"`
	ExpiredTime                        string                          `pulumi:"expiredTime"`
	ImageId                            string                          `pulumi:"imageId"`
	InstanceChargeType                 string                          `pulumi:"instanceChargeType"`
	InstanceChargeTypePrepaidRenewFlag string                          `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	InstanceId                         string                          `pulumi:"instanceId"`
	InstanceName                       string                          `pulumi:"instanceName"`
	InstanceType                       string                          `pulumi:"instanceType"`
	InternetChargeType                 string                          `pulumi:"internetChargeType"`
	InternetMaxBandwidthOut            int                             `pulumi:"internetMaxBandwidthOut"`
	Memory                             int                             `pulumi:"memory"`
	PrivateIp                          string                          `pulumi:"privateIp"`
	ProjectId                          int                             `pulumi:"projectId"`
	PublicIp                           string                          `pulumi:"publicIp"`
	SecurityGroups                     []string                        `pulumi:"securityGroups"`
	Status                             string                          `pulumi:"status"`
	SubnetId                           string                          `pulumi:"subnetId"`
	SystemDiskId                       string                          `pulumi:"systemDiskId"`
	SystemDiskSize                     int                             `pulumi:"systemDiskSize"`
	SystemDiskType                     string                          `pulumi:"systemDiskType"`
	Tags                               map[string]interface{}          `pulumi:"tags"`
	VpcId                              string                          `pulumi:"vpcId"`
}

// InstancesInstanceListInput is an input type that accepts InstancesInstanceListArgs and InstancesInstanceListOutput values.
// You can construct a concrete instance of `InstancesInstanceListInput` via:
//
//          InstancesInstanceListArgs{...}
type InstancesInstanceListInput interface {
	pulumi.Input

	ToInstancesInstanceListOutput() InstancesInstanceListOutput
	ToInstancesInstanceListOutputWithContext(context.Context) InstancesInstanceListOutput
}

type InstancesInstanceListArgs struct {
	AllocatePublicIp                   pulumi.BoolInput                        `pulumi:"allocatePublicIp"`
	AvailabilityZone                   pulumi.StringInput                      `pulumi:"availabilityZone"`
	CamRoleName                        pulumi.StringInput                      `pulumi:"camRoleName"`
	Cpu                                pulumi.IntInput                         `pulumi:"cpu"`
	CreateTime                         pulumi.StringInput                      `pulumi:"createTime"`
	DataDisks                          InstancesInstanceListDataDiskArrayInput `pulumi:"dataDisks"`
	ExpiredTime                        pulumi.StringInput                      `pulumi:"expiredTime"`
	ImageId                            pulumi.StringInput                      `pulumi:"imageId"`
	InstanceChargeType                 pulumi.StringInput                      `pulumi:"instanceChargeType"`
	InstanceChargeTypePrepaidRenewFlag pulumi.StringInput                      `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	InstanceId                         pulumi.StringInput                      `pulumi:"instanceId"`
	InstanceName                       pulumi.StringInput                      `pulumi:"instanceName"`
	InstanceType                       pulumi.StringInput                      `pulumi:"instanceType"`
	InternetChargeType                 pulumi.StringInput                      `pulumi:"internetChargeType"`
	InternetMaxBandwidthOut            pulumi.IntInput                         `pulumi:"internetMaxBandwidthOut"`
	Memory                             pulumi.IntInput                         `pulumi:"memory"`
	PrivateIp                          pulumi.StringInput                      `pulumi:"privateIp"`
	ProjectId                          pulumi.IntInput                         `pulumi:"projectId"`
	PublicIp                           pulumi.StringInput                      `pulumi:"publicIp"`
	SecurityGroups                     pulumi.StringArrayInput                 `pulumi:"securityGroups"`
	Status                             pulumi.StringInput                      `pulumi:"status"`
	SubnetId                           pulumi.StringInput                      `pulumi:"subnetId"`
	SystemDiskId                       pulumi.StringInput                      `pulumi:"systemDiskId"`
	SystemDiskSize                     pulumi.IntInput                         `pulumi:"systemDiskSize"`
	SystemDiskType                     pulumi.StringInput                      `pulumi:"systemDiskType"`
	Tags                               pulumi.MapInput                         `pulumi:"tags"`
	VpcId                              pulumi.StringInput                      `pulumi:"vpcId"`
}

func (InstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return i.ToInstancesInstanceListOutputWithContext(context.Background())
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListOutput)
}

// InstancesInstanceListArrayInput is an input type that accepts InstancesInstanceListArray and InstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListArrayInput` via:
//
//          InstancesInstanceListArray{ InstancesInstanceListArgs{...} }
type InstancesInstanceListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput
	ToInstancesInstanceListArrayOutputWithContext(context.Context) InstancesInstanceListArrayOutput
}

type InstancesInstanceListArray []InstancesInstanceListInput

func (InstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return i.ToInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListArrayOutput)
}

type InstancesInstanceListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) AllocatePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceList) bool { return v.AllocatePublicIp }).(pulumi.BoolOutput)
}

func (o InstancesInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CamRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CamRoleName }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) DataDisks() InstancesInstanceListDataDiskArrayOutput {
	return o.ApplyT(func(v InstancesInstanceList) []InstancesInstanceListDataDisk { return v.DataDisks }).(InstancesInstanceListDataDiskArrayOutput)
}

func (o InstancesInstanceListOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceChargeTypePrepaidRenewFlag }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InternetMaxBandwidthOut() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.InternetMaxBandwidthOut }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstanceList) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o InstancesInstanceListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Status }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) SystemDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SystemDiskId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) SystemDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.SystemDiskSize }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) SystemDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SystemDiskType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v InstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o InstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type InstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceList {
		return vs[0].([]InstancesInstanceList)[vs[1].(int)]
	}).(InstancesInstanceListOutput)
}

type InstancesInstanceListDataDisk struct {
	DataDiskId         string `pulumi:"dataDiskId"`
	DataDiskSize       int    `pulumi:"dataDiskSize"`
	DataDiskType       string `pulumi:"dataDiskType"`
	DeleteWithInstance bool   `pulumi:"deleteWithInstance"`
}

// InstancesInstanceListDataDiskInput is an input type that accepts InstancesInstanceListDataDiskArgs and InstancesInstanceListDataDiskOutput values.
// You can construct a concrete instance of `InstancesInstanceListDataDiskInput` via:
//
//          InstancesInstanceListDataDiskArgs{...}
type InstancesInstanceListDataDiskInput interface {
	pulumi.Input

	ToInstancesInstanceListDataDiskOutput() InstancesInstanceListDataDiskOutput
	ToInstancesInstanceListDataDiskOutputWithContext(context.Context) InstancesInstanceListDataDiskOutput
}

type InstancesInstanceListDataDiskArgs struct {
	DataDiskId         pulumi.StringInput `pulumi:"dataDiskId"`
	DataDiskSize       pulumi.IntInput    `pulumi:"dataDiskSize"`
	DataDiskType       pulumi.StringInput `pulumi:"dataDiskType"`
	DeleteWithInstance pulumi.BoolInput   `pulumi:"deleteWithInstance"`
}

func (InstancesInstanceListDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceListDataDisk)(nil)).Elem()
}

func (i InstancesInstanceListDataDiskArgs) ToInstancesInstanceListDataDiskOutput() InstancesInstanceListDataDiskOutput {
	return i.ToInstancesInstanceListDataDiskOutputWithContext(context.Background())
}

func (i InstancesInstanceListDataDiskArgs) ToInstancesInstanceListDataDiskOutputWithContext(ctx context.Context) InstancesInstanceListDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListDataDiskOutput)
}

// InstancesInstanceListDataDiskArrayInput is an input type that accepts InstancesInstanceListDataDiskArray and InstancesInstanceListDataDiskArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListDataDiskArrayInput` via:
//
//          InstancesInstanceListDataDiskArray{ InstancesInstanceListDataDiskArgs{...} }
type InstancesInstanceListDataDiskArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListDataDiskArrayOutput() InstancesInstanceListDataDiskArrayOutput
	ToInstancesInstanceListDataDiskArrayOutputWithContext(context.Context) InstancesInstanceListDataDiskArrayOutput
}

type InstancesInstanceListDataDiskArray []InstancesInstanceListDataDiskInput

func (InstancesInstanceListDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceListDataDisk)(nil)).Elem()
}

func (i InstancesInstanceListDataDiskArray) ToInstancesInstanceListDataDiskArrayOutput() InstancesInstanceListDataDiskArrayOutput {
	return i.ToInstancesInstanceListDataDiskArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListDataDiskArray) ToInstancesInstanceListDataDiskArrayOutputWithContext(ctx context.Context) InstancesInstanceListDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListDataDiskArrayOutput)
}

type InstancesInstanceListDataDiskOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceListDataDisk)(nil)).Elem()
}

func (o InstancesInstanceListDataDiskOutput) ToInstancesInstanceListDataDiskOutput() InstancesInstanceListDataDiskOutput {
	return o
}

func (o InstancesInstanceListDataDiskOutput) ToInstancesInstanceListDataDiskOutputWithContext(ctx context.Context) InstancesInstanceListDataDiskOutput {
	return o
}

func (o InstancesInstanceListDataDiskOutput) DataDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceListDataDisk) string { return v.DataDiskId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListDataDiskOutput) DataDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceListDataDisk) int { return v.DataDiskSize }).(pulumi.IntOutput)
}

func (o InstancesInstanceListDataDiskOutput) DataDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceListDataDisk) string { return v.DataDiskType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListDataDiskOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceListDataDisk) bool { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

type InstancesInstanceListDataDiskArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceListDataDisk)(nil)).Elem()
}

func (o InstancesInstanceListDataDiskArrayOutput) ToInstancesInstanceListDataDiskArrayOutput() InstancesInstanceListDataDiskArrayOutput {
	return o
}

func (o InstancesInstanceListDataDiskArrayOutput) ToInstancesInstanceListDataDiskArrayOutputWithContext(ctx context.Context) InstancesInstanceListDataDiskArrayOutput {
	return o
}

func (o InstancesInstanceListDataDiskArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceListDataDisk {
		return vs[0].([]InstancesInstanceListDataDisk)[vs[1].(int)]
	}).(InstancesInstanceListDataDiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListInput)(nil)).Elem(), InstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListArrayInput)(nil)).Elem(), InstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListDataDiskInput)(nil)).Elem(), InstancesInstanceListDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListDataDiskArrayInput)(nil)).Elem(), InstancesInstanceListDataDiskArray{})
	pulumi.RegisterOutputType(InstancesInstanceListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListDataDiskOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListDataDiskArrayOutput{})
}
