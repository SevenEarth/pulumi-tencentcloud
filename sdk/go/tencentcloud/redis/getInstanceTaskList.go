// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of redis instanceTaskList
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := Redis.GetInstanceTaskList(ctx, &redis.GetInstanceTaskListArgs{
// BeginTime: pulumi.StringRef("2021-12-30 00:00:00"),
// EndTime: pulumi.StringRef("2021-12-30 00:00:00"),
// InstanceId: pulumi.StringRef("crs-c1nl9rpv"),
// InstanceName: pulumi.StringRef(""),
// OperateUins: []string{
// "",
// },
// ProjectIds: interface{}{
// "",
// },
// Results: interface{}{
// "",
// },
// TaskStatuses: interface{}{
// "",
// },
// TaskTypes: []string{
// "",
// },
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// <!--End PulumiCodeChooser -->
func GetInstanceTaskList(ctx *pulumi.Context, args *GetInstanceTaskListArgs, opts ...pulumi.InvokeOption) (*GetInstanceTaskListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceTaskListResult
	err := ctx.Invoke("tencentcloud:Redis/getInstanceTaskList:getInstanceTaskList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceTaskList.
type GetInstanceTaskListArgs struct {
	// Start time.
	BeginTime *string `pulumi:"beginTime"`
	// Termination time.
	EndTime *string `pulumi:"endTime"`
	// The ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Operator Uin.
	OperateUins []string `pulumi:"operateUins"`
	// Project Id.
	ProjectIds []int `pulumi:"projectIds"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Task status.
	Results []int `pulumi:"results"`
	// Task status.
	TaskStatuses []int `pulumi:"taskStatuses"`
	// Task type.
	TaskTypes []string `pulumi:"taskTypes"`
}

// A collection of values returned by getInstanceTaskList.
type GetInstanceTaskListResult struct {
	BeginTime *string `pulumi:"beginTime"`
	// The end time.
	EndTime *string `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName     *string  `pulumi:"instanceName"`
	OperateUins      []string `pulumi:"operateUins"`
	ProjectIds       []int    `pulumi:"projectIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	// Task status.
	Results      []int    `pulumi:"results"`
	TaskStatuses []int    `pulumi:"taskStatuses"`
	TaskTypes    []string `pulumi:"taskTypes"`
	// Task details.
	Tasks []GetInstanceTaskListTask `pulumi:"tasks"`
}

func GetInstanceTaskListOutput(ctx *pulumi.Context, args GetInstanceTaskListOutputArgs, opts ...pulumi.InvokeOption) GetInstanceTaskListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceTaskListResult, error) {
			args := v.(GetInstanceTaskListArgs)
			r, err := GetInstanceTaskList(ctx, &args, opts...)
			var s GetInstanceTaskListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceTaskListResultOutput)
}

// A collection of arguments for invoking getInstanceTaskList.
type GetInstanceTaskListOutputArgs struct {
	// Start time.
	BeginTime pulumi.StringPtrInput `pulumi:"beginTime"`
	// Termination time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The ID of instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Instance name.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Operator Uin.
	OperateUins pulumi.StringArrayInput `pulumi:"operateUins"`
	// Project Id.
	ProjectIds pulumi.IntArrayInput `pulumi:"projectIds"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Task status.
	Results pulumi.IntArrayInput `pulumi:"results"`
	// Task status.
	TaskStatuses pulumi.IntArrayInput `pulumi:"taskStatuses"`
	// Task type.
	TaskTypes pulumi.StringArrayInput `pulumi:"taskTypes"`
}

func (GetInstanceTaskListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTaskListArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceTaskList.
type GetInstanceTaskListResultOutput struct{ *pulumi.OutputState }

func (GetInstanceTaskListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTaskListResult)(nil)).Elem()
}

func (o GetInstanceTaskListResultOutput) ToGetInstanceTaskListResultOutput() GetInstanceTaskListResultOutput {
	return o
}

func (o GetInstanceTaskListResultOutput) ToGetInstanceTaskListResultOutputWithContext(ctx context.Context) GetInstanceTaskListResultOutput {
	return o
}

func (o GetInstanceTaskListResultOutput) BeginTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.BeginTime }).(pulumi.StringPtrOutput)
}

// The end time.
func (o GetInstanceTaskListResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceTaskListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of instance.
func (o GetInstanceTaskListResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The name of instance.
func (o GetInstanceTaskListResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

func (o GetInstanceTaskListResultOutput) OperateUins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []string { return v.OperateUins }).(pulumi.StringArrayOutput)
}

func (o GetInstanceTaskListResultOutput) ProjectIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.ProjectIds }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Task status.
func (o GetInstanceTaskListResultOutput) Results() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.Results }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) TaskStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.TaskStatuses }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) TaskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []string { return v.TaskTypes }).(pulumi.StringArrayOutput)
}

// Task details.
func (o GetInstanceTaskListResultOutput) Tasks() GetInstanceTaskListTaskArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []GetInstanceTaskListTask { return v.Tasks }).(GetInstanceTaskListTaskArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceTaskListResultOutput{})
}
