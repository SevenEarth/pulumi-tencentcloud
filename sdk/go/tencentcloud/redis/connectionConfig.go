// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionConfig struct {
	pulumi.CustomResourceState

	// Additional bandwidth, greater than 0, in MB.
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
	// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
	// number of read replicas +3).
	ClientLimit pulumi.IntPtrOutput `pulumi:"clientLimit"`
	// The ID of instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewConnectionConfig registers a new resource with the given unique name, arguments, and options.
func NewConnectionConfig(ctx *pulumi.Context,
	name string, args *ConnectionConfigArgs, opts ...pulumi.ResourceOption) (*ConnectionConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectionConfig
	err := ctx.RegisterResource("tencentcloud:Redis/connectionConfig:ConnectionConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionConfig gets an existing ConnectionConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionConfigState, opts ...pulumi.ResourceOption) (*ConnectionConfig, error) {
	var resource ConnectionConfig
	err := ctx.ReadResource("tencentcloud:Redis/connectionConfig:ConnectionConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionConfig resources.
type connectionConfigState struct {
	// Additional bandwidth, greater than 0, in MB.
	Bandwidth *int `pulumi:"bandwidth"`
	// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
	// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
	// number of read replicas +3).
	ClientLimit *int `pulumi:"clientLimit"`
	// The ID of instance.
	InstanceId *string `pulumi:"instanceId"`
}

type ConnectionConfigState struct {
	// Additional bandwidth, greater than 0, in MB.
	Bandwidth pulumi.IntPtrInput
	// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
	// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
	// number of read replicas +3).
	ClientLimit pulumi.IntPtrInput
	// The ID of instance.
	InstanceId pulumi.StringPtrInput
}

func (ConnectionConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionConfigState)(nil)).Elem()
}

type connectionConfigArgs struct {
	// Additional bandwidth, greater than 0, in MB.
	Bandwidth *int `pulumi:"bandwidth"`
	// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
	// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
	// number of read replicas +3).
	ClientLimit *int `pulumi:"clientLimit"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a ConnectionConfig resource.
type ConnectionConfigArgs struct {
	// Additional bandwidth, greater than 0, in MB.
	Bandwidth pulumi.IntPtrInput
	// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
	// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
	// number of read replicas +3).
	ClientLimit pulumi.IntPtrInput
	// The ID of instance.
	InstanceId pulumi.StringInput
}

func (ConnectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionConfigArgs)(nil)).Elem()
}

type ConnectionConfigInput interface {
	pulumi.Input

	ToConnectionConfigOutput() ConnectionConfigOutput
	ToConnectionConfigOutputWithContext(ctx context.Context) ConnectionConfigOutput
}

func (*ConnectionConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfig)(nil)).Elem()
}

func (i *ConnectionConfig) ToConnectionConfigOutput() ConnectionConfigOutput {
	return i.ToConnectionConfigOutputWithContext(context.Background())
}

func (i *ConnectionConfig) ToConnectionConfigOutputWithContext(ctx context.Context) ConnectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigOutput)
}

// ConnectionConfigArrayInput is an input type that accepts ConnectionConfigArray and ConnectionConfigArrayOutput values.
// You can construct a concrete instance of `ConnectionConfigArrayInput` via:
//
//          ConnectionConfigArray{ ConnectionConfigArgs{...} }
type ConnectionConfigArrayInput interface {
	pulumi.Input

	ToConnectionConfigArrayOutput() ConnectionConfigArrayOutput
	ToConnectionConfigArrayOutputWithContext(context.Context) ConnectionConfigArrayOutput
}

type ConnectionConfigArray []ConnectionConfigInput

func (ConnectionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionConfig)(nil)).Elem()
}

func (i ConnectionConfigArray) ToConnectionConfigArrayOutput() ConnectionConfigArrayOutput {
	return i.ToConnectionConfigArrayOutputWithContext(context.Background())
}

func (i ConnectionConfigArray) ToConnectionConfigArrayOutputWithContext(ctx context.Context) ConnectionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigArrayOutput)
}

// ConnectionConfigMapInput is an input type that accepts ConnectionConfigMap and ConnectionConfigMapOutput values.
// You can construct a concrete instance of `ConnectionConfigMapInput` via:
//
//          ConnectionConfigMap{ "key": ConnectionConfigArgs{...} }
type ConnectionConfigMapInput interface {
	pulumi.Input

	ToConnectionConfigMapOutput() ConnectionConfigMapOutput
	ToConnectionConfigMapOutputWithContext(context.Context) ConnectionConfigMapOutput
}

type ConnectionConfigMap map[string]ConnectionConfigInput

func (ConnectionConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionConfig)(nil)).Elem()
}

func (i ConnectionConfigMap) ToConnectionConfigMapOutput() ConnectionConfigMapOutput {
	return i.ToConnectionConfigMapOutputWithContext(context.Background())
}

func (i ConnectionConfigMap) ToConnectionConfigMapOutputWithContext(ctx context.Context) ConnectionConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigMapOutput)
}

type ConnectionConfigOutput struct{ *pulumi.OutputState }

func (ConnectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfig)(nil)).Elem()
}

func (o ConnectionConfigOutput) ToConnectionConfigOutput() ConnectionConfigOutput {
	return o
}

func (o ConnectionConfigOutput) ToConnectionConfigOutputWithContext(ctx context.Context) ConnectionConfigOutput {
	return o
}

// Additional bandwidth, greater than 0, in MB.
func (o ConnectionConfigOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionConfig) pulumi.IntPtrOutput { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 × (the
// number of read replicas +3).
func (o ConnectionConfigOutput) ClientLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionConfig) pulumi.IntPtrOutput { return v.ClientLimit }).(pulumi.IntPtrOutput)
}

// The ID of instance.
func (o ConnectionConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type ConnectionConfigArrayOutput struct{ *pulumi.OutputState }

func (ConnectionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionConfig)(nil)).Elem()
}

func (o ConnectionConfigArrayOutput) ToConnectionConfigArrayOutput() ConnectionConfigArrayOutput {
	return o
}

func (o ConnectionConfigArrayOutput) ToConnectionConfigArrayOutputWithContext(ctx context.Context) ConnectionConfigArrayOutput {
	return o
}

func (o ConnectionConfigArrayOutput) Index(i pulumi.IntInput) ConnectionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectionConfig {
		return vs[0].([]*ConnectionConfig)[vs[1].(int)]
	}).(ConnectionConfigOutput)
}

type ConnectionConfigMapOutput struct{ *pulumi.OutputState }

func (ConnectionConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionConfig)(nil)).Elem()
}

func (o ConnectionConfigMapOutput) ToConnectionConfigMapOutput() ConnectionConfigMapOutput {
	return o
}

func (o ConnectionConfigMapOutput) ToConnectionConfigMapOutputWithContext(ctx context.Context) ConnectionConfigMapOutput {
	return o
}

func (o ConnectionConfigMapOutput) MapIndex(k pulumi.StringInput) ConnectionConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectionConfig {
		return vs[0].(map[string]*ConnectionConfig)[vs[1].(string)]
	}).(ConnectionConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigInput)(nil)).Elem(), &ConnectionConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigArrayInput)(nil)).Elem(), ConnectionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigMapInput)(nil)).Elem(), ConnectionConfigMap{})
	pulumi.RegisterOutputType(ConnectionConfigOutput{})
	pulumi.RegisterOutputType(ConnectionConfigArrayOutput{})
	pulumi.RegisterOutputType(ConnectionConfigMapOutput{})
}
