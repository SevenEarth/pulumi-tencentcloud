// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstancesInstanceList struct {
	// The charge type of instance. Valid values are `POSTPAID` and `PREPAID`.
	ChargeType string `pulumi:"chargeType"`
	// The time when the instance is created.
	CreateTime string `pulumi:"createTime"`
	// IP address of an instance.
	Ip string `pulumi:"ip"`
	// Memory size in MB.
	MemSize int `pulumi:"memSize"`
	// Name of a redis instance.
	Name string `pulumi:"name"`
	// List of instance node information. Currently, information about the node type (master or replica) and node availability zone can be passed in.
	NodeInfos []GetInstancesInstanceListNodeInfo `pulumi:"nodeInfos"`
	// The port used to access a redis instance.
	Port int `pulumi:"port"`
	// ID of the project to which redis instance belongs.
	ProjectId int `pulumi:"projectId"`
	// ID of a redis instance.
	RedisId string `pulumi:"redisId"`
	// The number of instance copies.
	RedisReplicasNum int `pulumi:"redisReplicasNum"`
	// The number of instance shard.
	RedisShardNum int `pulumi:"redisShardNum"`
	// Current status of an instance, maybe: `init`, `processing`, `online`, `isolate` and `todelete`.
	Status string `pulumi:"status"`
	// ID of the vpc subnet.
	SubnetId string `pulumi:"subnetId"`
	// Tags of redis instance.
	Tags map[string]interface{} `pulumi:"tags"`
	// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type string `pulumi:"type"`
	// Instance type. Refer to `data.tencentcloud_redis_zone_config.list.type_id` get available values.
	TypeId int `pulumi:"typeId"`
	// ID of the vpc with which the instance is associated.
	VpcId string `pulumi:"vpcId"`
	// ID of an available zone.
	Zone string `pulumi:"zone"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//          GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// The charge type of instance. Valid values are `POSTPAID` and `PREPAID`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The time when the instance is created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// IP address of an instance.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Memory size in MB.
	MemSize pulumi.IntInput `pulumi:"memSize"`
	// Name of a redis instance.
	Name pulumi.StringInput `pulumi:"name"`
	// List of instance node information. Currently, information about the node type (master or replica) and node availability zone can be passed in.
	NodeInfos GetInstancesInstanceListNodeInfoArrayInput `pulumi:"nodeInfos"`
	// The port used to access a redis instance.
	Port pulumi.IntInput `pulumi:"port"`
	// ID of the project to which redis instance belongs.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// ID of a redis instance.
	RedisId pulumi.StringInput `pulumi:"redisId"`
	// The number of instance copies.
	RedisReplicasNum pulumi.IntInput `pulumi:"redisReplicasNum"`
	// The number of instance shard.
	RedisShardNum pulumi.IntInput `pulumi:"redisShardNum"`
	// Current status of an instance, maybe: `init`, `processing`, `online`, `isolate` and `todelete`.
	Status pulumi.StringInput `pulumi:"status"`
	// ID of the vpc subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of redis instance.
	Tags pulumi.MapInput `pulumi:"tags"`
	// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type pulumi.StringInput `pulumi:"type"`
	// Instance type. Refer to `data.tencentcloud_redis_zone_config.list.type_id` get available values.
	TypeId pulumi.IntInput `pulumi:"typeId"`
	// ID of the vpc with which the instance is associated.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of an available zone.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//          GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// The charge type of instance. Valid values are `POSTPAID` and `PREPAID`.
func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The time when the instance is created.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// IP address of an instance.
func (o GetInstancesInstanceListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Ip }).(pulumi.StringOutput)
}

// Memory size in MB.
func (o GetInstancesInstanceListOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.MemSize }).(pulumi.IntOutput)
}

// Name of a redis instance.
func (o GetInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// List of instance node information. Currently, information about the node type (master or replica) and node availability zone can be passed in.
func (o GetInstancesInstanceListOutput) NodeInfos() GetInstancesInstanceListNodeInfoArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListNodeInfo { return v.NodeInfos }).(GetInstancesInstanceListNodeInfoArrayOutput)
}

// The port used to access a redis instance.
func (o GetInstancesInstanceListOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Port }).(pulumi.IntOutput)
}

// ID of the project to which redis instance belongs.
func (o GetInstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// ID of a redis instance.
func (o GetInstancesInstanceListOutput) RedisId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.RedisId }).(pulumi.StringOutput)
}

// The number of instance copies.
func (o GetInstancesInstanceListOutput) RedisReplicasNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.RedisReplicasNum }).(pulumi.IntOutput)
}

// The number of instance shard.
func (o GetInstancesInstanceListOutput) RedisShardNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.RedisShardNum }).(pulumi.IntOutput)
}

// Current status of an instance, maybe: `init`, `processing`, `online`, `isolate` and `todelete`.
func (o GetInstancesInstanceListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Status }).(pulumi.StringOutput)
}

// ID of the vpc subnet.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of redis instance.
func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
//
// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
func (o GetInstancesInstanceListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Type }).(pulumi.StringOutput)
}

// Instance type. Refer to `data.tencentcloud_redis_zone_config.list.type_id` get available values.
func (o GetInstancesInstanceListOutput) TypeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.TypeId }).(pulumi.IntOutput)
}

// ID of the vpc with which the instance is associated.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of an available zone.
func (o GetInstancesInstanceListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetInstancesInstanceListNodeInfo struct {
	// ID of the master or replica node.
	Id int `pulumi:"id"`
	// Indicates whether the node is master.
	Master bool `pulumi:"master"`
	// ID of the availability zone of the master or replica node.
	ZoneId int `pulumi:"zoneId"`
}

// GetInstancesInstanceListNodeInfoInput is an input type that accepts GetInstancesInstanceListNodeInfoArgs and GetInstancesInstanceListNodeInfoOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListNodeInfoInput` via:
//
//          GetInstancesInstanceListNodeInfoArgs{...}
type GetInstancesInstanceListNodeInfoInput interface {
	pulumi.Input

	ToGetInstancesInstanceListNodeInfoOutput() GetInstancesInstanceListNodeInfoOutput
	ToGetInstancesInstanceListNodeInfoOutputWithContext(context.Context) GetInstancesInstanceListNodeInfoOutput
}

type GetInstancesInstanceListNodeInfoArgs struct {
	// ID of the master or replica node.
	Id pulumi.IntInput `pulumi:"id"`
	// Indicates whether the node is master.
	Master pulumi.BoolInput `pulumi:"master"`
	// ID of the availability zone of the master or replica node.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceListNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListNodeInfo)(nil)).Elem()
}

func (i GetInstancesInstanceListNodeInfoArgs) ToGetInstancesInstanceListNodeInfoOutput() GetInstancesInstanceListNodeInfoOutput {
	return i.ToGetInstancesInstanceListNodeInfoOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListNodeInfoArgs) ToGetInstancesInstanceListNodeInfoOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListNodeInfoOutput)
}

// GetInstancesInstanceListNodeInfoArrayInput is an input type that accepts GetInstancesInstanceListNodeInfoArray and GetInstancesInstanceListNodeInfoArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListNodeInfoArrayInput` via:
//
//          GetInstancesInstanceListNodeInfoArray{ GetInstancesInstanceListNodeInfoArgs{...} }
type GetInstancesInstanceListNodeInfoArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListNodeInfoArrayOutput() GetInstancesInstanceListNodeInfoArrayOutput
	ToGetInstancesInstanceListNodeInfoArrayOutputWithContext(context.Context) GetInstancesInstanceListNodeInfoArrayOutput
}

type GetInstancesInstanceListNodeInfoArray []GetInstancesInstanceListNodeInfoInput

func (GetInstancesInstanceListNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListNodeInfo)(nil)).Elem()
}

func (i GetInstancesInstanceListNodeInfoArray) ToGetInstancesInstanceListNodeInfoArrayOutput() GetInstancesInstanceListNodeInfoArrayOutput {
	return i.ToGetInstancesInstanceListNodeInfoArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListNodeInfoArray) ToGetInstancesInstanceListNodeInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListNodeInfoArrayOutput)
}

type GetInstancesInstanceListNodeInfoOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListNodeInfo)(nil)).Elem()
}

func (o GetInstancesInstanceListNodeInfoOutput) ToGetInstancesInstanceListNodeInfoOutput() GetInstancesInstanceListNodeInfoOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoOutput) ToGetInstancesInstanceListNodeInfoOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoOutput {
	return o
}

// ID of the master or replica node.
func (o GetInstancesInstanceListNodeInfoOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfo) int { return v.Id }).(pulumi.IntOutput)
}

// Indicates whether the node is master.
func (o GetInstancesInstanceListNodeInfoOutput) Master() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfo) bool { return v.Master }).(pulumi.BoolOutput)
}

// ID of the availability zone of the master or replica node.
func (o GetInstancesInstanceListNodeInfoOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfo) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetInstancesInstanceListNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListNodeInfo)(nil)).Elem()
}

func (o GetInstancesInstanceListNodeInfoArrayOutput) ToGetInstancesInstanceListNodeInfoArrayOutput() GetInstancesInstanceListNodeInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoArrayOutput) ToGetInstancesInstanceListNodeInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListNodeInfo {
		return vs[0].([]GetInstancesInstanceListNodeInfo)[vs[1].(int)]
	}).(GetInstancesInstanceListNodeInfoOutput)
}

type GetZoneConfigList struct {
	// (**Deprecated**) It has been deprecated from version 1.26.0. Use `shardMemories` instead. The memory volume of an available instance(in MB).
	//
	// Deprecated: It has been deprecated from version 1.26.0. Use `shard_memories` instead.
	MemSizes []int `pulumi:"memSizes"`
	// The support numbers of instance copies.
	RedisReplicasNums []int `pulumi:"redisReplicasNums"`
	// The support numbers of instance shard.
	RedisShardNums []int `pulumi:"redisShardNums"`
	// The memory volume list of an available instance shard(in MB).
	ShardMemories []int `pulumi:"shardMemories"`
	// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type string `pulumi:"type"`
	// Instance type ID.
	TypeId int `pulumi:"typeId"`
	// Version description of an available instance. Possible values: `Redis 3.2`, `Redis 4.0`.
	Version string `pulumi:"version"`
	// ID of available zone.
	Zone string `pulumi:"zone"`
}

// GetZoneConfigListInput is an input type that accepts GetZoneConfigListArgs and GetZoneConfigListOutput values.
// You can construct a concrete instance of `GetZoneConfigListInput` via:
//
//          GetZoneConfigListArgs{...}
type GetZoneConfigListInput interface {
	pulumi.Input

	ToGetZoneConfigListOutput() GetZoneConfigListOutput
	ToGetZoneConfigListOutputWithContext(context.Context) GetZoneConfigListOutput
}

type GetZoneConfigListArgs struct {
	// (**Deprecated**) It has been deprecated from version 1.26.0. Use `shardMemories` instead. The memory volume of an available instance(in MB).
	//
	// Deprecated: It has been deprecated from version 1.26.0. Use `shard_memories` instead.
	MemSizes pulumi.IntArrayInput `pulumi:"memSizes"`
	// The support numbers of instance copies.
	RedisReplicasNums pulumi.IntArrayInput `pulumi:"redisReplicasNums"`
	// The support numbers of instance shard.
	RedisShardNums pulumi.IntArrayInput `pulumi:"redisShardNums"`
	// The memory volume list of an available instance shard(in MB).
	ShardMemories pulumi.IntArrayInput `pulumi:"shardMemories"`
	// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type pulumi.StringInput `pulumi:"type"`
	// Instance type ID.
	TypeId pulumi.IntInput `pulumi:"typeId"`
	// Version description of an available instance. Possible values: `Redis 3.2`, `Redis 4.0`.
	Version pulumi.StringInput `pulumi:"version"`
	// ID of available zone.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return i.ToGetZoneConfigListOutputWithContext(context.Background())
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListOutput)
}

// GetZoneConfigListArrayInput is an input type that accepts GetZoneConfigListArray and GetZoneConfigListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigListArrayInput` via:
//
//          GetZoneConfigListArray{ GetZoneConfigListArgs{...} }
type GetZoneConfigListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput
	ToGetZoneConfigListArrayOutputWithContext(context.Context) GetZoneConfigListArrayOutput
}

type GetZoneConfigListArray []GetZoneConfigListInput

func (GetZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return i.ToGetZoneConfigListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListArrayOutput)
}

type GetZoneConfigListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return o
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return o
}

// (**Deprecated**) It has been deprecated from version 1.26.0. Use `shardMemories` instead. The memory volume of an available instance(in MB).
//
// Deprecated: It has been deprecated from version 1.26.0. Use `shard_memories` instead.
func (o GetZoneConfigListOutput) MemSizes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.MemSizes }).(pulumi.IntArrayOutput)
}

// The support numbers of instance copies.
func (o GetZoneConfigListOutput) RedisReplicasNums() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.RedisReplicasNums }).(pulumi.IntArrayOutput)
}

// The support numbers of instance shard.
func (o GetZoneConfigListOutput) RedisShardNums() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.RedisShardNums }).(pulumi.IntArrayOutput)
}

// The memory volume list of an available instance shard(in MB).
func (o GetZoneConfigListOutput) ShardMemories() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneConfigList) []int { return v.ShardMemories }).(pulumi.IntArrayOutput)
}

// (**Deprecated**) It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `masterSlaveRedis`, `masterSlaveCkv`, `clusterCkv`, `clusterRedis` and `standaloneRedis`.
//
// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
func (o GetZoneConfigListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.Type }).(pulumi.StringOutput)
}

// Instance type ID.
func (o GetZoneConfigListOutput) TypeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.TypeId }).(pulumi.IntOutput)
}

// Version description of an available instance. Possible values: `Redis 3.2`, `Redis 4.0`.
func (o GetZoneConfigListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.Version }).(pulumi.StringOutput)
}

// ID of available zone.
func (o GetZoneConfigListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.Zone }).(pulumi.StringOutput)
}

type GetZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigList {
		return vs[0].([]GetZoneConfigList)[vs[1].(int)]
	}).(GetZoneConfigListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListNodeInfoInput)(nil)).Elem(), GetInstancesInstanceListNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListNodeInfoArrayInput)(nil)).Elem(), GetInstancesInstanceListNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListInput)(nil)).Elem(), GetZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListArrayInput)(nil)).Elem(), GetZoneConfigListArray{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListNodeInfoOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListArrayOutput{})
}
