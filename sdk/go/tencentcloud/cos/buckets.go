// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Buckets(ctx *pulumi.Context, args *BucketsArgs, opts ...pulumi.InvokeOption) (*BucketsResult, error) {
	var rv BucketsResult
	err := ctx.Invoke("tencentcloud:Cos/buckets:Buckets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Buckets.
type BucketsArgs struct {
	BucketPrefix     *string                `pulumi:"bucketPrefix"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by Buckets.
type BucketsResult struct {
	BucketLists  []BucketsBucketList `pulumi:"bucketLists"`
	BucketPrefix *string             `pulumi:"bucketPrefix"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func BucketsOutput(ctx *pulumi.Context, args BucketsOutputArgs, opts ...pulumi.InvokeOption) BucketsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BucketsResult, error) {
			args := v.(BucketsArgs)
			r, err := Buckets(ctx, &args, opts...)
			var s BucketsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BucketsResultOutput)
}

// A collection of arguments for invoking Buckets.
type BucketsOutputArgs struct {
	BucketPrefix     pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (BucketsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsArgs)(nil)).Elem()
}

// A collection of values returned by Buckets.
type BucketsResultOutput struct{ *pulumi.OutputState }

func (BucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsResult)(nil)).Elem()
}

func (o BucketsResultOutput) ToBucketsResultOutput() BucketsResultOutput {
	return o
}

func (o BucketsResultOutput) ToBucketsResultOutputWithContext(ctx context.Context) BucketsResultOutput {
	return o
}

func (o BucketsResultOutput) BucketLists() BucketsBucketListArrayOutput {
	return o.ApplyT(func(v BucketsResult) []BucketsBucketList { return v.BucketLists }).(BucketsBucketListArrayOutput)
}

func (o BucketsResultOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsResult) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o BucketsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o BucketsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o BucketsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v BucketsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketsResultOutput{})
}
