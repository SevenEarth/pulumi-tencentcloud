// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BucketsBucketList struct {
	Acl               string                              `pulumi:"acl"`
	AclBody           string                              `pulumi:"aclBody"`
	Bucket            string                              `pulumi:"bucket"`
	CorsRules         []BucketsBucketListCorsRule         `pulumi:"corsRules"`
	CosBucketUrl      string                              `pulumi:"cosBucketUrl"`
	LifecycleRules    []BucketsBucketListLifecycleRule    `pulumi:"lifecycleRules"`
	OriginDomainRules []BucketsBucketListOriginDomainRule `pulumi:"originDomainRules"`
	OriginPullRules   []BucketsBucketListOriginPullRule   `pulumi:"originPullRules"`
	Tags              map[string]interface{}              `pulumi:"tags"`
	Websites          []BucketsBucketListWebsite          `pulumi:"websites"`
}

// BucketsBucketListInput is an input type that accepts BucketsBucketListArgs and BucketsBucketListOutput values.
// You can construct a concrete instance of `BucketsBucketListInput` via:
//
//          BucketsBucketListArgs{...}
type BucketsBucketListInput interface {
	pulumi.Input

	ToBucketsBucketListOutput() BucketsBucketListOutput
	ToBucketsBucketListOutputWithContext(context.Context) BucketsBucketListOutput
}

type BucketsBucketListArgs struct {
	Acl               pulumi.StringInput                          `pulumi:"acl"`
	AclBody           pulumi.StringInput                          `pulumi:"aclBody"`
	Bucket            pulumi.StringInput                          `pulumi:"bucket"`
	CorsRules         BucketsBucketListCorsRuleArrayInput         `pulumi:"corsRules"`
	CosBucketUrl      pulumi.StringInput                          `pulumi:"cosBucketUrl"`
	LifecycleRules    BucketsBucketListLifecycleRuleArrayInput    `pulumi:"lifecycleRules"`
	OriginDomainRules BucketsBucketListOriginDomainRuleArrayInput `pulumi:"originDomainRules"`
	OriginPullRules   BucketsBucketListOriginPullRuleArrayInput   `pulumi:"originPullRules"`
	Tags              pulumi.MapInput                             `pulumi:"tags"`
	Websites          BucketsBucketListWebsiteArrayInput          `pulumi:"websites"`
}

func (BucketsBucketListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketList)(nil)).Elem()
}

func (i BucketsBucketListArgs) ToBucketsBucketListOutput() BucketsBucketListOutput {
	return i.ToBucketsBucketListOutputWithContext(context.Background())
}

func (i BucketsBucketListArgs) ToBucketsBucketListOutputWithContext(ctx context.Context) BucketsBucketListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListOutput)
}

// BucketsBucketListArrayInput is an input type that accepts BucketsBucketListArray and BucketsBucketListArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListArrayInput` via:
//
//          BucketsBucketListArray{ BucketsBucketListArgs{...} }
type BucketsBucketListArrayInput interface {
	pulumi.Input

	ToBucketsBucketListArrayOutput() BucketsBucketListArrayOutput
	ToBucketsBucketListArrayOutputWithContext(context.Context) BucketsBucketListArrayOutput
}

type BucketsBucketListArray []BucketsBucketListInput

func (BucketsBucketListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketList)(nil)).Elem()
}

func (i BucketsBucketListArray) ToBucketsBucketListArrayOutput() BucketsBucketListArrayOutput {
	return i.ToBucketsBucketListArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListArray) ToBucketsBucketListArrayOutputWithContext(ctx context.Context) BucketsBucketListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListArrayOutput)
}

type BucketsBucketListOutput struct{ *pulumi.OutputState }

func (BucketsBucketListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketList)(nil)).Elem()
}

func (o BucketsBucketListOutput) ToBucketsBucketListOutput() BucketsBucketListOutput {
	return o
}

func (o BucketsBucketListOutput) ToBucketsBucketListOutputWithContext(ctx context.Context) BucketsBucketListOutput {
	return o
}

func (o BucketsBucketListOutput) Acl() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketList) string { return v.Acl }).(pulumi.StringOutput)
}

func (o BucketsBucketListOutput) AclBody() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketList) string { return v.AclBody }).(pulumi.StringOutput)
}

func (o BucketsBucketListOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketList) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o BucketsBucketListOutput) CorsRules() BucketsBucketListCorsRuleArrayOutput {
	return o.ApplyT(func(v BucketsBucketList) []BucketsBucketListCorsRule { return v.CorsRules }).(BucketsBucketListCorsRuleArrayOutput)
}

func (o BucketsBucketListOutput) CosBucketUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketList) string { return v.CosBucketUrl }).(pulumi.StringOutput)
}

func (o BucketsBucketListOutput) LifecycleRules() BucketsBucketListLifecycleRuleArrayOutput {
	return o.ApplyT(func(v BucketsBucketList) []BucketsBucketListLifecycleRule { return v.LifecycleRules }).(BucketsBucketListLifecycleRuleArrayOutput)
}

func (o BucketsBucketListOutput) OriginDomainRules() BucketsBucketListOriginDomainRuleArrayOutput {
	return o.ApplyT(func(v BucketsBucketList) []BucketsBucketListOriginDomainRule { return v.OriginDomainRules }).(BucketsBucketListOriginDomainRuleArrayOutput)
}

func (o BucketsBucketListOutput) OriginPullRules() BucketsBucketListOriginPullRuleArrayOutput {
	return o.ApplyT(func(v BucketsBucketList) []BucketsBucketListOriginPullRule { return v.OriginPullRules }).(BucketsBucketListOriginPullRuleArrayOutput)
}

func (o BucketsBucketListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v BucketsBucketList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o BucketsBucketListOutput) Websites() BucketsBucketListWebsiteArrayOutput {
	return o.ApplyT(func(v BucketsBucketList) []BucketsBucketListWebsite { return v.Websites }).(BucketsBucketListWebsiteArrayOutput)
}

type BucketsBucketListArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketList)(nil)).Elem()
}

func (o BucketsBucketListArrayOutput) ToBucketsBucketListArrayOutput() BucketsBucketListArrayOutput {
	return o
}

func (o BucketsBucketListArrayOutput) ToBucketsBucketListArrayOutputWithContext(ctx context.Context) BucketsBucketListArrayOutput {
	return o
}

func (o BucketsBucketListArrayOutput) Index(i pulumi.IntInput) BucketsBucketListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketList {
		return vs[0].([]BucketsBucketList)[vs[1].(int)]
	}).(BucketsBucketListOutput)
}

type BucketsBucketListCorsRule struct {
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	AllowedMethods []string `pulumi:"allowedMethods"`
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	ExposeHeaders  []string `pulumi:"exposeHeaders"`
	MaxAgeSeconds  int      `pulumi:"maxAgeSeconds"`
}

// BucketsBucketListCorsRuleInput is an input type that accepts BucketsBucketListCorsRuleArgs and BucketsBucketListCorsRuleOutput values.
// You can construct a concrete instance of `BucketsBucketListCorsRuleInput` via:
//
//          BucketsBucketListCorsRuleArgs{...}
type BucketsBucketListCorsRuleInput interface {
	pulumi.Input

	ToBucketsBucketListCorsRuleOutput() BucketsBucketListCorsRuleOutput
	ToBucketsBucketListCorsRuleOutputWithContext(context.Context) BucketsBucketListCorsRuleOutput
}

type BucketsBucketListCorsRuleArgs struct {
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	ExposeHeaders  pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	MaxAgeSeconds  pulumi.IntInput         `pulumi:"maxAgeSeconds"`
}

func (BucketsBucketListCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListCorsRule)(nil)).Elem()
}

func (i BucketsBucketListCorsRuleArgs) ToBucketsBucketListCorsRuleOutput() BucketsBucketListCorsRuleOutput {
	return i.ToBucketsBucketListCorsRuleOutputWithContext(context.Background())
}

func (i BucketsBucketListCorsRuleArgs) ToBucketsBucketListCorsRuleOutputWithContext(ctx context.Context) BucketsBucketListCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListCorsRuleOutput)
}

// BucketsBucketListCorsRuleArrayInput is an input type that accepts BucketsBucketListCorsRuleArray and BucketsBucketListCorsRuleArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListCorsRuleArrayInput` via:
//
//          BucketsBucketListCorsRuleArray{ BucketsBucketListCorsRuleArgs{...} }
type BucketsBucketListCorsRuleArrayInput interface {
	pulumi.Input

	ToBucketsBucketListCorsRuleArrayOutput() BucketsBucketListCorsRuleArrayOutput
	ToBucketsBucketListCorsRuleArrayOutputWithContext(context.Context) BucketsBucketListCorsRuleArrayOutput
}

type BucketsBucketListCorsRuleArray []BucketsBucketListCorsRuleInput

func (BucketsBucketListCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListCorsRule)(nil)).Elem()
}

func (i BucketsBucketListCorsRuleArray) ToBucketsBucketListCorsRuleArrayOutput() BucketsBucketListCorsRuleArrayOutput {
	return i.ToBucketsBucketListCorsRuleArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListCorsRuleArray) ToBucketsBucketListCorsRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListCorsRuleArrayOutput)
}

type BucketsBucketListCorsRuleOutput struct{ *pulumi.OutputState }

func (BucketsBucketListCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListCorsRule)(nil)).Elem()
}

func (o BucketsBucketListCorsRuleOutput) ToBucketsBucketListCorsRuleOutput() BucketsBucketListCorsRuleOutput {
	return o
}

func (o BucketsBucketListCorsRuleOutput) ToBucketsBucketListCorsRuleOutputWithContext(ctx context.Context) BucketsBucketListCorsRuleOutput {
	return o
}

func (o BucketsBucketListCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketsBucketListCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

func (o BucketsBucketListCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketsBucketListCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

func (o BucketsBucketListCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketsBucketListCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o BucketsBucketListCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketsBucketListCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o BucketsBucketListCorsRuleOutput) MaxAgeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListCorsRule) int { return v.MaxAgeSeconds }).(pulumi.IntOutput)
}

type BucketsBucketListCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListCorsRule)(nil)).Elem()
}

func (o BucketsBucketListCorsRuleArrayOutput) ToBucketsBucketListCorsRuleArrayOutput() BucketsBucketListCorsRuleArrayOutput {
	return o
}

func (o BucketsBucketListCorsRuleArrayOutput) ToBucketsBucketListCorsRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListCorsRuleArrayOutput {
	return o
}

func (o BucketsBucketListCorsRuleArrayOutput) Index(i pulumi.IntInput) BucketsBucketListCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListCorsRule {
		return vs[0].([]BucketsBucketListCorsRule)[vs[1].(int)]
	}).(BucketsBucketListCorsRuleOutput)
}

type BucketsBucketListLifecycleRule struct {
	Expirations           []BucketsBucketListLifecycleRuleExpiration           `pulumi:"expirations"`
	FilterPrefix          string                                               `pulumi:"filterPrefix"`
	NonCurrentExpirations []BucketsBucketListLifecycleRuleNonCurrentExpiration `pulumi:"nonCurrentExpirations"`
	NonCurrentTransitions []BucketsBucketListLifecycleRuleNonCurrentTransition `pulumi:"nonCurrentTransitions"`
	Transitions           []BucketsBucketListLifecycleRuleTransition           `pulumi:"transitions"`
}

// BucketsBucketListLifecycleRuleInput is an input type that accepts BucketsBucketListLifecycleRuleArgs and BucketsBucketListLifecycleRuleOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleInput` via:
//
//          BucketsBucketListLifecycleRuleArgs{...}
type BucketsBucketListLifecycleRuleInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleOutput() BucketsBucketListLifecycleRuleOutput
	ToBucketsBucketListLifecycleRuleOutputWithContext(context.Context) BucketsBucketListLifecycleRuleOutput
}

type BucketsBucketListLifecycleRuleArgs struct {
	Expirations           BucketsBucketListLifecycleRuleExpirationArrayInput           `pulumi:"expirations"`
	FilterPrefix          pulumi.StringInput                                           `pulumi:"filterPrefix"`
	NonCurrentExpirations BucketsBucketListLifecycleRuleNonCurrentExpirationArrayInput `pulumi:"nonCurrentExpirations"`
	NonCurrentTransitions BucketsBucketListLifecycleRuleNonCurrentTransitionArrayInput `pulumi:"nonCurrentTransitions"`
	Transitions           BucketsBucketListLifecycleRuleTransitionArrayInput           `pulumi:"transitions"`
}

func (BucketsBucketListLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRule)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleArgs) ToBucketsBucketListLifecycleRuleOutput() BucketsBucketListLifecycleRuleOutput {
	return i.ToBucketsBucketListLifecycleRuleOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleArgs) ToBucketsBucketListLifecycleRuleOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleOutput)
}

// BucketsBucketListLifecycleRuleArrayInput is an input type that accepts BucketsBucketListLifecycleRuleArray and BucketsBucketListLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleArrayInput` via:
//
//          BucketsBucketListLifecycleRuleArray{ BucketsBucketListLifecycleRuleArgs{...} }
type BucketsBucketListLifecycleRuleArrayInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleArrayOutput() BucketsBucketListLifecycleRuleArrayOutput
	ToBucketsBucketListLifecycleRuleArrayOutputWithContext(context.Context) BucketsBucketListLifecycleRuleArrayOutput
}

type BucketsBucketListLifecycleRuleArray []BucketsBucketListLifecycleRuleInput

func (BucketsBucketListLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRule)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleArray) ToBucketsBucketListLifecycleRuleArrayOutput() BucketsBucketListLifecycleRuleArrayOutput {
	return i.ToBucketsBucketListLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleArray) ToBucketsBucketListLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleArrayOutput)
}

type BucketsBucketListLifecycleRuleOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRule)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleOutput) ToBucketsBucketListLifecycleRuleOutput() BucketsBucketListLifecycleRuleOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleOutput) ToBucketsBucketListLifecycleRuleOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleOutput) Expirations() BucketsBucketListLifecycleRuleExpirationArrayOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRule) []BucketsBucketListLifecycleRuleExpiration {
		return v.Expirations
	}).(BucketsBucketListLifecycleRuleExpirationArrayOutput)
}

func (o BucketsBucketListLifecycleRuleOutput) FilterPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRule) string { return v.FilterPrefix }).(pulumi.StringOutput)
}

func (o BucketsBucketListLifecycleRuleOutput) NonCurrentExpirations() BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRule) []BucketsBucketListLifecycleRuleNonCurrentExpiration {
		return v.NonCurrentExpirations
	}).(BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput)
}

func (o BucketsBucketListLifecycleRuleOutput) NonCurrentTransitions() BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRule) []BucketsBucketListLifecycleRuleNonCurrentTransition {
		return v.NonCurrentTransitions
	}).(BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput)
}

func (o BucketsBucketListLifecycleRuleOutput) Transitions() BucketsBucketListLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRule) []BucketsBucketListLifecycleRuleTransition {
		return v.Transitions
	}).(BucketsBucketListLifecycleRuleTransitionArrayOutput)
}

type BucketsBucketListLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRule)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleArrayOutput) ToBucketsBucketListLifecycleRuleArrayOutput() BucketsBucketListLifecycleRuleArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleArrayOutput) ToBucketsBucketListLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleArrayOutput) Index(i pulumi.IntInput) BucketsBucketListLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListLifecycleRule {
		return vs[0].([]BucketsBucketListLifecycleRule)[vs[1].(int)]
	}).(BucketsBucketListLifecycleRuleOutput)
}

type BucketsBucketListLifecycleRuleExpiration struct {
	Date string `pulumi:"date"`
	Days int    `pulumi:"days"`
}

// BucketsBucketListLifecycleRuleExpirationInput is an input type that accepts BucketsBucketListLifecycleRuleExpirationArgs and BucketsBucketListLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleExpirationInput` via:
//
//          BucketsBucketListLifecycleRuleExpirationArgs{...}
type BucketsBucketListLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleExpirationOutput() BucketsBucketListLifecycleRuleExpirationOutput
	ToBucketsBucketListLifecycleRuleExpirationOutputWithContext(context.Context) BucketsBucketListLifecycleRuleExpirationOutput
}

type BucketsBucketListLifecycleRuleExpirationArgs struct {
	Date pulumi.StringInput `pulumi:"date"`
	Days pulumi.IntInput    `pulumi:"days"`
}

func (BucketsBucketListLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleExpiration)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleExpirationArgs) ToBucketsBucketListLifecycleRuleExpirationOutput() BucketsBucketListLifecycleRuleExpirationOutput {
	return i.ToBucketsBucketListLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleExpirationArgs) ToBucketsBucketListLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleExpirationOutput)
}

// BucketsBucketListLifecycleRuleExpirationArrayInput is an input type that accepts BucketsBucketListLifecycleRuleExpirationArray and BucketsBucketListLifecycleRuleExpirationArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleExpirationArrayInput` via:
//
//          BucketsBucketListLifecycleRuleExpirationArray{ BucketsBucketListLifecycleRuleExpirationArgs{...} }
type BucketsBucketListLifecycleRuleExpirationArrayInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleExpirationArrayOutput() BucketsBucketListLifecycleRuleExpirationArrayOutput
	ToBucketsBucketListLifecycleRuleExpirationArrayOutputWithContext(context.Context) BucketsBucketListLifecycleRuleExpirationArrayOutput
}

type BucketsBucketListLifecycleRuleExpirationArray []BucketsBucketListLifecycleRuleExpirationInput

func (BucketsBucketListLifecycleRuleExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleExpiration)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleExpirationArray) ToBucketsBucketListLifecycleRuleExpirationArrayOutput() BucketsBucketListLifecycleRuleExpirationArrayOutput {
	return i.ToBucketsBucketListLifecycleRuleExpirationArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleExpirationArray) ToBucketsBucketListLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleExpirationArrayOutput)
}

type BucketsBucketListLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleExpirationOutput) ToBucketsBucketListLifecycleRuleExpirationOutput() BucketsBucketListLifecycleRuleExpirationOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleExpirationOutput) ToBucketsBucketListLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleExpirationOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleExpirationOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleExpiration) string { return v.Date }).(pulumi.StringOutput)
}

func (o BucketsBucketListLifecycleRuleExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type BucketsBucketListLifecycleRuleExpirationArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleExpirationArrayOutput) ToBucketsBucketListLifecycleRuleExpirationArrayOutput() BucketsBucketListLifecycleRuleExpirationArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleExpirationArrayOutput) ToBucketsBucketListLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleExpirationArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleExpirationArrayOutput) Index(i pulumi.IntInput) BucketsBucketListLifecycleRuleExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListLifecycleRuleExpiration {
		return vs[0].([]BucketsBucketListLifecycleRuleExpiration)[vs[1].(int)]
	}).(BucketsBucketListLifecycleRuleExpirationOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentExpiration struct {
	NonCurrentDays int `pulumi:"nonCurrentDays"`
}

// BucketsBucketListLifecycleRuleNonCurrentExpirationInput is an input type that accepts BucketsBucketListLifecycleRuleNonCurrentExpirationArgs and BucketsBucketListLifecycleRuleNonCurrentExpirationOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleNonCurrentExpirationInput` via:
//
//          BucketsBucketListLifecycleRuleNonCurrentExpirationArgs{...}
type BucketsBucketListLifecycleRuleNonCurrentExpirationInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationOutput
	ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutputWithContext(context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationOutput
}

type BucketsBucketListLifecycleRuleNonCurrentExpirationArgs struct {
	NonCurrentDays pulumi.IntInput `pulumi:"nonCurrentDays"`
}

func (BucketsBucketListLifecycleRuleNonCurrentExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleNonCurrentExpirationArgs) ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationOutput {
	return i.ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleNonCurrentExpirationArgs) ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleNonCurrentExpirationOutput)
}

// BucketsBucketListLifecycleRuleNonCurrentExpirationArrayInput is an input type that accepts BucketsBucketListLifecycleRuleNonCurrentExpirationArray and BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleNonCurrentExpirationArrayInput` via:
//
//          BucketsBucketListLifecycleRuleNonCurrentExpirationArray{ BucketsBucketListLifecycleRuleNonCurrentExpirationArgs{...} }
type BucketsBucketListLifecycleRuleNonCurrentExpirationArrayInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput
	ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutputWithContext(context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput
}

type BucketsBucketListLifecycleRuleNonCurrentExpirationArray []BucketsBucketListLifecycleRuleNonCurrentExpirationInput

func (BucketsBucketListLifecycleRuleNonCurrentExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleNonCurrentExpirationArray) ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput {
	return i.ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleNonCurrentExpirationArray) ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentExpirationOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleNonCurrentExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationOutput) ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationOutput) ToBucketsBucketListLifecycleRuleNonCurrentExpirationOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationOutput) NonCurrentDays() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleNonCurrentExpiration) int { return v.NonCurrentDays }).(pulumi.IntOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput) ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput() BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput) ToBucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput) Index(i pulumi.IntInput) BucketsBucketListLifecycleRuleNonCurrentExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListLifecycleRuleNonCurrentExpiration {
		return vs[0].([]BucketsBucketListLifecycleRuleNonCurrentExpiration)[vs[1].(int)]
	}).(BucketsBucketListLifecycleRuleNonCurrentExpirationOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentTransition struct {
	NonCurrentDays int    `pulumi:"nonCurrentDays"`
	StorageClass   string `pulumi:"storageClass"`
}

// BucketsBucketListLifecycleRuleNonCurrentTransitionInput is an input type that accepts BucketsBucketListLifecycleRuleNonCurrentTransitionArgs and BucketsBucketListLifecycleRuleNonCurrentTransitionOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleNonCurrentTransitionInput` via:
//
//          BucketsBucketListLifecycleRuleNonCurrentTransitionArgs{...}
type BucketsBucketListLifecycleRuleNonCurrentTransitionInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionOutput
	ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutputWithContext(context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionOutput
}

type BucketsBucketListLifecycleRuleNonCurrentTransitionArgs struct {
	NonCurrentDays pulumi.IntInput    `pulumi:"nonCurrentDays"`
	StorageClass   pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketsBucketListLifecycleRuleNonCurrentTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleNonCurrentTransitionArgs) ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionOutput {
	return i.ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleNonCurrentTransitionArgs) ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleNonCurrentTransitionOutput)
}

// BucketsBucketListLifecycleRuleNonCurrentTransitionArrayInput is an input type that accepts BucketsBucketListLifecycleRuleNonCurrentTransitionArray and BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleNonCurrentTransitionArrayInput` via:
//
//          BucketsBucketListLifecycleRuleNonCurrentTransitionArray{ BucketsBucketListLifecycleRuleNonCurrentTransitionArgs{...} }
type BucketsBucketListLifecycleRuleNonCurrentTransitionArrayInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput
	ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutputWithContext(context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput
}

type BucketsBucketListLifecycleRuleNonCurrentTransitionArray []BucketsBucketListLifecycleRuleNonCurrentTransitionInput

func (BucketsBucketListLifecycleRuleNonCurrentTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleNonCurrentTransitionArray) ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput {
	return i.ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleNonCurrentTransitionArray) ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentTransitionOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleNonCurrentTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionOutput) ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionOutput) ToBucketsBucketListLifecycleRuleNonCurrentTransitionOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionOutput) NonCurrentDays() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleNonCurrentTransition) int { return v.NonCurrentDays }).(pulumi.IntOutput)
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleNonCurrentTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput) ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput() BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput) ToBucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput) Index(i pulumi.IntInput) BucketsBucketListLifecycleRuleNonCurrentTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListLifecycleRuleNonCurrentTransition {
		return vs[0].([]BucketsBucketListLifecycleRuleNonCurrentTransition)[vs[1].(int)]
	}).(BucketsBucketListLifecycleRuleNonCurrentTransitionOutput)
}

type BucketsBucketListLifecycleRuleTransition struct {
	Date         string `pulumi:"date"`
	Days         int    `pulumi:"days"`
	StorageClass string `pulumi:"storageClass"`
}

// BucketsBucketListLifecycleRuleTransitionInput is an input type that accepts BucketsBucketListLifecycleRuleTransitionArgs and BucketsBucketListLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleTransitionInput` via:
//
//          BucketsBucketListLifecycleRuleTransitionArgs{...}
type BucketsBucketListLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleTransitionOutput() BucketsBucketListLifecycleRuleTransitionOutput
	ToBucketsBucketListLifecycleRuleTransitionOutputWithContext(context.Context) BucketsBucketListLifecycleRuleTransitionOutput
}

type BucketsBucketListLifecycleRuleTransitionArgs struct {
	Date         pulumi.StringInput `pulumi:"date"`
	Days         pulumi.IntInput    `pulumi:"days"`
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketsBucketListLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleTransitionArgs) ToBucketsBucketListLifecycleRuleTransitionOutput() BucketsBucketListLifecycleRuleTransitionOutput {
	return i.ToBucketsBucketListLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleTransitionArgs) ToBucketsBucketListLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleTransitionOutput)
}

// BucketsBucketListLifecycleRuleTransitionArrayInput is an input type that accepts BucketsBucketListLifecycleRuleTransitionArray and BucketsBucketListLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListLifecycleRuleTransitionArrayInput` via:
//
//          BucketsBucketListLifecycleRuleTransitionArray{ BucketsBucketListLifecycleRuleTransitionArgs{...} }
type BucketsBucketListLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToBucketsBucketListLifecycleRuleTransitionArrayOutput() BucketsBucketListLifecycleRuleTransitionArrayOutput
	ToBucketsBucketListLifecycleRuleTransitionArrayOutputWithContext(context.Context) BucketsBucketListLifecycleRuleTransitionArrayOutput
}

type BucketsBucketListLifecycleRuleTransitionArray []BucketsBucketListLifecycleRuleTransitionInput

func (BucketsBucketListLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketsBucketListLifecycleRuleTransitionArray) ToBucketsBucketListLifecycleRuleTransitionArrayOutput() BucketsBucketListLifecycleRuleTransitionArrayOutput {
	return i.ToBucketsBucketListLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListLifecycleRuleTransitionArray) ToBucketsBucketListLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListLifecycleRuleTransitionArrayOutput)
}

type BucketsBucketListLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleTransitionOutput) ToBucketsBucketListLifecycleRuleTransitionOutput() BucketsBucketListLifecycleRuleTransitionOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleTransitionOutput) ToBucketsBucketListLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleTransitionOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleTransitionOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleTransition) string { return v.Date }).(pulumi.StringOutput)
}

func (o BucketsBucketListLifecycleRuleTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleTransition) int { return v.Days }).(pulumi.IntOutput)
}

func (o BucketsBucketListLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketsBucketListLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketsBucketListLifecycleRuleTransitionArrayOutput) ToBucketsBucketListLifecycleRuleTransitionArrayOutput() BucketsBucketListLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleTransitionArrayOutput) ToBucketsBucketListLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketsBucketListLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketsBucketListLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) BucketsBucketListLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListLifecycleRuleTransition {
		return vs[0].([]BucketsBucketListLifecycleRuleTransition)[vs[1].(int)]
	}).(BucketsBucketListLifecycleRuleTransitionOutput)
}

type BucketsBucketListOriginDomainRule struct {
	Domain string  `pulumi:"domain"`
	Status *string `pulumi:"status"`
	Type   *string `pulumi:"type"`
}

// BucketsBucketListOriginDomainRuleInput is an input type that accepts BucketsBucketListOriginDomainRuleArgs and BucketsBucketListOriginDomainRuleOutput values.
// You can construct a concrete instance of `BucketsBucketListOriginDomainRuleInput` via:
//
//          BucketsBucketListOriginDomainRuleArgs{...}
type BucketsBucketListOriginDomainRuleInput interface {
	pulumi.Input

	ToBucketsBucketListOriginDomainRuleOutput() BucketsBucketListOriginDomainRuleOutput
	ToBucketsBucketListOriginDomainRuleOutputWithContext(context.Context) BucketsBucketListOriginDomainRuleOutput
}

type BucketsBucketListOriginDomainRuleArgs struct {
	Domain pulumi.StringInput    `pulumi:"domain"`
	Status pulumi.StringPtrInput `pulumi:"status"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (BucketsBucketListOriginDomainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListOriginDomainRule)(nil)).Elem()
}

func (i BucketsBucketListOriginDomainRuleArgs) ToBucketsBucketListOriginDomainRuleOutput() BucketsBucketListOriginDomainRuleOutput {
	return i.ToBucketsBucketListOriginDomainRuleOutputWithContext(context.Background())
}

func (i BucketsBucketListOriginDomainRuleArgs) ToBucketsBucketListOriginDomainRuleOutputWithContext(ctx context.Context) BucketsBucketListOriginDomainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListOriginDomainRuleOutput)
}

// BucketsBucketListOriginDomainRuleArrayInput is an input type that accepts BucketsBucketListOriginDomainRuleArray and BucketsBucketListOriginDomainRuleArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListOriginDomainRuleArrayInput` via:
//
//          BucketsBucketListOriginDomainRuleArray{ BucketsBucketListOriginDomainRuleArgs{...} }
type BucketsBucketListOriginDomainRuleArrayInput interface {
	pulumi.Input

	ToBucketsBucketListOriginDomainRuleArrayOutput() BucketsBucketListOriginDomainRuleArrayOutput
	ToBucketsBucketListOriginDomainRuleArrayOutputWithContext(context.Context) BucketsBucketListOriginDomainRuleArrayOutput
}

type BucketsBucketListOriginDomainRuleArray []BucketsBucketListOriginDomainRuleInput

func (BucketsBucketListOriginDomainRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListOriginDomainRule)(nil)).Elem()
}

func (i BucketsBucketListOriginDomainRuleArray) ToBucketsBucketListOriginDomainRuleArrayOutput() BucketsBucketListOriginDomainRuleArrayOutput {
	return i.ToBucketsBucketListOriginDomainRuleArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListOriginDomainRuleArray) ToBucketsBucketListOriginDomainRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListOriginDomainRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListOriginDomainRuleArrayOutput)
}

type BucketsBucketListOriginDomainRuleOutput struct{ *pulumi.OutputState }

func (BucketsBucketListOriginDomainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListOriginDomainRule)(nil)).Elem()
}

func (o BucketsBucketListOriginDomainRuleOutput) ToBucketsBucketListOriginDomainRuleOutput() BucketsBucketListOriginDomainRuleOutput {
	return o
}

func (o BucketsBucketListOriginDomainRuleOutput) ToBucketsBucketListOriginDomainRuleOutputWithContext(ctx context.Context) BucketsBucketListOriginDomainRuleOutput {
	return o
}

func (o BucketsBucketListOriginDomainRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListOriginDomainRule) string { return v.Domain }).(pulumi.StringOutput)
}

func (o BucketsBucketListOriginDomainRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginDomainRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o BucketsBucketListOriginDomainRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginDomainRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BucketsBucketListOriginDomainRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListOriginDomainRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListOriginDomainRule)(nil)).Elem()
}

func (o BucketsBucketListOriginDomainRuleArrayOutput) ToBucketsBucketListOriginDomainRuleArrayOutput() BucketsBucketListOriginDomainRuleArrayOutput {
	return o
}

func (o BucketsBucketListOriginDomainRuleArrayOutput) ToBucketsBucketListOriginDomainRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListOriginDomainRuleArrayOutput {
	return o
}

func (o BucketsBucketListOriginDomainRuleArrayOutput) Index(i pulumi.IntInput) BucketsBucketListOriginDomainRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListOriginDomainRule {
		return vs[0].([]BucketsBucketListOriginDomainRule)[vs[1].(int)]
	}).(BucketsBucketListOriginDomainRuleOutput)
}

type BucketsBucketListOriginPullRule struct {
	CustomHttpHeaders map[string]interface{} `pulumi:"customHttpHeaders"`
	FollowHttpHeaders []string               `pulumi:"followHttpHeaders"`
	FollowQueryString *bool                  `pulumi:"followQueryString"`
	FollowRedirection *bool                  `pulumi:"followRedirection"`
	Host              string                 `pulumi:"host"`
	Prefix            *string                `pulumi:"prefix"`
	Priority          int                    `pulumi:"priority"`
	Protocol          *string                `pulumi:"protocol"`
	SyncBackToSource  *bool                  `pulumi:"syncBackToSource"`
}

// BucketsBucketListOriginPullRuleInput is an input type that accepts BucketsBucketListOriginPullRuleArgs and BucketsBucketListOriginPullRuleOutput values.
// You can construct a concrete instance of `BucketsBucketListOriginPullRuleInput` via:
//
//          BucketsBucketListOriginPullRuleArgs{...}
type BucketsBucketListOriginPullRuleInput interface {
	pulumi.Input

	ToBucketsBucketListOriginPullRuleOutput() BucketsBucketListOriginPullRuleOutput
	ToBucketsBucketListOriginPullRuleOutputWithContext(context.Context) BucketsBucketListOriginPullRuleOutput
}

type BucketsBucketListOriginPullRuleArgs struct {
	CustomHttpHeaders pulumi.MapInput         `pulumi:"customHttpHeaders"`
	FollowHttpHeaders pulumi.StringArrayInput `pulumi:"followHttpHeaders"`
	FollowQueryString pulumi.BoolPtrInput     `pulumi:"followQueryString"`
	FollowRedirection pulumi.BoolPtrInput     `pulumi:"followRedirection"`
	Host              pulumi.StringInput      `pulumi:"host"`
	Prefix            pulumi.StringPtrInput   `pulumi:"prefix"`
	Priority          pulumi.IntInput         `pulumi:"priority"`
	Protocol          pulumi.StringPtrInput   `pulumi:"protocol"`
	SyncBackToSource  pulumi.BoolPtrInput     `pulumi:"syncBackToSource"`
}

func (BucketsBucketListOriginPullRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListOriginPullRule)(nil)).Elem()
}

func (i BucketsBucketListOriginPullRuleArgs) ToBucketsBucketListOriginPullRuleOutput() BucketsBucketListOriginPullRuleOutput {
	return i.ToBucketsBucketListOriginPullRuleOutputWithContext(context.Background())
}

func (i BucketsBucketListOriginPullRuleArgs) ToBucketsBucketListOriginPullRuleOutputWithContext(ctx context.Context) BucketsBucketListOriginPullRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListOriginPullRuleOutput)
}

// BucketsBucketListOriginPullRuleArrayInput is an input type that accepts BucketsBucketListOriginPullRuleArray and BucketsBucketListOriginPullRuleArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListOriginPullRuleArrayInput` via:
//
//          BucketsBucketListOriginPullRuleArray{ BucketsBucketListOriginPullRuleArgs{...} }
type BucketsBucketListOriginPullRuleArrayInput interface {
	pulumi.Input

	ToBucketsBucketListOriginPullRuleArrayOutput() BucketsBucketListOriginPullRuleArrayOutput
	ToBucketsBucketListOriginPullRuleArrayOutputWithContext(context.Context) BucketsBucketListOriginPullRuleArrayOutput
}

type BucketsBucketListOriginPullRuleArray []BucketsBucketListOriginPullRuleInput

func (BucketsBucketListOriginPullRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListOriginPullRule)(nil)).Elem()
}

func (i BucketsBucketListOriginPullRuleArray) ToBucketsBucketListOriginPullRuleArrayOutput() BucketsBucketListOriginPullRuleArrayOutput {
	return i.ToBucketsBucketListOriginPullRuleArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListOriginPullRuleArray) ToBucketsBucketListOriginPullRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListOriginPullRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListOriginPullRuleArrayOutput)
}

type BucketsBucketListOriginPullRuleOutput struct{ *pulumi.OutputState }

func (BucketsBucketListOriginPullRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListOriginPullRule)(nil)).Elem()
}

func (o BucketsBucketListOriginPullRuleOutput) ToBucketsBucketListOriginPullRuleOutput() BucketsBucketListOriginPullRuleOutput {
	return o
}

func (o BucketsBucketListOriginPullRuleOutput) ToBucketsBucketListOriginPullRuleOutputWithContext(ctx context.Context) BucketsBucketListOriginPullRuleOutput {
	return o
}

func (o BucketsBucketListOriginPullRuleOutput) CustomHttpHeaders() pulumi.MapOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) map[string]interface{} { return v.CustomHttpHeaders }).(pulumi.MapOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) FollowHttpHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) []string { return v.FollowHttpHeaders }).(pulumi.StringArrayOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) FollowQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) *bool { return v.FollowQueryString }).(pulumi.BoolPtrOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) FollowRedirection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) *bool { return v.FollowRedirection }).(pulumi.BoolPtrOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) string { return v.Host }).(pulumi.StringOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o BucketsBucketListOriginPullRuleOutput) SyncBackToSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketsBucketListOriginPullRule) *bool { return v.SyncBackToSource }).(pulumi.BoolPtrOutput)
}

type BucketsBucketListOriginPullRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListOriginPullRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListOriginPullRule)(nil)).Elem()
}

func (o BucketsBucketListOriginPullRuleArrayOutput) ToBucketsBucketListOriginPullRuleArrayOutput() BucketsBucketListOriginPullRuleArrayOutput {
	return o
}

func (o BucketsBucketListOriginPullRuleArrayOutput) ToBucketsBucketListOriginPullRuleArrayOutputWithContext(ctx context.Context) BucketsBucketListOriginPullRuleArrayOutput {
	return o
}

func (o BucketsBucketListOriginPullRuleArrayOutput) Index(i pulumi.IntInput) BucketsBucketListOriginPullRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListOriginPullRule {
		return vs[0].([]BucketsBucketListOriginPullRule)[vs[1].(int)]
	}).(BucketsBucketListOriginPullRuleOutput)
}

type BucketsBucketListWebsite struct {
	ErrorDocument string `pulumi:"errorDocument"`
	IndexDocument string `pulumi:"indexDocument"`
}

// BucketsBucketListWebsiteInput is an input type that accepts BucketsBucketListWebsiteArgs and BucketsBucketListWebsiteOutput values.
// You can construct a concrete instance of `BucketsBucketListWebsiteInput` via:
//
//          BucketsBucketListWebsiteArgs{...}
type BucketsBucketListWebsiteInput interface {
	pulumi.Input

	ToBucketsBucketListWebsiteOutput() BucketsBucketListWebsiteOutput
	ToBucketsBucketListWebsiteOutputWithContext(context.Context) BucketsBucketListWebsiteOutput
}

type BucketsBucketListWebsiteArgs struct {
	ErrorDocument pulumi.StringInput `pulumi:"errorDocument"`
	IndexDocument pulumi.StringInput `pulumi:"indexDocument"`
}

func (BucketsBucketListWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListWebsite)(nil)).Elem()
}

func (i BucketsBucketListWebsiteArgs) ToBucketsBucketListWebsiteOutput() BucketsBucketListWebsiteOutput {
	return i.ToBucketsBucketListWebsiteOutputWithContext(context.Background())
}

func (i BucketsBucketListWebsiteArgs) ToBucketsBucketListWebsiteOutputWithContext(ctx context.Context) BucketsBucketListWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListWebsiteOutput)
}

// BucketsBucketListWebsiteArrayInput is an input type that accepts BucketsBucketListWebsiteArray and BucketsBucketListWebsiteArrayOutput values.
// You can construct a concrete instance of `BucketsBucketListWebsiteArrayInput` via:
//
//          BucketsBucketListWebsiteArray{ BucketsBucketListWebsiteArgs{...} }
type BucketsBucketListWebsiteArrayInput interface {
	pulumi.Input

	ToBucketsBucketListWebsiteArrayOutput() BucketsBucketListWebsiteArrayOutput
	ToBucketsBucketListWebsiteArrayOutputWithContext(context.Context) BucketsBucketListWebsiteArrayOutput
}

type BucketsBucketListWebsiteArray []BucketsBucketListWebsiteInput

func (BucketsBucketListWebsiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListWebsite)(nil)).Elem()
}

func (i BucketsBucketListWebsiteArray) ToBucketsBucketListWebsiteArrayOutput() BucketsBucketListWebsiteArrayOutput {
	return i.ToBucketsBucketListWebsiteArrayOutputWithContext(context.Background())
}

func (i BucketsBucketListWebsiteArray) ToBucketsBucketListWebsiteArrayOutputWithContext(ctx context.Context) BucketsBucketListWebsiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketListWebsiteArrayOutput)
}

type BucketsBucketListWebsiteOutput struct{ *pulumi.OutputState }

func (BucketsBucketListWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucketListWebsite)(nil)).Elem()
}

func (o BucketsBucketListWebsiteOutput) ToBucketsBucketListWebsiteOutput() BucketsBucketListWebsiteOutput {
	return o
}

func (o BucketsBucketListWebsiteOutput) ToBucketsBucketListWebsiteOutputWithContext(ctx context.Context) BucketsBucketListWebsiteOutput {
	return o
}

func (o BucketsBucketListWebsiteOutput) ErrorDocument() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListWebsite) string { return v.ErrorDocument }).(pulumi.StringOutput)
}

func (o BucketsBucketListWebsiteOutput) IndexDocument() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucketListWebsite) string { return v.IndexDocument }).(pulumi.StringOutput)
}

type BucketsBucketListWebsiteArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketListWebsiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucketListWebsite)(nil)).Elem()
}

func (o BucketsBucketListWebsiteArrayOutput) ToBucketsBucketListWebsiteArrayOutput() BucketsBucketListWebsiteArrayOutput {
	return o
}

func (o BucketsBucketListWebsiteArrayOutput) ToBucketsBucketListWebsiteArrayOutputWithContext(ctx context.Context) BucketsBucketListWebsiteArrayOutput {
	return o
}

func (o BucketsBucketListWebsiteArrayOutput) Index(i pulumi.IntInput) BucketsBucketListWebsiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucketListWebsite {
		return vs[0].([]BucketsBucketListWebsite)[vs[1].(int)]
	}).(BucketsBucketListWebsiteOutput)
}

type CosBucketCorsRule struct {
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	AllowedMethods []string `pulumi:"allowedMethods"`
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	ExposeHeaders  []string `pulumi:"exposeHeaders"`
	MaxAgeSeconds  *int     `pulumi:"maxAgeSeconds"`
}

// CosBucketCorsRuleInput is an input type that accepts CosBucketCorsRuleArgs and CosBucketCorsRuleOutput values.
// You can construct a concrete instance of `CosBucketCorsRuleInput` via:
//
//          CosBucketCorsRuleArgs{...}
type CosBucketCorsRuleInput interface {
	pulumi.Input

	ToCosBucketCorsRuleOutput() CosBucketCorsRuleOutput
	ToCosBucketCorsRuleOutputWithContext(context.Context) CosBucketCorsRuleOutput
}

type CosBucketCorsRuleArgs struct {
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	ExposeHeaders  pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	MaxAgeSeconds  pulumi.IntPtrInput      `pulumi:"maxAgeSeconds"`
}

func (CosBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketCorsRule)(nil)).Elem()
}

func (i CosBucketCorsRuleArgs) ToCosBucketCorsRuleOutput() CosBucketCorsRuleOutput {
	return i.ToCosBucketCorsRuleOutputWithContext(context.Background())
}

func (i CosBucketCorsRuleArgs) ToCosBucketCorsRuleOutputWithContext(ctx context.Context) CosBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketCorsRuleOutput)
}

// CosBucketCorsRuleArrayInput is an input type that accepts CosBucketCorsRuleArray and CosBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `CosBucketCorsRuleArrayInput` via:
//
//          CosBucketCorsRuleArray{ CosBucketCorsRuleArgs{...} }
type CosBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToCosBucketCorsRuleArrayOutput() CosBucketCorsRuleArrayOutput
	ToCosBucketCorsRuleArrayOutputWithContext(context.Context) CosBucketCorsRuleArrayOutput
}

type CosBucketCorsRuleArray []CosBucketCorsRuleInput

func (CosBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketCorsRule)(nil)).Elem()
}

func (i CosBucketCorsRuleArray) ToCosBucketCorsRuleArrayOutput() CosBucketCorsRuleArrayOutput {
	return i.ToCosBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i CosBucketCorsRuleArray) ToCosBucketCorsRuleArrayOutputWithContext(ctx context.Context) CosBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketCorsRuleArrayOutput)
}

type CosBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (CosBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketCorsRule)(nil)).Elem()
}

func (o CosBucketCorsRuleOutput) ToCosBucketCorsRuleOutput() CosBucketCorsRuleOutput {
	return o
}

func (o CosBucketCorsRuleOutput) ToCosBucketCorsRuleOutputWithContext(ctx context.Context) CosBucketCorsRuleOutput {
	return o
}

func (o CosBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

func (o CosBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

func (o CosBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o CosBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o CosBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type CosBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (CosBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketCorsRule)(nil)).Elem()
}

func (o CosBucketCorsRuleArrayOutput) ToCosBucketCorsRuleArrayOutput() CosBucketCorsRuleArrayOutput {
	return o
}

func (o CosBucketCorsRuleArrayOutput) ToCosBucketCorsRuleArrayOutputWithContext(ctx context.Context) CosBucketCorsRuleArrayOutput {
	return o
}

func (o CosBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) CosBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketCorsRule {
		return vs[0].([]CosBucketCorsRule)[vs[1].(int)]
	}).(CosBucketCorsRuleOutput)
}

type CosBucketLifecycleRule struct {
	Expiration            *CosBucketLifecycleRuleExpiration            `pulumi:"expiration"`
	FilterPrefix          string                                       `pulumi:"filterPrefix"`
	Id                    *string                                      `pulumi:"id"`
	NonCurrentExpiration  *CosBucketLifecycleRuleNonCurrentExpiration  `pulumi:"nonCurrentExpiration"`
	NonCurrentTransitions []CosBucketLifecycleRuleNonCurrentTransition `pulumi:"nonCurrentTransitions"`
	Transitions           []CosBucketLifecycleRuleTransition           `pulumi:"transitions"`
}

// CosBucketLifecycleRuleInput is an input type that accepts CosBucketLifecycleRuleArgs and CosBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleInput` via:
//
//          CosBucketLifecycleRuleArgs{...}
type CosBucketLifecycleRuleInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleOutput() CosBucketLifecycleRuleOutput
	ToCosBucketLifecycleRuleOutputWithContext(context.Context) CosBucketLifecycleRuleOutput
}

type CosBucketLifecycleRuleArgs struct {
	Expiration            CosBucketLifecycleRuleExpirationPtrInput             `pulumi:"expiration"`
	FilterPrefix          pulumi.StringInput                                   `pulumi:"filterPrefix"`
	Id                    pulumi.StringPtrInput                                `pulumi:"id"`
	NonCurrentExpiration  CosBucketLifecycleRuleNonCurrentExpirationPtrInput   `pulumi:"nonCurrentExpiration"`
	NonCurrentTransitions CosBucketLifecycleRuleNonCurrentTransitionArrayInput `pulumi:"nonCurrentTransitions"`
	Transitions           CosBucketLifecycleRuleTransitionArrayInput           `pulumi:"transitions"`
}

func (CosBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRule)(nil)).Elem()
}

func (i CosBucketLifecycleRuleArgs) ToCosBucketLifecycleRuleOutput() CosBucketLifecycleRuleOutput {
	return i.ToCosBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleArgs) ToCosBucketLifecycleRuleOutputWithContext(ctx context.Context) CosBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleOutput)
}

// CosBucketLifecycleRuleArrayInput is an input type that accepts CosBucketLifecycleRuleArray and CosBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleArrayInput` via:
//
//          CosBucketLifecycleRuleArray{ CosBucketLifecycleRuleArgs{...} }
type CosBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleArrayOutput() CosBucketLifecycleRuleArrayOutput
	ToCosBucketLifecycleRuleArrayOutputWithContext(context.Context) CosBucketLifecycleRuleArrayOutput
}

type CosBucketLifecycleRuleArray []CosBucketLifecycleRuleInput

func (CosBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRule)(nil)).Elem()
}

func (i CosBucketLifecycleRuleArray) ToCosBucketLifecycleRuleArrayOutput() CosBucketLifecycleRuleArrayOutput {
	return i.ToCosBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleArray) ToCosBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleArrayOutput)
}

type CosBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRule)(nil)).Elem()
}

func (o CosBucketLifecycleRuleOutput) ToCosBucketLifecycleRuleOutput() CosBucketLifecycleRuleOutput {
	return o
}

func (o CosBucketLifecycleRuleOutput) ToCosBucketLifecycleRuleOutputWithContext(ctx context.Context) CosBucketLifecycleRuleOutput {
	return o
}

func (o CosBucketLifecycleRuleOutput) Expiration() CosBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) *CosBucketLifecycleRuleExpiration { return v.Expiration }).(CosBucketLifecycleRuleExpirationPtrOutput)
}

func (o CosBucketLifecycleRuleOutput) FilterPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) string { return v.FilterPrefix }).(pulumi.StringOutput)
}

func (o CosBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CosBucketLifecycleRuleOutput) NonCurrentExpiration() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) *CosBucketLifecycleRuleNonCurrentExpiration {
		return v.NonCurrentExpiration
	}).(CosBucketLifecycleRuleNonCurrentExpirationPtrOutput)
}

func (o CosBucketLifecycleRuleOutput) NonCurrentTransitions() CosBucketLifecycleRuleNonCurrentTransitionArrayOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) []CosBucketLifecycleRuleNonCurrentTransition {
		return v.NonCurrentTransitions
	}).(CosBucketLifecycleRuleNonCurrentTransitionArrayOutput)
}

func (o CosBucketLifecycleRuleOutput) Transitions() CosBucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v CosBucketLifecycleRule) []CosBucketLifecycleRuleTransition { return v.Transitions }).(CosBucketLifecycleRuleTransitionArrayOutput)
}

type CosBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRule)(nil)).Elem()
}

func (o CosBucketLifecycleRuleArrayOutput) ToCosBucketLifecycleRuleArrayOutput() CosBucketLifecycleRuleArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleArrayOutput) ToCosBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) CosBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketLifecycleRule {
		return vs[0].([]CosBucketLifecycleRule)[vs[1].(int)]
	}).(CosBucketLifecycleRuleOutput)
}

type CosBucketLifecycleRuleExpiration struct {
	Date         *string `pulumi:"date"`
	Days         *int    `pulumi:"days"`
	DeleteMarker *bool   `pulumi:"deleteMarker"`
}

// CosBucketLifecycleRuleExpirationInput is an input type that accepts CosBucketLifecycleRuleExpirationArgs and CosBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleExpirationInput` via:
//
//          CosBucketLifecycleRuleExpirationArgs{...}
type CosBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleExpirationOutput() CosBucketLifecycleRuleExpirationOutput
	ToCosBucketLifecycleRuleExpirationOutputWithContext(context.Context) CosBucketLifecycleRuleExpirationOutput
}

type CosBucketLifecycleRuleExpirationArgs struct {
	Date         pulumi.StringPtrInput `pulumi:"date"`
	Days         pulumi.IntPtrInput    `pulumi:"days"`
	DeleteMarker pulumi.BoolPtrInput   `pulumi:"deleteMarker"`
}

func (CosBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i CosBucketLifecycleRuleExpirationArgs) ToCosBucketLifecycleRuleExpirationOutput() CosBucketLifecycleRuleExpirationOutput {
	return i.ToCosBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleExpirationArgs) ToCosBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleExpirationOutput)
}

func (i CosBucketLifecycleRuleExpirationArgs) ToCosBucketLifecycleRuleExpirationPtrOutput() CosBucketLifecycleRuleExpirationPtrOutput {
	return i.ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleExpirationArgs) ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleExpirationOutput).ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// CosBucketLifecycleRuleExpirationPtrInput is an input type that accepts CosBucketLifecycleRuleExpirationArgs, CosBucketLifecycleRuleExpirationPtr and CosBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleExpirationPtrInput` via:
//
//          CosBucketLifecycleRuleExpirationArgs{...}
//
//  or:
//
//          nil
type CosBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleExpirationPtrOutput() CosBucketLifecycleRuleExpirationPtrOutput
	ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) CosBucketLifecycleRuleExpirationPtrOutput
}

type cosBucketLifecycleRuleExpirationPtrType CosBucketLifecycleRuleExpirationArgs

func CosBucketLifecycleRuleExpirationPtr(v *CosBucketLifecycleRuleExpirationArgs) CosBucketLifecycleRuleExpirationPtrInput {
	return (*cosBucketLifecycleRuleExpirationPtrType)(v)
}

func (*cosBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *cosBucketLifecycleRuleExpirationPtrType) ToCosBucketLifecycleRuleExpirationPtrOutput() CosBucketLifecycleRuleExpirationPtrOutput {
	return i.ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *cosBucketLifecycleRuleExpirationPtrType) ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleExpirationPtrOutput)
}

type CosBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o CosBucketLifecycleRuleExpirationOutput) ToCosBucketLifecycleRuleExpirationOutput() CosBucketLifecycleRuleExpirationOutput {
	return o
}

func (o CosBucketLifecycleRuleExpirationOutput) ToCosBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationOutput {
	return o
}

func (o CosBucketLifecycleRuleExpirationOutput) ToCosBucketLifecycleRuleExpirationPtrOutput() CosBucketLifecycleRuleExpirationPtrOutput {
	return o.ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o CosBucketLifecycleRuleExpirationOutput) ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosBucketLifecycleRuleExpiration) *CosBucketLifecycleRuleExpiration {
		return &v
	}).(CosBucketLifecycleRuleExpirationPtrOutput)
}

func (o CosBucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

func (o CosBucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

func (o CosBucketLifecycleRuleExpirationOutput) DeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleExpiration) *bool { return v.DeleteMarker }).(pulumi.BoolPtrOutput)
}

type CosBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) ToCosBucketLifecycleRuleExpirationPtrOutput() CosBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) ToCosBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) Elem() CosBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleExpiration) CosBucketLifecycleRuleExpiration {
		if v != nil {
			return *v
		}
		var ret CosBucketLifecycleRuleExpiration
		return ret
	}).(CosBucketLifecycleRuleExpirationOutput)
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

func (o CosBucketLifecycleRuleExpirationPtrOutput) DeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type CosBucketLifecycleRuleNonCurrentExpiration struct {
	NonCurrentDays *int `pulumi:"nonCurrentDays"`
}

// CosBucketLifecycleRuleNonCurrentExpirationInput is an input type that accepts CosBucketLifecycleRuleNonCurrentExpirationArgs and CosBucketLifecycleRuleNonCurrentExpirationOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleNonCurrentExpirationInput` via:
//
//          CosBucketLifecycleRuleNonCurrentExpirationArgs{...}
type CosBucketLifecycleRuleNonCurrentExpirationInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleNonCurrentExpirationOutput() CosBucketLifecycleRuleNonCurrentExpirationOutput
	ToCosBucketLifecycleRuleNonCurrentExpirationOutputWithContext(context.Context) CosBucketLifecycleRuleNonCurrentExpirationOutput
}

type CosBucketLifecycleRuleNonCurrentExpirationArgs struct {
	NonCurrentDays pulumi.IntPtrInput `pulumi:"nonCurrentDays"`
}

func (CosBucketLifecycleRuleNonCurrentExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (i CosBucketLifecycleRuleNonCurrentExpirationArgs) ToCosBucketLifecycleRuleNonCurrentExpirationOutput() CosBucketLifecycleRuleNonCurrentExpirationOutput {
	return i.ToCosBucketLifecycleRuleNonCurrentExpirationOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleNonCurrentExpirationArgs) ToCosBucketLifecycleRuleNonCurrentExpirationOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleNonCurrentExpirationOutput)
}

func (i CosBucketLifecycleRuleNonCurrentExpirationArgs) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutput() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return i.ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleNonCurrentExpirationArgs) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleNonCurrentExpirationOutput).ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(ctx)
}

// CosBucketLifecycleRuleNonCurrentExpirationPtrInput is an input type that accepts CosBucketLifecycleRuleNonCurrentExpirationArgs, CosBucketLifecycleRuleNonCurrentExpirationPtr and CosBucketLifecycleRuleNonCurrentExpirationPtrOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleNonCurrentExpirationPtrInput` via:
//
//          CosBucketLifecycleRuleNonCurrentExpirationArgs{...}
//
//  or:
//
//          nil
type CosBucketLifecycleRuleNonCurrentExpirationPtrInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutput() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput
	ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(context.Context) CosBucketLifecycleRuleNonCurrentExpirationPtrOutput
}

type cosBucketLifecycleRuleNonCurrentExpirationPtrType CosBucketLifecycleRuleNonCurrentExpirationArgs

func CosBucketLifecycleRuleNonCurrentExpirationPtr(v *CosBucketLifecycleRuleNonCurrentExpirationArgs) CosBucketLifecycleRuleNonCurrentExpirationPtrInput {
	return (*cosBucketLifecycleRuleNonCurrentExpirationPtrType)(v)
}

func (*cosBucketLifecycleRuleNonCurrentExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (i *cosBucketLifecycleRuleNonCurrentExpirationPtrType) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutput() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return i.ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(context.Background())
}

func (i *cosBucketLifecycleRuleNonCurrentExpirationPtrType) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleNonCurrentExpirationPtrOutput)
}

type CosBucketLifecycleRuleNonCurrentExpirationOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleNonCurrentExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (o CosBucketLifecycleRuleNonCurrentExpirationOutput) ToCosBucketLifecycleRuleNonCurrentExpirationOutput() CosBucketLifecycleRuleNonCurrentExpirationOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentExpirationOutput) ToCosBucketLifecycleRuleNonCurrentExpirationOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentExpirationOutput) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutput() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return o.ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(context.Background())
}

func (o CosBucketLifecycleRuleNonCurrentExpirationOutput) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosBucketLifecycleRuleNonCurrentExpiration) *CosBucketLifecycleRuleNonCurrentExpiration {
		return &v
	}).(CosBucketLifecycleRuleNonCurrentExpirationPtrOutput)
}

func (o CosBucketLifecycleRuleNonCurrentExpirationOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleNonCurrentExpiration) *int { return v.NonCurrentDays }).(pulumi.IntPtrOutput)
}

type CosBucketLifecycleRuleNonCurrentExpirationPtrOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleNonCurrentExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketLifecycleRuleNonCurrentExpiration)(nil)).Elem()
}

func (o CosBucketLifecycleRuleNonCurrentExpirationPtrOutput) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutput() CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentExpirationPtrOutput) ToCosBucketLifecycleRuleNonCurrentExpirationPtrOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentExpirationPtrOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentExpirationPtrOutput) Elem() CosBucketLifecycleRuleNonCurrentExpirationOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleNonCurrentExpiration) CosBucketLifecycleRuleNonCurrentExpiration {
		if v != nil {
			return *v
		}
		var ret CosBucketLifecycleRuleNonCurrentExpiration
		return ret
	}).(CosBucketLifecycleRuleNonCurrentExpirationOutput)
}

func (o CosBucketLifecycleRuleNonCurrentExpirationPtrOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosBucketLifecycleRuleNonCurrentExpiration) *int {
		if v == nil {
			return nil
		}
		return v.NonCurrentDays
	}).(pulumi.IntPtrOutput)
}

type CosBucketLifecycleRuleNonCurrentTransition struct {
	NonCurrentDays *int   `pulumi:"nonCurrentDays"`
	StorageClass   string `pulumi:"storageClass"`
}

// CosBucketLifecycleRuleNonCurrentTransitionInput is an input type that accepts CosBucketLifecycleRuleNonCurrentTransitionArgs and CosBucketLifecycleRuleNonCurrentTransitionOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleNonCurrentTransitionInput` via:
//
//          CosBucketLifecycleRuleNonCurrentTransitionArgs{...}
type CosBucketLifecycleRuleNonCurrentTransitionInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleNonCurrentTransitionOutput() CosBucketLifecycleRuleNonCurrentTransitionOutput
	ToCosBucketLifecycleRuleNonCurrentTransitionOutputWithContext(context.Context) CosBucketLifecycleRuleNonCurrentTransitionOutput
}

type CosBucketLifecycleRuleNonCurrentTransitionArgs struct {
	NonCurrentDays pulumi.IntPtrInput `pulumi:"nonCurrentDays"`
	StorageClass   pulumi.StringInput `pulumi:"storageClass"`
}

func (CosBucketLifecycleRuleNonCurrentTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (i CosBucketLifecycleRuleNonCurrentTransitionArgs) ToCosBucketLifecycleRuleNonCurrentTransitionOutput() CosBucketLifecycleRuleNonCurrentTransitionOutput {
	return i.ToCosBucketLifecycleRuleNonCurrentTransitionOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleNonCurrentTransitionArgs) ToCosBucketLifecycleRuleNonCurrentTransitionOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleNonCurrentTransitionOutput)
}

// CosBucketLifecycleRuleNonCurrentTransitionArrayInput is an input type that accepts CosBucketLifecycleRuleNonCurrentTransitionArray and CosBucketLifecycleRuleNonCurrentTransitionArrayOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleNonCurrentTransitionArrayInput` via:
//
//          CosBucketLifecycleRuleNonCurrentTransitionArray{ CosBucketLifecycleRuleNonCurrentTransitionArgs{...} }
type CosBucketLifecycleRuleNonCurrentTransitionArrayInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutput() CosBucketLifecycleRuleNonCurrentTransitionArrayOutput
	ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutputWithContext(context.Context) CosBucketLifecycleRuleNonCurrentTransitionArrayOutput
}

type CosBucketLifecycleRuleNonCurrentTransitionArray []CosBucketLifecycleRuleNonCurrentTransitionInput

func (CosBucketLifecycleRuleNonCurrentTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (i CosBucketLifecycleRuleNonCurrentTransitionArray) ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutput() CosBucketLifecycleRuleNonCurrentTransitionArrayOutput {
	return i.ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleNonCurrentTransitionArray) ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleNonCurrentTransitionArrayOutput)
}

type CosBucketLifecycleRuleNonCurrentTransitionOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleNonCurrentTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (o CosBucketLifecycleRuleNonCurrentTransitionOutput) ToCosBucketLifecycleRuleNonCurrentTransitionOutput() CosBucketLifecycleRuleNonCurrentTransitionOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentTransitionOutput) ToCosBucketLifecycleRuleNonCurrentTransitionOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentTransitionOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentTransitionOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleNonCurrentTransition) *int { return v.NonCurrentDays }).(pulumi.IntPtrOutput)
}

func (o CosBucketLifecycleRuleNonCurrentTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleNonCurrentTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type CosBucketLifecycleRuleNonCurrentTransitionArrayOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleNonCurrentTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRuleNonCurrentTransition)(nil)).Elem()
}

func (o CosBucketLifecycleRuleNonCurrentTransitionArrayOutput) ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutput() CosBucketLifecycleRuleNonCurrentTransitionArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentTransitionArrayOutput) ToCosBucketLifecycleRuleNonCurrentTransitionArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleNonCurrentTransitionArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleNonCurrentTransitionArrayOutput) Index(i pulumi.IntInput) CosBucketLifecycleRuleNonCurrentTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketLifecycleRuleNonCurrentTransition {
		return vs[0].([]CosBucketLifecycleRuleNonCurrentTransition)[vs[1].(int)]
	}).(CosBucketLifecycleRuleNonCurrentTransitionOutput)
}

type CosBucketLifecycleRuleTransition struct {
	Date         *string `pulumi:"date"`
	Days         *int    `pulumi:"days"`
	StorageClass string  `pulumi:"storageClass"`
}

// CosBucketLifecycleRuleTransitionInput is an input type that accepts CosBucketLifecycleRuleTransitionArgs and CosBucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleTransitionInput` via:
//
//          CosBucketLifecycleRuleTransitionArgs{...}
type CosBucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleTransitionOutput() CosBucketLifecycleRuleTransitionOutput
	ToCosBucketLifecycleRuleTransitionOutputWithContext(context.Context) CosBucketLifecycleRuleTransitionOutput
}

type CosBucketLifecycleRuleTransitionArgs struct {
	Date         pulumi.StringPtrInput `pulumi:"date"`
	Days         pulumi.IntPtrInput    `pulumi:"days"`
	StorageClass pulumi.StringInput    `pulumi:"storageClass"`
}

func (CosBucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i CosBucketLifecycleRuleTransitionArgs) ToCosBucketLifecycleRuleTransitionOutput() CosBucketLifecycleRuleTransitionOutput {
	return i.ToCosBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleTransitionArgs) ToCosBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) CosBucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleTransitionOutput)
}

// CosBucketLifecycleRuleTransitionArrayInput is an input type that accepts CosBucketLifecycleRuleTransitionArray and CosBucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `CosBucketLifecycleRuleTransitionArrayInput` via:
//
//          CosBucketLifecycleRuleTransitionArray{ CosBucketLifecycleRuleTransitionArgs{...} }
type CosBucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToCosBucketLifecycleRuleTransitionArrayOutput() CosBucketLifecycleRuleTransitionArrayOutput
	ToCosBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) CosBucketLifecycleRuleTransitionArrayOutput
}

type CosBucketLifecycleRuleTransitionArray []CosBucketLifecycleRuleTransitionInput

func (CosBucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i CosBucketLifecycleRuleTransitionArray) ToCosBucketLifecycleRuleTransitionArrayOutput() CosBucketLifecycleRuleTransitionArrayOutput {
	return i.ToCosBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i CosBucketLifecycleRuleTransitionArray) ToCosBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketLifecycleRuleTransitionArrayOutput)
}

type CosBucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o CosBucketLifecycleRuleTransitionOutput) ToCosBucketLifecycleRuleTransitionOutput() CosBucketLifecycleRuleTransitionOutput {
	return o
}

func (o CosBucketLifecycleRuleTransitionOutput) ToCosBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) CosBucketLifecycleRuleTransitionOutput {
	return o
}

func (o CosBucketLifecycleRuleTransitionOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleTransition) *string { return v.Date }).(pulumi.StringPtrOutput)
}

func (o CosBucketLifecycleRuleTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

func (o CosBucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type CosBucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (CosBucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o CosBucketLifecycleRuleTransitionArrayOutput) ToCosBucketLifecycleRuleTransitionArrayOutput() CosBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleTransitionArrayOutput) ToCosBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) CosBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o CosBucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) CosBucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketLifecycleRuleTransition {
		return vs[0].([]CosBucketLifecycleRuleTransition)[vs[1].(int)]
	}).(CosBucketLifecycleRuleTransitionOutput)
}

type CosBucketOriginDomainRule struct {
	Domain string  `pulumi:"domain"`
	Status *string `pulumi:"status"`
	Type   *string `pulumi:"type"`
}

// CosBucketOriginDomainRuleInput is an input type that accepts CosBucketOriginDomainRuleArgs and CosBucketOriginDomainRuleOutput values.
// You can construct a concrete instance of `CosBucketOriginDomainRuleInput` via:
//
//          CosBucketOriginDomainRuleArgs{...}
type CosBucketOriginDomainRuleInput interface {
	pulumi.Input

	ToCosBucketOriginDomainRuleOutput() CosBucketOriginDomainRuleOutput
	ToCosBucketOriginDomainRuleOutputWithContext(context.Context) CosBucketOriginDomainRuleOutput
}

type CosBucketOriginDomainRuleArgs struct {
	Domain pulumi.StringInput    `pulumi:"domain"`
	Status pulumi.StringPtrInput `pulumi:"status"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (CosBucketOriginDomainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketOriginDomainRule)(nil)).Elem()
}

func (i CosBucketOriginDomainRuleArgs) ToCosBucketOriginDomainRuleOutput() CosBucketOriginDomainRuleOutput {
	return i.ToCosBucketOriginDomainRuleOutputWithContext(context.Background())
}

func (i CosBucketOriginDomainRuleArgs) ToCosBucketOriginDomainRuleOutputWithContext(ctx context.Context) CosBucketOriginDomainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketOriginDomainRuleOutput)
}

// CosBucketOriginDomainRuleArrayInput is an input type that accepts CosBucketOriginDomainRuleArray and CosBucketOriginDomainRuleArrayOutput values.
// You can construct a concrete instance of `CosBucketOriginDomainRuleArrayInput` via:
//
//          CosBucketOriginDomainRuleArray{ CosBucketOriginDomainRuleArgs{...} }
type CosBucketOriginDomainRuleArrayInput interface {
	pulumi.Input

	ToCosBucketOriginDomainRuleArrayOutput() CosBucketOriginDomainRuleArrayOutput
	ToCosBucketOriginDomainRuleArrayOutputWithContext(context.Context) CosBucketOriginDomainRuleArrayOutput
}

type CosBucketOriginDomainRuleArray []CosBucketOriginDomainRuleInput

func (CosBucketOriginDomainRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketOriginDomainRule)(nil)).Elem()
}

func (i CosBucketOriginDomainRuleArray) ToCosBucketOriginDomainRuleArrayOutput() CosBucketOriginDomainRuleArrayOutput {
	return i.ToCosBucketOriginDomainRuleArrayOutputWithContext(context.Background())
}

func (i CosBucketOriginDomainRuleArray) ToCosBucketOriginDomainRuleArrayOutputWithContext(ctx context.Context) CosBucketOriginDomainRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketOriginDomainRuleArrayOutput)
}

type CosBucketOriginDomainRuleOutput struct{ *pulumi.OutputState }

func (CosBucketOriginDomainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketOriginDomainRule)(nil)).Elem()
}

func (o CosBucketOriginDomainRuleOutput) ToCosBucketOriginDomainRuleOutput() CosBucketOriginDomainRuleOutput {
	return o
}

func (o CosBucketOriginDomainRuleOutput) ToCosBucketOriginDomainRuleOutputWithContext(ctx context.Context) CosBucketOriginDomainRuleOutput {
	return o
}

func (o CosBucketOriginDomainRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketOriginDomainRule) string { return v.Domain }).(pulumi.StringOutput)
}

func (o CosBucketOriginDomainRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketOriginDomainRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o CosBucketOriginDomainRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketOriginDomainRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CosBucketOriginDomainRuleArrayOutput struct{ *pulumi.OutputState }

func (CosBucketOriginDomainRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketOriginDomainRule)(nil)).Elem()
}

func (o CosBucketOriginDomainRuleArrayOutput) ToCosBucketOriginDomainRuleArrayOutput() CosBucketOriginDomainRuleArrayOutput {
	return o
}

func (o CosBucketOriginDomainRuleArrayOutput) ToCosBucketOriginDomainRuleArrayOutputWithContext(ctx context.Context) CosBucketOriginDomainRuleArrayOutput {
	return o
}

func (o CosBucketOriginDomainRuleArrayOutput) Index(i pulumi.IntInput) CosBucketOriginDomainRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketOriginDomainRule {
		return vs[0].([]CosBucketOriginDomainRule)[vs[1].(int)]
	}).(CosBucketOriginDomainRuleOutput)
}

type CosBucketOriginPullRule struct {
	CustomHttpHeaders map[string]interface{} `pulumi:"customHttpHeaders"`
	FollowHttpHeaders []string               `pulumi:"followHttpHeaders"`
	FollowQueryString *bool                  `pulumi:"followQueryString"`
	FollowRedirection *bool                  `pulumi:"followRedirection"`
	Host              string                 `pulumi:"host"`
	Prefix            *string                `pulumi:"prefix"`
	Priority          int                    `pulumi:"priority"`
	Protocol          *string                `pulumi:"protocol"`
	SyncBackToSource  *bool                  `pulumi:"syncBackToSource"`
}

// CosBucketOriginPullRuleInput is an input type that accepts CosBucketOriginPullRuleArgs and CosBucketOriginPullRuleOutput values.
// You can construct a concrete instance of `CosBucketOriginPullRuleInput` via:
//
//          CosBucketOriginPullRuleArgs{...}
type CosBucketOriginPullRuleInput interface {
	pulumi.Input

	ToCosBucketOriginPullRuleOutput() CosBucketOriginPullRuleOutput
	ToCosBucketOriginPullRuleOutputWithContext(context.Context) CosBucketOriginPullRuleOutput
}

type CosBucketOriginPullRuleArgs struct {
	CustomHttpHeaders pulumi.MapInput         `pulumi:"customHttpHeaders"`
	FollowHttpHeaders pulumi.StringArrayInput `pulumi:"followHttpHeaders"`
	FollowQueryString pulumi.BoolPtrInput     `pulumi:"followQueryString"`
	FollowRedirection pulumi.BoolPtrInput     `pulumi:"followRedirection"`
	Host              pulumi.StringInput      `pulumi:"host"`
	Prefix            pulumi.StringPtrInput   `pulumi:"prefix"`
	Priority          pulumi.IntInput         `pulumi:"priority"`
	Protocol          pulumi.StringPtrInput   `pulumi:"protocol"`
	SyncBackToSource  pulumi.BoolPtrInput     `pulumi:"syncBackToSource"`
}

func (CosBucketOriginPullRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketOriginPullRule)(nil)).Elem()
}

func (i CosBucketOriginPullRuleArgs) ToCosBucketOriginPullRuleOutput() CosBucketOriginPullRuleOutput {
	return i.ToCosBucketOriginPullRuleOutputWithContext(context.Background())
}

func (i CosBucketOriginPullRuleArgs) ToCosBucketOriginPullRuleOutputWithContext(ctx context.Context) CosBucketOriginPullRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketOriginPullRuleOutput)
}

// CosBucketOriginPullRuleArrayInput is an input type that accepts CosBucketOriginPullRuleArray and CosBucketOriginPullRuleArrayOutput values.
// You can construct a concrete instance of `CosBucketOriginPullRuleArrayInput` via:
//
//          CosBucketOriginPullRuleArray{ CosBucketOriginPullRuleArgs{...} }
type CosBucketOriginPullRuleArrayInput interface {
	pulumi.Input

	ToCosBucketOriginPullRuleArrayOutput() CosBucketOriginPullRuleArrayOutput
	ToCosBucketOriginPullRuleArrayOutputWithContext(context.Context) CosBucketOriginPullRuleArrayOutput
}

type CosBucketOriginPullRuleArray []CosBucketOriginPullRuleInput

func (CosBucketOriginPullRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketOriginPullRule)(nil)).Elem()
}

func (i CosBucketOriginPullRuleArray) ToCosBucketOriginPullRuleArrayOutput() CosBucketOriginPullRuleArrayOutput {
	return i.ToCosBucketOriginPullRuleArrayOutputWithContext(context.Background())
}

func (i CosBucketOriginPullRuleArray) ToCosBucketOriginPullRuleArrayOutputWithContext(ctx context.Context) CosBucketOriginPullRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketOriginPullRuleArrayOutput)
}

type CosBucketOriginPullRuleOutput struct{ *pulumi.OutputState }

func (CosBucketOriginPullRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketOriginPullRule)(nil)).Elem()
}

func (o CosBucketOriginPullRuleOutput) ToCosBucketOriginPullRuleOutput() CosBucketOriginPullRuleOutput {
	return o
}

func (o CosBucketOriginPullRuleOutput) ToCosBucketOriginPullRuleOutputWithContext(ctx context.Context) CosBucketOriginPullRuleOutput {
	return o
}

func (o CosBucketOriginPullRuleOutput) CustomHttpHeaders() pulumi.MapOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) map[string]interface{} { return v.CustomHttpHeaders }).(pulumi.MapOutput)
}

func (o CosBucketOriginPullRuleOutput) FollowHttpHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) []string { return v.FollowHttpHeaders }).(pulumi.StringArrayOutput)
}

func (o CosBucketOriginPullRuleOutput) FollowQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) *bool { return v.FollowQueryString }).(pulumi.BoolPtrOutput)
}

func (o CosBucketOriginPullRuleOutput) FollowRedirection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) *bool { return v.FollowRedirection }).(pulumi.BoolPtrOutput)
}

func (o CosBucketOriginPullRuleOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) string { return v.Host }).(pulumi.StringOutput)
}

func (o CosBucketOriginPullRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o CosBucketOriginPullRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o CosBucketOriginPullRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o CosBucketOriginPullRuleOutput) SyncBackToSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CosBucketOriginPullRule) *bool { return v.SyncBackToSource }).(pulumi.BoolPtrOutput)
}

type CosBucketOriginPullRuleArrayOutput struct{ *pulumi.OutputState }

func (CosBucketOriginPullRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketOriginPullRule)(nil)).Elem()
}

func (o CosBucketOriginPullRuleArrayOutput) ToCosBucketOriginPullRuleArrayOutput() CosBucketOriginPullRuleArrayOutput {
	return o
}

func (o CosBucketOriginPullRuleArrayOutput) ToCosBucketOriginPullRuleArrayOutputWithContext(ctx context.Context) CosBucketOriginPullRuleArrayOutput {
	return o
}

func (o CosBucketOriginPullRuleArrayOutput) Index(i pulumi.IntInput) CosBucketOriginPullRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketOriginPullRule {
		return vs[0].([]CosBucketOriginPullRule)[vs[1].(int)]
	}).(CosBucketOriginPullRuleOutput)
}

type CosBucketReplicaRule struct {
	DestinationBucket       string  `pulumi:"destinationBucket"`
	DestinationStorageClass *string `pulumi:"destinationStorageClass"`
	Id                      *string `pulumi:"id"`
	Prefix                  *string `pulumi:"prefix"`
	Status                  string  `pulumi:"status"`
}

// CosBucketReplicaRuleInput is an input type that accepts CosBucketReplicaRuleArgs and CosBucketReplicaRuleOutput values.
// You can construct a concrete instance of `CosBucketReplicaRuleInput` via:
//
//          CosBucketReplicaRuleArgs{...}
type CosBucketReplicaRuleInput interface {
	pulumi.Input

	ToCosBucketReplicaRuleOutput() CosBucketReplicaRuleOutput
	ToCosBucketReplicaRuleOutputWithContext(context.Context) CosBucketReplicaRuleOutput
}

type CosBucketReplicaRuleArgs struct {
	DestinationBucket       pulumi.StringInput    `pulumi:"destinationBucket"`
	DestinationStorageClass pulumi.StringPtrInput `pulumi:"destinationStorageClass"`
	Id                      pulumi.StringPtrInput `pulumi:"id"`
	Prefix                  pulumi.StringPtrInput `pulumi:"prefix"`
	Status                  pulumi.StringInput    `pulumi:"status"`
}

func (CosBucketReplicaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketReplicaRule)(nil)).Elem()
}

func (i CosBucketReplicaRuleArgs) ToCosBucketReplicaRuleOutput() CosBucketReplicaRuleOutput {
	return i.ToCosBucketReplicaRuleOutputWithContext(context.Background())
}

func (i CosBucketReplicaRuleArgs) ToCosBucketReplicaRuleOutputWithContext(ctx context.Context) CosBucketReplicaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketReplicaRuleOutput)
}

// CosBucketReplicaRuleArrayInput is an input type that accepts CosBucketReplicaRuleArray and CosBucketReplicaRuleArrayOutput values.
// You can construct a concrete instance of `CosBucketReplicaRuleArrayInput` via:
//
//          CosBucketReplicaRuleArray{ CosBucketReplicaRuleArgs{...} }
type CosBucketReplicaRuleArrayInput interface {
	pulumi.Input

	ToCosBucketReplicaRuleArrayOutput() CosBucketReplicaRuleArrayOutput
	ToCosBucketReplicaRuleArrayOutputWithContext(context.Context) CosBucketReplicaRuleArrayOutput
}

type CosBucketReplicaRuleArray []CosBucketReplicaRuleInput

func (CosBucketReplicaRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketReplicaRule)(nil)).Elem()
}

func (i CosBucketReplicaRuleArray) ToCosBucketReplicaRuleArrayOutput() CosBucketReplicaRuleArrayOutput {
	return i.ToCosBucketReplicaRuleArrayOutputWithContext(context.Background())
}

func (i CosBucketReplicaRuleArray) ToCosBucketReplicaRuleArrayOutputWithContext(ctx context.Context) CosBucketReplicaRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketReplicaRuleArrayOutput)
}

type CosBucketReplicaRuleOutput struct{ *pulumi.OutputState }

func (CosBucketReplicaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketReplicaRule)(nil)).Elem()
}

func (o CosBucketReplicaRuleOutput) ToCosBucketReplicaRuleOutput() CosBucketReplicaRuleOutput {
	return o
}

func (o CosBucketReplicaRuleOutput) ToCosBucketReplicaRuleOutputWithContext(ctx context.Context) CosBucketReplicaRuleOutput {
	return o
}

func (o CosBucketReplicaRuleOutput) DestinationBucket() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketReplicaRule) string { return v.DestinationBucket }).(pulumi.StringOutput)
}

func (o CosBucketReplicaRuleOutput) DestinationStorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketReplicaRule) *string { return v.DestinationStorageClass }).(pulumi.StringPtrOutput)
}

func (o CosBucketReplicaRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketReplicaRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CosBucketReplicaRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketReplicaRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o CosBucketReplicaRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CosBucketReplicaRule) string { return v.Status }).(pulumi.StringOutput)
}

type CosBucketReplicaRuleArrayOutput struct{ *pulumi.OutputState }

func (CosBucketReplicaRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosBucketReplicaRule)(nil)).Elem()
}

func (o CosBucketReplicaRuleArrayOutput) ToCosBucketReplicaRuleArrayOutput() CosBucketReplicaRuleArrayOutput {
	return o
}

func (o CosBucketReplicaRuleArrayOutput) ToCosBucketReplicaRuleArrayOutputWithContext(ctx context.Context) CosBucketReplicaRuleArrayOutput {
	return o
}

func (o CosBucketReplicaRuleArrayOutput) Index(i pulumi.IntInput) CosBucketReplicaRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosBucketReplicaRule {
		return vs[0].([]CosBucketReplicaRule)[vs[1].(int)]
	}).(CosBucketReplicaRuleOutput)
}

type CosBucketWebsite struct {
	ErrorDocument *string `pulumi:"errorDocument"`
	IndexDocument *string `pulumi:"indexDocument"`
}

// CosBucketWebsiteInput is an input type that accepts CosBucketWebsiteArgs and CosBucketWebsiteOutput values.
// You can construct a concrete instance of `CosBucketWebsiteInput` via:
//
//          CosBucketWebsiteArgs{...}
type CosBucketWebsiteInput interface {
	pulumi.Input

	ToCosBucketWebsiteOutput() CosBucketWebsiteOutput
	ToCosBucketWebsiteOutputWithContext(context.Context) CosBucketWebsiteOutput
}

type CosBucketWebsiteArgs struct {
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
}

func (CosBucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketWebsite)(nil)).Elem()
}

func (i CosBucketWebsiteArgs) ToCosBucketWebsiteOutput() CosBucketWebsiteOutput {
	return i.ToCosBucketWebsiteOutputWithContext(context.Background())
}

func (i CosBucketWebsiteArgs) ToCosBucketWebsiteOutputWithContext(ctx context.Context) CosBucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketWebsiteOutput)
}

func (i CosBucketWebsiteArgs) ToCosBucketWebsitePtrOutput() CosBucketWebsitePtrOutput {
	return i.ToCosBucketWebsitePtrOutputWithContext(context.Background())
}

func (i CosBucketWebsiteArgs) ToCosBucketWebsitePtrOutputWithContext(ctx context.Context) CosBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketWebsiteOutput).ToCosBucketWebsitePtrOutputWithContext(ctx)
}

// CosBucketWebsitePtrInput is an input type that accepts CosBucketWebsiteArgs, CosBucketWebsitePtr and CosBucketWebsitePtrOutput values.
// You can construct a concrete instance of `CosBucketWebsitePtrInput` via:
//
//          CosBucketWebsiteArgs{...}
//
//  or:
//
//          nil
type CosBucketWebsitePtrInput interface {
	pulumi.Input

	ToCosBucketWebsitePtrOutput() CosBucketWebsitePtrOutput
	ToCosBucketWebsitePtrOutputWithContext(context.Context) CosBucketWebsitePtrOutput
}

type cosBucketWebsitePtrType CosBucketWebsiteArgs

func CosBucketWebsitePtr(v *CosBucketWebsiteArgs) CosBucketWebsitePtrInput {
	return (*cosBucketWebsitePtrType)(v)
}

func (*cosBucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketWebsite)(nil)).Elem()
}

func (i *cosBucketWebsitePtrType) ToCosBucketWebsitePtrOutput() CosBucketWebsitePtrOutput {
	return i.ToCosBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *cosBucketWebsitePtrType) ToCosBucketWebsitePtrOutputWithContext(ctx context.Context) CosBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosBucketWebsitePtrOutput)
}

type CosBucketWebsiteOutput struct{ *pulumi.OutputState }

func (CosBucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosBucketWebsite)(nil)).Elem()
}

func (o CosBucketWebsiteOutput) ToCosBucketWebsiteOutput() CosBucketWebsiteOutput {
	return o
}

func (o CosBucketWebsiteOutput) ToCosBucketWebsiteOutputWithContext(ctx context.Context) CosBucketWebsiteOutput {
	return o
}

func (o CosBucketWebsiteOutput) ToCosBucketWebsitePtrOutput() CosBucketWebsitePtrOutput {
	return o.ToCosBucketWebsitePtrOutputWithContext(context.Background())
}

func (o CosBucketWebsiteOutput) ToCosBucketWebsitePtrOutputWithContext(ctx context.Context) CosBucketWebsitePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosBucketWebsite) *CosBucketWebsite {
		return &v
	}).(CosBucketWebsitePtrOutput)
}

func (o CosBucketWebsiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

func (o CosBucketWebsiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosBucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

type CosBucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (CosBucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosBucketWebsite)(nil)).Elem()
}

func (o CosBucketWebsitePtrOutput) ToCosBucketWebsitePtrOutput() CosBucketWebsitePtrOutput {
	return o
}

func (o CosBucketWebsitePtrOutput) ToCosBucketWebsitePtrOutputWithContext(ctx context.Context) CosBucketWebsitePtrOutput {
	return o
}

func (o CosBucketWebsitePtrOutput) Elem() CosBucketWebsiteOutput {
	return o.ApplyT(func(v *CosBucketWebsite) CosBucketWebsite {
		if v != nil {
			return *v
		}
		var ret CosBucketWebsite
		return ret
	}).(CosBucketWebsiteOutput)
}

func (o CosBucketWebsitePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

func (o CosBucketWebsitePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListInput)(nil)).Elem(), BucketsBucketListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListArrayInput)(nil)).Elem(), BucketsBucketListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListCorsRuleInput)(nil)).Elem(), BucketsBucketListCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListCorsRuleArrayInput)(nil)).Elem(), BucketsBucketListCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleInput)(nil)).Elem(), BucketsBucketListLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleArrayInput)(nil)).Elem(), BucketsBucketListLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleExpirationInput)(nil)).Elem(), BucketsBucketListLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleExpirationArrayInput)(nil)).Elem(), BucketsBucketListLifecycleRuleExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentExpirationInput)(nil)).Elem(), BucketsBucketListLifecycleRuleNonCurrentExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentExpirationArrayInput)(nil)).Elem(), BucketsBucketListLifecycleRuleNonCurrentExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentTransitionInput)(nil)).Elem(), BucketsBucketListLifecycleRuleNonCurrentTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleNonCurrentTransitionArrayInput)(nil)).Elem(), BucketsBucketListLifecycleRuleNonCurrentTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleTransitionInput)(nil)).Elem(), BucketsBucketListLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListLifecycleRuleTransitionArrayInput)(nil)).Elem(), BucketsBucketListLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListOriginDomainRuleInput)(nil)).Elem(), BucketsBucketListOriginDomainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListOriginDomainRuleArrayInput)(nil)).Elem(), BucketsBucketListOriginDomainRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListOriginPullRuleInput)(nil)).Elem(), BucketsBucketListOriginPullRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListOriginPullRuleArrayInput)(nil)).Elem(), BucketsBucketListOriginPullRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListWebsiteInput)(nil)).Elem(), BucketsBucketListWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketListWebsiteArrayInput)(nil)).Elem(), BucketsBucketListWebsiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketCorsRuleInput)(nil)).Elem(), CosBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketCorsRuleArrayInput)(nil)).Elem(), CosBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleInput)(nil)).Elem(), CosBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleArrayInput)(nil)).Elem(), CosBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleExpirationInput)(nil)).Elem(), CosBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleExpirationPtrInput)(nil)).Elem(), CosBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentExpirationInput)(nil)).Elem(), CosBucketLifecycleRuleNonCurrentExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentExpirationPtrInput)(nil)).Elem(), CosBucketLifecycleRuleNonCurrentExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentTransitionInput)(nil)).Elem(), CosBucketLifecycleRuleNonCurrentTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleNonCurrentTransitionArrayInput)(nil)).Elem(), CosBucketLifecycleRuleNonCurrentTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleTransitionInput)(nil)).Elem(), CosBucketLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketLifecycleRuleTransitionArrayInput)(nil)).Elem(), CosBucketLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketOriginDomainRuleInput)(nil)).Elem(), CosBucketOriginDomainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketOriginDomainRuleArrayInput)(nil)).Elem(), CosBucketOriginDomainRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketOriginPullRuleInput)(nil)).Elem(), CosBucketOriginPullRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketOriginPullRuleArrayInput)(nil)).Elem(), CosBucketOriginPullRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketReplicaRuleInput)(nil)).Elem(), CosBucketReplicaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketReplicaRuleArrayInput)(nil)).Elem(), CosBucketReplicaRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketWebsiteInput)(nil)).Elem(), CosBucketWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosBucketWebsitePtrInput)(nil)).Elem(), CosBucketWebsiteArgs{})
	pulumi.RegisterOutputType(BucketsBucketListOutput{})
	pulumi.RegisterOutputType(BucketsBucketListArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListCorsRuleOutput{})
	pulumi.RegisterOutputType(BucketsBucketListCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleExpirationArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleNonCurrentExpirationOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleNonCurrentExpirationArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleNonCurrentTransitionOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleNonCurrentTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(BucketsBucketListLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListOriginDomainRuleOutput{})
	pulumi.RegisterOutputType(BucketsBucketListOriginDomainRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListOriginPullRuleOutput{})
	pulumi.RegisterOutputType(BucketsBucketListOriginPullRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketListWebsiteOutput{})
	pulumi.RegisterOutputType(BucketsBucketListWebsiteArrayOutput{})
	pulumi.RegisterOutputType(CosBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(CosBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleNonCurrentExpirationOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleNonCurrentExpirationPtrOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleNonCurrentTransitionOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleNonCurrentTransitionArrayOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(CosBucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(CosBucketOriginDomainRuleOutput{})
	pulumi.RegisterOutputType(CosBucketOriginDomainRuleArrayOutput{})
	pulumi.RegisterOutputType(CosBucketOriginPullRuleOutput{})
	pulumi.RegisterOutputType(CosBucketOriginPullRuleArrayOutput{})
	pulumi.RegisterOutputType(CosBucketReplicaRuleOutput{})
	pulumi.RegisterOutputType(CosBucketReplicaRuleArrayOutput{})
	pulumi.RegisterOutputType(CosBucketWebsiteOutput{})
	pulumi.RegisterOutputType(CosBucketWebsitePtrOutput{})
}
