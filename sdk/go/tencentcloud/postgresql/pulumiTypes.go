// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceBackupPlan struct {
	BackupPeriods             []string `pulumi:"backupPeriods"`
	BaseBackupRetentionPeriod *int     `pulumi:"baseBackupRetentionPeriod"`
	MaxBackupStartTime        *string  `pulumi:"maxBackupStartTime"`
	MinBackupStartTime        *string  `pulumi:"minBackupStartTime"`
}

// InstanceBackupPlanInput is an input type that accepts InstanceBackupPlanArgs and InstanceBackupPlanOutput values.
// You can construct a concrete instance of `InstanceBackupPlanInput` via:
//
//          InstanceBackupPlanArgs{...}
type InstanceBackupPlanInput interface {
	pulumi.Input

	ToInstanceBackupPlanOutput() InstanceBackupPlanOutput
	ToInstanceBackupPlanOutputWithContext(context.Context) InstanceBackupPlanOutput
}

type InstanceBackupPlanArgs struct {
	BackupPeriods             pulumi.StringArrayInput `pulumi:"backupPeriods"`
	BaseBackupRetentionPeriod pulumi.IntPtrInput      `pulumi:"baseBackupRetentionPeriod"`
	MaxBackupStartTime        pulumi.StringPtrInput   `pulumi:"maxBackupStartTime"`
	MinBackupStartTime        pulumi.StringPtrInput   `pulumi:"minBackupStartTime"`
}

func (InstanceBackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupPlan)(nil)).Elem()
}

func (i InstanceBackupPlanArgs) ToInstanceBackupPlanOutput() InstanceBackupPlanOutput {
	return i.ToInstanceBackupPlanOutputWithContext(context.Background())
}

func (i InstanceBackupPlanArgs) ToInstanceBackupPlanOutputWithContext(ctx context.Context) InstanceBackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupPlanOutput)
}

func (i InstanceBackupPlanArgs) ToInstanceBackupPlanPtrOutput() InstanceBackupPlanPtrOutput {
	return i.ToInstanceBackupPlanPtrOutputWithContext(context.Background())
}

func (i InstanceBackupPlanArgs) ToInstanceBackupPlanPtrOutputWithContext(ctx context.Context) InstanceBackupPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupPlanOutput).ToInstanceBackupPlanPtrOutputWithContext(ctx)
}

// InstanceBackupPlanPtrInput is an input type that accepts InstanceBackupPlanArgs, InstanceBackupPlanPtr and InstanceBackupPlanPtrOutput values.
// You can construct a concrete instance of `InstanceBackupPlanPtrInput` via:
//
//          InstanceBackupPlanArgs{...}
//
//  or:
//
//          nil
type InstanceBackupPlanPtrInput interface {
	pulumi.Input

	ToInstanceBackupPlanPtrOutput() InstanceBackupPlanPtrOutput
	ToInstanceBackupPlanPtrOutputWithContext(context.Context) InstanceBackupPlanPtrOutput
}

type instanceBackupPlanPtrType InstanceBackupPlanArgs

func InstanceBackupPlanPtr(v *InstanceBackupPlanArgs) InstanceBackupPlanPtrInput {
	return (*instanceBackupPlanPtrType)(v)
}

func (*instanceBackupPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupPlan)(nil)).Elem()
}

func (i *instanceBackupPlanPtrType) ToInstanceBackupPlanPtrOutput() InstanceBackupPlanPtrOutput {
	return i.ToInstanceBackupPlanPtrOutputWithContext(context.Background())
}

func (i *instanceBackupPlanPtrType) ToInstanceBackupPlanPtrOutputWithContext(ctx context.Context) InstanceBackupPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupPlanPtrOutput)
}

type InstanceBackupPlanOutput struct{ *pulumi.OutputState }

func (InstanceBackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupPlan)(nil)).Elem()
}

func (o InstanceBackupPlanOutput) ToInstanceBackupPlanOutput() InstanceBackupPlanOutput {
	return o
}

func (o InstanceBackupPlanOutput) ToInstanceBackupPlanOutputWithContext(ctx context.Context) InstanceBackupPlanOutput {
	return o
}

func (o InstanceBackupPlanOutput) ToInstanceBackupPlanPtrOutput() InstanceBackupPlanPtrOutput {
	return o.ToInstanceBackupPlanPtrOutputWithContext(context.Background())
}

func (o InstanceBackupPlanOutput) ToInstanceBackupPlanPtrOutputWithContext(ctx context.Context) InstanceBackupPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackupPlan) *InstanceBackupPlan {
		return &v
	}).(InstanceBackupPlanPtrOutput)
}

func (o InstanceBackupPlanOutput) BackupPeriods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceBackupPlan) []string { return v.BackupPeriods }).(pulumi.StringArrayOutput)
}

func (o InstanceBackupPlanOutput) BaseBackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackupPlan) *int { return v.BaseBackupRetentionPeriod }).(pulumi.IntPtrOutput)
}

func (o InstanceBackupPlanOutput) MaxBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupPlan) *string { return v.MaxBackupStartTime }).(pulumi.StringPtrOutput)
}

func (o InstanceBackupPlanOutput) MinBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupPlan) *string { return v.MinBackupStartTime }).(pulumi.StringPtrOutput)
}

type InstanceBackupPlanPtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupPlan)(nil)).Elem()
}

func (o InstanceBackupPlanPtrOutput) ToInstanceBackupPlanPtrOutput() InstanceBackupPlanPtrOutput {
	return o
}

func (o InstanceBackupPlanPtrOutput) ToInstanceBackupPlanPtrOutputWithContext(ctx context.Context) InstanceBackupPlanPtrOutput {
	return o
}

func (o InstanceBackupPlanPtrOutput) Elem() InstanceBackupPlanOutput {
	return o.ApplyT(func(v *InstanceBackupPlan) InstanceBackupPlan {
		if v != nil {
			return *v
		}
		var ret InstanceBackupPlan
		return ret
	}).(InstanceBackupPlanOutput)
}

func (o InstanceBackupPlanPtrOutput) BackupPeriods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceBackupPlan) []string {
		if v == nil {
			return nil
		}
		return v.BackupPeriods
	}).(pulumi.StringArrayOutput)
}

func (o InstanceBackupPlanPtrOutput) BaseBackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceBackupPlan) *int {
		if v == nil {
			return nil
		}
		return v.BaseBackupRetentionPeriod
	}).(pulumi.IntPtrOutput)
}

func (o InstanceBackupPlanPtrOutput) MaxBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupPlan) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackupStartTime
	}).(pulumi.StringPtrOutput)
}

func (o InstanceBackupPlanPtrOutput) MinBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupPlan) *string {
		if v == nil {
			return nil
		}
		return v.MinBackupStartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceDbNodeSet struct {
	Role *string `pulumi:"role"`
	Zone string  `pulumi:"zone"`
}

// InstanceDbNodeSetInput is an input type that accepts InstanceDbNodeSetArgs and InstanceDbNodeSetOutput values.
// You can construct a concrete instance of `InstanceDbNodeSetInput` via:
//
//          InstanceDbNodeSetArgs{...}
type InstanceDbNodeSetInput interface {
	pulumi.Input

	ToInstanceDbNodeSetOutput() InstanceDbNodeSetOutput
	ToInstanceDbNodeSetOutputWithContext(context.Context) InstanceDbNodeSetOutput
}

type InstanceDbNodeSetArgs struct {
	Role pulumi.StringPtrInput `pulumi:"role"`
	Zone pulumi.StringInput    `pulumi:"zone"`
}

func (InstanceDbNodeSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDbNodeSet)(nil)).Elem()
}

func (i InstanceDbNodeSetArgs) ToInstanceDbNodeSetOutput() InstanceDbNodeSetOutput {
	return i.ToInstanceDbNodeSetOutputWithContext(context.Background())
}

func (i InstanceDbNodeSetArgs) ToInstanceDbNodeSetOutputWithContext(ctx context.Context) InstanceDbNodeSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbNodeSetOutput)
}

// InstanceDbNodeSetArrayInput is an input type that accepts InstanceDbNodeSetArray and InstanceDbNodeSetArrayOutput values.
// You can construct a concrete instance of `InstanceDbNodeSetArrayInput` via:
//
//          InstanceDbNodeSetArray{ InstanceDbNodeSetArgs{...} }
type InstanceDbNodeSetArrayInput interface {
	pulumi.Input

	ToInstanceDbNodeSetArrayOutput() InstanceDbNodeSetArrayOutput
	ToInstanceDbNodeSetArrayOutputWithContext(context.Context) InstanceDbNodeSetArrayOutput
}

type InstanceDbNodeSetArray []InstanceDbNodeSetInput

func (InstanceDbNodeSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDbNodeSet)(nil)).Elem()
}

func (i InstanceDbNodeSetArray) ToInstanceDbNodeSetArrayOutput() InstanceDbNodeSetArrayOutput {
	return i.ToInstanceDbNodeSetArrayOutputWithContext(context.Background())
}

func (i InstanceDbNodeSetArray) ToInstanceDbNodeSetArrayOutputWithContext(ctx context.Context) InstanceDbNodeSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbNodeSetArrayOutput)
}

type InstanceDbNodeSetOutput struct{ *pulumi.OutputState }

func (InstanceDbNodeSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDbNodeSet)(nil)).Elem()
}

func (o InstanceDbNodeSetOutput) ToInstanceDbNodeSetOutput() InstanceDbNodeSetOutput {
	return o
}

func (o InstanceDbNodeSetOutput) ToInstanceDbNodeSetOutputWithContext(ctx context.Context) InstanceDbNodeSetOutput {
	return o
}

func (o InstanceDbNodeSetOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDbNodeSet) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o InstanceDbNodeSetOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDbNodeSet) string { return v.Zone }).(pulumi.StringOutput)
}

type InstanceDbNodeSetArrayOutput struct{ *pulumi.OutputState }

func (InstanceDbNodeSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDbNodeSet)(nil)).Elem()
}

func (o InstanceDbNodeSetArrayOutput) ToInstanceDbNodeSetArrayOutput() InstanceDbNodeSetArrayOutput {
	return o
}

func (o InstanceDbNodeSetArrayOutput) ToInstanceDbNodeSetArrayOutputWithContext(ctx context.Context) InstanceDbNodeSetArrayOutput {
	return o
}

func (o InstanceDbNodeSetArrayOutput) Index(i pulumi.IntInput) InstanceDbNodeSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDbNodeSet {
		return vs[0].([]InstanceDbNodeSet)[vs[1].(int)]
	}).(InstanceDbNodeSetOutput)
}

type InstancesInstanceList struct {
	AutoRenewFlag      int                    `pulumi:"autoRenewFlag"`
	AvailabilityZone   string                 `pulumi:"availabilityZone"`
	ChargeType         string                 `pulumi:"chargeType"`
	Charset            string                 `pulumi:"charset"`
	CreateTime         string                 `pulumi:"createTime"`
	EngineVersion      string                 `pulumi:"engineVersion"`
	Id                 string                 `pulumi:"id"`
	Memory             int                    `pulumi:"memory"`
	Name               string                 `pulumi:"name"`
	PrivateAccessIp    string                 `pulumi:"privateAccessIp"`
	PrivateAccessPort  int                    `pulumi:"privateAccessPort"`
	ProjectId          int                    `pulumi:"projectId"`
	PublicAccessHost   string                 `pulumi:"publicAccessHost"`
	PublicAccessPort   int                    `pulumi:"publicAccessPort"`
	PublicAccessSwitch bool                   `pulumi:"publicAccessSwitch"`
	RootUser           string                 `pulumi:"rootUser"`
	Storage            int                    `pulumi:"storage"`
	SubnetId           string                 `pulumi:"subnetId"`
	Tags               map[string]interface{} `pulumi:"tags"`
	VpcId              string                 `pulumi:"vpcId"`
}

// InstancesInstanceListInput is an input type that accepts InstancesInstanceListArgs and InstancesInstanceListOutput values.
// You can construct a concrete instance of `InstancesInstanceListInput` via:
//
//          InstancesInstanceListArgs{...}
type InstancesInstanceListInput interface {
	pulumi.Input

	ToInstancesInstanceListOutput() InstancesInstanceListOutput
	ToInstancesInstanceListOutputWithContext(context.Context) InstancesInstanceListOutput
}

type InstancesInstanceListArgs struct {
	AutoRenewFlag      pulumi.IntInput    `pulumi:"autoRenewFlag"`
	AvailabilityZone   pulumi.StringInput `pulumi:"availabilityZone"`
	ChargeType         pulumi.StringInput `pulumi:"chargeType"`
	Charset            pulumi.StringInput `pulumi:"charset"`
	CreateTime         pulumi.StringInput `pulumi:"createTime"`
	EngineVersion      pulumi.StringInput `pulumi:"engineVersion"`
	Id                 pulumi.StringInput `pulumi:"id"`
	Memory             pulumi.IntInput    `pulumi:"memory"`
	Name               pulumi.StringInput `pulumi:"name"`
	PrivateAccessIp    pulumi.StringInput `pulumi:"privateAccessIp"`
	PrivateAccessPort  pulumi.IntInput    `pulumi:"privateAccessPort"`
	ProjectId          pulumi.IntInput    `pulumi:"projectId"`
	PublicAccessHost   pulumi.StringInput `pulumi:"publicAccessHost"`
	PublicAccessPort   pulumi.IntInput    `pulumi:"publicAccessPort"`
	PublicAccessSwitch pulumi.BoolInput   `pulumi:"publicAccessSwitch"`
	RootUser           pulumi.StringInput `pulumi:"rootUser"`
	Storage            pulumi.IntInput    `pulumi:"storage"`
	SubnetId           pulumi.StringInput `pulumi:"subnetId"`
	Tags               pulumi.MapInput    `pulumi:"tags"`
	VpcId              pulumi.StringInput `pulumi:"vpcId"`
}

func (InstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return i.ToInstancesInstanceListOutputWithContext(context.Background())
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListOutput)
}

// InstancesInstanceListArrayInput is an input type that accepts InstancesInstanceListArray and InstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListArrayInput` via:
//
//          InstancesInstanceListArray{ InstancesInstanceListArgs{...} }
type InstancesInstanceListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput
	ToInstancesInstanceListArrayOutputWithContext(context.Context) InstancesInstanceListArrayOutput
}

type InstancesInstanceListArray []InstancesInstanceListInput

func (InstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return i.ToInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListArrayOutput)
}

type InstancesInstanceListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Charset }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Id }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) PrivateAccessIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.PrivateAccessIp }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) PrivateAccessPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.PrivateAccessPort }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) PublicAccessHost() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.PublicAccessHost }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) PublicAccessPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.PublicAccessPort }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) PublicAccessSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceList) bool { return v.PublicAccessSwitch }).(pulumi.BoolOutput)
}

func (o InstancesInstanceListOutput) RootUser() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.RootUser }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Storage }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v InstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o InstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type InstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceList {
		return vs[0].([]InstancesInstanceList)[vs[1].(int)]
	}).(InstancesInstanceListOutput)
}

type SpecinfosList struct {
	Cpu               int    `pulumi:"cpu"`
	EngineVersion     string `pulumi:"engineVersion"`
	EngineVersionName string `pulumi:"engineVersionName"`
	Id                string `pulumi:"id"`
	Memory            int    `pulumi:"memory"`
	Qps               int    `pulumi:"qps"`
	StorageMax        int    `pulumi:"storageMax"`
	StorageMin        int    `pulumi:"storageMin"`
}

// SpecinfosListInput is an input type that accepts SpecinfosListArgs and SpecinfosListOutput values.
// You can construct a concrete instance of `SpecinfosListInput` via:
//
//          SpecinfosListArgs{...}
type SpecinfosListInput interface {
	pulumi.Input

	ToSpecinfosListOutput() SpecinfosListOutput
	ToSpecinfosListOutputWithContext(context.Context) SpecinfosListOutput
}

type SpecinfosListArgs struct {
	Cpu               pulumi.IntInput    `pulumi:"cpu"`
	EngineVersion     pulumi.StringInput `pulumi:"engineVersion"`
	EngineVersionName pulumi.StringInput `pulumi:"engineVersionName"`
	Id                pulumi.StringInput `pulumi:"id"`
	Memory            pulumi.IntInput    `pulumi:"memory"`
	Qps               pulumi.IntInput    `pulumi:"qps"`
	StorageMax        pulumi.IntInput    `pulumi:"storageMax"`
	StorageMin        pulumi.IntInput    `pulumi:"storageMin"`
}

func (SpecinfosListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpecinfosList)(nil)).Elem()
}

func (i SpecinfosListArgs) ToSpecinfosListOutput() SpecinfosListOutput {
	return i.ToSpecinfosListOutputWithContext(context.Background())
}

func (i SpecinfosListArgs) ToSpecinfosListOutputWithContext(ctx context.Context) SpecinfosListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpecinfosListOutput)
}

// SpecinfosListArrayInput is an input type that accepts SpecinfosListArray and SpecinfosListArrayOutput values.
// You can construct a concrete instance of `SpecinfosListArrayInput` via:
//
//          SpecinfosListArray{ SpecinfosListArgs{...} }
type SpecinfosListArrayInput interface {
	pulumi.Input

	ToSpecinfosListArrayOutput() SpecinfosListArrayOutput
	ToSpecinfosListArrayOutputWithContext(context.Context) SpecinfosListArrayOutput
}

type SpecinfosListArray []SpecinfosListInput

func (SpecinfosListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpecinfosList)(nil)).Elem()
}

func (i SpecinfosListArray) ToSpecinfosListArrayOutput() SpecinfosListArrayOutput {
	return i.ToSpecinfosListArrayOutputWithContext(context.Background())
}

func (i SpecinfosListArray) ToSpecinfosListArrayOutputWithContext(ctx context.Context) SpecinfosListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpecinfosListArrayOutput)
}

type SpecinfosListOutput struct{ *pulumi.OutputState }

func (SpecinfosListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpecinfosList)(nil)).Elem()
}

func (o SpecinfosListOutput) ToSpecinfosListOutput() SpecinfosListOutput {
	return o
}

func (o SpecinfosListOutput) ToSpecinfosListOutputWithContext(ctx context.Context) SpecinfosListOutput {
	return o
}

func (o SpecinfosListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v SpecinfosList) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o SpecinfosListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SpecinfosList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o SpecinfosListOutput) EngineVersionName() pulumi.StringOutput {
	return o.ApplyT(func(v SpecinfosList) string { return v.EngineVersionName }).(pulumi.StringOutput)
}

func (o SpecinfosListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SpecinfosList) string { return v.Id }).(pulumi.StringOutput)
}

func (o SpecinfosListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v SpecinfosList) int { return v.Memory }).(pulumi.IntOutput)
}

func (o SpecinfosListOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v SpecinfosList) int { return v.Qps }).(pulumi.IntOutput)
}

func (o SpecinfosListOutput) StorageMax() pulumi.IntOutput {
	return o.ApplyT(func(v SpecinfosList) int { return v.StorageMax }).(pulumi.IntOutput)
}

func (o SpecinfosListOutput) StorageMin() pulumi.IntOutput {
	return o.ApplyT(func(v SpecinfosList) int { return v.StorageMin }).(pulumi.IntOutput)
}

type SpecinfosListArrayOutput struct{ *pulumi.OutputState }

func (SpecinfosListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpecinfosList)(nil)).Elem()
}

func (o SpecinfosListArrayOutput) ToSpecinfosListArrayOutput() SpecinfosListArrayOutput {
	return o
}

func (o SpecinfosListArrayOutput) ToSpecinfosListArrayOutputWithContext(ctx context.Context) SpecinfosListArrayOutput {
	return o
}

func (o SpecinfosListArrayOutput) Index(i pulumi.IntInput) SpecinfosListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpecinfosList {
		return vs[0].([]SpecinfosList)[vs[1].(int)]
	}).(SpecinfosListOutput)
}

type XlogsList struct {
	EndTime      string `pulumi:"endTime"`
	ExternalAddr string `pulumi:"externalAddr"`
	Id           int    `pulumi:"id"`
	InternalAddr string `pulumi:"internalAddr"`
	Size         int    `pulumi:"size"`
	StartTime    string `pulumi:"startTime"`
}

// XlogsListInput is an input type that accepts XlogsListArgs and XlogsListOutput values.
// You can construct a concrete instance of `XlogsListInput` via:
//
//          XlogsListArgs{...}
type XlogsListInput interface {
	pulumi.Input

	ToXlogsListOutput() XlogsListOutput
	ToXlogsListOutputWithContext(context.Context) XlogsListOutput
}

type XlogsListArgs struct {
	EndTime      pulumi.StringInput `pulumi:"endTime"`
	ExternalAddr pulumi.StringInput `pulumi:"externalAddr"`
	Id           pulumi.IntInput    `pulumi:"id"`
	InternalAddr pulumi.StringInput `pulumi:"internalAddr"`
	Size         pulumi.IntInput    `pulumi:"size"`
	StartTime    pulumi.StringInput `pulumi:"startTime"`
}

func (XlogsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XlogsList)(nil)).Elem()
}

func (i XlogsListArgs) ToXlogsListOutput() XlogsListOutput {
	return i.ToXlogsListOutputWithContext(context.Background())
}

func (i XlogsListArgs) ToXlogsListOutputWithContext(ctx context.Context) XlogsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XlogsListOutput)
}

// XlogsListArrayInput is an input type that accepts XlogsListArray and XlogsListArrayOutput values.
// You can construct a concrete instance of `XlogsListArrayInput` via:
//
//          XlogsListArray{ XlogsListArgs{...} }
type XlogsListArrayInput interface {
	pulumi.Input

	ToXlogsListArrayOutput() XlogsListArrayOutput
	ToXlogsListArrayOutputWithContext(context.Context) XlogsListArrayOutput
}

type XlogsListArray []XlogsListInput

func (XlogsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XlogsList)(nil)).Elem()
}

func (i XlogsListArray) ToXlogsListArrayOutput() XlogsListArrayOutput {
	return i.ToXlogsListArrayOutputWithContext(context.Background())
}

func (i XlogsListArray) ToXlogsListArrayOutputWithContext(ctx context.Context) XlogsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XlogsListArrayOutput)
}

type XlogsListOutput struct{ *pulumi.OutputState }

func (XlogsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XlogsList)(nil)).Elem()
}

func (o XlogsListOutput) ToXlogsListOutput() XlogsListOutput {
	return o
}

func (o XlogsListOutput) ToXlogsListOutputWithContext(ctx context.Context) XlogsListOutput {
	return o
}

func (o XlogsListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v XlogsList) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o XlogsListOutput) ExternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v XlogsList) string { return v.ExternalAddr }).(pulumi.StringOutput)
}

func (o XlogsListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v XlogsList) int { return v.Id }).(pulumi.IntOutput)
}

func (o XlogsListOutput) InternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v XlogsList) string { return v.InternalAddr }).(pulumi.StringOutput)
}

func (o XlogsListOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v XlogsList) int { return v.Size }).(pulumi.IntOutput)
}

func (o XlogsListOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v XlogsList) string { return v.StartTime }).(pulumi.StringOutput)
}

type XlogsListArrayOutput struct{ *pulumi.OutputState }

func (XlogsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XlogsList)(nil)).Elem()
}

func (o XlogsListArrayOutput) ToXlogsListArrayOutput() XlogsListArrayOutput {
	return o
}

func (o XlogsListArrayOutput) ToXlogsListArrayOutputWithContext(ctx context.Context) XlogsListArrayOutput {
	return o
}

func (o XlogsListArrayOutput) Index(i pulumi.IntInput) XlogsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XlogsList {
		return vs[0].([]XlogsList)[vs[1].(int)]
	}).(XlogsListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupPlanInput)(nil)).Elem(), InstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupPlanPtrInput)(nil)).Elem(), InstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbNodeSetInput)(nil)).Elem(), InstanceDbNodeSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbNodeSetArrayInput)(nil)).Elem(), InstanceDbNodeSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListInput)(nil)).Elem(), InstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListArrayInput)(nil)).Elem(), InstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpecinfosListInput)(nil)).Elem(), SpecinfosListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpecinfosListArrayInput)(nil)).Elem(), SpecinfosListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XlogsListInput)(nil)).Elem(), XlogsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XlogsListArrayInput)(nil)).Elem(), XlogsListArray{})
	pulumi.RegisterOutputType(InstanceBackupPlanOutput{})
	pulumi.RegisterOutputType(InstanceBackupPlanPtrOutput{})
	pulumi.RegisterOutputType(InstanceDbNodeSetOutput{})
	pulumi.RegisterOutputType(InstanceDbNodeSetArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(SpecinfosListOutput{})
	pulumi.RegisterOutputType(SpecinfosListArrayOutput{})
	pulumi.RegisterOutputType(XlogsListOutput{})
	pulumi.RegisterOutputType(XlogsListArrayOutput{})
}
