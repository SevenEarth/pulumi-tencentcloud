// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func TCRTokens(ctx *pulumi.Context, args *TCRTokensArgs, opts ...pulumi.InvokeOption) (*TCRTokensResult, error) {
	var rv TCRTokensResult
	err := ctx.Invoke("tencentcloud:Cloud/tCRTokens:TCRTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TCRTokens.
type TCRTokensArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	TokenId          *string `pulumi:"tokenId"`
}

// A collection of values returned by TCRTokens.
type TCRTokensResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string               `pulumi:"id"`
	InstanceId       string               `pulumi:"instanceId"`
	ResultOutputFile *string              `pulumi:"resultOutputFile"`
	TokenId          *string              `pulumi:"tokenId"`
	TokenLists       []TCRTokensTokenList `pulumi:"tokenLists"`
}

func TCRTokensOutput(ctx *pulumi.Context, args TCRTokensOutputArgs, opts ...pulumi.InvokeOption) TCRTokensResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TCRTokensResult, error) {
			args := v.(TCRTokensArgs)
			r, err := TCRTokens(ctx, &args, opts...)
			var s TCRTokensResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TCRTokensResultOutput)
}

// A collection of arguments for invoking TCRTokens.
type TCRTokensOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	TokenId          pulumi.StringPtrInput `pulumi:"tokenId"`
}

func (TCRTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCRTokensArgs)(nil)).Elem()
}

// A collection of values returned by TCRTokens.
type TCRTokensResultOutput struct{ *pulumi.OutputState }

func (TCRTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCRTokensResult)(nil)).Elem()
}

func (o TCRTokensResultOutput) ToTCRTokensResultOutput() TCRTokensResultOutput {
	return o
}

func (o TCRTokensResultOutput) ToTCRTokensResultOutputWithContext(ctx context.Context) TCRTokensResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TCRTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TCRTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TCRTokensResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TCRTokensResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o TCRTokensResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCRTokensResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o TCRTokensResultOutput) TokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCRTokensResult) *string { return v.TokenId }).(pulumi.StringPtrOutput)
}

func (o TCRTokensResultOutput) TokenLists() TCRTokensTokenListArrayOutput {
	return o.ApplyT(func(v TCRTokensResult) []TCRTokensTokenList { return v.TokenLists }).(TCRTokensTokenListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(TCRTokensResultOutput{})
}
