// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func TCRNamespaces(ctx *pulumi.Context, args *TCRNamespacesArgs, opts ...pulumi.InvokeOption) (*TCRNamespacesResult, error) {
	var rv TCRNamespacesResult
	err := ctx.Invoke("tencentcloud:Cloud/tCRNamespaces:TCRNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TCRNamespaces.
type TCRNamespacesArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	NamespaceName    *string `pulumi:"namespaceName"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by TCRNamespaces.
type TCRNamespacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                       `pulumi:"id"`
	InstanceId       string                       `pulumi:"instanceId"`
	NamespaceLists   []TCRNamespacesNamespaceList `pulumi:"namespaceLists"`
	NamespaceName    *string                      `pulumi:"namespaceName"`
	ResultOutputFile *string                      `pulumi:"resultOutputFile"`
}

func TCRNamespacesOutput(ctx *pulumi.Context, args TCRNamespacesOutputArgs, opts ...pulumi.InvokeOption) TCRNamespacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TCRNamespacesResult, error) {
			args := v.(TCRNamespacesArgs)
			r, err := TCRNamespaces(ctx, &args, opts...)
			var s TCRNamespacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TCRNamespacesResultOutput)
}

// A collection of arguments for invoking TCRNamespaces.
type TCRNamespacesOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	NamespaceName    pulumi.StringPtrInput `pulumi:"namespaceName"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (TCRNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCRNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by TCRNamespaces.
type TCRNamespacesResultOutput struct{ *pulumi.OutputState }

func (TCRNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCRNamespacesResult)(nil)).Elem()
}

func (o TCRNamespacesResultOutput) ToTCRNamespacesResultOutput() TCRNamespacesResultOutput {
	return o
}

func (o TCRNamespacesResultOutput) ToTCRNamespacesResultOutputWithContext(ctx context.Context) TCRNamespacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TCRNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TCRNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TCRNamespacesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TCRNamespacesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o TCRNamespacesResultOutput) NamespaceLists() TCRNamespacesNamespaceListArrayOutput {
	return o.ApplyT(func(v TCRNamespacesResult) []TCRNamespacesNamespaceList { return v.NamespaceLists }).(TCRNamespacesNamespaceListArrayOutput)
}

func (o TCRNamespacesResultOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCRNamespacesResult) *string { return v.NamespaceName }).(pulumi.StringPtrOutput)
}

func (o TCRNamespacesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCRNamespacesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TCRNamespacesResultOutput{})
}
