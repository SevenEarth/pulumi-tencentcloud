// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func APIGatewayUsagePlans(ctx *pulumi.Context, args *APIGatewayUsagePlansArgs, opts ...pulumi.InvokeOption) (*APIGatewayUsagePlansResult, error) {
	var rv APIGatewayUsagePlansResult
	err := ctx.Invoke("tencentcloud:Cloud/aPIGatewayUsagePlans:APIGatewayUsagePlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking APIGatewayUsagePlans.
type APIGatewayUsagePlansArgs struct {
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	UsagePlanId      *string `pulumi:"usagePlanId"`
	UsagePlanName    *string `pulumi:"usagePlanName"`
}

// A collection of values returned by APIGatewayUsagePlans.
type APIGatewayUsagePlansResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                     `pulumi:"id"`
	Lists            []APIGatewayUsagePlansList `pulumi:"lists"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	UsagePlanId      *string                    `pulumi:"usagePlanId"`
	UsagePlanName    *string                    `pulumi:"usagePlanName"`
}

func APIGatewayUsagePlansOutput(ctx *pulumi.Context, args APIGatewayUsagePlansOutputArgs, opts ...pulumi.InvokeOption) APIGatewayUsagePlansResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (APIGatewayUsagePlansResult, error) {
			args := v.(APIGatewayUsagePlansArgs)
			r, err := APIGatewayUsagePlans(ctx, &args, opts...)
			var s APIGatewayUsagePlansResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(APIGatewayUsagePlansResultOutput)
}

// A collection of arguments for invoking APIGatewayUsagePlans.
type APIGatewayUsagePlansOutputArgs struct {
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	UsagePlanId      pulumi.StringPtrInput `pulumi:"usagePlanId"`
	UsagePlanName    pulumi.StringPtrInput `pulumi:"usagePlanName"`
}

func (APIGatewayUsagePlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIGatewayUsagePlansArgs)(nil)).Elem()
}

// A collection of values returned by APIGatewayUsagePlans.
type APIGatewayUsagePlansResultOutput struct{ *pulumi.OutputState }

func (APIGatewayUsagePlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIGatewayUsagePlansResult)(nil)).Elem()
}

func (o APIGatewayUsagePlansResultOutput) ToAPIGatewayUsagePlansResultOutput() APIGatewayUsagePlansResultOutput {
	return o
}

func (o APIGatewayUsagePlansResultOutput) ToAPIGatewayUsagePlansResultOutputWithContext(ctx context.Context) APIGatewayUsagePlansResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o APIGatewayUsagePlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v APIGatewayUsagePlansResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o APIGatewayUsagePlansResultOutput) Lists() APIGatewayUsagePlansListArrayOutput {
	return o.ApplyT(func(v APIGatewayUsagePlansResult) []APIGatewayUsagePlansList { return v.Lists }).(APIGatewayUsagePlansListArrayOutput)
}

func (o APIGatewayUsagePlansResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIGatewayUsagePlansResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o APIGatewayUsagePlansResultOutput) UsagePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIGatewayUsagePlansResult) *string { return v.UsagePlanId }).(pulumi.StringPtrOutput)
}

func (o APIGatewayUsagePlansResultOutput) UsagePlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIGatewayUsagePlansResult) *string { return v.UsagePlanName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(APIGatewayUsagePlansResultOutput{})
}
