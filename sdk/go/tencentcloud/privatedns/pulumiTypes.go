// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZoneAccountVpcSet struct {
	Region    string `pulumi:"region"`
	Uin       string `pulumi:"uin"`
	UniqVpcId string `pulumi:"uniqVpcId"`
	VpcName   string `pulumi:"vpcName"`
}

// ZoneAccountVpcSetInput is an input type that accepts ZoneAccountVpcSetArgs and ZoneAccountVpcSetOutput values.
// You can construct a concrete instance of `ZoneAccountVpcSetInput` via:
//
//          ZoneAccountVpcSetArgs{...}
type ZoneAccountVpcSetInput interface {
	pulumi.Input

	ToZoneAccountVpcSetOutput() ZoneAccountVpcSetOutput
	ToZoneAccountVpcSetOutputWithContext(context.Context) ZoneAccountVpcSetOutput
}

type ZoneAccountVpcSetArgs struct {
	Region    pulumi.StringInput `pulumi:"region"`
	Uin       pulumi.StringInput `pulumi:"uin"`
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	VpcName   pulumi.StringInput `pulumi:"vpcName"`
}

func (ZoneAccountVpcSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAccountVpcSet)(nil)).Elem()
}

func (i ZoneAccountVpcSetArgs) ToZoneAccountVpcSetOutput() ZoneAccountVpcSetOutput {
	return i.ToZoneAccountVpcSetOutputWithContext(context.Background())
}

func (i ZoneAccountVpcSetArgs) ToZoneAccountVpcSetOutputWithContext(ctx context.Context) ZoneAccountVpcSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAccountVpcSetOutput)
}

// ZoneAccountVpcSetArrayInput is an input type that accepts ZoneAccountVpcSetArray and ZoneAccountVpcSetArrayOutput values.
// You can construct a concrete instance of `ZoneAccountVpcSetArrayInput` via:
//
//          ZoneAccountVpcSetArray{ ZoneAccountVpcSetArgs{...} }
type ZoneAccountVpcSetArrayInput interface {
	pulumi.Input

	ToZoneAccountVpcSetArrayOutput() ZoneAccountVpcSetArrayOutput
	ToZoneAccountVpcSetArrayOutputWithContext(context.Context) ZoneAccountVpcSetArrayOutput
}

type ZoneAccountVpcSetArray []ZoneAccountVpcSetInput

func (ZoneAccountVpcSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneAccountVpcSet)(nil)).Elem()
}

func (i ZoneAccountVpcSetArray) ToZoneAccountVpcSetArrayOutput() ZoneAccountVpcSetArrayOutput {
	return i.ToZoneAccountVpcSetArrayOutputWithContext(context.Background())
}

func (i ZoneAccountVpcSetArray) ToZoneAccountVpcSetArrayOutputWithContext(ctx context.Context) ZoneAccountVpcSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAccountVpcSetArrayOutput)
}

type ZoneAccountVpcSetOutput struct{ *pulumi.OutputState }

func (ZoneAccountVpcSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAccountVpcSet)(nil)).Elem()
}

func (o ZoneAccountVpcSetOutput) ToZoneAccountVpcSetOutput() ZoneAccountVpcSetOutput {
	return o
}

func (o ZoneAccountVpcSetOutput) ToZoneAccountVpcSetOutputWithContext(ctx context.Context) ZoneAccountVpcSetOutput {
	return o
}

func (o ZoneAccountVpcSetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneAccountVpcSet) string { return v.Region }).(pulumi.StringOutput)
}

func (o ZoneAccountVpcSetOutput) Uin() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneAccountVpcSet) string { return v.Uin }).(pulumi.StringOutput)
}

func (o ZoneAccountVpcSetOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneAccountVpcSet) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

func (o ZoneAccountVpcSetOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneAccountVpcSet) string { return v.VpcName }).(pulumi.StringOutput)
}

type ZoneAccountVpcSetArrayOutput struct{ *pulumi.OutputState }

func (ZoneAccountVpcSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneAccountVpcSet)(nil)).Elem()
}

func (o ZoneAccountVpcSetArrayOutput) ToZoneAccountVpcSetArrayOutput() ZoneAccountVpcSetArrayOutput {
	return o
}

func (o ZoneAccountVpcSetArrayOutput) ToZoneAccountVpcSetArrayOutputWithContext(ctx context.Context) ZoneAccountVpcSetArrayOutput {
	return o
}

func (o ZoneAccountVpcSetArrayOutput) Index(i pulumi.IntInput) ZoneAccountVpcSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneAccountVpcSet {
		return vs[0].([]ZoneAccountVpcSet)[vs[1].(int)]
	}).(ZoneAccountVpcSetOutput)
}

type ZoneTagSet struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// ZoneTagSetInput is an input type that accepts ZoneTagSetArgs and ZoneTagSetOutput values.
// You can construct a concrete instance of `ZoneTagSetInput` via:
//
//          ZoneTagSetArgs{...}
type ZoneTagSetInput interface {
	pulumi.Input

	ToZoneTagSetOutput() ZoneTagSetOutput
	ToZoneTagSetOutputWithContext(context.Context) ZoneTagSetOutput
}

type ZoneTagSetArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (ZoneTagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTagSet)(nil)).Elem()
}

func (i ZoneTagSetArgs) ToZoneTagSetOutput() ZoneTagSetOutput {
	return i.ToZoneTagSetOutputWithContext(context.Background())
}

func (i ZoneTagSetArgs) ToZoneTagSetOutputWithContext(ctx context.Context) ZoneTagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTagSetOutput)
}

// ZoneTagSetArrayInput is an input type that accepts ZoneTagSetArray and ZoneTagSetArrayOutput values.
// You can construct a concrete instance of `ZoneTagSetArrayInput` via:
//
//          ZoneTagSetArray{ ZoneTagSetArgs{...} }
type ZoneTagSetArrayInput interface {
	pulumi.Input

	ToZoneTagSetArrayOutput() ZoneTagSetArrayOutput
	ToZoneTagSetArrayOutputWithContext(context.Context) ZoneTagSetArrayOutput
}

type ZoneTagSetArray []ZoneTagSetInput

func (ZoneTagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTagSet)(nil)).Elem()
}

func (i ZoneTagSetArray) ToZoneTagSetArrayOutput() ZoneTagSetArrayOutput {
	return i.ToZoneTagSetArrayOutputWithContext(context.Background())
}

func (i ZoneTagSetArray) ToZoneTagSetArrayOutputWithContext(ctx context.Context) ZoneTagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTagSetArrayOutput)
}

type ZoneTagSetOutput struct{ *pulumi.OutputState }

func (ZoneTagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTagSet)(nil)).Elem()
}

func (o ZoneTagSetOutput) ToZoneTagSetOutput() ZoneTagSetOutput {
	return o
}

func (o ZoneTagSetOutput) ToZoneTagSetOutputWithContext(ctx context.Context) ZoneTagSetOutput {
	return o
}

func (o ZoneTagSetOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneTagSet) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o ZoneTagSetOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneTagSet) string { return v.TagValue }).(pulumi.StringOutput)
}

type ZoneTagSetArrayOutput struct{ *pulumi.OutputState }

func (ZoneTagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTagSet)(nil)).Elem()
}

func (o ZoneTagSetArrayOutput) ToZoneTagSetArrayOutput() ZoneTagSetArrayOutput {
	return o
}

func (o ZoneTagSetArrayOutput) ToZoneTagSetArrayOutputWithContext(ctx context.Context) ZoneTagSetArrayOutput {
	return o
}

func (o ZoneTagSetArrayOutput) Index(i pulumi.IntInput) ZoneTagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneTagSet {
		return vs[0].([]ZoneTagSet)[vs[1].(int)]
	}).(ZoneTagSetOutput)
}

type ZoneVpcSet struct {
	Region    string `pulumi:"region"`
	UniqVpcId string `pulumi:"uniqVpcId"`
}

// ZoneVpcSetInput is an input type that accepts ZoneVpcSetArgs and ZoneVpcSetOutput values.
// You can construct a concrete instance of `ZoneVpcSetInput` via:
//
//          ZoneVpcSetArgs{...}
type ZoneVpcSetInput interface {
	pulumi.Input

	ToZoneVpcSetOutput() ZoneVpcSetOutput
	ToZoneVpcSetOutputWithContext(context.Context) ZoneVpcSetOutput
}

type ZoneVpcSetArgs struct {
	Region    pulumi.StringInput `pulumi:"region"`
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
}

func (ZoneVpcSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVpcSet)(nil)).Elem()
}

func (i ZoneVpcSetArgs) ToZoneVpcSetOutput() ZoneVpcSetOutput {
	return i.ToZoneVpcSetOutputWithContext(context.Background())
}

func (i ZoneVpcSetArgs) ToZoneVpcSetOutputWithContext(ctx context.Context) ZoneVpcSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVpcSetOutput)
}

// ZoneVpcSetArrayInput is an input type that accepts ZoneVpcSetArray and ZoneVpcSetArrayOutput values.
// You can construct a concrete instance of `ZoneVpcSetArrayInput` via:
//
//          ZoneVpcSetArray{ ZoneVpcSetArgs{...} }
type ZoneVpcSetArrayInput interface {
	pulumi.Input

	ToZoneVpcSetArrayOutput() ZoneVpcSetArrayOutput
	ToZoneVpcSetArrayOutputWithContext(context.Context) ZoneVpcSetArrayOutput
}

type ZoneVpcSetArray []ZoneVpcSetInput

func (ZoneVpcSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneVpcSet)(nil)).Elem()
}

func (i ZoneVpcSetArray) ToZoneVpcSetArrayOutput() ZoneVpcSetArrayOutput {
	return i.ToZoneVpcSetArrayOutputWithContext(context.Background())
}

func (i ZoneVpcSetArray) ToZoneVpcSetArrayOutputWithContext(ctx context.Context) ZoneVpcSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVpcSetArrayOutput)
}

type ZoneVpcSetOutput struct{ *pulumi.OutputState }

func (ZoneVpcSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVpcSet)(nil)).Elem()
}

func (o ZoneVpcSetOutput) ToZoneVpcSetOutput() ZoneVpcSetOutput {
	return o
}

func (o ZoneVpcSetOutput) ToZoneVpcSetOutputWithContext(ctx context.Context) ZoneVpcSetOutput {
	return o
}

func (o ZoneVpcSetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneVpcSet) string { return v.Region }).(pulumi.StringOutput)
}

func (o ZoneVpcSetOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneVpcSet) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

type ZoneVpcSetArrayOutput struct{ *pulumi.OutputState }

func (ZoneVpcSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneVpcSet)(nil)).Elem()
}

func (o ZoneVpcSetArrayOutput) ToZoneVpcSetArrayOutput() ZoneVpcSetArrayOutput {
	return o
}

func (o ZoneVpcSetArrayOutput) ToZoneVpcSetArrayOutputWithContext(ctx context.Context) ZoneVpcSetArrayOutput {
	return o
}

func (o ZoneVpcSetArrayOutput) Index(i pulumi.IntInput) ZoneVpcSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneVpcSet {
		return vs[0].([]ZoneVpcSet)[vs[1].(int)]
	}).(ZoneVpcSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneAccountVpcSetInput)(nil)).Elem(), ZoneAccountVpcSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneAccountVpcSetArrayInput)(nil)).Elem(), ZoneAccountVpcSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTagSetInput)(nil)).Elem(), ZoneTagSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTagSetArrayInput)(nil)).Elem(), ZoneTagSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVpcSetInput)(nil)).Elem(), ZoneVpcSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVpcSetArrayInput)(nil)).Elem(), ZoneVpcSetArray{})
	pulumi.RegisterOutputType(ZoneAccountVpcSetOutput{})
	pulumi.RegisterOutputType(ZoneAccountVpcSetArrayOutput{})
	pulumi.RegisterOutputType(ZoneTagSetOutput{})
	pulumi.RegisterOutputType(ZoneTagSetArrayOutput{})
	pulumi.RegisterOutputType(ZoneVpcSetOutput{})
	pulumi.RegisterOutputType(ZoneVpcSetArrayOutput{})
}
