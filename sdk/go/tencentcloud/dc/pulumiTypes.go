// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GatewayCCNRoutesInstanceList struct {
	AsPaths   []string `pulumi:"asPaths"`
	CidrBlock string   `pulumi:"cidrBlock"`
	DcgId     string   `pulumi:"dcgId"`
	RouteId   string   `pulumi:"routeId"`
}

// GatewayCCNRoutesInstanceListInput is an input type that accepts GatewayCCNRoutesInstanceListArgs and GatewayCCNRoutesInstanceListOutput values.
// You can construct a concrete instance of `GatewayCCNRoutesInstanceListInput` via:
//
//          GatewayCCNRoutesInstanceListArgs{...}
type GatewayCCNRoutesInstanceListInput interface {
	pulumi.Input

	ToGatewayCCNRoutesInstanceListOutput() GatewayCCNRoutesInstanceListOutput
	ToGatewayCCNRoutesInstanceListOutputWithContext(context.Context) GatewayCCNRoutesInstanceListOutput
}

type GatewayCCNRoutesInstanceListArgs struct {
	AsPaths   pulumi.StringArrayInput `pulumi:"asPaths"`
	CidrBlock pulumi.StringInput      `pulumi:"cidrBlock"`
	DcgId     pulumi.StringInput      `pulumi:"dcgId"`
	RouteId   pulumi.StringInput      `pulumi:"routeId"`
}

func (GatewayCCNRoutesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCCNRoutesInstanceList)(nil)).Elem()
}

func (i GatewayCCNRoutesInstanceListArgs) ToGatewayCCNRoutesInstanceListOutput() GatewayCCNRoutesInstanceListOutput {
	return i.ToGatewayCCNRoutesInstanceListOutputWithContext(context.Background())
}

func (i GatewayCCNRoutesInstanceListArgs) ToGatewayCCNRoutesInstanceListOutputWithContext(ctx context.Context) GatewayCCNRoutesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCCNRoutesInstanceListOutput)
}

// GatewayCCNRoutesInstanceListArrayInput is an input type that accepts GatewayCCNRoutesInstanceListArray and GatewayCCNRoutesInstanceListArrayOutput values.
// You can construct a concrete instance of `GatewayCCNRoutesInstanceListArrayInput` via:
//
//          GatewayCCNRoutesInstanceListArray{ GatewayCCNRoutesInstanceListArgs{...} }
type GatewayCCNRoutesInstanceListArrayInput interface {
	pulumi.Input

	ToGatewayCCNRoutesInstanceListArrayOutput() GatewayCCNRoutesInstanceListArrayOutput
	ToGatewayCCNRoutesInstanceListArrayOutputWithContext(context.Context) GatewayCCNRoutesInstanceListArrayOutput
}

type GatewayCCNRoutesInstanceListArray []GatewayCCNRoutesInstanceListInput

func (GatewayCCNRoutesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayCCNRoutesInstanceList)(nil)).Elem()
}

func (i GatewayCCNRoutesInstanceListArray) ToGatewayCCNRoutesInstanceListArrayOutput() GatewayCCNRoutesInstanceListArrayOutput {
	return i.ToGatewayCCNRoutesInstanceListArrayOutputWithContext(context.Background())
}

func (i GatewayCCNRoutesInstanceListArray) ToGatewayCCNRoutesInstanceListArrayOutputWithContext(ctx context.Context) GatewayCCNRoutesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCCNRoutesInstanceListArrayOutput)
}

type GatewayCCNRoutesInstanceListOutput struct{ *pulumi.OutputState }

func (GatewayCCNRoutesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCCNRoutesInstanceList)(nil)).Elem()
}

func (o GatewayCCNRoutesInstanceListOutput) ToGatewayCCNRoutesInstanceListOutput() GatewayCCNRoutesInstanceListOutput {
	return o
}

func (o GatewayCCNRoutesInstanceListOutput) ToGatewayCCNRoutesInstanceListOutputWithContext(ctx context.Context) GatewayCCNRoutesInstanceListOutput {
	return o
}

func (o GatewayCCNRoutesInstanceListOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCCNRoutesInstanceList) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

func (o GatewayCCNRoutesInstanceListOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCCNRoutesInstanceList) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o GatewayCCNRoutesInstanceListOutput) DcgId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCCNRoutesInstanceList) string { return v.DcgId }).(pulumi.StringOutput)
}

func (o GatewayCCNRoutesInstanceListOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCCNRoutesInstanceList) string { return v.RouteId }).(pulumi.StringOutput)
}

type GatewayCCNRoutesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GatewayCCNRoutesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayCCNRoutesInstanceList)(nil)).Elem()
}

func (o GatewayCCNRoutesInstanceListArrayOutput) ToGatewayCCNRoutesInstanceListArrayOutput() GatewayCCNRoutesInstanceListArrayOutput {
	return o
}

func (o GatewayCCNRoutesInstanceListArrayOutput) ToGatewayCCNRoutesInstanceListArrayOutputWithContext(ctx context.Context) GatewayCCNRoutesInstanceListArrayOutput {
	return o
}

func (o GatewayCCNRoutesInstanceListArrayOutput) Index(i pulumi.IntInput) GatewayCCNRoutesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayCCNRoutesInstanceList {
		return vs[0].([]GatewayCCNRoutesInstanceList)[vs[1].(int)]
	}).(GatewayCCNRoutesInstanceListOutput)
}

type GatewayInstancesInstanceList struct {
	CnnRouteType      string `pulumi:"cnnRouteType"`
	CreateTime        string `pulumi:"createTime"`
	DcgId             string `pulumi:"dcgId"`
	DcgIp             string `pulumi:"dcgIp"`
	EnableBgp         bool   `pulumi:"enableBgp"`
	GatewayType       string `pulumi:"gatewayType"`
	Name              string `pulumi:"name"`
	NetworkInstanceId string `pulumi:"networkInstanceId"`
	NetworkType       string `pulumi:"networkType"`
}

// GatewayInstancesInstanceListInput is an input type that accepts GatewayInstancesInstanceListArgs and GatewayInstancesInstanceListOutput values.
// You can construct a concrete instance of `GatewayInstancesInstanceListInput` via:
//
//          GatewayInstancesInstanceListArgs{...}
type GatewayInstancesInstanceListInput interface {
	pulumi.Input

	ToGatewayInstancesInstanceListOutput() GatewayInstancesInstanceListOutput
	ToGatewayInstancesInstanceListOutputWithContext(context.Context) GatewayInstancesInstanceListOutput
}

type GatewayInstancesInstanceListArgs struct {
	CnnRouteType      pulumi.StringInput `pulumi:"cnnRouteType"`
	CreateTime        pulumi.StringInput `pulumi:"createTime"`
	DcgId             pulumi.StringInput `pulumi:"dcgId"`
	DcgIp             pulumi.StringInput `pulumi:"dcgIp"`
	EnableBgp         pulumi.BoolInput   `pulumi:"enableBgp"`
	GatewayType       pulumi.StringInput `pulumi:"gatewayType"`
	Name              pulumi.StringInput `pulumi:"name"`
	NetworkInstanceId pulumi.StringInput `pulumi:"networkInstanceId"`
	NetworkType       pulumi.StringInput `pulumi:"networkType"`
}

func (GatewayInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayInstancesInstanceList)(nil)).Elem()
}

func (i GatewayInstancesInstanceListArgs) ToGatewayInstancesInstanceListOutput() GatewayInstancesInstanceListOutput {
	return i.ToGatewayInstancesInstanceListOutputWithContext(context.Background())
}

func (i GatewayInstancesInstanceListArgs) ToGatewayInstancesInstanceListOutputWithContext(ctx context.Context) GatewayInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayInstancesInstanceListOutput)
}

// GatewayInstancesInstanceListArrayInput is an input type that accepts GatewayInstancesInstanceListArray and GatewayInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GatewayInstancesInstanceListArrayInput` via:
//
//          GatewayInstancesInstanceListArray{ GatewayInstancesInstanceListArgs{...} }
type GatewayInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGatewayInstancesInstanceListArrayOutput() GatewayInstancesInstanceListArrayOutput
	ToGatewayInstancesInstanceListArrayOutputWithContext(context.Context) GatewayInstancesInstanceListArrayOutput
}

type GatewayInstancesInstanceListArray []GatewayInstancesInstanceListInput

func (GatewayInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayInstancesInstanceList)(nil)).Elem()
}

func (i GatewayInstancesInstanceListArray) ToGatewayInstancesInstanceListArrayOutput() GatewayInstancesInstanceListArrayOutput {
	return i.ToGatewayInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GatewayInstancesInstanceListArray) ToGatewayInstancesInstanceListArrayOutputWithContext(ctx context.Context) GatewayInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayInstancesInstanceListArrayOutput)
}

type GatewayInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GatewayInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayInstancesInstanceList)(nil)).Elem()
}

func (o GatewayInstancesInstanceListOutput) ToGatewayInstancesInstanceListOutput() GatewayInstancesInstanceListOutput {
	return o
}

func (o GatewayInstancesInstanceListOutput) ToGatewayInstancesInstanceListOutputWithContext(ctx context.Context) GatewayInstancesInstanceListOutput {
	return o
}

func (o GatewayInstancesInstanceListOutput) CnnRouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.CnnRouteType }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) DcgId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.DcgId }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) DcgIp() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.DcgIp }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) EnableBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) bool { return v.EnableBgp }).(pulumi.BoolOutput)
}

func (o GatewayInstancesInstanceListOutput) GatewayType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.GatewayType }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) NetworkInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.NetworkInstanceId }).(pulumi.StringOutput)
}

func (o GatewayInstancesInstanceListOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstancesInstanceList) string { return v.NetworkType }).(pulumi.StringOutput)
}

type GatewayInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GatewayInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayInstancesInstanceList)(nil)).Elem()
}

func (o GatewayInstancesInstanceListArrayOutput) ToGatewayInstancesInstanceListArrayOutput() GatewayInstancesInstanceListArrayOutput {
	return o
}

func (o GatewayInstancesInstanceListArrayOutput) ToGatewayInstancesInstanceListArrayOutputWithContext(ctx context.Context) GatewayInstancesInstanceListArrayOutput {
	return o
}

func (o GatewayInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GatewayInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayInstancesInstanceList {
		return vs[0].([]GatewayInstancesInstanceList)[vs[1].(int)]
	}).(GatewayInstancesInstanceListOutput)
}

type InstancesInstanceList struct {
	AccessPointId            string `pulumi:"accessPointId"`
	Bandwidth                int    `pulumi:"bandwidth"`
	CircuitCode              string `pulumi:"circuitCode"`
	CreateTime               string `pulumi:"createTime"`
	CustomerAddress          string `pulumi:"customerAddress"`
	CustomerEmail            string `pulumi:"customerEmail"`
	CustomerName             string `pulumi:"customerName"`
	CustomerPhone            string `pulumi:"customerPhone"`
	DcId                     string `pulumi:"dcId"`
	EnabledTime              string `pulumi:"enabledTime"`
	ExpiredTime              string `pulumi:"expiredTime"`
	FaultReportContactPerson string `pulumi:"faultReportContactPerson"`
	FaultReportContactPhone  string `pulumi:"faultReportContactPhone"`
	LineOperator             string `pulumi:"lineOperator"`
	Location                 string `pulumi:"location"`
	Name                     string `pulumi:"name"`
	PortType                 string `pulumi:"portType"`
	RedundantDcId            string `pulumi:"redundantDcId"`
	State                    string `pulumi:"state"`
	TencentAddress           string `pulumi:"tencentAddress"`
}

// InstancesInstanceListInput is an input type that accepts InstancesInstanceListArgs and InstancesInstanceListOutput values.
// You can construct a concrete instance of `InstancesInstanceListInput` via:
//
//          InstancesInstanceListArgs{...}
type InstancesInstanceListInput interface {
	pulumi.Input

	ToInstancesInstanceListOutput() InstancesInstanceListOutput
	ToInstancesInstanceListOutputWithContext(context.Context) InstancesInstanceListOutput
}

type InstancesInstanceListArgs struct {
	AccessPointId            pulumi.StringInput `pulumi:"accessPointId"`
	Bandwidth                pulumi.IntInput    `pulumi:"bandwidth"`
	CircuitCode              pulumi.StringInput `pulumi:"circuitCode"`
	CreateTime               pulumi.StringInput `pulumi:"createTime"`
	CustomerAddress          pulumi.StringInput `pulumi:"customerAddress"`
	CustomerEmail            pulumi.StringInput `pulumi:"customerEmail"`
	CustomerName             pulumi.StringInput `pulumi:"customerName"`
	CustomerPhone            pulumi.StringInput `pulumi:"customerPhone"`
	DcId                     pulumi.StringInput `pulumi:"dcId"`
	EnabledTime              pulumi.StringInput `pulumi:"enabledTime"`
	ExpiredTime              pulumi.StringInput `pulumi:"expiredTime"`
	FaultReportContactPerson pulumi.StringInput `pulumi:"faultReportContactPerson"`
	FaultReportContactPhone  pulumi.StringInput `pulumi:"faultReportContactPhone"`
	LineOperator             pulumi.StringInput `pulumi:"lineOperator"`
	Location                 pulumi.StringInput `pulumi:"location"`
	Name                     pulumi.StringInput `pulumi:"name"`
	PortType                 pulumi.StringInput `pulumi:"portType"`
	RedundantDcId            pulumi.StringInput `pulumi:"redundantDcId"`
	State                    pulumi.StringInput `pulumi:"state"`
	TencentAddress           pulumi.StringInput `pulumi:"tencentAddress"`
}

func (InstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return i.ToInstancesInstanceListOutputWithContext(context.Background())
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListOutput)
}

// InstancesInstanceListArrayInput is an input type that accepts InstancesInstanceListArray and InstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListArrayInput` via:
//
//          InstancesInstanceListArray{ InstancesInstanceListArgs{...} }
type InstancesInstanceListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput
	ToInstancesInstanceListArrayOutputWithContext(context.Context) InstancesInstanceListArrayOutput
}

type InstancesInstanceListArray []InstancesInstanceListInput

func (InstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return i.ToInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListArrayOutput)
}

type InstancesInstanceListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.AccessPointId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) CircuitCode() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CircuitCode }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CustomerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CustomerAddress }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CustomerEmail() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CustomerEmail }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CustomerName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CustomerName }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) CustomerPhone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CustomerPhone }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) DcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.DcId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) EnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.EnabledTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) FaultReportContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.FaultReportContactPerson }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) FaultReportContactPhone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.FaultReportContactPhone }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) LineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.LineOperator }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Location }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) PortType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.PortType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) RedundantDcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.RedundantDcId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.State }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) TencentAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.TencentAddress }).(pulumi.StringOutput)
}

type InstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceList {
		return vs[0].([]InstancesInstanceList)[vs[1].(int)]
	}).(InstancesInstanceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayCCNRoutesInstanceListInput)(nil)).Elem(), GatewayCCNRoutesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayCCNRoutesInstanceListArrayInput)(nil)).Elem(), GatewayCCNRoutesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayInstancesInstanceListInput)(nil)).Elem(), GatewayInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayInstancesInstanceListArrayInput)(nil)).Elem(), GatewayInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListInput)(nil)).Elem(), InstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListArrayInput)(nil)).Elem(), InstancesInstanceListArray{})
	pulumi.RegisterOutputType(GatewayCCNRoutesInstanceListOutput{})
	pulumi.RegisterOutputType(GatewayCCNRoutesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GatewayInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GatewayInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListArrayOutput{})
}
