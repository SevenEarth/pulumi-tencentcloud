// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAclsAclList struct {
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// Outbound rules of the network ACL.
	Egresses []GetAclsAclListEgress `pulumi:"egresses"`
	// ID of the network ACL instance.
	Id string `pulumi:"id"`
	// Inbound rules of the network ACL.
	Ingresses []GetAclsAclListIngress `pulumi:"ingresses"`
	// Name of the network ACL.
	Name string `pulumi:"name"`
	// Subnets associated with the network ACL.
	Subnets []GetAclsAclListSubnet `pulumi:"subnets"`
	// ID of the VPC instance.
	VpcId string `pulumi:"vpcId"`
}

// GetAclsAclListInput is an input type that accepts GetAclsAclListArgs and GetAclsAclListOutput values.
// You can construct a concrete instance of `GetAclsAclListInput` via:
//
//          GetAclsAclListArgs{...}
type GetAclsAclListInput interface {
	pulumi.Input

	ToGetAclsAclListOutput() GetAclsAclListOutput
	ToGetAclsAclListOutputWithContext(context.Context) GetAclsAclListOutput
}

type GetAclsAclListArgs struct {
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Outbound rules of the network ACL.
	Egresses GetAclsAclListEgressArrayInput `pulumi:"egresses"`
	// ID of the network ACL instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Inbound rules of the network ACL.
	Ingresses GetAclsAclListIngressArrayInput `pulumi:"ingresses"`
	// Name of the network ACL.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnets associated with the network ACL.
	Subnets GetAclsAclListSubnetArrayInput `pulumi:"subnets"`
	// ID of the VPC instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetAclsAclListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return i.ToGetAclsAclListOutputWithContext(context.Background())
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListOutput)
}

// GetAclsAclListArrayInput is an input type that accepts GetAclsAclListArray and GetAclsAclListArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListArrayInput` via:
//
//          GetAclsAclListArray{ GetAclsAclListArgs{...} }
type GetAclsAclListArrayInput interface {
	pulumi.Input

	ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput
	ToGetAclsAclListArrayOutputWithContext(context.Context) GetAclsAclListArrayOutput
}

type GetAclsAclListArray []GetAclsAclListInput

func (GetAclsAclListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return i.ToGetAclsAclListArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListArrayOutput)
}

type GetAclsAclListOutput struct{ *pulumi.OutputState }

func (GetAclsAclListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return o
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return o
}

// Creation time.
func (o GetAclsAclListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Outbound rules of the network ACL.
func (o GetAclsAclListOutput) Egresses() GetAclsAclListEgressArrayOutput {
	return o.ApplyT(func(v GetAclsAclList) []GetAclsAclListEgress { return v.Egresses }).(GetAclsAclListEgressArrayOutput)
}

// ID of the network ACL instance.
func (o GetAclsAclListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Id }).(pulumi.StringOutput)
}

// Inbound rules of the network ACL.
func (o GetAclsAclListOutput) Ingresses() GetAclsAclListIngressArrayOutput {
	return o.ApplyT(func(v GetAclsAclList) []GetAclsAclListIngress { return v.Ingresses }).(GetAclsAclListIngressArrayOutput)
}

// Name of the network ACL.
func (o GetAclsAclListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Name }).(pulumi.StringOutput)
}

// Subnets associated with the network ACL.
func (o GetAclsAclListOutput) Subnets() GetAclsAclListSubnetArrayOutput {
	return o.ApplyT(func(v GetAclsAclList) []GetAclsAclListSubnet { return v.Subnets }).(GetAclsAclListSubnetArrayOutput)
}

// ID of the VPC instance.
func (o GetAclsAclListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetAclsAclListArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) Index(i pulumi.IntInput) GetAclsAclListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclList {
		return vs[0].([]GetAclsAclList)[vs[1].(int)]
	}).(GetAclsAclListOutput)
}

type GetAclsAclListEgress struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Rule description.
	Description string `pulumi:"description"`
	// Rule policy of Network ACL.
	Policy string `pulumi:"policy"`
	// Range of the port.
	Port string `pulumi:"port"`
	// Type of IP protocol.
	Protocol string `pulumi:"protocol"`
}

// GetAclsAclListEgressInput is an input type that accepts GetAclsAclListEgressArgs and GetAclsAclListEgressOutput values.
// You can construct a concrete instance of `GetAclsAclListEgressInput` via:
//
//          GetAclsAclListEgressArgs{...}
type GetAclsAclListEgressInput interface {
	pulumi.Input

	ToGetAclsAclListEgressOutput() GetAclsAclListEgressOutput
	ToGetAclsAclListEgressOutputWithContext(context.Context) GetAclsAclListEgressOutput
}

type GetAclsAclListEgressArgs struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Rule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Rule policy of Network ACL.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Range of the port.
	Port pulumi.StringInput `pulumi:"port"`
	// Type of IP protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetAclsAclListEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListEgress)(nil)).Elem()
}

func (i GetAclsAclListEgressArgs) ToGetAclsAclListEgressOutput() GetAclsAclListEgressOutput {
	return i.ToGetAclsAclListEgressOutputWithContext(context.Background())
}

func (i GetAclsAclListEgressArgs) ToGetAclsAclListEgressOutputWithContext(ctx context.Context) GetAclsAclListEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListEgressOutput)
}

// GetAclsAclListEgressArrayInput is an input type that accepts GetAclsAclListEgressArray and GetAclsAclListEgressArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListEgressArrayInput` via:
//
//          GetAclsAclListEgressArray{ GetAclsAclListEgressArgs{...} }
type GetAclsAclListEgressArrayInput interface {
	pulumi.Input

	ToGetAclsAclListEgressArrayOutput() GetAclsAclListEgressArrayOutput
	ToGetAclsAclListEgressArrayOutputWithContext(context.Context) GetAclsAclListEgressArrayOutput
}

type GetAclsAclListEgressArray []GetAclsAclListEgressInput

func (GetAclsAclListEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListEgress)(nil)).Elem()
}

func (i GetAclsAclListEgressArray) ToGetAclsAclListEgressArrayOutput() GetAclsAclListEgressArrayOutput {
	return i.ToGetAclsAclListEgressArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListEgressArray) ToGetAclsAclListEgressArrayOutputWithContext(ctx context.Context) GetAclsAclListEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListEgressArrayOutput)
}

type GetAclsAclListEgressOutput struct{ *pulumi.OutputState }

func (GetAclsAclListEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListEgress)(nil)).Elem()
}

func (o GetAclsAclListEgressOutput) ToGetAclsAclListEgressOutput() GetAclsAclListEgressOutput {
	return o
}

func (o GetAclsAclListEgressOutput) ToGetAclsAclListEgressOutputWithContext(ctx context.Context) GetAclsAclListEgressOutput {
	return o
}

// The IPv4 CIDR of the subnet.
func (o GetAclsAclListEgressOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListEgress) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Rule description.
func (o GetAclsAclListEgressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListEgress) string { return v.Description }).(pulumi.StringOutput)
}

// Rule policy of Network ACL.
func (o GetAclsAclListEgressOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListEgress) string { return v.Policy }).(pulumi.StringOutput)
}

// Range of the port.
func (o GetAclsAclListEgressOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListEgress) string { return v.Port }).(pulumi.StringOutput)
}

// Type of IP protocol.
func (o GetAclsAclListEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetAclsAclListEgressArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListEgress)(nil)).Elem()
}

func (o GetAclsAclListEgressArrayOutput) ToGetAclsAclListEgressArrayOutput() GetAclsAclListEgressArrayOutput {
	return o
}

func (o GetAclsAclListEgressArrayOutput) ToGetAclsAclListEgressArrayOutputWithContext(ctx context.Context) GetAclsAclListEgressArrayOutput {
	return o
}

func (o GetAclsAclListEgressArrayOutput) Index(i pulumi.IntInput) GetAclsAclListEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclListEgress {
		return vs[0].([]GetAclsAclListEgress)[vs[1].(int)]
	}).(GetAclsAclListEgressOutput)
}

type GetAclsAclListIngress struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Rule description.
	Description string `pulumi:"description"`
	// Rule policy of Network ACL.
	Policy string `pulumi:"policy"`
	// Range of the port.
	Port string `pulumi:"port"`
	// Type of IP protocol.
	Protocol string `pulumi:"protocol"`
}

// GetAclsAclListIngressInput is an input type that accepts GetAclsAclListIngressArgs and GetAclsAclListIngressOutput values.
// You can construct a concrete instance of `GetAclsAclListIngressInput` via:
//
//          GetAclsAclListIngressArgs{...}
type GetAclsAclListIngressInput interface {
	pulumi.Input

	ToGetAclsAclListIngressOutput() GetAclsAclListIngressOutput
	ToGetAclsAclListIngressOutputWithContext(context.Context) GetAclsAclListIngressOutput
}

type GetAclsAclListIngressArgs struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Rule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Rule policy of Network ACL.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Range of the port.
	Port pulumi.StringInput `pulumi:"port"`
	// Type of IP protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetAclsAclListIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListIngress)(nil)).Elem()
}

func (i GetAclsAclListIngressArgs) ToGetAclsAclListIngressOutput() GetAclsAclListIngressOutput {
	return i.ToGetAclsAclListIngressOutputWithContext(context.Background())
}

func (i GetAclsAclListIngressArgs) ToGetAclsAclListIngressOutputWithContext(ctx context.Context) GetAclsAclListIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListIngressOutput)
}

// GetAclsAclListIngressArrayInput is an input type that accepts GetAclsAclListIngressArray and GetAclsAclListIngressArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListIngressArrayInput` via:
//
//          GetAclsAclListIngressArray{ GetAclsAclListIngressArgs{...} }
type GetAclsAclListIngressArrayInput interface {
	pulumi.Input

	ToGetAclsAclListIngressArrayOutput() GetAclsAclListIngressArrayOutput
	ToGetAclsAclListIngressArrayOutputWithContext(context.Context) GetAclsAclListIngressArrayOutput
}

type GetAclsAclListIngressArray []GetAclsAclListIngressInput

func (GetAclsAclListIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListIngress)(nil)).Elem()
}

func (i GetAclsAclListIngressArray) ToGetAclsAclListIngressArrayOutput() GetAclsAclListIngressArrayOutput {
	return i.ToGetAclsAclListIngressArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListIngressArray) ToGetAclsAclListIngressArrayOutputWithContext(ctx context.Context) GetAclsAclListIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListIngressArrayOutput)
}

type GetAclsAclListIngressOutput struct{ *pulumi.OutputState }

func (GetAclsAclListIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListIngress)(nil)).Elem()
}

func (o GetAclsAclListIngressOutput) ToGetAclsAclListIngressOutput() GetAclsAclListIngressOutput {
	return o
}

func (o GetAclsAclListIngressOutput) ToGetAclsAclListIngressOutputWithContext(ctx context.Context) GetAclsAclListIngressOutput {
	return o
}

// The IPv4 CIDR of the subnet.
func (o GetAclsAclListIngressOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListIngress) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Rule description.
func (o GetAclsAclListIngressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListIngress) string { return v.Description }).(pulumi.StringOutput)
}

// Rule policy of Network ACL.
func (o GetAclsAclListIngressOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListIngress) string { return v.Policy }).(pulumi.StringOutput)
}

// Range of the port.
func (o GetAclsAclListIngressOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListIngress) string { return v.Port }).(pulumi.StringOutput)
}

// Type of IP protocol.
func (o GetAclsAclListIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetAclsAclListIngressArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListIngress)(nil)).Elem()
}

func (o GetAclsAclListIngressArrayOutput) ToGetAclsAclListIngressArrayOutput() GetAclsAclListIngressArrayOutput {
	return o
}

func (o GetAclsAclListIngressArrayOutput) ToGetAclsAclListIngressArrayOutputWithContext(ctx context.Context) GetAclsAclListIngressArrayOutput {
	return o
}

func (o GetAclsAclListIngressArrayOutput) Index(i pulumi.IntInput) GetAclsAclListIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclListIngress {
		return vs[0].([]GetAclsAclListIngress)[vs[1].(int)]
	}).(GetAclsAclListIngressOutput)
}

type GetAclsAclListSubnet struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Subnet instance ID.
	SubnetId string `pulumi:"subnetId"`
	// Subnet name.
	SubnetName string `pulumi:"subnetName"`
	// Tags of the subnet.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC instance.
	VpcId string `pulumi:"vpcId"`
}

// GetAclsAclListSubnetInput is an input type that accepts GetAclsAclListSubnetArgs and GetAclsAclListSubnetOutput values.
// You can construct a concrete instance of `GetAclsAclListSubnetInput` via:
//
//          GetAclsAclListSubnetArgs{...}
type GetAclsAclListSubnetInput interface {
	pulumi.Input

	ToGetAclsAclListSubnetOutput() GetAclsAclListSubnetOutput
	ToGetAclsAclListSubnetOutputWithContext(context.Context) GetAclsAclListSubnetOutput
}

type GetAclsAclListSubnetArgs struct {
	// The IPv4 CIDR of the subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Subnet instance ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Subnet name.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// Tags of the subnet.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetAclsAclListSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListSubnet)(nil)).Elem()
}

func (i GetAclsAclListSubnetArgs) ToGetAclsAclListSubnetOutput() GetAclsAclListSubnetOutput {
	return i.ToGetAclsAclListSubnetOutputWithContext(context.Background())
}

func (i GetAclsAclListSubnetArgs) ToGetAclsAclListSubnetOutputWithContext(ctx context.Context) GetAclsAclListSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListSubnetOutput)
}

// GetAclsAclListSubnetArrayInput is an input type that accepts GetAclsAclListSubnetArray and GetAclsAclListSubnetArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListSubnetArrayInput` via:
//
//          GetAclsAclListSubnetArray{ GetAclsAclListSubnetArgs{...} }
type GetAclsAclListSubnetArrayInput interface {
	pulumi.Input

	ToGetAclsAclListSubnetArrayOutput() GetAclsAclListSubnetArrayOutput
	ToGetAclsAclListSubnetArrayOutputWithContext(context.Context) GetAclsAclListSubnetArrayOutput
}

type GetAclsAclListSubnetArray []GetAclsAclListSubnetInput

func (GetAclsAclListSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListSubnet)(nil)).Elem()
}

func (i GetAclsAclListSubnetArray) ToGetAclsAclListSubnetArrayOutput() GetAclsAclListSubnetArrayOutput {
	return i.ToGetAclsAclListSubnetArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListSubnetArray) ToGetAclsAclListSubnetArrayOutputWithContext(ctx context.Context) GetAclsAclListSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListSubnetArrayOutput)
}

type GetAclsAclListSubnetOutput struct{ *pulumi.OutputState }

func (GetAclsAclListSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclListSubnet)(nil)).Elem()
}

func (o GetAclsAclListSubnetOutput) ToGetAclsAclListSubnetOutput() GetAclsAclListSubnetOutput {
	return o
}

func (o GetAclsAclListSubnetOutput) ToGetAclsAclListSubnetOutputWithContext(ctx context.Context) GetAclsAclListSubnetOutput {
	return o
}

// The IPv4 CIDR of the subnet.
func (o GetAclsAclListSubnetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListSubnet) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Subnet instance ID.
func (o GetAclsAclListSubnetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListSubnet) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Subnet name.
func (o GetAclsAclListSubnetOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListSubnet) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Tags of the subnet.
func (o GetAclsAclListSubnetOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAclsAclListSubnet) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC instance.
func (o GetAclsAclListSubnetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclListSubnet) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetAclsAclListSubnetArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclListSubnet)(nil)).Elem()
}

func (o GetAclsAclListSubnetArrayOutput) ToGetAclsAclListSubnetArrayOutput() GetAclsAclListSubnetArrayOutput {
	return o
}

func (o GetAclsAclListSubnetArrayOutput) ToGetAclsAclListSubnetArrayOutputWithContext(ctx context.Context) GetAclsAclListSubnetArrayOutput {
	return o
}

func (o GetAclsAclListSubnetArrayOutput) Index(i pulumi.IntInput) GetAclsAclListSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclListSubnet {
		return vs[0].([]GetAclsAclListSubnet)[vs[1].(int)]
	}).(GetAclsAclListSubnetOutput)
}

type GetInstancesInstanceList struct {
	// Filter VPC with this CIDR.
	CidrBlock string `pulumi:"cidrBlock"`
	// Creation time of VPC.
	CreateTime string `pulumi:"createTime"`
	// A list of DNS servers which can be used within the VPC.
	DnsServers []string `pulumi:"dnsServers"`
	// Filter default or no default VPC.
	IsDefault bool `pulumi:"isDefault"`
	// Indicates whether VPC multicast is enabled.
	IsMulticast bool `pulumi:"isMulticast"`
	// Name of the VPC to be queried.
	Name string `pulumi:"name"`
	// A ID list of subnets within this VPC.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags of the VPC to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId string `pulumi:"vpcId"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//          GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Filter VPC with this CIDR.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Creation time of VPC.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// A list of DNS servers which can be used within the VPC.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Filter default or no default VPC.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Indicates whether VPC multicast is enabled.
	IsMulticast pulumi.BoolInput `pulumi:"isMulticast"`
	// Name of the VPC to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// A ID list of subnets within this VPC.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags of the VPC to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//          GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Filter VPC with this CIDR.
func (o GetInstancesInstanceListOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Creation time of VPC.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A list of DNS servers which can be used within the VPC.
func (o GetInstancesInstanceListOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Filter default or no default VPC.
func (o GetInstancesInstanceListOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Indicates whether VPC multicast is enabled.
func (o GetInstancesInstanceListOutput) IsMulticast() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) bool { return v.IsMulticast }).(pulumi.BoolOutput)
}

// Name of the VPC to be queried.
func (o GetInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// A ID list of subnets within this VPC.
func (o GetInstancesInstanceListOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags of the VPC to be queried.
func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC to be queried.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetRouteTablesInstanceList struct {
	// Creation time of the routing table.
	CreateTime string `pulumi:"createTime"`
	// Indicates whether it is the default routing table.
	IsDefault bool `pulumi:"isDefault"`
	// Name of the routing table to be queried.
	Name string `pulumi:"name"`
	// Detailed information of each entry of the route table.
	RouteEntryInfos []GetRouteTablesInstanceListRouteEntryInfo `pulumi:"routeEntryInfos"`
	// ID of the routing table to be queried.
	RouteTableId string `pulumi:"routeTableId"`
	// List of subnet IDs bound to the route table.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags of the routing table to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId string `pulumi:"vpcId"`
}

// GetRouteTablesInstanceListInput is an input type that accepts GetRouteTablesInstanceListArgs and GetRouteTablesInstanceListOutput values.
// You can construct a concrete instance of `GetRouteTablesInstanceListInput` via:
//
//          GetRouteTablesInstanceListArgs{...}
type GetRouteTablesInstanceListInput interface {
	pulumi.Input

	ToGetRouteTablesInstanceListOutput() GetRouteTablesInstanceListOutput
	ToGetRouteTablesInstanceListOutputWithContext(context.Context) GetRouteTablesInstanceListOutput
}

type GetRouteTablesInstanceListArgs struct {
	// Creation time of the routing table.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Indicates whether it is the default routing table.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the routing table to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// Detailed information of each entry of the route table.
	RouteEntryInfos GetRouteTablesInstanceListRouteEntryInfoArrayInput `pulumi:"routeEntryInfos"`
	// ID of the routing table to be queried.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// List of subnet IDs bound to the route table.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags of the routing table to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetRouteTablesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesInstanceList)(nil)).Elem()
}

func (i GetRouteTablesInstanceListArgs) ToGetRouteTablesInstanceListOutput() GetRouteTablesInstanceListOutput {
	return i.ToGetRouteTablesInstanceListOutputWithContext(context.Background())
}

func (i GetRouteTablesInstanceListArgs) ToGetRouteTablesInstanceListOutputWithContext(ctx context.Context) GetRouteTablesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesInstanceListOutput)
}

// GetRouteTablesInstanceListArrayInput is an input type that accepts GetRouteTablesInstanceListArray and GetRouteTablesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesInstanceListArrayInput` via:
//
//          GetRouteTablesInstanceListArray{ GetRouteTablesInstanceListArgs{...} }
type GetRouteTablesInstanceListArrayInput interface {
	pulumi.Input

	ToGetRouteTablesInstanceListArrayOutput() GetRouteTablesInstanceListArrayOutput
	ToGetRouteTablesInstanceListArrayOutputWithContext(context.Context) GetRouteTablesInstanceListArrayOutput
}

type GetRouteTablesInstanceListArray []GetRouteTablesInstanceListInput

func (GetRouteTablesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesInstanceList)(nil)).Elem()
}

func (i GetRouteTablesInstanceListArray) ToGetRouteTablesInstanceListArrayOutput() GetRouteTablesInstanceListArrayOutput {
	return i.ToGetRouteTablesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesInstanceListArray) ToGetRouteTablesInstanceListArrayOutputWithContext(ctx context.Context) GetRouteTablesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesInstanceListArrayOutput)
}

type GetRouteTablesInstanceListOutput struct{ *pulumi.OutputState }

func (GetRouteTablesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesInstanceList)(nil)).Elem()
}

func (o GetRouteTablesInstanceListOutput) ToGetRouteTablesInstanceListOutput() GetRouteTablesInstanceListOutput {
	return o
}

func (o GetRouteTablesInstanceListOutput) ToGetRouteTablesInstanceListOutputWithContext(ctx context.Context) GetRouteTablesInstanceListOutput {
	return o
}

// Creation time of the routing table.
func (o GetRouteTablesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Indicates whether it is the default routing table.
func (o GetRouteTablesInstanceListOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the routing table to be queried.
func (o GetRouteTablesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// Detailed information of each entry of the route table.
func (o GetRouteTablesInstanceListOutput) RouteEntryInfos() GetRouteTablesInstanceListRouteEntryInfoArrayOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) []GetRouteTablesInstanceListRouteEntryInfo {
		return v.RouteEntryInfos
	}).(GetRouteTablesInstanceListRouteEntryInfoArrayOutput)
}

// ID of the routing table to be queried.
func (o GetRouteTablesInstanceListOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// List of subnet IDs bound to the route table.
func (o GetRouteTablesInstanceListOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags of the routing table to be queried.
func (o GetRouteTablesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC to be queried.
func (o GetRouteTablesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRouteTablesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesInstanceList)(nil)).Elem()
}

func (o GetRouteTablesInstanceListArrayOutput) ToGetRouteTablesInstanceListArrayOutput() GetRouteTablesInstanceListArrayOutput {
	return o
}

func (o GetRouteTablesInstanceListArrayOutput) ToGetRouteTablesInstanceListArrayOutputWithContext(ctx context.Context) GetRouteTablesInstanceListArrayOutput {
	return o
}

func (o GetRouteTablesInstanceListArrayOutput) Index(i pulumi.IntInput) GetRouteTablesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesInstanceList {
		return vs[0].([]GetRouteTablesInstanceList)[vs[1].(int)]
	}).(GetRouteTablesInstanceListOutput)
}

type GetRouteTablesInstanceListRouteEntryInfo struct {
	// Description information user defined for a route table rule.
	Description string `pulumi:"description"`
	// The destination address block.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// ID of next-hop gateway. Note: when 'next_type' is EIP, GatewayId will fix the value `0`.
	NextHub string `pulumi:"nextHub"`
	// Type of next-hop, and available values include `CVM`, `VPN`, `DIRECTCONNECT`, `PEERCONNECTION`, `SSLVPN`, `NAT`, `NORMAL_CVM`, `EIP` and `CCN`.
	NextType string `pulumi:"nextType"`
	// ID of a route table entry.
	RouteEntryId string `pulumi:"routeEntryId"`
}

// GetRouteTablesInstanceListRouteEntryInfoInput is an input type that accepts GetRouteTablesInstanceListRouteEntryInfoArgs and GetRouteTablesInstanceListRouteEntryInfoOutput values.
// You can construct a concrete instance of `GetRouteTablesInstanceListRouteEntryInfoInput` via:
//
//          GetRouteTablesInstanceListRouteEntryInfoArgs{...}
type GetRouteTablesInstanceListRouteEntryInfoInput interface {
	pulumi.Input

	ToGetRouteTablesInstanceListRouteEntryInfoOutput() GetRouteTablesInstanceListRouteEntryInfoOutput
	ToGetRouteTablesInstanceListRouteEntryInfoOutputWithContext(context.Context) GetRouteTablesInstanceListRouteEntryInfoOutput
}

type GetRouteTablesInstanceListRouteEntryInfoArgs struct {
	// Description information user defined for a route table rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination address block.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// ID of next-hop gateway. Note: when 'next_type' is EIP, GatewayId will fix the value `0`.
	NextHub pulumi.StringInput `pulumi:"nextHub"`
	// Type of next-hop, and available values include `CVM`, `VPN`, `DIRECTCONNECT`, `PEERCONNECTION`, `SSLVPN`, `NAT`, `NORMAL_CVM`, `EIP` and `CCN`.
	NextType pulumi.StringInput `pulumi:"nextType"`
	// ID of a route table entry.
	RouteEntryId pulumi.StringInput `pulumi:"routeEntryId"`
}

func (GetRouteTablesInstanceListRouteEntryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesInstanceListRouteEntryInfo)(nil)).Elem()
}

func (i GetRouteTablesInstanceListRouteEntryInfoArgs) ToGetRouteTablesInstanceListRouteEntryInfoOutput() GetRouteTablesInstanceListRouteEntryInfoOutput {
	return i.ToGetRouteTablesInstanceListRouteEntryInfoOutputWithContext(context.Background())
}

func (i GetRouteTablesInstanceListRouteEntryInfoArgs) ToGetRouteTablesInstanceListRouteEntryInfoOutputWithContext(ctx context.Context) GetRouteTablesInstanceListRouteEntryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesInstanceListRouteEntryInfoOutput)
}

// GetRouteTablesInstanceListRouteEntryInfoArrayInput is an input type that accepts GetRouteTablesInstanceListRouteEntryInfoArray and GetRouteTablesInstanceListRouteEntryInfoArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesInstanceListRouteEntryInfoArrayInput` via:
//
//          GetRouteTablesInstanceListRouteEntryInfoArray{ GetRouteTablesInstanceListRouteEntryInfoArgs{...} }
type GetRouteTablesInstanceListRouteEntryInfoArrayInput interface {
	pulumi.Input

	ToGetRouteTablesInstanceListRouteEntryInfoArrayOutput() GetRouteTablesInstanceListRouteEntryInfoArrayOutput
	ToGetRouteTablesInstanceListRouteEntryInfoArrayOutputWithContext(context.Context) GetRouteTablesInstanceListRouteEntryInfoArrayOutput
}

type GetRouteTablesInstanceListRouteEntryInfoArray []GetRouteTablesInstanceListRouteEntryInfoInput

func (GetRouteTablesInstanceListRouteEntryInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesInstanceListRouteEntryInfo)(nil)).Elem()
}

func (i GetRouteTablesInstanceListRouteEntryInfoArray) ToGetRouteTablesInstanceListRouteEntryInfoArrayOutput() GetRouteTablesInstanceListRouteEntryInfoArrayOutput {
	return i.ToGetRouteTablesInstanceListRouteEntryInfoArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesInstanceListRouteEntryInfoArray) ToGetRouteTablesInstanceListRouteEntryInfoArrayOutputWithContext(ctx context.Context) GetRouteTablesInstanceListRouteEntryInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesInstanceListRouteEntryInfoArrayOutput)
}

type GetRouteTablesInstanceListRouteEntryInfoOutput struct{ *pulumi.OutputState }

func (GetRouteTablesInstanceListRouteEntryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesInstanceListRouteEntryInfo)(nil)).Elem()
}

func (o GetRouteTablesInstanceListRouteEntryInfoOutput) ToGetRouteTablesInstanceListRouteEntryInfoOutput() GetRouteTablesInstanceListRouteEntryInfoOutput {
	return o
}

func (o GetRouteTablesInstanceListRouteEntryInfoOutput) ToGetRouteTablesInstanceListRouteEntryInfoOutputWithContext(ctx context.Context) GetRouteTablesInstanceListRouteEntryInfoOutput {
	return o
}

// Description information user defined for a route table rule.
func (o GetRouteTablesInstanceListRouteEntryInfoOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceListRouteEntryInfo) string { return v.Description }).(pulumi.StringOutput)
}

// The destination address block.
func (o GetRouteTablesInstanceListRouteEntryInfoOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceListRouteEntryInfo) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// ID of next-hop gateway. Note: when 'next_type' is EIP, GatewayId will fix the value `0`.
func (o GetRouteTablesInstanceListRouteEntryInfoOutput) NextHub() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceListRouteEntryInfo) string { return v.NextHub }).(pulumi.StringOutput)
}

// Type of next-hop, and available values include `CVM`, `VPN`, `DIRECTCONNECT`, `PEERCONNECTION`, `SSLVPN`, `NAT`, `NORMAL_CVM`, `EIP` and `CCN`.
func (o GetRouteTablesInstanceListRouteEntryInfoOutput) NextType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceListRouteEntryInfo) string { return v.NextType }).(pulumi.StringOutput)
}

// ID of a route table entry.
func (o GetRouteTablesInstanceListRouteEntryInfoOutput) RouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesInstanceListRouteEntryInfo) string { return v.RouteEntryId }).(pulumi.StringOutput)
}

type GetRouteTablesInstanceListRouteEntryInfoArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesInstanceListRouteEntryInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesInstanceListRouteEntryInfo)(nil)).Elem()
}

func (o GetRouteTablesInstanceListRouteEntryInfoArrayOutput) ToGetRouteTablesInstanceListRouteEntryInfoArrayOutput() GetRouteTablesInstanceListRouteEntryInfoArrayOutput {
	return o
}

func (o GetRouteTablesInstanceListRouteEntryInfoArrayOutput) ToGetRouteTablesInstanceListRouteEntryInfoArrayOutputWithContext(ctx context.Context) GetRouteTablesInstanceListRouteEntryInfoArrayOutput {
	return o
}

func (o GetRouteTablesInstanceListRouteEntryInfoArrayOutput) Index(i pulumi.IntInput) GetRouteTablesInstanceListRouteEntryInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesInstanceListRouteEntryInfo {
		return vs[0].([]GetRouteTablesInstanceListRouteEntryInfo)[vs[1].(int)]
	}).(GetRouteTablesInstanceListRouteEntryInfoOutput)
}

type GetSubnetsInstanceList struct {
	// Zone of the subnet to be queried.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The number of available IPs.
	AvailableIpCount int `pulumi:"availableIpCount"`
	// Filter subnet with this CIDR.
	CidrBlock string `pulumi:"cidrBlock"`
	// Creation time of the subnet resource.
	CreateTime string `pulumi:"createTime"`
	// Filter default or no default subnets.
	IsDefault bool `pulumi:"isDefault"`
	// Indicates whether multicast is enabled.
	IsMulticast bool `pulumi:"isMulticast"`
	// Name of the subnet to be queried.
	Name string `pulumi:"name"`
	// ID of the routing table.
	RouteTableId string `pulumi:"routeTableId"`
	// ID of the subnet to be queried.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the subnet to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId string `pulumi:"vpcId"`
}

// GetSubnetsInstanceListInput is an input type that accepts GetSubnetsInstanceListArgs and GetSubnetsInstanceListOutput values.
// You can construct a concrete instance of `GetSubnetsInstanceListInput` via:
//
//          GetSubnetsInstanceListArgs{...}
type GetSubnetsInstanceListInput interface {
	pulumi.Input

	ToGetSubnetsInstanceListOutput() GetSubnetsInstanceListOutput
	ToGetSubnetsInstanceListOutputWithContext(context.Context) GetSubnetsInstanceListOutput
}

type GetSubnetsInstanceListArgs struct {
	// Zone of the subnet to be queried.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The number of available IPs.
	AvailableIpCount pulumi.IntInput `pulumi:"availableIpCount"`
	// Filter subnet with this CIDR.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Creation time of the subnet resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Filter default or no default subnets.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Indicates whether multicast is enabled.
	IsMulticast pulumi.BoolInput `pulumi:"isMulticast"`
	// Name of the subnet to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the routing table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// ID of the subnet to be queried.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the subnet to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC to be queried.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetSubnetsInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsInstanceList)(nil)).Elem()
}

func (i GetSubnetsInstanceListArgs) ToGetSubnetsInstanceListOutput() GetSubnetsInstanceListOutput {
	return i.ToGetSubnetsInstanceListOutputWithContext(context.Background())
}

func (i GetSubnetsInstanceListArgs) ToGetSubnetsInstanceListOutputWithContext(ctx context.Context) GetSubnetsInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsInstanceListOutput)
}

// GetSubnetsInstanceListArrayInput is an input type that accepts GetSubnetsInstanceListArray and GetSubnetsInstanceListArrayOutput values.
// You can construct a concrete instance of `GetSubnetsInstanceListArrayInput` via:
//
//          GetSubnetsInstanceListArray{ GetSubnetsInstanceListArgs{...} }
type GetSubnetsInstanceListArrayInput interface {
	pulumi.Input

	ToGetSubnetsInstanceListArrayOutput() GetSubnetsInstanceListArrayOutput
	ToGetSubnetsInstanceListArrayOutputWithContext(context.Context) GetSubnetsInstanceListArrayOutput
}

type GetSubnetsInstanceListArray []GetSubnetsInstanceListInput

func (GetSubnetsInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsInstanceList)(nil)).Elem()
}

func (i GetSubnetsInstanceListArray) ToGetSubnetsInstanceListArrayOutput() GetSubnetsInstanceListArrayOutput {
	return i.ToGetSubnetsInstanceListArrayOutputWithContext(context.Background())
}

func (i GetSubnetsInstanceListArray) ToGetSubnetsInstanceListArrayOutputWithContext(ctx context.Context) GetSubnetsInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsInstanceListArrayOutput)
}

type GetSubnetsInstanceListOutput struct{ *pulumi.OutputState }

func (GetSubnetsInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsInstanceList)(nil)).Elem()
}

func (o GetSubnetsInstanceListOutput) ToGetSubnetsInstanceListOutput() GetSubnetsInstanceListOutput {
	return o
}

func (o GetSubnetsInstanceListOutput) ToGetSubnetsInstanceListOutputWithContext(ctx context.Context) GetSubnetsInstanceListOutput {
	return o
}

// Zone of the subnet to be queried.
func (o GetSubnetsInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The number of available IPs.
func (o GetSubnetsInstanceListOutput) AvailableIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) int { return v.AvailableIpCount }).(pulumi.IntOutput)
}

// Filter subnet with this CIDR.
func (o GetSubnetsInstanceListOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Creation time of the subnet resource.
func (o GetSubnetsInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Filter default or no default subnets.
func (o GetSubnetsInstanceListOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Indicates whether multicast is enabled.
func (o GetSubnetsInstanceListOutput) IsMulticast() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) bool { return v.IsMulticast }).(pulumi.BoolOutput)
}

// Name of the subnet to be queried.
func (o GetSubnetsInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the routing table.
func (o GetSubnetsInstanceListOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// ID of the subnet to be queried.
func (o GetSubnetsInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the subnet to be queried.
func (o GetSubnetsInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC to be queried.
func (o GetSubnetsInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetSubnetsInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsInstanceList)(nil)).Elem()
}

func (o GetSubnetsInstanceListArrayOutput) ToGetSubnetsInstanceListArrayOutput() GetSubnetsInstanceListArrayOutput {
	return o
}

func (o GetSubnetsInstanceListArrayOutput) ToGetSubnetsInstanceListArrayOutputWithContext(ctx context.Context) GetSubnetsInstanceListArrayOutput {
	return o
}

func (o GetSubnetsInstanceListArrayOutput) Index(i pulumi.IntInput) GetSubnetsInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsInstanceList {
		return vs[0].([]GetSubnetsInstanceList)[vs[1].(int)]
	}).(GetSubnetsInstanceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListInput)(nil)).Elem(), GetAclsAclListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListArrayInput)(nil)).Elem(), GetAclsAclListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListEgressInput)(nil)).Elem(), GetAclsAclListEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListEgressArrayInput)(nil)).Elem(), GetAclsAclListEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListIngressInput)(nil)).Elem(), GetAclsAclListIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListIngressArrayInput)(nil)).Elem(), GetAclsAclListIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListSubnetInput)(nil)).Elem(), GetAclsAclListSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListSubnetArrayInput)(nil)).Elem(), GetAclsAclListSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesInstanceListInput)(nil)).Elem(), GetRouteTablesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesInstanceListArrayInput)(nil)).Elem(), GetRouteTablesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesInstanceListRouteEntryInfoInput)(nil)).Elem(), GetRouteTablesInstanceListRouteEntryInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesInstanceListRouteEntryInfoArrayInput)(nil)).Elem(), GetRouteTablesInstanceListRouteEntryInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsInstanceListInput)(nil)).Elem(), GetSubnetsInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsInstanceListArrayInput)(nil)).Elem(), GetSubnetsInstanceListArray{})
	pulumi.RegisterOutputType(GetAclsAclListOutput{})
	pulumi.RegisterOutputType(GetAclsAclListArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclListEgressOutput{})
	pulumi.RegisterOutputType(GetAclsAclListEgressArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclListIngressOutput{})
	pulumi.RegisterOutputType(GetAclsAclListIngressArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclListSubnetOutput{})
	pulumi.RegisterOutputType(GetAclsAclListSubnetArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesInstanceListOutput{})
	pulumi.RegisterOutputType(GetRouteTablesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesInstanceListRouteEntryInfoOutput{})
	pulumi.RegisterOutputType(GetRouteTablesInstanceListRouteEntryInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsInstanceListOutput{})
	pulumi.RegisterOutputType(GetSubnetsInstanceListArrayOutput{})
}
