// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func RouteTables(ctx *pulumi.Context, args *RouteTablesArgs, opts ...pulumi.InvokeOption) (*RouteTablesResult, error) {
	var rv RouteTablesResult
	err := ctx.Invoke("tencentcloud:Vpc/routeTables:RouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking RouteTables.
type RouteTablesArgs struct {
	AssociationMain  *bool                  `pulumi:"associationMain"`
	Name             *string                `pulumi:"name"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	RouteTableId     *string                `pulumi:"routeTableId"`
	TagKey           *string                `pulumi:"tagKey"`
	Tags             map[string]interface{} `pulumi:"tags"`
	VpcId            *string                `pulumi:"vpcId"`
}

// A collection of values returned by RouteTables.
type RouteTablesResult struct {
	AssociationMain *bool `pulumi:"associationMain"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                    `pulumi:"id"`
	InstanceLists    []RouteTablesInstanceList `pulumi:"instanceLists"`
	Name             *string                   `pulumi:"name"`
	ResultOutputFile *string                   `pulumi:"resultOutputFile"`
	RouteTableId     *string                   `pulumi:"routeTableId"`
	TagKey           *string                   `pulumi:"tagKey"`
	Tags             map[string]interface{}    `pulumi:"tags"`
	VpcId            *string                   `pulumi:"vpcId"`
}

func RouteTablesOutput(ctx *pulumi.Context, args RouteTablesOutputArgs, opts ...pulumi.InvokeOption) RouteTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RouteTablesResult, error) {
			args := v.(RouteTablesArgs)
			r, err := RouteTables(ctx, &args, opts...)
			var s RouteTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RouteTablesResultOutput)
}

// A collection of arguments for invoking RouteTables.
type RouteTablesOutputArgs struct {
	AssociationMain  pulumi.BoolPtrInput   `pulumi:"associationMain"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RouteTableId     pulumi.StringPtrInput `pulumi:"routeTableId"`
	TagKey           pulumi.StringPtrInput `pulumi:"tagKey"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
	VpcId            pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (RouteTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesArgs)(nil)).Elem()
}

// A collection of values returned by RouteTables.
type RouteTablesResultOutput struct{ *pulumi.OutputState }

func (RouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesResult)(nil)).Elem()
}

func (o RouteTablesResultOutput) ToRouteTablesResultOutput() RouteTablesResultOutput {
	return o
}

func (o RouteTablesResultOutput) ToRouteTablesResultOutputWithContext(ctx context.Context) RouteTablesResultOutput {
	return o
}

func (o RouteTablesResultOutput) AssociationMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *bool { return v.AssociationMain }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RouteTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o RouteTablesResultOutput) InstanceLists() RouteTablesInstanceListArrayOutput {
	return o.ApplyT(func(v RouteTablesResult) []RouteTablesInstanceList { return v.InstanceLists }).(RouteTablesInstanceListArrayOutput)
}

func (o RouteTablesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouteTablesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o RouteTablesResultOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

func (o RouteTablesResultOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func (o RouteTablesResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v RouteTablesResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o RouteTablesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RouteTablesResultOutput{})
}
