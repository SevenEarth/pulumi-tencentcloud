// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RocketmqClusterVpc struct {
	// Subnet ID.
	SubnetId *string `pulumi:"subnetId"`
	// Vpc ID.
	VpcId *string `pulumi:"vpcId"`
}

// RocketmqClusterVpcInput is an input type that accepts RocketmqClusterVpcArgs and RocketmqClusterVpcOutput values.
// You can construct a concrete instance of `RocketmqClusterVpcInput` via:
//
//          RocketmqClusterVpcArgs{...}
type RocketmqClusterVpcInput interface {
	pulumi.Input

	ToRocketmqClusterVpcOutput() RocketmqClusterVpcOutput
	ToRocketmqClusterVpcOutputWithContext(context.Context) RocketmqClusterVpcOutput
}

type RocketmqClusterVpcArgs struct {
	// Subnet ID.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Vpc ID.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (RocketmqClusterVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketmqClusterVpc)(nil)).Elem()
}

func (i RocketmqClusterVpcArgs) ToRocketmqClusterVpcOutput() RocketmqClusterVpcOutput {
	return i.ToRocketmqClusterVpcOutputWithContext(context.Background())
}

func (i RocketmqClusterVpcArgs) ToRocketmqClusterVpcOutputWithContext(ctx context.Context) RocketmqClusterVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketmqClusterVpcOutput)
}

// RocketmqClusterVpcArrayInput is an input type that accepts RocketmqClusterVpcArray and RocketmqClusterVpcArrayOutput values.
// You can construct a concrete instance of `RocketmqClusterVpcArrayInput` via:
//
//          RocketmqClusterVpcArray{ RocketmqClusterVpcArgs{...} }
type RocketmqClusterVpcArrayInput interface {
	pulumi.Input

	ToRocketmqClusterVpcArrayOutput() RocketmqClusterVpcArrayOutput
	ToRocketmqClusterVpcArrayOutputWithContext(context.Context) RocketmqClusterVpcArrayOutput
}

type RocketmqClusterVpcArray []RocketmqClusterVpcInput

func (RocketmqClusterVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketmqClusterVpc)(nil)).Elem()
}

func (i RocketmqClusterVpcArray) ToRocketmqClusterVpcArrayOutput() RocketmqClusterVpcArrayOutput {
	return i.ToRocketmqClusterVpcArrayOutputWithContext(context.Background())
}

func (i RocketmqClusterVpcArray) ToRocketmqClusterVpcArrayOutputWithContext(ctx context.Context) RocketmqClusterVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketmqClusterVpcArrayOutput)
}

type RocketmqClusterVpcOutput struct{ *pulumi.OutputState }

func (RocketmqClusterVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketmqClusterVpc)(nil)).Elem()
}

func (o RocketmqClusterVpcOutput) ToRocketmqClusterVpcOutput() RocketmqClusterVpcOutput {
	return o
}

func (o RocketmqClusterVpcOutput) ToRocketmqClusterVpcOutputWithContext(ctx context.Context) RocketmqClusterVpcOutput {
	return o
}

// Subnet ID.
func (o RocketmqClusterVpcOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketmqClusterVpc) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Vpc ID.
func (o RocketmqClusterVpcOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketmqClusterVpc) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type RocketmqClusterVpcArrayOutput struct{ *pulumi.OutputState }

func (RocketmqClusterVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketmqClusterVpc)(nil)).Elem()
}

func (o RocketmqClusterVpcArrayOutput) ToRocketmqClusterVpcArrayOutput() RocketmqClusterVpcArrayOutput {
	return o
}

func (o RocketmqClusterVpcArrayOutput) ToRocketmqClusterVpcArrayOutputWithContext(ctx context.Context) RocketmqClusterVpcArrayOutput {
	return o
}

func (o RocketmqClusterVpcArrayOutput) Index(i pulumi.IntInput) RocketmqClusterVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RocketmqClusterVpc {
		return vs[0].([]RocketmqClusterVpc)[vs[1].(int)]
	}).(RocketmqClusterVpcOutput)
}

type GetRocketmqClusterClusterList struct {
	// Cluster configuration information.
	Configs []GetRocketmqClusterClusterListConfig `pulumi:"configs"`
	// Basic cluster information.
	Infos []GetRocketmqClusterClusterListInfo `pulumi:"infos"`
	// Cluster status. `0`: Creating; `1`: Normal; `2`: Terminating; `3`: Deleted; `4`: Isolated; `5`: Creation failed; `6`: Deletion failed.
	Status int `pulumi:"status"`
}

// GetRocketmqClusterClusterListInput is an input type that accepts GetRocketmqClusterClusterListArgs and GetRocketmqClusterClusterListOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListInput` via:
//
//          GetRocketmqClusterClusterListArgs{...}
type GetRocketmqClusterClusterListInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListOutput() GetRocketmqClusterClusterListOutput
	ToGetRocketmqClusterClusterListOutputWithContext(context.Context) GetRocketmqClusterClusterListOutput
}

type GetRocketmqClusterClusterListArgs struct {
	// Cluster configuration information.
	Configs GetRocketmqClusterClusterListConfigArrayInput `pulumi:"configs"`
	// Basic cluster information.
	Infos GetRocketmqClusterClusterListInfoArrayInput `pulumi:"infos"`
	// Cluster status. `0`: Creating; `1`: Normal; `2`: Terminating; `3`: Deleted; `4`: Isolated; `5`: Creation failed; `6`: Deletion failed.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetRocketmqClusterClusterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterList)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListArgs) ToGetRocketmqClusterClusterListOutput() GetRocketmqClusterClusterListOutput {
	return i.ToGetRocketmqClusterClusterListOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListArgs) ToGetRocketmqClusterClusterListOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListOutput)
}

// GetRocketmqClusterClusterListArrayInput is an input type that accepts GetRocketmqClusterClusterListArray and GetRocketmqClusterClusterListArrayOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListArrayInput` via:
//
//          GetRocketmqClusterClusterListArray{ GetRocketmqClusterClusterListArgs{...} }
type GetRocketmqClusterClusterListArrayInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListArrayOutput() GetRocketmqClusterClusterListArrayOutput
	ToGetRocketmqClusterClusterListArrayOutputWithContext(context.Context) GetRocketmqClusterClusterListArrayOutput
}

type GetRocketmqClusterClusterListArray []GetRocketmqClusterClusterListInput

func (GetRocketmqClusterClusterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterList)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListArray) ToGetRocketmqClusterClusterListArrayOutput() GetRocketmqClusterClusterListArrayOutput {
	return i.ToGetRocketmqClusterClusterListArrayOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListArray) ToGetRocketmqClusterClusterListArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListArrayOutput)
}

type GetRocketmqClusterClusterListOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterList)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListOutput) ToGetRocketmqClusterClusterListOutput() GetRocketmqClusterClusterListOutput {
	return o
}

func (o GetRocketmqClusterClusterListOutput) ToGetRocketmqClusterClusterListOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListOutput {
	return o
}

// Cluster configuration information.
func (o GetRocketmqClusterClusterListOutput) Configs() GetRocketmqClusterClusterListConfigArrayOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterList) []GetRocketmqClusterClusterListConfig { return v.Configs }).(GetRocketmqClusterClusterListConfigArrayOutput)
}

// Basic cluster information.
func (o GetRocketmqClusterClusterListOutput) Infos() GetRocketmqClusterClusterListInfoArrayOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterList) []GetRocketmqClusterClusterListInfo { return v.Infos }).(GetRocketmqClusterClusterListInfoArrayOutput)
}

// Cluster status. `0`: Creating; `1`: Normal; `2`: Terminating; `3`: Deleted; `4`: Isolated; `5`: Creation failed; `6`: Deletion failed.
func (o GetRocketmqClusterClusterListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterList) int { return v.Status }).(pulumi.IntOutput)
}

type GetRocketmqClusterClusterListArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterList)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListArrayOutput) ToGetRocketmqClusterClusterListArrayOutput() GetRocketmqClusterClusterListArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListArrayOutput) ToGetRocketmqClusterClusterListArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListArrayOutput) Index(i pulumi.IntInput) GetRocketmqClusterClusterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqClusterClusterList {
		return vs[0].([]GetRocketmqClusterClusterList)[vs[1].(int)]
	}).(GetRocketmqClusterClusterListOutput)
}

type GetRocketmqClusterClusterListConfig struct {
	// Maximum number of groups.
	MaxGroupNum int `pulumi:"maxGroupNum"`
	// Maximum message delay in millisecond.
	MaxLatencyTime int `pulumi:"maxLatencyTime"`
	// Maximum number of namespaces.
	MaxNamespaceNum int `pulumi:"maxNamespaceNum"`
	// Maximum message retention period in milliseconds.
	MaxRetentionTime int `pulumi:"maxRetentionTime"`
	// Maximum number of topics.
	MaxTopicNum int `pulumi:"maxTopicNum"`
	// Maximum TPS per namespace.
	MaxTpsPerNamespace int `pulumi:"maxTpsPerNamespace"`
	// Number of used groups.
	UsedGroupNum int `pulumi:"usedGroupNum"`
	// Number of used namespaces.
	UsedNamespaceNum int `pulumi:"usedNamespaceNum"`
	// Number of used topics.
	UsedTopicNum int `pulumi:"usedTopicNum"`
}

// GetRocketmqClusterClusterListConfigInput is an input type that accepts GetRocketmqClusterClusterListConfigArgs and GetRocketmqClusterClusterListConfigOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListConfigInput` via:
//
//          GetRocketmqClusterClusterListConfigArgs{...}
type GetRocketmqClusterClusterListConfigInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListConfigOutput() GetRocketmqClusterClusterListConfigOutput
	ToGetRocketmqClusterClusterListConfigOutputWithContext(context.Context) GetRocketmqClusterClusterListConfigOutput
}

type GetRocketmqClusterClusterListConfigArgs struct {
	// Maximum number of groups.
	MaxGroupNum pulumi.IntInput `pulumi:"maxGroupNum"`
	// Maximum message delay in millisecond.
	MaxLatencyTime pulumi.IntInput `pulumi:"maxLatencyTime"`
	// Maximum number of namespaces.
	MaxNamespaceNum pulumi.IntInput `pulumi:"maxNamespaceNum"`
	// Maximum message retention period in milliseconds.
	MaxRetentionTime pulumi.IntInput `pulumi:"maxRetentionTime"`
	// Maximum number of topics.
	MaxTopicNum pulumi.IntInput `pulumi:"maxTopicNum"`
	// Maximum TPS per namespace.
	MaxTpsPerNamespace pulumi.IntInput `pulumi:"maxTpsPerNamespace"`
	// Number of used groups.
	UsedGroupNum pulumi.IntInput `pulumi:"usedGroupNum"`
	// Number of used namespaces.
	UsedNamespaceNum pulumi.IntInput `pulumi:"usedNamespaceNum"`
	// Number of used topics.
	UsedTopicNum pulumi.IntInput `pulumi:"usedTopicNum"`
}

func (GetRocketmqClusterClusterListConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListConfig)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListConfigArgs) ToGetRocketmqClusterClusterListConfigOutput() GetRocketmqClusterClusterListConfigOutput {
	return i.ToGetRocketmqClusterClusterListConfigOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListConfigArgs) ToGetRocketmqClusterClusterListConfigOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListConfigOutput)
}

// GetRocketmqClusterClusterListConfigArrayInput is an input type that accepts GetRocketmqClusterClusterListConfigArray and GetRocketmqClusterClusterListConfigArrayOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListConfigArrayInput` via:
//
//          GetRocketmqClusterClusterListConfigArray{ GetRocketmqClusterClusterListConfigArgs{...} }
type GetRocketmqClusterClusterListConfigArrayInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListConfigArrayOutput() GetRocketmqClusterClusterListConfigArrayOutput
	ToGetRocketmqClusterClusterListConfigArrayOutputWithContext(context.Context) GetRocketmqClusterClusterListConfigArrayOutput
}

type GetRocketmqClusterClusterListConfigArray []GetRocketmqClusterClusterListConfigInput

func (GetRocketmqClusterClusterListConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListConfig)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListConfigArray) ToGetRocketmqClusterClusterListConfigArrayOutput() GetRocketmqClusterClusterListConfigArrayOutput {
	return i.ToGetRocketmqClusterClusterListConfigArrayOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListConfigArray) ToGetRocketmqClusterClusterListConfigArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListConfigArrayOutput)
}

type GetRocketmqClusterClusterListConfigOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListConfig)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListConfigOutput) ToGetRocketmqClusterClusterListConfigOutput() GetRocketmqClusterClusterListConfigOutput {
	return o
}

func (o GetRocketmqClusterClusterListConfigOutput) ToGetRocketmqClusterClusterListConfigOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListConfigOutput {
	return o
}

// Maximum number of groups.
func (o GetRocketmqClusterClusterListConfigOutput) MaxGroupNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxGroupNum }).(pulumi.IntOutput)
}

// Maximum message delay in millisecond.
func (o GetRocketmqClusterClusterListConfigOutput) MaxLatencyTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxLatencyTime }).(pulumi.IntOutput)
}

// Maximum number of namespaces.
func (o GetRocketmqClusterClusterListConfigOutput) MaxNamespaceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxNamespaceNum }).(pulumi.IntOutput)
}

// Maximum message retention period in milliseconds.
func (o GetRocketmqClusterClusterListConfigOutput) MaxRetentionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxRetentionTime }).(pulumi.IntOutput)
}

// Maximum number of topics.
func (o GetRocketmqClusterClusterListConfigOutput) MaxTopicNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxTopicNum }).(pulumi.IntOutput)
}

// Maximum TPS per namespace.
func (o GetRocketmqClusterClusterListConfigOutput) MaxTpsPerNamespace() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.MaxTpsPerNamespace }).(pulumi.IntOutput)
}

// Number of used groups.
func (o GetRocketmqClusterClusterListConfigOutput) UsedGroupNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.UsedGroupNum }).(pulumi.IntOutput)
}

// Number of used namespaces.
func (o GetRocketmqClusterClusterListConfigOutput) UsedNamespaceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.UsedNamespaceNum }).(pulumi.IntOutput)
}

// Number of used topics.
func (o GetRocketmqClusterClusterListConfigOutput) UsedTopicNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListConfig) int { return v.UsedTopicNum }).(pulumi.IntOutput)
}

type GetRocketmqClusterClusterListConfigArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListConfig)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListConfigArrayOutput) ToGetRocketmqClusterClusterListConfigArrayOutput() GetRocketmqClusterClusterListConfigArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListConfigArrayOutput) ToGetRocketmqClusterClusterListConfigArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListConfigArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListConfigArrayOutput) Index(i pulumi.IntInput) GetRocketmqClusterClusterListConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqClusterClusterListConfig {
		return vs[0].([]GetRocketmqClusterClusterListConfig)[vs[1].(int)]
	}).(GetRocketmqClusterClusterListConfigOutput)
}

type GetRocketmqClusterClusterListInfo struct {
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Cluster name.
	ClusterName string `pulumi:"clusterName"`
	// Creation time in milliseconds.
	CreateTime int `pulumi:"createTime"`
	// Whether it is an exclusive instance.
	IsVip bool `pulumi:"isVip"`
	// Public network access address.
	PublicEndPoint string `pulumi:"publicEndPoint"`
	// Region information.
	Region string `pulumi:"region"`
	// Cluster description (up to 128 characters).
	Remark string `pulumi:"remark"`
	// Rocketmq cluster identification.
	RocketmqFlag bool `pulumi:"rocketmqFlag"`
	// Whether the namespace access point is supported.
	SupportNamespaceEndpoint bool `pulumi:"supportNamespaceEndpoint"`
	// VPC access address.
	VpcEndPoint string `pulumi:"vpcEndPoint"`
	// Vpc list.
	Vpcs []GetRocketmqClusterClusterListInfoVpc `pulumi:"vpcs"`
}

// GetRocketmqClusterClusterListInfoInput is an input type that accepts GetRocketmqClusterClusterListInfoArgs and GetRocketmqClusterClusterListInfoOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListInfoInput` via:
//
//          GetRocketmqClusterClusterListInfoArgs{...}
type GetRocketmqClusterClusterListInfoInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListInfoOutput() GetRocketmqClusterClusterListInfoOutput
	ToGetRocketmqClusterClusterListInfoOutputWithContext(context.Context) GetRocketmqClusterClusterListInfoOutput
}

type GetRocketmqClusterClusterListInfoArgs struct {
	// Cluster ID.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Cluster name.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Creation time in milliseconds.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Whether it is an exclusive instance.
	IsVip pulumi.BoolInput `pulumi:"isVip"`
	// Public network access address.
	PublicEndPoint pulumi.StringInput `pulumi:"publicEndPoint"`
	// Region information.
	Region pulumi.StringInput `pulumi:"region"`
	// Cluster description (up to 128 characters).
	Remark pulumi.StringInput `pulumi:"remark"`
	// Rocketmq cluster identification.
	RocketmqFlag pulumi.BoolInput `pulumi:"rocketmqFlag"`
	// Whether the namespace access point is supported.
	SupportNamespaceEndpoint pulumi.BoolInput `pulumi:"supportNamespaceEndpoint"`
	// VPC access address.
	VpcEndPoint pulumi.StringInput `pulumi:"vpcEndPoint"`
	// Vpc list.
	Vpcs GetRocketmqClusterClusterListInfoVpcArrayInput `pulumi:"vpcs"`
}

func (GetRocketmqClusterClusterListInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListInfo)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListInfoArgs) ToGetRocketmqClusterClusterListInfoOutput() GetRocketmqClusterClusterListInfoOutput {
	return i.ToGetRocketmqClusterClusterListInfoOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListInfoArgs) ToGetRocketmqClusterClusterListInfoOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListInfoOutput)
}

// GetRocketmqClusterClusterListInfoArrayInput is an input type that accepts GetRocketmqClusterClusterListInfoArray and GetRocketmqClusterClusterListInfoArrayOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListInfoArrayInput` via:
//
//          GetRocketmqClusterClusterListInfoArray{ GetRocketmqClusterClusterListInfoArgs{...} }
type GetRocketmqClusterClusterListInfoArrayInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListInfoArrayOutput() GetRocketmqClusterClusterListInfoArrayOutput
	ToGetRocketmqClusterClusterListInfoArrayOutputWithContext(context.Context) GetRocketmqClusterClusterListInfoArrayOutput
}

type GetRocketmqClusterClusterListInfoArray []GetRocketmqClusterClusterListInfoInput

func (GetRocketmqClusterClusterListInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListInfo)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListInfoArray) ToGetRocketmqClusterClusterListInfoArrayOutput() GetRocketmqClusterClusterListInfoArrayOutput {
	return i.ToGetRocketmqClusterClusterListInfoArrayOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListInfoArray) ToGetRocketmqClusterClusterListInfoArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListInfoArrayOutput)
}

type GetRocketmqClusterClusterListInfoOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListInfo)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListInfoOutput) ToGetRocketmqClusterClusterListInfoOutput() GetRocketmqClusterClusterListInfoOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoOutput) ToGetRocketmqClusterClusterListInfoOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoOutput {
	return o
}

// Cluster ID.
func (o GetRocketmqClusterClusterListInfoOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Cluster name.
func (o GetRocketmqClusterClusterListInfoOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Creation time in milliseconds.
func (o GetRocketmqClusterClusterListInfoOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Whether it is an exclusive instance.
func (o GetRocketmqClusterClusterListInfoOutput) IsVip() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) bool { return v.IsVip }).(pulumi.BoolOutput)
}

// Public network access address.
func (o GetRocketmqClusterClusterListInfoOutput) PublicEndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.PublicEndPoint }).(pulumi.StringOutput)
}

// Region information.
func (o GetRocketmqClusterClusterListInfoOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.Region }).(pulumi.StringOutput)
}

// Cluster description (up to 128 characters).
func (o GetRocketmqClusterClusterListInfoOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.Remark }).(pulumi.StringOutput)
}

// Rocketmq cluster identification.
func (o GetRocketmqClusterClusterListInfoOutput) RocketmqFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) bool { return v.RocketmqFlag }).(pulumi.BoolOutput)
}

// Whether the namespace access point is supported.
func (o GetRocketmqClusterClusterListInfoOutput) SupportNamespaceEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) bool { return v.SupportNamespaceEndpoint }).(pulumi.BoolOutput)
}

// VPC access address.
func (o GetRocketmqClusterClusterListInfoOutput) VpcEndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) string { return v.VpcEndPoint }).(pulumi.StringOutput)
}

// Vpc list.
func (o GetRocketmqClusterClusterListInfoOutput) Vpcs() GetRocketmqClusterClusterListInfoVpcArrayOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfo) []GetRocketmqClusterClusterListInfoVpc { return v.Vpcs }).(GetRocketmqClusterClusterListInfoVpcArrayOutput)
}

type GetRocketmqClusterClusterListInfoArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListInfo)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListInfoArrayOutput) ToGetRocketmqClusterClusterListInfoArrayOutput() GetRocketmqClusterClusterListInfoArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoArrayOutput) ToGetRocketmqClusterClusterListInfoArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoArrayOutput) Index(i pulumi.IntInput) GetRocketmqClusterClusterListInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqClusterClusterListInfo {
		return vs[0].([]GetRocketmqClusterClusterListInfo)[vs[1].(int)]
	}).(GetRocketmqClusterClusterListInfoOutput)
}

type GetRocketmqClusterClusterListInfoVpc struct {
	// Subnet ID.
	SubnetId string `pulumi:"subnetId"`
	// Vpc ID.
	VpcId string `pulumi:"vpcId"`
}

// GetRocketmqClusterClusterListInfoVpcInput is an input type that accepts GetRocketmqClusterClusterListInfoVpcArgs and GetRocketmqClusterClusterListInfoVpcOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListInfoVpcInput` via:
//
//          GetRocketmqClusterClusterListInfoVpcArgs{...}
type GetRocketmqClusterClusterListInfoVpcInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListInfoVpcOutput() GetRocketmqClusterClusterListInfoVpcOutput
	ToGetRocketmqClusterClusterListInfoVpcOutputWithContext(context.Context) GetRocketmqClusterClusterListInfoVpcOutput
}

type GetRocketmqClusterClusterListInfoVpcArgs struct {
	// Subnet ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Vpc ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetRocketmqClusterClusterListInfoVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListInfoVpc)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListInfoVpcArgs) ToGetRocketmqClusterClusterListInfoVpcOutput() GetRocketmqClusterClusterListInfoVpcOutput {
	return i.ToGetRocketmqClusterClusterListInfoVpcOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListInfoVpcArgs) ToGetRocketmqClusterClusterListInfoVpcOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListInfoVpcOutput)
}

// GetRocketmqClusterClusterListInfoVpcArrayInput is an input type that accepts GetRocketmqClusterClusterListInfoVpcArray and GetRocketmqClusterClusterListInfoVpcArrayOutput values.
// You can construct a concrete instance of `GetRocketmqClusterClusterListInfoVpcArrayInput` via:
//
//          GetRocketmqClusterClusterListInfoVpcArray{ GetRocketmqClusterClusterListInfoVpcArgs{...} }
type GetRocketmqClusterClusterListInfoVpcArrayInput interface {
	pulumi.Input

	ToGetRocketmqClusterClusterListInfoVpcArrayOutput() GetRocketmqClusterClusterListInfoVpcArrayOutput
	ToGetRocketmqClusterClusterListInfoVpcArrayOutputWithContext(context.Context) GetRocketmqClusterClusterListInfoVpcArrayOutput
}

type GetRocketmqClusterClusterListInfoVpcArray []GetRocketmqClusterClusterListInfoVpcInput

func (GetRocketmqClusterClusterListInfoVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListInfoVpc)(nil)).Elem()
}

func (i GetRocketmqClusterClusterListInfoVpcArray) ToGetRocketmqClusterClusterListInfoVpcArrayOutput() GetRocketmqClusterClusterListInfoVpcArrayOutput {
	return i.ToGetRocketmqClusterClusterListInfoVpcArrayOutputWithContext(context.Background())
}

func (i GetRocketmqClusterClusterListInfoVpcArray) ToGetRocketmqClusterClusterListInfoVpcArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqClusterClusterListInfoVpcArrayOutput)
}

type GetRocketmqClusterClusterListInfoVpcOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListInfoVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqClusterClusterListInfoVpc)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListInfoVpcOutput) ToGetRocketmqClusterClusterListInfoVpcOutput() GetRocketmqClusterClusterListInfoVpcOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoVpcOutput) ToGetRocketmqClusterClusterListInfoVpcOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoVpcOutput {
	return o
}

// Subnet ID.
func (o GetRocketmqClusterClusterListInfoVpcOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfoVpc) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Vpc ID.
func (o GetRocketmqClusterClusterListInfoVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqClusterClusterListInfoVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRocketmqClusterClusterListInfoVpcArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqClusterClusterListInfoVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqClusterClusterListInfoVpc)(nil)).Elem()
}

func (o GetRocketmqClusterClusterListInfoVpcArrayOutput) ToGetRocketmqClusterClusterListInfoVpcArrayOutput() GetRocketmqClusterClusterListInfoVpcArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoVpcArrayOutput) ToGetRocketmqClusterClusterListInfoVpcArrayOutputWithContext(ctx context.Context) GetRocketmqClusterClusterListInfoVpcArrayOutput {
	return o
}

func (o GetRocketmqClusterClusterListInfoVpcArrayOutput) Index(i pulumi.IntInput) GetRocketmqClusterClusterListInfoVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqClusterClusterListInfoVpc {
		return vs[0].([]GetRocketmqClusterClusterListInfoVpc)[vs[1].(int)]
	}).(GetRocketmqClusterClusterListInfoVpcOutput)
}

type GetRocketmqGroupGroup struct {
	// Whether to enable broadcast consumption.
	BroadcastEnable bool `pulumi:"broadcastEnable"`
	// Client protocol.
	ClientProtocol string `pulumi:"clientProtocol"`
	// The number of online consumers.
	ConsumerNum int `pulumi:"consumerNum"`
	// Consumer type. Enumerated values: ACTIVELY or PASSIVELY.
	ConsumerType string `pulumi:"consumerType"`
	// `0`: Cluster consumption mode; `1`: Broadcast consumption mode; `-1`: Unknown.
	ConsumptionMode int `pulumi:"consumptionMode"`
	// Creation time in milliseconds.
	CreateTime int `pulumi:"createTime"`
	// Consumer group name.
	Name string `pulumi:"name"`
	// Whether to enable consumption.
	ReadEnable bool `pulumi:"readEnable"`
	// Remarks (up to 128 characters).
	Remark string `pulumi:"remark"`
	// The number of partitions in a retry topic.
	RetryPartitionNum int `pulumi:"retryPartitionNum"`
	// The total number of heaped messages.
	TotalAccumulative int `pulumi:"totalAccumulative"`
	// Consumption TPS.
	Tps int `pulumi:"tps"`
	// Modification time in milliseconds.
	UpdateTime int `pulumi:"updateTime"`
}

// GetRocketmqGroupGroupInput is an input type that accepts GetRocketmqGroupGroupArgs and GetRocketmqGroupGroupOutput values.
// You can construct a concrete instance of `GetRocketmqGroupGroupInput` via:
//
//          GetRocketmqGroupGroupArgs{...}
type GetRocketmqGroupGroupInput interface {
	pulumi.Input

	ToGetRocketmqGroupGroupOutput() GetRocketmqGroupGroupOutput
	ToGetRocketmqGroupGroupOutputWithContext(context.Context) GetRocketmqGroupGroupOutput
}

type GetRocketmqGroupGroupArgs struct {
	// Whether to enable broadcast consumption.
	BroadcastEnable pulumi.BoolInput `pulumi:"broadcastEnable"`
	// Client protocol.
	ClientProtocol pulumi.StringInput `pulumi:"clientProtocol"`
	// The number of online consumers.
	ConsumerNum pulumi.IntInput `pulumi:"consumerNum"`
	// Consumer type. Enumerated values: ACTIVELY or PASSIVELY.
	ConsumerType pulumi.StringInput `pulumi:"consumerType"`
	// `0`: Cluster consumption mode; `1`: Broadcast consumption mode; `-1`: Unknown.
	ConsumptionMode pulumi.IntInput `pulumi:"consumptionMode"`
	// Creation time in milliseconds.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Consumer group name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether to enable consumption.
	ReadEnable pulumi.BoolInput `pulumi:"readEnable"`
	// Remarks (up to 128 characters).
	Remark pulumi.StringInput `pulumi:"remark"`
	// The number of partitions in a retry topic.
	RetryPartitionNum pulumi.IntInput `pulumi:"retryPartitionNum"`
	// The total number of heaped messages.
	TotalAccumulative pulumi.IntInput `pulumi:"totalAccumulative"`
	// Consumption TPS.
	Tps pulumi.IntInput `pulumi:"tps"`
	// Modification time in milliseconds.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (GetRocketmqGroupGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqGroupGroup)(nil)).Elem()
}

func (i GetRocketmqGroupGroupArgs) ToGetRocketmqGroupGroupOutput() GetRocketmqGroupGroupOutput {
	return i.ToGetRocketmqGroupGroupOutputWithContext(context.Background())
}

func (i GetRocketmqGroupGroupArgs) ToGetRocketmqGroupGroupOutputWithContext(ctx context.Context) GetRocketmqGroupGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqGroupGroupOutput)
}

// GetRocketmqGroupGroupArrayInput is an input type that accepts GetRocketmqGroupGroupArray and GetRocketmqGroupGroupArrayOutput values.
// You can construct a concrete instance of `GetRocketmqGroupGroupArrayInput` via:
//
//          GetRocketmqGroupGroupArray{ GetRocketmqGroupGroupArgs{...} }
type GetRocketmqGroupGroupArrayInput interface {
	pulumi.Input

	ToGetRocketmqGroupGroupArrayOutput() GetRocketmqGroupGroupArrayOutput
	ToGetRocketmqGroupGroupArrayOutputWithContext(context.Context) GetRocketmqGroupGroupArrayOutput
}

type GetRocketmqGroupGroupArray []GetRocketmqGroupGroupInput

func (GetRocketmqGroupGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqGroupGroup)(nil)).Elem()
}

func (i GetRocketmqGroupGroupArray) ToGetRocketmqGroupGroupArrayOutput() GetRocketmqGroupGroupArrayOutput {
	return i.ToGetRocketmqGroupGroupArrayOutputWithContext(context.Background())
}

func (i GetRocketmqGroupGroupArray) ToGetRocketmqGroupGroupArrayOutputWithContext(ctx context.Context) GetRocketmqGroupGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqGroupGroupArrayOutput)
}

type GetRocketmqGroupGroupOutput struct{ *pulumi.OutputState }

func (GetRocketmqGroupGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqGroupGroup)(nil)).Elem()
}

func (o GetRocketmqGroupGroupOutput) ToGetRocketmqGroupGroupOutput() GetRocketmqGroupGroupOutput {
	return o
}

func (o GetRocketmqGroupGroupOutput) ToGetRocketmqGroupGroupOutputWithContext(ctx context.Context) GetRocketmqGroupGroupOutput {
	return o
}

// Whether to enable broadcast consumption.
func (o GetRocketmqGroupGroupOutput) BroadcastEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) bool { return v.BroadcastEnable }).(pulumi.BoolOutput)
}

// Client protocol.
func (o GetRocketmqGroupGroupOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

// The number of online consumers.
func (o GetRocketmqGroupGroupOutput) ConsumerNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.ConsumerNum }).(pulumi.IntOutput)
}

// Consumer type. Enumerated values: ACTIVELY or PASSIVELY.
func (o GetRocketmqGroupGroupOutput) ConsumerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) string { return v.ConsumerType }).(pulumi.StringOutput)
}

// `0`: Cluster consumption mode; `1`: Broadcast consumption mode; `-1`: Unknown.
func (o GetRocketmqGroupGroupOutput) ConsumptionMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.ConsumptionMode }).(pulumi.IntOutput)
}

// Creation time in milliseconds.
func (o GetRocketmqGroupGroupOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Consumer group name.
func (o GetRocketmqGroupGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Whether to enable consumption.
func (o GetRocketmqGroupGroupOutput) ReadEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) bool { return v.ReadEnable }).(pulumi.BoolOutput)
}

// Remarks (up to 128 characters).
func (o GetRocketmqGroupGroupOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) string { return v.Remark }).(pulumi.StringOutput)
}

// The number of partitions in a retry topic.
func (o GetRocketmqGroupGroupOutput) RetryPartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.RetryPartitionNum }).(pulumi.IntOutput)
}

// The total number of heaped messages.
func (o GetRocketmqGroupGroupOutput) TotalAccumulative() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.TotalAccumulative }).(pulumi.IntOutput)
}

// Consumption TPS.
func (o GetRocketmqGroupGroupOutput) Tps() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.Tps }).(pulumi.IntOutput)
}

// Modification time in milliseconds.
func (o GetRocketmqGroupGroupOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqGroupGroup) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type GetRocketmqGroupGroupArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqGroupGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqGroupGroup)(nil)).Elem()
}

func (o GetRocketmqGroupGroupArrayOutput) ToGetRocketmqGroupGroupArrayOutput() GetRocketmqGroupGroupArrayOutput {
	return o
}

func (o GetRocketmqGroupGroupArrayOutput) ToGetRocketmqGroupGroupArrayOutputWithContext(ctx context.Context) GetRocketmqGroupGroupArrayOutput {
	return o
}

func (o GetRocketmqGroupGroupArrayOutput) Index(i pulumi.IntInput) GetRocketmqGroupGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqGroupGroup {
		return vs[0].([]GetRocketmqGroupGroup)[vs[1].(int)]
	}).(GetRocketmqGroupGroupOutput)
}

type GetRocketmqNamespaceNamespace struct {
	// Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
	NamespaceId string `pulumi:"namespaceId"`
	// Public network access point address.
	PublicEndpoint string `pulumi:"publicEndpoint"`
	// Remarks (up to 128 characters).
	Remark string `pulumi:"remark"`
	// Retention time of persisted messages in milliseconds.
	RetentionTime int `pulumi:"retentionTime"`
	// Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
	Ttl int `pulumi:"ttl"`
	// VPC access point address.
	VpcEndpoint string `pulumi:"vpcEndpoint"`
}

// GetRocketmqNamespaceNamespaceInput is an input type that accepts GetRocketmqNamespaceNamespaceArgs and GetRocketmqNamespaceNamespaceOutput values.
// You can construct a concrete instance of `GetRocketmqNamespaceNamespaceInput` via:
//
//          GetRocketmqNamespaceNamespaceArgs{...}
type GetRocketmqNamespaceNamespaceInput interface {
	pulumi.Input

	ToGetRocketmqNamespaceNamespaceOutput() GetRocketmqNamespaceNamespaceOutput
	ToGetRocketmqNamespaceNamespaceOutputWithContext(context.Context) GetRocketmqNamespaceNamespaceOutput
}

type GetRocketmqNamespaceNamespaceArgs struct {
	// Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// Public network access point address.
	PublicEndpoint pulumi.StringInput `pulumi:"publicEndpoint"`
	// Remarks (up to 128 characters).
	Remark pulumi.StringInput `pulumi:"remark"`
	// Retention time of persisted messages in milliseconds.
	RetentionTime pulumi.IntInput `pulumi:"retentionTime"`
	// Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// VPC access point address.
	VpcEndpoint pulumi.StringInput `pulumi:"vpcEndpoint"`
}

func (GetRocketmqNamespaceNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqNamespaceNamespace)(nil)).Elem()
}

func (i GetRocketmqNamespaceNamespaceArgs) ToGetRocketmqNamespaceNamespaceOutput() GetRocketmqNamespaceNamespaceOutput {
	return i.ToGetRocketmqNamespaceNamespaceOutputWithContext(context.Background())
}

func (i GetRocketmqNamespaceNamespaceArgs) ToGetRocketmqNamespaceNamespaceOutputWithContext(ctx context.Context) GetRocketmqNamespaceNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqNamespaceNamespaceOutput)
}

// GetRocketmqNamespaceNamespaceArrayInput is an input type that accepts GetRocketmqNamespaceNamespaceArray and GetRocketmqNamespaceNamespaceArrayOutput values.
// You can construct a concrete instance of `GetRocketmqNamespaceNamespaceArrayInput` via:
//
//          GetRocketmqNamespaceNamespaceArray{ GetRocketmqNamespaceNamespaceArgs{...} }
type GetRocketmqNamespaceNamespaceArrayInput interface {
	pulumi.Input

	ToGetRocketmqNamespaceNamespaceArrayOutput() GetRocketmqNamespaceNamespaceArrayOutput
	ToGetRocketmqNamespaceNamespaceArrayOutputWithContext(context.Context) GetRocketmqNamespaceNamespaceArrayOutput
}

type GetRocketmqNamespaceNamespaceArray []GetRocketmqNamespaceNamespaceInput

func (GetRocketmqNamespaceNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqNamespaceNamespace)(nil)).Elem()
}

func (i GetRocketmqNamespaceNamespaceArray) ToGetRocketmqNamespaceNamespaceArrayOutput() GetRocketmqNamespaceNamespaceArrayOutput {
	return i.ToGetRocketmqNamespaceNamespaceArrayOutputWithContext(context.Background())
}

func (i GetRocketmqNamespaceNamespaceArray) ToGetRocketmqNamespaceNamespaceArrayOutputWithContext(ctx context.Context) GetRocketmqNamespaceNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqNamespaceNamespaceArrayOutput)
}

type GetRocketmqNamespaceNamespaceOutput struct{ *pulumi.OutputState }

func (GetRocketmqNamespaceNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqNamespaceNamespace)(nil)).Elem()
}

func (o GetRocketmqNamespaceNamespaceOutput) ToGetRocketmqNamespaceNamespaceOutput() GetRocketmqNamespaceNamespaceOutput {
	return o
}

func (o GetRocketmqNamespaceNamespaceOutput) ToGetRocketmqNamespaceNamespaceOutputWithContext(ctx context.Context) GetRocketmqNamespaceNamespaceOutput {
	return o
}

// Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
func (o GetRocketmqNamespaceNamespaceOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// Public network access point address.
func (o GetRocketmqNamespaceNamespaceOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

// Remarks (up to 128 characters).
func (o GetRocketmqNamespaceNamespaceOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) string { return v.Remark }).(pulumi.StringOutput)
}

// Retention time of persisted messages in milliseconds.
func (o GetRocketmqNamespaceNamespaceOutput) RetentionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) int { return v.RetentionTime }).(pulumi.IntOutput)
}

// Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
func (o GetRocketmqNamespaceNamespaceOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) int { return v.Ttl }).(pulumi.IntOutput)
}

// VPC access point address.
func (o GetRocketmqNamespaceNamespaceOutput) VpcEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqNamespaceNamespace) string { return v.VpcEndpoint }).(pulumi.StringOutput)
}

type GetRocketmqNamespaceNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqNamespaceNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqNamespaceNamespace)(nil)).Elem()
}

func (o GetRocketmqNamespaceNamespaceArrayOutput) ToGetRocketmqNamespaceNamespaceArrayOutput() GetRocketmqNamespaceNamespaceArrayOutput {
	return o
}

func (o GetRocketmqNamespaceNamespaceArrayOutput) ToGetRocketmqNamespaceNamespaceArrayOutputWithContext(ctx context.Context) GetRocketmqNamespaceNamespaceArrayOutput {
	return o
}

func (o GetRocketmqNamespaceNamespaceArrayOutput) Index(i pulumi.IntInput) GetRocketmqNamespaceNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqNamespaceNamespace {
		return vs[0].([]GetRocketmqNamespaceNamespace)[vs[1].(int)]
	}).(GetRocketmqNamespaceNamespaceOutput)
}

type GetRocketmqRoleRoleSet struct {
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// Remarks.
	Remark string `pulumi:"remark"`
	// Fuzzy query by role name.
	RoleName string `pulumi:"roleName"`
	// Value of the role token.
	Token string `pulumi:"token"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
}

// GetRocketmqRoleRoleSetInput is an input type that accepts GetRocketmqRoleRoleSetArgs and GetRocketmqRoleRoleSetOutput values.
// You can construct a concrete instance of `GetRocketmqRoleRoleSetInput` via:
//
//          GetRocketmqRoleRoleSetArgs{...}
type GetRocketmqRoleRoleSetInput interface {
	pulumi.Input

	ToGetRocketmqRoleRoleSetOutput() GetRocketmqRoleRoleSetOutput
	ToGetRocketmqRoleRoleSetOutputWithContext(context.Context) GetRocketmqRoleRoleSetOutput
}

type GetRocketmqRoleRoleSetArgs struct {
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Remarks.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Fuzzy query by role name.
	RoleName pulumi.StringInput `pulumi:"roleName"`
	// Value of the role token.
	Token pulumi.StringInput `pulumi:"token"`
	// Update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetRocketmqRoleRoleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqRoleRoleSet)(nil)).Elem()
}

func (i GetRocketmqRoleRoleSetArgs) ToGetRocketmqRoleRoleSetOutput() GetRocketmqRoleRoleSetOutput {
	return i.ToGetRocketmqRoleRoleSetOutputWithContext(context.Background())
}

func (i GetRocketmqRoleRoleSetArgs) ToGetRocketmqRoleRoleSetOutputWithContext(ctx context.Context) GetRocketmqRoleRoleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqRoleRoleSetOutput)
}

// GetRocketmqRoleRoleSetArrayInput is an input type that accepts GetRocketmqRoleRoleSetArray and GetRocketmqRoleRoleSetArrayOutput values.
// You can construct a concrete instance of `GetRocketmqRoleRoleSetArrayInput` via:
//
//          GetRocketmqRoleRoleSetArray{ GetRocketmqRoleRoleSetArgs{...} }
type GetRocketmqRoleRoleSetArrayInput interface {
	pulumi.Input

	ToGetRocketmqRoleRoleSetArrayOutput() GetRocketmqRoleRoleSetArrayOutput
	ToGetRocketmqRoleRoleSetArrayOutputWithContext(context.Context) GetRocketmqRoleRoleSetArrayOutput
}

type GetRocketmqRoleRoleSetArray []GetRocketmqRoleRoleSetInput

func (GetRocketmqRoleRoleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqRoleRoleSet)(nil)).Elem()
}

func (i GetRocketmqRoleRoleSetArray) ToGetRocketmqRoleRoleSetArrayOutput() GetRocketmqRoleRoleSetArrayOutput {
	return i.ToGetRocketmqRoleRoleSetArrayOutputWithContext(context.Background())
}

func (i GetRocketmqRoleRoleSetArray) ToGetRocketmqRoleRoleSetArrayOutputWithContext(ctx context.Context) GetRocketmqRoleRoleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqRoleRoleSetArrayOutput)
}

type GetRocketmqRoleRoleSetOutput struct{ *pulumi.OutputState }

func (GetRocketmqRoleRoleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqRoleRoleSet)(nil)).Elem()
}

func (o GetRocketmqRoleRoleSetOutput) ToGetRocketmqRoleRoleSetOutput() GetRocketmqRoleRoleSetOutput {
	return o
}

func (o GetRocketmqRoleRoleSetOutput) ToGetRocketmqRoleRoleSetOutputWithContext(ctx context.Context) GetRocketmqRoleRoleSetOutput {
	return o
}

// Creation time.
func (o GetRocketmqRoleRoleSetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqRoleRoleSet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Remarks.
func (o GetRocketmqRoleRoleSetOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqRoleRoleSet) string { return v.Remark }).(pulumi.StringOutput)
}

// Fuzzy query by role name.
func (o GetRocketmqRoleRoleSetOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqRoleRoleSet) string { return v.RoleName }).(pulumi.StringOutput)
}

// Value of the role token.
func (o GetRocketmqRoleRoleSetOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqRoleRoleSet) string { return v.Token }).(pulumi.StringOutput)
}

// Update time.
func (o GetRocketmqRoleRoleSetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqRoleRoleSet) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetRocketmqRoleRoleSetArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqRoleRoleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqRoleRoleSet)(nil)).Elem()
}

func (o GetRocketmqRoleRoleSetArrayOutput) ToGetRocketmqRoleRoleSetArrayOutput() GetRocketmqRoleRoleSetArrayOutput {
	return o
}

func (o GetRocketmqRoleRoleSetArrayOutput) ToGetRocketmqRoleRoleSetArrayOutputWithContext(ctx context.Context) GetRocketmqRoleRoleSetArrayOutput {
	return o
}

func (o GetRocketmqRoleRoleSetArrayOutput) Index(i pulumi.IntInput) GetRocketmqRoleRoleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqRoleRoleSet {
		return vs[0].([]GetRocketmqRoleRoleSet)[vs[1].(int)]
	}).(GetRocketmqRoleRoleSetOutput)
}

type GetRocketmqTopicTopic struct {
	// Creation time in milliseconds.
	CreateTime int `pulumi:"createTime"`
	// Topic name.
	Name string `pulumi:"name"`
	// The number of read/write partitions.
	PartitionNum int `pulumi:"partitionNum"`
	// Topic name.
	Remark string `pulumi:"remark"`
	// Update time in milliseconds.
	UpdateTime int `pulumi:"updateTime"`
}

// GetRocketmqTopicTopicInput is an input type that accepts GetRocketmqTopicTopicArgs and GetRocketmqTopicTopicOutput values.
// You can construct a concrete instance of `GetRocketmqTopicTopicInput` via:
//
//          GetRocketmqTopicTopicArgs{...}
type GetRocketmqTopicTopicInput interface {
	pulumi.Input

	ToGetRocketmqTopicTopicOutput() GetRocketmqTopicTopicOutput
	ToGetRocketmqTopicTopicOutputWithContext(context.Context) GetRocketmqTopicTopicOutput
}

type GetRocketmqTopicTopicArgs struct {
	// Creation time in milliseconds.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Topic name.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of read/write partitions.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Topic name.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Update time in milliseconds.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (GetRocketmqTopicTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqTopicTopic)(nil)).Elem()
}

func (i GetRocketmqTopicTopicArgs) ToGetRocketmqTopicTopicOutput() GetRocketmqTopicTopicOutput {
	return i.ToGetRocketmqTopicTopicOutputWithContext(context.Background())
}

func (i GetRocketmqTopicTopicArgs) ToGetRocketmqTopicTopicOutputWithContext(ctx context.Context) GetRocketmqTopicTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqTopicTopicOutput)
}

// GetRocketmqTopicTopicArrayInput is an input type that accepts GetRocketmqTopicTopicArray and GetRocketmqTopicTopicArrayOutput values.
// You can construct a concrete instance of `GetRocketmqTopicTopicArrayInput` via:
//
//          GetRocketmqTopicTopicArray{ GetRocketmqTopicTopicArgs{...} }
type GetRocketmqTopicTopicArrayInput interface {
	pulumi.Input

	ToGetRocketmqTopicTopicArrayOutput() GetRocketmqTopicTopicArrayOutput
	ToGetRocketmqTopicTopicArrayOutputWithContext(context.Context) GetRocketmqTopicTopicArrayOutput
}

type GetRocketmqTopicTopicArray []GetRocketmqTopicTopicInput

func (GetRocketmqTopicTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqTopicTopic)(nil)).Elem()
}

func (i GetRocketmqTopicTopicArray) ToGetRocketmqTopicTopicArrayOutput() GetRocketmqTopicTopicArrayOutput {
	return i.ToGetRocketmqTopicTopicArrayOutputWithContext(context.Background())
}

func (i GetRocketmqTopicTopicArray) ToGetRocketmqTopicTopicArrayOutputWithContext(ctx context.Context) GetRocketmqTopicTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRocketmqTopicTopicArrayOutput)
}

type GetRocketmqTopicTopicOutput struct{ *pulumi.OutputState }

func (GetRocketmqTopicTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqTopicTopic)(nil)).Elem()
}

func (o GetRocketmqTopicTopicOutput) ToGetRocketmqTopicTopicOutput() GetRocketmqTopicTopicOutput {
	return o
}

func (o GetRocketmqTopicTopicOutput) ToGetRocketmqTopicTopicOutputWithContext(ctx context.Context) GetRocketmqTopicTopicOutput {
	return o
}

// Creation time in milliseconds.
func (o GetRocketmqTopicTopicOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqTopicTopic) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Topic name.
func (o GetRocketmqTopicTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqTopicTopic) string { return v.Name }).(pulumi.StringOutput)
}

// The number of read/write partitions.
func (o GetRocketmqTopicTopicOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqTopicTopic) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Topic name.
func (o GetRocketmqTopicTopicOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqTopicTopic) string { return v.Remark }).(pulumi.StringOutput)
}

// Update time in milliseconds.
func (o GetRocketmqTopicTopicOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRocketmqTopicTopic) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type GetRocketmqTopicTopicArrayOutput struct{ *pulumi.OutputState }

func (GetRocketmqTopicTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRocketmqTopicTopic)(nil)).Elem()
}

func (o GetRocketmqTopicTopicArrayOutput) ToGetRocketmqTopicTopicArrayOutput() GetRocketmqTopicTopicArrayOutput {
	return o
}

func (o GetRocketmqTopicTopicArrayOutput) ToGetRocketmqTopicTopicArrayOutputWithContext(ctx context.Context) GetRocketmqTopicTopicArrayOutput {
	return o
}

func (o GetRocketmqTopicTopicArrayOutput) Index(i pulumi.IntInput) GetRocketmqTopicTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRocketmqTopicTopic {
		return vs[0].([]GetRocketmqTopicTopic)[vs[1].(int)]
	}).(GetRocketmqTopicTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RocketmqClusterVpcInput)(nil)).Elem(), RocketmqClusterVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketmqClusterVpcArrayInput)(nil)).Elem(), RocketmqClusterVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListInput)(nil)).Elem(), GetRocketmqClusterClusterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListArrayInput)(nil)).Elem(), GetRocketmqClusterClusterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListConfigInput)(nil)).Elem(), GetRocketmqClusterClusterListConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListConfigArrayInput)(nil)).Elem(), GetRocketmqClusterClusterListConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListInfoInput)(nil)).Elem(), GetRocketmqClusterClusterListInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListInfoArrayInput)(nil)).Elem(), GetRocketmqClusterClusterListInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListInfoVpcInput)(nil)).Elem(), GetRocketmqClusterClusterListInfoVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqClusterClusterListInfoVpcArrayInput)(nil)).Elem(), GetRocketmqClusterClusterListInfoVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqGroupGroupInput)(nil)).Elem(), GetRocketmqGroupGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqGroupGroupArrayInput)(nil)).Elem(), GetRocketmqGroupGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqNamespaceNamespaceInput)(nil)).Elem(), GetRocketmqNamespaceNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqNamespaceNamespaceArrayInput)(nil)).Elem(), GetRocketmqNamespaceNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqRoleRoleSetInput)(nil)).Elem(), GetRocketmqRoleRoleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqRoleRoleSetArrayInput)(nil)).Elem(), GetRocketmqRoleRoleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqTopicTopicInput)(nil)).Elem(), GetRocketmqTopicTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRocketmqTopicTopicArrayInput)(nil)).Elem(), GetRocketmqTopicTopicArray{})
	pulumi.RegisterOutputType(RocketmqClusterVpcOutput{})
	pulumi.RegisterOutputType(RocketmqClusterVpcArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListConfigOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListConfigArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListInfoOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListInfoArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListInfoVpcOutput{})
	pulumi.RegisterOutputType(GetRocketmqClusterClusterListInfoVpcArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqGroupGroupOutput{})
	pulumi.RegisterOutputType(GetRocketmqGroupGroupArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqNamespaceNamespaceOutput{})
	pulumi.RegisterOutputType(GetRocketmqNamespaceNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqRoleRoleSetOutput{})
	pulumi.RegisterOutputType(GetRocketmqRoleRoleSetArrayOutput{})
	pulumi.RegisterOutputType(GetRocketmqTopicTopicOutput{})
	pulumi.RegisterOutputType(GetRocketmqTopicTopicArrayOutput{})
}
