// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ModifyDiagDbInstanceOperationInstanceConfs struct {
	// Database inspection switch, Yes/No.
	DailyInspection *string `pulumi:"dailyInspection"`
	// Instance overview switch, Yes/No.
	OverviewDisplay *string `pulumi:"overviewDisplay"`
}

// ModifyDiagDbInstanceOperationInstanceConfsInput is an input type that accepts ModifyDiagDbInstanceOperationInstanceConfsArgs and ModifyDiagDbInstanceOperationInstanceConfsOutput values.
// You can construct a concrete instance of `ModifyDiagDbInstanceOperationInstanceConfsInput` via:
//
//          ModifyDiagDbInstanceOperationInstanceConfsArgs{...}
type ModifyDiagDbInstanceOperationInstanceConfsInput interface {
	pulumi.Input

	ToModifyDiagDbInstanceOperationInstanceConfsOutput() ModifyDiagDbInstanceOperationInstanceConfsOutput
	ToModifyDiagDbInstanceOperationInstanceConfsOutputWithContext(context.Context) ModifyDiagDbInstanceOperationInstanceConfsOutput
}

type ModifyDiagDbInstanceOperationInstanceConfsArgs struct {
	// Database inspection switch, Yes/No.
	DailyInspection pulumi.StringPtrInput `pulumi:"dailyInspection"`
	// Instance overview switch, Yes/No.
	OverviewDisplay pulumi.StringPtrInput `pulumi:"overviewDisplay"`
}

func (ModifyDiagDbInstanceOperationInstanceConfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModifyDiagDbInstanceOperationInstanceConfs)(nil)).Elem()
}

func (i ModifyDiagDbInstanceOperationInstanceConfsArgs) ToModifyDiagDbInstanceOperationInstanceConfsOutput() ModifyDiagDbInstanceOperationInstanceConfsOutput {
	return i.ToModifyDiagDbInstanceOperationInstanceConfsOutputWithContext(context.Background())
}

func (i ModifyDiagDbInstanceOperationInstanceConfsArgs) ToModifyDiagDbInstanceOperationInstanceConfsOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyDiagDbInstanceOperationInstanceConfsOutput)
}

func (i ModifyDiagDbInstanceOperationInstanceConfsArgs) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutput() ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return i.ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(context.Background())
}

func (i ModifyDiagDbInstanceOperationInstanceConfsArgs) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyDiagDbInstanceOperationInstanceConfsOutput).ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(ctx)
}

// ModifyDiagDbInstanceOperationInstanceConfsPtrInput is an input type that accepts ModifyDiagDbInstanceOperationInstanceConfsArgs, ModifyDiagDbInstanceOperationInstanceConfsPtr and ModifyDiagDbInstanceOperationInstanceConfsPtrOutput values.
// You can construct a concrete instance of `ModifyDiagDbInstanceOperationInstanceConfsPtrInput` via:
//
//          ModifyDiagDbInstanceOperationInstanceConfsArgs{...}
//
//  or:
//
//          nil
type ModifyDiagDbInstanceOperationInstanceConfsPtrInput interface {
	pulumi.Input

	ToModifyDiagDbInstanceOperationInstanceConfsPtrOutput() ModifyDiagDbInstanceOperationInstanceConfsPtrOutput
	ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(context.Context) ModifyDiagDbInstanceOperationInstanceConfsPtrOutput
}

type modifyDiagDbInstanceOperationInstanceConfsPtrType ModifyDiagDbInstanceOperationInstanceConfsArgs

func ModifyDiagDbInstanceOperationInstanceConfsPtr(v *ModifyDiagDbInstanceOperationInstanceConfsArgs) ModifyDiagDbInstanceOperationInstanceConfsPtrInput {
	return (*modifyDiagDbInstanceOperationInstanceConfsPtrType)(v)
}

func (*modifyDiagDbInstanceOperationInstanceConfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyDiagDbInstanceOperationInstanceConfs)(nil)).Elem()
}

func (i *modifyDiagDbInstanceOperationInstanceConfsPtrType) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutput() ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return i.ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(context.Background())
}

func (i *modifyDiagDbInstanceOperationInstanceConfsPtrType) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyDiagDbInstanceOperationInstanceConfsPtrOutput)
}

type ModifyDiagDbInstanceOperationInstanceConfsOutput struct{ *pulumi.OutputState }

func (ModifyDiagDbInstanceOperationInstanceConfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModifyDiagDbInstanceOperationInstanceConfs)(nil)).Elem()
}

func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) ToModifyDiagDbInstanceOperationInstanceConfsOutput() ModifyDiagDbInstanceOperationInstanceConfsOutput {
	return o
}

func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) ToModifyDiagDbInstanceOperationInstanceConfsOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsOutput {
	return o
}

func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutput() ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return o.ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(context.Background())
}

func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModifyDiagDbInstanceOperationInstanceConfs) *ModifyDiagDbInstanceOperationInstanceConfs {
		return &v
	}).(ModifyDiagDbInstanceOperationInstanceConfsPtrOutput)
}

// Database inspection switch, Yes/No.
func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) DailyInspection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyDiagDbInstanceOperationInstanceConfs) *string { return v.DailyInspection }).(pulumi.StringPtrOutput)
}

// Instance overview switch, Yes/No.
func (o ModifyDiagDbInstanceOperationInstanceConfsOutput) OverviewDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyDiagDbInstanceOperationInstanceConfs) *string { return v.OverviewDisplay }).(pulumi.StringPtrOutput)
}

type ModifyDiagDbInstanceOperationInstanceConfsPtrOutput struct{ *pulumi.OutputState }

func (ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyDiagDbInstanceOperationInstanceConfs)(nil)).Elem()
}

func (o ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutput() ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return o
}

func (o ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) ToModifyDiagDbInstanceOperationInstanceConfsPtrOutputWithContext(ctx context.Context) ModifyDiagDbInstanceOperationInstanceConfsPtrOutput {
	return o
}

func (o ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) Elem() ModifyDiagDbInstanceOperationInstanceConfsOutput {
	return o.ApplyT(func(v *ModifyDiagDbInstanceOperationInstanceConfs) ModifyDiagDbInstanceOperationInstanceConfs {
		if v != nil {
			return *v
		}
		var ret ModifyDiagDbInstanceOperationInstanceConfs
		return ret
	}).(ModifyDiagDbInstanceOperationInstanceConfsOutput)
}

// Database inspection switch, Yes/No.
func (o ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) DailyInspection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModifyDiagDbInstanceOperationInstanceConfs) *string {
		if v == nil {
			return nil
		}
		return v.DailyInspection
	}).(pulumi.StringPtrOutput)
}

// Instance overview switch, Yes/No.
func (o ModifyDiagDbInstanceOperationInstanceConfsPtrOutput) OverviewDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModifyDiagDbInstanceOperationInstanceConfs) *string {
		if v == nil {
			return nil
		}
		return v.OverviewDisplay
	}).(pulumi.StringPtrOutput)
}

type SqlFilterSessionToken struct {
	// password.
	Password string `pulumi:"password"`
	// user name.
	User string `pulumi:"user"`
}

// SqlFilterSessionTokenInput is an input type that accepts SqlFilterSessionTokenArgs and SqlFilterSessionTokenOutput values.
// You can construct a concrete instance of `SqlFilterSessionTokenInput` via:
//
//          SqlFilterSessionTokenArgs{...}
type SqlFilterSessionTokenInput interface {
	pulumi.Input

	ToSqlFilterSessionTokenOutput() SqlFilterSessionTokenOutput
	ToSqlFilterSessionTokenOutputWithContext(context.Context) SqlFilterSessionTokenOutput
}

type SqlFilterSessionTokenArgs struct {
	// password.
	Password pulumi.StringInput `pulumi:"password"`
	// user name.
	User pulumi.StringInput `pulumi:"user"`
}

func (SqlFilterSessionTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlFilterSessionToken)(nil)).Elem()
}

func (i SqlFilterSessionTokenArgs) ToSqlFilterSessionTokenOutput() SqlFilterSessionTokenOutput {
	return i.ToSqlFilterSessionTokenOutputWithContext(context.Background())
}

func (i SqlFilterSessionTokenArgs) ToSqlFilterSessionTokenOutputWithContext(ctx context.Context) SqlFilterSessionTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlFilterSessionTokenOutput)
}

func (i SqlFilterSessionTokenArgs) ToSqlFilterSessionTokenPtrOutput() SqlFilterSessionTokenPtrOutput {
	return i.ToSqlFilterSessionTokenPtrOutputWithContext(context.Background())
}

func (i SqlFilterSessionTokenArgs) ToSqlFilterSessionTokenPtrOutputWithContext(ctx context.Context) SqlFilterSessionTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlFilterSessionTokenOutput).ToSqlFilterSessionTokenPtrOutputWithContext(ctx)
}

// SqlFilterSessionTokenPtrInput is an input type that accepts SqlFilterSessionTokenArgs, SqlFilterSessionTokenPtr and SqlFilterSessionTokenPtrOutput values.
// You can construct a concrete instance of `SqlFilterSessionTokenPtrInput` via:
//
//          SqlFilterSessionTokenArgs{...}
//
//  or:
//
//          nil
type SqlFilterSessionTokenPtrInput interface {
	pulumi.Input

	ToSqlFilterSessionTokenPtrOutput() SqlFilterSessionTokenPtrOutput
	ToSqlFilterSessionTokenPtrOutputWithContext(context.Context) SqlFilterSessionTokenPtrOutput
}

type sqlFilterSessionTokenPtrType SqlFilterSessionTokenArgs

func SqlFilterSessionTokenPtr(v *SqlFilterSessionTokenArgs) SqlFilterSessionTokenPtrInput {
	return (*sqlFilterSessionTokenPtrType)(v)
}

func (*sqlFilterSessionTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlFilterSessionToken)(nil)).Elem()
}

func (i *sqlFilterSessionTokenPtrType) ToSqlFilterSessionTokenPtrOutput() SqlFilterSessionTokenPtrOutput {
	return i.ToSqlFilterSessionTokenPtrOutputWithContext(context.Background())
}

func (i *sqlFilterSessionTokenPtrType) ToSqlFilterSessionTokenPtrOutputWithContext(ctx context.Context) SqlFilterSessionTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlFilterSessionTokenPtrOutput)
}

type SqlFilterSessionTokenOutput struct{ *pulumi.OutputState }

func (SqlFilterSessionTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlFilterSessionToken)(nil)).Elem()
}

func (o SqlFilterSessionTokenOutput) ToSqlFilterSessionTokenOutput() SqlFilterSessionTokenOutput {
	return o
}

func (o SqlFilterSessionTokenOutput) ToSqlFilterSessionTokenOutputWithContext(ctx context.Context) SqlFilterSessionTokenOutput {
	return o
}

func (o SqlFilterSessionTokenOutput) ToSqlFilterSessionTokenPtrOutput() SqlFilterSessionTokenPtrOutput {
	return o.ToSqlFilterSessionTokenPtrOutputWithContext(context.Background())
}

func (o SqlFilterSessionTokenOutput) ToSqlFilterSessionTokenPtrOutputWithContext(ctx context.Context) SqlFilterSessionTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlFilterSessionToken) *SqlFilterSessionToken {
		return &v
	}).(SqlFilterSessionTokenPtrOutput)
}

// password.
func (o SqlFilterSessionTokenOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SqlFilterSessionToken) string { return v.Password }).(pulumi.StringOutput)
}

// user name.
func (o SqlFilterSessionTokenOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v SqlFilterSessionToken) string { return v.User }).(pulumi.StringOutput)
}

type SqlFilterSessionTokenPtrOutput struct{ *pulumi.OutputState }

func (SqlFilterSessionTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlFilterSessionToken)(nil)).Elem()
}

func (o SqlFilterSessionTokenPtrOutput) ToSqlFilterSessionTokenPtrOutput() SqlFilterSessionTokenPtrOutput {
	return o
}

func (o SqlFilterSessionTokenPtrOutput) ToSqlFilterSessionTokenPtrOutputWithContext(ctx context.Context) SqlFilterSessionTokenPtrOutput {
	return o
}

func (o SqlFilterSessionTokenPtrOutput) Elem() SqlFilterSessionTokenOutput {
	return o.ApplyT(func(v *SqlFilterSessionToken) SqlFilterSessionToken {
		if v != nil {
			return *v
		}
		var ret SqlFilterSessionToken
		return ret
	}).(SqlFilterSessionTokenOutput)
}

// password.
func (o SqlFilterSessionTokenPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlFilterSessionToken) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// user name.
func (o SqlFilterSessionTokenPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlFilterSessionToken) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type TdsqlAuditLogFilter struct {
	// Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
	AffectRows *int `pulumi:"affectRows"`
	// Database name.
	DbNames []string `pulumi:"dbNames"`
	// Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
	ExecTime *int `pulumi:"execTime"`
	// Client Address.
	Hosts []string `pulumi:"hosts"`
	// Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
	SentRows *int `pulumi:"sentRows"`
	// Username.
	Users []string `pulumi:"users"`
}

// TdsqlAuditLogFilterInput is an input type that accepts TdsqlAuditLogFilterArgs and TdsqlAuditLogFilterOutput values.
// You can construct a concrete instance of `TdsqlAuditLogFilterInput` via:
//
//          TdsqlAuditLogFilterArgs{...}
type TdsqlAuditLogFilterInput interface {
	pulumi.Input

	ToTdsqlAuditLogFilterOutput() TdsqlAuditLogFilterOutput
	ToTdsqlAuditLogFilterOutputWithContext(context.Context) TdsqlAuditLogFilterOutput
}

type TdsqlAuditLogFilterArgs struct {
	// Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
	AffectRows pulumi.IntPtrInput `pulumi:"affectRows"`
	// Database name.
	DbNames pulumi.StringArrayInput `pulumi:"dbNames"`
	// Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
	ExecTime pulumi.IntPtrInput `pulumi:"execTime"`
	// Client Address.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
	SentRows pulumi.IntPtrInput `pulumi:"sentRows"`
	// Username.
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (TdsqlAuditLogFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TdsqlAuditLogFilter)(nil)).Elem()
}

func (i TdsqlAuditLogFilterArgs) ToTdsqlAuditLogFilterOutput() TdsqlAuditLogFilterOutput {
	return i.ToTdsqlAuditLogFilterOutputWithContext(context.Background())
}

func (i TdsqlAuditLogFilterArgs) ToTdsqlAuditLogFilterOutputWithContext(ctx context.Context) TdsqlAuditLogFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TdsqlAuditLogFilterOutput)
}

func (i TdsqlAuditLogFilterArgs) ToTdsqlAuditLogFilterPtrOutput() TdsqlAuditLogFilterPtrOutput {
	return i.ToTdsqlAuditLogFilterPtrOutputWithContext(context.Background())
}

func (i TdsqlAuditLogFilterArgs) ToTdsqlAuditLogFilterPtrOutputWithContext(ctx context.Context) TdsqlAuditLogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TdsqlAuditLogFilterOutput).ToTdsqlAuditLogFilterPtrOutputWithContext(ctx)
}

// TdsqlAuditLogFilterPtrInput is an input type that accepts TdsqlAuditLogFilterArgs, TdsqlAuditLogFilterPtr and TdsqlAuditLogFilterPtrOutput values.
// You can construct a concrete instance of `TdsqlAuditLogFilterPtrInput` via:
//
//          TdsqlAuditLogFilterArgs{...}
//
//  or:
//
//          nil
type TdsqlAuditLogFilterPtrInput interface {
	pulumi.Input

	ToTdsqlAuditLogFilterPtrOutput() TdsqlAuditLogFilterPtrOutput
	ToTdsqlAuditLogFilterPtrOutputWithContext(context.Context) TdsqlAuditLogFilterPtrOutput
}

type tdsqlAuditLogFilterPtrType TdsqlAuditLogFilterArgs

func TdsqlAuditLogFilterPtr(v *TdsqlAuditLogFilterArgs) TdsqlAuditLogFilterPtrInput {
	return (*tdsqlAuditLogFilterPtrType)(v)
}

func (*tdsqlAuditLogFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TdsqlAuditLogFilter)(nil)).Elem()
}

func (i *tdsqlAuditLogFilterPtrType) ToTdsqlAuditLogFilterPtrOutput() TdsqlAuditLogFilterPtrOutput {
	return i.ToTdsqlAuditLogFilterPtrOutputWithContext(context.Background())
}

func (i *tdsqlAuditLogFilterPtrType) ToTdsqlAuditLogFilterPtrOutputWithContext(ctx context.Context) TdsqlAuditLogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TdsqlAuditLogFilterPtrOutput)
}

type TdsqlAuditLogFilterOutput struct{ *pulumi.OutputState }

func (TdsqlAuditLogFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TdsqlAuditLogFilter)(nil)).Elem()
}

func (o TdsqlAuditLogFilterOutput) ToTdsqlAuditLogFilterOutput() TdsqlAuditLogFilterOutput {
	return o
}

func (o TdsqlAuditLogFilterOutput) ToTdsqlAuditLogFilterOutputWithContext(ctx context.Context) TdsqlAuditLogFilterOutput {
	return o
}

func (o TdsqlAuditLogFilterOutput) ToTdsqlAuditLogFilterPtrOutput() TdsqlAuditLogFilterPtrOutput {
	return o.ToTdsqlAuditLogFilterPtrOutputWithContext(context.Background())
}

func (o TdsqlAuditLogFilterOutput) ToTdsqlAuditLogFilterPtrOutputWithContext(ctx context.Context) TdsqlAuditLogFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TdsqlAuditLogFilter) *TdsqlAuditLogFilter {
		return &v
	}).(TdsqlAuditLogFilterPtrOutput)
}

// Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
func (o TdsqlAuditLogFilterOutput) AffectRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) *int { return v.AffectRows }).(pulumi.IntPtrOutput)
}

// Database name.
func (o TdsqlAuditLogFilterOutput) DbNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) []string { return v.DbNames }).(pulumi.StringArrayOutput)
}

// Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
func (o TdsqlAuditLogFilterOutput) ExecTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) *int { return v.ExecTime }).(pulumi.IntPtrOutput)
}

// Client Address.
func (o TdsqlAuditLogFilterOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
func (o TdsqlAuditLogFilterOutput) SentRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) *int { return v.SentRows }).(pulumi.IntPtrOutput)
}

// Username.
func (o TdsqlAuditLogFilterOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TdsqlAuditLogFilter) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type TdsqlAuditLogFilterPtrOutput struct{ *pulumi.OutputState }

func (TdsqlAuditLogFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TdsqlAuditLogFilter)(nil)).Elem()
}

func (o TdsqlAuditLogFilterPtrOutput) ToTdsqlAuditLogFilterPtrOutput() TdsqlAuditLogFilterPtrOutput {
	return o
}

func (o TdsqlAuditLogFilterPtrOutput) ToTdsqlAuditLogFilterPtrOutputWithContext(ctx context.Context) TdsqlAuditLogFilterPtrOutput {
	return o
}

func (o TdsqlAuditLogFilterPtrOutput) Elem() TdsqlAuditLogFilterOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) TdsqlAuditLogFilter {
		if v != nil {
			return *v
		}
		var ret TdsqlAuditLogFilter
		return ret
	}).(TdsqlAuditLogFilterOutput)
}

// Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
func (o TdsqlAuditLogFilterPtrOutput) AffectRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) *int {
		if v == nil {
			return nil
		}
		return v.AffectRows
	}).(pulumi.IntPtrOutput)
}

// Database name.
func (o TdsqlAuditLogFilterPtrOutput) DbNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) []string {
		if v == nil {
			return nil
		}
		return v.DbNames
	}).(pulumi.StringArrayOutput)
}

// Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
func (o TdsqlAuditLogFilterPtrOutput) ExecTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) *int {
		if v == nil {
			return nil
		}
		return v.ExecTime
	}).(pulumi.IntPtrOutput)
}

// Client Address.
func (o TdsqlAuditLogFilterPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
func (o TdsqlAuditLogFilterPtrOutput) SentRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) *int {
		if v == nil {
			return nil
		}
		return v.SentRows
	}).(pulumi.IntPtrOutput)
}

// Username.
func (o TdsqlAuditLogFilterPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TdsqlAuditLogFilter) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type GetDiagEventsList struct {
	// diag item.
	DiagItem string `pulumi:"diagItem"`
	// diag type.
	DiagType string `pulumi:"diagType"`
	// end time.
	EndTime string `pulumi:"endTime"`
	// event id.
	EventId int `pulumi:"eventId"`
	// instance id.
	InstanceId string `pulumi:"instanceId"`
	// metric.
	Metric string `pulumi:"metric"`
	// outline.
	Outline string `pulumi:"outline"`
	// region.
	Region string `pulumi:"region"`
	// severity.
	Severity int `pulumi:"severity"`
	// start time.
	StartTime string `pulumi:"startTime"`
}

// GetDiagEventsListInput is an input type that accepts GetDiagEventsListArgs and GetDiagEventsListOutput values.
// You can construct a concrete instance of `GetDiagEventsListInput` via:
//
//          GetDiagEventsListArgs{...}
type GetDiagEventsListInput interface {
	pulumi.Input

	ToGetDiagEventsListOutput() GetDiagEventsListOutput
	ToGetDiagEventsListOutputWithContext(context.Context) GetDiagEventsListOutput
}

type GetDiagEventsListArgs struct {
	// diag item.
	DiagItem pulumi.StringInput `pulumi:"diagItem"`
	// diag type.
	DiagType pulumi.StringInput `pulumi:"diagType"`
	// end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// event id.
	EventId pulumi.IntInput `pulumi:"eventId"`
	// instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// metric.
	Metric pulumi.StringInput `pulumi:"metric"`
	// outline.
	Outline pulumi.StringInput `pulumi:"outline"`
	// region.
	Region pulumi.StringInput `pulumi:"region"`
	// severity.
	Severity pulumi.IntInput `pulumi:"severity"`
	// start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetDiagEventsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventsList)(nil)).Elem()
}

func (i GetDiagEventsListArgs) ToGetDiagEventsListOutput() GetDiagEventsListOutput {
	return i.ToGetDiagEventsListOutputWithContext(context.Background())
}

func (i GetDiagEventsListArgs) ToGetDiagEventsListOutputWithContext(ctx context.Context) GetDiagEventsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiagEventsListOutput)
}

// GetDiagEventsListArrayInput is an input type that accepts GetDiagEventsListArray and GetDiagEventsListArrayOutput values.
// You can construct a concrete instance of `GetDiagEventsListArrayInput` via:
//
//          GetDiagEventsListArray{ GetDiagEventsListArgs{...} }
type GetDiagEventsListArrayInput interface {
	pulumi.Input

	ToGetDiagEventsListArrayOutput() GetDiagEventsListArrayOutput
	ToGetDiagEventsListArrayOutputWithContext(context.Context) GetDiagEventsListArrayOutput
}

type GetDiagEventsListArray []GetDiagEventsListInput

func (GetDiagEventsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiagEventsList)(nil)).Elem()
}

func (i GetDiagEventsListArray) ToGetDiagEventsListArrayOutput() GetDiagEventsListArrayOutput {
	return i.ToGetDiagEventsListArrayOutputWithContext(context.Background())
}

func (i GetDiagEventsListArray) ToGetDiagEventsListArrayOutputWithContext(ctx context.Context) GetDiagEventsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiagEventsListArrayOutput)
}

type GetDiagEventsListOutput struct{ *pulumi.OutputState }

func (GetDiagEventsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventsList)(nil)).Elem()
}

func (o GetDiagEventsListOutput) ToGetDiagEventsListOutput() GetDiagEventsListOutput {
	return o
}

func (o GetDiagEventsListOutput) ToGetDiagEventsListOutputWithContext(ctx context.Context) GetDiagEventsListOutput {
	return o
}

// diag item.
func (o GetDiagEventsListOutput) DiagItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.DiagItem }).(pulumi.StringOutput)
}

// diag type.
func (o GetDiagEventsListOutput) DiagType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.DiagType }).(pulumi.StringOutput)
}

// end time.
func (o GetDiagEventsListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.EndTime }).(pulumi.StringOutput)
}

// event id.
func (o GetDiagEventsListOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagEventsList) int { return v.EventId }).(pulumi.IntOutput)
}

// instance id.
func (o GetDiagEventsListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// metric.
func (o GetDiagEventsListOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.Metric }).(pulumi.StringOutput)
}

// outline.
func (o GetDiagEventsListOutput) Outline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.Outline }).(pulumi.StringOutput)
}

// region.
func (o GetDiagEventsListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.Region }).(pulumi.StringOutput)
}

// severity.
func (o GetDiagEventsListOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagEventsList) int { return v.Severity }).(pulumi.IntOutput)
}

// start time.
func (o GetDiagEventsListOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsList) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetDiagEventsListArrayOutput struct{ *pulumi.OutputState }

func (GetDiagEventsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiagEventsList)(nil)).Elem()
}

func (o GetDiagEventsListArrayOutput) ToGetDiagEventsListArrayOutput() GetDiagEventsListArrayOutput {
	return o
}

func (o GetDiagEventsListArrayOutput) ToGetDiagEventsListArrayOutputWithContext(ctx context.Context) GetDiagEventsListArrayOutput {
	return o
}

func (o GetDiagEventsListArrayOutput) Index(i pulumi.IntInput) GetDiagEventsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiagEventsList {
		return vs[0].([]GetDiagEventsList)[vs[1].(int)]
	}).(GetDiagEventsListOutput)
}

type GetDiagHistoryEvent struct {
	// Description of the diagnostic item.
	DiagItem string `pulumi:"diagItem"`
	// Diagnostic type.
	DiagType string `pulumi:"diagType"`
	// End time, such as `2019-09-11 12:13:14`, the interval between the end time and the start time can be up to 2 days.
	EndTime string `pulumi:"endTime"`
	// Event unique ID.
	EventId int `pulumi:"eventId"`
	// instance id.
	InstanceId string `pulumi:"instanceId"`
	// reserved text. Note: This field may return null, indicating that no valid value can be obtained.
	Metric string `pulumi:"metric"`
	// Diagnostic summary.
	Outline string `pulumi:"outline"`
	// region.
	Region string `pulumi:"region"`
	// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
	Severity int `pulumi:"severity"`
	// Start time, such as `2019-09-10 12:13:14`.
	StartTime string `pulumi:"startTime"`
}

// GetDiagHistoryEventInput is an input type that accepts GetDiagHistoryEventArgs and GetDiagHistoryEventOutput values.
// You can construct a concrete instance of `GetDiagHistoryEventInput` via:
//
//          GetDiagHistoryEventArgs{...}
type GetDiagHistoryEventInput interface {
	pulumi.Input

	ToGetDiagHistoryEventOutput() GetDiagHistoryEventOutput
	ToGetDiagHistoryEventOutputWithContext(context.Context) GetDiagHistoryEventOutput
}

type GetDiagHistoryEventArgs struct {
	// Description of the diagnostic item.
	DiagItem pulumi.StringInput `pulumi:"diagItem"`
	// Diagnostic type.
	DiagType pulumi.StringInput `pulumi:"diagType"`
	// End time, such as `2019-09-11 12:13:14`, the interval between the end time and the start time can be up to 2 days.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Event unique ID.
	EventId pulumi.IntInput `pulumi:"eventId"`
	// instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// reserved text. Note: This field may return null, indicating that no valid value can be obtained.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Diagnostic summary.
	Outline pulumi.StringInput `pulumi:"outline"`
	// region.
	Region pulumi.StringInput `pulumi:"region"`
	// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
	Severity pulumi.IntInput `pulumi:"severity"`
	// Start time, such as `2019-09-10 12:13:14`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetDiagHistoryEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagHistoryEvent)(nil)).Elem()
}

func (i GetDiagHistoryEventArgs) ToGetDiagHistoryEventOutput() GetDiagHistoryEventOutput {
	return i.ToGetDiagHistoryEventOutputWithContext(context.Background())
}

func (i GetDiagHistoryEventArgs) ToGetDiagHistoryEventOutputWithContext(ctx context.Context) GetDiagHistoryEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiagHistoryEventOutput)
}

// GetDiagHistoryEventArrayInput is an input type that accepts GetDiagHistoryEventArray and GetDiagHistoryEventArrayOutput values.
// You can construct a concrete instance of `GetDiagHistoryEventArrayInput` via:
//
//          GetDiagHistoryEventArray{ GetDiagHistoryEventArgs{...} }
type GetDiagHistoryEventArrayInput interface {
	pulumi.Input

	ToGetDiagHistoryEventArrayOutput() GetDiagHistoryEventArrayOutput
	ToGetDiagHistoryEventArrayOutputWithContext(context.Context) GetDiagHistoryEventArrayOutput
}

type GetDiagHistoryEventArray []GetDiagHistoryEventInput

func (GetDiagHistoryEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiagHistoryEvent)(nil)).Elem()
}

func (i GetDiagHistoryEventArray) ToGetDiagHistoryEventArrayOutput() GetDiagHistoryEventArrayOutput {
	return i.ToGetDiagHistoryEventArrayOutputWithContext(context.Background())
}

func (i GetDiagHistoryEventArray) ToGetDiagHistoryEventArrayOutputWithContext(ctx context.Context) GetDiagHistoryEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiagHistoryEventArrayOutput)
}

type GetDiagHistoryEventOutput struct{ *pulumi.OutputState }

func (GetDiagHistoryEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagHistoryEvent)(nil)).Elem()
}

func (o GetDiagHistoryEventOutput) ToGetDiagHistoryEventOutput() GetDiagHistoryEventOutput {
	return o
}

func (o GetDiagHistoryEventOutput) ToGetDiagHistoryEventOutputWithContext(ctx context.Context) GetDiagHistoryEventOutput {
	return o
}

// Description of the diagnostic item.
func (o GetDiagHistoryEventOutput) DiagItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.DiagItem }).(pulumi.StringOutput)
}

// Diagnostic type.
func (o GetDiagHistoryEventOutput) DiagType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.DiagType }).(pulumi.StringOutput)
}

// End time, such as `2019-09-11 12:13:14`, the interval between the end time and the start time can be up to 2 days.
func (o GetDiagHistoryEventOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.EndTime }).(pulumi.StringOutput)
}

// Event unique ID.
func (o GetDiagHistoryEventOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) int { return v.EventId }).(pulumi.IntOutput)
}

// instance id.
func (o GetDiagHistoryEventOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.InstanceId }).(pulumi.StringOutput)
}

// reserved text. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetDiagHistoryEventOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.Metric }).(pulumi.StringOutput)
}

// Diagnostic summary.
func (o GetDiagHistoryEventOutput) Outline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.Outline }).(pulumi.StringOutput)
}

// region.
func (o GetDiagHistoryEventOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.Region }).(pulumi.StringOutput)
}

// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
func (o GetDiagHistoryEventOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) int { return v.Severity }).(pulumi.IntOutput)
}

// Start time, such as `2019-09-10 12:13:14`.
func (o GetDiagHistoryEventOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagHistoryEvent) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetDiagHistoryEventArrayOutput struct{ *pulumi.OutputState }

func (GetDiagHistoryEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiagHistoryEvent)(nil)).Elem()
}

func (o GetDiagHistoryEventArrayOutput) ToGetDiagHistoryEventArrayOutput() GetDiagHistoryEventArrayOutput {
	return o
}

func (o GetDiagHistoryEventArrayOutput) ToGetDiagHistoryEventArrayOutputWithContext(ctx context.Context) GetDiagHistoryEventArrayOutput {
	return o
}

func (o GetDiagHistoryEventArrayOutput) Index(i pulumi.IntInput) GetDiagHistoryEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiagHistoryEvent {
		return vs[0].([]GetDiagHistoryEvent)[vs[1].(int)]
	}).(GetDiagHistoryEventOutput)
}

type GetHealthScoresData struct {
	// The total number of abnormal events.
	EventsTotalCount int `pulumi:"eventsTotalCount"`
	// Health level, such as: HEALTH, SUB_HEALTH, RISK, HIGH_RISK.
	HealthLevel string `pulumi:"healthLevel"`
	// Health score.
	HealthScore int `pulumi:"healthScore"`
	// Exception details.
	IssueTypes []GetHealthScoresDataIssueType `pulumi:"issueTypes"`
}

// GetHealthScoresDataInput is an input type that accepts GetHealthScoresDataArgs and GetHealthScoresDataOutput values.
// You can construct a concrete instance of `GetHealthScoresDataInput` via:
//
//          GetHealthScoresDataArgs{...}
type GetHealthScoresDataInput interface {
	pulumi.Input

	ToGetHealthScoresDataOutput() GetHealthScoresDataOutput
	ToGetHealthScoresDataOutputWithContext(context.Context) GetHealthScoresDataOutput
}

type GetHealthScoresDataArgs struct {
	// The total number of abnormal events.
	EventsTotalCount pulumi.IntInput `pulumi:"eventsTotalCount"`
	// Health level, such as: HEALTH, SUB_HEALTH, RISK, HIGH_RISK.
	HealthLevel pulumi.StringInput `pulumi:"healthLevel"`
	// Health score.
	HealthScore pulumi.IntInput `pulumi:"healthScore"`
	// Exception details.
	IssueTypes GetHealthScoresDataIssueTypeArrayInput `pulumi:"issueTypes"`
}

func (GetHealthScoresDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresData)(nil)).Elem()
}

func (i GetHealthScoresDataArgs) ToGetHealthScoresDataOutput() GetHealthScoresDataOutput {
	return i.ToGetHealthScoresDataOutputWithContext(context.Background())
}

func (i GetHealthScoresDataArgs) ToGetHealthScoresDataOutputWithContext(ctx context.Context) GetHealthScoresDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataOutput)
}

// GetHealthScoresDataArrayInput is an input type that accepts GetHealthScoresDataArray and GetHealthScoresDataArrayOutput values.
// You can construct a concrete instance of `GetHealthScoresDataArrayInput` via:
//
//          GetHealthScoresDataArray{ GetHealthScoresDataArgs{...} }
type GetHealthScoresDataArrayInput interface {
	pulumi.Input

	ToGetHealthScoresDataArrayOutput() GetHealthScoresDataArrayOutput
	ToGetHealthScoresDataArrayOutputWithContext(context.Context) GetHealthScoresDataArrayOutput
}

type GetHealthScoresDataArray []GetHealthScoresDataInput

func (GetHealthScoresDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresData)(nil)).Elem()
}

func (i GetHealthScoresDataArray) ToGetHealthScoresDataArrayOutput() GetHealthScoresDataArrayOutput {
	return i.ToGetHealthScoresDataArrayOutputWithContext(context.Background())
}

func (i GetHealthScoresDataArray) ToGetHealthScoresDataArrayOutputWithContext(ctx context.Context) GetHealthScoresDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataArrayOutput)
}

type GetHealthScoresDataOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresData)(nil)).Elem()
}

func (o GetHealthScoresDataOutput) ToGetHealthScoresDataOutput() GetHealthScoresDataOutput {
	return o
}

func (o GetHealthScoresDataOutput) ToGetHealthScoresDataOutputWithContext(ctx context.Context) GetHealthScoresDataOutput {
	return o
}

// The total number of abnormal events.
func (o GetHealthScoresDataOutput) EventsTotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresData) int { return v.EventsTotalCount }).(pulumi.IntOutput)
}

// Health level, such as: HEALTH, SUB_HEALTH, RISK, HIGH_RISK.
func (o GetHealthScoresDataOutput) HealthLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresData) string { return v.HealthLevel }).(pulumi.StringOutput)
}

// Health score.
func (o GetHealthScoresDataOutput) HealthScore() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresData) int { return v.HealthScore }).(pulumi.IntOutput)
}

// Exception details.
func (o GetHealthScoresDataOutput) IssueTypes() GetHealthScoresDataIssueTypeArrayOutput {
	return o.ApplyT(func(v GetHealthScoresData) []GetHealthScoresDataIssueType { return v.IssueTypes }).(GetHealthScoresDataIssueTypeArrayOutput)
}

type GetHealthScoresDataArrayOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresData)(nil)).Elem()
}

func (o GetHealthScoresDataArrayOutput) ToGetHealthScoresDataArrayOutput() GetHealthScoresDataArrayOutput {
	return o
}

func (o GetHealthScoresDataArrayOutput) ToGetHealthScoresDataArrayOutputWithContext(ctx context.Context) GetHealthScoresDataArrayOutput {
	return o
}

func (o GetHealthScoresDataArrayOutput) Index(i pulumi.IntInput) GetHealthScoresDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHealthScoresData {
		return vs[0].([]GetHealthScoresData)[vs[1].(int)]
	}).(GetHealthScoresDataOutput)
}

type GetHealthScoresDataIssueType struct {
	// unusual event.
	Events []GetHealthScoresDataIssueTypeEvent `pulumi:"events"`
	// Index classification: AVAILABILITY: availability, MAINTAINABILITY: maintainability, PERFORMANCE, performance, RELIABILITY reliability.
	IssueType string `pulumi:"issueType"`
	// The total number of abnormal events.
	TotalCount int `pulumi:"totalCount"`
}

// GetHealthScoresDataIssueTypeInput is an input type that accepts GetHealthScoresDataIssueTypeArgs and GetHealthScoresDataIssueTypeOutput values.
// You can construct a concrete instance of `GetHealthScoresDataIssueTypeInput` via:
//
//          GetHealthScoresDataIssueTypeArgs{...}
type GetHealthScoresDataIssueTypeInput interface {
	pulumi.Input

	ToGetHealthScoresDataIssueTypeOutput() GetHealthScoresDataIssueTypeOutput
	ToGetHealthScoresDataIssueTypeOutputWithContext(context.Context) GetHealthScoresDataIssueTypeOutput
}

type GetHealthScoresDataIssueTypeArgs struct {
	// unusual event.
	Events GetHealthScoresDataIssueTypeEventArrayInput `pulumi:"events"`
	// Index classification: AVAILABILITY: availability, MAINTAINABILITY: maintainability, PERFORMANCE, performance, RELIABILITY reliability.
	IssueType pulumi.StringInput `pulumi:"issueType"`
	// The total number of abnormal events.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetHealthScoresDataIssueTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresDataIssueType)(nil)).Elem()
}

func (i GetHealthScoresDataIssueTypeArgs) ToGetHealthScoresDataIssueTypeOutput() GetHealthScoresDataIssueTypeOutput {
	return i.ToGetHealthScoresDataIssueTypeOutputWithContext(context.Background())
}

func (i GetHealthScoresDataIssueTypeArgs) ToGetHealthScoresDataIssueTypeOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataIssueTypeOutput)
}

// GetHealthScoresDataIssueTypeArrayInput is an input type that accepts GetHealthScoresDataIssueTypeArray and GetHealthScoresDataIssueTypeArrayOutput values.
// You can construct a concrete instance of `GetHealthScoresDataIssueTypeArrayInput` via:
//
//          GetHealthScoresDataIssueTypeArray{ GetHealthScoresDataIssueTypeArgs{...} }
type GetHealthScoresDataIssueTypeArrayInput interface {
	pulumi.Input

	ToGetHealthScoresDataIssueTypeArrayOutput() GetHealthScoresDataIssueTypeArrayOutput
	ToGetHealthScoresDataIssueTypeArrayOutputWithContext(context.Context) GetHealthScoresDataIssueTypeArrayOutput
}

type GetHealthScoresDataIssueTypeArray []GetHealthScoresDataIssueTypeInput

func (GetHealthScoresDataIssueTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresDataIssueType)(nil)).Elem()
}

func (i GetHealthScoresDataIssueTypeArray) ToGetHealthScoresDataIssueTypeArrayOutput() GetHealthScoresDataIssueTypeArrayOutput {
	return i.ToGetHealthScoresDataIssueTypeArrayOutputWithContext(context.Background())
}

func (i GetHealthScoresDataIssueTypeArray) ToGetHealthScoresDataIssueTypeArrayOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataIssueTypeArrayOutput)
}

type GetHealthScoresDataIssueTypeOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataIssueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresDataIssueType)(nil)).Elem()
}

func (o GetHealthScoresDataIssueTypeOutput) ToGetHealthScoresDataIssueTypeOutput() GetHealthScoresDataIssueTypeOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeOutput) ToGetHealthScoresDataIssueTypeOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeOutput {
	return o
}

// unusual event.
func (o GetHealthScoresDataIssueTypeOutput) Events() GetHealthScoresDataIssueTypeEventArrayOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueType) []GetHealthScoresDataIssueTypeEvent { return v.Events }).(GetHealthScoresDataIssueTypeEventArrayOutput)
}

// Index classification: AVAILABILITY: availability, MAINTAINABILITY: maintainability, PERFORMANCE, performance, RELIABILITY reliability.
func (o GetHealthScoresDataIssueTypeOutput) IssueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueType) string { return v.IssueType }).(pulumi.StringOutput)
}

// The total number of abnormal events.
func (o GetHealthScoresDataIssueTypeOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueType) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetHealthScoresDataIssueTypeArrayOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataIssueTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresDataIssueType)(nil)).Elem()
}

func (o GetHealthScoresDataIssueTypeArrayOutput) ToGetHealthScoresDataIssueTypeArrayOutput() GetHealthScoresDataIssueTypeArrayOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeArrayOutput) ToGetHealthScoresDataIssueTypeArrayOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeArrayOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeArrayOutput) Index(i pulumi.IntInput) GetHealthScoresDataIssueTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHealthScoresDataIssueType {
		return vs[0].([]GetHealthScoresDataIssueType)[vs[1].(int)]
	}).(GetHealthScoresDataIssueTypeOutput)
}

type GetHealthScoresDataIssueTypeEvent struct {
	// Number of alerts.
	Count int `pulumi:"count"`
	// Diagnostic type.
	DiagType string `pulumi:"diagType"`
	// End Time.
	EndTime string `pulumi:"endTime"`
	// Event ID.
	EventId int `pulumi:"eventId"`
	// reserved text.
	Metric string `pulumi:"metric"`
	// overview.
	Outline string `pulumi:"outline"`
	// Points deducted.
	ScoreLost int `pulumi:"scoreLost"`
	// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
	Severity int `pulumi:"severity"`
	// Starting time.
	StartTime string `pulumi:"startTime"`
}

// GetHealthScoresDataIssueTypeEventInput is an input type that accepts GetHealthScoresDataIssueTypeEventArgs and GetHealthScoresDataIssueTypeEventOutput values.
// You can construct a concrete instance of `GetHealthScoresDataIssueTypeEventInput` via:
//
//          GetHealthScoresDataIssueTypeEventArgs{...}
type GetHealthScoresDataIssueTypeEventInput interface {
	pulumi.Input

	ToGetHealthScoresDataIssueTypeEventOutput() GetHealthScoresDataIssueTypeEventOutput
	ToGetHealthScoresDataIssueTypeEventOutputWithContext(context.Context) GetHealthScoresDataIssueTypeEventOutput
}

type GetHealthScoresDataIssueTypeEventArgs struct {
	// Number of alerts.
	Count pulumi.IntInput `pulumi:"count"`
	// Diagnostic type.
	DiagType pulumi.StringInput `pulumi:"diagType"`
	// End Time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Event ID.
	EventId pulumi.IntInput `pulumi:"eventId"`
	// reserved text.
	Metric pulumi.StringInput `pulumi:"metric"`
	// overview.
	Outline pulumi.StringInput `pulumi:"outline"`
	// Points deducted.
	ScoreLost pulumi.IntInput `pulumi:"scoreLost"`
	// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
	Severity pulumi.IntInput `pulumi:"severity"`
	// Starting time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetHealthScoresDataIssueTypeEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresDataIssueTypeEvent)(nil)).Elem()
}

func (i GetHealthScoresDataIssueTypeEventArgs) ToGetHealthScoresDataIssueTypeEventOutput() GetHealthScoresDataIssueTypeEventOutput {
	return i.ToGetHealthScoresDataIssueTypeEventOutputWithContext(context.Background())
}

func (i GetHealthScoresDataIssueTypeEventArgs) ToGetHealthScoresDataIssueTypeEventOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataIssueTypeEventOutput)
}

// GetHealthScoresDataIssueTypeEventArrayInput is an input type that accepts GetHealthScoresDataIssueTypeEventArray and GetHealthScoresDataIssueTypeEventArrayOutput values.
// You can construct a concrete instance of `GetHealthScoresDataIssueTypeEventArrayInput` via:
//
//          GetHealthScoresDataIssueTypeEventArray{ GetHealthScoresDataIssueTypeEventArgs{...} }
type GetHealthScoresDataIssueTypeEventArrayInput interface {
	pulumi.Input

	ToGetHealthScoresDataIssueTypeEventArrayOutput() GetHealthScoresDataIssueTypeEventArrayOutput
	ToGetHealthScoresDataIssueTypeEventArrayOutputWithContext(context.Context) GetHealthScoresDataIssueTypeEventArrayOutput
}

type GetHealthScoresDataIssueTypeEventArray []GetHealthScoresDataIssueTypeEventInput

func (GetHealthScoresDataIssueTypeEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresDataIssueTypeEvent)(nil)).Elem()
}

func (i GetHealthScoresDataIssueTypeEventArray) ToGetHealthScoresDataIssueTypeEventArrayOutput() GetHealthScoresDataIssueTypeEventArrayOutput {
	return i.ToGetHealthScoresDataIssueTypeEventArrayOutputWithContext(context.Background())
}

func (i GetHealthScoresDataIssueTypeEventArray) ToGetHealthScoresDataIssueTypeEventArrayOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthScoresDataIssueTypeEventArrayOutput)
}

type GetHealthScoresDataIssueTypeEventOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataIssueTypeEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthScoresDataIssueTypeEvent)(nil)).Elem()
}

func (o GetHealthScoresDataIssueTypeEventOutput) ToGetHealthScoresDataIssueTypeEventOutput() GetHealthScoresDataIssueTypeEventOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeEventOutput) ToGetHealthScoresDataIssueTypeEventOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeEventOutput {
	return o
}

// Number of alerts.
func (o GetHealthScoresDataIssueTypeEventOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) int { return v.Count }).(pulumi.IntOutput)
}

// Diagnostic type.
func (o GetHealthScoresDataIssueTypeEventOutput) DiagType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) string { return v.DiagType }).(pulumi.StringOutput)
}

// End Time.
func (o GetHealthScoresDataIssueTypeEventOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) string { return v.EndTime }).(pulumi.StringOutput)
}

// Event ID.
func (o GetHealthScoresDataIssueTypeEventOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) int { return v.EventId }).(pulumi.IntOutput)
}

// reserved text.
func (o GetHealthScoresDataIssueTypeEventOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) string { return v.Metric }).(pulumi.StringOutput)
}

// overview.
func (o GetHealthScoresDataIssueTypeEventOutput) Outline() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) string { return v.Outline }).(pulumi.StringOutput)
}

// Points deducted.
func (o GetHealthScoresDataIssueTypeEventOutput) ScoreLost() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) int { return v.ScoreLost }).(pulumi.IntOutput)
}

// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
func (o GetHealthScoresDataIssueTypeEventOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) int { return v.Severity }).(pulumi.IntOutput)
}

// Starting time.
func (o GetHealthScoresDataIssueTypeEventOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthScoresDataIssueTypeEvent) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetHealthScoresDataIssueTypeEventArrayOutput struct{ *pulumi.OutputState }

func (GetHealthScoresDataIssueTypeEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHealthScoresDataIssueTypeEvent)(nil)).Elem()
}

func (o GetHealthScoresDataIssueTypeEventArrayOutput) ToGetHealthScoresDataIssueTypeEventArrayOutput() GetHealthScoresDataIssueTypeEventArrayOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeEventArrayOutput) ToGetHealthScoresDataIssueTypeEventArrayOutputWithContext(ctx context.Context) GetHealthScoresDataIssueTypeEventArrayOutput {
	return o
}

func (o GetHealthScoresDataIssueTypeEventArrayOutput) Index(i pulumi.IntInput) GetHealthScoresDataIssueTypeEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHealthScoresDataIssueTypeEvent {
		return vs[0].([]GetHealthScoresDataIssueTypeEvent)[vs[1].(int)]
	}).(GetHealthScoresDataIssueTypeEventOutput)
}

type GetSecurityAuditLogExportTasksList struct {
	// async request id.
	AsyncRequestId int `pulumi:"asyncRequestId"`
	// create time.
	CreateTime string `pulumi:"createTime"`
	// danger level list.
	DangerLevels []int `pulumi:"dangerLevels"`
	// end time.
	EndTime string `pulumi:"endTime"`
	// log end time.
	LogEndTime string `pulumi:"logEndTime"`
	// log start time.
	LogStartTime string `pulumi:"logStartTime"`
	// task progress.
	Progress int `pulumi:"progress"`
	// start time.
	StartTime string `pulumi:"startTime"`
	// status.
	Status string `pulumi:"status"`
	// the total size of log.
	TotalSize int `pulumi:"totalSize"`
}

// GetSecurityAuditLogExportTasksListInput is an input type that accepts GetSecurityAuditLogExportTasksListArgs and GetSecurityAuditLogExportTasksListOutput values.
// You can construct a concrete instance of `GetSecurityAuditLogExportTasksListInput` via:
//
//          GetSecurityAuditLogExportTasksListArgs{...}
type GetSecurityAuditLogExportTasksListInput interface {
	pulumi.Input

	ToGetSecurityAuditLogExportTasksListOutput() GetSecurityAuditLogExportTasksListOutput
	ToGetSecurityAuditLogExportTasksListOutputWithContext(context.Context) GetSecurityAuditLogExportTasksListOutput
}

type GetSecurityAuditLogExportTasksListArgs struct {
	// async request id.
	AsyncRequestId pulumi.IntInput `pulumi:"asyncRequestId"`
	// create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// danger level list.
	DangerLevels pulumi.IntArrayInput `pulumi:"dangerLevels"`
	// end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// log end time.
	LogEndTime pulumi.StringInput `pulumi:"logEndTime"`
	// log start time.
	LogStartTime pulumi.StringInput `pulumi:"logStartTime"`
	// task progress.
	Progress pulumi.IntInput `pulumi:"progress"`
	// start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// status.
	Status pulumi.StringInput `pulumi:"status"`
	// the total size of log.
	TotalSize pulumi.IntInput `pulumi:"totalSize"`
}

func (GetSecurityAuditLogExportTasksListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAuditLogExportTasksList)(nil)).Elem()
}

func (i GetSecurityAuditLogExportTasksListArgs) ToGetSecurityAuditLogExportTasksListOutput() GetSecurityAuditLogExportTasksListOutput {
	return i.ToGetSecurityAuditLogExportTasksListOutputWithContext(context.Background())
}

func (i GetSecurityAuditLogExportTasksListArgs) ToGetSecurityAuditLogExportTasksListOutputWithContext(ctx context.Context) GetSecurityAuditLogExportTasksListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityAuditLogExportTasksListOutput)
}

// GetSecurityAuditLogExportTasksListArrayInput is an input type that accepts GetSecurityAuditLogExportTasksListArray and GetSecurityAuditLogExportTasksListArrayOutput values.
// You can construct a concrete instance of `GetSecurityAuditLogExportTasksListArrayInput` via:
//
//          GetSecurityAuditLogExportTasksListArray{ GetSecurityAuditLogExportTasksListArgs{...} }
type GetSecurityAuditLogExportTasksListArrayInput interface {
	pulumi.Input

	ToGetSecurityAuditLogExportTasksListArrayOutput() GetSecurityAuditLogExportTasksListArrayOutput
	ToGetSecurityAuditLogExportTasksListArrayOutputWithContext(context.Context) GetSecurityAuditLogExportTasksListArrayOutput
}

type GetSecurityAuditLogExportTasksListArray []GetSecurityAuditLogExportTasksListInput

func (GetSecurityAuditLogExportTasksListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityAuditLogExportTasksList)(nil)).Elem()
}

func (i GetSecurityAuditLogExportTasksListArray) ToGetSecurityAuditLogExportTasksListArrayOutput() GetSecurityAuditLogExportTasksListArrayOutput {
	return i.ToGetSecurityAuditLogExportTasksListArrayOutputWithContext(context.Background())
}

func (i GetSecurityAuditLogExportTasksListArray) ToGetSecurityAuditLogExportTasksListArrayOutputWithContext(ctx context.Context) GetSecurityAuditLogExportTasksListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityAuditLogExportTasksListArrayOutput)
}

type GetSecurityAuditLogExportTasksListOutput struct{ *pulumi.OutputState }

func (GetSecurityAuditLogExportTasksListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAuditLogExportTasksList)(nil)).Elem()
}

func (o GetSecurityAuditLogExportTasksListOutput) ToGetSecurityAuditLogExportTasksListOutput() GetSecurityAuditLogExportTasksListOutput {
	return o
}

func (o GetSecurityAuditLogExportTasksListOutput) ToGetSecurityAuditLogExportTasksListOutputWithContext(ctx context.Context) GetSecurityAuditLogExportTasksListOutput {
	return o
}

// async request id.
func (o GetSecurityAuditLogExportTasksListOutput) AsyncRequestId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) int { return v.AsyncRequestId }).(pulumi.IntOutput)
}

// create time.
func (o GetSecurityAuditLogExportTasksListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// danger level list.
func (o GetSecurityAuditLogExportTasksListOutput) DangerLevels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) []int { return v.DangerLevels }).(pulumi.IntArrayOutput)
}

// end time.
func (o GetSecurityAuditLogExportTasksListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.EndTime }).(pulumi.StringOutput)
}

// log end time.
func (o GetSecurityAuditLogExportTasksListOutput) LogEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.LogEndTime }).(pulumi.StringOutput)
}

// log start time.
func (o GetSecurityAuditLogExportTasksListOutput) LogStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.LogStartTime }).(pulumi.StringOutput)
}

// task progress.
func (o GetSecurityAuditLogExportTasksListOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) int { return v.Progress }).(pulumi.IntOutput)
}

// start time.
func (o GetSecurityAuditLogExportTasksListOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.StartTime }).(pulumi.StringOutput)
}

// status.
func (o GetSecurityAuditLogExportTasksListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) string { return v.Status }).(pulumi.StringOutput)
}

// the total size of log.
func (o GetSecurityAuditLogExportTasksListOutput) TotalSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksList) int { return v.TotalSize }).(pulumi.IntOutput)
}

type GetSecurityAuditLogExportTasksListArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityAuditLogExportTasksListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityAuditLogExportTasksList)(nil)).Elem()
}

func (o GetSecurityAuditLogExportTasksListArrayOutput) ToGetSecurityAuditLogExportTasksListArrayOutput() GetSecurityAuditLogExportTasksListArrayOutput {
	return o
}

func (o GetSecurityAuditLogExportTasksListArrayOutput) ToGetSecurityAuditLogExportTasksListArrayOutputWithContext(ctx context.Context) GetSecurityAuditLogExportTasksListArrayOutput {
	return o
}

func (o GetSecurityAuditLogExportTasksListArrayOutput) Index(i pulumi.IntInput) GetSecurityAuditLogExportTasksListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityAuditLogExportTasksList {
		return vs[0].([]GetSecurityAuditLogExportTasksList)[vs[1].(int)]
	}).(GetSecurityAuditLogExportTasksListOutput)
}

type GetSlowLogTimeSeriesStatsSeriesData struct {
	// Monitor metrics.
	Series []GetSlowLogTimeSeriesStatsSeriesDataSeries `pulumi:"series"`
	// Statistics start time.
	Timestamps []int `pulumi:"timestamps"`
}

// GetSlowLogTimeSeriesStatsSeriesDataInput is an input type that accepts GetSlowLogTimeSeriesStatsSeriesDataArgs and GetSlowLogTimeSeriesStatsSeriesDataOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsSeriesDataInput` via:
//
//          GetSlowLogTimeSeriesStatsSeriesDataArgs{...}
type GetSlowLogTimeSeriesStatsSeriesDataInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsSeriesDataOutput() GetSlowLogTimeSeriesStatsSeriesDataOutput
	ToGetSlowLogTimeSeriesStatsSeriesDataOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsSeriesDataOutput
}

type GetSlowLogTimeSeriesStatsSeriesDataArgs struct {
	// Monitor metrics.
	Series GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayInput `pulumi:"series"`
	// Statistics start time.
	Timestamps pulumi.IntArrayInput `pulumi:"timestamps"`
}

func (GetSlowLogTimeSeriesStatsSeriesDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesData)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsSeriesDataArgs) ToGetSlowLogTimeSeriesStatsSeriesDataOutput() GetSlowLogTimeSeriesStatsSeriesDataOutput {
	return i.ToGetSlowLogTimeSeriesStatsSeriesDataOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsSeriesDataArgs) ToGetSlowLogTimeSeriesStatsSeriesDataOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsSeriesDataOutput)
}

// GetSlowLogTimeSeriesStatsSeriesDataArrayInput is an input type that accepts GetSlowLogTimeSeriesStatsSeriesDataArray and GetSlowLogTimeSeriesStatsSeriesDataArrayOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsSeriesDataArrayInput` via:
//
//          GetSlowLogTimeSeriesStatsSeriesDataArray{ GetSlowLogTimeSeriesStatsSeriesDataArgs{...} }
type GetSlowLogTimeSeriesStatsSeriesDataArrayInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataArrayOutput
	ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsSeriesDataArrayOutput
}

type GetSlowLogTimeSeriesStatsSeriesDataArray []GetSlowLogTimeSeriesStatsSeriesDataInput

func (GetSlowLogTimeSeriesStatsSeriesDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsSeriesData)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsSeriesDataArray) ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataArrayOutput {
	return i.ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsSeriesDataArray) ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsSeriesDataArrayOutput)
}

type GetSlowLogTimeSeriesStatsSeriesDataOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsSeriesDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesData)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsSeriesDataOutput) ToGetSlowLogTimeSeriesStatsSeriesDataOutput() GetSlowLogTimeSeriesStatsSeriesDataOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataOutput) ToGetSlowLogTimeSeriesStatsSeriesDataOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataOutput {
	return o
}

// Monitor metrics.
func (o GetSlowLogTimeSeriesStatsSeriesDataOutput) Series() GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsSeriesData) []GetSlowLogTimeSeriesStatsSeriesDataSeries {
		return v.Series
	}).(GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput)
}

// Statistics start time.
func (o GetSlowLogTimeSeriesStatsSeriesDataOutput) Timestamps() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsSeriesData) []int { return v.Timestamps }).(pulumi.IntArrayOutput)
}

type GetSlowLogTimeSeriesStatsSeriesDataArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsSeriesDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsSeriesData)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsSeriesDataArrayOutput) ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataArrayOutput) ToGetSlowLogTimeSeriesStatsSeriesDataArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataArrayOutput) Index(i pulumi.IntInput) GetSlowLogTimeSeriesStatsSeriesDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogTimeSeriesStatsSeriesData {
		return vs[0].([]GetSlowLogTimeSeriesStatsSeriesData)[vs[1].(int)]
	}).(GetSlowLogTimeSeriesStatsSeriesDataOutput)
}

type GetSlowLogTimeSeriesStatsSeriesDataSeries struct {
	// Indicator name.
	Metric string `pulumi:"metric"`
	// Indicator unit.
	Unit string `pulumi:"unit"`
	// Index value. Note: This field may return null, indicating that no valid value can be obtained.
	Values []int `pulumi:"values"`
}

// GetSlowLogTimeSeriesStatsSeriesDataSeriesInput is an input type that accepts GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs and GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsSeriesDataSeriesInput` via:
//
//          GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs{...}
type GetSlowLogTimeSeriesStatsSeriesDataSeriesInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput
	ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput
}

type GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs struct {
	// Indicator name.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Indicator unit.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Index value. Note: This field may return null, indicating that no valid value can be obtained.
	Values pulumi.IntArrayInput `pulumi:"values"`
}

func (GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataSeries)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput {
	return i.ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput)
}

// GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayInput is an input type that accepts GetSlowLogTimeSeriesStatsSeriesDataSeriesArray and GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayInput` via:
//
//          GetSlowLogTimeSeriesStatsSeriesDataSeriesArray{ GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs{...} }
type GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput
	ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput
}

type GetSlowLogTimeSeriesStatsSeriesDataSeriesArray []GetSlowLogTimeSeriesStatsSeriesDataSeriesInput

func (GetSlowLogTimeSeriesStatsSeriesDataSeriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsSeriesDataSeries)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsSeriesDataSeriesArray) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput {
	return i.ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsSeriesDataSeriesArray) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput)
}

type GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataSeries)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput {
	return o
}

// Indicator name.
func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsSeriesDataSeries) string { return v.Metric }).(pulumi.StringOutput)
}

// Indicator unit.
func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsSeriesDataSeries) string { return v.Unit }).(pulumi.StringOutput)
}

// Index value. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput) Values() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsSeriesDataSeries) []int { return v.Values }).(pulumi.IntArrayOutput)
}

type GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsSeriesDataSeries)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput() GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput) ToGetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput) Index(i pulumi.IntInput) GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogTimeSeriesStatsSeriesDataSeries {
		return vs[0].([]GetSlowLogTimeSeriesStatsSeriesDataSeries)[vs[1].(int)]
	}).(GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput)
}

type GetSlowLogTimeSeriesStatsTimeSeries struct {
	// total.
	Count int `pulumi:"count"`
	// Statistics start time.
	Timestamp int `pulumi:"timestamp"`
}

// GetSlowLogTimeSeriesStatsTimeSeriesInput is an input type that accepts GetSlowLogTimeSeriesStatsTimeSeriesArgs and GetSlowLogTimeSeriesStatsTimeSeriesOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsTimeSeriesInput` via:
//
//          GetSlowLogTimeSeriesStatsTimeSeriesArgs{...}
type GetSlowLogTimeSeriesStatsTimeSeriesInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsTimeSeriesOutput() GetSlowLogTimeSeriesStatsTimeSeriesOutput
	ToGetSlowLogTimeSeriesStatsTimeSeriesOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsTimeSeriesOutput
}

type GetSlowLogTimeSeriesStatsTimeSeriesArgs struct {
	// total.
	Count pulumi.IntInput `pulumi:"count"`
	// Statistics start time.
	Timestamp pulumi.IntInput `pulumi:"timestamp"`
}

func (GetSlowLogTimeSeriesStatsTimeSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsTimeSeries)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsTimeSeriesArgs) ToGetSlowLogTimeSeriesStatsTimeSeriesOutput() GetSlowLogTimeSeriesStatsTimeSeriesOutput {
	return i.ToGetSlowLogTimeSeriesStatsTimeSeriesOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsTimeSeriesArgs) ToGetSlowLogTimeSeriesStatsTimeSeriesOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsTimeSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsTimeSeriesOutput)
}

// GetSlowLogTimeSeriesStatsTimeSeriesArrayInput is an input type that accepts GetSlowLogTimeSeriesStatsTimeSeriesArray and GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput values.
// You can construct a concrete instance of `GetSlowLogTimeSeriesStatsTimeSeriesArrayInput` via:
//
//          GetSlowLogTimeSeriesStatsTimeSeriesArray{ GetSlowLogTimeSeriesStatsTimeSeriesArgs{...} }
type GetSlowLogTimeSeriesStatsTimeSeriesArrayInput interface {
	pulumi.Input

	ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutput() GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput
	ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutputWithContext(context.Context) GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput
}

type GetSlowLogTimeSeriesStatsTimeSeriesArray []GetSlowLogTimeSeriesStatsTimeSeriesInput

func (GetSlowLogTimeSeriesStatsTimeSeriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsTimeSeries)(nil)).Elem()
}

func (i GetSlowLogTimeSeriesStatsTimeSeriesArray) ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutput() GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput {
	return i.ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutputWithContext(context.Background())
}

func (i GetSlowLogTimeSeriesStatsTimeSeriesArray) ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput)
}

type GetSlowLogTimeSeriesStatsTimeSeriesOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsTimeSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTimeSeriesStatsTimeSeries)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsTimeSeriesOutput) ToGetSlowLogTimeSeriesStatsTimeSeriesOutput() GetSlowLogTimeSeriesStatsTimeSeriesOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsTimeSeriesOutput) ToGetSlowLogTimeSeriesStatsTimeSeriesOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsTimeSeriesOutput {
	return o
}

// total.
func (o GetSlowLogTimeSeriesStatsTimeSeriesOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsTimeSeries) int { return v.Count }).(pulumi.IntOutput)
}

// Statistics start time.
func (o GetSlowLogTimeSeriesStatsTimeSeriesOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTimeSeriesStatsTimeSeries) int { return v.Timestamp }).(pulumi.IntOutput)
}

type GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTimeSeriesStatsTimeSeries)(nil)).Elem()
}

func (o GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput) ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutput() GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput) ToGetSlowLogTimeSeriesStatsTimeSeriesArrayOutputWithContext(ctx context.Context) GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput {
	return o
}

func (o GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput) Index(i pulumi.IntInput) GetSlowLogTimeSeriesStatsTimeSeriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogTimeSeriesStatsTimeSeries {
		return vs[0].([]GetSlowLogTimeSeriesStatsTimeSeries)[vs[1].(int)]
	}).(GetSlowLogTimeSeriesStatsTimeSeriesOutput)
}

type GetSlowLogTopSqlsRow struct {
	// Execution times.
	ExecTimes int `pulumi:"execTimes"`
	// SQL total lock waiting time, in seconds.
	LockTime float64 `pulumi:"lockTime"`
	// Average lock waiting time, in seconds.
	LockTimeAvg float64 `pulumi:"lockTimeAvg"`
	// Maximum lock waiting time, in seconds.
	LockTimeMax float64 `pulumi:"lockTimeMax"`
	// Minimum lock waiting time, in seconds.
	LockTimeMin float64 `pulumi:"lockTimeMin"`
	// The ratio of the total lock waiting time of SQL, in %.
	LockTimeRatio float64 `pulumi:"lockTimeRatio"`
	// MD5 value of SOL template.
	Md5 string `pulumi:"md5"`
	// Total time, in seconds.
	QueryTime float64 `pulumi:"queryTime"`
	// Average execution time, in seconds.
	QueryTimeAvg float64 `pulumi:"queryTimeAvg"`
	// The maximum execution time, in seconds.
	QueryTimeMax float64 `pulumi:"queryTimeMax"`
	// The minimum execution time, in seconds.
	QueryTimeMin float64 `pulumi:"queryTimeMin"`
	// Total time-consuming ratio, unit %.
	QueryTimeRatio float64 `pulumi:"queryTimeRatio"`
	// total scan lines.
	RowsExamined int `pulumi:"rowsExamined"`
	// average number of lines scanned.
	RowsExaminedAvg float64 `pulumi:"rowsExaminedAvg"`
	// Maximum number of scan lines.
	RowsExaminedMax int `pulumi:"rowsExaminedMax"`
	// Minimum number of scan lines.
	RowsExaminedMin int `pulumi:"rowsExaminedMin"`
	// The proportion of the total number of scanned lines, unit %.
	RowsExaminedRatio float64 `pulumi:"rowsExaminedRatio"`
	// total number of rows returned.
	RowsSent int `pulumi:"rowsSent"`
	// average number of rows returned.
	RowsSentAvg float64 `pulumi:"rowsSentAvg"`
	// Maximum number of rows returned.
	RowsSentMax int `pulumi:"rowsSentMax"`
	// Minimum number of rows returned.
	RowsSentMin int `pulumi:"rowsSentMin"`
	// The proportion of the total number of rows returned, in %.
	RowsSentRatio float64 `pulumi:"rowsSentRatio"`
	// DB name.
	Schema string `pulumi:"schema"`
	// sql template.
	SqlTemplate string `pulumi:"sqlTemplate"`
	// SQL with parameters (random).
	SqlText string `pulumi:"sqlText"`
}

// GetSlowLogTopSqlsRowInput is an input type that accepts GetSlowLogTopSqlsRowArgs and GetSlowLogTopSqlsRowOutput values.
// You can construct a concrete instance of `GetSlowLogTopSqlsRowInput` via:
//
//          GetSlowLogTopSqlsRowArgs{...}
type GetSlowLogTopSqlsRowInput interface {
	pulumi.Input

	ToGetSlowLogTopSqlsRowOutput() GetSlowLogTopSqlsRowOutput
	ToGetSlowLogTopSqlsRowOutputWithContext(context.Context) GetSlowLogTopSqlsRowOutput
}

type GetSlowLogTopSqlsRowArgs struct {
	// Execution times.
	ExecTimes pulumi.IntInput `pulumi:"execTimes"`
	// SQL total lock waiting time, in seconds.
	LockTime pulumi.Float64Input `pulumi:"lockTime"`
	// Average lock waiting time, in seconds.
	LockTimeAvg pulumi.Float64Input `pulumi:"lockTimeAvg"`
	// Maximum lock waiting time, in seconds.
	LockTimeMax pulumi.Float64Input `pulumi:"lockTimeMax"`
	// Minimum lock waiting time, in seconds.
	LockTimeMin pulumi.Float64Input `pulumi:"lockTimeMin"`
	// The ratio of the total lock waiting time of SQL, in %.
	LockTimeRatio pulumi.Float64Input `pulumi:"lockTimeRatio"`
	// MD5 value of SOL template.
	Md5 pulumi.StringInput `pulumi:"md5"`
	// Total time, in seconds.
	QueryTime pulumi.Float64Input `pulumi:"queryTime"`
	// Average execution time, in seconds.
	QueryTimeAvg pulumi.Float64Input `pulumi:"queryTimeAvg"`
	// The maximum execution time, in seconds.
	QueryTimeMax pulumi.Float64Input `pulumi:"queryTimeMax"`
	// The minimum execution time, in seconds.
	QueryTimeMin pulumi.Float64Input `pulumi:"queryTimeMin"`
	// Total time-consuming ratio, unit %.
	QueryTimeRatio pulumi.Float64Input `pulumi:"queryTimeRatio"`
	// total scan lines.
	RowsExamined pulumi.IntInput `pulumi:"rowsExamined"`
	// average number of lines scanned.
	RowsExaminedAvg pulumi.Float64Input `pulumi:"rowsExaminedAvg"`
	// Maximum number of scan lines.
	RowsExaminedMax pulumi.IntInput `pulumi:"rowsExaminedMax"`
	// Minimum number of scan lines.
	RowsExaminedMin pulumi.IntInput `pulumi:"rowsExaminedMin"`
	// The proportion of the total number of scanned lines, unit %.
	RowsExaminedRatio pulumi.Float64Input `pulumi:"rowsExaminedRatio"`
	// total number of rows returned.
	RowsSent pulumi.IntInput `pulumi:"rowsSent"`
	// average number of rows returned.
	RowsSentAvg pulumi.Float64Input `pulumi:"rowsSentAvg"`
	// Maximum number of rows returned.
	RowsSentMax pulumi.IntInput `pulumi:"rowsSentMax"`
	// Minimum number of rows returned.
	RowsSentMin pulumi.IntInput `pulumi:"rowsSentMin"`
	// The proportion of the total number of rows returned, in %.
	RowsSentRatio pulumi.Float64Input `pulumi:"rowsSentRatio"`
	// DB name.
	Schema pulumi.StringInput `pulumi:"schema"`
	// sql template.
	SqlTemplate pulumi.StringInput `pulumi:"sqlTemplate"`
	// SQL with parameters (random).
	SqlText pulumi.StringInput `pulumi:"sqlText"`
}

func (GetSlowLogTopSqlsRowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTopSqlsRow)(nil)).Elem()
}

func (i GetSlowLogTopSqlsRowArgs) ToGetSlowLogTopSqlsRowOutput() GetSlowLogTopSqlsRowOutput {
	return i.ToGetSlowLogTopSqlsRowOutputWithContext(context.Background())
}

func (i GetSlowLogTopSqlsRowArgs) ToGetSlowLogTopSqlsRowOutputWithContext(ctx context.Context) GetSlowLogTopSqlsRowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTopSqlsRowOutput)
}

// GetSlowLogTopSqlsRowArrayInput is an input type that accepts GetSlowLogTopSqlsRowArray and GetSlowLogTopSqlsRowArrayOutput values.
// You can construct a concrete instance of `GetSlowLogTopSqlsRowArrayInput` via:
//
//          GetSlowLogTopSqlsRowArray{ GetSlowLogTopSqlsRowArgs{...} }
type GetSlowLogTopSqlsRowArrayInput interface {
	pulumi.Input

	ToGetSlowLogTopSqlsRowArrayOutput() GetSlowLogTopSqlsRowArrayOutput
	ToGetSlowLogTopSqlsRowArrayOutputWithContext(context.Context) GetSlowLogTopSqlsRowArrayOutput
}

type GetSlowLogTopSqlsRowArray []GetSlowLogTopSqlsRowInput

func (GetSlowLogTopSqlsRowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTopSqlsRow)(nil)).Elem()
}

func (i GetSlowLogTopSqlsRowArray) ToGetSlowLogTopSqlsRowArrayOutput() GetSlowLogTopSqlsRowArrayOutput {
	return i.ToGetSlowLogTopSqlsRowArrayOutputWithContext(context.Background())
}

func (i GetSlowLogTopSqlsRowArray) ToGetSlowLogTopSqlsRowArrayOutputWithContext(ctx context.Context) GetSlowLogTopSqlsRowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTopSqlsRowArrayOutput)
}

type GetSlowLogTopSqlsRowOutput struct{ *pulumi.OutputState }

func (GetSlowLogTopSqlsRowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTopSqlsRow)(nil)).Elem()
}

func (o GetSlowLogTopSqlsRowOutput) ToGetSlowLogTopSqlsRowOutput() GetSlowLogTopSqlsRowOutput {
	return o
}

func (o GetSlowLogTopSqlsRowOutput) ToGetSlowLogTopSqlsRowOutputWithContext(ctx context.Context) GetSlowLogTopSqlsRowOutput {
	return o
}

// Execution times.
func (o GetSlowLogTopSqlsRowOutput) ExecTimes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.ExecTimes }).(pulumi.IntOutput)
}

// SQL total lock waiting time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) LockTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.LockTime }).(pulumi.Float64Output)
}

// Average lock waiting time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) LockTimeAvg() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.LockTimeAvg }).(pulumi.Float64Output)
}

// Maximum lock waiting time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) LockTimeMax() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.LockTimeMax }).(pulumi.Float64Output)
}

// Minimum lock waiting time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) LockTimeMin() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.LockTimeMin }).(pulumi.Float64Output)
}

// The ratio of the total lock waiting time of SQL, in %.
func (o GetSlowLogTopSqlsRowOutput) LockTimeRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.LockTimeRatio }).(pulumi.Float64Output)
}

// MD5 value of SOL template.
func (o GetSlowLogTopSqlsRowOutput) Md5() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) string { return v.Md5 }).(pulumi.StringOutput)
}

// Total time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) QueryTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.QueryTime }).(pulumi.Float64Output)
}

// Average execution time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) QueryTimeAvg() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.QueryTimeAvg }).(pulumi.Float64Output)
}

// The maximum execution time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) QueryTimeMax() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.QueryTimeMax }).(pulumi.Float64Output)
}

// The minimum execution time, in seconds.
func (o GetSlowLogTopSqlsRowOutput) QueryTimeMin() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.QueryTimeMin }).(pulumi.Float64Output)
}

// Total time-consuming ratio, unit %.
func (o GetSlowLogTopSqlsRowOutput) QueryTimeRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.QueryTimeRatio }).(pulumi.Float64Output)
}

// total scan lines.
func (o GetSlowLogTopSqlsRowOutput) RowsExamined() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsExamined }).(pulumi.IntOutput)
}

// average number of lines scanned.
func (o GetSlowLogTopSqlsRowOutput) RowsExaminedAvg() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.RowsExaminedAvg }).(pulumi.Float64Output)
}

// Maximum number of scan lines.
func (o GetSlowLogTopSqlsRowOutput) RowsExaminedMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsExaminedMax }).(pulumi.IntOutput)
}

// Minimum number of scan lines.
func (o GetSlowLogTopSqlsRowOutput) RowsExaminedMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsExaminedMin }).(pulumi.IntOutput)
}

// The proportion of the total number of scanned lines, unit %.
func (o GetSlowLogTopSqlsRowOutput) RowsExaminedRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.RowsExaminedRatio }).(pulumi.Float64Output)
}

// total number of rows returned.
func (o GetSlowLogTopSqlsRowOutput) RowsSent() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsSent }).(pulumi.IntOutput)
}

// average number of rows returned.
func (o GetSlowLogTopSqlsRowOutput) RowsSentAvg() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.RowsSentAvg }).(pulumi.Float64Output)
}

// Maximum number of rows returned.
func (o GetSlowLogTopSqlsRowOutput) RowsSentMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsSentMax }).(pulumi.IntOutput)
}

// Minimum number of rows returned.
func (o GetSlowLogTopSqlsRowOutput) RowsSentMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) int { return v.RowsSentMin }).(pulumi.IntOutput)
}

// The proportion of the total number of rows returned, in %.
func (o GetSlowLogTopSqlsRowOutput) RowsSentRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) float64 { return v.RowsSentRatio }).(pulumi.Float64Output)
}

// DB name.
func (o GetSlowLogTopSqlsRowOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) string { return v.Schema }).(pulumi.StringOutput)
}

// sql template.
func (o GetSlowLogTopSqlsRowOutput) SqlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) string { return v.SqlTemplate }).(pulumi.StringOutput)
}

// SQL with parameters (random).
func (o GetSlowLogTopSqlsRowOutput) SqlText() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsRow) string { return v.SqlText }).(pulumi.StringOutput)
}

type GetSlowLogTopSqlsRowArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogTopSqlsRowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTopSqlsRow)(nil)).Elem()
}

func (o GetSlowLogTopSqlsRowArrayOutput) ToGetSlowLogTopSqlsRowArrayOutput() GetSlowLogTopSqlsRowArrayOutput {
	return o
}

func (o GetSlowLogTopSqlsRowArrayOutput) ToGetSlowLogTopSqlsRowArrayOutputWithContext(ctx context.Context) GetSlowLogTopSqlsRowArrayOutput {
	return o
}

func (o GetSlowLogTopSqlsRowArrayOutput) Index(i pulumi.IntInput) GetSlowLogTopSqlsRowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogTopSqlsRow {
		return vs[0].([]GetSlowLogTopSqlsRow)[vs[1].(int)]
	}).(GetSlowLogTopSqlsRowOutput)
}

type GetSlowLogTopSqlsSchemaList struct {
	// DB name.
	Schema string `pulumi:"schema"`
}

// GetSlowLogTopSqlsSchemaListInput is an input type that accepts GetSlowLogTopSqlsSchemaListArgs and GetSlowLogTopSqlsSchemaListOutput values.
// You can construct a concrete instance of `GetSlowLogTopSqlsSchemaListInput` via:
//
//          GetSlowLogTopSqlsSchemaListArgs{...}
type GetSlowLogTopSqlsSchemaListInput interface {
	pulumi.Input

	ToGetSlowLogTopSqlsSchemaListOutput() GetSlowLogTopSqlsSchemaListOutput
	ToGetSlowLogTopSqlsSchemaListOutputWithContext(context.Context) GetSlowLogTopSqlsSchemaListOutput
}

type GetSlowLogTopSqlsSchemaListArgs struct {
	// DB name.
	Schema pulumi.StringInput `pulumi:"schema"`
}

func (GetSlowLogTopSqlsSchemaListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTopSqlsSchemaList)(nil)).Elem()
}

func (i GetSlowLogTopSqlsSchemaListArgs) ToGetSlowLogTopSqlsSchemaListOutput() GetSlowLogTopSqlsSchemaListOutput {
	return i.ToGetSlowLogTopSqlsSchemaListOutputWithContext(context.Background())
}

func (i GetSlowLogTopSqlsSchemaListArgs) ToGetSlowLogTopSqlsSchemaListOutputWithContext(ctx context.Context) GetSlowLogTopSqlsSchemaListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTopSqlsSchemaListOutput)
}

// GetSlowLogTopSqlsSchemaListArrayInput is an input type that accepts GetSlowLogTopSqlsSchemaListArray and GetSlowLogTopSqlsSchemaListArrayOutput values.
// You can construct a concrete instance of `GetSlowLogTopSqlsSchemaListArrayInput` via:
//
//          GetSlowLogTopSqlsSchemaListArray{ GetSlowLogTopSqlsSchemaListArgs{...} }
type GetSlowLogTopSqlsSchemaListArrayInput interface {
	pulumi.Input

	ToGetSlowLogTopSqlsSchemaListArrayOutput() GetSlowLogTopSqlsSchemaListArrayOutput
	ToGetSlowLogTopSqlsSchemaListArrayOutputWithContext(context.Context) GetSlowLogTopSqlsSchemaListArrayOutput
}

type GetSlowLogTopSqlsSchemaListArray []GetSlowLogTopSqlsSchemaListInput

func (GetSlowLogTopSqlsSchemaListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTopSqlsSchemaList)(nil)).Elem()
}

func (i GetSlowLogTopSqlsSchemaListArray) ToGetSlowLogTopSqlsSchemaListArrayOutput() GetSlowLogTopSqlsSchemaListArrayOutput {
	return i.ToGetSlowLogTopSqlsSchemaListArrayOutputWithContext(context.Background())
}

func (i GetSlowLogTopSqlsSchemaListArray) ToGetSlowLogTopSqlsSchemaListArrayOutputWithContext(ctx context.Context) GetSlowLogTopSqlsSchemaListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogTopSqlsSchemaListArrayOutput)
}

type GetSlowLogTopSqlsSchemaListOutput struct{ *pulumi.OutputState }

func (GetSlowLogTopSqlsSchemaListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogTopSqlsSchemaList)(nil)).Elem()
}

func (o GetSlowLogTopSqlsSchemaListOutput) ToGetSlowLogTopSqlsSchemaListOutput() GetSlowLogTopSqlsSchemaListOutput {
	return o
}

func (o GetSlowLogTopSqlsSchemaListOutput) ToGetSlowLogTopSqlsSchemaListOutputWithContext(ctx context.Context) GetSlowLogTopSqlsSchemaListOutput {
	return o
}

// DB name.
func (o GetSlowLogTopSqlsSchemaListOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogTopSqlsSchemaList) string { return v.Schema }).(pulumi.StringOutput)
}

type GetSlowLogTopSqlsSchemaListArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogTopSqlsSchemaListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogTopSqlsSchemaList)(nil)).Elem()
}

func (o GetSlowLogTopSqlsSchemaListArrayOutput) ToGetSlowLogTopSqlsSchemaListArrayOutput() GetSlowLogTopSqlsSchemaListArrayOutput {
	return o
}

func (o GetSlowLogTopSqlsSchemaListArrayOutput) ToGetSlowLogTopSqlsSchemaListArrayOutputWithContext(ctx context.Context) GetSlowLogTopSqlsSchemaListArrayOutput {
	return o
}

func (o GetSlowLogTopSqlsSchemaListArrayOutput) Index(i pulumi.IntInput) GetSlowLogTopSqlsSchemaListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogTopSqlsSchemaList {
		return vs[0].([]GetSlowLogTopSqlsSchemaList)[vs[1].(int)]
	}).(GetSlowLogTopSqlsSchemaListOutput)
}

type GetSlowLogUserHostStatsItem struct {
	// The number of slow logs for this source address.
	Count int `pulumi:"count"`
	// The ratio of the number of slow logs of the source address to the total, in %.
	Ratio float64 `pulumi:"ratio"`
	// source address.
	UserHost string `pulumi:"userHost"`
}

// GetSlowLogUserHostStatsItemInput is an input type that accepts GetSlowLogUserHostStatsItemArgs and GetSlowLogUserHostStatsItemOutput values.
// You can construct a concrete instance of `GetSlowLogUserHostStatsItemInput` via:
//
//          GetSlowLogUserHostStatsItemArgs{...}
type GetSlowLogUserHostStatsItemInput interface {
	pulumi.Input

	ToGetSlowLogUserHostStatsItemOutput() GetSlowLogUserHostStatsItemOutput
	ToGetSlowLogUserHostStatsItemOutputWithContext(context.Context) GetSlowLogUserHostStatsItemOutput
}

type GetSlowLogUserHostStatsItemArgs struct {
	// The number of slow logs for this source address.
	Count pulumi.IntInput `pulumi:"count"`
	// The ratio of the number of slow logs of the source address to the total, in %.
	Ratio pulumi.Float64Input `pulumi:"ratio"`
	// source address.
	UserHost pulumi.StringInput `pulumi:"userHost"`
}

func (GetSlowLogUserHostStatsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogUserHostStatsItem)(nil)).Elem()
}

func (i GetSlowLogUserHostStatsItemArgs) ToGetSlowLogUserHostStatsItemOutput() GetSlowLogUserHostStatsItemOutput {
	return i.ToGetSlowLogUserHostStatsItemOutputWithContext(context.Background())
}

func (i GetSlowLogUserHostStatsItemArgs) ToGetSlowLogUserHostStatsItemOutputWithContext(ctx context.Context) GetSlowLogUserHostStatsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogUserHostStatsItemOutput)
}

// GetSlowLogUserHostStatsItemArrayInput is an input type that accepts GetSlowLogUserHostStatsItemArray and GetSlowLogUserHostStatsItemArrayOutput values.
// You can construct a concrete instance of `GetSlowLogUserHostStatsItemArrayInput` via:
//
//          GetSlowLogUserHostStatsItemArray{ GetSlowLogUserHostStatsItemArgs{...} }
type GetSlowLogUserHostStatsItemArrayInput interface {
	pulumi.Input

	ToGetSlowLogUserHostStatsItemArrayOutput() GetSlowLogUserHostStatsItemArrayOutput
	ToGetSlowLogUserHostStatsItemArrayOutputWithContext(context.Context) GetSlowLogUserHostStatsItemArrayOutput
}

type GetSlowLogUserHostStatsItemArray []GetSlowLogUserHostStatsItemInput

func (GetSlowLogUserHostStatsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogUserHostStatsItem)(nil)).Elem()
}

func (i GetSlowLogUserHostStatsItemArray) ToGetSlowLogUserHostStatsItemArrayOutput() GetSlowLogUserHostStatsItemArrayOutput {
	return i.ToGetSlowLogUserHostStatsItemArrayOutputWithContext(context.Background())
}

func (i GetSlowLogUserHostStatsItemArray) ToGetSlowLogUserHostStatsItemArrayOutputWithContext(ctx context.Context) GetSlowLogUserHostStatsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowLogUserHostStatsItemArrayOutput)
}

type GetSlowLogUserHostStatsItemOutput struct{ *pulumi.OutputState }

func (GetSlowLogUserHostStatsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogUserHostStatsItem)(nil)).Elem()
}

func (o GetSlowLogUserHostStatsItemOutput) ToGetSlowLogUserHostStatsItemOutput() GetSlowLogUserHostStatsItemOutput {
	return o
}

func (o GetSlowLogUserHostStatsItemOutput) ToGetSlowLogUserHostStatsItemOutputWithContext(ctx context.Context) GetSlowLogUserHostStatsItemOutput {
	return o
}

// The number of slow logs for this source address.
func (o GetSlowLogUserHostStatsItemOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowLogUserHostStatsItem) int { return v.Count }).(pulumi.IntOutput)
}

// The ratio of the number of slow logs of the source address to the total, in %.
func (o GetSlowLogUserHostStatsItemOutput) Ratio() pulumi.Float64Output {
	return o.ApplyT(func(v GetSlowLogUserHostStatsItem) float64 { return v.Ratio }).(pulumi.Float64Output)
}

// source address.
func (o GetSlowLogUserHostStatsItemOutput) UserHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserHostStatsItem) string { return v.UserHost }).(pulumi.StringOutput)
}

type GetSlowLogUserHostStatsItemArrayOutput struct{ *pulumi.OutputState }

func (GetSlowLogUserHostStatsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowLogUserHostStatsItem)(nil)).Elem()
}

func (o GetSlowLogUserHostStatsItemArrayOutput) ToGetSlowLogUserHostStatsItemArrayOutput() GetSlowLogUserHostStatsItemArrayOutput {
	return o
}

func (o GetSlowLogUserHostStatsItemArrayOutput) ToGetSlowLogUserHostStatsItemArrayOutputWithContext(ctx context.Context) GetSlowLogUserHostStatsItemArrayOutput {
	return o
}

func (o GetSlowLogUserHostStatsItemArrayOutput) Index(i pulumi.IntInput) GetSlowLogUserHostStatsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowLogUserHostStatsItem {
		return vs[0].([]GetSlowLogUserHostStatsItem)[vs[1].(int)]
	}).(GetSlowLogUserHostStatsItemOutput)
}

type GetSqlFiltersList struct {
	// create time.
	CreateTime string `pulumi:"createTime"`
	// current concurrency.
	CurrentConcurrency int `pulumi:"currentConcurrency"`
	// current time.
	CurrentTime string `pulumi:"currentTime"`
	// expire time.
	ExpireTime string `pulumi:"expireTime"`
	// task id.
	Id int `pulumi:"id"`
	// maxmum concurrency.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// origin keys.
	OriginKeys string `pulumi:"originKeys"`
	// origin rule.
	OriginRule string `pulumi:"originRule"`
	// rejected sql count.
	RejectedSqlCount int `pulumi:"rejectedSqlCount"`
	// sql type, optional value is SELECT, UPDATE, DELETE, INSERT, REPLACE.
	SqlType string `pulumi:"sqlType"`
	// task status, optional value is RUNNING, FINISHED, TERMINATED.
	Status string `pulumi:"status"`
}

// GetSqlFiltersListInput is an input type that accepts GetSqlFiltersListArgs and GetSqlFiltersListOutput values.
// You can construct a concrete instance of `GetSqlFiltersListInput` via:
//
//          GetSqlFiltersListArgs{...}
type GetSqlFiltersListInput interface {
	pulumi.Input

	ToGetSqlFiltersListOutput() GetSqlFiltersListOutput
	ToGetSqlFiltersListOutputWithContext(context.Context) GetSqlFiltersListOutput
}

type GetSqlFiltersListArgs struct {
	// create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// current concurrency.
	CurrentConcurrency pulumi.IntInput `pulumi:"currentConcurrency"`
	// current time.
	CurrentTime pulumi.StringInput `pulumi:"currentTime"`
	// expire time.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// task id.
	Id pulumi.IntInput `pulumi:"id"`
	// maxmum concurrency.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// origin keys.
	OriginKeys pulumi.StringInput `pulumi:"originKeys"`
	// origin rule.
	OriginRule pulumi.StringInput `pulumi:"originRule"`
	// rejected sql count.
	RejectedSqlCount pulumi.IntInput `pulumi:"rejectedSqlCount"`
	// sql type, optional value is SELECT, UPDATE, DELETE, INSERT, REPLACE.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
	// task status, optional value is RUNNING, FINISHED, TERMINATED.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSqlFiltersListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlFiltersList)(nil)).Elem()
}

func (i GetSqlFiltersListArgs) ToGetSqlFiltersListOutput() GetSqlFiltersListOutput {
	return i.ToGetSqlFiltersListOutputWithContext(context.Background())
}

func (i GetSqlFiltersListArgs) ToGetSqlFiltersListOutputWithContext(ctx context.Context) GetSqlFiltersListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlFiltersListOutput)
}

// GetSqlFiltersListArrayInput is an input type that accepts GetSqlFiltersListArray and GetSqlFiltersListArrayOutput values.
// You can construct a concrete instance of `GetSqlFiltersListArrayInput` via:
//
//          GetSqlFiltersListArray{ GetSqlFiltersListArgs{...} }
type GetSqlFiltersListArrayInput interface {
	pulumi.Input

	ToGetSqlFiltersListArrayOutput() GetSqlFiltersListArrayOutput
	ToGetSqlFiltersListArrayOutputWithContext(context.Context) GetSqlFiltersListArrayOutput
}

type GetSqlFiltersListArray []GetSqlFiltersListInput

func (GetSqlFiltersListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlFiltersList)(nil)).Elem()
}

func (i GetSqlFiltersListArray) ToGetSqlFiltersListArrayOutput() GetSqlFiltersListArrayOutput {
	return i.ToGetSqlFiltersListArrayOutputWithContext(context.Background())
}

func (i GetSqlFiltersListArray) ToGetSqlFiltersListArrayOutputWithContext(ctx context.Context) GetSqlFiltersListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlFiltersListArrayOutput)
}

type GetSqlFiltersListOutput struct{ *pulumi.OutputState }

func (GetSqlFiltersListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlFiltersList)(nil)).Elem()
}

func (o GetSqlFiltersListOutput) ToGetSqlFiltersListOutput() GetSqlFiltersListOutput {
	return o
}

func (o GetSqlFiltersListOutput) ToGetSqlFiltersListOutputWithContext(ctx context.Context) GetSqlFiltersListOutput {
	return o
}

// create time.
func (o GetSqlFiltersListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// current concurrency.
func (o GetSqlFiltersListOutput) CurrentConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetSqlFiltersList) int { return v.CurrentConcurrency }).(pulumi.IntOutput)
}

// current time.
func (o GetSqlFiltersListOutput) CurrentTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.CurrentTime }).(pulumi.StringOutput)
}

// expire time.
func (o GetSqlFiltersListOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// task id.
func (o GetSqlFiltersListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetSqlFiltersList) int { return v.Id }).(pulumi.IntOutput)
}

// maxmum concurrency.
func (o GetSqlFiltersListOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetSqlFiltersList) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// origin keys.
func (o GetSqlFiltersListOutput) OriginKeys() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.OriginKeys }).(pulumi.StringOutput)
}

// origin rule.
func (o GetSqlFiltersListOutput) OriginRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.OriginRule }).(pulumi.StringOutput)
}

// rejected sql count.
func (o GetSqlFiltersListOutput) RejectedSqlCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSqlFiltersList) int { return v.RejectedSqlCount }).(pulumi.IntOutput)
}

// sql type, optional value is SELECT, UPDATE, DELETE, INSERT, REPLACE.
func (o GetSqlFiltersListOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.SqlType }).(pulumi.StringOutput)
}

// task status, optional value is RUNNING, FINISHED, TERMINATED.
func (o GetSqlFiltersListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersList) string { return v.Status }).(pulumi.StringOutput)
}

type GetSqlFiltersListArrayOutput struct{ *pulumi.OutputState }

func (GetSqlFiltersListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlFiltersList)(nil)).Elem()
}

func (o GetSqlFiltersListArrayOutput) ToGetSqlFiltersListArrayOutput() GetSqlFiltersListArrayOutput {
	return o
}

func (o GetSqlFiltersListArrayOutput) ToGetSqlFiltersListArrayOutputWithContext(ctx context.Context) GetSqlFiltersListArrayOutput {
	return o
}

func (o GetSqlFiltersListArrayOutput) Index(i pulumi.IntInput) GetSqlFiltersListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSqlFiltersList {
		return vs[0].([]GetSqlFiltersList)[vs[1].(int)]
	}).(GetSqlFiltersListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyDiagDbInstanceOperationInstanceConfsInput)(nil)).Elem(), ModifyDiagDbInstanceOperationInstanceConfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyDiagDbInstanceOperationInstanceConfsPtrInput)(nil)).Elem(), ModifyDiagDbInstanceOperationInstanceConfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlFilterSessionTokenInput)(nil)).Elem(), SqlFilterSessionTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlFilterSessionTokenPtrInput)(nil)).Elem(), SqlFilterSessionTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TdsqlAuditLogFilterInput)(nil)).Elem(), TdsqlAuditLogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TdsqlAuditLogFilterPtrInput)(nil)).Elem(), TdsqlAuditLogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiagEventsListInput)(nil)).Elem(), GetDiagEventsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiagEventsListArrayInput)(nil)).Elem(), GetDiagEventsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiagHistoryEventInput)(nil)).Elem(), GetDiagHistoryEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiagHistoryEventArrayInput)(nil)).Elem(), GetDiagHistoryEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataInput)(nil)).Elem(), GetHealthScoresDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataArrayInput)(nil)).Elem(), GetHealthScoresDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataIssueTypeInput)(nil)).Elem(), GetHealthScoresDataIssueTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataIssueTypeArrayInput)(nil)).Elem(), GetHealthScoresDataIssueTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataIssueTypeEventInput)(nil)).Elem(), GetHealthScoresDataIssueTypeEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthScoresDataIssueTypeEventArrayInput)(nil)).Elem(), GetHealthScoresDataIssueTypeEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityAuditLogExportTasksListInput)(nil)).Elem(), GetSecurityAuditLogExportTasksListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityAuditLogExportTasksListArrayInput)(nil)).Elem(), GetSecurityAuditLogExportTasksListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsSeriesDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataArrayInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsSeriesDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataSeriesInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsSeriesDataSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsSeriesDataSeriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsTimeSeriesInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsTimeSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTimeSeriesStatsTimeSeriesArrayInput)(nil)).Elem(), GetSlowLogTimeSeriesStatsTimeSeriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTopSqlsRowInput)(nil)).Elem(), GetSlowLogTopSqlsRowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTopSqlsRowArrayInput)(nil)).Elem(), GetSlowLogTopSqlsRowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTopSqlsSchemaListInput)(nil)).Elem(), GetSlowLogTopSqlsSchemaListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogTopSqlsSchemaListArrayInput)(nil)).Elem(), GetSlowLogTopSqlsSchemaListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogUserHostStatsItemInput)(nil)).Elem(), GetSlowLogUserHostStatsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowLogUserHostStatsItemArrayInput)(nil)).Elem(), GetSlowLogUserHostStatsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlFiltersListInput)(nil)).Elem(), GetSqlFiltersListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlFiltersListArrayInput)(nil)).Elem(), GetSqlFiltersListArray{})
	pulumi.RegisterOutputType(ModifyDiagDbInstanceOperationInstanceConfsOutput{})
	pulumi.RegisterOutputType(ModifyDiagDbInstanceOperationInstanceConfsPtrOutput{})
	pulumi.RegisterOutputType(SqlFilterSessionTokenOutput{})
	pulumi.RegisterOutputType(SqlFilterSessionTokenPtrOutput{})
	pulumi.RegisterOutputType(TdsqlAuditLogFilterOutput{})
	pulumi.RegisterOutputType(TdsqlAuditLogFilterPtrOutput{})
	pulumi.RegisterOutputType(GetDiagEventsListOutput{})
	pulumi.RegisterOutputType(GetDiagEventsListArrayOutput{})
	pulumi.RegisterOutputType(GetDiagHistoryEventOutput{})
	pulumi.RegisterOutputType(GetDiagHistoryEventArrayOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataArrayOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataIssueTypeOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataIssueTypeArrayOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataIssueTypeEventOutput{})
	pulumi.RegisterOutputType(GetHealthScoresDataIssueTypeEventArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityAuditLogExportTasksListOutput{})
	pulumi.RegisterOutputType(GetSecurityAuditLogExportTasksListArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsSeriesDataOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsSeriesDataArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsSeriesDataSeriesOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsSeriesDataSeriesArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsTimeSeriesOutput{})
	pulumi.RegisterOutputType(GetSlowLogTimeSeriesStatsTimeSeriesArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogTopSqlsRowOutput{})
	pulumi.RegisterOutputType(GetSlowLogTopSqlsRowArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogTopSqlsSchemaListOutput{})
	pulumi.RegisterOutputType(GetSlowLogTopSqlsSchemaListArrayOutput{})
	pulumi.RegisterOutputType(GetSlowLogUserHostStatsItemOutput{})
	pulumi.RegisterOutputType(GetSlowLogUserHostStatsItemArrayOutput{})
	pulumi.RegisterOutputType(GetSqlFiltersListOutput{})
	pulumi.RegisterOutputType(GetSqlFiltersListArrayOutput{})
}
