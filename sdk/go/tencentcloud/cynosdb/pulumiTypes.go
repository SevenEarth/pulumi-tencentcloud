// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterParamItem struct {
	// Param expected value to set.
	CurrentValue string `pulumi:"currentValue"`
	// Name of param, e.g. `characterSetServer`.
	Name string `pulumi:"name"`
	// Param old value, indicates the value which already set, this value is required when modifying current_value.
	OldValue *string `pulumi:"oldValue"`
}

// ClusterParamItemInput is an input type that accepts ClusterParamItemArgs and ClusterParamItemOutput values.
// You can construct a concrete instance of `ClusterParamItemInput` via:
//
//          ClusterParamItemArgs{...}
type ClusterParamItemInput interface {
	pulumi.Input

	ToClusterParamItemOutput() ClusterParamItemOutput
	ToClusterParamItemOutputWithContext(context.Context) ClusterParamItemOutput
}

type ClusterParamItemArgs struct {
	// Param expected value to set.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Name of param, e.g. `characterSetServer`.
	Name pulumi.StringInput `pulumi:"name"`
	// Param old value, indicates the value which already set, this value is required when modifying current_value.
	OldValue pulumi.StringPtrInput `pulumi:"oldValue"`
}

func (ClusterParamItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParamItem)(nil)).Elem()
}

func (i ClusterParamItemArgs) ToClusterParamItemOutput() ClusterParamItemOutput {
	return i.ToClusterParamItemOutputWithContext(context.Background())
}

func (i ClusterParamItemArgs) ToClusterParamItemOutputWithContext(ctx context.Context) ClusterParamItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParamItemOutput)
}

// ClusterParamItemArrayInput is an input type that accepts ClusterParamItemArray and ClusterParamItemArrayOutput values.
// You can construct a concrete instance of `ClusterParamItemArrayInput` via:
//
//          ClusterParamItemArray{ ClusterParamItemArgs{...} }
type ClusterParamItemArrayInput interface {
	pulumi.Input

	ToClusterParamItemArrayOutput() ClusterParamItemArrayOutput
	ToClusterParamItemArrayOutputWithContext(context.Context) ClusterParamItemArrayOutput
}

type ClusterParamItemArray []ClusterParamItemInput

func (ClusterParamItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParamItem)(nil)).Elem()
}

func (i ClusterParamItemArray) ToClusterParamItemArrayOutput() ClusterParamItemArrayOutput {
	return i.ToClusterParamItemArrayOutputWithContext(context.Background())
}

func (i ClusterParamItemArray) ToClusterParamItemArrayOutputWithContext(ctx context.Context) ClusterParamItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParamItemArrayOutput)
}

type ClusterParamItemOutput struct{ *pulumi.OutputState }

func (ClusterParamItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParamItem)(nil)).Elem()
}

func (o ClusterParamItemOutput) ToClusterParamItemOutput() ClusterParamItemOutput {
	return o
}

func (o ClusterParamItemOutput) ToClusterParamItemOutputWithContext(ctx context.Context) ClusterParamItemOutput {
	return o
}

// Param expected value to set.
func (o ClusterParamItemOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParamItem) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Name of param, e.g. `characterSetServer`.
func (o ClusterParamItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParamItem) string { return v.Name }).(pulumi.StringOutput)
}

// Param old value, indicates the value which already set, this value is required when modifying current_value.
func (o ClusterParamItemOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterParamItem) *string { return v.OldValue }).(pulumi.StringPtrOutput)
}

type ClusterParamItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterParamItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParamItem)(nil)).Elem()
}

func (o ClusterParamItemArrayOutput) ToClusterParamItemArrayOutput() ClusterParamItemArrayOutput {
	return o
}

func (o ClusterParamItemArrayOutput) ToClusterParamItemArrayOutputWithContext(ctx context.Context) ClusterParamItemArrayOutput {
	return o
}

func (o ClusterParamItemArrayOutput) Index(i pulumi.IntInput) ClusterParamItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParamItem {
		return vs[0].([]ClusterParamItem)[vs[1].(int)]
	}).(ClusterParamItemOutput)
}

type ClusterRoGroupAddr struct {
	// IP address for read-write connection.
	Ip *string `pulumi:"ip"`
	// Port of CynosDB cluster.
	Port *int `pulumi:"port"`
}

// ClusterRoGroupAddrInput is an input type that accepts ClusterRoGroupAddrArgs and ClusterRoGroupAddrOutput values.
// You can construct a concrete instance of `ClusterRoGroupAddrInput` via:
//
//          ClusterRoGroupAddrArgs{...}
type ClusterRoGroupAddrInput interface {
	pulumi.Input

	ToClusterRoGroupAddrOutput() ClusterRoGroupAddrOutput
	ToClusterRoGroupAddrOutputWithContext(context.Context) ClusterRoGroupAddrOutput
}

type ClusterRoGroupAddrArgs struct {
	// IP address for read-write connection.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port of CynosDB cluster.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ClusterRoGroupAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoGroupAddr)(nil)).Elem()
}

func (i ClusterRoGroupAddrArgs) ToClusterRoGroupAddrOutput() ClusterRoGroupAddrOutput {
	return i.ToClusterRoGroupAddrOutputWithContext(context.Background())
}

func (i ClusterRoGroupAddrArgs) ToClusterRoGroupAddrOutputWithContext(ctx context.Context) ClusterRoGroupAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoGroupAddrOutput)
}

// ClusterRoGroupAddrArrayInput is an input type that accepts ClusterRoGroupAddrArray and ClusterRoGroupAddrArrayOutput values.
// You can construct a concrete instance of `ClusterRoGroupAddrArrayInput` via:
//
//          ClusterRoGroupAddrArray{ ClusterRoGroupAddrArgs{...} }
type ClusterRoGroupAddrArrayInput interface {
	pulumi.Input

	ToClusterRoGroupAddrArrayOutput() ClusterRoGroupAddrArrayOutput
	ToClusterRoGroupAddrArrayOutputWithContext(context.Context) ClusterRoGroupAddrArrayOutput
}

type ClusterRoGroupAddrArray []ClusterRoGroupAddrInput

func (ClusterRoGroupAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoGroupAddr)(nil)).Elem()
}

func (i ClusterRoGroupAddrArray) ToClusterRoGroupAddrArrayOutput() ClusterRoGroupAddrArrayOutput {
	return i.ToClusterRoGroupAddrArrayOutputWithContext(context.Background())
}

func (i ClusterRoGroupAddrArray) ToClusterRoGroupAddrArrayOutputWithContext(ctx context.Context) ClusterRoGroupAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoGroupAddrArrayOutput)
}

type ClusterRoGroupAddrOutput struct{ *pulumi.OutputState }

func (ClusterRoGroupAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoGroupAddr)(nil)).Elem()
}

func (o ClusterRoGroupAddrOutput) ToClusterRoGroupAddrOutput() ClusterRoGroupAddrOutput {
	return o
}

func (o ClusterRoGroupAddrOutput) ToClusterRoGroupAddrOutputWithContext(ctx context.Context) ClusterRoGroupAddrOutput {
	return o
}

// IP address for read-write connection.
func (o ClusterRoGroupAddrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRoGroupAddr) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port of CynosDB cluster.
func (o ClusterRoGroupAddrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterRoGroupAddr) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ClusterRoGroupAddrArrayOutput struct{ *pulumi.OutputState }

func (ClusterRoGroupAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoGroupAddr)(nil)).Elem()
}

func (o ClusterRoGroupAddrArrayOutput) ToClusterRoGroupAddrArrayOutput() ClusterRoGroupAddrArrayOutput {
	return o
}

func (o ClusterRoGroupAddrArrayOutput) ToClusterRoGroupAddrArrayOutputWithContext(ctx context.Context) ClusterRoGroupAddrArrayOutput {
	return o
}

func (o ClusterRoGroupAddrArrayOutput) Index(i pulumi.IntInput) ClusterRoGroupAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterRoGroupAddr {
		return vs[0].([]ClusterRoGroupAddr)[vs[1].(int)]
	}).(ClusterRoGroupAddrOutput)
}

type ClusterRoGroupInstance struct {
	// ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
}

// ClusterRoGroupInstanceInput is an input type that accepts ClusterRoGroupInstanceArgs and ClusterRoGroupInstanceOutput values.
// You can construct a concrete instance of `ClusterRoGroupInstanceInput` via:
//
//          ClusterRoGroupInstanceArgs{...}
type ClusterRoGroupInstanceInput interface {
	pulumi.Input

	ToClusterRoGroupInstanceOutput() ClusterRoGroupInstanceOutput
	ToClusterRoGroupInstanceOutputWithContext(context.Context) ClusterRoGroupInstanceOutput
}

type ClusterRoGroupInstanceArgs struct {
	// ID of instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
}

func (ClusterRoGroupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoGroupInstance)(nil)).Elem()
}

func (i ClusterRoGroupInstanceArgs) ToClusterRoGroupInstanceOutput() ClusterRoGroupInstanceOutput {
	return i.ToClusterRoGroupInstanceOutputWithContext(context.Background())
}

func (i ClusterRoGroupInstanceArgs) ToClusterRoGroupInstanceOutputWithContext(ctx context.Context) ClusterRoGroupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoGroupInstanceOutput)
}

// ClusterRoGroupInstanceArrayInput is an input type that accepts ClusterRoGroupInstanceArray and ClusterRoGroupInstanceArrayOutput values.
// You can construct a concrete instance of `ClusterRoGroupInstanceArrayInput` via:
//
//          ClusterRoGroupInstanceArray{ ClusterRoGroupInstanceArgs{...} }
type ClusterRoGroupInstanceArrayInput interface {
	pulumi.Input

	ToClusterRoGroupInstanceArrayOutput() ClusterRoGroupInstanceArrayOutput
	ToClusterRoGroupInstanceArrayOutputWithContext(context.Context) ClusterRoGroupInstanceArrayOutput
}

type ClusterRoGroupInstanceArray []ClusterRoGroupInstanceInput

func (ClusterRoGroupInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoGroupInstance)(nil)).Elem()
}

func (i ClusterRoGroupInstanceArray) ToClusterRoGroupInstanceArrayOutput() ClusterRoGroupInstanceArrayOutput {
	return i.ToClusterRoGroupInstanceArrayOutputWithContext(context.Background())
}

func (i ClusterRoGroupInstanceArray) ToClusterRoGroupInstanceArrayOutputWithContext(ctx context.Context) ClusterRoGroupInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoGroupInstanceArrayOutput)
}

type ClusterRoGroupInstanceOutput struct{ *pulumi.OutputState }

func (ClusterRoGroupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoGroupInstance)(nil)).Elem()
}

func (o ClusterRoGroupInstanceOutput) ToClusterRoGroupInstanceOutput() ClusterRoGroupInstanceOutput {
	return o
}

func (o ClusterRoGroupInstanceOutput) ToClusterRoGroupInstanceOutputWithContext(ctx context.Context) ClusterRoGroupInstanceOutput {
	return o
}

// ID of instance.
func (o ClusterRoGroupInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRoGroupInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o ClusterRoGroupInstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRoGroupInstance) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

type ClusterRoGroupInstanceArrayOutput struct{ *pulumi.OutputState }

func (ClusterRoGroupInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoGroupInstance)(nil)).Elem()
}

func (o ClusterRoGroupInstanceArrayOutput) ToClusterRoGroupInstanceArrayOutput() ClusterRoGroupInstanceArrayOutput {
	return o
}

func (o ClusterRoGroupInstanceArrayOutput) ToClusterRoGroupInstanceArrayOutputWithContext(ctx context.Context) ClusterRoGroupInstanceArrayOutput {
	return o
}

func (o ClusterRoGroupInstanceArrayOutput) Index(i pulumi.IntInput) ClusterRoGroupInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterRoGroupInstance {
		return vs[0].([]ClusterRoGroupInstance)[vs[1].(int)]
	}).(ClusterRoGroupInstanceOutput)
}

type ClusterRwGroupAddr struct {
	// IP address for read-write connection.
	Ip *string `pulumi:"ip"`
	// Port of CynosDB cluster.
	Port *int `pulumi:"port"`
}

// ClusterRwGroupAddrInput is an input type that accepts ClusterRwGroupAddrArgs and ClusterRwGroupAddrOutput values.
// You can construct a concrete instance of `ClusterRwGroupAddrInput` via:
//
//          ClusterRwGroupAddrArgs{...}
type ClusterRwGroupAddrInput interface {
	pulumi.Input

	ToClusterRwGroupAddrOutput() ClusterRwGroupAddrOutput
	ToClusterRwGroupAddrOutputWithContext(context.Context) ClusterRwGroupAddrOutput
}

type ClusterRwGroupAddrArgs struct {
	// IP address for read-write connection.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port of CynosDB cluster.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ClusterRwGroupAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRwGroupAddr)(nil)).Elem()
}

func (i ClusterRwGroupAddrArgs) ToClusterRwGroupAddrOutput() ClusterRwGroupAddrOutput {
	return i.ToClusterRwGroupAddrOutputWithContext(context.Background())
}

func (i ClusterRwGroupAddrArgs) ToClusterRwGroupAddrOutputWithContext(ctx context.Context) ClusterRwGroupAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRwGroupAddrOutput)
}

// ClusterRwGroupAddrArrayInput is an input type that accepts ClusterRwGroupAddrArray and ClusterRwGroupAddrArrayOutput values.
// You can construct a concrete instance of `ClusterRwGroupAddrArrayInput` via:
//
//          ClusterRwGroupAddrArray{ ClusterRwGroupAddrArgs{...} }
type ClusterRwGroupAddrArrayInput interface {
	pulumi.Input

	ToClusterRwGroupAddrArrayOutput() ClusterRwGroupAddrArrayOutput
	ToClusterRwGroupAddrArrayOutputWithContext(context.Context) ClusterRwGroupAddrArrayOutput
}

type ClusterRwGroupAddrArray []ClusterRwGroupAddrInput

func (ClusterRwGroupAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRwGroupAddr)(nil)).Elem()
}

func (i ClusterRwGroupAddrArray) ToClusterRwGroupAddrArrayOutput() ClusterRwGroupAddrArrayOutput {
	return i.ToClusterRwGroupAddrArrayOutputWithContext(context.Background())
}

func (i ClusterRwGroupAddrArray) ToClusterRwGroupAddrArrayOutputWithContext(ctx context.Context) ClusterRwGroupAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRwGroupAddrArrayOutput)
}

type ClusterRwGroupAddrOutput struct{ *pulumi.OutputState }

func (ClusterRwGroupAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRwGroupAddr)(nil)).Elem()
}

func (o ClusterRwGroupAddrOutput) ToClusterRwGroupAddrOutput() ClusterRwGroupAddrOutput {
	return o
}

func (o ClusterRwGroupAddrOutput) ToClusterRwGroupAddrOutputWithContext(ctx context.Context) ClusterRwGroupAddrOutput {
	return o
}

// IP address for read-write connection.
func (o ClusterRwGroupAddrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRwGroupAddr) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port of CynosDB cluster.
func (o ClusterRwGroupAddrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterRwGroupAddr) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ClusterRwGroupAddrArrayOutput struct{ *pulumi.OutputState }

func (ClusterRwGroupAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRwGroupAddr)(nil)).Elem()
}

func (o ClusterRwGroupAddrArrayOutput) ToClusterRwGroupAddrArrayOutput() ClusterRwGroupAddrArrayOutput {
	return o
}

func (o ClusterRwGroupAddrArrayOutput) ToClusterRwGroupAddrArrayOutputWithContext(ctx context.Context) ClusterRwGroupAddrArrayOutput {
	return o
}

func (o ClusterRwGroupAddrArrayOutput) Index(i pulumi.IntInput) ClusterRwGroupAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterRwGroupAddr {
		return vs[0].([]ClusterRwGroupAddr)[vs[1].(int)]
	}).(ClusterRwGroupAddrOutput)
}

type ClusterRwGroupInstance struct {
	// ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
}

// ClusterRwGroupInstanceInput is an input type that accepts ClusterRwGroupInstanceArgs and ClusterRwGroupInstanceOutput values.
// You can construct a concrete instance of `ClusterRwGroupInstanceInput` via:
//
//          ClusterRwGroupInstanceArgs{...}
type ClusterRwGroupInstanceInput interface {
	pulumi.Input

	ToClusterRwGroupInstanceOutput() ClusterRwGroupInstanceOutput
	ToClusterRwGroupInstanceOutputWithContext(context.Context) ClusterRwGroupInstanceOutput
}

type ClusterRwGroupInstanceArgs struct {
	// ID of instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
}

func (ClusterRwGroupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRwGroupInstance)(nil)).Elem()
}

func (i ClusterRwGroupInstanceArgs) ToClusterRwGroupInstanceOutput() ClusterRwGroupInstanceOutput {
	return i.ToClusterRwGroupInstanceOutputWithContext(context.Background())
}

func (i ClusterRwGroupInstanceArgs) ToClusterRwGroupInstanceOutputWithContext(ctx context.Context) ClusterRwGroupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRwGroupInstanceOutput)
}

// ClusterRwGroupInstanceArrayInput is an input type that accepts ClusterRwGroupInstanceArray and ClusterRwGroupInstanceArrayOutput values.
// You can construct a concrete instance of `ClusterRwGroupInstanceArrayInput` via:
//
//          ClusterRwGroupInstanceArray{ ClusterRwGroupInstanceArgs{...} }
type ClusterRwGroupInstanceArrayInput interface {
	pulumi.Input

	ToClusterRwGroupInstanceArrayOutput() ClusterRwGroupInstanceArrayOutput
	ToClusterRwGroupInstanceArrayOutputWithContext(context.Context) ClusterRwGroupInstanceArrayOutput
}

type ClusterRwGroupInstanceArray []ClusterRwGroupInstanceInput

func (ClusterRwGroupInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRwGroupInstance)(nil)).Elem()
}

func (i ClusterRwGroupInstanceArray) ToClusterRwGroupInstanceArrayOutput() ClusterRwGroupInstanceArrayOutput {
	return i.ToClusterRwGroupInstanceArrayOutputWithContext(context.Background())
}

func (i ClusterRwGroupInstanceArray) ToClusterRwGroupInstanceArrayOutputWithContext(ctx context.Context) ClusterRwGroupInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRwGroupInstanceArrayOutput)
}

type ClusterRwGroupInstanceOutput struct{ *pulumi.OutputState }

func (ClusterRwGroupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRwGroupInstance)(nil)).Elem()
}

func (o ClusterRwGroupInstanceOutput) ToClusterRwGroupInstanceOutput() ClusterRwGroupInstanceOutput {
	return o
}

func (o ClusterRwGroupInstanceOutput) ToClusterRwGroupInstanceOutputWithContext(ctx context.Context) ClusterRwGroupInstanceOutput {
	return o
}

// ID of instance.
func (o ClusterRwGroupInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRwGroupInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o ClusterRwGroupInstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRwGroupInstance) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

type ClusterRwGroupInstanceArrayOutput struct{ *pulumi.OutputState }

func (ClusterRwGroupInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRwGroupInstance)(nil)).Elem()
}

func (o ClusterRwGroupInstanceArrayOutput) ToClusterRwGroupInstanceArrayOutput() ClusterRwGroupInstanceArrayOutput {
	return o
}

func (o ClusterRwGroupInstanceArrayOutput) ToClusterRwGroupInstanceArrayOutputWithContext(ctx context.Context) ClusterRwGroupInstanceArrayOutput {
	return o
}

func (o ClusterRwGroupInstanceArrayOutput) Index(i pulumi.IntInput) ClusterRwGroupInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterRwGroupInstance {
		return vs[0].([]ClusterRwGroupInstance)[vs[1].(int)]
	}).(ClusterRwGroupInstanceOutput)
}

type GetClustersClusterList struct {
	// Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Only works for PREPAID cluster.
	AutoRenewFlag int `pulumi:"autoRenewFlag"`
	// The available zone of the CynosDB Cluster.
	AvailableZone string `pulumi:"availableZone"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
	ChargeType string `pulumi:"chargeType"`
	// ID of the cluster to be queried.
	ClusterId string `pulumi:"clusterId"`
	// Storage limit of CynosDB cluster instance, unit in GB.
	ClusterLimit int `pulumi:"clusterLimit"`
	// Name of the cluster to be queried.
	ClusterName string `pulumi:"clusterName"`
	// Status of the Cynosdb cluster.
	ClusterStatus string `pulumi:"clusterStatus"`
	// Creation time of the CynosDB cluster.
	CreateTime string `pulumi:"createTime"`
	// Type of CynosDB, and available values include `MYSQL`, `POSTGRESQL`.
	DbType string `pulumi:"dbType"`
	// Version of CynosDB, which is related to `dbType`. For `MYSQL`, available value is `5.7`.
	DbVersion string `pulumi:"dbVersion"`
	// Port of CynosDB cluster.
	Port int `pulumi:"port"`
	// ID of the project to be queried.
	ProjectId int `pulumi:"projectId"`
	// ID of the subnet within this VPC.
	SubnetId string `pulumi:"subnetId"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetClustersClusterListInput is an input type that accepts GetClustersClusterListArgs and GetClustersClusterListOutput values.
// You can construct a concrete instance of `GetClustersClusterListInput` via:
//
//          GetClustersClusterListArgs{...}
type GetClustersClusterListInput interface {
	pulumi.Input

	ToGetClustersClusterListOutput() GetClustersClusterListOutput
	ToGetClustersClusterListOutputWithContext(context.Context) GetClustersClusterListOutput
}

type GetClustersClusterListArgs struct {
	// Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Only works for PREPAID cluster.
	AutoRenewFlag pulumi.IntInput `pulumi:"autoRenewFlag"`
	// The available zone of the CynosDB Cluster.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// ID of the cluster to be queried.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Storage limit of CynosDB cluster instance, unit in GB.
	ClusterLimit pulumi.IntInput `pulumi:"clusterLimit"`
	// Name of the cluster to be queried.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Status of the Cynosdb cluster.
	ClusterStatus pulumi.StringInput `pulumi:"clusterStatus"`
	// Creation time of the CynosDB cluster.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Type of CynosDB, and available values include `MYSQL`, `POSTGRESQL`.
	DbType pulumi.StringInput `pulumi:"dbType"`
	// Version of CynosDB, which is related to `dbType`. For `MYSQL`, available value is `5.7`.
	DbVersion pulumi.StringInput `pulumi:"dbVersion"`
	// Port of CynosDB cluster.
	Port pulumi.IntInput `pulumi:"port"`
	// ID of the project to be queried.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// ID of the subnet within this VPC.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetClustersClusterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterList)(nil)).Elem()
}

func (i GetClustersClusterListArgs) ToGetClustersClusterListOutput() GetClustersClusterListOutput {
	return i.ToGetClustersClusterListOutputWithContext(context.Background())
}

func (i GetClustersClusterListArgs) ToGetClustersClusterListOutputWithContext(ctx context.Context) GetClustersClusterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterListOutput)
}

// GetClustersClusterListArrayInput is an input type that accepts GetClustersClusterListArray and GetClustersClusterListArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterListArrayInput` via:
//
//          GetClustersClusterListArray{ GetClustersClusterListArgs{...} }
type GetClustersClusterListArrayInput interface {
	pulumi.Input

	ToGetClustersClusterListArrayOutput() GetClustersClusterListArrayOutput
	ToGetClustersClusterListArrayOutputWithContext(context.Context) GetClustersClusterListArrayOutput
}

type GetClustersClusterListArray []GetClustersClusterListInput

func (GetClustersClusterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterList)(nil)).Elem()
}

func (i GetClustersClusterListArray) ToGetClustersClusterListArrayOutput() GetClustersClusterListArrayOutput {
	return i.ToGetClustersClusterListArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterListArray) ToGetClustersClusterListArrayOutputWithContext(ctx context.Context) GetClustersClusterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterListArrayOutput)
}

type GetClustersClusterListOutput struct{ *pulumi.OutputState }

func (GetClustersClusterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterList)(nil)).Elem()
}

func (o GetClustersClusterListOutput) ToGetClustersClusterListOutput() GetClustersClusterListOutput {
	return o
}

func (o GetClustersClusterListOutput) ToGetClustersClusterListOutputWithContext(ctx context.Context) GetClustersClusterListOutput {
	return o
}

// Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Only works for PREPAID cluster.
func (o GetClustersClusterListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

// The available zone of the CynosDB Cluster.
func (o GetClustersClusterListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
func (o GetClustersClusterListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// ID of the cluster to be queried.
func (o GetClustersClusterListOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Storage limit of CynosDB cluster instance, unit in GB.
func (o GetClustersClusterListOutput) ClusterLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterList) int { return v.ClusterLimit }).(pulumi.IntOutput)
}

// Name of the cluster to be queried.
func (o GetClustersClusterListOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Status of the Cynosdb cluster.
func (o GetClustersClusterListOutput) ClusterStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.ClusterStatus }).(pulumi.StringOutput)
}

// Creation time of the CynosDB cluster.
func (o GetClustersClusterListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Type of CynosDB, and available values include `MYSQL`, `POSTGRESQL`.
func (o GetClustersClusterListOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.DbType }).(pulumi.StringOutput)
}

// Version of CynosDB, which is related to `dbType`. For `MYSQL`, available value is `5.7`.
func (o GetClustersClusterListOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.DbVersion }).(pulumi.StringOutput)
}

// Port of CynosDB cluster.
func (o GetClustersClusterListOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterList) int { return v.Port }).(pulumi.IntOutput)
}

// ID of the project to be queried.
func (o GetClustersClusterListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// ID of the subnet within this VPC.
func (o GetClustersClusterListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// ID of the VPC.
func (o GetClustersClusterListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetClustersClusterListArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterList)(nil)).Elem()
}

func (o GetClustersClusterListArrayOutput) ToGetClustersClusterListArrayOutput() GetClustersClusterListArrayOutput {
	return o
}

func (o GetClustersClusterListArrayOutput) ToGetClustersClusterListArrayOutputWithContext(ctx context.Context) GetClustersClusterListArrayOutput {
	return o
}

func (o GetClustersClusterListArrayOutput) Index(i pulumi.IntInput) GetClustersClusterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterList {
		return vs[0].([]GetClustersClusterList)[vs[1].(int)]
	}).(GetClustersClusterListOutput)
}

type GetInstancesInstanceList struct {
	// ID of the cluster.
	ClusterId *string `pulumi:"clusterId"`
	// Creation time of the CynosDB instance.
	CreateTime      string `pulumi:"createTime"`
	InstanceCpuCore int    `pulumi:"instanceCpuCore"`
	// ID of the Cynosdb instance to be queried.
	InstanceId         *string `pulumi:"instanceId"`
	InstanceMemorySize int     `pulumi:"instanceMemorySize"`
	// Name of the Cynosdb instance to be queried.
	InstanceName string `pulumi:"instanceName"`
	// Status of the Cynosdb instance.
	InstanceStatus string `pulumi:"instanceStatus"`
	// Storage size of the Cynosdb instance, unit in GB.
	InstanceStorageSize int `pulumi:"instanceStorageSize"`
	// Instance type. `ro` for readonly instance, `rw` for read and write instance.
	InstanceType string `pulumi:"instanceType"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//          GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// ID of the cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Creation time of the CynosDB instance.
	CreateTime      pulumi.StringInput `pulumi:"createTime"`
	InstanceCpuCore pulumi.IntInput    `pulumi:"instanceCpuCore"`
	// ID of the Cynosdb instance to be queried.
	InstanceId         pulumi.StringPtrInput `pulumi:"instanceId"`
	InstanceMemorySize pulumi.IntInput       `pulumi:"instanceMemorySize"`
	// Name of the Cynosdb instance to be queried.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Status of the Cynosdb instance.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	// Storage size of the Cynosdb instance, unit in GB.
	InstanceStorageSize pulumi.IntInput `pulumi:"instanceStorageSize"`
	// Instance type. `ro` for readonly instance, `rw` for read and write instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//          GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// ID of the cluster.
func (o GetInstancesInstanceListOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Creation time of the CynosDB instance.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) InstanceCpuCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.InstanceCpuCore }).(pulumi.IntOutput)
}

// ID of the Cynosdb instance to be queried.
func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceListOutput) InstanceMemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.InstanceMemorySize }).(pulumi.IntOutput)
}

// Name of the Cynosdb instance to be queried.
func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Status of the Cynosdb instance.
func (o GetInstancesInstanceListOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

// Storage size of the Cynosdb instance, unit in GB.
func (o GetInstancesInstanceListOutput) InstanceStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.InstanceStorageSize }).(pulumi.IntOutput)
}

// Instance type. `ro` for readonly instance, `rw` for read and write instance.
func (o GetInstancesInstanceListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceType }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParamItemInput)(nil)).Elem(), ClusterParamItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParamItemArrayInput)(nil)).Elem(), ClusterParamItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoGroupAddrInput)(nil)).Elem(), ClusterRoGroupAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoGroupAddrArrayInput)(nil)).Elem(), ClusterRoGroupAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoGroupInstanceInput)(nil)).Elem(), ClusterRoGroupInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoGroupInstanceArrayInput)(nil)).Elem(), ClusterRoGroupInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRwGroupAddrInput)(nil)).Elem(), ClusterRwGroupAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRwGroupAddrArrayInput)(nil)).Elem(), ClusterRwGroupAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRwGroupInstanceInput)(nil)).Elem(), ClusterRwGroupInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRwGroupInstanceArrayInput)(nil)).Elem(), ClusterRwGroupInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterListInput)(nil)).Elem(), GetClustersClusterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterListArrayInput)(nil)).Elem(), GetClustersClusterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterOutputType(ClusterParamItemOutput{})
	pulumi.RegisterOutputType(ClusterParamItemArrayOutput{})
	pulumi.RegisterOutputType(ClusterRoGroupAddrOutput{})
	pulumi.RegisterOutputType(ClusterRoGroupAddrArrayOutput{})
	pulumi.RegisterOutputType(ClusterRoGroupInstanceOutput{})
	pulumi.RegisterOutputType(ClusterRoGroupInstanceArrayOutput{})
	pulumi.RegisterOutputType(ClusterRwGroupAddrOutput{})
	pulumi.RegisterOutputType(ClusterRwGroupAddrArrayOutput{})
	pulumi.RegisterOutputType(ClusterRwGroupInstanceOutput{})
	pulumi.RegisterOutputType(ClusterRwGroupInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterListOutput{})
	pulumi.RegisterOutputType(GetClustersClusterListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
}
