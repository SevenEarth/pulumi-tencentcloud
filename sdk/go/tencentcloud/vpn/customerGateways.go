// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func CustomerGateways(ctx *pulumi.Context, args *CustomerGatewaysArgs, opts ...pulumi.InvokeOption) (*CustomerGatewaysResult, error) {
	var rv CustomerGatewaysResult
	err := ctx.Invoke("tencentcloud:Vpn/customerGateways:CustomerGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking CustomerGateways.
type CustomerGatewaysArgs struct {
	Id               *string                `pulumi:"id"`
	Name             *string                `pulumi:"name"`
	PublicIpAddress  *string                `pulumi:"publicIpAddress"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by CustomerGateways.
type CustomerGatewaysResult struct {
	GatewayLists     []CustomerGatewaysGatewayList `pulumi:"gatewayLists"`
	Id               *string                       `pulumi:"id"`
	Name             *string                       `pulumi:"name"`
	PublicIpAddress  *string                       `pulumi:"publicIpAddress"`
	ResultOutputFile *string                       `pulumi:"resultOutputFile"`
	Tags             map[string]interface{}        `pulumi:"tags"`
}

func CustomerGatewaysOutput(ctx *pulumi.Context, args CustomerGatewaysOutputArgs, opts ...pulumi.InvokeOption) CustomerGatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (CustomerGatewaysResult, error) {
			args := v.(CustomerGatewaysArgs)
			r, err := CustomerGateways(ctx, &args, opts...)
			var s CustomerGatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(CustomerGatewaysResultOutput)
}

// A collection of arguments for invoking CustomerGateways.
type CustomerGatewaysOutputArgs struct {
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PublicIpAddress  pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (CustomerGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by CustomerGateways.
type CustomerGatewaysResultOutput struct{ *pulumi.OutputState }

func (CustomerGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGatewaysResult)(nil)).Elem()
}

func (o CustomerGatewaysResultOutput) ToCustomerGatewaysResultOutput() CustomerGatewaysResultOutput {
	return o
}

func (o CustomerGatewaysResultOutput) ToCustomerGatewaysResultOutputWithContext(ctx context.Context) CustomerGatewaysResultOutput {
	return o
}

func (o CustomerGatewaysResultOutput) GatewayLists() CustomerGatewaysGatewayListArrayOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) []CustomerGatewaysGatewayList { return v.GatewayLists }).(CustomerGatewaysGatewayListArrayOutput)
}

func (o CustomerGatewaysResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomerGatewaysResultOutput{})
}
