// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceStandbyInstanceList struct {
	// Indicates the ID of standby instance.
	StandbyInstanceId *string `pulumi:"standbyInstanceId"`
	// Indicates the region of standby instance.
	StandbyInstanceRegion *string `pulumi:"standbyInstanceRegion"`
}

// InstanceStandbyInstanceListInput is an input type that accepts InstanceStandbyInstanceListArgs and InstanceStandbyInstanceListOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListInput` via:
//
//          InstanceStandbyInstanceListArgs{...}
type InstanceStandbyInstanceListInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput
	ToInstanceStandbyInstanceListOutputWithContext(context.Context) InstanceStandbyInstanceListOutput
}

type InstanceStandbyInstanceListArgs struct {
	// Indicates the ID of standby instance.
	StandbyInstanceId pulumi.StringPtrInput `pulumi:"standbyInstanceId"`
	// Indicates the region of standby instance.
	StandbyInstanceRegion pulumi.StringPtrInput `pulumi:"standbyInstanceRegion"`
}

func (InstanceStandbyInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return i.ToInstanceStandbyInstanceListOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListOutput)
}

// InstanceStandbyInstanceListArrayInput is an input type that accepts InstanceStandbyInstanceListArray and InstanceStandbyInstanceListArrayOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListArrayInput` via:
//
//          InstanceStandbyInstanceListArray{ InstanceStandbyInstanceListArgs{...} }
type InstanceStandbyInstanceListArrayInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput
	ToInstanceStandbyInstanceListArrayOutputWithContext(context.Context) InstanceStandbyInstanceListArrayOutput
}

type InstanceStandbyInstanceListArray []InstanceStandbyInstanceListInput

func (InstanceStandbyInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return i.ToInstanceStandbyInstanceListArrayOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListArrayOutput)
}

type InstanceStandbyInstanceListOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return o
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return o
}

// Indicates the ID of standby instance.
func (o InstanceStandbyInstanceListOutput) StandbyInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceId }).(pulumi.StringPtrOutput)
}

// Indicates the region of standby instance.
func (o InstanceStandbyInstanceListOutput) StandbyInstanceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceRegion }).(pulumi.StringPtrOutput)
}

type InstanceStandbyInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) Index(i pulumi.IntInput) InstanceStandbyInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceStandbyInstanceList {
		return vs[0].([]InstanceStandbyInstanceList)[vs[1].(int)]
	}).(InstanceStandbyInstanceListOutput)
}

type GetInstancesInstanceList struct {
	// Auto renew flag.
	AutoRenewFlag int `pulumi:"autoRenewFlag"`
	// The available zone of the Mongodb.
	AvailableZone string `pulumi:"availableZone"`
	// The charge type of instance.
	ChargeType string `pulumi:"chargeType"`
	// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
	ClusterType string `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu int `pulumi:"cpu"`
	// Creation time of the Mongodb instance.
	CreateTime string `pulumi:"createTime"`
	// Version of the Mongodb engine.
	EngineVersion string `pulumi:"engineVersion"`
	// ID of the Mongodb instance to be queried.
	InstanceId string `pulumi:"instanceId"`
	// Name of the Mongodb instance.
	InstanceName string `pulumi:"instanceName"`
	// Type of Mongodb instance.
	MachineType string `pulumi:"machineType"`
	// Memory size.
	Memory int `pulumi:"memory"`
	// ID of the project which the instance belongs.
	ProjectId int `pulumi:"projectId"`
	// Number of sharding.
	ShardQuantity int `pulumi:"shardQuantity"`
	// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status int `pulumi:"status"`
	// ID of the subnet.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the Mongodb instance to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// IP of the Mongodb instance.
	Vip string `pulumi:"vip"`
	// Disk size.
	Volume int `pulumi:"volume"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// IP port of the Mongodb instance.
	Vport int `pulumi:"vport"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//          GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Auto renew flag.
	AutoRenewFlag pulumi.IntInput `pulumi:"autoRenewFlag"`
	// The available zone of the Mongodb.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// The charge type of instance.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Creation time of the Mongodb instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Version of the Mongodb engine.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// ID of the Mongodb instance to be queried.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of the Mongodb instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Type of Mongodb instance.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Memory size.
	Memory pulumi.IntInput `pulumi:"memory"`
	// ID of the project which the instance belongs.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Number of sharding.
	ShardQuantity pulumi.IntInput `pulumi:"shardQuantity"`
	// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status pulumi.IntInput `pulumi:"status"`
	// ID of the subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the Mongodb instance to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// IP of the Mongodb instance.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Disk size.
	Volume pulumi.IntInput `pulumi:"volume"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// IP port of the Mongodb instance.
	Vport pulumi.IntInput `pulumi:"vport"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//          GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Auto renew flag.
func (o GetInstancesInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

// The available zone of the Mongodb.
func (o GetInstancesInstanceListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// The charge type of instance.
func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
func (o GetInstancesInstanceListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Number of cpu's core.
func (o GetInstancesInstanceListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Creation time of the Mongodb instance.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Version of the Mongodb engine.
func (o GetInstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// ID of the Mongodb instance to be queried.
func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of the Mongodb instance.
func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Type of Mongodb instance.
func (o GetInstancesInstanceListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.MachineType }).(pulumi.StringOutput)
}

// Memory size.
func (o GetInstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

// ID of the project which the instance belongs.
func (o GetInstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Number of sharding.
func (o GetInstancesInstanceListOutput) ShardQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ShardQuantity }).(pulumi.IntOutput)
}

// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
func (o GetInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// ID of the subnet.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the Mongodb instance to be queried.
func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// IP of the Mongodb instance.
func (o GetInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Disk size.
func (o GetInstancesInstanceListOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Volume }).(pulumi.IntOutput)
}

// ID of the VPC.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// IP port of the Mongodb instance.
func (o GetInstancesInstanceListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Vport }).(pulumi.IntOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetZoneConfigList struct {
	// The available zone of the Mongodb.
	AvailableZone string `pulumi:"availableZone"`
	// Type of Mongodb cluster.
	ClusterType string `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu int `pulumi:"cpu"`
	// Default disk size.
	DefaultStorage int `pulumi:"defaultStorage"`
	// Version of the Mongodb version.
	EngineVersion string `pulumi:"engineVersion"`
	// Type of Mongodb instance.
	MachineType string `pulumi:"machineType"`
	// Maximum replicate set num for sharding cluster.
	MaxReplicateSetNum int `pulumi:"maxReplicateSetNum"`
	// Maximum size of the disk.
	MaxStorage int `pulumi:"maxStorage"`
	// Memory size.
	Memory int `pulumi:"memory"`
	// Minimum replicate set num for sharding cluster.
	MinReplicateSetNum int `pulumi:"minReplicateSetNum"`
	// Minimum sie of the disk.
	MinStorage int `pulumi:"minStorage"`
}

// GetZoneConfigListInput is an input type that accepts GetZoneConfigListArgs and GetZoneConfigListOutput values.
// You can construct a concrete instance of `GetZoneConfigListInput` via:
//
//          GetZoneConfigListArgs{...}
type GetZoneConfigListInput interface {
	pulumi.Input

	ToGetZoneConfigListOutput() GetZoneConfigListOutput
	ToGetZoneConfigListOutputWithContext(context.Context) GetZoneConfigListOutput
}

type GetZoneConfigListArgs struct {
	// The available zone of the Mongodb.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// Type of Mongodb cluster.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Default disk size.
	DefaultStorage pulumi.IntInput `pulumi:"defaultStorage"`
	// Version of the Mongodb version.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Type of Mongodb instance.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Maximum replicate set num for sharding cluster.
	MaxReplicateSetNum pulumi.IntInput `pulumi:"maxReplicateSetNum"`
	// Maximum size of the disk.
	MaxStorage pulumi.IntInput `pulumi:"maxStorage"`
	// Memory size.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Minimum replicate set num for sharding cluster.
	MinReplicateSetNum pulumi.IntInput `pulumi:"minReplicateSetNum"`
	// Minimum sie of the disk.
	MinStorage pulumi.IntInput `pulumi:"minStorage"`
}

func (GetZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return i.ToGetZoneConfigListOutputWithContext(context.Background())
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListOutput)
}

// GetZoneConfigListArrayInput is an input type that accepts GetZoneConfigListArray and GetZoneConfigListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigListArrayInput` via:
//
//          GetZoneConfigListArray{ GetZoneConfigListArgs{...} }
type GetZoneConfigListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput
	ToGetZoneConfigListArrayOutputWithContext(context.Context) GetZoneConfigListArrayOutput
}

type GetZoneConfigListArray []GetZoneConfigListInput

func (GetZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return i.ToGetZoneConfigListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListArrayOutput)
}

type GetZoneConfigListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return o
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return o
}

// The available zone of the Mongodb.
func (o GetZoneConfigListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// Type of Mongodb cluster.
func (o GetZoneConfigListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Number of cpu's core.
func (o GetZoneConfigListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Default disk size.
func (o GetZoneConfigListOutput) DefaultStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.DefaultStorage }).(pulumi.IntOutput)
}

// Version of the Mongodb version.
func (o GetZoneConfigListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Type of Mongodb instance.
func (o GetZoneConfigListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.MachineType }).(pulumi.StringOutput)
}

// Maximum replicate set num for sharding cluster.
func (o GetZoneConfigListOutput) MaxReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MaxReplicateSetNum }).(pulumi.IntOutput)
}

// Maximum size of the disk.
func (o GetZoneConfigListOutput) MaxStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MaxStorage }).(pulumi.IntOutput)
}

// Memory size.
func (o GetZoneConfigListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.Memory }).(pulumi.IntOutput)
}

// Minimum replicate set num for sharding cluster.
func (o GetZoneConfigListOutput) MinReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MinReplicateSetNum }).(pulumi.IntOutput)
}

// Minimum sie of the disk.
func (o GetZoneConfigListOutput) MinStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MinStorage }).(pulumi.IntOutput)
}

type GetZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigList {
		return vs[0].([]GetZoneConfigList)[vs[1].(int)]
	}).(GetZoneConfigListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListInput)(nil)).Elem(), InstanceStandbyInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListArrayInput)(nil)).Elem(), InstanceStandbyInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListInput)(nil)).Elem(), GetZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListArrayInput)(nil)).Elem(), GetZoneConfigListArray{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListOutput{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListArrayOutput{})
}
