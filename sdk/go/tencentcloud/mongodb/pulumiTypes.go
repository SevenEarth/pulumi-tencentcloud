// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type InstanceAccountAuthRole struct {
	// Permission information of the current account. 0: No permission. 1: read-only. 2: Write only. 3: Read and write.
	Mask int `pulumi:"mask"`
	// Refers to the name of the database with the current account permissions.*: Indicates all databases. db.name: Indicates the database of a specific name.
	Namespace string `pulumi:"namespace"`
}

// InstanceAccountAuthRoleInput is an input type that accepts InstanceAccountAuthRoleArgs and InstanceAccountAuthRoleOutput values.
// You can construct a concrete instance of `InstanceAccountAuthRoleInput` via:
//
//	InstanceAccountAuthRoleArgs{...}
type InstanceAccountAuthRoleInput interface {
	pulumi.Input

	ToInstanceAccountAuthRoleOutput() InstanceAccountAuthRoleOutput
	ToInstanceAccountAuthRoleOutputWithContext(context.Context) InstanceAccountAuthRoleOutput
}

type InstanceAccountAuthRoleArgs struct {
	// Permission information of the current account. 0: No permission. 1: read-only. 2: Write only. 3: Read and write.
	Mask pulumi.IntInput `pulumi:"mask"`
	// Refers to the name of the database with the current account permissions.*: Indicates all databases. db.name: Indicates the database of a specific name.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (InstanceAccountAuthRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccountAuthRole)(nil)).Elem()
}

func (i InstanceAccountAuthRoleArgs) ToInstanceAccountAuthRoleOutput() InstanceAccountAuthRoleOutput {
	return i.ToInstanceAccountAuthRoleOutputWithContext(context.Background())
}

func (i InstanceAccountAuthRoleArgs) ToInstanceAccountAuthRoleOutputWithContext(ctx context.Context) InstanceAccountAuthRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccountAuthRoleOutput)
}

// InstanceAccountAuthRoleArrayInput is an input type that accepts InstanceAccountAuthRoleArray and InstanceAccountAuthRoleArrayOutput values.
// You can construct a concrete instance of `InstanceAccountAuthRoleArrayInput` via:
//
//	InstanceAccountAuthRoleArray{ InstanceAccountAuthRoleArgs{...} }
type InstanceAccountAuthRoleArrayInput interface {
	pulumi.Input

	ToInstanceAccountAuthRoleArrayOutput() InstanceAccountAuthRoleArrayOutput
	ToInstanceAccountAuthRoleArrayOutputWithContext(context.Context) InstanceAccountAuthRoleArrayOutput
}

type InstanceAccountAuthRoleArray []InstanceAccountAuthRoleInput

func (InstanceAccountAuthRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAccountAuthRole)(nil)).Elem()
}

func (i InstanceAccountAuthRoleArray) ToInstanceAccountAuthRoleArrayOutput() InstanceAccountAuthRoleArrayOutput {
	return i.ToInstanceAccountAuthRoleArrayOutputWithContext(context.Background())
}

func (i InstanceAccountAuthRoleArray) ToInstanceAccountAuthRoleArrayOutputWithContext(ctx context.Context) InstanceAccountAuthRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccountAuthRoleArrayOutput)
}

type InstanceAccountAuthRoleOutput struct{ *pulumi.OutputState }

func (InstanceAccountAuthRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccountAuthRole)(nil)).Elem()
}

func (o InstanceAccountAuthRoleOutput) ToInstanceAccountAuthRoleOutput() InstanceAccountAuthRoleOutput {
	return o
}

func (o InstanceAccountAuthRoleOutput) ToInstanceAccountAuthRoleOutputWithContext(ctx context.Context) InstanceAccountAuthRoleOutput {
	return o
}

// Permission information of the current account. 0: No permission. 1: read-only. 2: Write only. 3: Read and write.
func (o InstanceAccountAuthRoleOutput) Mask() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceAccountAuthRole) int { return v.Mask }).(pulumi.IntOutput)
}

// Refers to the name of the database with the current account permissions.*: Indicates all databases. db.name: Indicates the database of a specific name.
func (o InstanceAccountAuthRoleOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAccountAuthRole) string { return v.Namespace }).(pulumi.StringOutput)
}

type InstanceAccountAuthRoleArrayOutput struct{ *pulumi.OutputState }

func (InstanceAccountAuthRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAccountAuthRole)(nil)).Elem()
}

func (o InstanceAccountAuthRoleArrayOutput) ToInstanceAccountAuthRoleArrayOutput() InstanceAccountAuthRoleArrayOutput {
	return o
}

func (o InstanceAccountAuthRoleArrayOutput) ToInstanceAccountAuthRoleArrayOutputWithContext(ctx context.Context) InstanceAccountAuthRoleArrayOutput {
	return o
}

func (o InstanceAccountAuthRoleArrayOutput) Index(i pulumi.IntInput) InstanceAccountAuthRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceAccountAuthRole {
		return vs[0].([]InstanceAccountAuthRole)[vs[1].(int)]
	}).(InstanceAccountAuthRoleOutput)
}

type InstanceAddNodeList struct {
	// The node role that needs to be added.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role string `pulumi:"role"`
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone string `pulumi:"zone"`
}

// InstanceAddNodeListInput is an input type that accepts InstanceAddNodeListArgs and InstanceAddNodeListOutput values.
// You can construct a concrete instance of `InstanceAddNodeListInput` via:
//
//	InstanceAddNodeListArgs{...}
type InstanceAddNodeListInput interface {
	pulumi.Input

	ToInstanceAddNodeListOutput() InstanceAddNodeListOutput
	ToInstanceAddNodeListOutputWithContext(context.Context) InstanceAddNodeListOutput
}

type InstanceAddNodeListArgs struct {
	// The node role that needs to be added.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role pulumi.StringInput `pulumi:"role"`
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (InstanceAddNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddNodeList)(nil)).Elem()
}

func (i InstanceAddNodeListArgs) ToInstanceAddNodeListOutput() InstanceAddNodeListOutput {
	return i.ToInstanceAddNodeListOutputWithContext(context.Background())
}

func (i InstanceAddNodeListArgs) ToInstanceAddNodeListOutputWithContext(ctx context.Context) InstanceAddNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddNodeListOutput)
}

// InstanceAddNodeListArrayInput is an input type that accepts InstanceAddNodeListArray and InstanceAddNodeListArrayOutput values.
// You can construct a concrete instance of `InstanceAddNodeListArrayInput` via:
//
//	InstanceAddNodeListArray{ InstanceAddNodeListArgs{...} }
type InstanceAddNodeListArrayInput interface {
	pulumi.Input

	ToInstanceAddNodeListArrayOutput() InstanceAddNodeListArrayOutput
	ToInstanceAddNodeListArrayOutputWithContext(context.Context) InstanceAddNodeListArrayOutput
}

type InstanceAddNodeListArray []InstanceAddNodeListInput

func (InstanceAddNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAddNodeList)(nil)).Elem()
}

func (i InstanceAddNodeListArray) ToInstanceAddNodeListArrayOutput() InstanceAddNodeListArrayOutput {
	return i.ToInstanceAddNodeListArrayOutputWithContext(context.Background())
}

func (i InstanceAddNodeListArray) ToInstanceAddNodeListArrayOutputWithContext(ctx context.Context) InstanceAddNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddNodeListArrayOutput)
}

type InstanceAddNodeListOutput struct{ *pulumi.OutputState }

func (InstanceAddNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddNodeList)(nil)).Elem()
}

func (o InstanceAddNodeListOutput) ToInstanceAddNodeListOutput() InstanceAddNodeListOutput {
	return o
}

func (o InstanceAddNodeListOutput) ToInstanceAddNodeListOutputWithContext(ctx context.Context) InstanceAddNodeListOutput {
	return o
}

// The node role that needs to be added.
// - SECONDARY: Mongod node;
// - READONLY: read-only node;
// - MONGOS: Mongos node.
func (o InstanceAddNodeListOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddNodeList) string { return v.Role }).(pulumi.StringOutput)
}

// The availability zone corresponding to the node.
// - single availability zone, where all nodes are in the same availability zone;
// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
func (o InstanceAddNodeListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddNodeList) string { return v.Zone }).(pulumi.StringOutput)
}

type InstanceAddNodeListArrayOutput struct{ *pulumi.OutputState }

func (InstanceAddNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAddNodeList)(nil)).Elem()
}

func (o InstanceAddNodeListArrayOutput) ToInstanceAddNodeListArrayOutput() InstanceAddNodeListArrayOutput {
	return o
}

func (o InstanceAddNodeListArrayOutput) ToInstanceAddNodeListArrayOutputWithContext(ctx context.Context) InstanceAddNodeListArrayOutput {
	return o
}

func (o InstanceAddNodeListArrayOutput) Index(i pulumi.IntInput) InstanceAddNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceAddNodeList {
		return vs[0].([]InstanceAddNodeList)[vs[1].(int)]
	}).(InstanceAddNodeListOutput)
}

type InstanceBackupDownloadTaskBackupSet struct {
	// Replication Id.
	ReplicaSetId string `pulumi:"replicaSetId"`
}

// InstanceBackupDownloadTaskBackupSetInput is an input type that accepts InstanceBackupDownloadTaskBackupSetArgs and InstanceBackupDownloadTaskBackupSetOutput values.
// You can construct a concrete instance of `InstanceBackupDownloadTaskBackupSetInput` via:
//
//	InstanceBackupDownloadTaskBackupSetArgs{...}
type InstanceBackupDownloadTaskBackupSetInput interface {
	pulumi.Input

	ToInstanceBackupDownloadTaskBackupSetOutput() InstanceBackupDownloadTaskBackupSetOutput
	ToInstanceBackupDownloadTaskBackupSetOutputWithContext(context.Context) InstanceBackupDownloadTaskBackupSetOutput
}

type InstanceBackupDownloadTaskBackupSetArgs struct {
	// Replication Id.
	ReplicaSetId pulumi.StringInput `pulumi:"replicaSetId"`
}

func (InstanceBackupDownloadTaskBackupSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupDownloadTaskBackupSet)(nil)).Elem()
}

func (i InstanceBackupDownloadTaskBackupSetArgs) ToInstanceBackupDownloadTaskBackupSetOutput() InstanceBackupDownloadTaskBackupSetOutput {
	return i.ToInstanceBackupDownloadTaskBackupSetOutputWithContext(context.Background())
}

func (i InstanceBackupDownloadTaskBackupSetArgs) ToInstanceBackupDownloadTaskBackupSetOutputWithContext(ctx context.Context) InstanceBackupDownloadTaskBackupSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupDownloadTaskBackupSetOutput)
}

// InstanceBackupDownloadTaskBackupSetArrayInput is an input type that accepts InstanceBackupDownloadTaskBackupSetArray and InstanceBackupDownloadTaskBackupSetArrayOutput values.
// You can construct a concrete instance of `InstanceBackupDownloadTaskBackupSetArrayInput` via:
//
//	InstanceBackupDownloadTaskBackupSetArray{ InstanceBackupDownloadTaskBackupSetArgs{...} }
type InstanceBackupDownloadTaskBackupSetArrayInput interface {
	pulumi.Input

	ToInstanceBackupDownloadTaskBackupSetArrayOutput() InstanceBackupDownloadTaskBackupSetArrayOutput
	ToInstanceBackupDownloadTaskBackupSetArrayOutputWithContext(context.Context) InstanceBackupDownloadTaskBackupSetArrayOutput
}

type InstanceBackupDownloadTaskBackupSetArray []InstanceBackupDownloadTaskBackupSetInput

func (InstanceBackupDownloadTaskBackupSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBackupDownloadTaskBackupSet)(nil)).Elem()
}

func (i InstanceBackupDownloadTaskBackupSetArray) ToInstanceBackupDownloadTaskBackupSetArrayOutput() InstanceBackupDownloadTaskBackupSetArrayOutput {
	return i.ToInstanceBackupDownloadTaskBackupSetArrayOutputWithContext(context.Background())
}

func (i InstanceBackupDownloadTaskBackupSetArray) ToInstanceBackupDownloadTaskBackupSetArrayOutputWithContext(ctx context.Context) InstanceBackupDownloadTaskBackupSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupDownloadTaskBackupSetArrayOutput)
}

type InstanceBackupDownloadTaskBackupSetOutput struct{ *pulumi.OutputState }

func (InstanceBackupDownloadTaskBackupSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupDownloadTaskBackupSet)(nil)).Elem()
}

func (o InstanceBackupDownloadTaskBackupSetOutput) ToInstanceBackupDownloadTaskBackupSetOutput() InstanceBackupDownloadTaskBackupSetOutput {
	return o
}

func (o InstanceBackupDownloadTaskBackupSetOutput) ToInstanceBackupDownloadTaskBackupSetOutputWithContext(ctx context.Context) InstanceBackupDownloadTaskBackupSetOutput {
	return o
}

// Replication Id.
func (o InstanceBackupDownloadTaskBackupSetOutput) ReplicaSetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceBackupDownloadTaskBackupSet) string { return v.ReplicaSetId }).(pulumi.StringOutput)
}

type InstanceBackupDownloadTaskBackupSetArrayOutput struct{ *pulumi.OutputState }

func (InstanceBackupDownloadTaskBackupSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBackupDownloadTaskBackupSet)(nil)).Elem()
}

func (o InstanceBackupDownloadTaskBackupSetArrayOutput) ToInstanceBackupDownloadTaskBackupSetArrayOutput() InstanceBackupDownloadTaskBackupSetArrayOutput {
	return o
}

func (o InstanceBackupDownloadTaskBackupSetArrayOutput) ToInstanceBackupDownloadTaskBackupSetArrayOutputWithContext(ctx context.Context) InstanceBackupDownloadTaskBackupSetArrayOutput {
	return o
}

func (o InstanceBackupDownloadTaskBackupSetArrayOutput) Index(i pulumi.IntInput) InstanceBackupDownloadTaskBackupSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceBackupDownloadTaskBackupSet {
		return vs[0].([]InstanceBackupDownloadTaskBackupSet)[vs[1].(int)]
	}).(InstanceBackupDownloadTaskBackupSetOutput)
}

type InstanceRemoveNodeList struct {
	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	NodeName string `pulumi:"nodeName"`
	// The node role that needs to be deleted.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role string `pulumi:"role"`
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone string `pulumi:"zone"`
}

// InstanceRemoveNodeListInput is an input type that accepts InstanceRemoveNodeListArgs and InstanceRemoveNodeListOutput values.
// You can construct a concrete instance of `InstanceRemoveNodeListInput` via:
//
//	InstanceRemoveNodeListArgs{...}
type InstanceRemoveNodeListInput interface {
	pulumi.Input

	ToInstanceRemoveNodeListOutput() InstanceRemoveNodeListOutput
	ToInstanceRemoveNodeListOutputWithContext(context.Context) InstanceRemoveNodeListOutput
}

type InstanceRemoveNodeListArgs struct {
	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// The node role that needs to be deleted.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role pulumi.StringInput `pulumi:"role"`
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (InstanceRemoveNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRemoveNodeList)(nil)).Elem()
}

func (i InstanceRemoveNodeListArgs) ToInstanceRemoveNodeListOutput() InstanceRemoveNodeListOutput {
	return i.ToInstanceRemoveNodeListOutputWithContext(context.Background())
}

func (i InstanceRemoveNodeListArgs) ToInstanceRemoveNodeListOutputWithContext(ctx context.Context) InstanceRemoveNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRemoveNodeListOutput)
}

// InstanceRemoveNodeListArrayInput is an input type that accepts InstanceRemoveNodeListArray and InstanceRemoveNodeListArrayOutput values.
// You can construct a concrete instance of `InstanceRemoveNodeListArrayInput` via:
//
//	InstanceRemoveNodeListArray{ InstanceRemoveNodeListArgs{...} }
type InstanceRemoveNodeListArrayInput interface {
	pulumi.Input

	ToInstanceRemoveNodeListArrayOutput() InstanceRemoveNodeListArrayOutput
	ToInstanceRemoveNodeListArrayOutputWithContext(context.Context) InstanceRemoveNodeListArrayOutput
}

type InstanceRemoveNodeListArray []InstanceRemoveNodeListInput

func (InstanceRemoveNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRemoveNodeList)(nil)).Elem()
}

func (i InstanceRemoveNodeListArray) ToInstanceRemoveNodeListArrayOutput() InstanceRemoveNodeListArrayOutput {
	return i.ToInstanceRemoveNodeListArrayOutputWithContext(context.Background())
}

func (i InstanceRemoveNodeListArray) ToInstanceRemoveNodeListArrayOutputWithContext(ctx context.Context) InstanceRemoveNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRemoveNodeListArrayOutput)
}

type InstanceRemoveNodeListOutput struct{ *pulumi.OutputState }

func (InstanceRemoveNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRemoveNodeList)(nil)).Elem()
}

func (o InstanceRemoveNodeListOutput) ToInstanceRemoveNodeListOutput() InstanceRemoveNodeListOutput {
	return o
}

func (o InstanceRemoveNodeListOutput) ToInstanceRemoveNodeListOutputWithContext(ctx context.Context) InstanceRemoveNodeListOutput {
	return o
}

// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
func (o InstanceRemoveNodeListOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRemoveNodeList) string { return v.NodeName }).(pulumi.StringOutput)
}

// The node role that needs to be deleted.
// - SECONDARY: Mongod node;
// - READONLY: read-only node;
// - MONGOS: Mongos node.
func (o InstanceRemoveNodeListOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRemoveNodeList) string { return v.Role }).(pulumi.StringOutput)
}

// The availability zone corresponding to the node.
// - single availability zone, where all nodes are in the same availability zone;
// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
func (o InstanceRemoveNodeListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRemoveNodeList) string { return v.Zone }).(pulumi.StringOutput)
}

type InstanceRemoveNodeListArrayOutput struct{ *pulumi.OutputState }

func (InstanceRemoveNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRemoveNodeList)(nil)).Elem()
}

func (o InstanceRemoveNodeListArrayOutput) ToInstanceRemoveNodeListArrayOutput() InstanceRemoveNodeListArrayOutput {
	return o
}

func (o InstanceRemoveNodeListArrayOutput) ToInstanceRemoveNodeListArrayOutputWithContext(ctx context.Context) InstanceRemoveNodeListArrayOutput {
	return o
}

func (o InstanceRemoveNodeListArrayOutput) Index(i pulumi.IntInput) InstanceRemoveNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceRemoveNodeList {
		return vs[0].([]InstanceRemoveNodeList)[vs[1].(int)]
	}).(InstanceRemoveNodeListOutput)
}

type InstanceStandbyInstanceList struct {
	// Indicates the ID of standby instance.
	StandbyInstanceId *string `pulumi:"standbyInstanceId"`
	// Indicates the region of standby instance.
	StandbyInstanceRegion *string `pulumi:"standbyInstanceRegion"`
}

// InstanceStandbyInstanceListInput is an input type that accepts InstanceStandbyInstanceListArgs and InstanceStandbyInstanceListOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListInput` via:
//
//	InstanceStandbyInstanceListArgs{...}
type InstanceStandbyInstanceListInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput
	ToInstanceStandbyInstanceListOutputWithContext(context.Context) InstanceStandbyInstanceListOutput
}

type InstanceStandbyInstanceListArgs struct {
	// Indicates the ID of standby instance.
	StandbyInstanceId pulumi.StringPtrInput `pulumi:"standbyInstanceId"`
	// Indicates the region of standby instance.
	StandbyInstanceRegion pulumi.StringPtrInput `pulumi:"standbyInstanceRegion"`
}

func (InstanceStandbyInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return i.ToInstanceStandbyInstanceListOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListOutput)
}

// InstanceStandbyInstanceListArrayInput is an input type that accepts InstanceStandbyInstanceListArray and InstanceStandbyInstanceListArrayOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListArrayInput` via:
//
//	InstanceStandbyInstanceListArray{ InstanceStandbyInstanceListArgs{...} }
type InstanceStandbyInstanceListArrayInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput
	ToInstanceStandbyInstanceListArrayOutputWithContext(context.Context) InstanceStandbyInstanceListArrayOutput
}

type InstanceStandbyInstanceListArray []InstanceStandbyInstanceListInput

func (InstanceStandbyInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return i.ToInstanceStandbyInstanceListArrayOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListArrayOutput)
}

type InstanceStandbyInstanceListOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return o
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return o
}

// Indicates the ID of standby instance.
func (o InstanceStandbyInstanceListOutput) StandbyInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceId }).(pulumi.StringPtrOutput)
}

// Indicates the region of standby instance.
func (o InstanceStandbyInstanceListOutput) StandbyInstanceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceRegion }).(pulumi.StringPtrOutput)
}

type InstanceStandbyInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) Index(i pulumi.IntInput) InstanceStandbyInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceStandbyInstanceList {
		return vs[0].([]InstanceStandbyInstanceList)[vs[1].(int)]
	}).(InstanceStandbyInstanceListOutput)
}

type InstanceTransparentDataEncryptionKeyInfoList struct {
	// Instance and key binding time.
	CreateTime *string `pulumi:"createTime"`
	// Master Key ID.
	KeyId *string `pulumi:"keyId"`
	// Master key name.
	KeyName *string `pulumi:"keyName"`
	// Key origin.
	KeyOrigin *string `pulumi:"keyOrigin"`
	// Purpose of the key.
	KeyUsage *string `pulumi:"keyUsage"`
	// Key status.
	Status *string `pulumi:"status"`
}

// InstanceTransparentDataEncryptionKeyInfoListInput is an input type that accepts InstanceTransparentDataEncryptionKeyInfoListArgs and InstanceTransparentDataEncryptionKeyInfoListOutput values.
// You can construct a concrete instance of `InstanceTransparentDataEncryptionKeyInfoListInput` via:
//
//	InstanceTransparentDataEncryptionKeyInfoListArgs{...}
type InstanceTransparentDataEncryptionKeyInfoListInput interface {
	pulumi.Input

	ToInstanceTransparentDataEncryptionKeyInfoListOutput() InstanceTransparentDataEncryptionKeyInfoListOutput
	ToInstanceTransparentDataEncryptionKeyInfoListOutputWithContext(context.Context) InstanceTransparentDataEncryptionKeyInfoListOutput
}

type InstanceTransparentDataEncryptionKeyInfoListArgs struct {
	// Instance and key binding time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Master Key ID.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// Master key name.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// Key origin.
	KeyOrigin pulumi.StringPtrInput `pulumi:"keyOrigin"`
	// Purpose of the key.
	KeyUsage pulumi.StringPtrInput `pulumi:"keyUsage"`
	// Key status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InstanceTransparentDataEncryptionKeyInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTransparentDataEncryptionKeyInfoList)(nil)).Elem()
}

func (i InstanceTransparentDataEncryptionKeyInfoListArgs) ToInstanceTransparentDataEncryptionKeyInfoListOutput() InstanceTransparentDataEncryptionKeyInfoListOutput {
	return i.ToInstanceTransparentDataEncryptionKeyInfoListOutputWithContext(context.Background())
}

func (i InstanceTransparentDataEncryptionKeyInfoListArgs) ToInstanceTransparentDataEncryptionKeyInfoListOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionKeyInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTransparentDataEncryptionKeyInfoListOutput)
}

// InstanceTransparentDataEncryptionKeyInfoListArrayInput is an input type that accepts InstanceTransparentDataEncryptionKeyInfoListArray and InstanceTransparentDataEncryptionKeyInfoListArrayOutput values.
// You can construct a concrete instance of `InstanceTransparentDataEncryptionKeyInfoListArrayInput` via:
//
//	InstanceTransparentDataEncryptionKeyInfoListArray{ InstanceTransparentDataEncryptionKeyInfoListArgs{...} }
type InstanceTransparentDataEncryptionKeyInfoListArrayInput interface {
	pulumi.Input

	ToInstanceTransparentDataEncryptionKeyInfoListArrayOutput() InstanceTransparentDataEncryptionKeyInfoListArrayOutput
	ToInstanceTransparentDataEncryptionKeyInfoListArrayOutputWithContext(context.Context) InstanceTransparentDataEncryptionKeyInfoListArrayOutput
}

type InstanceTransparentDataEncryptionKeyInfoListArray []InstanceTransparentDataEncryptionKeyInfoListInput

func (InstanceTransparentDataEncryptionKeyInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTransparentDataEncryptionKeyInfoList)(nil)).Elem()
}

func (i InstanceTransparentDataEncryptionKeyInfoListArray) ToInstanceTransparentDataEncryptionKeyInfoListArrayOutput() InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
	return i.ToInstanceTransparentDataEncryptionKeyInfoListArrayOutputWithContext(context.Background())
}

func (i InstanceTransparentDataEncryptionKeyInfoListArray) ToInstanceTransparentDataEncryptionKeyInfoListArrayOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTransparentDataEncryptionKeyInfoListArrayOutput)
}

type InstanceTransparentDataEncryptionKeyInfoListOutput struct{ *pulumi.OutputState }

func (InstanceTransparentDataEncryptionKeyInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTransparentDataEncryptionKeyInfoList)(nil)).Elem()
}

func (o InstanceTransparentDataEncryptionKeyInfoListOutput) ToInstanceTransparentDataEncryptionKeyInfoListOutput() InstanceTransparentDataEncryptionKeyInfoListOutput {
	return o
}

func (o InstanceTransparentDataEncryptionKeyInfoListOutput) ToInstanceTransparentDataEncryptionKeyInfoListOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionKeyInfoListOutput {
	return o
}

// Instance and key binding time.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Master Key ID.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// Master key name.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// Key origin.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) KeyOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.KeyOrigin }).(pulumi.StringPtrOutput)
}

// Purpose of the key.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) KeyUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.KeyUsage }).(pulumi.StringPtrOutput)
}

// Key status.
func (o InstanceTransparentDataEncryptionKeyInfoListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTransparentDataEncryptionKeyInfoList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InstanceTransparentDataEncryptionKeyInfoListArrayOutput struct{ *pulumi.OutputState }

func (InstanceTransparentDataEncryptionKeyInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTransparentDataEncryptionKeyInfoList)(nil)).Elem()
}

func (o InstanceTransparentDataEncryptionKeyInfoListArrayOutput) ToInstanceTransparentDataEncryptionKeyInfoListArrayOutput() InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
	return o
}

func (o InstanceTransparentDataEncryptionKeyInfoListArrayOutput) ToInstanceTransparentDataEncryptionKeyInfoListArrayOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
	return o
}

func (o InstanceTransparentDataEncryptionKeyInfoListArrayOutput) Index(i pulumi.IntInput) InstanceTransparentDataEncryptionKeyInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTransparentDataEncryptionKeyInfoList {
		return vs[0].([]InstanceTransparentDataEncryptionKeyInfoList)[vs[1].(int)]
	}).(InstanceTransparentDataEncryptionKeyInfoListOutput)
}

type GetInstanceBackupsBackupList struct {
	// Remark of backup.
	BackupDesc string `pulumi:"backupDesc"`
	// Backup mode, currently supported: 0-logic backup, 1-physical backup, 2-all backups.The default is logical backup.
	BackupMethod int `pulumi:"backupMethod"`
	// Backup mode name.
	BackupName string `pulumi:"backupName"`
	// Size of backup(KN).
	BackupSize int `pulumi:"backupSize"`
	// Backup mode type.
	BackupType int `pulumi:"backupType"`
	// end time of backup.
	EndTime string `pulumi:"endTime"`
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId string `pulumi:"instanceId"`
	// start time of backup.
	StartTime string `pulumi:"startTime"`
	// Backup status.
	Status int `pulumi:"status"`
}

// GetInstanceBackupsBackupListInput is an input type that accepts GetInstanceBackupsBackupListArgs and GetInstanceBackupsBackupListOutput values.
// You can construct a concrete instance of `GetInstanceBackupsBackupListInput` via:
//
//	GetInstanceBackupsBackupListArgs{...}
type GetInstanceBackupsBackupListInput interface {
	pulumi.Input

	ToGetInstanceBackupsBackupListOutput() GetInstanceBackupsBackupListOutput
	ToGetInstanceBackupsBackupListOutputWithContext(context.Context) GetInstanceBackupsBackupListOutput
}

type GetInstanceBackupsBackupListArgs struct {
	// Remark of backup.
	BackupDesc pulumi.StringInput `pulumi:"backupDesc"`
	// Backup mode, currently supported: 0-logic backup, 1-physical backup, 2-all backups.The default is logical backup.
	BackupMethod pulumi.IntInput `pulumi:"backupMethod"`
	// Backup mode name.
	BackupName pulumi.StringInput `pulumi:"backupName"`
	// Size of backup(KN).
	BackupSize pulumi.IntInput `pulumi:"backupSize"`
	// Backup mode type.
	BackupType pulumi.IntInput `pulumi:"backupType"`
	// end time of backup.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// start time of backup.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Backup status.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetInstanceBackupsBackupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsBackupList)(nil)).Elem()
}

func (i GetInstanceBackupsBackupListArgs) ToGetInstanceBackupsBackupListOutput() GetInstanceBackupsBackupListOutput {
	return i.ToGetInstanceBackupsBackupListOutputWithContext(context.Background())
}

func (i GetInstanceBackupsBackupListArgs) ToGetInstanceBackupsBackupListOutputWithContext(ctx context.Context) GetInstanceBackupsBackupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsBackupListOutput)
}

// GetInstanceBackupsBackupListArrayInput is an input type that accepts GetInstanceBackupsBackupListArray and GetInstanceBackupsBackupListArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsBackupListArrayInput` via:
//
//	GetInstanceBackupsBackupListArray{ GetInstanceBackupsBackupListArgs{...} }
type GetInstanceBackupsBackupListArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsBackupListArrayOutput() GetInstanceBackupsBackupListArrayOutput
	ToGetInstanceBackupsBackupListArrayOutputWithContext(context.Context) GetInstanceBackupsBackupListArrayOutput
}

type GetInstanceBackupsBackupListArray []GetInstanceBackupsBackupListInput

func (GetInstanceBackupsBackupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsBackupList)(nil)).Elem()
}

func (i GetInstanceBackupsBackupListArray) ToGetInstanceBackupsBackupListArrayOutput() GetInstanceBackupsBackupListArrayOutput {
	return i.ToGetInstanceBackupsBackupListArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsBackupListArray) ToGetInstanceBackupsBackupListArrayOutputWithContext(ctx context.Context) GetInstanceBackupsBackupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsBackupListArrayOutput)
}

type GetInstanceBackupsBackupListOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsBackupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsBackupList)(nil)).Elem()
}

func (o GetInstanceBackupsBackupListOutput) ToGetInstanceBackupsBackupListOutput() GetInstanceBackupsBackupListOutput {
	return o
}

func (o GetInstanceBackupsBackupListOutput) ToGetInstanceBackupsBackupListOutputWithContext(ctx context.Context) GetInstanceBackupsBackupListOutput {
	return o
}

// Remark of backup.
func (o GetInstanceBackupsBackupListOutput) BackupDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) string { return v.BackupDesc }).(pulumi.StringOutput)
}

// Backup mode, currently supported: 0-logic backup, 1-physical backup, 2-all backups.The default is logical backup.
func (o GetInstanceBackupsBackupListOutput) BackupMethod() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) int { return v.BackupMethod }).(pulumi.IntOutput)
}

// Backup mode name.
func (o GetInstanceBackupsBackupListOutput) BackupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) string { return v.BackupName }).(pulumi.StringOutput)
}

// Size of backup(KN).
func (o GetInstanceBackupsBackupListOutput) BackupSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) int { return v.BackupSize }).(pulumi.IntOutput)
}

// Backup mode type.
func (o GetInstanceBackupsBackupListOutput) BackupType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) int { return v.BackupType }).(pulumi.IntOutput)
}

// end time of backup.
func (o GetInstanceBackupsBackupListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) string { return v.EndTime }).(pulumi.StringOutput)
}

// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
func (o GetInstanceBackupsBackupListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// start time of backup.
func (o GetInstanceBackupsBackupListOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) string { return v.StartTime }).(pulumi.StringOutput)
}

// Backup status.
func (o GetInstanceBackupsBackupListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsBackupList) int { return v.Status }).(pulumi.IntOutput)
}

type GetInstanceBackupsBackupListArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsBackupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsBackupList)(nil)).Elem()
}

func (o GetInstanceBackupsBackupListArrayOutput) ToGetInstanceBackupsBackupListArrayOutput() GetInstanceBackupsBackupListArrayOutput {
	return o
}

func (o GetInstanceBackupsBackupListArrayOutput) ToGetInstanceBackupsBackupListArrayOutputWithContext(ctx context.Context) GetInstanceBackupsBackupListArrayOutput {
	return o
}

func (o GetInstanceBackupsBackupListArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsBackupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsBackupList {
		return vs[0].([]GetInstanceBackupsBackupList)[vs[1].(int)]
	}).(GetInstanceBackupsBackupListOutput)
}

type GetInstanceConnectionsClient struct {
	// client connection count.
	Count int `pulumi:"count"`
	// is internal.
	InternalService bool `pulumi:"internalService"`
	// client connection ip.
	Ip string `pulumi:"ip"`
}

// GetInstanceConnectionsClientInput is an input type that accepts GetInstanceConnectionsClientArgs and GetInstanceConnectionsClientOutput values.
// You can construct a concrete instance of `GetInstanceConnectionsClientInput` via:
//
//	GetInstanceConnectionsClientArgs{...}
type GetInstanceConnectionsClientInput interface {
	pulumi.Input

	ToGetInstanceConnectionsClientOutput() GetInstanceConnectionsClientOutput
	ToGetInstanceConnectionsClientOutputWithContext(context.Context) GetInstanceConnectionsClientOutput
}

type GetInstanceConnectionsClientArgs struct {
	// client connection count.
	Count pulumi.IntInput `pulumi:"count"`
	// is internal.
	InternalService pulumi.BoolInput `pulumi:"internalService"`
	// client connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetInstanceConnectionsClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceConnectionsClient)(nil)).Elem()
}

func (i GetInstanceConnectionsClientArgs) ToGetInstanceConnectionsClientOutput() GetInstanceConnectionsClientOutput {
	return i.ToGetInstanceConnectionsClientOutputWithContext(context.Background())
}

func (i GetInstanceConnectionsClientArgs) ToGetInstanceConnectionsClientOutputWithContext(ctx context.Context) GetInstanceConnectionsClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceConnectionsClientOutput)
}

// GetInstanceConnectionsClientArrayInput is an input type that accepts GetInstanceConnectionsClientArray and GetInstanceConnectionsClientArrayOutput values.
// You can construct a concrete instance of `GetInstanceConnectionsClientArrayInput` via:
//
//	GetInstanceConnectionsClientArray{ GetInstanceConnectionsClientArgs{...} }
type GetInstanceConnectionsClientArrayInput interface {
	pulumi.Input

	ToGetInstanceConnectionsClientArrayOutput() GetInstanceConnectionsClientArrayOutput
	ToGetInstanceConnectionsClientArrayOutputWithContext(context.Context) GetInstanceConnectionsClientArrayOutput
}

type GetInstanceConnectionsClientArray []GetInstanceConnectionsClientInput

func (GetInstanceConnectionsClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceConnectionsClient)(nil)).Elem()
}

func (i GetInstanceConnectionsClientArray) ToGetInstanceConnectionsClientArrayOutput() GetInstanceConnectionsClientArrayOutput {
	return i.ToGetInstanceConnectionsClientArrayOutputWithContext(context.Background())
}

func (i GetInstanceConnectionsClientArray) ToGetInstanceConnectionsClientArrayOutputWithContext(ctx context.Context) GetInstanceConnectionsClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceConnectionsClientArrayOutput)
}

type GetInstanceConnectionsClientOutput struct{ *pulumi.OutputState }

func (GetInstanceConnectionsClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceConnectionsClient)(nil)).Elem()
}

func (o GetInstanceConnectionsClientOutput) ToGetInstanceConnectionsClientOutput() GetInstanceConnectionsClientOutput {
	return o
}

func (o GetInstanceConnectionsClientOutput) ToGetInstanceConnectionsClientOutputWithContext(ctx context.Context) GetInstanceConnectionsClientOutput {
	return o
}

// client connection count.
func (o GetInstanceConnectionsClientOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceConnectionsClient) int { return v.Count }).(pulumi.IntOutput)
}

// is internal.
func (o GetInstanceConnectionsClientOutput) InternalService() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceConnectionsClient) bool { return v.InternalService }).(pulumi.BoolOutput)
}

// client connection ip.
func (o GetInstanceConnectionsClientOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConnectionsClient) string { return v.Ip }).(pulumi.StringOutput)
}

type GetInstanceConnectionsClientArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceConnectionsClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceConnectionsClient)(nil)).Elem()
}

func (o GetInstanceConnectionsClientArrayOutput) ToGetInstanceConnectionsClientArrayOutput() GetInstanceConnectionsClientArrayOutput {
	return o
}

func (o GetInstanceConnectionsClientArrayOutput) ToGetInstanceConnectionsClientArrayOutputWithContext(ctx context.Context) GetInstanceConnectionsClientArrayOutput {
	return o
}

func (o GetInstanceConnectionsClientArrayOutput) Index(i pulumi.IntInput) GetInstanceConnectionsClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceConnectionsClient {
		return vs[0].([]GetInstanceConnectionsClient)[vs[1].(int)]
	}).(GetInstanceConnectionsClientOutput)
}

type GetInstanceCurrentOpCurrentOp struct {
	// running time(ms).
	MicrosecsRunning int `pulumi:"microsecsRunning"`
	// Node name.
	NodeName string `pulumi:"nodeName"`
	// Filter condition, the namespace namespace to which the operation belongs, in the format of db.collection.
	Ns string `pulumi:"ns"`
	// Filter condition, operation type, possible values: none, update, insert, query, command, getmore,remove and killcursors.
	Op string `pulumi:"op"`
	// operation id.
	OpId int `pulumi:"opId"`
	// operation info.
	Operation string `pulumi:"operation"`
	// operation query.
	Query string `pulumi:"query"`
	// filter condition, shard name.
	ReplicaSetName string `pulumi:"replicaSetName"`
	// Filter condition, node status, possible value: primary, secondary.
	State string `pulumi:"state"`
}

// GetInstanceCurrentOpCurrentOpInput is an input type that accepts GetInstanceCurrentOpCurrentOpArgs and GetInstanceCurrentOpCurrentOpOutput values.
// You can construct a concrete instance of `GetInstanceCurrentOpCurrentOpInput` via:
//
//	GetInstanceCurrentOpCurrentOpArgs{...}
type GetInstanceCurrentOpCurrentOpInput interface {
	pulumi.Input

	ToGetInstanceCurrentOpCurrentOpOutput() GetInstanceCurrentOpCurrentOpOutput
	ToGetInstanceCurrentOpCurrentOpOutputWithContext(context.Context) GetInstanceCurrentOpCurrentOpOutput
}

type GetInstanceCurrentOpCurrentOpArgs struct {
	// running time(ms).
	MicrosecsRunning pulumi.IntInput `pulumi:"microsecsRunning"`
	// Node name.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// Filter condition, the namespace namespace to which the operation belongs, in the format of db.collection.
	Ns pulumi.StringInput `pulumi:"ns"`
	// Filter condition, operation type, possible values: none, update, insert, query, command, getmore,remove and killcursors.
	Op pulumi.StringInput `pulumi:"op"`
	// operation id.
	OpId pulumi.IntInput `pulumi:"opId"`
	// operation info.
	Operation pulumi.StringInput `pulumi:"operation"`
	// operation query.
	Query pulumi.StringInput `pulumi:"query"`
	// filter condition, shard name.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
	// Filter condition, node status, possible value: primary, secondary.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetInstanceCurrentOpCurrentOpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCurrentOpCurrentOp)(nil)).Elem()
}

func (i GetInstanceCurrentOpCurrentOpArgs) ToGetInstanceCurrentOpCurrentOpOutput() GetInstanceCurrentOpCurrentOpOutput {
	return i.ToGetInstanceCurrentOpCurrentOpOutputWithContext(context.Background())
}

func (i GetInstanceCurrentOpCurrentOpArgs) ToGetInstanceCurrentOpCurrentOpOutputWithContext(ctx context.Context) GetInstanceCurrentOpCurrentOpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCurrentOpCurrentOpOutput)
}

// GetInstanceCurrentOpCurrentOpArrayInput is an input type that accepts GetInstanceCurrentOpCurrentOpArray and GetInstanceCurrentOpCurrentOpArrayOutput values.
// You can construct a concrete instance of `GetInstanceCurrentOpCurrentOpArrayInput` via:
//
//	GetInstanceCurrentOpCurrentOpArray{ GetInstanceCurrentOpCurrentOpArgs{...} }
type GetInstanceCurrentOpCurrentOpArrayInput interface {
	pulumi.Input

	ToGetInstanceCurrentOpCurrentOpArrayOutput() GetInstanceCurrentOpCurrentOpArrayOutput
	ToGetInstanceCurrentOpCurrentOpArrayOutputWithContext(context.Context) GetInstanceCurrentOpCurrentOpArrayOutput
}

type GetInstanceCurrentOpCurrentOpArray []GetInstanceCurrentOpCurrentOpInput

func (GetInstanceCurrentOpCurrentOpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCurrentOpCurrentOp)(nil)).Elem()
}

func (i GetInstanceCurrentOpCurrentOpArray) ToGetInstanceCurrentOpCurrentOpArrayOutput() GetInstanceCurrentOpCurrentOpArrayOutput {
	return i.ToGetInstanceCurrentOpCurrentOpArrayOutputWithContext(context.Background())
}

func (i GetInstanceCurrentOpCurrentOpArray) ToGetInstanceCurrentOpCurrentOpArrayOutputWithContext(ctx context.Context) GetInstanceCurrentOpCurrentOpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCurrentOpCurrentOpArrayOutput)
}

type GetInstanceCurrentOpCurrentOpOutput struct{ *pulumi.OutputState }

func (GetInstanceCurrentOpCurrentOpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCurrentOpCurrentOp)(nil)).Elem()
}

func (o GetInstanceCurrentOpCurrentOpOutput) ToGetInstanceCurrentOpCurrentOpOutput() GetInstanceCurrentOpCurrentOpOutput {
	return o
}

func (o GetInstanceCurrentOpCurrentOpOutput) ToGetInstanceCurrentOpCurrentOpOutputWithContext(ctx context.Context) GetInstanceCurrentOpCurrentOpOutput {
	return o
}

// running time(ms).
func (o GetInstanceCurrentOpCurrentOpOutput) MicrosecsRunning() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) int { return v.MicrosecsRunning }).(pulumi.IntOutput)
}

// Node name.
func (o GetInstanceCurrentOpCurrentOpOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.NodeName }).(pulumi.StringOutput)
}

// Filter condition, the namespace namespace to which the operation belongs, in the format of db.collection.
func (o GetInstanceCurrentOpCurrentOpOutput) Ns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.Ns }).(pulumi.StringOutput)
}

// Filter condition, operation type, possible values: none, update, insert, query, command, getmore,remove and killcursors.
func (o GetInstanceCurrentOpCurrentOpOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.Op }).(pulumi.StringOutput)
}

// operation id.
func (o GetInstanceCurrentOpCurrentOpOutput) OpId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) int { return v.OpId }).(pulumi.IntOutput)
}

// operation info.
func (o GetInstanceCurrentOpCurrentOpOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.Operation }).(pulumi.StringOutput)
}

// operation query.
func (o GetInstanceCurrentOpCurrentOpOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.Query }).(pulumi.StringOutput)
}

// filter condition, shard name.
func (o GetInstanceCurrentOpCurrentOpOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

// Filter condition, node status, possible value: primary, secondary.
func (o GetInstanceCurrentOpCurrentOpOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCurrentOpCurrentOp) string { return v.State }).(pulumi.StringOutput)
}

type GetInstanceCurrentOpCurrentOpArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceCurrentOpCurrentOpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCurrentOpCurrentOp)(nil)).Elem()
}

func (o GetInstanceCurrentOpCurrentOpArrayOutput) ToGetInstanceCurrentOpCurrentOpArrayOutput() GetInstanceCurrentOpCurrentOpArrayOutput {
	return o
}

func (o GetInstanceCurrentOpCurrentOpArrayOutput) ToGetInstanceCurrentOpCurrentOpArrayOutputWithContext(ctx context.Context) GetInstanceCurrentOpCurrentOpArrayOutput {
	return o
}

func (o GetInstanceCurrentOpCurrentOpArrayOutput) Index(i pulumi.IntInput) GetInstanceCurrentOpCurrentOpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceCurrentOpCurrentOp {
		return vs[0].([]GetInstanceCurrentOpCurrentOp)[vs[1].(int)]
	}).(GetInstanceCurrentOpCurrentOpOutput)
}

type GetInstanceParamsInstanceEnumParam struct {
	// current value.
	CurrentValue string `pulumi:"currentValue"`
	// default value.
	DefaultValue string `pulumi:"defaultValue"`
	// enum value.
	EnumValues []string `pulumi:"enumValues"`
	// if need restart.
	NeedRestart string `pulumi:"needRestart"`
	// name of parameter.
	ParamName string `pulumi:"paramName"`
	// if is running.
	Status int `pulumi:"status"`
	// descripition of parameter.
	Tips []string `pulumi:"tips"`
	// value type.
	ValueType string `pulumi:"valueType"`
}

// GetInstanceParamsInstanceEnumParamInput is an input type that accepts GetInstanceParamsInstanceEnumParamArgs and GetInstanceParamsInstanceEnumParamOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceEnumParamInput` via:
//
//	GetInstanceParamsInstanceEnumParamArgs{...}
type GetInstanceParamsInstanceEnumParamInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceEnumParamOutput() GetInstanceParamsInstanceEnumParamOutput
	ToGetInstanceParamsInstanceEnumParamOutputWithContext(context.Context) GetInstanceParamsInstanceEnumParamOutput
}

type GetInstanceParamsInstanceEnumParamArgs struct {
	// current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// enum value.
	EnumValues pulumi.StringArrayInput `pulumi:"enumValues"`
	// if need restart.
	NeedRestart pulumi.StringInput `pulumi:"needRestart"`
	// name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// if is running.
	Status pulumi.IntInput `pulumi:"status"`
	// descripition of parameter.
	Tips pulumi.StringArrayInput `pulumi:"tips"`
	// value type.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInstanceParamsInstanceEnumParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceEnumParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceEnumParamArgs) ToGetInstanceParamsInstanceEnumParamOutput() GetInstanceParamsInstanceEnumParamOutput {
	return i.ToGetInstanceParamsInstanceEnumParamOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceEnumParamArgs) ToGetInstanceParamsInstanceEnumParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceEnumParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceEnumParamOutput)
}

// GetInstanceParamsInstanceEnumParamArrayInput is an input type that accepts GetInstanceParamsInstanceEnumParamArray and GetInstanceParamsInstanceEnumParamArrayOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceEnumParamArrayInput` via:
//
//	GetInstanceParamsInstanceEnumParamArray{ GetInstanceParamsInstanceEnumParamArgs{...} }
type GetInstanceParamsInstanceEnumParamArrayInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceEnumParamArrayOutput() GetInstanceParamsInstanceEnumParamArrayOutput
	ToGetInstanceParamsInstanceEnumParamArrayOutputWithContext(context.Context) GetInstanceParamsInstanceEnumParamArrayOutput
}

type GetInstanceParamsInstanceEnumParamArray []GetInstanceParamsInstanceEnumParamInput

func (GetInstanceParamsInstanceEnumParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceEnumParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceEnumParamArray) ToGetInstanceParamsInstanceEnumParamArrayOutput() GetInstanceParamsInstanceEnumParamArrayOutput {
	return i.ToGetInstanceParamsInstanceEnumParamArrayOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceEnumParamArray) ToGetInstanceParamsInstanceEnumParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceEnumParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceEnumParamArrayOutput)
}

type GetInstanceParamsInstanceEnumParamOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceEnumParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceEnumParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceEnumParamOutput) ToGetInstanceParamsInstanceEnumParamOutput() GetInstanceParamsInstanceEnumParamOutput {
	return o
}

func (o GetInstanceParamsInstanceEnumParamOutput) ToGetInstanceParamsInstanceEnumParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceEnumParamOutput {
	return o
}

// current value.
func (o GetInstanceParamsInstanceEnumParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// default value.
func (o GetInstanceParamsInstanceEnumParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// enum value.
func (o GetInstanceParamsInstanceEnumParamOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

// if need restart.
func (o GetInstanceParamsInstanceEnumParamOutput) NeedRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) string { return v.NeedRestart }).(pulumi.StringOutput)
}

// name of parameter.
func (o GetInstanceParamsInstanceEnumParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// if is running.
func (o GetInstanceParamsInstanceEnumParamOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) int { return v.Status }).(pulumi.IntOutput)
}

// descripition of parameter.
func (o GetInstanceParamsInstanceEnumParamOutput) Tips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) []string { return v.Tips }).(pulumi.StringArrayOutput)
}

// value type.
func (o GetInstanceParamsInstanceEnumParamOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceEnumParam) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInstanceParamsInstanceEnumParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceEnumParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceEnumParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceEnumParamArrayOutput) ToGetInstanceParamsInstanceEnumParamArrayOutput() GetInstanceParamsInstanceEnumParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceEnumParamArrayOutput) ToGetInstanceParamsInstanceEnumParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceEnumParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceEnumParamArrayOutput) Index(i pulumi.IntInput) GetInstanceParamsInstanceEnumParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceParamsInstanceEnumParam {
		return vs[0].([]GetInstanceParamsInstanceEnumParam)[vs[1].(int)]
	}).(GetInstanceParamsInstanceEnumParamOutput)
}

type GetInstanceParamsInstanceIntegerParam struct {
	// current value.
	CurrentValue string `pulumi:"currentValue"`
	// default value.
	DefaultValue string `pulumi:"defaultValue"`
	// max value.
	Max string `pulumi:"max"`
	// min value.
	Min string `pulumi:"min"`
	// if need restart.
	NeedRestart string `pulumi:"needRestart"`
	// name of parameter.
	ParamName string `pulumi:"paramName"`
	// if is running.
	Status int `pulumi:"status"`
	// descripition of parameter.
	Tips []string `pulumi:"tips"`
	// value type.
	ValueType string `pulumi:"valueType"`
}

// GetInstanceParamsInstanceIntegerParamInput is an input type that accepts GetInstanceParamsInstanceIntegerParamArgs and GetInstanceParamsInstanceIntegerParamOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceIntegerParamInput` via:
//
//	GetInstanceParamsInstanceIntegerParamArgs{...}
type GetInstanceParamsInstanceIntegerParamInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceIntegerParamOutput() GetInstanceParamsInstanceIntegerParamOutput
	ToGetInstanceParamsInstanceIntegerParamOutputWithContext(context.Context) GetInstanceParamsInstanceIntegerParamOutput
}

type GetInstanceParamsInstanceIntegerParamArgs struct {
	// current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// max value.
	Max pulumi.StringInput `pulumi:"max"`
	// min value.
	Min pulumi.StringInput `pulumi:"min"`
	// if need restart.
	NeedRestart pulumi.StringInput `pulumi:"needRestart"`
	// name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// if is running.
	Status pulumi.IntInput `pulumi:"status"`
	// descripition of parameter.
	Tips pulumi.StringArrayInput `pulumi:"tips"`
	// value type.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInstanceParamsInstanceIntegerParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceIntegerParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceIntegerParamArgs) ToGetInstanceParamsInstanceIntegerParamOutput() GetInstanceParamsInstanceIntegerParamOutput {
	return i.ToGetInstanceParamsInstanceIntegerParamOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceIntegerParamArgs) ToGetInstanceParamsInstanceIntegerParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceIntegerParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceIntegerParamOutput)
}

// GetInstanceParamsInstanceIntegerParamArrayInput is an input type that accepts GetInstanceParamsInstanceIntegerParamArray and GetInstanceParamsInstanceIntegerParamArrayOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceIntegerParamArrayInput` via:
//
//	GetInstanceParamsInstanceIntegerParamArray{ GetInstanceParamsInstanceIntegerParamArgs{...} }
type GetInstanceParamsInstanceIntegerParamArrayInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceIntegerParamArrayOutput() GetInstanceParamsInstanceIntegerParamArrayOutput
	ToGetInstanceParamsInstanceIntegerParamArrayOutputWithContext(context.Context) GetInstanceParamsInstanceIntegerParamArrayOutput
}

type GetInstanceParamsInstanceIntegerParamArray []GetInstanceParamsInstanceIntegerParamInput

func (GetInstanceParamsInstanceIntegerParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceIntegerParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceIntegerParamArray) ToGetInstanceParamsInstanceIntegerParamArrayOutput() GetInstanceParamsInstanceIntegerParamArrayOutput {
	return i.ToGetInstanceParamsInstanceIntegerParamArrayOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceIntegerParamArray) ToGetInstanceParamsInstanceIntegerParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceIntegerParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceIntegerParamArrayOutput)
}

type GetInstanceParamsInstanceIntegerParamOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceIntegerParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceIntegerParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceIntegerParamOutput) ToGetInstanceParamsInstanceIntegerParamOutput() GetInstanceParamsInstanceIntegerParamOutput {
	return o
}

func (o GetInstanceParamsInstanceIntegerParamOutput) ToGetInstanceParamsInstanceIntegerParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceIntegerParamOutput {
	return o
}

// current value.
func (o GetInstanceParamsInstanceIntegerParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// default value.
func (o GetInstanceParamsInstanceIntegerParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// max value.
func (o GetInstanceParamsInstanceIntegerParamOutput) Max() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.Max }).(pulumi.StringOutput)
}

// min value.
func (o GetInstanceParamsInstanceIntegerParamOutput) Min() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.Min }).(pulumi.StringOutput)
}

// if need restart.
func (o GetInstanceParamsInstanceIntegerParamOutput) NeedRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.NeedRestart }).(pulumi.StringOutput)
}

// name of parameter.
func (o GetInstanceParamsInstanceIntegerParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// if is running.
func (o GetInstanceParamsInstanceIntegerParamOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) int { return v.Status }).(pulumi.IntOutput)
}

// descripition of parameter.
func (o GetInstanceParamsInstanceIntegerParamOutput) Tips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) []string { return v.Tips }).(pulumi.StringArrayOutput)
}

// value type.
func (o GetInstanceParamsInstanceIntegerParamOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceIntegerParam) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInstanceParamsInstanceIntegerParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceIntegerParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceIntegerParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceIntegerParamArrayOutput) ToGetInstanceParamsInstanceIntegerParamArrayOutput() GetInstanceParamsInstanceIntegerParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceIntegerParamArrayOutput) ToGetInstanceParamsInstanceIntegerParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceIntegerParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceIntegerParamArrayOutput) Index(i pulumi.IntInput) GetInstanceParamsInstanceIntegerParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceParamsInstanceIntegerParam {
		return vs[0].([]GetInstanceParamsInstanceIntegerParam)[vs[1].(int)]
	}).(GetInstanceParamsInstanceIntegerParamOutput)
}

type GetInstanceParamsInstanceMultiParam struct {
	// current value.
	CurrentValue string `pulumi:"currentValue"`
	// default value.
	DefaultValue string `pulumi:"defaultValue"`
	// enum value.
	EnumValues []string `pulumi:"enumValues"`
	// if need restart.
	NeedRestart string `pulumi:"needRestart"`
	// name of parameter.
	ParamName string `pulumi:"paramName"`
	// if is running.
	Status int `pulumi:"status"`
	// descripition of parameter.
	Tips []string `pulumi:"tips"`
	// value type.
	ValueType string `pulumi:"valueType"`
}

// GetInstanceParamsInstanceMultiParamInput is an input type that accepts GetInstanceParamsInstanceMultiParamArgs and GetInstanceParamsInstanceMultiParamOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceMultiParamInput` via:
//
//	GetInstanceParamsInstanceMultiParamArgs{...}
type GetInstanceParamsInstanceMultiParamInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceMultiParamOutput() GetInstanceParamsInstanceMultiParamOutput
	ToGetInstanceParamsInstanceMultiParamOutputWithContext(context.Context) GetInstanceParamsInstanceMultiParamOutput
}

type GetInstanceParamsInstanceMultiParamArgs struct {
	// current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// enum value.
	EnumValues pulumi.StringArrayInput `pulumi:"enumValues"`
	// if need restart.
	NeedRestart pulumi.StringInput `pulumi:"needRestart"`
	// name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// if is running.
	Status pulumi.IntInput `pulumi:"status"`
	// descripition of parameter.
	Tips pulumi.StringArrayInput `pulumi:"tips"`
	// value type.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInstanceParamsInstanceMultiParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceMultiParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceMultiParamArgs) ToGetInstanceParamsInstanceMultiParamOutput() GetInstanceParamsInstanceMultiParamOutput {
	return i.ToGetInstanceParamsInstanceMultiParamOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceMultiParamArgs) ToGetInstanceParamsInstanceMultiParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceMultiParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceMultiParamOutput)
}

// GetInstanceParamsInstanceMultiParamArrayInput is an input type that accepts GetInstanceParamsInstanceMultiParamArray and GetInstanceParamsInstanceMultiParamArrayOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceMultiParamArrayInput` via:
//
//	GetInstanceParamsInstanceMultiParamArray{ GetInstanceParamsInstanceMultiParamArgs{...} }
type GetInstanceParamsInstanceMultiParamArrayInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceMultiParamArrayOutput() GetInstanceParamsInstanceMultiParamArrayOutput
	ToGetInstanceParamsInstanceMultiParamArrayOutputWithContext(context.Context) GetInstanceParamsInstanceMultiParamArrayOutput
}

type GetInstanceParamsInstanceMultiParamArray []GetInstanceParamsInstanceMultiParamInput

func (GetInstanceParamsInstanceMultiParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceMultiParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceMultiParamArray) ToGetInstanceParamsInstanceMultiParamArrayOutput() GetInstanceParamsInstanceMultiParamArrayOutput {
	return i.ToGetInstanceParamsInstanceMultiParamArrayOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceMultiParamArray) ToGetInstanceParamsInstanceMultiParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceMultiParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceMultiParamArrayOutput)
}

type GetInstanceParamsInstanceMultiParamOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceMultiParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceMultiParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceMultiParamOutput) ToGetInstanceParamsInstanceMultiParamOutput() GetInstanceParamsInstanceMultiParamOutput {
	return o
}

func (o GetInstanceParamsInstanceMultiParamOutput) ToGetInstanceParamsInstanceMultiParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceMultiParamOutput {
	return o
}

// current value.
func (o GetInstanceParamsInstanceMultiParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// default value.
func (o GetInstanceParamsInstanceMultiParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// enum value.
func (o GetInstanceParamsInstanceMultiParamOutput) EnumValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) []string { return v.EnumValues }).(pulumi.StringArrayOutput)
}

// if need restart.
func (o GetInstanceParamsInstanceMultiParamOutput) NeedRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) string { return v.NeedRestart }).(pulumi.StringOutput)
}

// name of parameter.
func (o GetInstanceParamsInstanceMultiParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// if is running.
func (o GetInstanceParamsInstanceMultiParamOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) int { return v.Status }).(pulumi.IntOutput)
}

// descripition of parameter.
func (o GetInstanceParamsInstanceMultiParamOutput) Tips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) []string { return v.Tips }).(pulumi.StringArrayOutput)
}

// value type.
func (o GetInstanceParamsInstanceMultiParamOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceMultiParam) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInstanceParamsInstanceMultiParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceMultiParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceMultiParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceMultiParamArrayOutput) ToGetInstanceParamsInstanceMultiParamArrayOutput() GetInstanceParamsInstanceMultiParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceMultiParamArrayOutput) ToGetInstanceParamsInstanceMultiParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceMultiParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceMultiParamArrayOutput) Index(i pulumi.IntInput) GetInstanceParamsInstanceMultiParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceParamsInstanceMultiParam {
		return vs[0].([]GetInstanceParamsInstanceMultiParam)[vs[1].(int)]
	}).(GetInstanceParamsInstanceMultiParamOutput)
}

type GetInstanceParamsInstanceTextParam struct {
	// current value.
	CurrentValue string `pulumi:"currentValue"`
	// default value.
	DefaultValue string `pulumi:"defaultValue"`
	// if need restart.
	NeedRestart string `pulumi:"needRestart"`
	// name of parameter.
	ParamName string `pulumi:"paramName"`
	// if is running.
	Status string `pulumi:"status"`
	// text value.
	TextValue string `pulumi:"textValue"`
	// descripition of parameter.
	Tips []string `pulumi:"tips"`
	// value type.
	ValueType string `pulumi:"valueType"`
}

// GetInstanceParamsInstanceTextParamInput is an input type that accepts GetInstanceParamsInstanceTextParamArgs and GetInstanceParamsInstanceTextParamOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceTextParamInput` via:
//
//	GetInstanceParamsInstanceTextParamArgs{...}
type GetInstanceParamsInstanceTextParamInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceTextParamOutput() GetInstanceParamsInstanceTextParamOutput
	ToGetInstanceParamsInstanceTextParamOutputWithContext(context.Context) GetInstanceParamsInstanceTextParamOutput
}

type GetInstanceParamsInstanceTextParamArgs struct {
	// current value.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// if need restart.
	NeedRestart pulumi.StringInput `pulumi:"needRestart"`
	// name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// if is running.
	Status pulumi.StringInput `pulumi:"status"`
	// text value.
	TextValue pulumi.StringInput `pulumi:"textValue"`
	// descripition of parameter.
	Tips pulumi.StringArrayInput `pulumi:"tips"`
	// value type.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInstanceParamsInstanceTextParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceTextParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceTextParamArgs) ToGetInstanceParamsInstanceTextParamOutput() GetInstanceParamsInstanceTextParamOutput {
	return i.ToGetInstanceParamsInstanceTextParamOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceTextParamArgs) ToGetInstanceParamsInstanceTextParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceTextParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceTextParamOutput)
}

// GetInstanceParamsInstanceTextParamArrayInput is an input type that accepts GetInstanceParamsInstanceTextParamArray and GetInstanceParamsInstanceTextParamArrayOutput values.
// You can construct a concrete instance of `GetInstanceParamsInstanceTextParamArrayInput` via:
//
//	GetInstanceParamsInstanceTextParamArray{ GetInstanceParamsInstanceTextParamArgs{...} }
type GetInstanceParamsInstanceTextParamArrayInput interface {
	pulumi.Input

	ToGetInstanceParamsInstanceTextParamArrayOutput() GetInstanceParamsInstanceTextParamArrayOutput
	ToGetInstanceParamsInstanceTextParamArrayOutputWithContext(context.Context) GetInstanceParamsInstanceTextParamArrayOutput
}

type GetInstanceParamsInstanceTextParamArray []GetInstanceParamsInstanceTextParamInput

func (GetInstanceParamsInstanceTextParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceTextParam)(nil)).Elem()
}

func (i GetInstanceParamsInstanceTextParamArray) ToGetInstanceParamsInstanceTextParamArrayOutput() GetInstanceParamsInstanceTextParamArrayOutput {
	return i.ToGetInstanceParamsInstanceTextParamArrayOutputWithContext(context.Background())
}

func (i GetInstanceParamsInstanceTextParamArray) ToGetInstanceParamsInstanceTextParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceTextParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamsInstanceTextParamArrayOutput)
}

type GetInstanceParamsInstanceTextParamOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceTextParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamsInstanceTextParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceTextParamOutput) ToGetInstanceParamsInstanceTextParamOutput() GetInstanceParamsInstanceTextParamOutput {
	return o
}

func (o GetInstanceParamsInstanceTextParamOutput) ToGetInstanceParamsInstanceTextParamOutputWithContext(ctx context.Context) GetInstanceParamsInstanceTextParamOutput {
	return o
}

// current value.
func (o GetInstanceParamsInstanceTextParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// default value.
func (o GetInstanceParamsInstanceTextParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// if need restart.
func (o GetInstanceParamsInstanceTextParamOutput) NeedRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.NeedRestart }).(pulumi.StringOutput)
}

// name of parameter.
func (o GetInstanceParamsInstanceTextParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// if is running.
func (o GetInstanceParamsInstanceTextParamOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.Status }).(pulumi.StringOutput)
}

// text value.
func (o GetInstanceParamsInstanceTextParamOutput) TextValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.TextValue }).(pulumi.StringOutput)
}

// descripition of parameter.
func (o GetInstanceParamsInstanceTextParamOutput) Tips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) []string { return v.Tips }).(pulumi.StringArrayOutput)
}

// value type.
func (o GetInstanceParamsInstanceTextParamOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamsInstanceTextParam) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInstanceParamsInstanceTextParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceParamsInstanceTextParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamsInstanceTextParam)(nil)).Elem()
}

func (o GetInstanceParamsInstanceTextParamArrayOutput) ToGetInstanceParamsInstanceTextParamArrayOutput() GetInstanceParamsInstanceTextParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceTextParamArrayOutput) ToGetInstanceParamsInstanceTextParamArrayOutputWithContext(ctx context.Context) GetInstanceParamsInstanceTextParamArrayOutput {
	return o
}

func (o GetInstanceParamsInstanceTextParamArrayOutput) Index(i pulumi.IntInput) GetInstanceParamsInstanceTextParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceParamsInstanceTextParam {
		return vs[0].([]GetInstanceParamsInstanceTextParam)[vs[1].(int)]
	}).(GetInstanceParamsInstanceTextParamOutput)
}

type GetInstancesInstanceList struct {
	// Auto renew flag.
	AutoRenewFlag int `pulumi:"autoRenewFlag"`
	// The available zone of the Mongodb.
	AvailableZone string `pulumi:"availableZone"`
	// The charge type of instance.
	ChargeType string `pulumi:"chargeType"`
	// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
	ClusterType string `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu int `pulumi:"cpu"`
	// Creation time of the Mongodb instance.
	CreateTime string `pulumi:"createTime"`
	// Version of the Mongodb engine.
	EngineVersion string `pulumi:"engineVersion"`
	// ID of the Mongodb instance to be queried.
	InstanceId string `pulumi:"instanceId"`
	// Name of the Mongodb instance.
	InstanceName string `pulumi:"instanceName"`
	// Type of Mongodb instance.
	MachineType string `pulumi:"machineType"`
	// Memory size.
	Memory int `pulumi:"memory"`
	// ID of the project which the instance belongs.
	ProjectId int `pulumi:"projectId"`
	// Number of sharding.
	ShardQuantity int `pulumi:"shardQuantity"`
	// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status int `pulumi:"status"`
	// ID of the subnet.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the Mongodb instance to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// IP of the Mongodb instance.
	Vip string `pulumi:"vip"`
	// Disk size.
	Volume int `pulumi:"volume"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// IP port of the Mongodb instance.
	Vport int `pulumi:"vport"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Auto renew flag.
	AutoRenewFlag pulumi.IntInput `pulumi:"autoRenewFlag"`
	// The available zone of the Mongodb.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// The charge type of instance.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Creation time of the Mongodb instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Version of the Mongodb engine.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// ID of the Mongodb instance to be queried.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of the Mongodb instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Type of Mongodb instance.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Memory size.
	Memory pulumi.IntInput `pulumi:"memory"`
	// ID of the project which the instance belongs.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Number of sharding.
	ShardQuantity pulumi.IntInput `pulumi:"shardQuantity"`
	// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status pulumi.IntInput `pulumi:"status"`
	// ID of the subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the Mongodb instance to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// IP of the Mongodb instance.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Disk size.
	Volume pulumi.IntInput `pulumi:"volume"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// IP port of the Mongodb instance.
	Vport pulumi.IntInput `pulumi:"vport"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Auto renew flag.
func (o GetInstancesInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

// The available zone of the Mongodb.
func (o GetInstancesInstanceListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// The charge type of instance.
func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Type of Mongodb cluster, and available values include replica set cluster(expressed with `REPLSET`), sharding cluster(expressed with `SHARD`).
func (o GetInstancesInstanceListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Number of cpu's core.
func (o GetInstancesInstanceListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Creation time of the Mongodb instance.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Version of the Mongodb engine.
func (o GetInstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// ID of the Mongodb instance to be queried.
func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of the Mongodb instance.
func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Type of Mongodb instance.
func (o GetInstancesInstanceListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.MachineType }).(pulumi.StringOutput)
}

// Memory size.
func (o GetInstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

// ID of the project which the instance belongs.
func (o GetInstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Number of sharding.
func (o GetInstancesInstanceListOutput) ShardQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ShardQuantity }).(pulumi.IntOutput)
}

// Status of the Mongodb, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
func (o GetInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// ID of the subnet.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the Mongodb instance to be queried.
func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// IP of the Mongodb instance.
func (o GetInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Disk size.
func (o GetInstancesInstanceListOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Volume }).(pulumi.IntOutput)
}

// ID of the VPC.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// IP port of the Mongodb instance.
func (o GetInstancesInstanceListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Vport }).(pulumi.IntOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetZoneConfigList struct {
	// The available zone of the Mongodb.
	AvailableZone string `pulumi:"availableZone"`
	// Type of Mongodb cluster.
	ClusterType string `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu int `pulumi:"cpu"`
	// Default disk size.
	DefaultStorage int `pulumi:"defaultStorage"`
	// Version of the Mongodb version.
	EngineVersion string `pulumi:"engineVersion"`
	// Type of Mongodb instance.
	MachineType string `pulumi:"machineType"`
	// Maximum replicate set num for sharding cluster.
	MaxReplicateSetNum int `pulumi:"maxReplicateSetNum"`
	// Maximum size of the disk.
	MaxStorage int `pulumi:"maxStorage"`
	// Memory size.
	Memory int `pulumi:"memory"`
	// Minimum replicate set num for sharding cluster.
	MinReplicateSetNum int `pulumi:"minReplicateSetNum"`
	// Minimum sie of the disk.
	MinStorage int `pulumi:"minStorage"`
}

// GetZoneConfigListInput is an input type that accepts GetZoneConfigListArgs and GetZoneConfigListOutput values.
// You can construct a concrete instance of `GetZoneConfigListInput` via:
//
//	GetZoneConfigListArgs{...}
type GetZoneConfigListInput interface {
	pulumi.Input

	ToGetZoneConfigListOutput() GetZoneConfigListOutput
	ToGetZoneConfigListOutputWithContext(context.Context) GetZoneConfigListOutput
}

type GetZoneConfigListArgs struct {
	// The available zone of the Mongodb.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// Type of Mongodb cluster.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Number of cpu's core.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Default disk size.
	DefaultStorage pulumi.IntInput `pulumi:"defaultStorage"`
	// Version of the Mongodb version.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Type of Mongodb instance.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Maximum replicate set num for sharding cluster.
	MaxReplicateSetNum pulumi.IntInput `pulumi:"maxReplicateSetNum"`
	// Maximum size of the disk.
	MaxStorage pulumi.IntInput `pulumi:"maxStorage"`
	// Memory size.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Minimum replicate set num for sharding cluster.
	MinReplicateSetNum pulumi.IntInput `pulumi:"minReplicateSetNum"`
	// Minimum sie of the disk.
	MinStorage pulumi.IntInput `pulumi:"minStorage"`
}

func (GetZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return i.ToGetZoneConfigListOutputWithContext(context.Background())
}

func (i GetZoneConfigListArgs) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListOutput)
}

// GetZoneConfigListArrayInput is an input type that accepts GetZoneConfigListArray and GetZoneConfigListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigListArrayInput` via:
//
//	GetZoneConfigListArray{ GetZoneConfigListArgs{...} }
type GetZoneConfigListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput
	ToGetZoneConfigListArrayOutputWithContext(context.Context) GetZoneConfigListArrayOutput
}

type GetZoneConfigListArray []GetZoneConfigListInput

func (GetZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return i.ToGetZoneConfigListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigListArray) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigListArrayOutput)
}

type GetZoneConfigListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutput() GetZoneConfigListOutput {
	return o
}

func (o GetZoneConfigListOutput) ToGetZoneConfigListOutputWithContext(ctx context.Context) GetZoneConfigListOutput {
	return o
}

// The available zone of the Mongodb.
func (o GetZoneConfigListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// Type of Mongodb cluster.
func (o GetZoneConfigListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Number of cpu's core.
func (o GetZoneConfigListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Default disk size.
func (o GetZoneConfigListOutput) DefaultStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.DefaultStorage }).(pulumi.IntOutput)
}

// Version of the Mongodb version.
func (o GetZoneConfigListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Type of Mongodb instance.
func (o GetZoneConfigListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigList) string { return v.MachineType }).(pulumi.StringOutput)
}

// Maximum replicate set num for sharding cluster.
func (o GetZoneConfigListOutput) MaxReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MaxReplicateSetNum }).(pulumi.IntOutput)
}

// Maximum size of the disk.
func (o GetZoneConfigListOutput) MaxStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MaxStorage }).(pulumi.IntOutput)
}

// Memory size.
func (o GetZoneConfigListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.Memory }).(pulumi.IntOutput)
}

// Minimum replicate set num for sharding cluster.
func (o GetZoneConfigListOutput) MinReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MinReplicateSetNum }).(pulumi.IntOutput)
}

// Minimum sie of the disk.
func (o GetZoneConfigListOutput) MinStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigList) int { return v.MinStorage }).(pulumi.IntOutput)
}

type GetZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigList)(nil)).Elem()
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutput() GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) ToGetZoneConfigListArrayOutputWithContext(ctx context.Context) GetZoneConfigListArrayOutput {
	return o
}

func (o GetZoneConfigListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigList {
		return vs[0].([]GetZoneConfigList)[vs[1].(int)]
	}).(GetZoneConfigListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccountAuthRoleInput)(nil)).Elem(), InstanceAccountAuthRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccountAuthRoleArrayInput)(nil)).Elem(), InstanceAccountAuthRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddNodeListInput)(nil)).Elem(), InstanceAddNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddNodeListArrayInput)(nil)).Elem(), InstanceAddNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupDownloadTaskBackupSetInput)(nil)).Elem(), InstanceBackupDownloadTaskBackupSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupDownloadTaskBackupSetArrayInput)(nil)).Elem(), InstanceBackupDownloadTaskBackupSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRemoveNodeListInput)(nil)).Elem(), InstanceRemoveNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRemoveNodeListArrayInput)(nil)).Elem(), InstanceRemoveNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListInput)(nil)).Elem(), InstanceStandbyInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListArrayInput)(nil)).Elem(), InstanceStandbyInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransparentDataEncryptionKeyInfoListInput)(nil)).Elem(), InstanceTransparentDataEncryptionKeyInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransparentDataEncryptionKeyInfoListArrayInput)(nil)).Elem(), InstanceTransparentDataEncryptionKeyInfoListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsBackupListInput)(nil)).Elem(), GetInstanceBackupsBackupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsBackupListArrayInput)(nil)).Elem(), GetInstanceBackupsBackupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceConnectionsClientInput)(nil)).Elem(), GetInstanceConnectionsClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceConnectionsClientArrayInput)(nil)).Elem(), GetInstanceConnectionsClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceCurrentOpCurrentOpInput)(nil)).Elem(), GetInstanceCurrentOpCurrentOpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceCurrentOpCurrentOpArrayInput)(nil)).Elem(), GetInstanceCurrentOpCurrentOpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceEnumParamInput)(nil)).Elem(), GetInstanceParamsInstanceEnumParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceEnumParamArrayInput)(nil)).Elem(), GetInstanceParamsInstanceEnumParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceIntegerParamInput)(nil)).Elem(), GetInstanceParamsInstanceIntegerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceIntegerParamArrayInput)(nil)).Elem(), GetInstanceParamsInstanceIntegerParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceMultiParamInput)(nil)).Elem(), GetInstanceParamsInstanceMultiParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceMultiParamArrayInput)(nil)).Elem(), GetInstanceParamsInstanceMultiParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceTextParamInput)(nil)).Elem(), GetInstanceParamsInstanceTextParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamsInstanceTextParamArrayInput)(nil)).Elem(), GetInstanceParamsInstanceTextParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListInput)(nil)).Elem(), GetZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigListArrayInput)(nil)).Elem(), GetZoneConfigListArray{})
	pulumi.RegisterOutputType(InstanceAccountAuthRoleOutput{})
	pulumi.RegisterOutputType(InstanceAccountAuthRoleArrayOutput{})
	pulumi.RegisterOutputType(InstanceAddNodeListOutput{})
	pulumi.RegisterOutputType(InstanceAddNodeListArrayOutput{})
	pulumi.RegisterOutputType(InstanceBackupDownloadTaskBackupSetOutput{})
	pulumi.RegisterOutputType(InstanceBackupDownloadTaskBackupSetArrayOutput{})
	pulumi.RegisterOutputType(InstanceRemoveNodeListOutput{})
	pulumi.RegisterOutputType(InstanceRemoveNodeListArrayOutput{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListOutput{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListArrayOutput{})
	pulumi.RegisterOutputType(InstanceTransparentDataEncryptionKeyInfoListOutput{})
	pulumi.RegisterOutputType(InstanceTransparentDataEncryptionKeyInfoListArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsBackupListOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsBackupListArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceConnectionsClientOutput{})
	pulumi.RegisterOutputType(GetInstanceConnectionsClientArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceCurrentOpCurrentOpOutput{})
	pulumi.RegisterOutputType(GetInstanceCurrentOpCurrentOpArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceEnumParamOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceEnumParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceIntegerParamOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceIntegerParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceMultiParamOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceMultiParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceTextParamOutput{})
	pulumi.RegisterOutputType(GetInstanceParamsInstanceTextParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigListArrayOutput{})
}
