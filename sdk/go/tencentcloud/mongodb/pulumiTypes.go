// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceStandbyInstanceList struct {
	StandbyInstanceId     *string `pulumi:"standbyInstanceId"`
	StandbyInstanceRegion *string `pulumi:"standbyInstanceRegion"`
}

// InstanceStandbyInstanceListInput is an input type that accepts InstanceStandbyInstanceListArgs and InstanceStandbyInstanceListOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListInput` via:
//
//          InstanceStandbyInstanceListArgs{...}
type InstanceStandbyInstanceListInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput
	ToInstanceStandbyInstanceListOutputWithContext(context.Context) InstanceStandbyInstanceListOutput
}

type InstanceStandbyInstanceListArgs struct {
	StandbyInstanceId     pulumi.StringPtrInput `pulumi:"standbyInstanceId"`
	StandbyInstanceRegion pulumi.StringPtrInput `pulumi:"standbyInstanceRegion"`
}

func (InstanceStandbyInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return i.ToInstanceStandbyInstanceListOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArgs) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListOutput)
}

// InstanceStandbyInstanceListArrayInput is an input type that accepts InstanceStandbyInstanceListArray and InstanceStandbyInstanceListArrayOutput values.
// You can construct a concrete instance of `InstanceStandbyInstanceListArrayInput` via:
//
//          InstanceStandbyInstanceListArray{ InstanceStandbyInstanceListArgs{...} }
type InstanceStandbyInstanceListArrayInput interface {
	pulumi.Input

	ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput
	ToInstanceStandbyInstanceListArrayOutputWithContext(context.Context) InstanceStandbyInstanceListArrayOutput
}

type InstanceStandbyInstanceListArray []InstanceStandbyInstanceListInput

func (InstanceStandbyInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return i.ToInstanceStandbyInstanceListArrayOutputWithContext(context.Background())
}

func (i InstanceStandbyInstanceListArray) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStandbyInstanceListArrayOutput)
}

type InstanceStandbyInstanceListOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutput() InstanceStandbyInstanceListOutput {
	return o
}

func (o InstanceStandbyInstanceListOutput) ToInstanceStandbyInstanceListOutputWithContext(ctx context.Context) InstanceStandbyInstanceListOutput {
	return o
}

func (o InstanceStandbyInstanceListOutput) StandbyInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceId }).(pulumi.StringPtrOutput)
}

func (o InstanceStandbyInstanceListOutput) StandbyInstanceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStandbyInstanceList) *string { return v.StandbyInstanceRegion }).(pulumi.StringPtrOutput)
}

type InstanceStandbyInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstanceStandbyInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStandbyInstanceList)(nil)).Elem()
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutput() InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) ToInstanceStandbyInstanceListArrayOutputWithContext(ctx context.Context) InstanceStandbyInstanceListArrayOutput {
	return o
}

func (o InstanceStandbyInstanceListArrayOutput) Index(i pulumi.IntInput) InstanceStandbyInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceStandbyInstanceList {
		return vs[0].([]InstanceStandbyInstanceList)[vs[1].(int)]
	}).(InstanceStandbyInstanceListOutput)
}

type InstancesInstanceList struct {
	AutoRenewFlag int                    `pulumi:"autoRenewFlag"`
	AvailableZone string                 `pulumi:"availableZone"`
	ChargeType    string                 `pulumi:"chargeType"`
	ClusterType   string                 `pulumi:"clusterType"`
	Cpu           int                    `pulumi:"cpu"`
	CreateTime    string                 `pulumi:"createTime"`
	EngineVersion string                 `pulumi:"engineVersion"`
	InstanceId    string                 `pulumi:"instanceId"`
	InstanceName  string                 `pulumi:"instanceName"`
	MachineType   string                 `pulumi:"machineType"`
	Memory        int                    `pulumi:"memory"`
	ProjectId     int                    `pulumi:"projectId"`
	ShardQuantity int                    `pulumi:"shardQuantity"`
	Status        int                    `pulumi:"status"`
	SubnetId      string                 `pulumi:"subnetId"`
	Tags          map[string]interface{} `pulumi:"tags"`
	Vip           string                 `pulumi:"vip"`
	Volume        int                    `pulumi:"volume"`
	VpcId         string                 `pulumi:"vpcId"`
	Vport         int                    `pulumi:"vport"`
}

// InstancesInstanceListInput is an input type that accepts InstancesInstanceListArgs and InstancesInstanceListOutput values.
// You can construct a concrete instance of `InstancesInstanceListInput` via:
//
//          InstancesInstanceListArgs{...}
type InstancesInstanceListInput interface {
	pulumi.Input

	ToInstancesInstanceListOutput() InstancesInstanceListOutput
	ToInstancesInstanceListOutputWithContext(context.Context) InstancesInstanceListOutput
}

type InstancesInstanceListArgs struct {
	AutoRenewFlag pulumi.IntInput    `pulumi:"autoRenewFlag"`
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	ChargeType    pulumi.StringInput `pulumi:"chargeType"`
	ClusterType   pulumi.StringInput `pulumi:"clusterType"`
	Cpu           pulumi.IntInput    `pulumi:"cpu"`
	CreateTime    pulumi.StringInput `pulumi:"createTime"`
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	InstanceId    pulumi.StringInput `pulumi:"instanceId"`
	InstanceName  pulumi.StringInput `pulumi:"instanceName"`
	MachineType   pulumi.StringInput `pulumi:"machineType"`
	Memory        pulumi.IntInput    `pulumi:"memory"`
	ProjectId     pulumi.IntInput    `pulumi:"projectId"`
	ShardQuantity pulumi.IntInput    `pulumi:"shardQuantity"`
	Status        pulumi.IntInput    `pulumi:"status"`
	SubnetId      pulumi.StringInput `pulumi:"subnetId"`
	Tags          pulumi.MapInput    `pulumi:"tags"`
	Vip           pulumi.StringInput `pulumi:"vip"`
	Volume        pulumi.IntInput    `pulumi:"volume"`
	VpcId         pulumi.StringInput `pulumi:"vpcId"`
	Vport         pulumi.IntInput    `pulumi:"vport"`
}

func (InstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return i.ToInstancesInstanceListOutputWithContext(context.Background())
}

func (i InstancesInstanceListArgs) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListOutput)
}

// InstancesInstanceListArrayInput is an input type that accepts InstancesInstanceListArray and InstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceListArrayInput` via:
//
//          InstancesInstanceListArray{ InstancesInstanceListArgs{...} }
type InstancesInstanceListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput
	ToInstancesInstanceListArrayOutputWithContext(context.Context) InstancesInstanceListArrayOutput
}

type InstancesInstanceListArray []InstancesInstanceListInput

func (InstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return i.ToInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceListArray) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceListArrayOutput)
}

type InstancesInstanceListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutput() InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) ToInstancesInstanceListOutputWithContext(ctx context.Context) InstancesInstanceListOutput {
	return o
}

func (o InstancesInstanceListOutput) AutoRenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.AutoRenewFlag }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) ShardQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.ShardQuantity }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v InstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o InstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Volume }).(pulumi.IntOutput)
}

func (o InstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o InstancesInstanceListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceList) int { return v.Vport }).(pulumi.IntOutput)
}

type InstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceList)(nil)).Elem()
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutput() InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) ToInstancesInstanceListArrayOutputWithContext(ctx context.Context) InstancesInstanceListArrayOutput {
	return o
}

func (o InstancesInstanceListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceList {
		return vs[0].([]InstancesInstanceList)[vs[1].(int)]
	}).(InstancesInstanceListOutput)
}

type ZoneConfigList struct {
	AvailableZone      string `pulumi:"availableZone"`
	ClusterType        string `pulumi:"clusterType"`
	Cpu                int    `pulumi:"cpu"`
	DefaultStorage     int    `pulumi:"defaultStorage"`
	EngineVersion      string `pulumi:"engineVersion"`
	MachineType        string `pulumi:"machineType"`
	MaxReplicateSetNum int    `pulumi:"maxReplicateSetNum"`
	MaxStorage         int    `pulumi:"maxStorage"`
	Memory             int    `pulumi:"memory"`
	MinReplicateSetNum int    `pulumi:"minReplicateSetNum"`
	MinStorage         int    `pulumi:"minStorage"`
}

// ZoneConfigListInput is an input type that accepts ZoneConfigListArgs and ZoneConfigListOutput values.
// You can construct a concrete instance of `ZoneConfigListInput` via:
//
//          ZoneConfigListArgs{...}
type ZoneConfigListInput interface {
	pulumi.Input

	ToZoneConfigListOutput() ZoneConfigListOutput
	ToZoneConfigListOutputWithContext(context.Context) ZoneConfigListOutput
}

type ZoneConfigListArgs struct {
	AvailableZone      pulumi.StringInput `pulumi:"availableZone"`
	ClusterType        pulumi.StringInput `pulumi:"clusterType"`
	Cpu                pulumi.IntInput    `pulumi:"cpu"`
	DefaultStorage     pulumi.IntInput    `pulumi:"defaultStorage"`
	EngineVersion      pulumi.StringInput `pulumi:"engineVersion"`
	MachineType        pulumi.StringInput `pulumi:"machineType"`
	MaxReplicateSetNum pulumi.IntInput    `pulumi:"maxReplicateSetNum"`
	MaxStorage         pulumi.IntInput    `pulumi:"maxStorage"`
	Memory             pulumi.IntInput    `pulumi:"memory"`
	MinReplicateSetNum pulumi.IntInput    `pulumi:"minReplicateSetNum"`
	MinStorage         pulumi.IntInput    `pulumi:"minStorage"`
}

func (ZoneConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigList)(nil)).Elem()
}

func (i ZoneConfigListArgs) ToZoneConfigListOutput() ZoneConfigListOutput {
	return i.ToZoneConfigListOutputWithContext(context.Background())
}

func (i ZoneConfigListArgs) ToZoneConfigListOutputWithContext(ctx context.Context) ZoneConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListOutput)
}

// ZoneConfigListArrayInput is an input type that accepts ZoneConfigListArray and ZoneConfigListArrayOutput values.
// You can construct a concrete instance of `ZoneConfigListArrayInput` via:
//
//          ZoneConfigListArray{ ZoneConfigListArgs{...} }
type ZoneConfigListArrayInput interface {
	pulumi.Input

	ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput
	ToZoneConfigListArrayOutputWithContext(context.Context) ZoneConfigListArrayOutput
}

type ZoneConfigListArray []ZoneConfigListInput

func (ZoneConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigList)(nil)).Elem()
}

func (i ZoneConfigListArray) ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput {
	return i.ToZoneConfigListArrayOutputWithContext(context.Background())
}

func (i ZoneConfigListArray) ToZoneConfigListArrayOutputWithContext(ctx context.Context) ZoneConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneConfigListArrayOutput)
}

type ZoneConfigListOutput struct{ *pulumi.OutputState }

func (ZoneConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneConfigList)(nil)).Elem()
}

func (o ZoneConfigListOutput) ToZoneConfigListOutput() ZoneConfigListOutput {
	return o
}

func (o ZoneConfigListOutput) ToZoneConfigListOutputWithContext(ctx context.Context) ZoneConfigListOutput {
	return o
}

func (o ZoneConfigListOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigList) string { return v.AvailableZone }).(pulumi.StringOutput)
}

func (o ZoneConfigListOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigList) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o ZoneConfigListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) DefaultStorage() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.DefaultStorage }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o ZoneConfigListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneConfigList) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o ZoneConfigListOutput) MaxReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.MaxReplicateSetNum }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) MaxStorage() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.MaxStorage }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.Memory }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) MinReplicateSetNum() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.MinReplicateSetNum }).(pulumi.IntOutput)
}

func (o ZoneConfigListOutput) MinStorage() pulumi.IntOutput {
	return o.ApplyT(func(v ZoneConfigList) int { return v.MinStorage }).(pulumi.IntOutput)
}

type ZoneConfigListArrayOutput struct{ *pulumi.OutputState }

func (ZoneConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneConfigList)(nil)).Elem()
}

func (o ZoneConfigListArrayOutput) ToZoneConfigListArrayOutput() ZoneConfigListArrayOutput {
	return o
}

func (o ZoneConfigListArrayOutput) ToZoneConfigListArrayOutputWithContext(ctx context.Context) ZoneConfigListArrayOutput {
	return o
}

func (o ZoneConfigListArrayOutput) Index(i pulumi.IntInput) ZoneConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneConfigList {
		return vs[0].([]ZoneConfigList)[vs[1].(int)]
	}).(ZoneConfigListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListInput)(nil)).Elem(), InstanceStandbyInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStandbyInstanceListArrayInput)(nil)).Elem(), InstanceStandbyInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListInput)(nil)).Elem(), InstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceListArrayInput)(nil)).Elem(), InstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListInput)(nil)).Elem(), ZoneConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneConfigListArrayInput)(nil)).Elem(), ZoneConfigListArray{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListOutput{})
	pulumi.RegisterOutputType(InstanceStandbyInstanceListArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(ZoneConfigListOutput{})
	pulumi.RegisterOutputType(ZoneConfigListArrayOutput{})
}
