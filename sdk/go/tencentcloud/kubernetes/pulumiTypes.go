// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterAttachmentWorkerConfig struct {
	// Configurations of data disk.
	DataDisks []ClusterAttachmentWorkerConfigDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs []string `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs *ClusterAttachmentWorkerConfigGpuArgs `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule *bool `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget *string `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// ClusterAttachmentWorkerConfigInput is an input type that accepts ClusterAttachmentWorkerConfigArgs and ClusterAttachmentWorkerConfigOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigInput` via:
//
//          ClusterAttachmentWorkerConfigArgs{...}
type ClusterAttachmentWorkerConfigInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOutput() ClusterAttachmentWorkerConfigOutput
	ToClusterAttachmentWorkerConfigOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOutput
}

type ClusterAttachmentWorkerConfigArgs struct {
	// Configurations of data disk.
	DataDisks ClusterAttachmentWorkerConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath pulumi.StringPtrInput `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs pulumi.StringArrayInput `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs ClusterAttachmentWorkerConfigGpuArgsPtrInput `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule pulumi.BoolPtrInput `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ClusterAttachmentWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfig)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigArgs) ToClusterAttachmentWorkerConfigOutput() ClusterAttachmentWorkerConfigOutput {
	return i.ToClusterAttachmentWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigArgs) ToClusterAttachmentWorkerConfigOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOutput)
}

func (i ClusterAttachmentWorkerConfigArgs) ToClusterAttachmentWorkerConfigPtrOutput() ClusterAttachmentWorkerConfigPtrOutput {
	return i.ToClusterAttachmentWorkerConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigArgs) ToClusterAttachmentWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOutput).ToClusterAttachmentWorkerConfigPtrOutputWithContext(ctx)
}

// ClusterAttachmentWorkerConfigPtrInput is an input type that accepts ClusterAttachmentWorkerConfigArgs, ClusterAttachmentWorkerConfigPtr and ClusterAttachmentWorkerConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigPtrInput` via:
//
//          ClusterAttachmentWorkerConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAttachmentWorkerConfigPtrInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigPtrOutput() ClusterAttachmentWorkerConfigPtrOutput
	ToClusterAttachmentWorkerConfigPtrOutputWithContext(context.Context) ClusterAttachmentWorkerConfigPtrOutput
}

type clusterAttachmentWorkerConfigPtrType ClusterAttachmentWorkerConfigArgs

func ClusterAttachmentWorkerConfigPtr(v *ClusterAttachmentWorkerConfigArgs) ClusterAttachmentWorkerConfigPtrInput {
	return (*clusterAttachmentWorkerConfigPtrType)(v)
}

func (*clusterAttachmentWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfig)(nil)).Elem()
}

func (i *clusterAttachmentWorkerConfigPtrType) ToClusterAttachmentWorkerConfigPtrOutput() ClusterAttachmentWorkerConfigPtrOutput {
	return i.ToClusterAttachmentWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAttachmentWorkerConfigPtrType) ToClusterAttachmentWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigPtrOutput)
}

type ClusterAttachmentWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfig)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOutput) ToClusterAttachmentWorkerConfigOutput() ClusterAttachmentWorkerConfigOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOutput) ToClusterAttachmentWorkerConfigOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOutput) ToClusterAttachmentWorkerConfigPtrOutput() ClusterAttachmentWorkerConfigPtrOutput {
	return o.ToClusterAttachmentWorkerConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAttachmentWorkerConfigOutput) ToClusterAttachmentWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAttachmentWorkerConfig) *ClusterAttachmentWorkerConfig {
		return &v
	}).(ClusterAttachmentWorkerConfigPtrOutput)
}

// Configurations of data disk.
func (o ClusterAttachmentWorkerConfigOutput) DataDisks() ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) []ClusterAttachmentWorkerConfigDataDisk { return v.DataDisks }).(ClusterAttachmentWorkerConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o ClusterAttachmentWorkerConfigOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o ClusterAttachmentWorkerConfigOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *string { return v.DockerGraphPath }).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o ClusterAttachmentWorkerConfigOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) []string { return v.ExtraArgs }).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o ClusterAttachmentWorkerConfigOutput) GpuArgs() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *ClusterAttachmentWorkerConfigGpuArgs { return v.GpuArgs }).(ClusterAttachmentWorkerConfigGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o ClusterAttachmentWorkerConfigOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *bool { return v.IsSchedule }).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o ClusterAttachmentWorkerConfigOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o ClusterAttachmentWorkerConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfig)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigPtrOutput) ToClusterAttachmentWorkerConfigPtrOutput() ClusterAttachmentWorkerConfigPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigPtrOutput) ToClusterAttachmentWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigPtrOutput) Elem() ClusterAttachmentWorkerConfigOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) ClusterAttachmentWorkerConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAttachmentWorkerConfig
		return ret
	}).(ClusterAttachmentWorkerConfigOutput)
}

// Configurations of data disk.
func (o ClusterAttachmentWorkerConfigPtrOutput) DataDisks() ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) []ClusterAttachmentWorkerConfigDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(ClusterAttachmentWorkerConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o ClusterAttachmentWorkerConfigPtrOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredPodNum
	}).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o ClusterAttachmentWorkerConfigPtrOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerGraphPath
	}).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o ClusterAttachmentWorkerConfigPtrOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) []string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o ClusterAttachmentWorkerConfigPtrOutput) GpuArgs() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *ClusterAttachmentWorkerConfigGpuArgs {
		if v == nil {
			return nil
		}
		return v.GpuArgs
	}).(ClusterAttachmentWorkerConfigGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o ClusterAttachmentWorkerConfigPtrOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsSchedule
	}).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o ClusterAttachmentWorkerConfigPtrOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.MountTarget
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o ClusterAttachmentWorkerConfigPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType *string `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
}

// ClusterAttachmentWorkerConfigDataDiskInput is an input type that accepts ClusterAttachmentWorkerConfigDataDiskArgs and ClusterAttachmentWorkerConfigDataDiskOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigDataDiskInput` via:
//
//          ClusterAttachmentWorkerConfigDataDiskArgs{...}
type ClusterAttachmentWorkerConfigDataDiskInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigDataDiskOutput() ClusterAttachmentWorkerConfigDataDiskOutput
	ToClusterAttachmentWorkerConfigDataDiskOutputWithContext(context.Context) ClusterAttachmentWorkerConfigDataDiskOutput
}

type ClusterAttachmentWorkerConfigDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
}

func (ClusterAttachmentWorkerConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigDataDisk)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigDataDiskArgs) ToClusterAttachmentWorkerConfigDataDiskOutput() ClusterAttachmentWorkerConfigDataDiskOutput {
	return i.ToClusterAttachmentWorkerConfigDataDiskOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigDataDiskArgs) ToClusterAttachmentWorkerConfigDataDiskOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigDataDiskOutput)
}

// ClusterAttachmentWorkerConfigDataDiskArrayInput is an input type that accepts ClusterAttachmentWorkerConfigDataDiskArray and ClusterAttachmentWorkerConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigDataDiskArrayInput` via:
//
//          ClusterAttachmentWorkerConfigDataDiskArray{ ClusterAttachmentWorkerConfigDataDiskArgs{...} }
type ClusterAttachmentWorkerConfigDataDiskArrayInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigDataDiskArrayOutput() ClusterAttachmentWorkerConfigDataDiskArrayOutput
	ToClusterAttachmentWorkerConfigDataDiskArrayOutputWithContext(context.Context) ClusterAttachmentWorkerConfigDataDiskArrayOutput
}

type ClusterAttachmentWorkerConfigDataDiskArray []ClusterAttachmentWorkerConfigDataDiskInput

func (ClusterAttachmentWorkerConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAttachmentWorkerConfigDataDisk)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigDataDiskArray) ToClusterAttachmentWorkerConfigDataDiskArrayOutput() ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return i.ToClusterAttachmentWorkerConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigDataDiskArray) ToClusterAttachmentWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigDataDiskArrayOutput)
}

type ClusterAttachmentWorkerConfigDataDiskOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigDataDisk)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigDataDiskOutput) ToClusterAttachmentWorkerConfigDataDiskOutput() ClusterAttachmentWorkerConfigDataDiskOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigDataDiskOutput) ToClusterAttachmentWorkerConfigDataDiskOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ClusterAttachmentWorkerConfigDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAttachmentWorkerConfigDataDisk)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigDataDiskArrayOutput) ToClusterAttachmentWorkerConfigDataDiskArrayOutput() ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigDataDiskArrayOutput) ToClusterAttachmentWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigDataDiskArrayOutput) Index(i pulumi.IntInput) ClusterAttachmentWorkerConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterAttachmentWorkerConfigDataDisk {
		return vs[0].([]ClusterAttachmentWorkerConfigDataDisk)[vs[1].(int)]
	}).(ClusterAttachmentWorkerConfigDataDiskOutput)
}

type ClusterAttachmentWorkerConfigGpuArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda map[string]interface{} `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn map[string]interface{} `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver map[string]interface{} `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver map[string]interface{} `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable *bool `pulumi:"migEnable"`
}

// ClusterAttachmentWorkerConfigGpuArgsInput is an input type that accepts ClusterAttachmentWorkerConfigGpuArgsArgs and ClusterAttachmentWorkerConfigGpuArgsOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigGpuArgsInput` via:
//
//          ClusterAttachmentWorkerConfigGpuArgsArgs{...}
type ClusterAttachmentWorkerConfigGpuArgsInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigGpuArgsOutput() ClusterAttachmentWorkerConfigGpuArgsOutput
	ToClusterAttachmentWorkerConfigGpuArgsOutputWithContext(context.Context) ClusterAttachmentWorkerConfigGpuArgsOutput
}

type ClusterAttachmentWorkerConfigGpuArgsArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda pulumi.MapInput `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn pulumi.MapInput `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver pulumi.MapInput `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver pulumi.MapInput `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable pulumi.BoolPtrInput `pulumi:"migEnable"`
}

func (ClusterAttachmentWorkerConfigGpuArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigGpuArgs)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigGpuArgsArgs) ToClusterAttachmentWorkerConfigGpuArgsOutput() ClusterAttachmentWorkerConfigGpuArgsOutput {
	return i.ToClusterAttachmentWorkerConfigGpuArgsOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigGpuArgsArgs) ToClusterAttachmentWorkerConfigGpuArgsOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigGpuArgsOutput)
}

func (i ClusterAttachmentWorkerConfigGpuArgsArgs) ToClusterAttachmentWorkerConfigGpuArgsPtrOutput() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return i.ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigGpuArgsArgs) ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigGpuArgsOutput).ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(ctx)
}

// ClusterAttachmentWorkerConfigGpuArgsPtrInput is an input type that accepts ClusterAttachmentWorkerConfigGpuArgsArgs, ClusterAttachmentWorkerConfigGpuArgsPtr and ClusterAttachmentWorkerConfigGpuArgsPtrOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigGpuArgsPtrInput` via:
//
//          ClusterAttachmentWorkerConfigGpuArgsArgs{...}
//
//  or:
//
//          nil
type ClusterAttachmentWorkerConfigGpuArgsPtrInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigGpuArgsPtrOutput() ClusterAttachmentWorkerConfigGpuArgsPtrOutput
	ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(context.Context) ClusterAttachmentWorkerConfigGpuArgsPtrOutput
}

type clusterAttachmentWorkerConfigGpuArgsPtrType ClusterAttachmentWorkerConfigGpuArgsArgs

func ClusterAttachmentWorkerConfigGpuArgsPtr(v *ClusterAttachmentWorkerConfigGpuArgsArgs) ClusterAttachmentWorkerConfigGpuArgsPtrInput {
	return (*clusterAttachmentWorkerConfigGpuArgsPtrType)(v)
}

func (*clusterAttachmentWorkerConfigGpuArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigGpuArgs)(nil)).Elem()
}

func (i *clusterAttachmentWorkerConfigGpuArgsPtrType) ToClusterAttachmentWorkerConfigGpuArgsPtrOutput() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return i.ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAttachmentWorkerConfigGpuArgsPtrType) ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigGpuArgsPtrOutput)
}

type ClusterAttachmentWorkerConfigGpuArgsOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigGpuArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigGpuArgs)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigGpuArgsOutput) ToClusterAttachmentWorkerConfigGpuArgsOutput() ClusterAttachmentWorkerConfigGpuArgsOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigGpuArgsOutput) ToClusterAttachmentWorkerConfigGpuArgsOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigGpuArgsOutput) ToClusterAttachmentWorkerConfigGpuArgsPtrOutput() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o.ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAttachmentWorkerConfigGpuArgsOutput) ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAttachmentWorkerConfigGpuArgs) *ClusterAttachmentWorkerConfigGpuArgs {
		return &v
	}).(ClusterAttachmentWorkerConfigGpuArgsPtrOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigGpuArgsOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} { return v.Cuda }).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ClusterAttachmentWorkerConfigGpuArgsOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} { return v.Cudnn }).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ClusterAttachmentWorkerConfigGpuArgsOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} { return v.CustomDriver }).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigGpuArgsOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} { return v.Driver }).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ClusterAttachmentWorkerConfigGpuArgsOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigGpuArgs) *bool { return v.MigEnable }).(pulumi.BoolPtrOutput)
}

type ClusterAttachmentWorkerConfigGpuArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigGpuArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigGpuArgs)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) ToClusterAttachmentWorkerConfigGpuArgsPtrOutput() ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) ToClusterAttachmentWorkerConfigGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigGpuArgsPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) Elem() ClusterAttachmentWorkerConfigGpuArgsOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) ClusterAttachmentWorkerConfigGpuArgs {
		if v != nil {
			return *v
		}
		var ret ClusterAttachmentWorkerConfigGpuArgs
		return ret
	}).(ClusterAttachmentWorkerConfigGpuArgsOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cuda
	}).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cudnn
	}).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDriver
	}).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ClusterAttachmentWorkerConfigGpuArgsPtrOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigGpuArgs) *bool {
		if v == nil {
			return nil
		}
		return v.MigEnable
	}).(pulumi.BoolPtrOutput)
}

type ClusterAttachmentWorkerConfigOverrides struct {
	// Configurations of data disk.
	DataDisks []ClusterAttachmentWorkerConfigOverridesDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs []string `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs *ClusterAttachmentWorkerConfigOverridesGpuArgs `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule *bool `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget *string `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// ClusterAttachmentWorkerConfigOverridesInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesArgs and ClusterAttachmentWorkerConfigOverridesOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesArgs{...}
type ClusterAttachmentWorkerConfigOverridesInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesOutput() ClusterAttachmentWorkerConfigOverridesOutput
	ToClusterAttachmentWorkerConfigOverridesOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesOutput
}

type ClusterAttachmentWorkerConfigOverridesArgs struct {
	// Configurations of data disk.
	DataDisks ClusterAttachmentWorkerConfigOverridesDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath pulumi.StringPtrInput `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs pulumi.StringArrayInput `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule pulumi.BoolPtrInput `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ClusterAttachmentWorkerConfigOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverrides)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigOverridesArgs) ToClusterAttachmentWorkerConfigOverridesOutput() ClusterAttachmentWorkerConfigOverridesOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesArgs) ToClusterAttachmentWorkerConfigOverridesOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesOutput)
}

func (i ClusterAttachmentWorkerConfigOverridesArgs) ToClusterAttachmentWorkerConfigOverridesPtrOutput() ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesArgs) ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesOutput).ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(ctx)
}

// ClusterAttachmentWorkerConfigOverridesPtrInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesArgs, ClusterAttachmentWorkerConfigOverridesPtr and ClusterAttachmentWorkerConfigOverridesPtrOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesPtrInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesArgs{...}
//
//  or:
//
//          nil
type ClusterAttachmentWorkerConfigOverridesPtrInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesPtrOutput() ClusterAttachmentWorkerConfigOverridesPtrOutput
	ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesPtrOutput
}

type clusterAttachmentWorkerConfigOverridesPtrType ClusterAttachmentWorkerConfigOverridesArgs

func ClusterAttachmentWorkerConfigOverridesPtr(v *ClusterAttachmentWorkerConfigOverridesArgs) ClusterAttachmentWorkerConfigOverridesPtrInput {
	return (*clusterAttachmentWorkerConfigOverridesPtrType)(v)
}

func (*clusterAttachmentWorkerConfigOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigOverrides)(nil)).Elem()
}

func (i *clusterAttachmentWorkerConfigOverridesPtrType) ToClusterAttachmentWorkerConfigOverridesPtrOutput() ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(context.Background())
}

func (i *clusterAttachmentWorkerConfigOverridesPtrType) ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverrides)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesOutput) ToClusterAttachmentWorkerConfigOverridesOutput() ClusterAttachmentWorkerConfigOverridesOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesOutput) ToClusterAttachmentWorkerConfigOverridesOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesOutput) ToClusterAttachmentWorkerConfigOverridesPtrOutput() ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return o.ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(context.Background())
}

func (o ClusterAttachmentWorkerConfigOverridesOutput) ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAttachmentWorkerConfigOverrides) *ClusterAttachmentWorkerConfigOverrides {
		return &v
	}).(ClusterAttachmentWorkerConfigOverridesPtrOutput)
}

// Configurations of data disk.
func (o ClusterAttachmentWorkerConfigOverridesOutput) DataDisks() ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) []ClusterAttachmentWorkerConfigOverridesDataDisk {
		return v.DataDisks
	}).(ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o ClusterAttachmentWorkerConfigOverridesOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o ClusterAttachmentWorkerConfigOverridesOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *string { return v.DockerGraphPath }).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o ClusterAttachmentWorkerConfigOverridesOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) []string { return v.ExtraArgs }).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o ClusterAttachmentWorkerConfigOverridesOutput) GpuArgs() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *ClusterAttachmentWorkerConfigOverridesGpuArgs {
		return v.GpuArgs
	}).(ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o ClusterAttachmentWorkerConfigOverridesOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *bool { return v.IsSchedule }).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o ClusterAttachmentWorkerConfigOverridesOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o ClusterAttachmentWorkerConfigOverridesOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverrides) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesPtrOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigOverrides)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) ToClusterAttachmentWorkerConfigOverridesPtrOutput() ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) ToClusterAttachmentWorkerConfigOverridesPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) Elem() ClusterAttachmentWorkerConfigOverridesOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) ClusterAttachmentWorkerConfigOverrides {
		if v != nil {
			return *v
		}
		var ret ClusterAttachmentWorkerConfigOverrides
		return ret
	}).(ClusterAttachmentWorkerConfigOverridesOutput)
}

// Configurations of data disk.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) DataDisks() ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) []ClusterAttachmentWorkerConfigOverridesDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *int {
		if v == nil {
			return nil
		}
		return v.DesiredPodNum
	}).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *string {
		if v == nil {
			return nil
		}
		return v.DockerGraphPath
	}).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) []string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) GpuArgs() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *ClusterAttachmentWorkerConfigOverridesGpuArgs {
		if v == nil {
			return nil
		}
		return v.GpuArgs
	}).(ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *bool {
		if v == nil {
			return nil
		}
		return v.IsSchedule
	}).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *string {
		if v == nil {
			return nil
		}
		return v.MountTarget
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o ClusterAttachmentWorkerConfigOverridesPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverrides) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType *string `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
}

// ClusterAttachmentWorkerConfigOverridesDataDiskInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesDataDiskArgs and ClusterAttachmentWorkerConfigOverridesDataDiskOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesDataDiskInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesDataDiskArgs{...}
type ClusterAttachmentWorkerConfigOverridesDataDiskInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesDataDiskOutput() ClusterAttachmentWorkerConfigOverridesDataDiskOutput
	ToClusterAttachmentWorkerConfigOverridesDataDiskOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskOutput
}

type ClusterAttachmentWorkerConfigOverridesDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
}

func (ClusterAttachmentWorkerConfigOverridesDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesDataDisk)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigOverridesDataDiskArgs) ToClusterAttachmentWorkerConfigOverridesDataDiskOutput() ClusterAttachmentWorkerConfigOverridesDataDiskOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesDataDiskOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesDataDiskArgs) ToClusterAttachmentWorkerConfigOverridesDataDiskOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesDataDiskOutput)
}

// ClusterAttachmentWorkerConfigOverridesDataDiskArrayInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesDataDiskArray and ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesDataDiskArrayInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesDataDiskArray{ ClusterAttachmentWorkerConfigOverridesDataDiskArgs{...} }
type ClusterAttachmentWorkerConfigOverridesDataDiskArrayInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput() ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput
	ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput
}

type ClusterAttachmentWorkerConfigOverridesDataDiskArray []ClusterAttachmentWorkerConfigOverridesDataDiskInput

func (ClusterAttachmentWorkerConfigOverridesDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAttachmentWorkerConfigOverridesDataDisk)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigOverridesDataDiskArray) ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput() ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesDataDiskArray) ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput)
}

type ClusterAttachmentWorkerConfigOverridesDataDiskOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesDataDisk)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) ToClusterAttachmentWorkerConfigOverridesDataDiskOutput() ClusterAttachmentWorkerConfigOverridesDataDiskOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) ToClusterAttachmentWorkerConfigOverridesDataDiskOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ClusterAttachmentWorkerConfigOverridesDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAttachmentWorkerConfigOverridesDataDisk)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput) ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput() ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput) ToClusterAttachmentWorkerConfigOverridesDataDiskArrayOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput) Index(i pulumi.IntInput) ClusterAttachmentWorkerConfigOverridesDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterAttachmentWorkerConfigOverridesDataDisk {
		return vs[0].([]ClusterAttachmentWorkerConfigOverridesDataDisk)[vs[1].(int)]
	}).(ClusterAttachmentWorkerConfigOverridesDataDiskOutput)
}

type ClusterAttachmentWorkerConfigOverridesGpuArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda map[string]interface{} `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn map[string]interface{} `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver map[string]interface{} `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver map[string]interface{} `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable *bool `pulumi:"migEnable"`
}

// ClusterAttachmentWorkerConfigOverridesGpuArgsInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesGpuArgsArgs and ClusterAttachmentWorkerConfigOverridesGpuArgsOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesGpuArgsInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesGpuArgsArgs{...}
type ClusterAttachmentWorkerConfigOverridesGpuArgsInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesGpuArgsOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsOutput
	ToClusterAttachmentWorkerConfigOverridesGpuArgsOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsOutput
}

type ClusterAttachmentWorkerConfigOverridesGpuArgsArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda pulumi.MapInput `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn pulumi.MapInput `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver pulumi.MapInput `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver pulumi.MapInput `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable pulumi.BoolPtrInput `pulumi:"migEnable"`
}

func (ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesGpuArgs)(nil)).Elem()
}

func (i ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ToClusterAttachmentWorkerConfigOverridesGpuArgsOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesGpuArgsOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ToClusterAttachmentWorkerConfigOverridesGpuArgsOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesGpuArgsOutput)
}

func (i ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesGpuArgsOutput).ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(ctx)
}

// ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput is an input type that accepts ClusterAttachmentWorkerConfigOverridesGpuArgsArgs, ClusterAttachmentWorkerConfigOverridesGpuArgsPtr and ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput values.
// You can construct a concrete instance of `ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput` via:
//
//          ClusterAttachmentWorkerConfigOverridesGpuArgsArgs{...}
//
//  or:
//
//          nil
type ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput interface {
	pulumi.Input

	ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput
	ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput
}

type clusterAttachmentWorkerConfigOverridesGpuArgsPtrType ClusterAttachmentWorkerConfigOverridesGpuArgsArgs

func ClusterAttachmentWorkerConfigOverridesGpuArgsPtr(v *ClusterAttachmentWorkerConfigOverridesGpuArgsArgs) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput {
	return (*clusterAttachmentWorkerConfigOverridesGpuArgsPtrType)(v)
}

func (*clusterAttachmentWorkerConfigOverridesGpuArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigOverridesGpuArgs)(nil)).Elem()
}

func (i *clusterAttachmentWorkerConfigOverridesGpuArgsPtrType) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return i.ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAttachmentWorkerConfigOverridesGpuArgsPtrType) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesGpuArgsOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesGpuArgs)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o.ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAttachmentWorkerConfigOverridesGpuArgs) *ClusterAttachmentWorkerConfigOverridesGpuArgs {
		return &v
	}).(ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} { return v.Cuda }).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} { return v.Cudnn }).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} { return v.CustomDriver }).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} { return v.Driver }).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAttachmentWorkerConfigOverridesGpuArgs) *bool { return v.MigEnable }).(pulumi.BoolPtrOutput)
}

type ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAttachmentWorkerConfigOverridesGpuArgs)(nil)).Elem()
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput() ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) ToClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutputWithContext(ctx context.Context) ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput {
	return o
}

func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) Elem() ClusterAttachmentWorkerConfigOverridesGpuArgsOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) ClusterAttachmentWorkerConfigOverridesGpuArgs {
		if v != nil {
			return *v
		}
		var ret ClusterAttachmentWorkerConfigOverridesGpuArgs
		return ret
	}).(ClusterAttachmentWorkerConfigOverridesGpuArgsOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cuda
	}).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cudnn
	}).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDriver
	}).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAttachmentWorkerConfigOverridesGpuArgs) *bool {
		if v == nil {
			return nil
		}
		return v.MigEnable
	}).(pulumi.BoolPtrOutput)
}

type ClusterAuthOptions struct {
	// If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
	AutoCreateDiscoveryAnonymousAuth *bool `pulumi:"autoCreateDiscoveryAnonymousAuth"`
	// Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
	Issuer *string `pulumi:"issuer"`
	// Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
	JwksUri *string `pulumi:"jwksUri"`
	// If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
	UseTkeDefault *bool `pulumi:"useTkeDefault"`
}

// ClusterAuthOptionsInput is an input type that accepts ClusterAuthOptionsArgs and ClusterAuthOptionsOutput values.
// You can construct a concrete instance of `ClusterAuthOptionsInput` via:
//
//          ClusterAuthOptionsArgs{...}
type ClusterAuthOptionsInput interface {
	pulumi.Input

	ToClusterAuthOptionsOutput() ClusterAuthOptionsOutput
	ToClusterAuthOptionsOutputWithContext(context.Context) ClusterAuthOptionsOutput
}

type ClusterAuthOptionsArgs struct {
	// If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
	AutoCreateDiscoveryAnonymousAuth pulumi.BoolPtrInput `pulumi:"autoCreateDiscoveryAnonymousAuth"`
	// Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
	UseTkeDefault pulumi.BoolPtrInput `pulumi:"useTkeDefault"`
}

func (ClusterAuthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthOptions)(nil)).Elem()
}

func (i ClusterAuthOptionsArgs) ToClusterAuthOptionsOutput() ClusterAuthOptionsOutput {
	return i.ToClusterAuthOptionsOutputWithContext(context.Background())
}

func (i ClusterAuthOptionsArgs) ToClusterAuthOptionsOutputWithContext(ctx context.Context) ClusterAuthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthOptionsOutput)
}

func (i ClusterAuthOptionsArgs) ToClusterAuthOptionsPtrOutput() ClusterAuthOptionsPtrOutput {
	return i.ToClusterAuthOptionsPtrOutputWithContext(context.Background())
}

func (i ClusterAuthOptionsArgs) ToClusterAuthOptionsPtrOutputWithContext(ctx context.Context) ClusterAuthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthOptionsOutput).ToClusterAuthOptionsPtrOutputWithContext(ctx)
}

// ClusterAuthOptionsPtrInput is an input type that accepts ClusterAuthOptionsArgs, ClusterAuthOptionsPtr and ClusterAuthOptionsPtrOutput values.
// You can construct a concrete instance of `ClusterAuthOptionsPtrInput` via:
//
//          ClusterAuthOptionsArgs{...}
//
//  or:
//
//          nil
type ClusterAuthOptionsPtrInput interface {
	pulumi.Input

	ToClusterAuthOptionsPtrOutput() ClusterAuthOptionsPtrOutput
	ToClusterAuthOptionsPtrOutputWithContext(context.Context) ClusterAuthOptionsPtrOutput
}

type clusterAuthOptionsPtrType ClusterAuthOptionsArgs

func ClusterAuthOptionsPtr(v *ClusterAuthOptionsArgs) ClusterAuthOptionsPtrInput {
	return (*clusterAuthOptionsPtrType)(v)
}

func (*clusterAuthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthOptions)(nil)).Elem()
}

func (i *clusterAuthOptionsPtrType) ToClusterAuthOptionsPtrOutput() ClusterAuthOptionsPtrOutput {
	return i.ToClusterAuthOptionsPtrOutputWithContext(context.Background())
}

func (i *clusterAuthOptionsPtrType) ToClusterAuthOptionsPtrOutputWithContext(ctx context.Context) ClusterAuthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthOptionsPtrOutput)
}

type ClusterAuthOptionsOutput struct{ *pulumi.OutputState }

func (ClusterAuthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthOptions)(nil)).Elem()
}

func (o ClusterAuthOptionsOutput) ToClusterAuthOptionsOutput() ClusterAuthOptionsOutput {
	return o
}

func (o ClusterAuthOptionsOutput) ToClusterAuthOptionsOutputWithContext(ctx context.Context) ClusterAuthOptionsOutput {
	return o
}

func (o ClusterAuthOptionsOutput) ToClusterAuthOptionsPtrOutput() ClusterAuthOptionsPtrOutput {
	return o.ToClusterAuthOptionsPtrOutputWithContext(context.Background())
}

func (o ClusterAuthOptionsOutput) ToClusterAuthOptionsPtrOutputWithContext(ctx context.Context) ClusterAuthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAuthOptions) *ClusterAuthOptions {
		return &v
	}).(ClusterAuthOptionsPtrOutput)
}

// If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
func (o ClusterAuthOptionsOutput) AutoCreateDiscoveryAnonymousAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAuthOptions) *bool { return v.AutoCreateDiscoveryAnonymousAuth }).(pulumi.BoolPtrOutput)
}

// Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
func (o ClusterAuthOptionsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthOptions) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
func (o ClusterAuthOptionsOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthOptions) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
func (o ClusterAuthOptionsOutput) UseTkeDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAuthOptions) *bool { return v.UseTkeDefault }).(pulumi.BoolPtrOutput)
}

type ClusterAuthOptionsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthOptions)(nil)).Elem()
}

func (o ClusterAuthOptionsPtrOutput) ToClusterAuthOptionsPtrOutput() ClusterAuthOptionsPtrOutput {
	return o
}

func (o ClusterAuthOptionsPtrOutput) ToClusterAuthOptionsPtrOutputWithContext(ctx context.Context) ClusterAuthOptionsPtrOutput {
	return o
}

func (o ClusterAuthOptionsPtrOutput) Elem() ClusterAuthOptionsOutput {
	return o.ApplyT(func(v *ClusterAuthOptions) ClusterAuthOptions {
		if v != nil {
			return *v
		}
		var ret ClusterAuthOptions
		return ret
	}).(ClusterAuthOptionsOutput)
}

// If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
func (o ClusterAuthOptionsPtrOutput) AutoCreateDiscoveryAnonymousAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAuthOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoCreateDiscoveryAnonymousAuth
	}).(pulumi.BoolPtrOutput)
}

// Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
func (o ClusterAuthOptionsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthOptions) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
func (o ClusterAuthOptionsPtrOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthOptions) *string {
		if v == nil {
			return nil
		}
		return v.JwksUri
	}).(pulumi.StringPtrOutput)
}

// If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
func (o ClusterAuthOptionsPtrOutput) UseTkeDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAuthOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseTkeDefault
	}).(pulumi.BoolPtrOutput)
}

type ClusterClusterAudit struct {
	// when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
	DeleteAuditLogAndTopic *bool `pulumi:"deleteAuditLogAndTopic"`
	// Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
	Enabled bool `pulumi:"enabled"`
	// Specify id of existing CLS log set, or auto create a new set by leave it empty.
	LogSetId *string `pulumi:"logSetId"`
	// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
	TopicId *string `pulumi:"topicId"`
}

// ClusterClusterAuditInput is an input type that accepts ClusterClusterAuditArgs and ClusterClusterAuditOutput values.
// You can construct a concrete instance of `ClusterClusterAuditInput` via:
//
//          ClusterClusterAuditArgs{...}
type ClusterClusterAuditInput interface {
	pulumi.Input

	ToClusterClusterAuditOutput() ClusterClusterAuditOutput
	ToClusterClusterAuditOutputWithContext(context.Context) ClusterClusterAuditOutput
}

type ClusterClusterAuditArgs struct {
	// when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
	DeleteAuditLogAndTopic pulumi.BoolPtrInput `pulumi:"deleteAuditLogAndTopic"`
	// Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specify id of existing CLS log set, or auto create a new set by leave it empty.
	LogSetId pulumi.StringPtrInput `pulumi:"logSetId"`
	// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
}

func (ClusterClusterAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAudit)(nil)).Elem()
}

func (i ClusterClusterAuditArgs) ToClusterClusterAuditOutput() ClusterClusterAuditOutput {
	return i.ToClusterClusterAuditOutputWithContext(context.Background())
}

func (i ClusterClusterAuditArgs) ToClusterClusterAuditOutputWithContext(ctx context.Context) ClusterClusterAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAuditOutput)
}

func (i ClusterClusterAuditArgs) ToClusterClusterAuditPtrOutput() ClusterClusterAuditPtrOutput {
	return i.ToClusterClusterAuditPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAuditArgs) ToClusterClusterAuditPtrOutputWithContext(ctx context.Context) ClusterClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAuditOutput).ToClusterClusterAuditPtrOutputWithContext(ctx)
}

// ClusterClusterAuditPtrInput is an input type that accepts ClusterClusterAuditArgs, ClusterClusterAuditPtr and ClusterClusterAuditPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAuditPtrInput` via:
//
//          ClusterClusterAuditArgs{...}
//
//  or:
//
//          nil
type ClusterClusterAuditPtrInput interface {
	pulumi.Input

	ToClusterClusterAuditPtrOutput() ClusterClusterAuditPtrOutput
	ToClusterClusterAuditPtrOutputWithContext(context.Context) ClusterClusterAuditPtrOutput
}

type clusterClusterAuditPtrType ClusterClusterAuditArgs

func ClusterClusterAuditPtr(v *ClusterClusterAuditArgs) ClusterClusterAuditPtrInput {
	return (*clusterClusterAuditPtrType)(v)
}

func (*clusterClusterAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAudit)(nil)).Elem()
}

func (i *clusterClusterAuditPtrType) ToClusterClusterAuditPtrOutput() ClusterClusterAuditPtrOutput {
	return i.ToClusterClusterAuditPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAuditPtrType) ToClusterClusterAuditPtrOutputWithContext(ctx context.Context) ClusterClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAuditPtrOutput)
}

type ClusterClusterAuditOutput struct{ *pulumi.OutputState }

func (ClusterClusterAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAudit)(nil)).Elem()
}

func (o ClusterClusterAuditOutput) ToClusterClusterAuditOutput() ClusterClusterAuditOutput {
	return o
}

func (o ClusterClusterAuditOutput) ToClusterClusterAuditOutputWithContext(ctx context.Context) ClusterClusterAuditOutput {
	return o
}

func (o ClusterClusterAuditOutput) ToClusterClusterAuditPtrOutput() ClusterClusterAuditPtrOutput {
	return o.ToClusterClusterAuditPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAuditOutput) ToClusterClusterAuditPtrOutputWithContext(ctx context.Context) ClusterClusterAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAudit) *ClusterClusterAudit {
		return &v
	}).(ClusterClusterAuditPtrOutput)
}

// when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
func (o ClusterClusterAuditOutput) DeleteAuditLogAndTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAudit) *bool { return v.DeleteAuditLogAndTopic }).(pulumi.BoolPtrOutput)
}

// Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
func (o ClusterClusterAuditOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAudit) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specify id of existing CLS log set, or auto create a new set by leave it empty.
func (o ClusterClusterAuditOutput) LogSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAudit) *string { return v.LogSetId }).(pulumi.StringPtrOutput)
}

// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
func (o ClusterClusterAuditOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAudit) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

type ClusterClusterAuditPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAudit)(nil)).Elem()
}

func (o ClusterClusterAuditPtrOutput) ToClusterClusterAuditPtrOutput() ClusterClusterAuditPtrOutput {
	return o
}

func (o ClusterClusterAuditPtrOutput) ToClusterClusterAuditPtrOutputWithContext(ctx context.Context) ClusterClusterAuditPtrOutput {
	return o
}

func (o ClusterClusterAuditPtrOutput) Elem() ClusterClusterAuditOutput {
	return o.ApplyT(func(v *ClusterClusterAudit) ClusterClusterAudit {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAudit
		return ret
	}).(ClusterClusterAuditOutput)
}

// when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
func (o ClusterClusterAuditPtrOutput) DeleteAuditLogAndTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAudit) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteAuditLogAndTopic
	}).(pulumi.BoolPtrOutput)
}

// Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
func (o ClusterClusterAuditPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAudit) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify id of existing CLS log set, or auto create a new set by leave it empty.
func (o ClusterClusterAuditPtrOutput) LogSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.LogSetId
	}).(pulumi.StringPtrOutput)
}

// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
func (o ClusterClusterAuditPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterExtraArgs struct {
	// The customized parameters for kube-apiserver.
	KubeApiservers []string `pulumi:"kubeApiservers"`
	// The customized parameters for kube-controller-manager.
	KubeControllerManagers []string `pulumi:"kubeControllerManagers"`
	// The customized parameters for kube-scheduler.
	KubeSchedulers []string `pulumi:"kubeSchedulers"`
}

// ClusterClusterExtraArgsInput is an input type that accepts ClusterClusterExtraArgsArgs and ClusterClusterExtraArgsOutput values.
// You can construct a concrete instance of `ClusterClusterExtraArgsInput` via:
//
//          ClusterClusterExtraArgsArgs{...}
type ClusterClusterExtraArgsInput interface {
	pulumi.Input

	ToClusterClusterExtraArgsOutput() ClusterClusterExtraArgsOutput
	ToClusterClusterExtraArgsOutputWithContext(context.Context) ClusterClusterExtraArgsOutput
}

type ClusterClusterExtraArgsArgs struct {
	// The customized parameters for kube-apiserver.
	KubeApiservers pulumi.StringArrayInput `pulumi:"kubeApiservers"`
	// The customized parameters for kube-controller-manager.
	KubeControllerManagers pulumi.StringArrayInput `pulumi:"kubeControllerManagers"`
	// The customized parameters for kube-scheduler.
	KubeSchedulers pulumi.StringArrayInput `pulumi:"kubeSchedulers"`
}

func (ClusterClusterExtraArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterExtraArgs)(nil)).Elem()
}

func (i ClusterClusterExtraArgsArgs) ToClusterClusterExtraArgsOutput() ClusterClusterExtraArgsOutput {
	return i.ToClusterClusterExtraArgsOutputWithContext(context.Background())
}

func (i ClusterClusterExtraArgsArgs) ToClusterClusterExtraArgsOutputWithContext(ctx context.Context) ClusterClusterExtraArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterExtraArgsOutput)
}

func (i ClusterClusterExtraArgsArgs) ToClusterClusterExtraArgsPtrOutput() ClusterClusterExtraArgsPtrOutput {
	return i.ToClusterClusterExtraArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterExtraArgsArgs) ToClusterClusterExtraArgsPtrOutputWithContext(ctx context.Context) ClusterClusterExtraArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterExtraArgsOutput).ToClusterClusterExtraArgsPtrOutputWithContext(ctx)
}

// ClusterClusterExtraArgsPtrInput is an input type that accepts ClusterClusterExtraArgsArgs, ClusterClusterExtraArgsPtr and ClusterClusterExtraArgsPtrOutput values.
// You can construct a concrete instance of `ClusterClusterExtraArgsPtrInput` via:
//
//          ClusterClusterExtraArgsArgs{...}
//
//  or:
//
//          nil
type ClusterClusterExtraArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterExtraArgsPtrOutput() ClusterClusterExtraArgsPtrOutput
	ToClusterClusterExtraArgsPtrOutputWithContext(context.Context) ClusterClusterExtraArgsPtrOutput
}

type clusterClusterExtraArgsPtrType ClusterClusterExtraArgsArgs

func ClusterClusterExtraArgsPtr(v *ClusterClusterExtraArgsArgs) ClusterClusterExtraArgsPtrInput {
	return (*clusterClusterExtraArgsPtrType)(v)
}

func (*clusterClusterExtraArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterExtraArgs)(nil)).Elem()
}

func (i *clusterClusterExtraArgsPtrType) ToClusterClusterExtraArgsPtrOutput() ClusterClusterExtraArgsPtrOutput {
	return i.ToClusterClusterExtraArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterExtraArgsPtrType) ToClusterClusterExtraArgsPtrOutputWithContext(ctx context.Context) ClusterClusterExtraArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterExtraArgsPtrOutput)
}

type ClusterClusterExtraArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterExtraArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterExtraArgs)(nil)).Elem()
}

func (o ClusterClusterExtraArgsOutput) ToClusterClusterExtraArgsOutput() ClusterClusterExtraArgsOutput {
	return o
}

func (o ClusterClusterExtraArgsOutput) ToClusterClusterExtraArgsOutputWithContext(ctx context.Context) ClusterClusterExtraArgsOutput {
	return o
}

func (o ClusterClusterExtraArgsOutput) ToClusterClusterExtraArgsPtrOutput() ClusterClusterExtraArgsPtrOutput {
	return o.ToClusterClusterExtraArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterExtraArgsOutput) ToClusterClusterExtraArgsPtrOutputWithContext(ctx context.Context) ClusterClusterExtraArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterExtraArgs) *ClusterClusterExtraArgs {
		return &v
	}).(ClusterClusterExtraArgsPtrOutput)
}

// The customized parameters for kube-apiserver.
func (o ClusterClusterExtraArgsOutput) KubeApiservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterExtraArgs) []string { return v.KubeApiservers }).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-controller-manager.
func (o ClusterClusterExtraArgsOutput) KubeControllerManagers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterExtraArgs) []string { return v.KubeControllerManagers }).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-scheduler.
func (o ClusterClusterExtraArgsOutput) KubeSchedulers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterExtraArgs) []string { return v.KubeSchedulers }).(pulumi.StringArrayOutput)
}

type ClusterClusterExtraArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterExtraArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterExtraArgs)(nil)).Elem()
}

func (o ClusterClusterExtraArgsPtrOutput) ToClusterClusterExtraArgsPtrOutput() ClusterClusterExtraArgsPtrOutput {
	return o
}

func (o ClusterClusterExtraArgsPtrOutput) ToClusterClusterExtraArgsPtrOutputWithContext(ctx context.Context) ClusterClusterExtraArgsPtrOutput {
	return o
}

func (o ClusterClusterExtraArgsPtrOutput) Elem() ClusterClusterExtraArgsOutput {
	return o.ApplyT(func(v *ClusterClusterExtraArgs) ClusterClusterExtraArgs {
		if v != nil {
			return *v
		}
		var ret ClusterClusterExtraArgs
		return ret
	}).(ClusterClusterExtraArgsOutput)
}

// The customized parameters for kube-apiserver.
func (o ClusterClusterExtraArgsPtrOutput) KubeApiservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClusterExtraArgs) []string {
		if v == nil {
			return nil
		}
		return v.KubeApiservers
	}).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-controller-manager.
func (o ClusterClusterExtraArgsPtrOutput) KubeControllerManagers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClusterExtraArgs) []string {
		if v == nil {
			return nil
		}
		return v.KubeControllerManagers
	}).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-scheduler.
func (o ClusterClusterExtraArgsPtrOutput) KubeSchedulers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClusterExtraArgs) []string {
		if v == nil {
			return nil
		}
		return v.KubeSchedulers
	}).(pulumi.StringArrayOutput)
}

type ClusterEventPersistence struct {
	// when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
	DeleteEventLogAndTopic *bool `pulumi:"deleteEventLogAndTopic"`
	// Specify weather the Event Persistence enabled.
	Enabled bool `pulumi:"enabled"`
	// Specify id of existing CLS log set, or auto create a new set by leave it empty.
	LogSetId *string `pulumi:"logSetId"`
	// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
	TopicId *string `pulumi:"topicId"`
}

// ClusterEventPersistenceInput is an input type that accepts ClusterEventPersistenceArgs and ClusterEventPersistenceOutput values.
// You can construct a concrete instance of `ClusterEventPersistenceInput` via:
//
//          ClusterEventPersistenceArgs{...}
type ClusterEventPersistenceInput interface {
	pulumi.Input

	ToClusterEventPersistenceOutput() ClusterEventPersistenceOutput
	ToClusterEventPersistenceOutputWithContext(context.Context) ClusterEventPersistenceOutput
}

type ClusterEventPersistenceArgs struct {
	// when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
	DeleteEventLogAndTopic pulumi.BoolPtrInput `pulumi:"deleteEventLogAndTopic"`
	// Specify weather the Event Persistence enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specify id of existing CLS log set, or auto create a new set by leave it empty.
	LogSetId pulumi.StringPtrInput `pulumi:"logSetId"`
	// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
}

func (ClusterEventPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEventPersistence)(nil)).Elem()
}

func (i ClusterEventPersistenceArgs) ToClusterEventPersistenceOutput() ClusterEventPersistenceOutput {
	return i.ToClusterEventPersistenceOutputWithContext(context.Background())
}

func (i ClusterEventPersistenceArgs) ToClusterEventPersistenceOutputWithContext(ctx context.Context) ClusterEventPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEventPersistenceOutput)
}

func (i ClusterEventPersistenceArgs) ToClusterEventPersistencePtrOutput() ClusterEventPersistencePtrOutput {
	return i.ToClusterEventPersistencePtrOutputWithContext(context.Background())
}

func (i ClusterEventPersistenceArgs) ToClusterEventPersistencePtrOutputWithContext(ctx context.Context) ClusterEventPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEventPersistenceOutput).ToClusterEventPersistencePtrOutputWithContext(ctx)
}

// ClusterEventPersistencePtrInput is an input type that accepts ClusterEventPersistenceArgs, ClusterEventPersistencePtr and ClusterEventPersistencePtrOutput values.
// You can construct a concrete instance of `ClusterEventPersistencePtrInput` via:
//
//          ClusterEventPersistenceArgs{...}
//
//  or:
//
//          nil
type ClusterEventPersistencePtrInput interface {
	pulumi.Input

	ToClusterEventPersistencePtrOutput() ClusterEventPersistencePtrOutput
	ToClusterEventPersistencePtrOutputWithContext(context.Context) ClusterEventPersistencePtrOutput
}

type clusterEventPersistencePtrType ClusterEventPersistenceArgs

func ClusterEventPersistencePtr(v *ClusterEventPersistenceArgs) ClusterEventPersistencePtrInput {
	return (*clusterEventPersistencePtrType)(v)
}

func (*clusterEventPersistencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEventPersistence)(nil)).Elem()
}

func (i *clusterEventPersistencePtrType) ToClusterEventPersistencePtrOutput() ClusterEventPersistencePtrOutput {
	return i.ToClusterEventPersistencePtrOutputWithContext(context.Background())
}

func (i *clusterEventPersistencePtrType) ToClusterEventPersistencePtrOutputWithContext(ctx context.Context) ClusterEventPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEventPersistencePtrOutput)
}

type ClusterEventPersistenceOutput struct{ *pulumi.OutputState }

func (ClusterEventPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEventPersistence)(nil)).Elem()
}

func (o ClusterEventPersistenceOutput) ToClusterEventPersistenceOutput() ClusterEventPersistenceOutput {
	return o
}

func (o ClusterEventPersistenceOutput) ToClusterEventPersistenceOutputWithContext(ctx context.Context) ClusterEventPersistenceOutput {
	return o
}

func (o ClusterEventPersistenceOutput) ToClusterEventPersistencePtrOutput() ClusterEventPersistencePtrOutput {
	return o.ToClusterEventPersistencePtrOutputWithContext(context.Background())
}

func (o ClusterEventPersistenceOutput) ToClusterEventPersistencePtrOutputWithContext(ctx context.Context) ClusterEventPersistencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEventPersistence) *ClusterEventPersistence {
		return &v
	}).(ClusterEventPersistencePtrOutput)
}

// when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
func (o ClusterEventPersistenceOutput) DeleteEventLogAndTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterEventPersistence) *bool { return v.DeleteEventLogAndTopic }).(pulumi.BoolPtrOutput)
}

// Specify weather the Event Persistence enabled.
func (o ClusterEventPersistenceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterEventPersistence) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specify id of existing CLS log set, or auto create a new set by leave it empty.
func (o ClusterEventPersistenceOutput) LogSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEventPersistence) *string { return v.LogSetId }).(pulumi.StringPtrOutput)
}

// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
func (o ClusterEventPersistenceOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEventPersistence) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

type ClusterEventPersistencePtrOutput struct{ *pulumi.OutputState }

func (ClusterEventPersistencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEventPersistence)(nil)).Elem()
}

func (o ClusterEventPersistencePtrOutput) ToClusterEventPersistencePtrOutput() ClusterEventPersistencePtrOutput {
	return o
}

func (o ClusterEventPersistencePtrOutput) ToClusterEventPersistencePtrOutputWithContext(ctx context.Context) ClusterEventPersistencePtrOutput {
	return o
}

func (o ClusterEventPersistencePtrOutput) Elem() ClusterEventPersistenceOutput {
	return o.ApplyT(func(v *ClusterEventPersistence) ClusterEventPersistence {
		if v != nil {
			return *v
		}
		var ret ClusterEventPersistence
		return ret
	}).(ClusterEventPersistenceOutput)
}

// when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
func (o ClusterEventPersistencePtrOutput) DeleteEventLogAndTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterEventPersistence) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteEventLogAndTopic
	}).(pulumi.BoolPtrOutput)
}

// Specify weather the Event Persistence enabled.
func (o ClusterEventPersistencePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterEventPersistence) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify id of existing CLS log set, or auto create a new set by leave it empty.
func (o ClusterEventPersistencePtrOutput) LogSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEventPersistence) *string {
		if v == nil {
			return nil
		}
		return v.LogSetId
	}).(pulumi.StringPtrOutput)
}

// Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
func (o ClusterEventPersistencePtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEventPersistence) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

type ClusterExistInstance struct {
	// Custom mode cluster, you can specify the number of pods for each node. corresponding to the existed_instances_para.instance_ids parameter.
	DesiredPodNumbers []int `pulumi:"desiredPodNumbers"`
	// Reinstallation parameters of an existing instance.
	InstancesPara *ClusterExistInstanceInstancesPara `pulumi:"instancesPara"`
	// Role of existed node. value:MASTER_ETCD or WORKER.
	NodeRole *string `pulumi:"nodeRole"`
}

// ClusterExistInstanceInput is an input type that accepts ClusterExistInstanceArgs and ClusterExistInstanceOutput values.
// You can construct a concrete instance of `ClusterExistInstanceInput` via:
//
//          ClusterExistInstanceArgs{...}
type ClusterExistInstanceInput interface {
	pulumi.Input

	ToClusterExistInstanceOutput() ClusterExistInstanceOutput
	ToClusterExistInstanceOutputWithContext(context.Context) ClusterExistInstanceOutput
}

type ClusterExistInstanceArgs struct {
	// Custom mode cluster, you can specify the number of pods for each node. corresponding to the existed_instances_para.instance_ids parameter.
	DesiredPodNumbers pulumi.IntArrayInput `pulumi:"desiredPodNumbers"`
	// Reinstallation parameters of an existing instance.
	InstancesPara ClusterExistInstanceInstancesParaPtrInput `pulumi:"instancesPara"`
	// Role of existed node. value:MASTER_ETCD or WORKER.
	NodeRole pulumi.StringPtrInput `pulumi:"nodeRole"`
}

func (ClusterExistInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExistInstance)(nil)).Elem()
}

func (i ClusterExistInstanceArgs) ToClusterExistInstanceOutput() ClusterExistInstanceOutput {
	return i.ToClusterExistInstanceOutputWithContext(context.Background())
}

func (i ClusterExistInstanceArgs) ToClusterExistInstanceOutputWithContext(ctx context.Context) ClusterExistInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExistInstanceOutput)
}

// ClusterExistInstanceArrayInput is an input type that accepts ClusterExistInstanceArray and ClusterExistInstanceArrayOutput values.
// You can construct a concrete instance of `ClusterExistInstanceArrayInput` via:
//
//          ClusterExistInstanceArray{ ClusterExistInstanceArgs{...} }
type ClusterExistInstanceArrayInput interface {
	pulumi.Input

	ToClusterExistInstanceArrayOutput() ClusterExistInstanceArrayOutput
	ToClusterExistInstanceArrayOutputWithContext(context.Context) ClusterExistInstanceArrayOutput
}

type ClusterExistInstanceArray []ClusterExistInstanceInput

func (ClusterExistInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExistInstance)(nil)).Elem()
}

func (i ClusterExistInstanceArray) ToClusterExistInstanceArrayOutput() ClusterExistInstanceArrayOutput {
	return i.ToClusterExistInstanceArrayOutputWithContext(context.Background())
}

func (i ClusterExistInstanceArray) ToClusterExistInstanceArrayOutputWithContext(ctx context.Context) ClusterExistInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExistInstanceArrayOutput)
}

type ClusterExistInstanceOutput struct{ *pulumi.OutputState }

func (ClusterExistInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExistInstance)(nil)).Elem()
}

func (o ClusterExistInstanceOutput) ToClusterExistInstanceOutput() ClusterExistInstanceOutput {
	return o
}

func (o ClusterExistInstanceOutput) ToClusterExistInstanceOutputWithContext(ctx context.Context) ClusterExistInstanceOutput {
	return o
}

// Custom mode cluster, you can specify the number of pods for each node. corresponding to the existed_instances_para.instance_ids parameter.
func (o ClusterExistInstanceOutput) DesiredPodNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ClusterExistInstance) []int { return v.DesiredPodNumbers }).(pulumi.IntArrayOutput)
}

// Reinstallation parameters of an existing instance.
func (o ClusterExistInstanceOutput) InstancesPara() ClusterExistInstanceInstancesParaPtrOutput {
	return o.ApplyT(func(v ClusterExistInstance) *ClusterExistInstanceInstancesPara { return v.InstancesPara }).(ClusterExistInstanceInstancesParaPtrOutput)
}

// Role of existed node. value:MASTER_ETCD or WORKER.
func (o ClusterExistInstanceOutput) NodeRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExistInstance) *string { return v.NodeRole }).(pulumi.StringPtrOutput)
}

type ClusterExistInstanceArrayOutput struct{ *pulumi.OutputState }

func (ClusterExistInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExistInstance)(nil)).Elem()
}

func (o ClusterExistInstanceArrayOutput) ToClusterExistInstanceArrayOutput() ClusterExistInstanceArrayOutput {
	return o
}

func (o ClusterExistInstanceArrayOutput) ToClusterExistInstanceArrayOutputWithContext(ctx context.Context) ClusterExistInstanceArrayOutput {
	return o
}

func (o ClusterExistInstanceArrayOutput) Index(i pulumi.IntInput) ClusterExistInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterExistInstance {
		return vs[0].([]ClusterExistInstance)[vs[1].(int)]
	}).(ClusterExistInstanceOutput)
}

type ClusterExistInstanceInstancesPara struct {
	// Cluster IDs.
	InstanceIds []string `pulumi:"instanceIds"`
}

// ClusterExistInstanceInstancesParaInput is an input type that accepts ClusterExistInstanceInstancesParaArgs and ClusterExistInstanceInstancesParaOutput values.
// You can construct a concrete instance of `ClusterExistInstanceInstancesParaInput` via:
//
//          ClusterExistInstanceInstancesParaArgs{...}
type ClusterExistInstanceInstancesParaInput interface {
	pulumi.Input

	ToClusterExistInstanceInstancesParaOutput() ClusterExistInstanceInstancesParaOutput
	ToClusterExistInstanceInstancesParaOutputWithContext(context.Context) ClusterExistInstanceInstancesParaOutput
}

type ClusterExistInstanceInstancesParaArgs struct {
	// Cluster IDs.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
}

func (ClusterExistInstanceInstancesParaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExistInstanceInstancesPara)(nil)).Elem()
}

func (i ClusterExistInstanceInstancesParaArgs) ToClusterExistInstanceInstancesParaOutput() ClusterExistInstanceInstancesParaOutput {
	return i.ToClusterExistInstanceInstancesParaOutputWithContext(context.Background())
}

func (i ClusterExistInstanceInstancesParaArgs) ToClusterExistInstanceInstancesParaOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExistInstanceInstancesParaOutput)
}

func (i ClusterExistInstanceInstancesParaArgs) ToClusterExistInstanceInstancesParaPtrOutput() ClusterExistInstanceInstancesParaPtrOutput {
	return i.ToClusterExistInstanceInstancesParaPtrOutputWithContext(context.Background())
}

func (i ClusterExistInstanceInstancesParaArgs) ToClusterExistInstanceInstancesParaPtrOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExistInstanceInstancesParaOutput).ToClusterExistInstanceInstancesParaPtrOutputWithContext(ctx)
}

// ClusterExistInstanceInstancesParaPtrInput is an input type that accepts ClusterExistInstanceInstancesParaArgs, ClusterExistInstanceInstancesParaPtr and ClusterExistInstanceInstancesParaPtrOutput values.
// You can construct a concrete instance of `ClusterExistInstanceInstancesParaPtrInput` via:
//
//          ClusterExistInstanceInstancesParaArgs{...}
//
//  or:
//
//          nil
type ClusterExistInstanceInstancesParaPtrInput interface {
	pulumi.Input

	ToClusterExistInstanceInstancesParaPtrOutput() ClusterExistInstanceInstancesParaPtrOutput
	ToClusterExistInstanceInstancesParaPtrOutputWithContext(context.Context) ClusterExistInstanceInstancesParaPtrOutput
}

type clusterExistInstanceInstancesParaPtrType ClusterExistInstanceInstancesParaArgs

func ClusterExistInstanceInstancesParaPtr(v *ClusterExistInstanceInstancesParaArgs) ClusterExistInstanceInstancesParaPtrInput {
	return (*clusterExistInstanceInstancesParaPtrType)(v)
}

func (*clusterExistInstanceInstancesParaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExistInstanceInstancesPara)(nil)).Elem()
}

func (i *clusterExistInstanceInstancesParaPtrType) ToClusterExistInstanceInstancesParaPtrOutput() ClusterExistInstanceInstancesParaPtrOutput {
	return i.ToClusterExistInstanceInstancesParaPtrOutputWithContext(context.Background())
}

func (i *clusterExistInstanceInstancesParaPtrType) ToClusterExistInstanceInstancesParaPtrOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExistInstanceInstancesParaPtrOutput)
}

type ClusterExistInstanceInstancesParaOutput struct{ *pulumi.OutputState }

func (ClusterExistInstanceInstancesParaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExistInstanceInstancesPara)(nil)).Elem()
}

func (o ClusterExistInstanceInstancesParaOutput) ToClusterExistInstanceInstancesParaOutput() ClusterExistInstanceInstancesParaOutput {
	return o
}

func (o ClusterExistInstanceInstancesParaOutput) ToClusterExistInstanceInstancesParaOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaOutput {
	return o
}

func (o ClusterExistInstanceInstancesParaOutput) ToClusterExistInstanceInstancesParaPtrOutput() ClusterExistInstanceInstancesParaPtrOutput {
	return o.ToClusterExistInstanceInstancesParaPtrOutputWithContext(context.Background())
}

func (o ClusterExistInstanceInstancesParaOutput) ToClusterExistInstanceInstancesParaPtrOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterExistInstanceInstancesPara) *ClusterExistInstanceInstancesPara {
		return &v
	}).(ClusterExistInstanceInstancesParaPtrOutput)
}

// Cluster IDs.
func (o ClusterExistInstanceInstancesParaOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterExistInstanceInstancesPara) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

type ClusterExistInstanceInstancesParaPtrOutput struct{ *pulumi.OutputState }

func (ClusterExistInstanceInstancesParaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExistInstanceInstancesPara)(nil)).Elem()
}

func (o ClusterExistInstanceInstancesParaPtrOutput) ToClusterExistInstanceInstancesParaPtrOutput() ClusterExistInstanceInstancesParaPtrOutput {
	return o
}

func (o ClusterExistInstanceInstancesParaPtrOutput) ToClusterExistInstanceInstancesParaPtrOutputWithContext(ctx context.Context) ClusterExistInstanceInstancesParaPtrOutput {
	return o
}

func (o ClusterExistInstanceInstancesParaPtrOutput) Elem() ClusterExistInstanceInstancesParaOutput {
	return o.ApplyT(func(v *ClusterExistInstanceInstancesPara) ClusterExistInstanceInstancesPara {
		if v != nil {
			return *v
		}
		var ret ClusterExistInstanceInstancesPara
		return ret
	}).(ClusterExistInstanceInstancesParaOutput)
}

// Cluster IDs.
func (o ClusterExistInstanceInstancesParaPtrOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterExistInstanceInstancesPara) []string {
		if v == nil {
			return nil
		}
		return v.InstanceIds
	}).(pulumi.StringArrayOutput)
}

type ClusterExtensionAddon struct {
	// Add-on name.
	Name string `pulumi:"name"`
	// Parameter of the add-on resource object in JSON string format, please check the example at the top of page for reference.
	Param string `pulumi:"param"`
}

// ClusterExtensionAddonInput is an input type that accepts ClusterExtensionAddonArgs and ClusterExtensionAddonOutput values.
// You can construct a concrete instance of `ClusterExtensionAddonInput` via:
//
//          ClusterExtensionAddonArgs{...}
type ClusterExtensionAddonInput interface {
	pulumi.Input

	ToClusterExtensionAddonOutput() ClusterExtensionAddonOutput
	ToClusterExtensionAddonOutputWithContext(context.Context) ClusterExtensionAddonOutput
}

type ClusterExtensionAddonArgs struct {
	// Add-on name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameter of the add-on resource object in JSON string format, please check the example at the top of page for reference.
	Param pulumi.StringInput `pulumi:"param"`
}

func (ClusterExtensionAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExtensionAddon)(nil)).Elem()
}

func (i ClusterExtensionAddonArgs) ToClusterExtensionAddonOutput() ClusterExtensionAddonOutput {
	return i.ToClusterExtensionAddonOutputWithContext(context.Background())
}

func (i ClusterExtensionAddonArgs) ToClusterExtensionAddonOutputWithContext(ctx context.Context) ClusterExtensionAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExtensionAddonOutput)
}

// ClusterExtensionAddonArrayInput is an input type that accepts ClusterExtensionAddonArray and ClusterExtensionAddonArrayOutput values.
// You can construct a concrete instance of `ClusterExtensionAddonArrayInput` via:
//
//          ClusterExtensionAddonArray{ ClusterExtensionAddonArgs{...} }
type ClusterExtensionAddonArrayInput interface {
	pulumi.Input

	ToClusterExtensionAddonArrayOutput() ClusterExtensionAddonArrayOutput
	ToClusterExtensionAddonArrayOutputWithContext(context.Context) ClusterExtensionAddonArrayOutput
}

type ClusterExtensionAddonArray []ClusterExtensionAddonInput

func (ClusterExtensionAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExtensionAddon)(nil)).Elem()
}

func (i ClusterExtensionAddonArray) ToClusterExtensionAddonArrayOutput() ClusterExtensionAddonArrayOutput {
	return i.ToClusterExtensionAddonArrayOutputWithContext(context.Background())
}

func (i ClusterExtensionAddonArray) ToClusterExtensionAddonArrayOutputWithContext(ctx context.Context) ClusterExtensionAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExtensionAddonArrayOutput)
}

type ClusterExtensionAddonOutput struct{ *pulumi.OutputState }

func (ClusterExtensionAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExtensionAddon)(nil)).Elem()
}

func (o ClusterExtensionAddonOutput) ToClusterExtensionAddonOutput() ClusterExtensionAddonOutput {
	return o
}

func (o ClusterExtensionAddonOutput) ToClusterExtensionAddonOutputWithContext(ctx context.Context) ClusterExtensionAddonOutput {
	return o
}

// Add-on name.
func (o ClusterExtensionAddonOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterExtensionAddon) string { return v.Name }).(pulumi.StringOutput)
}

// Parameter of the add-on resource object in JSON string format, please check the example at the top of page for reference.
func (o ClusterExtensionAddonOutput) Param() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterExtensionAddon) string { return v.Param }).(pulumi.StringOutput)
}

type ClusterExtensionAddonArrayOutput struct{ *pulumi.OutputState }

func (ClusterExtensionAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExtensionAddon)(nil)).Elem()
}

func (o ClusterExtensionAddonArrayOutput) ToClusterExtensionAddonArrayOutput() ClusterExtensionAddonArrayOutput {
	return o
}

func (o ClusterExtensionAddonArrayOutput) ToClusterExtensionAddonArrayOutputWithContext(ctx context.Context) ClusterExtensionAddonArrayOutput {
	return o
}

func (o ClusterExtensionAddonArrayOutput) Index(i pulumi.IntInput) ClusterExtensionAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterExtensionAddon {
		return vs[0].([]ClusterExtensionAddon)[vs[1].(int)]
	}).(ClusterExtensionAddonOutput)
}

type ClusterLogAgent struct {
	// Whether the log agent enabled.
	Enabled bool `pulumi:"enabled"`
	// Kubelet root directory as the literal.
	KubeletRootDir *string `pulumi:"kubeletRootDir"`
}

// ClusterLogAgentInput is an input type that accepts ClusterLogAgentArgs and ClusterLogAgentOutput values.
// You can construct a concrete instance of `ClusterLogAgentInput` via:
//
//          ClusterLogAgentArgs{...}
type ClusterLogAgentInput interface {
	pulumi.Input

	ToClusterLogAgentOutput() ClusterLogAgentOutput
	ToClusterLogAgentOutputWithContext(context.Context) ClusterLogAgentOutput
}

type ClusterLogAgentArgs struct {
	// Whether the log agent enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Kubelet root directory as the literal.
	KubeletRootDir pulumi.StringPtrInput `pulumi:"kubeletRootDir"`
}

func (ClusterLogAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogAgent)(nil)).Elem()
}

func (i ClusterLogAgentArgs) ToClusterLogAgentOutput() ClusterLogAgentOutput {
	return i.ToClusterLogAgentOutputWithContext(context.Background())
}

func (i ClusterLogAgentArgs) ToClusterLogAgentOutputWithContext(ctx context.Context) ClusterLogAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLogAgentOutput)
}

func (i ClusterLogAgentArgs) ToClusterLogAgentPtrOutput() ClusterLogAgentPtrOutput {
	return i.ToClusterLogAgentPtrOutputWithContext(context.Background())
}

func (i ClusterLogAgentArgs) ToClusterLogAgentPtrOutputWithContext(ctx context.Context) ClusterLogAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLogAgentOutput).ToClusterLogAgentPtrOutputWithContext(ctx)
}

// ClusterLogAgentPtrInput is an input type that accepts ClusterLogAgentArgs, ClusterLogAgentPtr and ClusterLogAgentPtrOutput values.
// You can construct a concrete instance of `ClusterLogAgentPtrInput` via:
//
//          ClusterLogAgentArgs{...}
//
//  or:
//
//          nil
type ClusterLogAgentPtrInput interface {
	pulumi.Input

	ToClusterLogAgentPtrOutput() ClusterLogAgentPtrOutput
	ToClusterLogAgentPtrOutputWithContext(context.Context) ClusterLogAgentPtrOutput
}

type clusterLogAgentPtrType ClusterLogAgentArgs

func ClusterLogAgentPtr(v *ClusterLogAgentArgs) ClusterLogAgentPtrInput {
	return (*clusterLogAgentPtrType)(v)
}

func (*clusterLogAgentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogAgent)(nil)).Elem()
}

func (i *clusterLogAgentPtrType) ToClusterLogAgentPtrOutput() ClusterLogAgentPtrOutput {
	return i.ToClusterLogAgentPtrOutputWithContext(context.Background())
}

func (i *clusterLogAgentPtrType) ToClusterLogAgentPtrOutputWithContext(ctx context.Context) ClusterLogAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLogAgentPtrOutput)
}

type ClusterLogAgentOutput struct{ *pulumi.OutputState }

func (ClusterLogAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogAgent)(nil)).Elem()
}

func (o ClusterLogAgentOutput) ToClusterLogAgentOutput() ClusterLogAgentOutput {
	return o
}

func (o ClusterLogAgentOutput) ToClusterLogAgentOutputWithContext(ctx context.Context) ClusterLogAgentOutput {
	return o
}

func (o ClusterLogAgentOutput) ToClusterLogAgentPtrOutput() ClusterLogAgentPtrOutput {
	return o.ToClusterLogAgentPtrOutputWithContext(context.Background())
}

func (o ClusterLogAgentOutput) ToClusterLogAgentPtrOutputWithContext(ctx context.Context) ClusterLogAgentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLogAgent) *ClusterLogAgent {
		return &v
	}).(ClusterLogAgentPtrOutput)
}

// Whether the log agent enabled.
func (o ClusterLogAgentOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterLogAgent) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Kubelet root directory as the literal.
func (o ClusterLogAgentOutput) KubeletRootDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLogAgent) *string { return v.KubeletRootDir }).(pulumi.StringPtrOutput)
}

type ClusterLogAgentPtrOutput struct{ *pulumi.OutputState }

func (ClusterLogAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogAgent)(nil)).Elem()
}

func (o ClusterLogAgentPtrOutput) ToClusterLogAgentPtrOutput() ClusterLogAgentPtrOutput {
	return o
}

func (o ClusterLogAgentPtrOutput) ToClusterLogAgentPtrOutputWithContext(ctx context.Context) ClusterLogAgentPtrOutput {
	return o
}

func (o ClusterLogAgentPtrOutput) Elem() ClusterLogAgentOutput {
	return o.ApplyT(func(v *ClusterLogAgent) ClusterLogAgent {
		if v != nil {
			return *v
		}
		var ret ClusterLogAgent
		return ret
	}).(ClusterLogAgentOutput)
}

// Whether the log agent enabled.
func (o ClusterLogAgentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterLogAgent) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Kubelet root directory as the literal.
func (o ClusterLogAgentPtrOutput) KubeletRootDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLogAgent) *string {
		if v == nil {
			return nil
		}
		return v.KubeletRootDir
	}).(pulumi.StringPtrOutput)
}

type ClusterMasterConfig struct {
	// Indicates which availability zone will be used.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName *string `pulumi:"camRoleName"`
	// Number of cvm.
	Count *int `pulumi:"count"`
	// Configurations of data disk.
	DataDisks []ClusterMasterConfigDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds *string `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname *string `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId *string `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *int `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName *string `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType string `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds *string `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password *string `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned *bool `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId string `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// ClusterMasterConfigInput is an input type that accepts ClusterMasterConfigArgs and ClusterMasterConfigOutput values.
// You can construct a concrete instance of `ClusterMasterConfigInput` via:
//
//          ClusterMasterConfigArgs{...}
type ClusterMasterConfigInput interface {
	pulumi.Input

	ToClusterMasterConfigOutput() ClusterMasterConfigOutput
	ToClusterMasterConfigOutputWithContext(context.Context) ClusterMasterConfigOutput
}

type ClusterMasterConfigArgs struct {
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId pulumi.StringPtrInput `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName pulumi.StringPtrInput `pulumi:"camRoleName"`
	// Number of cvm.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Configurations of data disk.
	DataDisks ClusterMasterConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds pulumi.StringPtrInput `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService pulumi.BoolPtrInput `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService pulumi.BoolPtrInput `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId pulumi.StringPtrInput `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId pulumi.StringPtrInput `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType pulumi.StringPtrInput `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod pulumi.IntPtrInput `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag pulumi.StringPtrInput `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType pulumi.StringPtrInput `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut pulumi.IntPtrInput `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds pulumi.StringPtrInput `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned pulumi.BoolPtrInput `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize pulumi.IntPtrInput `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType pulumi.StringPtrInput `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ClusterMasterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterConfig)(nil)).Elem()
}

func (i ClusterMasterConfigArgs) ToClusterMasterConfigOutput() ClusterMasterConfigOutput {
	return i.ToClusterMasterConfigOutputWithContext(context.Background())
}

func (i ClusterMasterConfigArgs) ToClusterMasterConfigOutputWithContext(ctx context.Context) ClusterMasterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterConfigOutput)
}

// ClusterMasterConfigArrayInput is an input type that accepts ClusterMasterConfigArray and ClusterMasterConfigArrayOutput values.
// You can construct a concrete instance of `ClusterMasterConfigArrayInput` via:
//
//          ClusterMasterConfigArray{ ClusterMasterConfigArgs{...} }
type ClusterMasterConfigArrayInput interface {
	pulumi.Input

	ToClusterMasterConfigArrayOutput() ClusterMasterConfigArrayOutput
	ToClusterMasterConfigArrayOutputWithContext(context.Context) ClusterMasterConfigArrayOutput
}

type ClusterMasterConfigArray []ClusterMasterConfigInput

func (ClusterMasterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterConfig)(nil)).Elem()
}

func (i ClusterMasterConfigArray) ToClusterMasterConfigArrayOutput() ClusterMasterConfigArrayOutput {
	return i.ToClusterMasterConfigArrayOutputWithContext(context.Background())
}

func (i ClusterMasterConfigArray) ToClusterMasterConfigArrayOutputWithContext(ctx context.Context) ClusterMasterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterConfigArrayOutput)
}

type ClusterMasterConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterConfig)(nil)).Elem()
}

func (o ClusterMasterConfigOutput) ToClusterMasterConfigOutput() ClusterMasterConfigOutput {
	return o
}

func (o ClusterMasterConfigOutput) ToClusterMasterConfigOutputWithContext(ctx context.Context) ClusterMasterConfigOutput {
	return o
}

// Indicates which availability zone will be used.
func (o ClusterMasterConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o ClusterMasterConfigOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// CAM role name authorized to access.
func (o ClusterMasterConfigOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.CamRoleName }).(pulumi.StringPtrOutput)
}

// Number of cvm.
func (o ClusterMasterConfigOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Configurations of data disk.
func (o ClusterMasterConfigOutput) DataDisks() ClusterMasterConfigDataDiskArrayOutput {
	return o.ApplyT(func(v ClusterMasterConfig) []ClusterMasterConfigDataDisk { return v.DataDisks }).(ClusterMasterConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
func (o ClusterMasterConfigOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
func (o ClusterMasterConfigOutput) DisasterRecoverGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.DisasterRecoverGroupIds }).(pulumi.StringPtrOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o ClusterMasterConfigOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *bool { return v.EnhancedMonitorService }).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o ClusterMasterConfigOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *bool { return v.EnhancedSecurityService }).(pulumi.BoolPtrOutput)
}

// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
func (o ClusterMasterConfigOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Id of cvm hpc cluster.
func (o ClusterMasterConfigOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.HpcClusterId }).(pulumi.StringPtrOutput)
}

// The valid image id, format of img-xxx.
func (o ClusterMasterConfigOutput) ImgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.ImgId }).(pulumi.StringPtrOutput)
}

// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
func (o ClusterMasterConfigOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o ClusterMasterConfigOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *int { return v.InstanceChargeTypePrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o ClusterMasterConfigOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.InstanceChargeTypePrepaidRenewFlag }).(pulumi.StringPtrOutput)
}

// Name of the CVMs.
func (o ClusterMasterConfigOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o ClusterMasterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
func (o ClusterMasterConfigOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is 0.
func (o ClusterMasterConfigOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *int { return v.InternetMaxBandwidthOut }).(pulumi.IntPtrOutput)
}

// ID list of keys, should be set if `password` not set.
func (o ClusterMasterConfigOutput) KeyIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.KeyIds }).(pulumi.StringPtrOutput)
}

// Password to access, should be set if `keyIds` not set.
func (o ClusterMasterConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o ClusterMasterConfigOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *bool { return v.PublicIpAssigned }).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o ClusterMasterConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterMasterConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Private network ID.
func (o ClusterMasterConfigOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterConfig) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o ClusterMasterConfigOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *int { return v.SystemDiskSize }).(pulumi.IntPtrOutput)
}

// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
func (o ClusterMasterConfigOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.SystemDiskType }).(pulumi.StringPtrOutput)
}

// ase64-encoded User Data text, the length limit is 16KB.
func (o ClusterMasterConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ClusterMasterConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterConfig)(nil)).Elem()
}

func (o ClusterMasterConfigArrayOutput) ToClusterMasterConfigArrayOutput() ClusterMasterConfigArrayOutput {
	return o
}

func (o ClusterMasterConfigArrayOutput) ToClusterMasterConfigArrayOutputWithContext(ctx context.Context) ClusterMasterConfigArrayOutput {
	return o
}

func (o ClusterMasterConfigArrayOutput) Index(i pulumi.IntInput) ClusterMasterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterConfig {
		return vs[0].([]ClusterMasterConfig)[vs[1].(int)]
	}).(ClusterMasterConfigOutput)
}

type ClusterMasterConfigDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt *bool `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
}

// ClusterMasterConfigDataDiskInput is an input type that accepts ClusterMasterConfigDataDiskArgs and ClusterMasterConfigDataDiskOutput values.
// You can construct a concrete instance of `ClusterMasterConfigDataDiskInput` via:
//
//          ClusterMasterConfigDataDiskArgs{...}
type ClusterMasterConfigDataDiskInput interface {
	pulumi.Input

	ToClusterMasterConfigDataDiskOutput() ClusterMasterConfigDataDiskOutput
	ToClusterMasterConfigDataDiskOutputWithContext(context.Context) ClusterMasterConfigDataDiskOutput
}

type ClusterMasterConfigDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt pulumi.BoolPtrInput `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (ClusterMasterConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterConfigDataDisk)(nil)).Elem()
}

func (i ClusterMasterConfigDataDiskArgs) ToClusterMasterConfigDataDiskOutput() ClusterMasterConfigDataDiskOutput {
	return i.ToClusterMasterConfigDataDiskOutputWithContext(context.Background())
}

func (i ClusterMasterConfigDataDiskArgs) ToClusterMasterConfigDataDiskOutputWithContext(ctx context.Context) ClusterMasterConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterConfigDataDiskOutput)
}

// ClusterMasterConfigDataDiskArrayInput is an input type that accepts ClusterMasterConfigDataDiskArray and ClusterMasterConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `ClusterMasterConfigDataDiskArrayInput` via:
//
//          ClusterMasterConfigDataDiskArray{ ClusterMasterConfigDataDiskArgs{...} }
type ClusterMasterConfigDataDiskArrayInput interface {
	pulumi.Input

	ToClusterMasterConfigDataDiskArrayOutput() ClusterMasterConfigDataDiskArrayOutput
	ToClusterMasterConfigDataDiskArrayOutputWithContext(context.Context) ClusterMasterConfigDataDiskArrayOutput
}

type ClusterMasterConfigDataDiskArray []ClusterMasterConfigDataDiskInput

func (ClusterMasterConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterConfigDataDisk)(nil)).Elem()
}

func (i ClusterMasterConfigDataDiskArray) ToClusterMasterConfigDataDiskArrayOutput() ClusterMasterConfigDataDiskArrayOutput {
	return i.ToClusterMasterConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i ClusterMasterConfigDataDiskArray) ToClusterMasterConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterMasterConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterConfigDataDiskArrayOutput)
}

type ClusterMasterConfigDataDiskOutput struct{ *pulumi.OutputState }

func (ClusterMasterConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterConfigDataDisk)(nil)).Elem()
}

func (o ClusterMasterConfigDataDiskOutput) ToClusterMasterConfigDataDiskOutput() ClusterMasterConfigDataDiskOutput {
	return o
}

func (o ClusterMasterConfigDataDiskOutput) ToClusterMasterConfigDataDiskOutputWithContext(ctx context.Context) ClusterMasterConfigDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ClusterMasterConfigDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount.
func (o ClusterMasterConfigDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ClusterMasterConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
func (o ClusterMasterConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Indicates whether to encrypt data disk, default `false`.
func (o ClusterMasterConfigDataDiskOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ClusterMasterConfigDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
func (o ClusterMasterConfigDataDiskOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ClusterMasterConfigDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Data disk snapshot ID.
func (o ClusterMasterConfigDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterConfigDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type ClusterMasterConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterConfigDataDisk)(nil)).Elem()
}

func (o ClusterMasterConfigDataDiskArrayOutput) ToClusterMasterConfigDataDiskArrayOutput() ClusterMasterConfigDataDiskArrayOutput {
	return o
}

func (o ClusterMasterConfigDataDiskArrayOutput) ToClusterMasterConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterMasterConfigDataDiskArrayOutput {
	return o
}

func (o ClusterMasterConfigDataDiskArrayOutput) Index(i pulumi.IntInput) ClusterMasterConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterConfigDataDisk {
		return vs[0].([]ClusterMasterConfigDataDisk)[vs[1].(int)]
	}).(ClusterMasterConfigDataDiskOutput)
}

type ClusterNodePoolGlobalConfig struct {
	// Indicates which scale-out method will be used when there are multiple scaling groups. Valid values: `random` - select a random scaling group, `most-pods` - select the scaling group that can schedule the most pods, `least-waste` - select the scaling group that can ensure the fewest remaining resources after Pod scheduling.
	Expander *string `pulumi:"expander"`
	// Whether to ignore DaemonSet pods by default when calculating resource usage.
	IgnoreDaemonSetsUtilization *bool `pulumi:"ignoreDaemonSetsUtilization"`
	// Indicates whether to enable scale-in.
	IsScaleInEnabled *bool `pulumi:"isScaleInEnabled"`
	// Max concurrent scale-in volume.
	MaxConcurrentScaleIn *int `pulumi:"maxConcurrentScaleIn"`
	// Number of minutes after cluster scale-out when the system starts judging whether to perform scale-in.
	ScaleInDelay *int `pulumi:"scaleInDelay"`
	// Number of consecutive minutes of idleness after which the node is subject to scale-in.
	ScaleInUnneededTime *int `pulumi:"scaleInUnneededTime"`
	// Percentage of node resource usage below which the node is considered to be idle.
	ScaleInUtilizationThreshold *int `pulumi:"scaleInUtilizationThreshold"`
	// During scale-in, ignore nodes with local storage pods.
	SkipNodesWithLocalStorage *bool `pulumi:"skipNodesWithLocalStorage"`
	// During scale-in, ignore nodes with pods in the kube-system namespace that are not managed by DaemonSet.
	SkipNodesWithSystemPods *bool `pulumi:"skipNodesWithSystemPods"`
}

// ClusterNodePoolGlobalConfigInput is an input type that accepts ClusterNodePoolGlobalConfigArgs and ClusterNodePoolGlobalConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolGlobalConfigInput` via:
//
//          ClusterNodePoolGlobalConfigArgs{...}
type ClusterNodePoolGlobalConfigInput interface {
	pulumi.Input

	ToClusterNodePoolGlobalConfigOutput() ClusterNodePoolGlobalConfigOutput
	ToClusterNodePoolGlobalConfigOutputWithContext(context.Context) ClusterNodePoolGlobalConfigOutput
}

type ClusterNodePoolGlobalConfigArgs struct {
	// Indicates which scale-out method will be used when there are multiple scaling groups. Valid values: `random` - select a random scaling group, `most-pods` - select the scaling group that can schedule the most pods, `least-waste` - select the scaling group that can ensure the fewest remaining resources after Pod scheduling.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// Whether to ignore DaemonSet pods by default when calculating resource usage.
	IgnoreDaemonSetsUtilization pulumi.BoolPtrInput `pulumi:"ignoreDaemonSetsUtilization"`
	// Indicates whether to enable scale-in.
	IsScaleInEnabled pulumi.BoolPtrInput `pulumi:"isScaleInEnabled"`
	// Max concurrent scale-in volume.
	MaxConcurrentScaleIn pulumi.IntPtrInput `pulumi:"maxConcurrentScaleIn"`
	// Number of minutes after cluster scale-out when the system starts judging whether to perform scale-in.
	ScaleInDelay pulumi.IntPtrInput `pulumi:"scaleInDelay"`
	// Number of consecutive minutes of idleness after which the node is subject to scale-in.
	ScaleInUnneededTime pulumi.IntPtrInput `pulumi:"scaleInUnneededTime"`
	// Percentage of node resource usage below which the node is considered to be idle.
	ScaleInUtilizationThreshold pulumi.IntPtrInput `pulumi:"scaleInUtilizationThreshold"`
	// During scale-in, ignore nodes with local storage pods.
	SkipNodesWithLocalStorage pulumi.BoolPtrInput `pulumi:"skipNodesWithLocalStorage"`
	// During scale-in, ignore nodes with pods in the kube-system namespace that are not managed by DaemonSet.
	SkipNodesWithSystemPods pulumi.BoolPtrInput `pulumi:"skipNodesWithSystemPods"`
}

func (ClusterNodePoolGlobalConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolGlobalConfig)(nil)).Elem()
}

func (i ClusterNodePoolGlobalConfigArgs) ToClusterNodePoolGlobalConfigOutput() ClusterNodePoolGlobalConfigOutput {
	return i.ToClusterNodePoolGlobalConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolGlobalConfigArgs) ToClusterNodePoolGlobalConfigOutputWithContext(ctx context.Context) ClusterNodePoolGlobalConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolGlobalConfigOutput)
}

// ClusterNodePoolGlobalConfigArrayInput is an input type that accepts ClusterNodePoolGlobalConfigArray and ClusterNodePoolGlobalConfigArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolGlobalConfigArrayInput` via:
//
//          ClusterNodePoolGlobalConfigArray{ ClusterNodePoolGlobalConfigArgs{...} }
type ClusterNodePoolGlobalConfigArrayInput interface {
	pulumi.Input

	ToClusterNodePoolGlobalConfigArrayOutput() ClusterNodePoolGlobalConfigArrayOutput
	ToClusterNodePoolGlobalConfigArrayOutputWithContext(context.Context) ClusterNodePoolGlobalConfigArrayOutput
}

type ClusterNodePoolGlobalConfigArray []ClusterNodePoolGlobalConfigInput

func (ClusterNodePoolGlobalConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolGlobalConfig)(nil)).Elem()
}

func (i ClusterNodePoolGlobalConfigArray) ToClusterNodePoolGlobalConfigArrayOutput() ClusterNodePoolGlobalConfigArrayOutput {
	return i.ToClusterNodePoolGlobalConfigArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolGlobalConfigArray) ToClusterNodePoolGlobalConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolGlobalConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolGlobalConfigArrayOutput)
}

type ClusterNodePoolGlobalConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolGlobalConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolGlobalConfig)(nil)).Elem()
}

func (o ClusterNodePoolGlobalConfigOutput) ToClusterNodePoolGlobalConfigOutput() ClusterNodePoolGlobalConfigOutput {
	return o
}

func (o ClusterNodePoolGlobalConfigOutput) ToClusterNodePoolGlobalConfigOutputWithContext(ctx context.Context) ClusterNodePoolGlobalConfigOutput {
	return o
}

// Indicates which scale-out method will be used when there are multiple scaling groups. Valid values: `random` - select a random scaling group, `most-pods` - select the scaling group that can schedule the most pods, `least-waste` - select the scaling group that can ensure the fewest remaining resources after Pod scheduling.
func (o ClusterNodePoolGlobalConfigOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// Whether to ignore DaemonSet pods by default when calculating resource usage.
func (o ClusterNodePoolGlobalConfigOutput) IgnoreDaemonSetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *bool { return v.IgnoreDaemonSetsUtilization }).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable scale-in.
func (o ClusterNodePoolGlobalConfigOutput) IsScaleInEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *bool { return v.IsScaleInEnabled }).(pulumi.BoolPtrOutput)
}

// Max concurrent scale-in volume.
func (o ClusterNodePoolGlobalConfigOutput) MaxConcurrentScaleIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *int { return v.MaxConcurrentScaleIn }).(pulumi.IntPtrOutput)
}

// Number of minutes after cluster scale-out when the system starts judging whether to perform scale-in.
func (o ClusterNodePoolGlobalConfigOutput) ScaleInDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *int { return v.ScaleInDelay }).(pulumi.IntPtrOutput)
}

// Number of consecutive minutes of idleness after which the node is subject to scale-in.
func (o ClusterNodePoolGlobalConfigOutput) ScaleInUnneededTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *int { return v.ScaleInUnneededTime }).(pulumi.IntPtrOutput)
}

// Percentage of node resource usage below which the node is considered to be idle.
func (o ClusterNodePoolGlobalConfigOutput) ScaleInUtilizationThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *int { return v.ScaleInUtilizationThreshold }).(pulumi.IntPtrOutput)
}

// During scale-in, ignore nodes with local storage pods.
func (o ClusterNodePoolGlobalConfigOutput) SkipNodesWithLocalStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *bool { return v.SkipNodesWithLocalStorage }).(pulumi.BoolPtrOutput)
}

// During scale-in, ignore nodes with pods in the kube-system namespace that are not managed by DaemonSet.
func (o ClusterNodePoolGlobalConfigOutput) SkipNodesWithSystemPods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolGlobalConfig) *bool { return v.SkipNodesWithSystemPods }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolGlobalConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolGlobalConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolGlobalConfig)(nil)).Elem()
}

func (o ClusterNodePoolGlobalConfigArrayOutput) ToClusterNodePoolGlobalConfigArrayOutput() ClusterNodePoolGlobalConfigArrayOutput {
	return o
}

func (o ClusterNodePoolGlobalConfigArrayOutput) ToClusterNodePoolGlobalConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolGlobalConfigArrayOutput {
	return o
}

func (o ClusterNodePoolGlobalConfigArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolGlobalConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolGlobalConfig {
		return vs[0].([]ClusterNodePoolGlobalConfig)[vs[1].(int)]
	}).(ClusterNodePoolGlobalConfigOutput)
}

type ClusterWorkerConfig struct {
	// Indicates which availability zone will be used.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName *string `pulumi:"camRoleName"`
	// Number of cvm.
	Count *int `pulumi:"count"`
	// Configurations of data disk.
	DataDisks []ClusterWorkerConfigDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds *string `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname *string `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId *string `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *int `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName *string `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType string `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds *string `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password *string `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned *bool `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId string `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// ClusterWorkerConfigInput is an input type that accepts ClusterWorkerConfigArgs and ClusterWorkerConfigOutput values.
// You can construct a concrete instance of `ClusterWorkerConfigInput` via:
//
//          ClusterWorkerConfigArgs{...}
type ClusterWorkerConfigInput interface {
	pulumi.Input

	ToClusterWorkerConfigOutput() ClusterWorkerConfigOutput
	ToClusterWorkerConfigOutputWithContext(context.Context) ClusterWorkerConfigOutput
}

type ClusterWorkerConfigArgs struct {
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId pulumi.StringPtrInput `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName pulumi.StringPtrInput `pulumi:"camRoleName"`
	// Number of cvm.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Configurations of data disk.
	DataDisks ClusterWorkerConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds pulumi.StringPtrInput `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService pulumi.BoolPtrInput `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService pulumi.BoolPtrInput `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId pulumi.StringPtrInput `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId pulumi.StringPtrInput `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType pulumi.StringPtrInput `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod pulumi.IntPtrInput `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag pulumi.StringPtrInput `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType pulumi.StringPtrInput `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut pulumi.IntPtrInput `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds pulumi.StringPtrInput `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned pulumi.BoolPtrInput `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize pulumi.IntPtrInput `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType pulumi.StringPtrInput `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ClusterWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerConfig)(nil)).Elem()
}

func (i ClusterWorkerConfigArgs) ToClusterWorkerConfigOutput() ClusterWorkerConfigOutput {
	return i.ToClusterWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterWorkerConfigArgs) ToClusterWorkerConfigOutputWithContext(ctx context.Context) ClusterWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerConfigOutput)
}

// ClusterWorkerConfigArrayInput is an input type that accepts ClusterWorkerConfigArray and ClusterWorkerConfigArrayOutput values.
// You can construct a concrete instance of `ClusterWorkerConfigArrayInput` via:
//
//          ClusterWorkerConfigArray{ ClusterWorkerConfigArgs{...} }
type ClusterWorkerConfigArrayInput interface {
	pulumi.Input

	ToClusterWorkerConfigArrayOutput() ClusterWorkerConfigArrayOutput
	ToClusterWorkerConfigArrayOutputWithContext(context.Context) ClusterWorkerConfigArrayOutput
}

type ClusterWorkerConfigArray []ClusterWorkerConfigInput

func (ClusterWorkerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerConfig)(nil)).Elem()
}

func (i ClusterWorkerConfigArray) ToClusterWorkerConfigArrayOutput() ClusterWorkerConfigArrayOutput {
	return i.ToClusterWorkerConfigArrayOutputWithContext(context.Background())
}

func (i ClusterWorkerConfigArray) ToClusterWorkerConfigArrayOutputWithContext(ctx context.Context) ClusterWorkerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerConfigArrayOutput)
}

type ClusterWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerConfig)(nil)).Elem()
}

func (o ClusterWorkerConfigOutput) ToClusterWorkerConfigOutput() ClusterWorkerConfigOutput {
	return o
}

func (o ClusterWorkerConfigOutput) ToClusterWorkerConfigOutputWithContext(ctx context.Context) ClusterWorkerConfigOutput {
	return o
}

// Indicates which availability zone will be used.
func (o ClusterWorkerConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o ClusterWorkerConfigOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// CAM role name authorized to access.
func (o ClusterWorkerConfigOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.CamRoleName }).(pulumi.StringPtrOutput)
}

// Number of cvm.
func (o ClusterWorkerConfigOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Configurations of data disk.
func (o ClusterWorkerConfigOutput) DataDisks() ClusterWorkerConfigDataDiskArrayOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) []ClusterWorkerConfigDataDisk { return v.DataDisks }).(ClusterWorkerConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
func (o ClusterWorkerConfigOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
func (o ClusterWorkerConfigOutput) DisasterRecoverGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.DisasterRecoverGroupIds }).(pulumi.StringPtrOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o ClusterWorkerConfigOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *bool { return v.EnhancedMonitorService }).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o ClusterWorkerConfigOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *bool { return v.EnhancedSecurityService }).(pulumi.BoolPtrOutput)
}

// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
func (o ClusterWorkerConfigOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Id of cvm hpc cluster.
func (o ClusterWorkerConfigOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.HpcClusterId }).(pulumi.StringPtrOutput)
}

// The valid image id, format of img-xxx.
func (o ClusterWorkerConfigOutput) ImgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.ImgId }).(pulumi.StringPtrOutput)
}

// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
func (o ClusterWorkerConfigOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o ClusterWorkerConfigOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *int { return v.InstanceChargeTypePrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o ClusterWorkerConfigOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.InstanceChargeTypePrepaidRenewFlag }).(pulumi.StringPtrOutput)
}

// Name of the CVMs.
func (o ClusterWorkerConfigOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o ClusterWorkerConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
func (o ClusterWorkerConfigOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is 0.
func (o ClusterWorkerConfigOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *int { return v.InternetMaxBandwidthOut }).(pulumi.IntPtrOutput)
}

// ID list of keys, should be set if `password` not set.
func (o ClusterWorkerConfigOutput) KeyIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.KeyIds }).(pulumi.StringPtrOutput)
}

// Password to access, should be set if `keyIds` not set.
func (o ClusterWorkerConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o ClusterWorkerConfigOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *bool { return v.PublicIpAssigned }).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o ClusterWorkerConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Private network ID.
func (o ClusterWorkerConfigOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o ClusterWorkerConfigOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *int { return v.SystemDiskSize }).(pulumi.IntPtrOutput)
}

// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
func (o ClusterWorkerConfigOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.SystemDiskType }).(pulumi.StringPtrOutput)
}

// ase64-encoded User Data text, the length limit is 16KB.
func (o ClusterWorkerConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ClusterWorkerConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterWorkerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerConfig)(nil)).Elem()
}

func (o ClusterWorkerConfigArrayOutput) ToClusterWorkerConfigArrayOutput() ClusterWorkerConfigArrayOutput {
	return o
}

func (o ClusterWorkerConfigArrayOutput) ToClusterWorkerConfigArrayOutputWithContext(ctx context.Context) ClusterWorkerConfigArrayOutput {
	return o
}

func (o ClusterWorkerConfigArrayOutput) Index(i pulumi.IntInput) ClusterWorkerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterWorkerConfig {
		return vs[0].([]ClusterWorkerConfig)[vs[1].(int)]
	}).(ClusterWorkerConfigOutput)
}

type ClusterWorkerConfigDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt *bool `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
}

// ClusterWorkerConfigDataDiskInput is an input type that accepts ClusterWorkerConfigDataDiskArgs and ClusterWorkerConfigDataDiskOutput values.
// You can construct a concrete instance of `ClusterWorkerConfigDataDiskInput` via:
//
//          ClusterWorkerConfigDataDiskArgs{...}
type ClusterWorkerConfigDataDiskInput interface {
	pulumi.Input

	ToClusterWorkerConfigDataDiskOutput() ClusterWorkerConfigDataDiskOutput
	ToClusterWorkerConfigDataDiskOutputWithContext(context.Context) ClusterWorkerConfigDataDiskOutput
}

type ClusterWorkerConfigDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt pulumi.BoolPtrInput `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (ClusterWorkerConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerConfigDataDisk)(nil)).Elem()
}

func (i ClusterWorkerConfigDataDiskArgs) ToClusterWorkerConfigDataDiskOutput() ClusterWorkerConfigDataDiskOutput {
	return i.ToClusterWorkerConfigDataDiskOutputWithContext(context.Background())
}

func (i ClusterWorkerConfigDataDiskArgs) ToClusterWorkerConfigDataDiskOutputWithContext(ctx context.Context) ClusterWorkerConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerConfigDataDiskOutput)
}

// ClusterWorkerConfigDataDiskArrayInput is an input type that accepts ClusterWorkerConfigDataDiskArray and ClusterWorkerConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `ClusterWorkerConfigDataDiskArrayInput` via:
//
//          ClusterWorkerConfigDataDiskArray{ ClusterWorkerConfigDataDiskArgs{...} }
type ClusterWorkerConfigDataDiskArrayInput interface {
	pulumi.Input

	ToClusterWorkerConfigDataDiskArrayOutput() ClusterWorkerConfigDataDiskArrayOutput
	ToClusterWorkerConfigDataDiskArrayOutputWithContext(context.Context) ClusterWorkerConfigDataDiskArrayOutput
}

type ClusterWorkerConfigDataDiskArray []ClusterWorkerConfigDataDiskInput

func (ClusterWorkerConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerConfigDataDisk)(nil)).Elem()
}

func (i ClusterWorkerConfigDataDiskArray) ToClusterWorkerConfigDataDiskArrayOutput() ClusterWorkerConfigDataDiskArrayOutput {
	return i.ToClusterWorkerConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i ClusterWorkerConfigDataDiskArray) ToClusterWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterWorkerConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerConfigDataDiskArrayOutput)
}

type ClusterWorkerConfigDataDiskOutput struct{ *pulumi.OutputState }

func (ClusterWorkerConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerConfigDataDisk)(nil)).Elem()
}

func (o ClusterWorkerConfigDataDiskOutput) ToClusterWorkerConfigDataDiskOutput() ClusterWorkerConfigDataDiskOutput {
	return o
}

func (o ClusterWorkerConfigDataDiskOutput) ToClusterWorkerConfigDataDiskOutputWithContext(ctx context.Context) ClusterWorkerConfigDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ClusterWorkerConfigDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount.
func (o ClusterWorkerConfigDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ClusterWorkerConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
func (o ClusterWorkerConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Indicates whether to encrypt data disk, default `false`.
func (o ClusterWorkerConfigDataDiskOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ClusterWorkerConfigDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
func (o ClusterWorkerConfigDataDiskOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ClusterWorkerConfigDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Data disk snapshot ID.
func (o ClusterWorkerConfigDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerConfigDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type ClusterWorkerConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterWorkerConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerConfigDataDisk)(nil)).Elem()
}

func (o ClusterWorkerConfigDataDiskArrayOutput) ToClusterWorkerConfigDataDiskArrayOutput() ClusterWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ClusterWorkerConfigDataDiskArrayOutput) ToClusterWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ClusterWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ClusterWorkerConfigDataDiskArrayOutput) Index(i pulumi.IntInput) ClusterWorkerConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterWorkerConfigDataDisk {
		return vs[0].([]ClusterWorkerConfigDataDisk)[vs[1].(int)]
	}).(ClusterWorkerConfigDataDiskOutput)
}

type ClusterWorkerInstancesList struct {
	// Information of the cvm when it is failed.
	FailedReason *string `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId *string `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole *string `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState *string `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp *string `pulumi:"lanIp"`
}

// ClusterWorkerInstancesListInput is an input type that accepts ClusterWorkerInstancesListArgs and ClusterWorkerInstancesListOutput values.
// You can construct a concrete instance of `ClusterWorkerInstancesListInput` via:
//
//          ClusterWorkerInstancesListArgs{...}
type ClusterWorkerInstancesListInput interface {
	pulumi.Input

	ToClusterWorkerInstancesListOutput() ClusterWorkerInstancesListOutput
	ToClusterWorkerInstancesListOutputWithContext(context.Context) ClusterWorkerInstancesListOutput
}

type ClusterWorkerInstancesListArgs struct {
	// Information of the cvm when it is failed.
	FailedReason pulumi.StringPtrInput `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole pulumi.StringPtrInput `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState pulumi.StringPtrInput `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp pulumi.StringPtrInput `pulumi:"lanIp"`
}

func (ClusterWorkerInstancesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerInstancesList)(nil)).Elem()
}

func (i ClusterWorkerInstancesListArgs) ToClusterWorkerInstancesListOutput() ClusterWorkerInstancesListOutput {
	return i.ToClusterWorkerInstancesListOutputWithContext(context.Background())
}

func (i ClusterWorkerInstancesListArgs) ToClusterWorkerInstancesListOutputWithContext(ctx context.Context) ClusterWorkerInstancesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerInstancesListOutput)
}

// ClusterWorkerInstancesListArrayInput is an input type that accepts ClusterWorkerInstancesListArray and ClusterWorkerInstancesListArrayOutput values.
// You can construct a concrete instance of `ClusterWorkerInstancesListArrayInput` via:
//
//          ClusterWorkerInstancesListArray{ ClusterWorkerInstancesListArgs{...} }
type ClusterWorkerInstancesListArrayInput interface {
	pulumi.Input

	ToClusterWorkerInstancesListArrayOutput() ClusterWorkerInstancesListArrayOutput
	ToClusterWorkerInstancesListArrayOutputWithContext(context.Context) ClusterWorkerInstancesListArrayOutput
}

type ClusterWorkerInstancesListArray []ClusterWorkerInstancesListInput

func (ClusterWorkerInstancesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerInstancesList)(nil)).Elem()
}

func (i ClusterWorkerInstancesListArray) ToClusterWorkerInstancesListArrayOutput() ClusterWorkerInstancesListArrayOutput {
	return i.ToClusterWorkerInstancesListArrayOutputWithContext(context.Background())
}

func (i ClusterWorkerInstancesListArray) ToClusterWorkerInstancesListArrayOutputWithContext(ctx context.Context) ClusterWorkerInstancesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerInstancesListArrayOutput)
}

type ClusterWorkerInstancesListOutput struct{ *pulumi.OutputState }

func (ClusterWorkerInstancesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerInstancesList)(nil)).Elem()
}

func (o ClusterWorkerInstancesListOutput) ToClusterWorkerInstancesListOutput() ClusterWorkerInstancesListOutput {
	return o
}

func (o ClusterWorkerInstancesListOutput) ToClusterWorkerInstancesListOutputWithContext(ctx context.Context) ClusterWorkerInstancesListOutput {
	return o
}

// Information of the cvm when it is failed.
func (o ClusterWorkerInstancesListOutput) FailedReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerInstancesList) *string { return v.FailedReason }).(pulumi.StringPtrOutput)
}

// ID of the cvm.
func (o ClusterWorkerInstancesListOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerInstancesList) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Role of the cvm.
func (o ClusterWorkerInstancesListOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerInstancesList) *string { return v.InstanceRole }).(pulumi.StringPtrOutput)
}

// State of the cvm.
func (o ClusterWorkerInstancesListOutput) InstanceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerInstancesList) *string { return v.InstanceState }).(pulumi.StringPtrOutput)
}

// LAN IP of the cvm.
func (o ClusterWorkerInstancesListOutput) LanIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerInstancesList) *string { return v.LanIp }).(pulumi.StringPtrOutput)
}

type ClusterWorkerInstancesListArrayOutput struct{ *pulumi.OutputState }

func (ClusterWorkerInstancesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerInstancesList)(nil)).Elem()
}

func (o ClusterWorkerInstancesListArrayOutput) ToClusterWorkerInstancesListArrayOutput() ClusterWorkerInstancesListArrayOutput {
	return o
}

func (o ClusterWorkerInstancesListArrayOutput) ToClusterWorkerInstancesListArrayOutputWithContext(ctx context.Context) ClusterWorkerInstancesListArrayOutput {
	return o
}

func (o ClusterWorkerInstancesListArrayOutput) Index(i pulumi.IntInput) ClusterWorkerInstancesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterWorkerInstancesList {
		return vs[0].([]ClusterWorkerInstancesList)[vs[1].(int)]
	}).(ClusterWorkerInstancesListOutput)
}

type NodePoolAutoScalingConfig struct {
	// Backup CVM instance types if specified instance type sold out or mismatch.
	BackupInstanceTypes []string `pulumi:"backupInstanceTypes"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// Name of cam role.
	CamRoleName *string `pulumi:"camRoleName"`
	// Configurations of data disk.
	DataDisks []NodePoolAutoScalingConfigDataDisk `pulumi:"dataDisks"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `pulumi:"enhancedSecurityService"`
	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostName *string `pulumi:"hostName"`
	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostNameStyle *string `pulumi:"hostNameStyle"`
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *int `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceName *string `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType string `pulumi:"instanceType"`
	// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys.
	KeyIds []string `pulumi:"keyIds"`
	// Password to access.
	Password *string `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned *bool `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
	SpotMaxPrice *string `pulumi:"spotMaxPrice"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// Type of a CVM disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.
	SystemDiskType *string `pulumi:"systemDiskType"`
}

// NodePoolAutoScalingConfigInput is an input type that accepts NodePoolAutoScalingConfigArgs and NodePoolAutoScalingConfigOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingConfigInput` via:
//
//          NodePoolAutoScalingConfigArgs{...}
type NodePoolAutoScalingConfigInput interface {
	pulumi.Input

	ToNodePoolAutoScalingConfigOutput() NodePoolAutoScalingConfigOutput
	ToNodePoolAutoScalingConfigOutputWithContext(context.Context) NodePoolAutoScalingConfigOutput
}

type NodePoolAutoScalingConfigArgs struct {
	// Backup CVM instance types if specified instance type sold out or mismatch.
	BackupInstanceTypes pulumi.StringArrayInput `pulumi:"backupInstanceTypes"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId pulumi.StringPtrInput `pulumi:"bandwidthPackageId"`
	// Name of cam role.
	CamRoleName pulumi.StringPtrInput `pulumi:"camRoleName"`
	// Configurations of data disk.
	DataDisks NodePoolAutoScalingConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService pulumi.BoolPtrInput `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService pulumi.BoolPtrInput `pulumi:"enhancedSecurityService"`
	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostNameStyle pulumi.StringPtrInput `pulumi:"hostNameStyle"`
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
	InstanceChargeType pulumi.StringPtrInput `pulumi:"instanceChargeType"`
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod pulumi.IntPtrInput `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag pulumi.StringPtrInput `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType pulumi.StringPtrInput `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut pulumi.IntPtrInput `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys.
	KeyIds pulumi.StringArrayInput `pulumi:"keyIds"`
	// Password to access.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned pulumi.BoolPtrInput `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
	SpotMaxPrice pulumi.StringPtrInput `pulumi:"spotMaxPrice"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize pulumi.IntPtrInput `pulumi:"systemDiskSize"`
	// Type of a CVM disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.
	SystemDiskType pulumi.StringPtrInput `pulumi:"systemDiskType"`
}

func (NodePoolAutoScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScalingConfig)(nil)).Elem()
}

func (i NodePoolAutoScalingConfigArgs) ToNodePoolAutoScalingConfigOutput() NodePoolAutoScalingConfigOutput {
	return i.ToNodePoolAutoScalingConfigOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingConfigArgs) ToNodePoolAutoScalingConfigOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingConfigOutput)
}

func (i NodePoolAutoScalingConfigArgs) ToNodePoolAutoScalingConfigPtrOutput() NodePoolAutoScalingConfigPtrOutput {
	return i.ToNodePoolAutoScalingConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingConfigArgs) ToNodePoolAutoScalingConfigPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingConfigOutput).ToNodePoolAutoScalingConfigPtrOutputWithContext(ctx)
}

// NodePoolAutoScalingConfigPtrInput is an input type that accepts NodePoolAutoScalingConfigArgs, NodePoolAutoScalingConfigPtr and NodePoolAutoScalingConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingConfigPtrInput` via:
//
//          NodePoolAutoScalingConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolAutoScalingConfigPtrInput interface {
	pulumi.Input

	ToNodePoolAutoScalingConfigPtrOutput() NodePoolAutoScalingConfigPtrOutput
	ToNodePoolAutoScalingConfigPtrOutputWithContext(context.Context) NodePoolAutoScalingConfigPtrOutput
}

type nodePoolAutoScalingConfigPtrType NodePoolAutoScalingConfigArgs

func NodePoolAutoScalingConfigPtr(v *NodePoolAutoScalingConfigArgs) NodePoolAutoScalingConfigPtrInput {
	return (*nodePoolAutoScalingConfigPtrType)(v)
}

func (*nodePoolAutoScalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoScalingConfig)(nil)).Elem()
}

func (i *nodePoolAutoScalingConfigPtrType) ToNodePoolAutoScalingConfigPtrOutput() NodePoolAutoScalingConfigPtrOutput {
	return i.ToNodePoolAutoScalingConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoScalingConfigPtrType) ToNodePoolAutoScalingConfigPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingConfigPtrOutput)
}

type NodePoolAutoScalingConfigOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScalingConfig)(nil)).Elem()
}

func (o NodePoolAutoScalingConfigOutput) ToNodePoolAutoScalingConfigOutput() NodePoolAutoScalingConfigOutput {
	return o
}

func (o NodePoolAutoScalingConfigOutput) ToNodePoolAutoScalingConfigOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigOutput {
	return o
}

func (o NodePoolAutoScalingConfigOutput) ToNodePoolAutoScalingConfigPtrOutput() NodePoolAutoScalingConfigPtrOutput {
	return o.ToNodePoolAutoScalingConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoScalingConfigOutput) ToNodePoolAutoScalingConfigPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolAutoScalingConfig) *NodePoolAutoScalingConfig {
		return &v
	}).(NodePoolAutoScalingConfigPtrOutput)
}

// Backup CVM instance types if specified instance type sold out or mismatch.
func (o NodePoolAutoScalingConfigOutput) BackupInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) []string { return v.BackupInstanceTypes }).(pulumi.StringArrayOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o NodePoolAutoScalingConfigOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// Name of cam role.
func (o NodePoolAutoScalingConfigOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.CamRoleName }).(pulumi.StringPtrOutput)
}

// Configurations of data disk.
func (o NodePoolAutoScalingConfigOutput) DataDisks() NodePoolAutoScalingConfigDataDiskArrayOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) []NodePoolAutoScalingConfigDataDisk { return v.DataDisks }).(NodePoolAutoScalingConfigDataDiskArrayOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o NodePoolAutoScalingConfigOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *bool { return v.EnhancedMonitorService }).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o NodePoolAutoScalingConfigOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *bool { return v.EnhancedSecurityService }).(pulumi.BoolPtrOutput)
}

// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigOutput) HostNameStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.HostNameStyle }).(pulumi.StringPtrOutput)
}

// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
func (o NodePoolAutoScalingConfigOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o NodePoolAutoScalingConfigOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *int { return v.InstanceChargeTypePrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o NodePoolAutoScalingConfigOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.InstanceChargeTypePrepaidRenewFlag }).(pulumi.StringPtrOutput)
}

// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o NodePoolAutoScalingConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
func (o NodePoolAutoScalingConfigOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is `0`.
func (o NodePoolAutoScalingConfigOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *int { return v.InternetMaxBandwidthOut }).(pulumi.IntPtrOutput)
}

// ID list of keys.
func (o NodePoolAutoScalingConfigOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) []string { return v.KeyIds }).(pulumi.StringArrayOutput)
}

// Password to access.
func (o NodePoolAutoScalingConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o NodePoolAutoScalingConfigOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *bool { return v.PublicIpAssigned }).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o NodePoolAutoScalingConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
func (o NodePoolAutoScalingConfigOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
func (o NodePoolAutoScalingConfigOutput) SpotMaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.SpotMaxPrice }).(pulumi.StringPtrOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o NodePoolAutoScalingConfigOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *int { return v.SystemDiskSize }).(pulumi.IntPtrOutput)
}

// Type of a CVM disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.
func (o NodePoolAutoScalingConfigOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfig) *string { return v.SystemDiskType }).(pulumi.StringPtrOutput)
}

type NodePoolAutoScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoScalingConfig)(nil)).Elem()
}

func (o NodePoolAutoScalingConfigPtrOutput) ToNodePoolAutoScalingConfigPtrOutput() NodePoolAutoScalingConfigPtrOutput {
	return o
}

func (o NodePoolAutoScalingConfigPtrOutput) ToNodePoolAutoScalingConfigPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigPtrOutput {
	return o
}

func (o NodePoolAutoScalingConfigPtrOutput) Elem() NodePoolAutoScalingConfigOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) NodePoolAutoScalingConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolAutoScalingConfig
		return ret
	}).(NodePoolAutoScalingConfigOutput)
}

// Backup CVM instance types if specified instance type sold out or mismatch.
func (o NodePoolAutoScalingConfigPtrOutput) BackupInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) []string {
		if v == nil {
			return nil
		}
		return v.BackupInstanceTypes
	}).(pulumi.StringArrayOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o NodePoolAutoScalingConfigPtrOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthPackageId
	}).(pulumi.StringPtrOutput)
}

// Name of cam role.
func (o NodePoolAutoScalingConfigPtrOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.CamRoleName
	}).(pulumi.StringPtrOutput)
}

// Configurations of data disk.
func (o NodePoolAutoScalingConfigPtrOutput) DataDisks() NodePoolAutoScalingConfigDataDiskArrayOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) []NodePoolAutoScalingConfigDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(NodePoolAutoScalingConfigDataDiskArrayOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o NodePoolAutoScalingConfigPtrOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedMonitorService
	}).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o NodePoolAutoScalingConfigPtrOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedSecurityService
	}).(pulumi.BoolPtrOutput)
}

// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigPtrOutput) HostNameStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.HostNameStyle
	}).(pulumi.StringPtrOutput)
}

// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
func (o NodePoolAutoScalingConfigPtrOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceChargeType
	}).(pulumi.StringPtrOutput)
}

// The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o NodePoolAutoScalingConfigPtrOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.InstanceChargeTypePrepaidPeriod
	}).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o NodePoolAutoScalingConfigPtrOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceChargeTypePrepaidRenewFlag
	}).(pulumi.StringPtrOutput)
}

// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
func (o NodePoolAutoScalingConfigPtrOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceName
	}).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o NodePoolAutoScalingConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
func (o NodePoolAutoScalingConfigPtrOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.InternetChargeType
	}).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is `0`.
func (o NodePoolAutoScalingConfigPtrOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.InternetMaxBandwidthOut
	}).(pulumi.IntPtrOutput)
}

// ID list of keys.
func (o NodePoolAutoScalingConfigPtrOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) []string {
		if v == nil {
			return nil
		}
		return v.KeyIds
	}).(pulumi.StringArrayOutput)
}

// Password to access.
func (o NodePoolAutoScalingConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o NodePoolAutoScalingConfigPtrOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PublicIpAssigned
	}).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o NodePoolAutoScalingConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
func (o NodePoolAutoScalingConfigPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.SpotInstanceType
	}).(pulumi.StringPtrOutput)
}

// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
func (o NodePoolAutoScalingConfigPtrOutput) SpotMaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.SpotMaxPrice
	}).(pulumi.StringPtrOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o NodePoolAutoScalingConfigPtrOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.SystemDiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of a CVM disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.
func (o NodePoolAutoScalingConfigPtrOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.SystemDiskType
	}).(pulumi.StringPtrOutput)
}

type NodePoolAutoScalingConfigDataDisk struct {
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType *string `pulumi:"diskType"`
	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
	Encrypt *bool `pulumi:"encrypt"`
	// Data disk snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
	// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `dataSize` > 460GB.
	ThroughputPerformance *int `pulumi:"throughputPerformance"`
}

// NodePoolAutoScalingConfigDataDiskInput is an input type that accepts NodePoolAutoScalingConfigDataDiskArgs and NodePoolAutoScalingConfigDataDiskOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingConfigDataDiskInput` via:
//
//          NodePoolAutoScalingConfigDataDiskArgs{...}
type NodePoolAutoScalingConfigDataDiskInput interface {
	pulumi.Input

	ToNodePoolAutoScalingConfigDataDiskOutput() NodePoolAutoScalingConfigDataDiskOutput
	ToNodePoolAutoScalingConfigDataDiskOutputWithContext(context.Context) NodePoolAutoScalingConfigDataDiskOutput
}

type NodePoolAutoScalingConfigDataDiskArgs struct {
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
	Encrypt pulumi.BoolPtrInput `pulumi:"encrypt"`
	// Data disk snapshot ID.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `dataSize` > 460GB.
	ThroughputPerformance pulumi.IntPtrInput `pulumi:"throughputPerformance"`
}

func (NodePoolAutoScalingConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScalingConfigDataDisk)(nil)).Elem()
}

func (i NodePoolAutoScalingConfigDataDiskArgs) ToNodePoolAutoScalingConfigDataDiskOutput() NodePoolAutoScalingConfigDataDiskOutput {
	return i.ToNodePoolAutoScalingConfigDataDiskOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingConfigDataDiskArgs) ToNodePoolAutoScalingConfigDataDiskOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingConfigDataDiskOutput)
}

// NodePoolAutoScalingConfigDataDiskArrayInput is an input type that accepts NodePoolAutoScalingConfigDataDiskArray and NodePoolAutoScalingConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingConfigDataDiskArrayInput` via:
//
//          NodePoolAutoScalingConfigDataDiskArray{ NodePoolAutoScalingConfigDataDiskArgs{...} }
type NodePoolAutoScalingConfigDataDiskArrayInput interface {
	pulumi.Input

	ToNodePoolAutoScalingConfigDataDiskArrayOutput() NodePoolAutoScalingConfigDataDiskArrayOutput
	ToNodePoolAutoScalingConfigDataDiskArrayOutputWithContext(context.Context) NodePoolAutoScalingConfigDataDiskArrayOutput
}

type NodePoolAutoScalingConfigDataDiskArray []NodePoolAutoScalingConfigDataDiskInput

func (NodePoolAutoScalingConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolAutoScalingConfigDataDisk)(nil)).Elem()
}

func (i NodePoolAutoScalingConfigDataDiskArray) ToNodePoolAutoScalingConfigDataDiskArrayOutput() NodePoolAutoScalingConfigDataDiskArrayOutput {
	return i.ToNodePoolAutoScalingConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingConfigDataDiskArray) ToNodePoolAutoScalingConfigDataDiskArrayOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingConfigDataDiskArrayOutput)
}

type NodePoolAutoScalingConfigDataDiskOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScalingConfigDataDisk)(nil)).Elem()
}

func (o NodePoolAutoScalingConfigDataDiskOutput) ToNodePoolAutoScalingConfigDataDiskOutput() NodePoolAutoScalingConfigDataDiskOutput {
	return o
}

func (o NodePoolAutoScalingConfigDataDiskOutput) ToNodePoolAutoScalingConfigDataDiskOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigDataDiskOutput {
	return o
}

// Indicates whether the disk remove after instance terminated. Default is `false`.
func (o NodePoolAutoScalingConfigDataDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o NodePoolAutoScalingConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
func (o NodePoolAutoScalingConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
func (o NodePoolAutoScalingConfigDataDiskOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

// Data disk snapshot ID.
func (o NodePoolAutoScalingConfigDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `dataSize` > 460GB.
func (o NodePoolAutoScalingConfigDataDiskOutput) ThroughputPerformance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoScalingConfigDataDisk) *int { return v.ThroughputPerformance }).(pulumi.IntPtrOutput)
}

type NodePoolAutoScalingConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolAutoScalingConfigDataDisk)(nil)).Elem()
}

func (o NodePoolAutoScalingConfigDataDiskArrayOutput) ToNodePoolAutoScalingConfigDataDiskArrayOutput() NodePoolAutoScalingConfigDataDiskArrayOutput {
	return o
}

func (o NodePoolAutoScalingConfigDataDiskArrayOutput) ToNodePoolAutoScalingConfigDataDiskArrayOutputWithContext(ctx context.Context) NodePoolAutoScalingConfigDataDiskArrayOutput {
	return o
}

func (o NodePoolAutoScalingConfigDataDiskArrayOutput) Index(i pulumi.IntInput) NodePoolAutoScalingConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolAutoScalingConfigDataDisk {
		return vs[0].([]NodePoolAutoScalingConfigDataDisk)[vs[1].(int)]
	}).(NodePoolAutoScalingConfigDataDiskOutput)
}

type NodePoolNodeConfig struct {
	// Configurations of data disk.
	DataDisks []NodePoolNodeConfigDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs []string `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs *NodePoolNodeConfigGpuArgs `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule *bool `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget *string `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// NodePoolNodeConfigInput is an input type that accepts NodePoolNodeConfigArgs and NodePoolNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigInput` via:
//
//          NodePoolNodeConfigArgs{...}
type NodePoolNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput
	ToNodePoolNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigOutput
}

type NodePoolNodeConfigArgs struct {
	// Configurations of data disk.
	DataDisks NodePoolNodeConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath pulumi.StringPtrInput `pulumi:"dockerGraphPath"`
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs pulumi.StringArrayInput `pulumi:"extraArgs"`
	// GPU driver parameters.
	GpuArgs NodePoolNodeConfigGpuArgsPtrInput `pulumi:"gpuArgs"`
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule pulumi.BoolPtrInput `pulumi:"isSchedule"`
	// Mount target. Default is not mounting.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (NodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return i.ToNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput)
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput).ToNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigArgs, NodePoolNodeConfigPtr and NodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigPtrInput` via:
//
//          NodePoolNodeConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput
	ToNodePoolNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigPtrOutput
}

type nodePoolNodeConfigPtrType NodePoolNodeConfigArgs

func NodePoolNodeConfigPtr(v *NodePoolNodeConfigArgs) NodePoolNodeConfigPtrInput {
	return (*nodePoolNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigPtrOutput)
}

type NodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfig) *NodePoolNodeConfig {
		return &v
	}).(NodePoolNodeConfigPtrOutput)
}

// Configurations of data disk.
func (o NodePoolNodeConfigOutput) DataDisks() NodePoolNodeConfigDataDiskArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigDataDisk { return v.DataDisks }).(NodePoolNodeConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o NodePoolNodeConfigOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o NodePoolNodeConfigOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.DockerGraphPath }).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o NodePoolNodeConfigOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.ExtraArgs }).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o NodePoolNodeConfigOutput) GpuArgs() NodePoolNodeConfigGpuArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigGpuArgs { return v.GpuArgs }).(NodePoolNodeConfigGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o NodePoolNodeConfigOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.IsSchedule }).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o NodePoolNodeConfigOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o NodePoolNodeConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) Elem() NodePoolNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) NodePoolNodeConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfig
		return ret
	}).(NodePoolNodeConfigOutput)
}

// Configurations of data disk.
func (o NodePoolNodeConfigPtrOutput) DataDisks() NodePoolNodeConfigDataDiskArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(NodePoolNodeConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
func (o NodePoolNodeConfigPtrOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredPodNum
	}).(pulumi.IntPtrOutput)
}

// Docker graph path. Default is `/var/lib/docker`.
func (o NodePoolNodeConfigPtrOutput) DockerGraphPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerGraphPath
	}).(pulumi.StringPtrOutput)
}

// Custom parameter information related to the node. This is a white-list parameter.
func (o NodePoolNodeConfigPtrOutput) ExtraArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringArrayOutput)
}

// GPU driver parameters.
func (o NodePoolNodeConfigPtrOutput) GpuArgs() NodePoolNodeConfigGpuArgsPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigGpuArgs {
		if v == nil {
			return nil
		}
		return v.GpuArgs
	}).(NodePoolNodeConfigGpuArgsPtrOutput)
}

// Indicate to schedule the adding node or not. Default is true.
func (o NodePoolNodeConfigPtrOutput) IsSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsSchedule
	}).(pulumi.BoolPtrOutput)
}

// Mount target. Default is not mounting.
func (o NodePoolNodeConfigPtrOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MountTarget
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded User Data text, the length limit is 16KB.
func (o NodePoolNodeConfigPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType *string `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
}

// NodePoolNodeConfigDataDiskInput is an input type that accepts NodePoolNodeConfigDataDiskArgs and NodePoolNodeConfigDataDiskOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigDataDiskInput` via:
//
//          NodePoolNodeConfigDataDiskArgs{...}
type NodePoolNodeConfigDataDiskInput interface {
	pulumi.Input

	ToNodePoolNodeConfigDataDiskOutput() NodePoolNodeConfigDataDiskOutput
	ToNodePoolNodeConfigDataDiskOutputWithContext(context.Context) NodePoolNodeConfigDataDiskOutput
}

type NodePoolNodeConfigDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
}

func (NodePoolNodeConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigDataDisk)(nil)).Elem()
}

func (i NodePoolNodeConfigDataDiskArgs) ToNodePoolNodeConfigDataDiskOutput() NodePoolNodeConfigDataDiskOutput {
	return i.ToNodePoolNodeConfigDataDiskOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigDataDiskArgs) ToNodePoolNodeConfigDataDiskOutputWithContext(ctx context.Context) NodePoolNodeConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigDataDiskOutput)
}

// NodePoolNodeConfigDataDiskArrayInput is an input type that accepts NodePoolNodeConfigDataDiskArray and NodePoolNodeConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigDataDiskArrayInput` via:
//
//          NodePoolNodeConfigDataDiskArray{ NodePoolNodeConfigDataDiskArgs{...} }
type NodePoolNodeConfigDataDiskArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigDataDiskArrayOutput() NodePoolNodeConfigDataDiskArrayOutput
	ToNodePoolNodeConfigDataDiskArrayOutputWithContext(context.Context) NodePoolNodeConfigDataDiskArrayOutput
}

type NodePoolNodeConfigDataDiskArray []NodePoolNodeConfigDataDiskInput

func (NodePoolNodeConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigDataDisk)(nil)).Elem()
}

func (i NodePoolNodeConfigDataDiskArray) ToNodePoolNodeConfigDataDiskArrayOutput() NodePoolNodeConfigDataDiskArrayOutput {
	return i.ToNodePoolNodeConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigDataDiskArray) ToNodePoolNodeConfigDataDiskArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigDataDiskArrayOutput)
}

type NodePoolNodeConfigDataDiskOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigDataDisk)(nil)).Elem()
}

func (o NodePoolNodeConfigDataDiskOutput) ToNodePoolNodeConfigDataDiskOutput() NodePoolNodeConfigDataDiskOutput {
	return o
}

func (o NodePoolNodeConfigDataDiskOutput) ToNodePoolNodeConfigDataDiskOutputWithContext(ctx context.Context) NodePoolNodeConfigDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o NodePoolNodeConfigDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
func (o NodePoolNodeConfigDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o NodePoolNodeConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
func (o NodePoolNodeConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o NodePoolNodeConfigDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o NodePoolNodeConfigDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigDataDisk)(nil)).Elem()
}

func (o NodePoolNodeConfigDataDiskArrayOutput) ToNodePoolNodeConfigDataDiskArrayOutput() NodePoolNodeConfigDataDiskArrayOutput {
	return o
}

func (o NodePoolNodeConfigDataDiskArrayOutput) ToNodePoolNodeConfigDataDiskArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigDataDiskArrayOutput {
	return o
}

func (o NodePoolNodeConfigDataDiskArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigDataDisk {
		return vs[0].([]NodePoolNodeConfigDataDisk)[vs[1].(int)]
	}).(NodePoolNodeConfigDataDiskOutput)
}

type NodePoolNodeConfigGpuArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda map[string]interface{} `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn map[string]interface{} `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver map[string]interface{} `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver map[string]interface{} `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable *bool `pulumi:"migEnable"`
}

// NodePoolNodeConfigGpuArgsInput is an input type that accepts NodePoolNodeConfigGpuArgsArgs and NodePoolNodeConfigGpuArgsOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGpuArgsInput` via:
//
//          NodePoolNodeConfigGpuArgsArgs{...}
type NodePoolNodeConfigGpuArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGpuArgsOutput() NodePoolNodeConfigGpuArgsOutput
	ToNodePoolNodeConfigGpuArgsOutputWithContext(context.Context) NodePoolNodeConfigGpuArgsOutput
}

type NodePoolNodeConfigGpuArgsArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda pulumi.MapInput `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn pulumi.MapInput `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver pulumi.MapInput `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver pulumi.MapInput `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable pulumi.BoolPtrInput `pulumi:"migEnable"`
}

func (NodePoolNodeConfigGpuArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGpuArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigGpuArgsArgs) ToNodePoolNodeConfigGpuArgsOutput() NodePoolNodeConfigGpuArgsOutput {
	return i.ToNodePoolNodeConfigGpuArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGpuArgsArgs) ToNodePoolNodeConfigGpuArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGpuArgsOutput)
}

func (i NodePoolNodeConfigGpuArgsArgs) ToNodePoolNodeConfigGpuArgsPtrOutput() NodePoolNodeConfigGpuArgsPtrOutput {
	return i.ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGpuArgsArgs) ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGpuArgsOutput).ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigGpuArgsPtrInput is an input type that accepts NodePoolNodeConfigGpuArgsArgs, NodePoolNodeConfigGpuArgsPtr and NodePoolNodeConfigGpuArgsPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGpuArgsPtrInput` via:
//
//          NodePoolNodeConfigGpuArgsArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigGpuArgsPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGpuArgsPtrOutput() NodePoolNodeConfigGpuArgsPtrOutput
	ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(context.Context) NodePoolNodeConfigGpuArgsPtrOutput
}

type nodePoolNodeConfigGpuArgsPtrType NodePoolNodeConfigGpuArgsArgs

func NodePoolNodeConfigGpuArgsPtr(v *NodePoolNodeConfigGpuArgsArgs) NodePoolNodeConfigGpuArgsPtrInput {
	return (*nodePoolNodeConfigGpuArgsPtrType)(v)
}

func (*nodePoolNodeConfigGpuArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGpuArgs)(nil)).Elem()
}

func (i *nodePoolNodeConfigGpuArgsPtrType) ToNodePoolNodeConfigGpuArgsPtrOutput() NodePoolNodeConfigGpuArgsPtrOutput {
	return i.ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigGpuArgsPtrType) ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGpuArgsPtrOutput)
}

type NodePoolNodeConfigGpuArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGpuArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGpuArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigGpuArgsOutput) ToNodePoolNodeConfigGpuArgsOutput() NodePoolNodeConfigGpuArgsOutput {
	return o
}

func (o NodePoolNodeConfigGpuArgsOutput) ToNodePoolNodeConfigGpuArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsOutput {
	return o
}

func (o NodePoolNodeConfigGpuArgsOutput) ToNodePoolNodeConfigGpuArgsPtrOutput() NodePoolNodeConfigGpuArgsPtrOutput {
	return o.ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigGpuArgsOutput) ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigGpuArgs) *NodePoolNodeConfigGpuArgs {
		return &v
	}).(NodePoolNodeConfigGpuArgsPtrOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o NodePoolNodeConfigGpuArgsOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGpuArgs) map[string]interface{} { return v.Cuda }).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o NodePoolNodeConfigGpuArgsOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGpuArgs) map[string]interface{} { return v.Cudnn }).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o NodePoolNodeConfigGpuArgsOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGpuArgs) map[string]interface{} { return v.CustomDriver }).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o NodePoolNodeConfigGpuArgsOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGpuArgs) map[string]interface{} { return v.Driver }).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o NodePoolNodeConfigGpuArgsOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGpuArgs) *bool { return v.MigEnable }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigGpuArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGpuArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGpuArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigGpuArgsPtrOutput) ToNodePoolNodeConfigGpuArgsPtrOutput() NodePoolNodeConfigGpuArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigGpuArgsPtrOutput) ToNodePoolNodeConfigGpuArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGpuArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigGpuArgsPtrOutput) Elem() NodePoolNodeConfigGpuArgsOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) NodePoolNodeConfigGpuArgs {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigGpuArgs
		return ret
	}).(NodePoolNodeConfigGpuArgsOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o NodePoolNodeConfigGpuArgsPtrOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cuda
	}).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o NodePoolNodeConfigGpuArgsPtrOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cudnn
	}).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o NodePoolNodeConfigGpuArgsPtrOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDriver
	}).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o NodePoolNodeConfigGpuArgsPtrOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o NodePoolNodeConfigGpuArgsPtrOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGpuArgs) *bool {
		if v == nil {
			return nil
		}
		return v.MigEnable
	}).(pulumi.BoolPtrOutput)
}

type NodePoolTaint struct {
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect string `pulumi:"effect"`
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key string `pulumi:"key"`
	// Value of the taint.
	Value string `pulumi:"value"`
}

// NodePoolTaintInput is an input type that accepts NodePoolTaintArgs and NodePoolTaintOutput values.
// You can construct a concrete instance of `NodePoolTaintInput` via:
//
//          NodePoolTaintArgs{...}
type NodePoolTaintInput interface {
	pulumi.Input

	ToNodePoolTaintOutput() NodePoolTaintOutput
	ToNodePoolTaintOutputWithContext(context.Context) NodePoolTaintOutput
}

type NodePoolTaintArgs struct {
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolTaint)(nil)).Elem()
}

func (i NodePoolTaintArgs) ToNodePoolTaintOutput() NodePoolTaintOutput {
	return i.ToNodePoolTaintOutputWithContext(context.Background())
}

func (i NodePoolTaintArgs) ToNodePoolTaintOutputWithContext(ctx context.Context) NodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolTaintOutput)
}

// NodePoolTaintArrayInput is an input type that accepts NodePoolTaintArray and NodePoolTaintArrayOutput values.
// You can construct a concrete instance of `NodePoolTaintArrayInput` via:
//
//          NodePoolTaintArray{ NodePoolTaintArgs{...} }
type NodePoolTaintArrayInput interface {
	pulumi.Input

	ToNodePoolTaintArrayOutput() NodePoolTaintArrayOutput
	ToNodePoolTaintArrayOutputWithContext(context.Context) NodePoolTaintArrayOutput
}

type NodePoolTaintArray []NodePoolTaintInput

func (NodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolTaint)(nil)).Elem()
}

func (i NodePoolTaintArray) ToNodePoolTaintArrayOutput() NodePoolTaintArrayOutput {
	return i.ToNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolTaintArray) ToNodePoolTaintArrayOutputWithContext(ctx context.Context) NodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolTaintArrayOutput)
}

type NodePoolTaintOutput struct{ *pulumi.OutputState }

func (NodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolTaint)(nil)).Elem()
}

func (o NodePoolTaintOutput) ToNodePoolTaintOutput() NodePoolTaintOutput {
	return o
}

func (o NodePoolTaintOutput) ToNodePoolTaintOutputWithContext(ctx context.Context) NodePoolTaintOutput {
	return o
}

// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
func (o NodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
func (o NodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the taint.
func (o NodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolTaint)(nil)).Elem()
}

func (o NodePoolTaintArrayOutput) ToNodePoolTaintArrayOutput() NodePoolTaintArrayOutput {
	return o
}

func (o NodePoolTaintArrayOutput) ToNodePoolTaintArrayOutputWithContext(ctx context.Context) NodePoolTaintArrayOutput {
	return o
}

func (o NodePoolTaintArrayOutput) Index(i pulumi.IntInput) NodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolTaint {
		return vs[0].([]NodePoolTaint)[vs[1].(int)]
	}).(NodePoolTaintOutput)
}

type ScaleWorkerDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
}

// ScaleWorkerDataDiskInput is an input type that accepts ScaleWorkerDataDiskArgs and ScaleWorkerDataDiskOutput values.
// You can construct a concrete instance of `ScaleWorkerDataDiskInput` via:
//
//          ScaleWorkerDataDiskArgs{...}
type ScaleWorkerDataDiskInput interface {
	pulumi.Input

	ToScaleWorkerDataDiskOutput() ScaleWorkerDataDiskOutput
	ToScaleWorkerDataDiskOutputWithContext(context.Context) ScaleWorkerDataDiskOutput
}

type ScaleWorkerDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
}

func (ScaleWorkerDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerDataDisk)(nil)).Elem()
}

func (i ScaleWorkerDataDiskArgs) ToScaleWorkerDataDiskOutput() ScaleWorkerDataDiskOutput {
	return i.ToScaleWorkerDataDiskOutputWithContext(context.Background())
}

func (i ScaleWorkerDataDiskArgs) ToScaleWorkerDataDiskOutputWithContext(ctx context.Context) ScaleWorkerDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerDataDiskOutput)
}

// ScaleWorkerDataDiskArrayInput is an input type that accepts ScaleWorkerDataDiskArray and ScaleWorkerDataDiskArrayOutput values.
// You can construct a concrete instance of `ScaleWorkerDataDiskArrayInput` via:
//
//          ScaleWorkerDataDiskArray{ ScaleWorkerDataDiskArgs{...} }
type ScaleWorkerDataDiskArrayInput interface {
	pulumi.Input

	ToScaleWorkerDataDiskArrayOutput() ScaleWorkerDataDiskArrayOutput
	ToScaleWorkerDataDiskArrayOutputWithContext(context.Context) ScaleWorkerDataDiskArrayOutput
}

type ScaleWorkerDataDiskArray []ScaleWorkerDataDiskInput

func (ScaleWorkerDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerDataDisk)(nil)).Elem()
}

func (i ScaleWorkerDataDiskArray) ToScaleWorkerDataDiskArrayOutput() ScaleWorkerDataDiskArrayOutput {
	return i.ToScaleWorkerDataDiskArrayOutputWithContext(context.Background())
}

func (i ScaleWorkerDataDiskArray) ToScaleWorkerDataDiskArrayOutputWithContext(ctx context.Context) ScaleWorkerDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerDataDiskArrayOutput)
}

type ScaleWorkerDataDiskOutput struct{ *pulumi.OutputState }

func (ScaleWorkerDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerDataDisk)(nil)).Elem()
}

func (o ScaleWorkerDataDiskOutput) ToScaleWorkerDataDiskOutput() ScaleWorkerDataDiskOutput {
	return o
}

func (o ScaleWorkerDataDiskOutput) ToScaleWorkerDataDiskOutputWithContext(ctx context.Context) ScaleWorkerDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ScaleWorkerDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ScaleWorkerDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
func (o ScaleWorkerDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ScaleWorkerDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ScaleWorkerDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

type ScaleWorkerDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ScaleWorkerDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerDataDisk)(nil)).Elem()
}

func (o ScaleWorkerDataDiskArrayOutput) ToScaleWorkerDataDiskArrayOutput() ScaleWorkerDataDiskArrayOutput {
	return o
}

func (o ScaleWorkerDataDiskArrayOutput) ToScaleWorkerDataDiskArrayOutputWithContext(ctx context.Context) ScaleWorkerDataDiskArrayOutput {
	return o
}

func (o ScaleWorkerDataDiskArrayOutput) Index(i pulumi.IntInput) ScaleWorkerDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleWorkerDataDisk {
		return vs[0].([]ScaleWorkerDataDisk)[vs[1].(int)]
	}).(ScaleWorkerDataDiskOutput)
}

type ScaleWorkerGpuArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda map[string]interface{} `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn map[string]interface{} `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver map[string]interface{} `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver map[string]interface{} `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable *bool `pulumi:"migEnable"`
}

// ScaleWorkerGpuArgsInput is an input type that accepts ScaleWorkerGpuArgsArgs and ScaleWorkerGpuArgsOutput values.
// You can construct a concrete instance of `ScaleWorkerGpuArgsInput` via:
//
//          ScaleWorkerGpuArgsArgs{...}
type ScaleWorkerGpuArgsInput interface {
	pulumi.Input

	ToScaleWorkerGpuArgsOutput() ScaleWorkerGpuArgsOutput
	ToScaleWorkerGpuArgsOutputWithContext(context.Context) ScaleWorkerGpuArgsOutput
}

type ScaleWorkerGpuArgsArgs struct {
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Cuda pulumi.MapInput `pulumi:"cuda"`
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
	Cudnn pulumi.MapInput `pulumi:"cudnn"`
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	CustomDriver pulumi.MapInput `pulumi:"customDriver"`
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	Driver pulumi.MapInput `pulumi:"driver"`
	// Whether to enable MIG.
	MigEnable pulumi.BoolPtrInput `pulumi:"migEnable"`
}

func (ScaleWorkerGpuArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerGpuArgs)(nil)).Elem()
}

func (i ScaleWorkerGpuArgsArgs) ToScaleWorkerGpuArgsOutput() ScaleWorkerGpuArgsOutput {
	return i.ToScaleWorkerGpuArgsOutputWithContext(context.Background())
}

func (i ScaleWorkerGpuArgsArgs) ToScaleWorkerGpuArgsOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerGpuArgsOutput)
}

func (i ScaleWorkerGpuArgsArgs) ToScaleWorkerGpuArgsPtrOutput() ScaleWorkerGpuArgsPtrOutput {
	return i.ToScaleWorkerGpuArgsPtrOutputWithContext(context.Background())
}

func (i ScaleWorkerGpuArgsArgs) ToScaleWorkerGpuArgsPtrOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerGpuArgsOutput).ToScaleWorkerGpuArgsPtrOutputWithContext(ctx)
}

// ScaleWorkerGpuArgsPtrInput is an input type that accepts ScaleWorkerGpuArgsArgs, ScaleWorkerGpuArgsPtr and ScaleWorkerGpuArgsPtrOutput values.
// You can construct a concrete instance of `ScaleWorkerGpuArgsPtrInput` via:
//
//          ScaleWorkerGpuArgsArgs{...}
//
//  or:
//
//          nil
type ScaleWorkerGpuArgsPtrInput interface {
	pulumi.Input

	ToScaleWorkerGpuArgsPtrOutput() ScaleWorkerGpuArgsPtrOutput
	ToScaleWorkerGpuArgsPtrOutputWithContext(context.Context) ScaleWorkerGpuArgsPtrOutput
}

type scaleWorkerGpuArgsPtrType ScaleWorkerGpuArgsArgs

func ScaleWorkerGpuArgsPtr(v *ScaleWorkerGpuArgsArgs) ScaleWorkerGpuArgsPtrInput {
	return (*scaleWorkerGpuArgsPtrType)(v)
}

func (*scaleWorkerGpuArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleWorkerGpuArgs)(nil)).Elem()
}

func (i *scaleWorkerGpuArgsPtrType) ToScaleWorkerGpuArgsPtrOutput() ScaleWorkerGpuArgsPtrOutput {
	return i.ToScaleWorkerGpuArgsPtrOutputWithContext(context.Background())
}

func (i *scaleWorkerGpuArgsPtrType) ToScaleWorkerGpuArgsPtrOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerGpuArgsPtrOutput)
}

type ScaleWorkerGpuArgsOutput struct{ *pulumi.OutputState }

func (ScaleWorkerGpuArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerGpuArgs)(nil)).Elem()
}

func (o ScaleWorkerGpuArgsOutput) ToScaleWorkerGpuArgsOutput() ScaleWorkerGpuArgsOutput {
	return o
}

func (o ScaleWorkerGpuArgsOutput) ToScaleWorkerGpuArgsOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsOutput {
	return o
}

func (o ScaleWorkerGpuArgsOutput) ToScaleWorkerGpuArgsPtrOutput() ScaleWorkerGpuArgsPtrOutput {
	return o.ToScaleWorkerGpuArgsPtrOutputWithContext(context.Background())
}

func (o ScaleWorkerGpuArgsOutput) ToScaleWorkerGpuArgsPtrOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleWorkerGpuArgs) *ScaleWorkerGpuArgs {
		return &v
	}).(ScaleWorkerGpuArgsPtrOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ScaleWorkerGpuArgsOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v ScaleWorkerGpuArgs) map[string]interface{} { return v.Cuda }).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ScaleWorkerGpuArgsOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v ScaleWorkerGpuArgs) map[string]interface{} { return v.Cudnn }).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ScaleWorkerGpuArgsOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v ScaleWorkerGpuArgs) map[string]interface{} { return v.CustomDriver }).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ScaleWorkerGpuArgsOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v ScaleWorkerGpuArgs) map[string]interface{} { return v.Driver }).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ScaleWorkerGpuArgsOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerGpuArgs) *bool { return v.MigEnable }).(pulumi.BoolPtrOutput)
}

type ScaleWorkerGpuArgsPtrOutput struct{ *pulumi.OutputState }

func (ScaleWorkerGpuArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleWorkerGpuArgs)(nil)).Elem()
}

func (o ScaleWorkerGpuArgsPtrOutput) ToScaleWorkerGpuArgsPtrOutput() ScaleWorkerGpuArgsPtrOutput {
	return o
}

func (o ScaleWorkerGpuArgsPtrOutput) ToScaleWorkerGpuArgsPtrOutputWithContext(ctx context.Context) ScaleWorkerGpuArgsPtrOutput {
	return o
}

func (o ScaleWorkerGpuArgsPtrOutput) Elem() ScaleWorkerGpuArgsOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) ScaleWorkerGpuArgs {
		if v != nil {
			return *v
		}
		var ret ScaleWorkerGpuArgs
		return ret
	}).(ScaleWorkerGpuArgsOutput)
}

// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ScaleWorkerGpuArgsPtrOutput) Cuda() pulumi.MapOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cuda
	}).(pulumi.MapOutput)
}

// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
func (o ScaleWorkerGpuArgsPtrOutput) Cudnn() pulumi.MapOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cudnn
	}).(pulumi.MapOutput)
}

// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
func (o ScaleWorkerGpuArgsPtrOutput) CustomDriver() pulumi.MapOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDriver
	}).(pulumi.MapOutput)
}

// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
func (o ScaleWorkerGpuArgsPtrOutput) Driver() pulumi.MapOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.MapOutput)
}

// Whether to enable MIG.
func (o ScaleWorkerGpuArgsPtrOutput) MigEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerGpuArgs) *bool {
		if v == nil {
			return nil
		}
		return v.MigEnable
	}).(pulumi.BoolPtrOutput)
}

type ScaleWorkerWorkerConfig struct {
	// Indicates which availability zone will be used.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName *string `pulumi:"camRoleName"`
	// Number of cvm.
	Count *int `pulumi:"count"`
	// Configurations of data disk.
	DataDisks []ScaleWorkerWorkerConfigDataDisk `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum *int `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds *string `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname *string `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId *string `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *int `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName *string `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType string `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds *string `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password *string `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned *bool `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId string `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData *string `pulumi:"userData"`
}

// ScaleWorkerWorkerConfigInput is an input type that accepts ScaleWorkerWorkerConfigArgs and ScaleWorkerWorkerConfigOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerConfigInput` via:
//
//          ScaleWorkerWorkerConfigArgs{...}
type ScaleWorkerWorkerConfigInput interface {
	pulumi.Input

	ToScaleWorkerWorkerConfigOutput() ScaleWorkerWorkerConfigOutput
	ToScaleWorkerWorkerConfigOutputWithContext(context.Context) ScaleWorkerWorkerConfigOutput
}

type ScaleWorkerWorkerConfigArgs struct {
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
	BandwidthPackageId pulumi.StringPtrInput `pulumi:"bandwidthPackageId"`
	// CAM role name authorized to access.
	CamRoleName pulumi.StringPtrInput `pulumi:"camRoleName"`
	// Number of cvm.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Configurations of data disk.
	DataDisks ScaleWorkerWorkerConfigDataDiskArrayInput `pulumi:"dataDisks"`
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
	DesiredPodNum pulumi.IntPtrInput `pulumi:"desiredPodNum"`
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds pulumi.StringPtrInput `pulumi:"disasterRecoverGroupIds"`
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService pulumi.BoolPtrInput `pulumi:"enhancedMonitorService"`
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService pulumi.BoolPtrInput `pulumi:"enhancedSecurityService"`
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Id of cvm hpc cluster.
	HpcClusterId pulumi.StringPtrInput `pulumi:"hpcClusterId"`
	// The valid image id, format of img-xxx.
	ImgId pulumi.StringPtrInput `pulumi:"imgId"`
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType pulumi.StringPtrInput `pulumi:"instanceChargeType"`
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod pulumi.IntPtrInput `pulumi:"instanceChargeTypePrepaidPeriod"`
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag pulumi.StringPtrInput `pulumi:"instanceChargeTypePrepaidRenewFlag"`
	// Name of the CVMs.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Specified types of CVM instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType pulumi.StringPtrInput `pulumi:"internetChargeType"`
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut pulumi.IntPtrInput `pulumi:"internetMaxBandwidthOut"`
	// ID list of keys, should be set if `password` not set.
	KeyIds pulumi.StringPtrInput `pulumi:"keyIds"`
	// Password to access, should be set if `keyIds` not set.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specify whether to assign an Internet IP address.
	PublicIpAssigned pulumi.BoolPtrInput `pulumi:"publicIpAssigned"`
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Private network ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize pulumi.IntPtrInput `pulumi:"systemDiskSize"`
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType pulumi.StringPtrInput `pulumi:"systemDiskType"`
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ScaleWorkerWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerConfig)(nil)).Elem()
}

func (i ScaleWorkerWorkerConfigArgs) ToScaleWorkerWorkerConfigOutput() ScaleWorkerWorkerConfigOutput {
	return i.ToScaleWorkerWorkerConfigOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerConfigArgs) ToScaleWorkerWorkerConfigOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerConfigOutput)
}

func (i ScaleWorkerWorkerConfigArgs) ToScaleWorkerWorkerConfigPtrOutput() ScaleWorkerWorkerConfigPtrOutput {
	return i.ToScaleWorkerWorkerConfigPtrOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerConfigArgs) ToScaleWorkerWorkerConfigPtrOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerConfigOutput).ToScaleWorkerWorkerConfigPtrOutputWithContext(ctx)
}

// ScaleWorkerWorkerConfigPtrInput is an input type that accepts ScaleWorkerWorkerConfigArgs, ScaleWorkerWorkerConfigPtr and ScaleWorkerWorkerConfigPtrOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerConfigPtrInput` via:
//
//          ScaleWorkerWorkerConfigArgs{...}
//
//  or:
//
//          nil
type ScaleWorkerWorkerConfigPtrInput interface {
	pulumi.Input

	ToScaleWorkerWorkerConfigPtrOutput() ScaleWorkerWorkerConfigPtrOutput
	ToScaleWorkerWorkerConfigPtrOutputWithContext(context.Context) ScaleWorkerWorkerConfigPtrOutput
}

type scaleWorkerWorkerConfigPtrType ScaleWorkerWorkerConfigArgs

func ScaleWorkerWorkerConfigPtr(v *ScaleWorkerWorkerConfigArgs) ScaleWorkerWorkerConfigPtrInput {
	return (*scaleWorkerWorkerConfigPtrType)(v)
}

func (*scaleWorkerWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleWorkerWorkerConfig)(nil)).Elem()
}

func (i *scaleWorkerWorkerConfigPtrType) ToScaleWorkerWorkerConfigPtrOutput() ScaleWorkerWorkerConfigPtrOutput {
	return i.ToScaleWorkerWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *scaleWorkerWorkerConfigPtrType) ToScaleWorkerWorkerConfigPtrOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerConfigPtrOutput)
}

type ScaleWorkerWorkerConfigOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerConfig)(nil)).Elem()
}

func (o ScaleWorkerWorkerConfigOutput) ToScaleWorkerWorkerConfigOutput() ScaleWorkerWorkerConfigOutput {
	return o
}

func (o ScaleWorkerWorkerConfigOutput) ToScaleWorkerWorkerConfigOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigOutput {
	return o
}

func (o ScaleWorkerWorkerConfigOutput) ToScaleWorkerWorkerConfigPtrOutput() ScaleWorkerWorkerConfigPtrOutput {
	return o.ToScaleWorkerWorkerConfigPtrOutputWithContext(context.Background())
}

func (o ScaleWorkerWorkerConfigOutput) ToScaleWorkerWorkerConfigPtrOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleWorkerWorkerConfig) *ScaleWorkerWorkerConfig {
		return &v
	}).(ScaleWorkerWorkerConfigPtrOutput)
}

// Indicates which availability zone will be used.
func (o ScaleWorkerWorkerConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o ScaleWorkerWorkerConfigOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// CAM role name authorized to access.
func (o ScaleWorkerWorkerConfigOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.CamRoleName }).(pulumi.StringPtrOutput)
}

// Number of cvm.
func (o ScaleWorkerWorkerConfigOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Configurations of data disk.
func (o ScaleWorkerWorkerConfigOutput) DataDisks() ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) []ScaleWorkerWorkerConfigDataDisk { return v.DataDisks }).(ScaleWorkerWorkerConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
func (o ScaleWorkerWorkerConfigOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *int { return v.DesiredPodNum }).(pulumi.IntPtrOutput)
}

// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
func (o ScaleWorkerWorkerConfigOutput) DisasterRecoverGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.DisasterRecoverGroupIds }).(pulumi.StringPtrOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o ScaleWorkerWorkerConfigOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *bool { return v.EnhancedMonitorService }).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o ScaleWorkerWorkerConfigOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *bool { return v.EnhancedSecurityService }).(pulumi.BoolPtrOutput)
}

// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
func (o ScaleWorkerWorkerConfigOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Id of cvm hpc cluster.
func (o ScaleWorkerWorkerConfigOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.HpcClusterId }).(pulumi.StringPtrOutput)
}

// The valid image id, format of img-xxx.
func (o ScaleWorkerWorkerConfigOutput) ImgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.ImgId }).(pulumi.StringPtrOutput)
}

// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
func (o ScaleWorkerWorkerConfigOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o ScaleWorkerWorkerConfigOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *int { return v.InstanceChargeTypePrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o ScaleWorkerWorkerConfigOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.InstanceChargeTypePrepaidRenewFlag }).(pulumi.StringPtrOutput)
}

// Name of the CVMs.
func (o ScaleWorkerWorkerConfigOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o ScaleWorkerWorkerConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
func (o ScaleWorkerWorkerConfigOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is 0.
func (o ScaleWorkerWorkerConfigOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *int { return v.InternetMaxBandwidthOut }).(pulumi.IntPtrOutput)
}

// ID list of keys, should be set if `password` not set.
func (o ScaleWorkerWorkerConfigOutput) KeyIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.KeyIds }).(pulumi.StringPtrOutput)
}

// Password to access, should be set if `keyIds` not set.
func (o ScaleWorkerWorkerConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o ScaleWorkerWorkerConfigOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *bool { return v.PublicIpAssigned }).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o ScaleWorkerWorkerConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Private network ID.
func (o ScaleWorkerWorkerConfigOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o ScaleWorkerWorkerConfigOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *int { return v.SystemDiskSize }).(pulumi.IntPtrOutput)
}

// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
func (o ScaleWorkerWorkerConfigOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.SystemDiskType }).(pulumi.StringPtrOutput)
}

// ase64-encoded User Data text, the length limit is 16KB.
func (o ScaleWorkerWorkerConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ScaleWorkerWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleWorkerWorkerConfig)(nil)).Elem()
}

func (o ScaleWorkerWorkerConfigPtrOutput) ToScaleWorkerWorkerConfigPtrOutput() ScaleWorkerWorkerConfigPtrOutput {
	return o
}

func (o ScaleWorkerWorkerConfigPtrOutput) ToScaleWorkerWorkerConfigPtrOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigPtrOutput {
	return o
}

func (o ScaleWorkerWorkerConfigPtrOutput) Elem() ScaleWorkerWorkerConfigOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) ScaleWorkerWorkerConfig {
		if v != nil {
			return *v
		}
		var ret ScaleWorkerWorkerConfig
		return ret
	}).(ScaleWorkerWorkerConfigOutput)
}

// Indicates which availability zone will be used.
func (o ScaleWorkerWorkerConfigPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
func (o ScaleWorkerWorkerConfigPtrOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthPackageId
	}).(pulumi.StringPtrOutput)
}

// CAM role name authorized to access.
func (o ScaleWorkerWorkerConfigPtrOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.CamRoleName
	}).(pulumi.StringPtrOutput)
}

// Number of cvm.
func (o ScaleWorkerWorkerConfigPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Configurations of data disk.
func (o ScaleWorkerWorkerConfigPtrOutput) DataDisks() ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) []ScaleWorkerWorkerConfigDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(ScaleWorkerWorkerConfigDataDiskArrayOutput)
}

// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
func (o ScaleWorkerWorkerConfigPtrOutput) DesiredPodNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredPodNum
	}).(pulumi.IntPtrOutput)
}

// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
func (o ScaleWorkerWorkerConfigPtrOutput) DisasterRecoverGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisasterRecoverGroupIds
	}).(pulumi.StringPtrOutput)
}

// To specify whether to enable cloud monitor service. Default is TRUE.
func (o ScaleWorkerWorkerConfigPtrOutput) EnhancedMonitorService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedMonitorService
	}).(pulumi.BoolPtrOutput)
}

// To specify whether to enable cloud security service. Default is TRUE.
func (o ScaleWorkerWorkerConfigPtrOutput) EnhancedSecurityService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedSecurityService
	}).(pulumi.BoolPtrOutput)
}

// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
func (o ScaleWorkerWorkerConfigPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Id of cvm hpc cluster.
func (o ScaleWorkerWorkerConfigPtrOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.HpcClusterId
	}).(pulumi.StringPtrOutput)
}

// The valid image id, format of img-xxx.
func (o ScaleWorkerWorkerConfigPtrOutput) ImgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImgId
	}).(pulumi.StringPtrOutput)
}

// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
func (o ScaleWorkerWorkerConfigPtrOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceChargeType
	}).(pulumi.StringPtrOutput)
}

// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o ScaleWorkerWorkerConfigPtrOutput) InstanceChargeTypePrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.InstanceChargeTypePrepaidPeriod
	}).(pulumi.IntPtrOutput)
}

// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
func (o ScaleWorkerWorkerConfigPtrOutput) InstanceChargeTypePrepaidRenewFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceChargeTypePrepaidRenewFlag
	}).(pulumi.StringPtrOutput)
}

// Name of the CVMs.
func (o ScaleWorkerWorkerConfigPtrOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceName
	}).(pulumi.StringPtrOutput)
}

// Specified types of CVM instance.
func (o ScaleWorkerWorkerConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
func (o ScaleWorkerWorkerConfigPtrOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.InternetChargeType
	}).(pulumi.StringPtrOutput)
}

// Max bandwidth of Internet access in Mbps. Default is 0.
func (o ScaleWorkerWorkerConfigPtrOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.InternetMaxBandwidthOut
	}).(pulumi.IntPtrOutput)
}

// ID list of keys, should be set if `password` not set.
func (o ScaleWorkerWorkerConfigPtrOutput) KeyIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyIds
	}).(pulumi.StringPtrOutput)
}

// Password to access, should be set if `keyIds` not set.
func (o ScaleWorkerWorkerConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Specify whether to assign an Internet IP address.
func (o ScaleWorkerWorkerConfigPtrOutput) PublicIpAssigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PublicIpAssigned
	}).(pulumi.BoolPtrOutput)
}

// Security groups to which a CVM instance belongs.
func (o ScaleWorkerWorkerConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Private network ID.
func (o ScaleWorkerWorkerConfigPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Volume of system disk in GB. Default is `50`.
func (o ScaleWorkerWorkerConfigPtrOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.SystemDiskSize
	}).(pulumi.IntPtrOutput)
}

// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
func (o ScaleWorkerWorkerConfigPtrOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.SystemDiskType
	}).(pulumi.StringPtrOutput)
}

// ase64-encoded User Data text, the length limit is 16KB.
func (o ScaleWorkerWorkerConfigPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleWorkerWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type ScaleWorkerWorkerConfigDataDisk struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition *string `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize *int `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt *bool `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget *string `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
}

// ScaleWorkerWorkerConfigDataDiskInput is an input type that accepts ScaleWorkerWorkerConfigDataDiskArgs and ScaleWorkerWorkerConfigDataDiskOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerConfigDataDiskInput` via:
//
//          ScaleWorkerWorkerConfigDataDiskArgs{...}
type ScaleWorkerWorkerConfigDataDiskInput interface {
	pulumi.Input

	ToScaleWorkerWorkerConfigDataDiskOutput() ScaleWorkerWorkerConfigDataDiskOutput
	ToScaleWorkerWorkerConfigDataDiskOutputWithContext(context.Context) ScaleWorkerWorkerConfigDataDiskOutput
}

type ScaleWorkerWorkerConfigDataDiskArgs struct {
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount pulumi.BoolPtrInput `pulumi:"autoFormatAndMount"`
	// The name of the device or partition to mount.
	DiskPartition pulumi.StringPtrInput `pulumi:"diskPartition"`
	// Volume of disk in GB. Default is `0`.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt pulumi.BoolPtrInput `pulumi:"encrypt"`
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Mount target.
	MountTarget pulumi.StringPtrInput `pulumi:"mountTarget"`
	// Data disk snapshot ID.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (ScaleWorkerWorkerConfigDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerConfigDataDisk)(nil)).Elem()
}

func (i ScaleWorkerWorkerConfigDataDiskArgs) ToScaleWorkerWorkerConfigDataDiskOutput() ScaleWorkerWorkerConfigDataDiskOutput {
	return i.ToScaleWorkerWorkerConfigDataDiskOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerConfigDataDiskArgs) ToScaleWorkerWorkerConfigDataDiskOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerConfigDataDiskOutput)
}

// ScaleWorkerWorkerConfigDataDiskArrayInput is an input type that accepts ScaleWorkerWorkerConfigDataDiskArray and ScaleWorkerWorkerConfigDataDiskArrayOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerConfigDataDiskArrayInput` via:
//
//          ScaleWorkerWorkerConfigDataDiskArray{ ScaleWorkerWorkerConfigDataDiskArgs{...} }
type ScaleWorkerWorkerConfigDataDiskArrayInput interface {
	pulumi.Input

	ToScaleWorkerWorkerConfigDataDiskArrayOutput() ScaleWorkerWorkerConfigDataDiskArrayOutput
	ToScaleWorkerWorkerConfigDataDiskArrayOutputWithContext(context.Context) ScaleWorkerWorkerConfigDataDiskArrayOutput
}

type ScaleWorkerWorkerConfigDataDiskArray []ScaleWorkerWorkerConfigDataDiskInput

func (ScaleWorkerWorkerConfigDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerWorkerConfigDataDisk)(nil)).Elem()
}

func (i ScaleWorkerWorkerConfigDataDiskArray) ToScaleWorkerWorkerConfigDataDiskArrayOutput() ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return i.ToScaleWorkerWorkerConfigDataDiskArrayOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerConfigDataDiskArray) ToScaleWorkerWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerConfigDataDiskArrayOutput)
}

type ScaleWorkerWorkerConfigDataDiskOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerConfigDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerConfigDataDisk)(nil)).Elem()
}

func (o ScaleWorkerWorkerConfigDataDiskOutput) ToScaleWorkerWorkerConfigDataDiskOutput() ScaleWorkerWorkerConfigDataDiskOutput {
	return o
}

func (o ScaleWorkerWorkerConfigDataDiskOutput) ToScaleWorkerWorkerConfigDataDiskOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigDataDiskOutput {
	return o
}

// Indicate whether to auto format and mount or not. Default is `false`.
func (o ScaleWorkerWorkerConfigDataDiskOutput) AutoFormatAndMount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *bool { return v.AutoFormatAndMount }).(pulumi.BoolPtrOutput)
}

// The name of the device or partition to mount.
func (o ScaleWorkerWorkerConfigDataDiskOutput) DiskPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.DiskPartition }).(pulumi.StringPtrOutput)
}

// Volume of disk in GB. Default is `0`.
func (o ScaleWorkerWorkerConfigDataDiskOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
func (o ScaleWorkerWorkerConfigDataDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Indicates whether to encrypt data disk, default `false`.
func (o ScaleWorkerWorkerConfigDataDiskOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

// File system, e.g. `ext3/ext4/xfs`.
func (o ScaleWorkerWorkerConfigDataDiskOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
func (o ScaleWorkerWorkerConfigDataDiskOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Mount target.
func (o ScaleWorkerWorkerConfigDataDiskOutput) MountTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.MountTarget }).(pulumi.StringPtrOutput)
}

// Data disk snapshot ID.
func (o ScaleWorkerWorkerConfigDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerConfigDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type ScaleWorkerWorkerConfigDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerConfigDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerWorkerConfigDataDisk)(nil)).Elem()
}

func (o ScaleWorkerWorkerConfigDataDiskArrayOutput) ToScaleWorkerWorkerConfigDataDiskArrayOutput() ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ScaleWorkerWorkerConfigDataDiskArrayOutput) ToScaleWorkerWorkerConfigDataDiskArrayOutputWithContext(ctx context.Context) ScaleWorkerWorkerConfigDataDiskArrayOutput {
	return o
}

func (o ScaleWorkerWorkerConfigDataDiskArrayOutput) Index(i pulumi.IntInput) ScaleWorkerWorkerConfigDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleWorkerWorkerConfigDataDisk {
		return vs[0].([]ScaleWorkerWorkerConfigDataDisk)[vs[1].(int)]
	}).(ScaleWorkerWorkerConfigDataDiskOutput)
}

type ScaleWorkerWorkerInstancesList struct {
	// Information of the cvm when it is failed.
	FailedReason *string `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId *string `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole *string `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState *string `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp *string `pulumi:"lanIp"`
}

// ScaleWorkerWorkerInstancesListInput is an input type that accepts ScaleWorkerWorkerInstancesListArgs and ScaleWorkerWorkerInstancesListOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerInstancesListInput` via:
//
//          ScaleWorkerWorkerInstancesListArgs{...}
type ScaleWorkerWorkerInstancesListInput interface {
	pulumi.Input

	ToScaleWorkerWorkerInstancesListOutput() ScaleWorkerWorkerInstancesListOutput
	ToScaleWorkerWorkerInstancesListOutputWithContext(context.Context) ScaleWorkerWorkerInstancesListOutput
}

type ScaleWorkerWorkerInstancesListArgs struct {
	// Information of the cvm when it is failed.
	FailedReason pulumi.StringPtrInput `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole pulumi.StringPtrInput `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState pulumi.StringPtrInput `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp pulumi.StringPtrInput `pulumi:"lanIp"`
}

func (ScaleWorkerWorkerInstancesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerInstancesList)(nil)).Elem()
}

func (i ScaleWorkerWorkerInstancesListArgs) ToScaleWorkerWorkerInstancesListOutput() ScaleWorkerWorkerInstancesListOutput {
	return i.ToScaleWorkerWorkerInstancesListOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerInstancesListArgs) ToScaleWorkerWorkerInstancesListOutputWithContext(ctx context.Context) ScaleWorkerWorkerInstancesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerInstancesListOutput)
}

// ScaleWorkerWorkerInstancesListArrayInput is an input type that accepts ScaleWorkerWorkerInstancesListArray and ScaleWorkerWorkerInstancesListArrayOutput values.
// You can construct a concrete instance of `ScaleWorkerWorkerInstancesListArrayInput` via:
//
//          ScaleWorkerWorkerInstancesListArray{ ScaleWorkerWorkerInstancesListArgs{...} }
type ScaleWorkerWorkerInstancesListArrayInput interface {
	pulumi.Input

	ToScaleWorkerWorkerInstancesListArrayOutput() ScaleWorkerWorkerInstancesListArrayOutput
	ToScaleWorkerWorkerInstancesListArrayOutputWithContext(context.Context) ScaleWorkerWorkerInstancesListArrayOutput
}

type ScaleWorkerWorkerInstancesListArray []ScaleWorkerWorkerInstancesListInput

func (ScaleWorkerWorkerInstancesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerWorkerInstancesList)(nil)).Elem()
}

func (i ScaleWorkerWorkerInstancesListArray) ToScaleWorkerWorkerInstancesListArrayOutput() ScaleWorkerWorkerInstancesListArrayOutput {
	return i.ToScaleWorkerWorkerInstancesListArrayOutputWithContext(context.Background())
}

func (i ScaleWorkerWorkerInstancesListArray) ToScaleWorkerWorkerInstancesListArrayOutputWithContext(ctx context.Context) ScaleWorkerWorkerInstancesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleWorkerWorkerInstancesListArrayOutput)
}

type ScaleWorkerWorkerInstancesListOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerInstancesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleWorkerWorkerInstancesList)(nil)).Elem()
}

func (o ScaleWorkerWorkerInstancesListOutput) ToScaleWorkerWorkerInstancesListOutput() ScaleWorkerWorkerInstancesListOutput {
	return o
}

func (o ScaleWorkerWorkerInstancesListOutput) ToScaleWorkerWorkerInstancesListOutputWithContext(ctx context.Context) ScaleWorkerWorkerInstancesListOutput {
	return o
}

// Information of the cvm when it is failed.
func (o ScaleWorkerWorkerInstancesListOutput) FailedReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerInstancesList) *string { return v.FailedReason }).(pulumi.StringPtrOutput)
}

// ID of the cvm.
func (o ScaleWorkerWorkerInstancesListOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerInstancesList) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Role of the cvm.
func (o ScaleWorkerWorkerInstancesListOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerInstancesList) *string { return v.InstanceRole }).(pulumi.StringPtrOutput)
}

// State of the cvm.
func (o ScaleWorkerWorkerInstancesListOutput) InstanceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerInstancesList) *string { return v.InstanceState }).(pulumi.StringPtrOutput)
}

// LAN IP of the cvm.
func (o ScaleWorkerWorkerInstancesListOutput) LanIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleWorkerWorkerInstancesList) *string { return v.LanIp }).(pulumi.StringPtrOutput)
}

type ScaleWorkerWorkerInstancesListArrayOutput struct{ *pulumi.OutputState }

func (ScaleWorkerWorkerInstancesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleWorkerWorkerInstancesList)(nil)).Elem()
}

func (o ScaleWorkerWorkerInstancesListArrayOutput) ToScaleWorkerWorkerInstancesListArrayOutput() ScaleWorkerWorkerInstancesListArrayOutput {
	return o
}

func (o ScaleWorkerWorkerInstancesListArrayOutput) ToScaleWorkerWorkerInstancesListArrayOutputWithContext(ctx context.Context) ScaleWorkerWorkerInstancesListArrayOutput {
	return o
}

func (o ScaleWorkerWorkerInstancesListArrayOutput) Index(i pulumi.IntInput) ScaleWorkerWorkerInstancesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleWorkerWorkerInstancesList {
		return vs[0].([]ScaleWorkerWorkerInstancesList)[vs[1].(int)]
	}).(ScaleWorkerWorkerInstancesListOutput)
}

type ServerlessNodePoolServerlessNode struct {
	// display name of serverless node.
	DisplayName *string `pulumi:"displayName"`
	// subnet id of serverless node.
	SubnetId string `pulumi:"subnetId"`
}

// ServerlessNodePoolServerlessNodeInput is an input type that accepts ServerlessNodePoolServerlessNodeArgs and ServerlessNodePoolServerlessNodeOutput values.
// You can construct a concrete instance of `ServerlessNodePoolServerlessNodeInput` via:
//
//          ServerlessNodePoolServerlessNodeArgs{...}
type ServerlessNodePoolServerlessNodeInput interface {
	pulumi.Input

	ToServerlessNodePoolServerlessNodeOutput() ServerlessNodePoolServerlessNodeOutput
	ToServerlessNodePoolServerlessNodeOutputWithContext(context.Context) ServerlessNodePoolServerlessNodeOutput
}

type ServerlessNodePoolServerlessNodeArgs struct {
	// display name of serverless node.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// subnet id of serverless node.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ServerlessNodePoolServerlessNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessNodePoolServerlessNode)(nil)).Elem()
}

func (i ServerlessNodePoolServerlessNodeArgs) ToServerlessNodePoolServerlessNodeOutput() ServerlessNodePoolServerlessNodeOutput {
	return i.ToServerlessNodePoolServerlessNodeOutputWithContext(context.Background())
}

func (i ServerlessNodePoolServerlessNodeArgs) ToServerlessNodePoolServerlessNodeOutputWithContext(ctx context.Context) ServerlessNodePoolServerlessNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessNodePoolServerlessNodeOutput)
}

// ServerlessNodePoolServerlessNodeArrayInput is an input type that accepts ServerlessNodePoolServerlessNodeArray and ServerlessNodePoolServerlessNodeArrayOutput values.
// You can construct a concrete instance of `ServerlessNodePoolServerlessNodeArrayInput` via:
//
//          ServerlessNodePoolServerlessNodeArray{ ServerlessNodePoolServerlessNodeArgs{...} }
type ServerlessNodePoolServerlessNodeArrayInput interface {
	pulumi.Input

	ToServerlessNodePoolServerlessNodeArrayOutput() ServerlessNodePoolServerlessNodeArrayOutput
	ToServerlessNodePoolServerlessNodeArrayOutputWithContext(context.Context) ServerlessNodePoolServerlessNodeArrayOutput
}

type ServerlessNodePoolServerlessNodeArray []ServerlessNodePoolServerlessNodeInput

func (ServerlessNodePoolServerlessNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessNodePoolServerlessNode)(nil)).Elem()
}

func (i ServerlessNodePoolServerlessNodeArray) ToServerlessNodePoolServerlessNodeArrayOutput() ServerlessNodePoolServerlessNodeArrayOutput {
	return i.ToServerlessNodePoolServerlessNodeArrayOutputWithContext(context.Background())
}

func (i ServerlessNodePoolServerlessNodeArray) ToServerlessNodePoolServerlessNodeArrayOutputWithContext(ctx context.Context) ServerlessNodePoolServerlessNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessNodePoolServerlessNodeArrayOutput)
}

type ServerlessNodePoolServerlessNodeOutput struct{ *pulumi.OutputState }

func (ServerlessNodePoolServerlessNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessNodePoolServerlessNode)(nil)).Elem()
}

func (o ServerlessNodePoolServerlessNodeOutput) ToServerlessNodePoolServerlessNodeOutput() ServerlessNodePoolServerlessNodeOutput {
	return o
}

func (o ServerlessNodePoolServerlessNodeOutput) ToServerlessNodePoolServerlessNodeOutputWithContext(ctx context.Context) ServerlessNodePoolServerlessNodeOutput {
	return o
}

// display name of serverless node.
func (o ServerlessNodePoolServerlessNodeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessNodePoolServerlessNode) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// subnet id of serverless node.
func (o ServerlessNodePoolServerlessNodeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessNodePoolServerlessNode) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ServerlessNodePoolServerlessNodeArrayOutput struct{ *pulumi.OutputState }

func (ServerlessNodePoolServerlessNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessNodePoolServerlessNode)(nil)).Elem()
}

func (o ServerlessNodePoolServerlessNodeArrayOutput) ToServerlessNodePoolServerlessNodeArrayOutput() ServerlessNodePoolServerlessNodeArrayOutput {
	return o
}

func (o ServerlessNodePoolServerlessNodeArrayOutput) ToServerlessNodePoolServerlessNodeArrayOutputWithContext(ctx context.Context) ServerlessNodePoolServerlessNodeArrayOutput {
	return o
}

func (o ServerlessNodePoolServerlessNodeArrayOutput) Index(i pulumi.IntInput) ServerlessNodePoolServerlessNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessNodePoolServerlessNode {
		return vs[0].([]ServerlessNodePoolServerlessNode)[vs[1].(int)]
	}).(ServerlessNodePoolServerlessNodeOutput)
}

type ServerlessNodePoolTaint struct {
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect string `pulumi:"effect"`
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key string `pulumi:"key"`
	// Value of the taint.
	Value string `pulumi:"value"`
}

// ServerlessNodePoolTaintInput is an input type that accepts ServerlessNodePoolTaintArgs and ServerlessNodePoolTaintOutput values.
// You can construct a concrete instance of `ServerlessNodePoolTaintInput` via:
//
//          ServerlessNodePoolTaintArgs{...}
type ServerlessNodePoolTaintInput interface {
	pulumi.Input

	ToServerlessNodePoolTaintOutput() ServerlessNodePoolTaintOutput
	ToServerlessNodePoolTaintOutputWithContext(context.Context) ServerlessNodePoolTaintOutput
}

type ServerlessNodePoolTaintArgs struct {
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerlessNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessNodePoolTaint)(nil)).Elem()
}

func (i ServerlessNodePoolTaintArgs) ToServerlessNodePoolTaintOutput() ServerlessNodePoolTaintOutput {
	return i.ToServerlessNodePoolTaintOutputWithContext(context.Background())
}

func (i ServerlessNodePoolTaintArgs) ToServerlessNodePoolTaintOutputWithContext(ctx context.Context) ServerlessNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessNodePoolTaintOutput)
}

// ServerlessNodePoolTaintArrayInput is an input type that accepts ServerlessNodePoolTaintArray and ServerlessNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `ServerlessNodePoolTaintArrayInput` via:
//
//          ServerlessNodePoolTaintArray{ ServerlessNodePoolTaintArgs{...} }
type ServerlessNodePoolTaintArrayInput interface {
	pulumi.Input

	ToServerlessNodePoolTaintArrayOutput() ServerlessNodePoolTaintArrayOutput
	ToServerlessNodePoolTaintArrayOutputWithContext(context.Context) ServerlessNodePoolTaintArrayOutput
}

type ServerlessNodePoolTaintArray []ServerlessNodePoolTaintInput

func (ServerlessNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessNodePoolTaint)(nil)).Elem()
}

func (i ServerlessNodePoolTaintArray) ToServerlessNodePoolTaintArrayOutput() ServerlessNodePoolTaintArrayOutput {
	return i.ToServerlessNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i ServerlessNodePoolTaintArray) ToServerlessNodePoolTaintArrayOutputWithContext(ctx context.Context) ServerlessNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessNodePoolTaintArrayOutput)
}

type ServerlessNodePoolTaintOutput struct{ *pulumi.OutputState }

func (ServerlessNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessNodePoolTaint)(nil)).Elem()
}

func (o ServerlessNodePoolTaintOutput) ToServerlessNodePoolTaintOutput() ServerlessNodePoolTaintOutput {
	return o
}

func (o ServerlessNodePoolTaintOutput) ToServerlessNodePoolTaintOutputWithContext(ctx context.Context) ServerlessNodePoolTaintOutput {
	return o
}

// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
func (o ServerlessNodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessNodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
func (o ServerlessNodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessNodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the taint.
func (o ServerlessNodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessNodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ServerlessNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (ServerlessNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessNodePoolTaint)(nil)).Elem()
}

func (o ServerlessNodePoolTaintArrayOutput) ToServerlessNodePoolTaintArrayOutput() ServerlessNodePoolTaintArrayOutput {
	return o
}

func (o ServerlessNodePoolTaintArrayOutput) ToServerlessNodePoolTaintArrayOutputWithContext(ctx context.Context) ServerlessNodePoolTaintArrayOutput {
	return o
}

func (o ServerlessNodePoolTaintArrayOutput) Index(i pulumi.IntInput) ServerlessNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessNodePoolTaint {
		return vs[0].([]ServerlessNodePoolTaint)[vs[1].(int)]
	}).(ServerlessNodePoolTaintOutput)
}

type GetAvailableClusterVersionsCluster struct {
	// Cluster Id.
	ClusterId string `pulumi:"clusterId"`
	// Upgradable cluster version number. Note: This field may return null, indicating that no valid value can be obtained.
	Versions []string `pulumi:"versions"`
}

// GetAvailableClusterVersionsClusterInput is an input type that accepts GetAvailableClusterVersionsClusterArgs and GetAvailableClusterVersionsClusterOutput values.
// You can construct a concrete instance of `GetAvailableClusterVersionsClusterInput` via:
//
//          GetAvailableClusterVersionsClusterArgs{...}
type GetAvailableClusterVersionsClusterInput interface {
	pulumi.Input

	ToGetAvailableClusterVersionsClusterOutput() GetAvailableClusterVersionsClusterOutput
	ToGetAvailableClusterVersionsClusterOutputWithContext(context.Context) GetAvailableClusterVersionsClusterOutput
}

type GetAvailableClusterVersionsClusterArgs struct {
	// Cluster Id.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Upgradable cluster version number. Note: This field may return null, indicating that no valid value can be obtained.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (GetAvailableClusterVersionsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableClusterVersionsCluster)(nil)).Elem()
}

func (i GetAvailableClusterVersionsClusterArgs) ToGetAvailableClusterVersionsClusterOutput() GetAvailableClusterVersionsClusterOutput {
	return i.ToGetAvailableClusterVersionsClusterOutputWithContext(context.Background())
}

func (i GetAvailableClusterVersionsClusterArgs) ToGetAvailableClusterVersionsClusterOutputWithContext(ctx context.Context) GetAvailableClusterVersionsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableClusterVersionsClusterOutput)
}

// GetAvailableClusterVersionsClusterArrayInput is an input type that accepts GetAvailableClusterVersionsClusterArray and GetAvailableClusterVersionsClusterArrayOutput values.
// You can construct a concrete instance of `GetAvailableClusterVersionsClusterArrayInput` via:
//
//          GetAvailableClusterVersionsClusterArray{ GetAvailableClusterVersionsClusterArgs{...} }
type GetAvailableClusterVersionsClusterArrayInput interface {
	pulumi.Input

	ToGetAvailableClusterVersionsClusterArrayOutput() GetAvailableClusterVersionsClusterArrayOutput
	ToGetAvailableClusterVersionsClusterArrayOutputWithContext(context.Context) GetAvailableClusterVersionsClusterArrayOutput
}

type GetAvailableClusterVersionsClusterArray []GetAvailableClusterVersionsClusterInput

func (GetAvailableClusterVersionsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableClusterVersionsCluster)(nil)).Elem()
}

func (i GetAvailableClusterVersionsClusterArray) ToGetAvailableClusterVersionsClusterArrayOutput() GetAvailableClusterVersionsClusterArrayOutput {
	return i.ToGetAvailableClusterVersionsClusterArrayOutputWithContext(context.Background())
}

func (i GetAvailableClusterVersionsClusterArray) ToGetAvailableClusterVersionsClusterArrayOutputWithContext(ctx context.Context) GetAvailableClusterVersionsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableClusterVersionsClusterArrayOutput)
}

type GetAvailableClusterVersionsClusterOutput struct{ *pulumi.OutputState }

func (GetAvailableClusterVersionsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableClusterVersionsCluster)(nil)).Elem()
}

func (o GetAvailableClusterVersionsClusterOutput) ToGetAvailableClusterVersionsClusterOutput() GetAvailableClusterVersionsClusterOutput {
	return o
}

func (o GetAvailableClusterVersionsClusterOutput) ToGetAvailableClusterVersionsClusterOutputWithContext(ctx context.Context) GetAvailableClusterVersionsClusterOutput {
	return o
}

// Cluster Id.
func (o GetAvailableClusterVersionsClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableClusterVersionsCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Upgradable cluster version number. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetAvailableClusterVersionsClusterOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAvailableClusterVersionsCluster) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type GetAvailableClusterVersionsClusterArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableClusterVersionsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableClusterVersionsCluster)(nil)).Elem()
}

func (o GetAvailableClusterVersionsClusterArrayOutput) ToGetAvailableClusterVersionsClusterArrayOutput() GetAvailableClusterVersionsClusterArrayOutput {
	return o
}

func (o GetAvailableClusterVersionsClusterArrayOutput) ToGetAvailableClusterVersionsClusterArrayOutputWithContext(ctx context.Context) GetAvailableClusterVersionsClusterArrayOutput {
	return o
}

func (o GetAvailableClusterVersionsClusterArrayOutput) Index(i pulumi.IntInput) GetAvailableClusterVersionsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableClusterVersionsCluster {
		return vs[0].([]GetAvailableClusterVersionsCluster)[vs[1].(int)]
	}).(GetAvailableClusterVersionsClusterOutput)
}

type GetChartsChartList struct {
	// Label of chart.
	Label map[string]interface{} `pulumi:"label"`
	// Chart latest version.
	LatestVersion string `pulumi:"latestVersion"`
	// Name of chart.
	Name string `pulumi:"name"`
}

// GetChartsChartListInput is an input type that accepts GetChartsChartListArgs and GetChartsChartListOutput values.
// You can construct a concrete instance of `GetChartsChartListInput` via:
//
//          GetChartsChartListArgs{...}
type GetChartsChartListInput interface {
	pulumi.Input

	ToGetChartsChartListOutput() GetChartsChartListOutput
	ToGetChartsChartListOutputWithContext(context.Context) GetChartsChartListOutput
}

type GetChartsChartListArgs struct {
	// Label of chart.
	Label pulumi.MapInput `pulumi:"label"`
	// Chart latest version.
	LatestVersion pulumi.StringInput `pulumi:"latestVersion"`
	// Name of chart.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetChartsChartListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartsChartList)(nil)).Elem()
}

func (i GetChartsChartListArgs) ToGetChartsChartListOutput() GetChartsChartListOutput {
	return i.ToGetChartsChartListOutputWithContext(context.Background())
}

func (i GetChartsChartListArgs) ToGetChartsChartListOutputWithContext(ctx context.Context) GetChartsChartListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartsChartListOutput)
}

// GetChartsChartListArrayInput is an input type that accepts GetChartsChartListArray and GetChartsChartListArrayOutput values.
// You can construct a concrete instance of `GetChartsChartListArrayInput` via:
//
//          GetChartsChartListArray{ GetChartsChartListArgs{...} }
type GetChartsChartListArrayInput interface {
	pulumi.Input

	ToGetChartsChartListArrayOutput() GetChartsChartListArrayOutput
	ToGetChartsChartListArrayOutputWithContext(context.Context) GetChartsChartListArrayOutput
}

type GetChartsChartListArray []GetChartsChartListInput

func (GetChartsChartListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartsChartList)(nil)).Elem()
}

func (i GetChartsChartListArray) ToGetChartsChartListArrayOutput() GetChartsChartListArrayOutput {
	return i.ToGetChartsChartListArrayOutputWithContext(context.Background())
}

func (i GetChartsChartListArray) ToGetChartsChartListArrayOutputWithContext(ctx context.Context) GetChartsChartListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartsChartListArrayOutput)
}

type GetChartsChartListOutput struct{ *pulumi.OutputState }

func (GetChartsChartListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartsChartList)(nil)).Elem()
}

func (o GetChartsChartListOutput) ToGetChartsChartListOutput() GetChartsChartListOutput {
	return o
}

func (o GetChartsChartListOutput) ToGetChartsChartListOutputWithContext(ctx context.Context) GetChartsChartListOutput {
	return o
}

// Label of chart.
func (o GetChartsChartListOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v GetChartsChartList) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

// Chart latest version.
func (o GetChartsChartListOutput) LatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartsChartList) string { return v.LatestVersion }).(pulumi.StringOutput)
}

// Name of chart.
func (o GetChartsChartListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartsChartList) string { return v.Name }).(pulumi.StringOutput)
}

type GetChartsChartListArrayOutput struct{ *pulumi.OutputState }

func (GetChartsChartListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartsChartList)(nil)).Elem()
}

func (o GetChartsChartListArrayOutput) ToGetChartsChartListArrayOutput() GetChartsChartListArrayOutput {
	return o
}

func (o GetChartsChartListArrayOutput) ToGetChartsChartListArrayOutputWithContext(ctx context.Context) GetChartsChartListArrayOutput {
	return o
}

func (o GetChartsChartListArrayOutput) Index(i pulumi.IntInput) GetChartsChartListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChartsChartList {
		return vs[0].([]GetChartsChartList)[vs[1].(int)]
	}).(GetChartsChartListOutput)
}

type GetClusterCommonNamesList struct {
	// The CommonName in the certificate of the client corresponding to the sub-account.
	CommonNames string `pulumi:"commonNames"`
	// User UIN.
	SubaccountUin string `pulumi:"subaccountUin"`
}

// GetClusterCommonNamesListInput is an input type that accepts GetClusterCommonNamesListArgs and GetClusterCommonNamesListOutput values.
// You can construct a concrete instance of `GetClusterCommonNamesListInput` via:
//
//          GetClusterCommonNamesListArgs{...}
type GetClusterCommonNamesListInput interface {
	pulumi.Input

	ToGetClusterCommonNamesListOutput() GetClusterCommonNamesListOutput
	ToGetClusterCommonNamesListOutputWithContext(context.Context) GetClusterCommonNamesListOutput
}

type GetClusterCommonNamesListArgs struct {
	// The CommonName in the certificate of the client corresponding to the sub-account.
	CommonNames pulumi.StringInput `pulumi:"commonNames"`
	// User UIN.
	SubaccountUin pulumi.StringInput `pulumi:"subaccountUin"`
}

func (GetClusterCommonNamesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCommonNamesList)(nil)).Elem()
}

func (i GetClusterCommonNamesListArgs) ToGetClusterCommonNamesListOutput() GetClusterCommonNamesListOutput {
	return i.ToGetClusterCommonNamesListOutputWithContext(context.Background())
}

func (i GetClusterCommonNamesListArgs) ToGetClusterCommonNamesListOutputWithContext(ctx context.Context) GetClusterCommonNamesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCommonNamesListOutput)
}

// GetClusterCommonNamesListArrayInput is an input type that accepts GetClusterCommonNamesListArray and GetClusterCommonNamesListArrayOutput values.
// You can construct a concrete instance of `GetClusterCommonNamesListArrayInput` via:
//
//          GetClusterCommonNamesListArray{ GetClusterCommonNamesListArgs{...} }
type GetClusterCommonNamesListArrayInput interface {
	pulumi.Input

	ToGetClusterCommonNamesListArrayOutput() GetClusterCommonNamesListArrayOutput
	ToGetClusterCommonNamesListArrayOutputWithContext(context.Context) GetClusterCommonNamesListArrayOutput
}

type GetClusterCommonNamesListArray []GetClusterCommonNamesListInput

func (GetClusterCommonNamesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCommonNamesList)(nil)).Elem()
}

func (i GetClusterCommonNamesListArray) ToGetClusterCommonNamesListArrayOutput() GetClusterCommonNamesListArrayOutput {
	return i.ToGetClusterCommonNamesListArrayOutputWithContext(context.Background())
}

func (i GetClusterCommonNamesListArray) ToGetClusterCommonNamesListArrayOutputWithContext(ctx context.Context) GetClusterCommonNamesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCommonNamesListArrayOutput)
}

type GetClusterCommonNamesListOutput struct{ *pulumi.OutputState }

func (GetClusterCommonNamesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCommonNamesList)(nil)).Elem()
}

func (o GetClusterCommonNamesListOutput) ToGetClusterCommonNamesListOutput() GetClusterCommonNamesListOutput {
	return o
}

func (o GetClusterCommonNamesListOutput) ToGetClusterCommonNamesListOutputWithContext(ctx context.Context) GetClusterCommonNamesListOutput {
	return o
}

// The CommonName in the certificate of the client corresponding to the sub-account.
func (o GetClusterCommonNamesListOutput) CommonNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCommonNamesList) string { return v.CommonNames }).(pulumi.StringOutput)
}

// User UIN.
func (o GetClusterCommonNamesListOutput) SubaccountUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCommonNamesList) string { return v.SubaccountUin }).(pulumi.StringOutput)
}

type GetClusterCommonNamesListArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCommonNamesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCommonNamesList)(nil)).Elem()
}

func (o GetClusterCommonNamesListArrayOutput) ToGetClusterCommonNamesListArrayOutput() GetClusterCommonNamesListArrayOutput {
	return o
}

func (o GetClusterCommonNamesListArrayOutput) ToGetClusterCommonNamesListArrayOutputWithContext(ctx context.Context) GetClusterCommonNamesListArrayOutput {
	return o
}

func (o GetClusterCommonNamesListArrayOutput) Index(i pulumi.IntInput) GetClusterCommonNamesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCommonNamesList {
		return vs[0].([]GetClusterCommonNamesList)[vs[1].(int)]
	}).(GetClusterCommonNamesListOutput)
}

type GetClusterLevelsList struct {
	// Alias used for pass to cluster level arguments.
	Alias string `pulumi:"alias"`
	// Number of ConfigMaps.
	ConfigMapCount int `pulumi:"configMapCount"`
	// Number of CRDs.
	CrdCount int `pulumi:"crdCount"`
	// Indicates whether the current level enabled.
	Enable bool `pulumi:"enable"`
	// Level name.
	Name string `pulumi:"name"`
	// Number of nodes.
	NodeCount int `pulumi:"nodeCount"`
	// Number of others.
	OtherCount int `pulumi:"otherCount"`
	// Number of pods.
	PodCount int `pulumi:"podCount"`
}

// GetClusterLevelsListInput is an input type that accepts GetClusterLevelsListArgs and GetClusterLevelsListOutput values.
// You can construct a concrete instance of `GetClusterLevelsListInput` via:
//
//          GetClusterLevelsListArgs{...}
type GetClusterLevelsListInput interface {
	pulumi.Input

	ToGetClusterLevelsListOutput() GetClusterLevelsListOutput
	ToGetClusterLevelsListOutputWithContext(context.Context) GetClusterLevelsListOutput
}

type GetClusterLevelsListArgs struct {
	// Alias used for pass to cluster level arguments.
	Alias pulumi.StringInput `pulumi:"alias"`
	// Number of ConfigMaps.
	ConfigMapCount pulumi.IntInput `pulumi:"configMapCount"`
	// Number of CRDs.
	CrdCount pulumi.IntInput `pulumi:"crdCount"`
	// Indicates whether the current level enabled.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// Level name.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of nodes.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Number of others.
	OtherCount pulumi.IntInput `pulumi:"otherCount"`
	// Number of pods.
	PodCount pulumi.IntInput `pulumi:"podCount"`
}

func (GetClusterLevelsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLevelsList)(nil)).Elem()
}

func (i GetClusterLevelsListArgs) ToGetClusterLevelsListOutput() GetClusterLevelsListOutput {
	return i.ToGetClusterLevelsListOutputWithContext(context.Background())
}

func (i GetClusterLevelsListArgs) ToGetClusterLevelsListOutputWithContext(ctx context.Context) GetClusterLevelsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLevelsListOutput)
}

// GetClusterLevelsListArrayInput is an input type that accepts GetClusterLevelsListArray and GetClusterLevelsListArrayOutput values.
// You can construct a concrete instance of `GetClusterLevelsListArrayInput` via:
//
//          GetClusterLevelsListArray{ GetClusterLevelsListArgs{...} }
type GetClusterLevelsListArrayInput interface {
	pulumi.Input

	ToGetClusterLevelsListArrayOutput() GetClusterLevelsListArrayOutput
	ToGetClusterLevelsListArrayOutputWithContext(context.Context) GetClusterLevelsListArrayOutput
}

type GetClusterLevelsListArray []GetClusterLevelsListInput

func (GetClusterLevelsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLevelsList)(nil)).Elem()
}

func (i GetClusterLevelsListArray) ToGetClusterLevelsListArrayOutput() GetClusterLevelsListArrayOutput {
	return i.ToGetClusterLevelsListArrayOutputWithContext(context.Background())
}

func (i GetClusterLevelsListArray) ToGetClusterLevelsListArrayOutputWithContext(ctx context.Context) GetClusterLevelsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLevelsListArrayOutput)
}

type GetClusterLevelsListOutput struct{ *pulumi.OutputState }

func (GetClusterLevelsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLevelsList)(nil)).Elem()
}

func (o GetClusterLevelsListOutput) ToGetClusterLevelsListOutput() GetClusterLevelsListOutput {
	return o
}

func (o GetClusterLevelsListOutput) ToGetClusterLevelsListOutputWithContext(ctx context.Context) GetClusterLevelsListOutput {
	return o
}

// Alias used for pass to cluster level arguments.
func (o GetClusterLevelsListOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLevelsList) string { return v.Alias }).(pulumi.StringOutput)
}

// Number of ConfigMaps.
func (o GetClusterLevelsListOutput) ConfigMapCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterLevelsList) int { return v.ConfigMapCount }).(pulumi.IntOutput)
}

// Number of CRDs.
func (o GetClusterLevelsListOutput) CrdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterLevelsList) int { return v.CrdCount }).(pulumi.IntOutput)
}

// Indicates whether the current level enabled.
func (o GetClusterLevelsListOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterLevelsList) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Level name.
func (o GetClusterLevelsListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLevelsList) string { return v.Name }).(pulumi.StringOutput)
}

// Number of nodes.
func (o GetClusterLevelsListOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterLevelsList) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Number of others.
func (o GetClusterLevelsListOutput) OtherCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterLevelsList) int { return v.OtherCount }).(pulumi.IntOutput)
}

// Number of pods.
func (o GetClusterLevelsListOutput) PodCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterLevelsList) int { return v.PodCount }).(pulumi.IntOutput)
}

type GetClusterLevelsListArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLevelsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLevelsList)(nil)).Elem()
}

func (o GetClusterLevelsListArrayOutput) ToGetClusterLevelsListArrayOutput() GetClusterLevelsListArrayOutput {
	return o
}

func (o GetClusterLevelsListArrayOutput) ToGetClusterLevelsListArrayOutputWithContext(ctx context.Context) GetClusterLevelsListArrayOutput {
	return o
}

func (o GetClusterLevelsListArrayOutput) Index(i pulumi.IntInput) GetClusterLevelsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLevelsList {
		return vs[0].([]GetClusterLevelsList)[vs[1].(int)]
	}).(GetClusterLevelsListOutput)
}

type GetClustersList struct {
	// The certificate used for access.
	CertificationAuthority string `pulumi:"certificationAuthority"`
	// The expired seconds to recycle ENI.
	ClaimExpiredSeconds int `pulumi:"claimExpiredSeconds"`
	// Indicates whether to enable cluster node auto scaler.
	ClusterAsEnabled bool `pulumi:"clusterAsEnabled"`
	// A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this VPC.
	ClusterCidr string `pulumi:"clusterCidr"`
	// Deployment type of the cluster.
	ClusterDeployType string `pulumi:"clusterDeployType"`
	// Description of the cluster.
	ClusterDesc string `pulumi:"clusterDesc"`
	// External network address to access.
	ClusterExternalEndpoint string `pulumi:"clusterExternalEndpoint"`
	// Customized parameters for master component.
	ClusterExtraArgs []GetClustersListClusterExtraArg `pulumi:"clusterExtraArgs"`
	// ID of the cluster. Conflict with cluster_name, can not be set at the same time.
	ClusterId string `pulumi:"clusterId"`
	// Indicates whether ipvs is enabled.
	ClusterIpvs bool `pulumi:"clusterIpvs"`
	// The maximum number of Pods per node in the cluster.
	ClusterMaxPodNum int `pulumi:"clusterMaxPodNum"`
	// The maximum number of services in the cluster.
	ClusterMaxServiceNum int `pulumi:"clusterMaxServiceNum"`
	// Name of the cluster. Conflict with cluster_id, can not be set at the same time.
	ClusterName string `pulumi:"clusterName"`
	// Number of nodes in the cluster.
	ClusterNodeNum int `pulumi:"clusterNodeNum"`
	// Operating system of the cluster.
	ClusterOs string `pulumi:"clusterOs"`
	// Version of the cluster.
	ClusterVersion string `pulumi:"clusterVersion"`
	// (**Deprecated**) It has been deprecated from version 1.18.1. Container runtime of the cluster.
	//
	// Deprecated: It has been deprecated from version 1.18.1.
	ContainerRuntime string `pulumi:"containerRuntime"`
	// Indicates whether cluster deletion protection is enabled.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// Domain name for access.
	Domain string `pulumi:"domain"`
	// Subnet IDs for cluster with VPC-CNI network mode.
	EniSubnetIds []string `pulumi:"eniSubnetIds"`
	// Indicates whether to ignore the cluster cidr conflict error.
	IgnoreClusterCidrConflict bool `pulumi:"ignoreClusterCidrConflict"`
	// Indicates whether non-static ip mode is enabled.
	IsNonStaticIpMode bool `pulumi:"isNonStaticIpMode"`
	// Kubernetes config.
	KubeConfig string `pulumi:"kubeConfig"`
	// Kubernetes config of private network.
	KubeConfigIntranet string `pulumi:"kubeConfigIntranet"`
	// Cluster kube-proxy mode.
	KubeProxyMode string `pulumi:"kubeProxyMode"`
	// Cluster network type.
	NetworkType string `pulumi:"networkType"`
	// Node name type of cluster.
	NodeNameType string `pulumi:"nodeNameType"`
	// Password of account.
	Password string `pulumi:"password"`
	// The Intranet address used for access.
	PgwEndpoint string `pulumi:"pgwEndpoint"`
	// Project ID of the cluster.
	ProjectId int `pulumi:"projectId"`
	// Access policy.
	SecurityPolicies []string `pulumi:"securityPolicies"`
	// The network address block of the cluster.
	ServiceCidr string `pulumi:"serviceCidr"`
	// Tags of the cluster.
	Tags map[string]interface{} `pulumi:"tags"`
	// User name of account.
	UserName string `pulumi:"userName"`
	// Vpc ID of the cluster.
	VpcId string `pulumi:"vpcId"`
	// An information list of cvm within the WORKER clusters. Each element contains the following attributes.
	WorkerInstancesLists []GetClustersListWorkerInstancesList `pulumi:"workerInstancesLists"`
}

// GetClustersListInput is an input type that accepts GetClustersListArgs and GetClustersListOutput values.
// You can construct a concrete instance of `GetClustersListInput` via:
//
//          GetClustersListArgs{...}
type GetClustersListInput interface {
	pulumi.Input

	ToGetClustersListOutput() GetClustersListOutput
	ToGetClustersListOutputWithContext(context.Context) GetClustersListOutput
}

type GetClustersListArgs struct {
	// The certificate used for access.
	CertificationAuthority pulumi.StringInput `pulumi:"certificationAuthority"`
	// The expired seconds to recycle ENI.
	ClaimExpiredSeconds pulumi.IntInput `pulumi:"claimExpiredSeconds"`
	// Indicates whether to enable cluster node auto scaler.
	ClusterAsEnabled pulumi.BoolInput `pulumi:"clusterAsEnabled"`
	// A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this VPC.
	ClusterCidr pulumi.StringInput `pulumi:"clusterCidr"`
	// Deployment type of the cluster.
	ClusterDeployType pulumi.StringInput `pulumi:"clusterDeployType"`
	// Description of the cluster.
	ClusterDesc pulumi.StringInput `pulumi:"clusterDesc"`
	// External network address to access.
	ClusterExternalEndpoint pulumi.StringInput `pulumi:"clusterExternalEndpoint"`
	// Customized parameters for master component.
	ClusterExtraArgs GetClustersListClusterExtraArgArrayInput `pulumi:"clusterExtraArgs"`
	// ID of the cluster. Conflict with cluster_name, can not be set at the same time.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Indicates whether ipvs is enabled.
	ClusterIpvs pulumi.BoolInput `pulumi:"clusterIpvs"`
	// The maximum number of Pods per node in the cluster.
	ClusterMaxPodNum pulumi.IntInput `pulumi:"clusterMaxPodNum"`
	// The maximum number of services in the cluster.
	ClusterMaxServiceNum pulumi.IntInput `pulumi:"clusterMaxServiceNum"`
	// Name of the cluster. Conflict with cluster_id, can not be set at the same time.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Number of nodes in the cluster.
	ClusterNodeNum pulumi.IntInput `pulumi:"clusterNodeNum"`
	// Operating system of the cluster.
	ClusterOs pulumi.StringInput `pulumi:"clusterOs"`
	// Version of the cluster.
	ClusterVersion pulumi.StringInput `pulumi:"clusterVersion"`
	// (**Deprecated**) It has been deprecated from version 1.18.1. Container runtime of the cluster.
	//
	// Deprecated: It has been deprecated from version 1.18.1.
	ContainerRuntime pulumi.StringInput `pulumi:"containerRuntime"`
	// Indicates whether cluster deletion protection is enabled.
	DeletionProtection pulumi.BoolInput `pulumi:"deletionProtection"`
	// Domain name for access.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Subnet IDs for cluster with VPC-CNI network mode.
	EniSubnetIds pulumi.StringArrayInput `pulumi:"eniSubnetIds"`
	// Indicates whether to ignore the cluster cidr conflict error.
	IgnoreClusterCidrConflict pulumi.BoolInput `pulumi:"ignoreClusterCidrConflict"`
	// Indicates whether non-static ip mode is enabled.
	IsNonStaticIpMode pulumi.BoolInput `pulumi:"isNonStaticIpMode"`
	// Kubernetes config.
	KubeConfig pulumi.StringInput `pulumi:"kubeConfig"`
	// Kubernetes config of private network.
	KubeConfigIntranet pulumi.StringInput `pulumi:"kubeConfigIntranet"`
	// Cluster kube-proxy mode.
	KubeProxyMode pulumi.StringInput `pulumi:"kubeProxyMode"`
	// Cluster network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Node name type of cluster.
	NodeNameType pulumi.StringInput `pulumi:"nodeNameType"`
	// Password of account.
	Password pulumi.StringInput `pulumi:"password"`
	// The Intranet address used for access.
	PgwEndpoint pulumi.StringInput `pulumi:"pgwEndpoint"`
	// Project ID of the cluster.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Access policy.
	SecurityPolicies pulumi.StringArrayInput `pulumi:"securityPolicies"`
	// The network address block of the cluster.
	ServiceCidr pulumi.StringInput `pulumi:"serviceCidr"`
	// Tags of the cluster.
	Tags pulumi.MapInput `pulumi:"tags"`
	// User name of account.
	UserName pulumi.StringInput `pulumi:"userName"`
	// Vpc ID of the cluster.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// An information list of cvm within the WORKER clusters. Each element contains the following attributes.
	WorkerInstancesLists GetClustersListWorkerInstancesListArrayInput `pulumi:"workerInstancesLists"`
}

func (GetClustersListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersList)(nil)).Elem()
}

func (i GetClustersListArgs) ToGetClustersListOutput() GetClustersListOutput {
	return i.ToGetClustersListOutputWithContext(context.Background())
}

func (i GetClustersListArgs) ToGetClustersListOutputWithContext(ctx context.Context) GetClustersListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListOutput)
}

// GetClustersListArrayInput is an input type that accepts GetClustersListArray and GetClustersListArrayOutput values.
// You can construct a concrete instance of `GetClustersListArrayInput` via:
//
//          GetClustersListArray{ GetClustersListArgs{...} }
type GetClustersListArrayInput interface {
	pulumi.Input

	ToGetClustersListArrayOutput() GetClustersListArrayOutput
	ToGetClustersListArrayOutputWithContext(context.Context) GetClustersListArrayOutput
}

type GetClustersListArray []GetClustersListInput

func (GetClustersListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersList)(nil)).Elem()
}

func (i GetClustersListArray) ToGetClustersListArrayOutput() GetClustersListArrayOutput {
	return i.ToGetClustersListArrayOutputWithContext(context.Background())
}

func (i GetClustersListArray) ToGetClustersListArrayOutputWithContext(ctx context.Context) GetClustersListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListArrayOutput)
}

type GetClustersListOutput struct{ *pulumi.OutputState }

func (GetClustersListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersList)(nil)).Elem()
}

func (o GetClustersListOutput) ToGetClustersListOutput() GetClustersListOutput {
	return o
}

func (o GetClustersListOutput) ToGetClustersListOutputWithContext(ctx context.Context) GetClustersListOutput {
	return o
}

// The certificate used for access.
func (o GetClustersListOutput) CertificationAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.CertificationAuthority }).(pulumi.StringOutput)
}

// The expired seconds to recycle ENI.
func (o GetClustersListOutput) ClaimExpiredSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersList) int { return v.ClaimExpiredSeconds }).(pulumi.IntOutput)
}

// Indicates whether to enable cluster node auto scaler.
func (o GetClustersListOutput) ClusterAsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersList) bool { return v.ClusterAsEnabled }).(pulumi.BoolOutput)
}

// A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this VPC.
func (o GetClustersListOutput) ClusterCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterCidr }).(pulumi.StringOutput)
}

// Deployment type of the cluster.
func (o GetClustersListOutput) ClusterDeployType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterDeployType }).(pulumi.StringOutput)
}

// Description of the cluster.
func (o GetClustersListOutput) ClusterDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterDesc }).(pulumi.StringOutput)
}

// External network address to access.
func (o GetClustersListOutput) ClusterExternalEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterExternalEndpoint }).(pulumi.StringOutput)
}

// Customized parameters for master component.
func (o GetClustersListOutput) ClusterExtraArgs() GetClustersListClusterExtraArgArrayOutput {
	return o.ApplyT(func(v GetClustersList) []GetClustersListClusterExtraArg { return v.ClusterExtraArgs }).(GetClustersListClusterExtraArgArrayOutput)
}

// ID of the cluster. Conflict with cluster_name, can not be set at the same time.
func (o GetClustersListOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Indicates whether ipvs is enabled.
func (o GetClustersListOutput) ClusterIpvs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersList) bool { return v.ClusterIpvs }).(pulumi.BoolOutput)
}

// The maximum number of Pods per node in the cluster.
func (o GetClustersListOutput) ClusterMaxPodNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersList) int { return v.ClusterMaxPodNum }).(pulumi.IntOutput)
}

// The maximum number of services in the cluster.
func (o GetClustersListOutput) ClusterMaxServiceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersList) int { return v.ClusterMaxServiceNum }).(pulumi.IntOutput)
}

// Name of the cluster. Conflict with cluster_id, can not be set at the same time.
func (o GetClustersListOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Number of nodes in the cluster.
func (o GetClustersListOutput) ClusterNodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersList) int { return v.ClusterNodeNum }).(pulumi.IntOutput)
}

// Operating system of the cluster.
func (o GetClustersListOutput) ClusterOs() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterOs }).(pulumi.StringOutput)
}

// Version of the cluster.
func (o GetClustersListOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// (**Deprecated**) It has been deprecated from version 1.18.1. Container runtime of the cluster.
//
// Deprecated: It has been deprecated from version 1.18.1.
func (o GetClustersListOutput) ContainerRuntime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ContainerRuntime }).(pulumi.StringOutput)
}

// Indicates whether cluster deletion protection is enabled.
func (o GetClustersListOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersList) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Domain name for access.
func (o GetClustersListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.Domain }).(pulumi.StringOutput)
}

// Subnet IDs for cluster with VPC-CNI network mode.
func (o GetClustersListOutput) EniSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersList) []string { return v.EniSubnetIds }).(pulumi.StringArrayOutput)
}

// Indicates whether to ignore the cluster cidr conflict error.
func (o GetClustersListOutput) IgnoreClusterCidrConflict() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersList) bool { return v.IgnoreClusterCidrConflict }).(pulumi.BoolOutput)
}

// Indicates whether non-static ip mode is enabled.
func (o GetClustersListOutput) IsNonStaticIpMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersList) bool { return v.IsNonStaticIpMode }).(pulumi.BoolOutput)
}

// Kubernetes config.
func (o GetClustersListOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.KubeConfig }).(pulumi.StringOutput)
}

// Kubernetes config of private network.
func (o GetClustersListOutput) KubeConfigIntranet() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.KubeConfigIntranet }).(pulumi.StringOutput)
}

// Cluster kube-proxy mode.
func (o GetClustersListOutput) KubeProxyMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.KubeProxyMode }).(pulumi.StringOutput)
}

// Cluster network type.
func (o GetClustersListOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Node name type of cluster.
func (o GetClustersListOutput) NodeNameType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.NodeNameType }).(pulumi.StringOutput)
}

// Password of account.
func (o GetClustersListOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.Password }).(pulumi.StringOutput)
}

// The Intranet address used for access.
func (o GetClustersListOutput) PgwEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.PgwEndpoint }).(pulumi.StringOutput)
}

// Project ID of the cluster.
func (o GetClustersListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Access policy.
func (o GetClustersListOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersList) []string { return v.SecurityPolicies }).(pulumi.StringArrayOutput)
}

// The network address block of the cluster.
func (o GetClustersListOutput) ServiceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.ServiceCidr }).(pulumi.StringOutput)
}

// Tags of the cluster.
func (o GetClustersListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// User name of account.
func (o GetClustersListOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.UserName }).(pulumi.StringOutput)
}

// Vpc ID of the cluster.
func (o GetClustersListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersList) string { return v.VpcId }).(pulumi.StringOutput)
}

// An information list of cvm within the WORKER clusters. Each element contains the following attributes.
func (o GetClustersListOutput) WorkerInstancesLists() GetClustersListWorkerInstancesListArrayOutput {
	return o.ApplyT(func(v GetClustersList) []GetClustersListWorkerInstancesList { return v.WorkerInstancesLists }).(GetClustersListWorkerInstancesListArrayOutput)
}

type GetClustersListArrayOutput struct{ *pulumi.OutputState }

func (GetClustersListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersList)(nil)).Elem()
}

func (o GetClustersListArrayOutput) ToGetClustersListArrayOutput() GetClustersListArrayOutput {
	return o
}

func (o GetClustersListArrayOutput) ToGetClustersListArrayOutputWithContext(ctx context.Context) GetClustersListArrayOutput {
	return o
}

func (o GetClustersListArrayOutput) Index(i pulumi.IntInput) GetClustersListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersList {
		return vs[0].([]GetClustersList)[vs[1].(int)]
	}).(GetClustersListOutput)
}

type GetClustersListClusterExtraArg struct {
	// The customized parameters for kube-apiserver.
	KubeApiservers []string `pulumi:"kubeApiservers"`
	// The customized parameters for kube-controller-manager.
	KubeControllerManagers []string `pulumi:"kubeControllerManagers"`
	// The customized parameters for kube-scheduler.
	KubeSchedulers []string `pulumi:"kubeSchedulers"`
}

// GetClustersListClusterExtraArgInput is an input type that accepts GetClustersListClusterExtraArgArgs and GetClustersListClusterExtraArgOutput values.
// You can construct a concrete instance of `GetClustersListClusterExtraArgInput` via:
//
//          GetClustersListClusterExtraArgArgs{...}
type GetClustersListClusterExtraArgInput interface {
	pulumi.Input

	ToGetClustersListClusterExtraArgOutput() GetClustersListClusterExtraArgOutput
	ToGetClustersListClusterExtraArgOutputWithContext(context.Context) GetClustersListClusterExtraArgOutput
}

type GetClustersListClusterExtraArgArgs struct {
	// The customized parameters for kube-apiserver.
	KubeApiservers pulumi.StringArrayInput `pulumi:"kubeApiservers"`
	// The customized parameters for kube-controller-manager.
	KubeControllerManagers pulumi.StringArrayInput `pulumi:"kubeControllerManagers"`
	// The customized parameters for kube-scheduler.
	KubeSchedulers pulumi.StringArrayInput `pulumi:"kubeSchedulers"`
}

func (GetClustersListClusterExtraArgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersListClusterExtraArg)(nil)).Elem()
}

func (i GetClustersListClusterExtraArgArgs) ToGetClustersListClusterExtraArgOutput() GetClustersListClusterExtraArgOutput {
	return i.ToGetClustersListClusterExtraArgOutputWithContext(context.Background())
}

func (i GetClustersListClusterExtraArgArgs) ToGetClustersListClusterExtraArgOutputWithContext(ctx context.Context) GetClustersListClusterExtraArgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListClusterExtraArgOutput)
}

// GetClustersListClusterExtraArgArrayInput is an input type that accepts GetClustersListClusterExtraArgArray and GetClustersListClusterExtraArgArrayOutput values.
// You can construct a concrete instance of `GetClustersListClusterExtraArgArrayInput` via:
//
//          GetClustersListClusterExtraArgArray{ GetClustersListClusterExtraArgArgs{...} }
type GetClustersListClusterExtraArgArrayInput interface {
	pulumi.Input

	ToGetClustersListClusterExtraArgArrayOutput() GetClustersListClusterExtraArgArrayOutput
	ToGetClustersListClusterExtraArgArrayOutputWithContext(context.Context) GetClustersListClusterExtraArgArrayOutput
}

type GetClustersListClusterExtraArgArray []GetClustersListClusterExtraArgInput

func (GetClustersListClusterExtraArgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersListClusterExtraArg)(nil)).Elem()
}

func (i GetClustersListClusterExtraArgArray) ToGetClustersListClusterExtraArgArrayOutput() GetClustersListClusterExtraArgArrayOutput {
	return i.ToGetClustersListClusterExtraArgArrayOutputWithContext(context.Background())
}

func (i GetClustersListClusterExtraArgArray) ToGetClustersListClusterExtraArgArrayOutputWithContext(ctx context.Context) GetClustersListClusterExtraArgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListClusterExtraArgArrayOutput)
}

type GetClustersListClusterExtraArgOutput struct{ *pulumi.OutputState }

func (GetClustersListClusterExtraArgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersListClusterExtraArg)(nil)).Elem()
}

func (o GetClustersListClusterExtraArgOutput) ToGetClustersListClusterExtraArgOutput() GetClustersListClusterExtraArgOutput {
	return o
}

func (o GetClustersListClusterExtraArgOutput) ToGetClustersListClusterExtraArgOutputWithContext(ctx context.Context) GetClustersListClusterExtraArgOutput {
	return o
}

// The customized parameters for kube-apiserver.
func (o GetClustersListClusterExtraArgOutput) KubeApiservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersListClusterExtraArg) []string { return v.KubeApiservers }).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-controller-manager.
func (o GetClustersListClusterExtraArgOutput) KubeControllerManagers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersListClusterExtraArg) []string { return v.KubeControllerManagers }).(pulumi.StringArrayOutput)
}

// The customized parameters for kube-scheduler.
func (o GetClustersListClusterExtraArgOutput) KubeSchedulers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersListClusterExtraArg) []string { return v.KubeSchedulers }).(pulumi.StringArrayOutput)
}

type GetClustersListClusterExtraArgArrayOutput struct{ *pulumi.OutputState }

func (GetClustersListClusterExtraArgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersListClusterExtraArg)(nil)).Elem()
}

func (o GetClustersListClusterExtraArgArrayOutput) ToGetClustersListClusterExtraArgArrayOutput() GetClustersListClusterExtraArgArrayOutput {
	return o
}

func (o GetClustersListClusterExtraArgArrayOutput) ToGetClustersListClusterExtraArgArrayOutputWithContext(ctx context.Context) GetClustersListClusterExtraArgArrayOutput {
	return o
}

func (o GetClustersListClusterExtraArgArrayOutput) Index(i pulumi.IntInput) GetClustersListClusterExtraArgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersListClusterExtraArg {
		return vs[0].([]GetClustersListClusterExtraArg)[vs[1].(int)]
	}).(GetClustersListClusterExtraArgOutput)
}

type GetClustersListWorkerInstancesList struct {
	// Information of the cvm when it is failed.
	FailedReason string `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId string `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole string `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState string `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp string `pulumi:"lanIp"`
}

// GetClustersListWorkerInstancesListInput is an input type that accepts GetClustersListWorkerInstancesListArgs and GetClustersListWorkerInstancesListOutput values.
// You can construct a concrete instance of `GetClustersListWorkerInstancesListInput` via:
//
//          GetClustersListWorkerInstancesListArgs{...}
type GetClustersListWorkerInstancesListInput interface {
	pulumi.Input

	ToGetClustersListWorkerInstancesListOutput() GetClustersListWorkerInstancesListOutput
	ToGetClustersListWorkerInstancesListOutputWithContext(context.Context) GetClustersListWorkerInstancesListOutput
}

type GetClustersListWorkerInstancesListArgs struct {
	// Information of the cvm when it is failed.
	FailedReason pulumi.StringInput `pulumi:"failedReason"`
	// ID of the cvm.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Role of the cvm.
	InstanceRole pulumi.StringInput `pulumi:"instanceRole"`
	// State of the cvm.
	InstanceState pulumi.StringInput `pulumi:"instanceState"`
	// LAN IP of the cvm.
	LanIp pulumi.StringInput `pulumi:"lanIp"`
}

func (GetClustersListWorkerInstancesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersListWorkerInstancesList)(nil)).Elem()
}

func (i GetClustersListWorkerInstancesListArgs) ToGetClustersListWorkerInstancesListOutput() GetClustersListWorkerInstancesListOutput {
	return i.ToGetClustersListWorkerInstancesListOutputWithContext(context.Background())
}

func (i GetClustersListWorkerInstancesListArgs) ToGetClustersListWorkerInstancesListOutputWithContext(ctx context.Context) GetClustersListWorkerInstancesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListWorkerInstancesListOutput)
}

// GetClustersListWorkerInstancesListArrayInput is an input type that accepts GetClustersListWorkerInstancesListArray and GetClustersListWorkerInstancesListArrayOutput values.
// You can construct a concrete instance of `GetClustersListWorkerInstancesListArrayInput` via:
//
//          GetClustersListWorkerInstancesListArray{ GetClustersListWorkerInstancesListArgs{...} }
type GetClustersListWorkerInstancesListArrayInput interface {
	pulumi.Input

	ToGetClustersListWorkerInstancesListArrayOutput() GetClustersListWorkerInstancesListArrayOutput
	ToGetClustersListWorkerInstancesListArrayOutputWithContext(context.Context) GetClustersListWorkerInstancesListArrayOutput
}

type GetClustersListWorkerInstancesListArray []GetClustersListWorkerInstancesListInput

func (GetClustersListWorkerInstancesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersListWorkerInstancesList)(nil)).Elem()
}

func (i GetClustersListWorkerInstancesListArray) ToGetClustersListWorkerInstancesListArrayOutput() GetClustersListWorkerInstancesListArrayOutput {
	return i.ToGetClustersListWorkerInstancesListArrayOutputWithContext(context.Background())
}

func (i GetClustersListWorkerInstancesListArray) ToGetClustersListWorkerInstancesListArrayOutputWithContext(ctx context.Context) GetClustersListWorkerInstancesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersListWorkerInstancesListArrayOutput)
}

type GetClustersListWorkerInstancesListOutput struct{ *pulumi.OutputState }

func (GetClustersListWorkerInstancesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersListWorkerInstancesList)(nil)).Elem()
}

func (o GetClustersListWorkerInstancesListOutput) ToGetClustersListWorkerInstancesListOutput() GetClustersListWorkerInstancesListOutput {
	return o
}

func (o GetClustersListWorkerInstancesListOutput) ToGetClustersListWorkerInstancesListOutputWithContext(ctx context.Context) GetClustersListWorkerInstancesListOutput {
	return o
}

// Information of the cvm when it is failed.
func (o GetClustersListWorkerInstancesListOutput) FailedReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersListWorkerInstancesList) string { return v.FailedReason }).(pulumi.StringOutput)
}

// ID of the cvm.
func (o GetClustersListWorkerInstancesListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersListWorkerInstancesList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Role of the cvm.
func (o GetClustersListWorkerInstancesListOutput) InstanceRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersListWorkerInstancesList) string { return v.InstanceRole }).(pulumi.StringOutput)
}

// State of the cvm.
func (o GetClustersListWorkerInstancesListOutput) InstanceState() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersListWorkerInstancesList) string { return v.InstanceState }).(pulumi.StringOutput)
}

// LAN IP of the cvm.
func (o GetClustersListWorkerInstancesListOutput) LanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersListWorkerInstancesList) string { return v.LanIp }).(pulumi.StringOutput)
}

type GetClustersListWorkerInstancesListArrayOutput struct{ *pulumi.OutputState }

func (GetClustersListWorkerInstancesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersListWorkerInstancesList)(nil)).Elem()
}

func (o GetClustersListWorkerInstancesListArrayOutput) ToGetClustersListWorkerInstancesListArrayOutput() GetClustersListWorkerInstancesListArrayOutput {
	return o
}

func (o GetClustersListWorkerInstancesListArrayOutput) ToGetClustersListWorkerInstancesListArrayOutputWithContext(ctx context.Context) GetClustersListWorkerInstancesListArrayOutput {
	return o
}

func (o GetClustersListWorkerInstancesListArrayOutput) Index(i pulumi.IntInput) GetClustersListWorkerInstancesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersListWorkerInstancesList {
		return vs[0].([]GetClustersListWorkerInstancesList)[vs[1].(int)]
	}).(GetClustersListWorkerInstancesListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigInput)(nil)).Elem(), ClusterAttachmentWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigPtrInput)(nil)).Elem(), ClusterAttachmentWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigDataDiskInput)(nil)).Elem(), ClusterAttachmentWorkerConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigDataDiskArrayInput)(nil)).Elem(), ClusterAttachmentWorkerConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigGpuArgsInput)(nil)).Elem(), ClusterAttachmentWorkerConfigGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigGpuArgsPtrInput)(nil)).Elem(), ClusterAttachmentWorkerConfigGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesPtrInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesDataDiskInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesDataDiskArrayInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesGpuArgsInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAttachmentWorkerConfigOverridesGpuArgsPtrInput)(nil)).Elem(), ClusterAttachmentWorkerConfigOverridesGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthOptionsInput)(nil)).Elem(), ClusterAuthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthOptionsPtrInput)(nil)).Elem(), ClusterAuthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAuditInput)(nil)).Elem(), ClusterClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAuditPtrInput)(nil)).Elem(), ClusterClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterExtraArgsInput)(nil)).Elem(), ClusterClusterExtraArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterExtraArgsPtrInput)(nil)).Elem(), ClusterClusterExtraArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEventPersistenceInput)(nil)).Elem(), ClusterEventPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEventPersistencePtrInput)(nil)).Elem(), ClusterEventPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExistInstanceInput)(nil)).Elem(), ClusterExistInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExistInstanceArrayInput)(nil)).Elem(), ClusterExistInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExistInstanceInstancesParaInput)(nil)).Elem(), ClusterExistInstanceInstancesParaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExistInstanceInstancesParaPtrInput)(nil)).Elem(), ClusterExistInstanceInstancesParaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExtensionAddonInput)(nil)).Elem(), ClusterExtensionAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExtensionAddonArrayInput)(nil)).Elem(), ClusterExtensionAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLogAgentInput)(nil)).Elem(), ClusterLogAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLogAgentPtrInput)(nil)).Elem(), ClusterLogAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterConfigInput)(nil)).Elem(), ClusterMasterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterConfigArrayInput)(nil)).Elem(), ClusterMasterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterConfigDataDiskInput)(nil)).Elem(), ClusterMasterConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterConfigDataDiskArrayInput)(nil)).Elem(), ClusterMasterConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolGlobalConfigInput)(nil)).Elem(), ClusterNodePoolGlobalConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolGlobalConfigArrayInput)(nil)).Elem(), ClusterNodePoolGlobalConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerConfigInput)(nil)).Elem(), ClusterWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerConfigArrayInput)(nil)).Elem(), ClusterWorkerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerConfigDataDiskInput)(nil)).Elem(), ClusterWorkerConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerConfigDataDiskArrayInput)(nil)).Elem(), ClusterWorkerConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerInstancesListInput)(nil)).Elem(), ClusterWorkerInstancesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerInstancesListArrayInput)(nil)).Elem(), ClusterWorkerInstancesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingConfigInput)(nil)).Elem(), NodePoolAutoScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingConfigPtrInput)(nil)).Elem(), NodePoolAutoScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingConfigDataDiskInput)(nil)).Elem(), NodePoolAutoScalingConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingConfigDataDiskArrayInput)(nil)).Elem(), NodePoolAutoScalingConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigDataDiskInput)(nil)).Elem(), NodePoolNodeConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigDataDiskArrayInput)(nil)).Elem(), NodePoolNodeConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGpuArgsInput)(nil)).Elem(), NodePoolNodeConfigGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGpuArgsPtrInput)(nil)).Elem(), NodePoolNodeConfigGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolTaintInput)(nil)).Elem(), NodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolTaintArrayInput)(nil)).Elem(), NodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerDataDiskInput)(nil)).Elem(), ScaleWorkerDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerDataDiskArrayInput)(nil)).Elem(), ScaleWorkerDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerGpuArgsInput)(nil)).Elem(), ScaleWorkerGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerGpuArgsPtrInput)(nil)).Elem(), ScaleWorkerGpuArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerConfigInput)(nil)).Elem(), ScaleWorkerWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerConfigPtrInput)(nil)).Elem(), ScaleWorkerWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerConfigDataDiskInput)(nil)).Elem(), ScaleWorkerWorkerConfigDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerConfigDataDiskArrayInput)(nil)).Elem(), ScaleWorkerWorkerConfigDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerInstancesListInput)(nil)).Elem(), ScaleWorkerWorkerInstancesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleWorkerWorkerInstancesListArrayInput)(nil)).Elem(), ScaleWorkerWorkerInstancesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessNodePoolServerlessNodeInput)(nil)).Elem(), ServerlessNodePoolServerlessNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessNodePoolServerlessNodeArrayInput)(nil)).Elem(), ServerlessNodePoolServerlessNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessNodePoolTaintInput)(nil)).Elem(), ServerlessNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessNodePoolTaintArrayInput)(nil)).Elem(), ServerlessNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableClusterVersionsClusterInput)(nil)).Elem(), GetAvailableClusterVersionsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableClusterVersionsClusterArrayInput)(nil)).Elem(), GetAvailableClusterVersionsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartsChartListInput)(nil)).Elem(), GetChartsChartListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartsChartListArrayInput)(nil)).Elem(), GetChartsChartListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCommonNamesListInput)(nil)).Elem(), GetClusterCommonNamesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCommonNamesListArrayInput)(nil)).Elem(), GetClusterCommonNamesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLevelsListInput)(nil)).Elem(), GetClusterLevelsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLevelsListArrayInput)(nil)).Elem(), GetClusterLevelsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListInput)(nil)).Elem(), GetClustersListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListArrayInput)(nil)).Elem(), GetClustersListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListClusterExtraArgInput)(nil)).Elem(), GetClustersListClusterExtraArgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListClusterExtraArgArrayInput)(nil)).Elem(), GetClustersListClusterExtraArgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListWorkerInstancesListInput)(nil)).Elem(), GetClustersListWorkerInstancesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersListWorkerInstancesListArrayInput)(nil)).Elem(), GetClustersListWorkerInstancesListArray{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigDataDiskOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigGpuArgsOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigGpuArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesPtrOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesDataDiskOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesGpuArgsOutput{})
	pulumi.RegisterOutputType(ClusterAttachmentWorkerConfigOverridesGpuArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthOptionsOutput{})
	pulumi.RegisterOutputType(ClusterAuthOptionsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAuditOutput{})
	pulumi.RegisterOutputType(ClusterClusterAuditPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterExtraArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterExtraArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterEventPersistenceOutput{})
	pulumi.RegisterOutputType(ClusterEventPersistencePtrOutput{})
	pulumi.RegisterOutputType(ClusterExistInstanceOutput{})
	pulumi.RegisterOutputType(ClusterExistInstanceArrayOutput{})
	pulumi.RegisterOutputType(ClusterExistInstanceInstancesParaOutput{})
	pulumi.RegisterOutputType(ClusterExistInstanceInstancesParaPtrOutput{})
	pulumi.RegisterOutputType(ClusterExtensionAddonOutput{})
	pulumi.RegisterOutputType(ClusterExtensionAddonArrayOutput{})
	pulumi.RegisterOutputType(ClusterLogAgentOutput{})
	pulumi.RegisterOutputType(ClusterLogAgentPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterMasterConfigDataDiskOutput{})
	pulumi.RegisterOutputType(ClusterMasterConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolGlobalConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolGlobalConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterWorkerConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterWorkerConfigDataDiskOutput{})
	pulumi.RegisterOutputType(ClusterWorkerConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterWorkerInstancesListOutput{})
	pulumi.RegisterOutputType(ClusterWorkerInstancesListArrayOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingConfigOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingConfigDataDiskOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigDataDiskOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGpuArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGpuArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolTaintOutput{})
	pulumi.RegisterOutputType(NodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(ScaleWorkerDataDiskOutput{})
	pulumi.RegisterOutputType(ScaleWorkerDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ScaleWorkerGpuArgsOutput{})
	pulumi.RegisterOutputType(ScaleWorkerGpuArgsPtrOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerConfigOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerConfigDataDiskOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerConfigDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerInstancesListOutput{})
	pulumi.RegisterOutputType(ScaleWorkerWorkerInstancesListArrayOutput{})
	pulumi.RegisterOutputType(ServerlessNodePoolServerlessNodeOutput{})
	pulumi.RegisterOutputType(ServerlessNodePoolServerlessNodeArrayOutput{})
	pulumi.RegisterOutputType(ServerlessNodePoolTaintOutput{})
	pulumi.RegisterOutputType(ServerlessNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableClusterVersionsClusterOutput{})
	pulumi.RegisterOutputType(GetAvailableClusterVersionsClusterArrayOutput{})
	pulumi.RegisterOutputType(GetChartsChartListOutput{})
	pulumi.RegisterOutputType(GetChartsChartListArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCommonNamesListOutput{})
	pulumi.RegisterOutputType(GetClusterCommonNamesListArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLevelsListOutput{})
	pulumi.RegisterOutputType(GetClusterLevelsListArrayOutput{})
	pulumi.RegisterOutputType(GetClustersListOutput{})
	pulumi.RegisterOutputType(GetClustersListArrayOutput{})
	pulumi.RegisterOutputType(GetClustersListClusterExtraArgOutput{})
	pulumi.RegisterOutputType(GetClustersListClusterExtraArgArrayOutput{})
	pulumi.RegisterOutputType(GetClustersListWorkerInstancesListOutput{})
	pulumi.RegisterOutputType(GetClustersListWorkerInstancesListArrayOutput{})
}
