// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package api

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AvailabilityRegionsRegion struct {
	Description string `pulumi:"description"`
	Name        string `pulumi:"name"`
	State       string `pulumi:"state"`
}

// AvailabilityRegionsRegionInput is an input type that accepts AvailabilityRegionsRegionArgs and AvailabilityRegionsRegionOutput values.
// You can construct a concrete instance of `AvailabilityRegionsRegionInput` via:
//
//          AvailabilityRegionsRegionArgs{...}
type AvailabilityRegionsRegionInput interface {
	pulumi.Input

	ToAvailabilityRegionsRegionOutput() AvailabilityRegionsRegionOutput
	ToAvailabilityRegionsRegionOutputWithContext(context.Context) AvailabilityRegionsRegionOutput
}

type AvailabilityRegionsRegionArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Name        pulumi.StringInput `pulumi:"name"`
	State       pulumi.StringInput `pulumi:"state"`
}

func (AvailabilityRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityRegionsRegion)(nil)).Elem()
}

func (i AvailabilityRegionsRegionArgs) ToAvailabilityRegionsRegionOutput() AvailabilityRegionsRegionOutput {
	return i.ToAvailabilityRegionsRegionOutputWithContext(context.Background())
}

func (i AvailabilityRegionsRegionArgs) ToAvailabilityRegionsRegionOutputWithContext(ctx context.Context) AvailabilityRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityRegionsRegionOutput)
}

// AvailabilityRegionsRegionArrayInput is an input type that accepts AvailabilityRegionsRegionArray and AvailabilityRegionsRegionArrayOutput values.
// You can construct a concrete instance of `AvailabilityRegionsRegionArrayInput` via:
//
//          AvailabilityRegionsRegionArray{ AvailabilityRegionsRegionArgs{...} }
type AvailabilityRegionsRegionArrayInput interface {
	pulumi.Input

	ToAvailabilityRegionsRegionArrayOutput() AvailabilityRegionsRegionArrayOutput
	ToAvailabilityRegionsRegionArrayOutputWithContext(context.Context) AvailabilityRegionsRegionArrayOutput
}

type AvailabilityRegionsRegionArray []AvailabilityRegionsRegionInput

func (AvailabilityRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailabilityRegionsRegion)(nil)).Elem()
}

func (i AvailabilityRegionsRegionArray) ToAvailabilityRegionsRegionArrayOutput() AvailabilityRegionsRegionArrayOutput {
	return i.ToAvailabilityRegionsRegionArrayOutputWithContext(context.Background())
}

func (i AvailabilityRegionsRegionArray) ToAvailabilityRegionsRegionArrayOutputWithContext(ctx context.Context) AvailabilityRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityRegionsRegionArrayOutput)
}

type AvailabilityRegionsRegionOutput struct{ *pulumi.OutputState }

func (AvailabilityRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityRegionsRegion)(nil)).Elem()
}

func (o AvailabilityRegionsRegionOutput) ToAvailabilityRegionsRegionOutput() AvailabilityRegionsRegionOutput {
	return o
}

func (o AvailabilityRegionsRegionOutput) ToAvailabilityRegionsRegionOutputWithContext(ctx context.Context) AvailabilityRegionsRegionOutput {
	return o
}

func (o AvailabilityRegionsRegionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityRegionsRegion) string { return v.Description }).(pulumi.StringOutput)
}

func (o AvailabilityRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

func (o AvailabilityRegionsRegionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityRegionsRegion) string { return v.State }).(pulumi.StringOutput)
}

type AvailabilityRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (AvailabilityRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailabilityRegionsRegion)(nil)).Elem()
}

func (o AvailabilityRegionsRegionArrayOutput) ToAvailabilityRegionsRegionArrayOutput() AvailabilityRegionsRegionArrayOutput {
	return o
}

func (o AvailabilityRegionsRegionArrayOutput) ToAvailabilityRegionsRegionArrayOutputWithContext(ctx context.Context) AvailabilityRegionsRegionArrayOutput {
	return o
}

func (o AvailabilityRegionsRegionArrayOutput) Index(i pulumi.IntInput) AvailabilityRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AvailabilityRegionsRegion {
		return vs[0].([]AvailabilityRegionsRegion)[vs[1].(int)]
	}).(AvailabilityRegionsRegionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AvailabilityRegionsRegionInput)(nil)).Elem(), AvailabilityRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailabilityRegionsRegionArrayInput)(nil)).Elem(), AvailabilityRegionsRegionArray{})
	pulumi.RegisterOutputType(AvailabilityRegionsRegionOutput{})
	pulumi.RegisterOutputType(AvailabilityRegionsRegionArrayOutput{})
}
