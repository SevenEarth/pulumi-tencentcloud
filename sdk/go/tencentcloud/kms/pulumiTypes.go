// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetKeysKeyList struct {
	// Name of CMK.
	Alias string `pulumi:"alias"`
	// Create time of CMK.
	CreateTime int `pulumi:"createTime"`
	// Uin of CMK Creator.
	CreatorUin int `pulumi:"creatorUin"`
	// Delete time of CMK.
	DeletionDate int `pulumi:"deletionDate"`
	// Description of CMK.
	Description string `pulumi:"description"`
	// ID of CMK.
	KeyId string `pulumi:"keyId"`
	// Specify whether to enable key rotation.
	KeyRotationEnabled bool `pulumi:"keyRotationEnabled"`
	// Filter by state of CMK. `0` - all CMKs are queried, `1` - only Enabled CMKs are queried, `2` - only Disabled CMKs are queried, `3` - only PendingDelete CMKs are queried, `4` - only PendingImport CMKs are queried, `5` - only Archived CMKs are queried.
	KeyState string `pulumi:"keyState"`
	// Filter by usage of CMK. Available values include `ALL`, `ENCRYPT_DECRYPT`, `ASYMMETRIC_DECRYPT_RSA_2048`, `ASYMMETRIC_DECRYPT_SM2`, `ASYMMETRIC_SIGN_VERIFY_SM2`, `ASYMMETRIC_SIGN_VERIFY_RSA_2048`, `ASYMMETRIC_SIGN_VERIFY_ECC`. Default value is `ENCRYPT_DECRYPT`.
	KeyUsage string `pulumi:"keyUsage"`
	// Next rotate time of CMK when keyRotationEnabled is true.
	NextRotateTime int `pulumi:"nextRotateTime"`
	// Filter by origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user, `ALL` - all CMKs. Default value is `ALL`.
	Origin string `pulumi:"origin"`
	// Creator of CMK.
	Owner string `pulumi:"owner"`
	// Valid when origin is `EXTERNAL`, it means the effective date of the key material.
	ValidTo int `pulumi:"validTo"`
}

// GetKeysKeyListInput is an input type that accepts GetKeysKeyListArgs and GetKeysKeyListOutput values.
// You can construct a concrete instance of `GetKeysKeyListInput` via:
//
//          GetKeysKeyListArgs{...}
type GetKeysKeyListInput interface {
	pulumi.Input

	ToGetKeysKeyListOutput() GetKeysKeyListOutput
	ToGetKeysKeyListOutputWithContext(context.Context) GetKeysKeyListOutput
}

type GetKeysKeyListArgs struct {
	// Name of CMK.
	Alias pulumi.StringInput `pulumi:"alias"`
	// Create time of CMK.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Uin of CMK Creator.
	CreatorUin pulumi.IntInput `pulumi:"creatorUin"`
	// Delete time of CMK.
	DeletionDate pulumi.IntInput `pulumi:"deletionDate"`
	// Description of CMK.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of CMK.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Specify whether to enable key rotation.
	KeyRotationEnabled pulumi.BoolInput `pulumi:"keyRotationEnabled"`
	// Filter by state of CMK. `0` - all CMKs are queried, `1` - only Enabled CMKs are queried, `2` - only Disabled CMKs are queried, `3` - only PendingDelete CMKs are queried, `4` - only PendingImport CMKs are queried, `5` - only Archived CMKs are queried.
	KeyState pulumi.StringInput `pulumi:"keyState"`
	// Filter by usage of CMK. Available values include `ALL`, `ENCRYPT_DECRYPT`, `ASYMMETRIC_DECRYPT_RSA_2048`, `ASYMMETRIC_DECRYPT_SM2`, `ASYMMETRIC_SIGN_VERIFY_SM2`, `ASYMMETRIC_SIGN_VERIFY_RSA_2048`, `ASYMMETRIC_SIGN_VERIFY_ECC`. Default value is `ENCRYPT_DECRYPT`.
	KeyUsage pulumi.StringInput `pulumi:"keyUsage"`
	// Next rotate time of CMK when keyRotationEnabled is true.
	NextRotateTime pulumi.IntInput `pulumi:"nextRotateTime"`
	// Filter by origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user, `ALL` - all CMKs. Default value is `ALL`.
	Origin pulumi.StringInput `pulumi:"origin"`
	// Creator of CMK.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Valid when origin is `EXTERNAL`, it means the effective date of the key material.
	ValidTo pulumi.IntInput `pulumi:"validTo"`
}

func (GetKeysKeyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyList)(nil)).Elem()
}

func (i GetKeysKeyListArgs) ToGetKeysKeyListOutput() GetKeysKeyListOutput {
	return i.ToGetKeysKeyListOutputWithContext(context.Background())
}

func (i GetKeysKeyListArgs) ToGetKeysKeyListOutputWithContext(ctx context.Context) GetKeysKeyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyListOutput)
}

// GetKeysKeyListArrayInput is an input type that accepts GetKeysKeyListArray and GetKeysKeyListArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyListArrayInput` via:
//
//          GetKeysKeyListArray{ GetKeysKeyListArgs{...} }
type GetKeysKeyListArrayInput interface {
	pulumi.Input

	ToGetKeysKeyListArrayOutput() GetKeysKeyListArrayOutput
	ToGetKeysKeyListArrayOutputWithContext(context.Context) GetKeysKeyListArrayOutput
}

type GetKeysKeyListArray []GetKeysKeyListInput

func (GetKeysKeyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyList)(nil)).Elem()
}

func (i GetKeysKeyListArray) ToGetKeysKeyListArrayOutput() GetKeysKeyListArrayOutput {
	return i.ToGetKeysKeyListArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyListArray) ToGetKeysKeyListArrayOutputWithContext(ctx context.Context) GetKeysKeyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyListArrayOutput)
}

type GetKeysKeyListOutput struct{ *pulumi.OutputState }

func (GetKeysKeyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyList)(nil)).Elem()
}

func (o GetKeysKeyListOutput) ToGetKeysKeyListOutput() GetKeysKeyListOutput {
	return o
}

func (o GetKeysKeyListOutput) ToGetKeysKeyListOutputWithContext(ctx context.Context) GetKeysKeyListOutput {
	return o
}

// Name of CMK.
func (o GetKeysKeyListOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.Alias }).(pulumi.StringOutput)
}

// Create time of CMK.
func (o GetKeysKeyListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Uin of CMK Creator.
func (o GetKeysKeyListOutput) CreatorUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyList) int { return v.CreatorUin }).(pulumi.IntOutput)
}

// Delete time of CMK.
func (o GetKeysKeyListOutput) DeletionDate() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyList) int { return v.DeletionDate }).(pulumi.IntOutput)
}

// Description of CMK.
func (o GetKeysKeyListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.Description }).(pulumi.StringOutput)
}

// ID of CMK.
func (o GetKeysKeyListOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.KeyId }).(pulumi.StringOutput)
}

// Specify whether to enable key rotation.
func (o GetKeysKeyListOutput) KeyRotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeysKeyList) bool { return v.KeyRotationEnabled }).(pulumi.BoolOutput)
}

// Filter by state of CMK. `0` - all CMKs are queried, `1` - only Enabled CMKs are queried, `2` - only Disabled CMKs are queried, `3` - only PendingDelete CMKs are queried, `4` - only PendingImport CMKs are queried, `5` - only Archived CMKs are queried.
func (o GetKeysKeyListOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.KeyState }).(pulumi.StringOutput)
}

// Filter by usage of CMK. Available values include `ALL`, `ENCRYPT_DECRYPT`, `ASYMMETRIC_DECRYPT_RSA_2048`, `ASYMMETRIC_DECRYPT_SM2`, `ASYMMETRIC_SIGN_VERIFY_SM2`, `ASYMMETRIC_SIGN_VERIFY_RSA_2048`, `ASYMMETRIC_SIGN_VERIFY_ECC`. Default value is `ENCRYPT_DECRYPT`.
func (o GetKeysKeyListOutput) KeyUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.KeyUsage }).(pulumi.StringOutput)
}

// Next rotate time of CMK when keyRotationEnabled is true.
func (o GetKeysKeyListOutput) NextRotateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyList) int { return v.NextRotateTime }).(pulumi.IntOutput)
}

// Filter by origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user, `ALL` - all CMKs. Default value is `ALL`.
func (o GetKeysKeyListOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.Origin }).(pulumi.StringOutput)
}

// Creator of CMK.
func (o GetKeysKeyListOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyList) string { return v.Owner }).(pulumi.StringOutput)
}

// Valid when origin is `EXTERNAL`, it means the effective date of the key material.
func (o GetKeysKeyListOutput) ValidTo() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyList) int { return v.ValidTo }).(pulumi.IntOutput)
}

type GetKeysKeyListArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyList)(nil)).Elem()
}

func (o GetKeysKeyListArrayOutput) ToGetKeysKeyListArrayOutput() GetKeysKeyListArrayOutput {
	return o
}

func (o GetKeysKeyListArrayOutput) ToGetKeysKeyListArrayOutputWithContext(ctx context.Context) GetKeysKeyListArrayOutput {
	return o
}

func (o GetKeysKeyListArrayOutput) Index(i pulumi.IntInput) GetKeysKeyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeyList {
		return vs[0].([]GetKeysKeyList)[vs[1].(int)]
	}).(GetKeysKeyListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyListInput)(nil)).Elem(), GetKeysKeyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyListArrayInput)(nil)).Elem(), GetKeysKeyListArray{})
	pulumi.RegisterOutputType(GetKeysKeyListOutput{})
	pulumi.RegisterOutputType(GetKeysKeyListArrayOutput{})
}
