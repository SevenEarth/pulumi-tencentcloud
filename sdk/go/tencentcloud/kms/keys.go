// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Keys(ctx *pulumi.Context, args *KeysArgs, opts ...pulumi.InvokeOption) (*KeysResult, error) {
	var rv KeysResult
	err := ctx.Invoke("tencentcloud:Kms/keys:Keys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Keys.
type KeysArgs struct {
	KeyState         *int                   `pulumi:"keyState"`
	KeyUsage         *string                `pulumi:"keyUsage"`
	OrderType        *int                   `pulumi:"orderType"`
	Origin           *string                `pulumi:"origin"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Role             *int                   `pulumi:"role"`
	SearchKeyAlias   *string                `pulumi:"searchKeyAlias"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by Keys.
type KeysResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	KeyLists         []KeysKeyList          `pulumi:"keyLists"`
	KeyState         *int                   `pulumi:"keyState"`
	KeyUsage         *string                `pulumi:"keyUsage"`
	OrderType        *int                   `pulumi:"orderType"`
	Origin           *string                `pulumi:"origin"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Role             *int                   `pulumi:"role"`
	SearchKeyAlias   *string                `pulumi:"searchKeyAlias"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func KeysOutput(ctx *pulumi.Context, args KeysOutputArgs, opts ...pulumi.InvokeOption) KeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (KeysResult, error) {
			args := v.(KeysArgs)
			r, err := Keys(ctx, &args, opts...)
			var s KeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(KeysResultOutput)
}

// A collection of arguments for invoking Keys.
type KeysOutputArgs struct {
	KeyState         pulumi.IntPtrInput    `pulumi:"keyState"`
	KeyUsage         pulumi.StringPtrInput `pulumi:"keyUsage"`
	OrderType        pulumi.IntPtrInput    `pulumi:"orderType"`
	Origin           pulumi.StringPtrInput `pulumi:"origin"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Role             pulumi.IntPtrInput    `pulumi:"role"`
	SearchKeyAlias   pulumi.StringPtrInput `pulumi:"searchKeyAlias"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (KeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeysArgs)(nil)).Elem()
}

// A collection of values returned by Keys.
type KeysResultOutput struct{ *pulumi.OutputState }

func (KeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeysResult)(nil)).Elem()
}

func (o KeysResultOutput) ToKeysResultOutput() KeysResultOutput {
	return o
}

func (o KeysResultOutput) ToKeysResultOutputWithContext(ctx context.Context) KeysResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o KeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KeysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o KeysResultOutput) KeyLists() KeysKeyListArrayOutput {
	return o.ApplyT(func(v KeysResult) []KeysKeyList { return v.KeyLists }).(KeysKeyListArrayOutput)
}

func (o KeysResultOutput) KeyState() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeysResult) *int { return v.KeyState }).(pulumi.IntPtrOutput)
}

func (o KeysResultOutput) KeyUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysResult) *string { return v.KeyUsage }).(pulumi.StringPtrOutput)
}

func (o KeysResultOutput) OrderType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeysResult) *int { return v.OrderType }).(pulumi.IntPtrOutput)
}

func (o KeysResultOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysResult) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

func (o KeysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o KeysResultOutput) Role() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeysResult) *int { return v.Role }).(pulumi.IntPtrOutput)
}

func (o KeysResultOutput) SearchKeyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysResult) *string { return v.SearchKeyAlias }).(pulumi.StringPtrOutput)
}

func (o KeysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v KeysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(KeysResultOutput{})
}
