// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnspod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of dnspod domainList
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dnspod"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := Dnspod.GetDomainList(ctx, &dnspod.GetDomainListArgs{
// GroupIds: interface{}{
// 1,
// },
// Keyword: pulumi.StringRef(""),
// Packages: []string{
// "",
// },
// ProjectId: pulumi.IntRef(-1),
// RecordCountBegin: pulumi.IntRef(0),
// RecordCountEnd: pulumi.IntRef(100),
// Remark: pulumi.StringRef(""),
// SortField: pulumi.StringRef("UPDATED_ON"),
// SortType: pulumi.StringRef("DESC"),
// Statuses: []string{
// "PAUSE",
// },
// Tags: []dnspod.GetDomainListTag{
// {
// TagKey: "created_by",
// TagValues: []string{
// "terraform",
// },
// },
// },
// Type: "ALL",
// UpdatedAtBegin: pulumi.StringRef("2021-05-01 03:00:00"),
// UpdatedAtEnd: pulumi.StringRef("2024-05-10 20:00:00"),
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// <!--End PulumiCodeChooser -->
func GetDomainList(ctx *pulumi.Context, args *GetDomainListArgs, opts ...pulumi.InvokeOption) (*GetDomainListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainListResult
	err := ctx.Invoke("tencentcloud:Dnspod/getDomainList:getDomainList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainList.
type GetDomainListArgs struct {
	// Get domain names based on domain group id, which can be obtained through the GroupId field in DescribeDomain or DescribeDomainList interface.
	GroupIds []int `pulumi:"groupIds"`
	// Get domain names based on keywords.
	Keyword *string `pulumi:"keyword"`
	// Get domain names based on the package, which can be obtained through the Grade field in DescribeDomain or DescribeDomainList interface.
	Packages []string `pulumi:"packages"`
	// Project ID.
	ProjectId *int `pulumi:"projectId"`
	// The start point of the domain name&amp;#39;s record count query range.
	RecordCountBegin *int `pulumi:"recordCountBegin"`
	// The end point of the domain name&amp;#39;s record count query range.
	RecordCountEnd *int `pulumi:"recordCountEnd"`
	// Get domain names based on remark information.
	Remark *string `pulumi:"remark"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Sorting field. Available values are NAME, STATUS, RECORDS, GRADE, UPDATED_ON. NAME: Domain name STATUS: Domain status RECORDS: Number of records GRADE: Package level UPDATED_ON: Update time.
	SortField *string `pulumi:"sortField"`
	// Sorting type, ascending: ASC, descending: DESC.
	SortType *string `pulumi:"sortType"`
	// Get domain names based on domain status. Available values are ENABLE, LOCK, PAUSE, SPAM. ENABLE: Normal LOCK: Locked PAUSE: Paused SPAM: Banned.
	Statuses []string `pulumi:"statuses"`
	// Tag description list.
	Tags []GetDomainListTag `pulumi:"tags"`
	// Get domain names based on domain group type. Available values are ALL, MINE, SHARE, RECENT. ALL: All MINE: My domain names SHARE: Domain names shared with me RECENT: Recently operated domain names.
	Type string `pulumi:"type"`
	// The start time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-01 03:00:00&amp;#39;.
	UpdatedAtBegin *string `pulumi:"updatedAtBegin"`
	// The end time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-10 20:00:00&amp;#39;.
	UpdatedAtEnd *string `pulumi:"updatedAtEnd"`
}

// A collection of values returned by getDomainList.
type GetDomainListResult struct {
	// Domain list.
	DomainLists []GetDomainListDomainList `pulumi:"domainLists"`
	// Group Id the domain belongs to.
	GroupIds []int `pulumi:"groupIds"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	Keyword          *string  `pulumi:"keyword"`
	Packages         []string `pulumi:"packages"`
	ProjectId        *int     `pulumi:"projectId"`
	RecordCountBegin *int     `pulumi:"recordCountBegin"`
	RecordCountEnd   *int     `pulumi:"recordCountEnd"`
	// Domain remark description.
	Remark           *string `pulumi:"remark"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortField        *string `pulumi:"sortField"`
	SortType         *string `pulumi:"sortType"`
	// Domain status, normal: ENABLE, paused: PAUSE, banned: SPAM.
	Statuses       []string           `pulumi:"statuses"`
	Tags           []GetDomainListTag `pulumi:"tags"`
	Type           string             `pulumi:"type"`
	UpdatedAtBegin *string            `pulumi:"updatedAtBegin"`
	UpdatedAtEnd   *string            `pulumi:"updatedAtEnd"`
}

func GetDomainListOutput(ctx *pulumi.Context, args GetDomainListOutputArgs, opts ...pulumi.InvokeOption) GetDomainListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainListResult, error) {
			args := v.(GetDomainListArgs)
			r, err := GetDomainList(ctx, &args, opts...)
			var s GetDomainListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDomainListResultOutput)
}

// A collection of arguments for invoking getDomainList.
type GetDomainListOutputArgs struct {
	// Get domain names based on domain group id, which can be obtained through the GroupId field in DescribeDomain or DescribeDomainList interface.
	GroupIds pulumi.IntArrayInput `pulumi:"groupIds"`
	// Get domain names based on keywords.
	Keyword pulumi.StringPtrInput `pulumi:"keyword"`
	// Get domain names based on the package, which can be obtained through the Grade field in DescribeDomain or DescribeDomainList interface.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
	// Project ID.
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
	// The start point of the domain name&amp;#39;s record count query range.
	RecordCountBegin pulumi.IntPtrInput `pulumi:"recordCountBegin"`
	// The end point of the domain name&amp;#39;s record count query range.
	RecordCountEnd pulumi.IntPtrInput `pulumi:"recordCountEnd"`
	// Get domain names based on remark information.
	Remark pulumi.StringPtrInput `pulumi:"remark"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Sorting field. Available values are NAME, STATUS, RECORDS, GRADE, UPDATED_ON. NAME: Domain name STATUS: Domain status RECORDS: Number of records GRADE: Package level UPDATED_ON: Update time.
	SortField pulumi.StringPtrInput `pulumi:"sortField"`
	// Sorting type, ascending: ASC, descending: DESC.
	SortType pulumi.StringPtrInput `pulumi:"sortType"`
	// Get domain names based on domain status. Available values are ENABLE, LOCK, PAUSE, SPAM. ENABLE: Normal LOCK: Locked PAUSE: Paused SPAM: Banned.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// Tag description list.
	Tags GetDomainListTagArrayInput `pulumi:"tags"`
	// Get domain names based on domain group type. Available values are ALL, MINE, SHARE, RECENT. ALL: All MINE: My domain names SHARE: Domain names shared with me RECENT: Recently operated domain names.
	Type pulumi.StringInput `pulumi:"type"`
	// The start time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-01 03:00:00&amp;#39;.
	UpdatedAtBegin pulumi.StringPtrInput `pulumi:"updatedAtBegin"`
	// The end time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-10 20:00:00&amp;#39;.
	UpdatedAtEnd pulumi.StringPtrInput `pulumi:"updatedAtEnd"`
}

func (GetDomainListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainListArgs)(nil)).Elem()
}

// A collection of values returned by getDomainList.
type GetDomainListResultOutput struct{ *pulumi.OutputState }

func (GetDomainListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainListResult)(nil)).Elem()
}

func (o GetDomainListResultOutput) ToGetDomainListResultOutput() GetDomainListResultOutput {
	return o
}

func (o GetDomainListResultOutput) ToGetDomainListResultOutputWithContext(ctx context.Context) GetDomainListResultOutput {
	return o
}

// Domain list.
func (o GetDomainListResultOutput) DomainLists() GetDomainListDomainListArrayOutput {
	return o.ApplyT(func(v GetDomainListResult) []GetDomainListDomainList { return v.DomainLists }).(GetDomainListDomainListArrayOutput)
}

// Group Id the domain belongs to.
func (o GetDomainListResultOutput) GroupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetDomainListResult) []int { return v.GroupIds }).(pulumi.IntArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainListResultOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

func (o GetDomainListResultOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainListResult) []string { return v.Packages }).(pulumi.StringArrayOutput)
}

func (o GetDomainListResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func (o GetDomainListResultOutput) RecordCountBegin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *int { return v.RecordCountBegin }).(pulumi.IntPtrOutput)
}

func (o GetDomainListResultOutput) RecordCountEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *int { return v.RecordCountEnd }).(pulumi.IntPtrOutput)
}

// Domain remark description.
func (o GetDomainListResultOutput) Remark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.Remark }).(pulumi.StringPtrOutput)
}

func (o GetDomainListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDomainListResultOutput) SortField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.SortField }).(pulumi.StringPtrOutput)
}

func (o GetDomainListResultOutput) SortType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.SortType }).(pulumi.StringPtrOutput)
}

// Domain status, normal: ENABLE, paused: PAUSE, banned: SPAM.
func (o GetDomainListResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainListResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func (o GetDomainListResultOutput) Tags() GetDomainListTagArrayOutput {
	return o.ApplyT(func(v GetDomainListResult) []GetDomainListTag { return v.Tags }).(GetDomainListTagArrayOutput)
}

func (o GetDomainListResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainListResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDomainListResultOutput) UpdatedAtBegin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.UpdatedAtBegin }).(pulumi.StringPtrOutput)
}

func (o GetDomainListResultOutput) UpdatedAtEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainListResult) *string { return v.UpdatedAtEnd }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainListResultOutput{})
}
