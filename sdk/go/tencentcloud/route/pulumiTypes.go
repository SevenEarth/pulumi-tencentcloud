// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TableRoute struct {
	CidrBlock   string `pulumi:"cidrBlock"`
	Description string `pulumi:"description"`
	NextHub     string `pulumi:"nextHub"`
	NextType    string `pulumi:"nextType"`
}

// TableRouteInput is an input type that accepts TableRouteArgs and TableRouteOutput values.
// You can construct a concrete instance of `TableRouteInput` via:
//
//          TableRouteArgs{...}
type TableRouteInput interface {
	pulumi.Input

	ToTableRouteOutput() TableRouteOutput
	ToTableRouteOutputWithContext(context.Context) TableRouteOutput
}

type TableRouteArgs struct {
	CidrBlock   pulumi.StringInput `pulumi:"cidrBlock"`
	Description pulumi.StringInput `pulumi:"description"`
	NextHub     pulumi.StringInput `pulumi:"nextHub"`
	NextType    pulumi.StringInput `pulumi:"nextType"`
}

func (TableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableRoute)(nil)).Elem()
}

func (i TableRouteArgs) ToTableRouteOutput() TableRouteOutput {
	return i.ToTableRouteOutputWithContext(context.Background())
}

func (i TableRouteArgs) ToTableRouteOutputWithContext(ctx context.Context) TableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableRouteOutput)
}

// TableRouteArrayInput is an input type that accepts TableRouteArray and TableRouteArrayOutput values.
// You can construct a concrete instance of `TableRouteArrayInput` via:
//
//          TableRouteArray{ TableRouteArgs{...} }
type TableRouteArrayInput interface {
	pulumi.Input

	ToTableRouteArrayOutput() TableRouteArrayOutput
	ToTableRouteArrayOutputWithContext(context.Context) TableRouteArrayOutput
}

type TableRouteArray []TableRouteInput

func (TableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableRoute)(nil)).Elem()
}

func (i TableRouteArray) ToTableRouteArrayOutput() TableRouteArrayOutput {
	return i.ToTableRouteArrayOutputWithContext(context.Background())
}

func (i TableRouteArray) ToTableRouteArrayOutputWithContext(ctx context.Context) TableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableRouteArrayOutput)
}

type TableRouteOutput struct{ *pulumi.OutputState }

func (TableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableRoute)(nil)).Elem()
}

func (o TableRouteOutput) ToTableRouteOutput() TableRouteOutput {
	return o
}

func (o TableRouteOutput) ToTableRouteOutputWithContext(ctx context.Context) TableRouteOutput {
	return o
}

func (o TableRouteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TableRoute) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o TableRouteOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TableRoute) string { return v.Description }).(pulumi.StringOutput)
}

func (o TableRouteOutput) NextHub() pulumi.StringOutput {
	return o.ApplyT(func(v TableRoute) string { return v.NextHub }).(pulumi.StringOutput)
}

func (o TableRouteOutput) NextType() pulumi.StringOutput {
	return o.ApplyT(func(v TableRoute) string { return v.NextType }).(pulumi.StringOutput)
}

type TableRouteArrayOutput struct{ *pulumi.OutputState }

func (TableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableRoute)(nil)).Elem()
}

func (o TableRouteArrayOutput) ToTableRouteArrayOutput() TableRouteArrayOutput {
	return o
}

func (o TableRouteArrayOutput) ToTableRouteArrayOutputWithContext(ctx context.Context) TableRouteArrayOutput {
	return o
}

func (o TableRouteArrayOutput) Index(i pulumi.IntInput) TableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableRoute {
		return vs[0].([]TableRoute)[vs[1].(int)]
	}).(TableRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableRouteInput)(nil)).Elem(), TableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableRouteArrayInput)(nil)).Elem(), TableRouteArray{})
	pulumi.RegisterOutputType(TableRouteOutput{})
	pulumi.RegisterOutputType(TableRouteArrayOutput{})
}
