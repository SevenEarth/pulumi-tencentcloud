# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'BucketsResult',
    'AwaitableBucketsResult',
    'buckets',
    'buckets_output',
]

@pulumi.output_type
class BucketsResult:
    """
    A collection of values returned by Buckets.
    """
    def __init__(__self__, bucket_lists=None, bucket_prefix=None, id=None, result_output_file=None, tags=None):
        if bucket_lists and not isinstance(bucket_lists, list):
            raise TypeError("Expected argument 'bucket_lists' to be a list")
        pulumi.set(__self__, "bucket_lists", bucket_lists)
        if bucket_prefix and not isinstance(bucket_prefix, str):
            raise TypeError("Expected argument 'bucket_prefix' to be a str")
        pulumi.set(__self__, "bucket_prefix", bucket_prefix)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="bucketLists")
    def bucket_lists(self) -> Sequence['outputs.BucketsBucketListResult']:
        return pulumi.get(self, "bucket_lists")

    @property
    @pulumi.getter(name="bucketPrefix")
    def bucket_prefix(self) -> Optional[str]:
        return pulumi.get(self, "bucket_prefix")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, Any]]:
        return pulumi.get(self, "tags")


class AwaitableBucketsResult(BucketsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return BucketsResult(
            bucket_lists=self.bucket_lists,
            bucket_prefix=self.bucket_prefix,
            id=self.id,
            result_output_file=self.result_output_file,
            tags=self.tags)


def buckets(bucket_prefix: Optional[str] = None,
            result_output_file: Optional[str] = None,
            tags: Optional[Mapping[str, Any]] = None,
            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableBucketsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['bucketPrefix'] = bucket_prefix
    __args__['resultOutputFile'] = result_output_file
    __args__['tags'] = tags
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cos/buckets:Buckets', __args__, opts=opts, typ=BucketsResult).value

    return AwaitableBucketsResult(
        bucket_lists=__ret__.bucket_lists,
        bucket_prefix=__ret__.bucket_prefix,
        id=__ret__.id,
        result_output_file=__ret__.result_output_file,
        tags=__ret__.tags)


@_utilities.lift_output_func(buckets)
def buckets_output(bucket_prefix: Optional[pulumi.Input[Optional[str]]] = None,
                   result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                   tags: Optional[pulumi.Input[Optional[Mapping[str, Any]]]] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[BucketsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
