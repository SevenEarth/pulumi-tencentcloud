# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'APIGatewayAPIKeysListResult',
    'APIGatewayAPIsListResult',
    'APIGatewayAPIsListRequestParameterResult',
    'APIGatewayAPIsListResponseErrorCodeResult',
    'APIGatewayCustomerDomainsListResult',
    'APIGatewayCustomerDomainsListPathMappingResult',
    'APIGatewayIpStrategyListResult',
    'APIGatewayIpStrategyListAttachListResult',
    'APIGatewayServicesListResult',
    'APIGatewayServicesListUsagePlanListResult',
    'APIGatewayThrottlingApisListResult',
    'APIGatewayThrottlingApisListApiEnvironmentStrategyResult',
    'APIGatewayThrottlingApisListApiEnvironmentStrategyStrategyListResult',
    'APIGatewayThrottlingServicesListResult',
    'APIGatewayThrottlingServicesListEnvironmentResult',
    'APIGatewayUsagePlanEnvironmentsListResult',
    'APIGatewayUsagePlansListResult',
    'TCRInstancesInstanceListResult',
    'TCRNamespacesNamespaceListResult',
    'TCRRepositoriesRepositoryListResult',
    'TCRTokensTokenListResult',
    'TCRVPCAttachmentsVpcAttachmentListResult',
]

@pulumi.output_type
class APIGatewayAPIKeysListResult(dict):
    def __init__(__self__, *,
                 access_key_secret: str,
                 api_key_id: str,
                 create_time: str,
                 modify_time: str,
                 status: str):
        pulumi.set(__self__, "access_key_secret", access_key_secret)
        pulumi.set(__self__, "api_key_id", api_key_id)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="accessKeySecret")
    def access_key_secret(self) -> str:
        return pulumi.get(self, "access_key_secret")

    @property
    @pulumi.getter(name="apiKeyId")
    def api_key_id(self) -> str:
        return pulumi.get(self, "api_key_id")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")


@pulumi.output_type
class APIGatewayAPIsListResult(dict):
    def __init__(__self__, *,
                 api_desc: str,
                 api_name: str,
                 auth_type: str,
                 create_time: str,
                 enable_cors: bool,
                 modify_time: str,
                 protocol: str,
                 request_config_method: str,
                 request_config_path: str,
                 request_parameters: Sequence['outputs.APIGatewayAPIsListRequestParameterResult'],
                 response_error_codes: Sequence['outputs.APIGatewayAPIsListResponseErrorCodeResult'],
                 response_fail_example: str,
                 response_success_example: str,
                 response_type: str,
                 service_config_method: str,
                 service_config_mock_return_message: str,
                 service_config_path: str,
                 service_config_product: str,
                 service_config_scf_function_name: str,
                 service_config_scf_function_namespace: str,
                 service_config_scf_function_qualifier: str,
                 service_config_timeout: int,
                 service_config_type: str,
                 service_config_url: str,
                 service_config_vpc_id: str,
                 service_id: str):
        pulumi.set(__self__, "api_desc", api_desc)
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "auth_type", auth_type)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "enable_cors", enable_cors)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "request_config_method", request_config_method)
        pulumi.set(__self__, "request_config_path", request_config_path)
        pulumi.set(__self__, "request_parameters", request_parameters)
        pulumi.set(__self__, "response_error_codes", response_error_codes)
        pulumi.set(__self__, "response_fail_example", response_fail_example)
        pulumi.set(__self__, "response_success_example", response_success_example)
        pulumi.set(__self__, "response_type", response_type)
        pulumi.set(__self__, "service_config_method", service_config_method)
        pulumi.set(__self__, "service_config_mock_return_message", service_config_mock_return_message)
        pulumi.set(__self__, "service_config_path", service_config_path)
        pulumi.set(__self__, "service_config_product", service_config_product)
        pulumi.set(__self__, "service_config_scf_function_name", service_config_scf_function_name)
        pulumi.set(__self__, "service_config_scf_function_namespace", service_config_scf_function_namespace)
        pulumi.set(__self__, "service_config_scf_function_qualifier", service_config_scf_function_qualifier)
        pulumi.set(__self__, "service_config_timeout", service_config_timeout)
        pulumi.set(__self__, "service_config_type", service_config_type)
        pulumi.set(__self__, "service_config_url", service_config_url)
        pulumi.set(__self__, "service_config_vpc_id", service_config_vpc_id)
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="apiDesc")
    def api_desc(self) -> str:
        return pulumi.get(self, "api_desc")

    @property
    @pulumi.getter(name="apiName")
    def api_name(self) -> str:
        return pulumi.get(self, "api_name")

    @property
    @pulumi.getter(name="authType")
    def auth_type(self) -> str:
        return pulumi.get(self, "auth_type")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="enableCors")
    def enable_cors(self) -> bool:
        return pulumi.get(self, "enable_cors")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="requestConfigMethod")
    def request_config_method(self) -> str:
        return pulumi.get(self, "request_config_method")

    @property
    @pulumi.getter(name="requestConfigPath")
    def request_config_path(self) -> str:
        return pulumi.get(self, "request_config_path")

    @property
    @pulumi.getter(name="requestParameters")
    def request_parameters(self) -> Sequence['outputs.APIGatewayAPIsListRequestParameterResult']:
        return pulumi.get(self, "request_parameters")

    @property
    @pulumi.getter(name="responseErrorCodes")
    def response_error_codes(self) -> Sequence['outputs.APIGatewayAPIsListResponseErrorCodeResult']:
        return pulumi.get(self, "response_error_codes")

    @property
    @pulumi.getter(name="responseFailExample")
    def response_fail_example(self) -> str:
        return pulumi.get(self, "response_fail_example")

    @property
    @pulumi.getter(name="responseSuccessExample")
    def response_success_example(self) -> str:
        return pulumi.get(self, "response_success_example")

    @property
    @pulumi.getter(name="responseType")
    def response_type(self) -> str:
        return pulumi.get(self, "response_type")

    @property
    @pulumi.getter(name="serviceConfigMethod")
    def service_config_method(self) -> str:
        return pulumi.get(self, "service_config_method")

    @property
    @pulumi.getter(name="serviceConfigMockReturnMessage")
    def service_config_mock_return_message(self) -> str:
        return pulumi.get(self, "service_config_mock_return_message")

    @property
    @pulumi.getter(name="serviceConfigPath")
    def service_config_path(self) -> str:
        return pulumi.get(self, "service_config_path")

    @property
    @pulumi.getter(name="serviceConfigProduct")
    def service_config_product(self) -> str:
        return pulumi.get(self, "service_config_product")

    @property
    @pulumi.getter(name="serviceConfigScfFunctionName")
    def service_config_scf_function_name(self) -> str:
        return pulumi.get(self, "service_config_scf_function_name")

    @property
    @pulumi.getter(name="serviceConfigScfFunctionNamespace")
    def service_config_scf_function_namespace(self) -> str:
        return pulumi.get(self, "service_config_scf_function_namespace")

    @property
    @pulumi.getter(name="serviceConfigScfFunctionQualifier")
    def service_config_scf_function_qualifier(self) -> str:
        return pulumi.get(self, "service_config_scf_function_qualifier")

    @property
    @pulumi.getter(name="serviceConfigTimeout")
    def service_config_timeout(self) -> int:
        return pulumi.get(self, "service_config_timeout")

    @property
    @pulumi.getter(name="serviceConfigType")
    def service_config_type(self) -> str:
        return pulumi.get(self, "service_config_type")

    @property
    @pulumi.getter(name="serviceConfigUrl")
    def service_config_url(self) -> str:
        return pulumi.get(self, "service_config_url")

    @property
    @pulumi.getter(name="serviceConfigVpcId")
    def service_config_vpc_id(self) -> str:
        return pulumi.get(self, "service_config_vpc_id")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")


@pulumi.output_type
class APIGatewayAPIsListRequestParameterResult(dict):
    def __init__(__self__, *,
                 default_value: str,
                 desc: str,
                 name: str,
                 position: str,
                 required: bool,
                 type: str):
        pulumi.set(__self__, "default_value", default_value)
        pulumi.set(__self__, "desc", desc)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "position", position)
        pulumi.set(__self__, "required", required)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> str:
        return pulumi.get(self, "default_value")

    @property
    @pulumi.getter
    def desc(self) -> str:
        return pulumi.get(self, "desc")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def position(self) -> str:
        return pulumi.get(self, "position")

    @property
    @pulumi.getter
    def required(self) -> bool:
        return pulumi.get(self, "required")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


@pulumi.output_type
class APIGatewayAPIsListResponseErrorCodeResult(dict):
    def __init__(__self__, *,
                 code: int,
                 converted_code: int,
                 desc: str,
                 msg: str,
                 need_convert: bool):
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "converted_code", converted_code)
        pulumi.set(__self__, "desc", desc)
        pulumi.set(__self__, "msg", msg)
        pulumi.set(__self__, "need_convert", need_convert)

    @property
    @pulumi.getter
    def code(self) -> int:
        return pulumi.get(self, "code")

    @property
    @pulumi.getter(name="convertedCode")
    def converted_code(self) -> int:
        return pulumi.get(self, "converted_code")

    @property
    @pulumi.getter
    def desc(self) -> str:
        return pulumi.get(self, "desc")

    @property
    @pulumi.getter
    def msg(self) -> str:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter(name="needConvert")
    def need_convert(self) -> bool:
        return pulumi.get(self, "need_convert")


@pulumi.output_type
class APIGatewayCustomerDomainsListResult(dict):
    def __init__(__self__, *,
                 certificate_id: str,
                 domain_name: str,
                 is_default_mapping: bool,
                 is_status_on: bool,
                 net_type: str,
                 path_mappings: Sequence['outputs.APIGatewayCustomerDomainsListPathMappingResult'],
                 protocol: str):
        pulumi.set(__self__, "certificate_id", certificate_id)
        pulumi.set(__self__, "domain_name", domain_name)
        pulumi.set(__self__, "is_default_mapping", is_default_mapping)
        pulumi.set(__self__, "is_status_on", is_status_on)
        pulumi.set(__self__, "net_type", net_type)
        pulumi.set(__self__, "path_mappings", path_mappings)
        pulumi.set(__self__, "protocol", protocol)

    @property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> str:
        return pulumi.get(self, "certificate_id")

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> str:
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="isDefaultMapping")
    def is_default_mapping(self) -> bool:
        return pulumi.get(self, "is_default_mapping")

    @property
    @pulumi.getter(name="isStatusOn")
    def is_status_on(self) -> bool:
        return pulumi.get(self, "is_status_on")

    @property
    @pulumi.getter(name="netType")
    def net_type(self) -> str:
        return pulumi.get(self, "net_type")

    @property
    @pulumi.getter(name="pathMappings")
    def path_mappings(self) -> Sequence['outputs.APIGatewayCustomerDomainsListPathMappingResult']:
        return pulumi.get(self, "path_mappings")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")


@pulumi.output_type
class APIGatewayCustomerDomainsListPathMappingResult(dict):
    def __init__(__self__, *,
                 environment: str,
                 path: str):
        pulumi.set(__self__, "environment", environment)
        pulumi.set(__self__, "path", path)

    @property
    @pulumi.getter
    def environment(self) -> str:
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter
    def path(self) -> str:
        return pulumi.get(self, "path")


@pulumi.output_type
class APIGatewayIpStrategyListResult(dict):
    def __init__(__self__, *,
                 attach_lists: Sequence['outputs.APIGatewayIpStrategyListAttachListResult'],
                 bind_api_total_count: int,
                 create_time: str,
                 ip_list: str,
                 modify_time: str,
                 service_id: str,
                 strategy_id: str,
                 strategy_name: str,
                 strategy_type: str):
        pulumi.set(__self__, "attach_lists", attach_lists)
        pulumi.set(__self__, "bind_api_total_count", bind_api_total_count)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "ip_list", ip_list)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "strategy_id", strategy_id)
        pulumi.set(__self__, "strategy_name", strategy_name)
        pulumi.set(__self__, "strategy_type", strategy_type)

    @property
    @pulumi.getter(name="attachLists")
    def attach_lists(self) -> Sequence['outputs.APIGatewayIpStrategyListAttachListResult']:
        return pulumi.get(self, "attach_lists")

    @property
    @pulumi.getter(name="bindApiTotalCount")
    def bind_api_total_count(self) -> int:
        return pulumi.get(self, "bind_api_total_count")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="ipList")
    def ip_list(self) -> str:
        return pulumi.get(self, "ip_list")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="strategyId")
    def strategy_id(self) -> str:
        return pulumi.get(self, "strategy_id")

    @property
    @pulumi.getter(name="strategyName")
    def strategy_name(self) -> str:
        return pulumi.get(self, "strategy_name")

    @property
    @pulumi.getter(name="strategyType")
    def strategy_type(self) -> str:
        return pulumi.get(self, "strategy_type")


@pulumi.output_type
class APIGatewayIpStrategyListAttachListResult(dict):
    def __init__(__self__, *,
                 api_business_type: str,
                 api_desc: str,
                 api_id: str,
                 api_name: str,
                 api_type: str,
                 auth_relation_api_id: str,
                 auth_type: str,
                 create_time: str,
                 method: str,
                 modify_time: str,
                 oauth_config: Mapping[str, Any],
                 path: str,
                 protocol: str,
                 relation_business_api_ids: Sequence[str],
                 service_id: str,
                 tags: Sequence[str],
                 uniq_vpc_id: str,
                 vpc_id: int):
        pulumi.set(__self__, "api_business_type", api_business_type)
        pulumi.set(__self__, "api_desc", api_desc)
        pulumi.set(__self__, "api_id", api_id)
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "api_type", api_type)
        pulumi.set(__self__, "auth_relation_api_id", auth_relation_api_id)
        pulumi.set(__self__, "auth_type", auth_type)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "oauth_config", oauth_config)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "relation_business_api_ids", relation_business_api_ids)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="apiBusinessType")
    def api_business_type(self) -> str:
        return pulumi.get(self, "api_business_type")

    @property
    @pulumi.getter(name="apiDesc")
    def api_desc(self) -> str:
        return pulumi.get(self, "api_desc")

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> str:
        return pulumi.get(self, "api_id")

    @property
    @pulumi.getter(name="apiName")
    def api_name(self) -> str:
        return pulumi.get(self, "api_name")

    @property
    @pulumi.getter(name="apiType")
    def api_type(self) -> str:
        return pulumi.get(self, "api_type")

    @property
    @pulumi.getter(name="authRelationApiId")
    def auth_relation_api_id(self) -> str:
        return pulumi.get(self, "auth_relation_api_id")

    @property
    @pulumi.getter(name="authType")
    def auth_type(self) -> str:
        return pulumi.get(self, "auth_type")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def method(self) -> str:
        return pulumi.get(self, "method")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter(name="oauthConfig")
    def oauth_config(self) -> Mapping[str, Any]:
        return pulumi.get(self, "oauth_config")

    @property
    @pulumi.getter
    def path(self) -> str:
        return pulumi.get(self, "path")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="relationBusinessApiIds")
    def relation_business_api_ids(self) -> Sequence[str]:
        return pulumi.get(self, "relation_business_api_ids")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter
    def tags(self) -> Sequence[str]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> str:
        return pulumi.get(self, "uniq_vpc_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> int:
        return pulumi.get(self, "vpc_id")


@pulumi.output_type
class APIGatewayServicesListResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 exclusive_set_name: str,
                 inner_http_port: int,
                 inner_https_port: int,
                 internal_sub_domain: str,
                 ip_version: str,
                 modify_time: str,
                 net_types: Sequence[str],
                 outer_sub_domain: str,
                 protocol: str,
                 service_desc: str,
                 service_id: str,
                 service_name: str,
                 usage_plan_lists: Sequence['outputs.APIGatewayServicesListUsagePlanListResult']):
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "exclusive_set_name", exclusive_set_name)
        pulumi.set(__self__, "inner_http_port", inner_http_port)
        pulumi.set(__self__, "inner_https_port", inner_https_port)
        pulumi.set(__self__, "internal_sub_domain", internal_sub_domain)
        pulumi.set(__self__, "ip_version", ip_version)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "net_types", net_types)
        pulumi.set(__self__, "outer_sub_domain", outer_sub_domain)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "service_desc", service_desc)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "service_name", service_name)
        pulumi.set(__self__, "usage_plan_lists", usage_plan_lists)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="exclusiveSetName")
    def exclusive_set_name(self) -> str:
        return pulumi.get(self, "exclusive_set_name")

    @property
    @pulumi.getter(name="innerHttpPort")
    def inner_http_port(self) -> int:
        return pulumi.get(self, "inner_http_port")

    @property
    @pulumi.getter(name="innerHttpsPort")
    def inner_https_port(self) -> int:
        return pulumi.get(self, "inner_https_port")

    @property
    @pulumi.getter(name="internalSubDomain")
    def internal_sub_domain(self) -> str:
        return pulumi.get(self, "internal_sub_domain")

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> str:
        return pulumi.get(self, "ip_version")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter(name="netTypes")
    def net_types(self) -> Sequence[str]:
        return pulumi.get(self, "net_types")

    @property
    @pulumi.getter(name="outerSubDomain")
    def outer_sub_domain(self) -> str:
        return pulumi.get(self, "outer_sub_domain")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="serviceDesc")
    def service_desc(self) -> str:
        return pulumi.get(self, "service_desc")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> str:
        return pulumi.get(self, "service_name")

    @property
    @pulumi.getter(name="usagePlanLists")
    def usage_plan_lists(self) -> Sequence['outputs.APIGatewayServicesListUsagePlanListResult']:
        return pulumi.get(self, "usage_plan_lists")


@pulumi.output_type
class APIGatewayServicesListUsagePlanListResult(dict):
    def __init__(__self__, *,
                 api_id: str,
                 bind_type: str,
                 usage_plan_id: str,
                 usage_plan_name: str):
        pulumi.set(__self__, "api_id", api_id)
        pulumi.set(__self__, "bind_type", bind_type)
        pulumi.set(__self__, "usage_plan_id", usage_plan_id)
        pulumi.set(__self__, "usage_plan_name", usage_plan_name)

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> str:
        return pulumi.get(self, "api_id")

    @property
    @pulumi.getter(name="bindType")
    def bind_type(self) -> str:
        return pulumi.get(self, "bind_type")

    @property
    @pulumi.getter(name="usagePlanId")
    def usage_plan_id(self) -> str:
        return pulumi.get(self, "usage_plan_id")

    @property
    @pulumi.getter(name="usagePlanName")
    def usage_plan_name(self) -> str:
        return pulumi.get(self, "usage_plan_name")


@pulumi.output_type
class APIGatewayThrottlingApisListResult(dict):
    def __init__(__self__, *,
                 api_environment_strategies: Sequence['outputs.APIGatewayThrottlingApisListApiEnvironmentStrategyResult'],
                 service_id: str):
        pulumi.set(__self__, "api_environment_strategies", api_environment_strategies)
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="apiEnvironmentStrategies")
    def api_environment_strategies(self) -> Sequence['outputs.APIGatewayThrottlingApisListApiEnvironmentStrategyResult']:
        return pulumi.get(self, "api_environment_strategies")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")


@pulumi.output_type
class APIGatewayThrottlingApisListApiEnvironmentStrategyResult(dict):
    def __init__(__self__, *,
                 api_id: str,
                 api_name: str,
                 method: str,
                 path: str,
                 strategy_lists: Sequence['outputs.APIGatewayThrottlingApisListApiEnvironmentStrategyStrategyListResult']):
        pulumi.set(__self__, "api_id", api_id)
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "strategy_lists", strategy_lists)

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> str:
        return pulumi.get(self, "api_id")

    @property
    @pulumi.getter(name="apiName")
    def api_name(self) -> str:
        return pulumi.get(self, "api_name")

    @property
    @pulumi.getter
    def method(self) -> str:
        return pulumi.get(self, "method")

    @property
    @pulumi.getter
    def path(self) -> str:
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="strategyLists")
    def strategy_lists(self) -> Sequence['outputs.APIGatewayThrottlingApisListApiEnvironmentStrategyStrategyListResult']:
        return pulumi.get(self, "strategy_lists")


@pulumi.output_type
class APIGatewayThrottlingApisListApiEnvironmentStrategyStrategyListResult(dict):
    def __init__(__self__, *,
                 environment_name: str,
                 quota: int):
        pulumi.set(__self__, "environment_name", environment_name)
        pulumi.set(__self__, "quota", quota)

    @property
    @pulumi.getter(name="environmentName")
    def environment_name(self) -> str:
        return pulumi.get(self, "environment_name")

    @property
    @pulumi.getter
    def quota(self) -> int:
        return pulumi.get(self, "quota")


@pulumi.output_type
class APIGatewayThrottlingServicesListResult(dict):
    def __init__(__self__, *,
                 environments: Sequence['outputs.APIGatewayThrottlingServicesListEnvironmentResult'],
                 service_id: str):
        pulumi.set(__self__, "environments", environments)
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter
    def environments(self) -> Sequence['outputs.APIGatewayThrottlingServicesListEnvironmentResult']:
        return pulumi.get(self, "environments")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")


@pulumi.output_type
class APIGatewayThrottlingServicesListEnvironmentResult(dict):
    def __init__(__self__, *,
                 environment_name: str,
                 status: int,
                 strategy: int,
                 url: str,
                 version_name: str):
        pulumi.set(__self__, "environment_name", environment_name)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "strategy", strategy)
        pulumi.set(__self__, "url", url)
        pulumi.set(__self__, "version_name", version_name)

    @property
    @pulumi.getter(name="environmentName")
    def environment_name(self) -> str:
        return pulumi.get(self, "environment_name")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def strategy(self) -> int:
        return pulumi.get(self, "strategy")

    @property
    @pulumi.getter
    def url(self) -> str:
        return pulumi.get(self, "url")

    @property
    @pulumi.getter(name="versionName")
    def version_name(self) -> str:
        return pulumi.get(self, "version_name")


@pulumi.output_type
class APIGatewayUsagePlanEnvironmentsListResult(dict):
    def __init__(__self__, *,
                 api_id: str,
                 api_name: str,
                 create_time: str,
                 environment: str,
                 method: str,
                 modify_time: str,
                 path: str,
                 service_id: str,
                 service_name: str):
        pulumi.set(__self__, "api_id", api_id)
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "environment", environment)
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "service_name", service_name)

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> str:
        return pulumi.get(self, "api_id")

    @property
    @pulumi.getter(name="apiName")
    def api_name(self) -> str:
        return pulumi.get(self, "api_name")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def environment(self) -> str:
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter
    def method(self) -> str:
        return pulumi.get(self, "method")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter
    def path(self) -> str:
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> str:
        return pulumi.get(self, "service_name")


@pulumi.output_type
class APIGatewayUsagePlansListResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 max_request_num: int,
                 max_request_num_pre_sec: int,
                 modify_time: str,
                 usage_plan_desc: str,
                 usage_plan_id: str,
                 usage_plan_name: str):
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "max_request_num", max_request_num)
        pulumi.set(__self__, "max_request_num_pre_sec", max_request_num_pre_sec)
        pulumi.set(__self__, "modify_time", modify_time)
        pulumi.set(__self__, "usage_plan_desc", usage_plan_desc)
        pulumi.set(__self__, "usage_plan_id", usage_plan_id)
        pulumi.set(__self__, "usage_plan_name", usage_plan_name)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="maxRequestNum")
    def max_request_num(self) -> int:
        return pulumi.get(self, "max_request_num")

    @property
    @pulumi.getter(name="maxRequestNumPreSec")
    def max_request_num_pre_sec(self) -> int:
        return pulumi.get(self, "max_request_num_pre_sec")

    @property
    @pulumi.getter(name="modifyTime")
    def modify_time(self) -> str:
        return pulumi.get(self, "modify_time")

    @property
    @pulumi.getter(name="usagePlanDesc")
    def usage_plan_desc(self) -> str:
        return pulumi.get(self, "usage_plan_desc")

    @property
    @pulumi.getter(name="usagePlanId")
    def usage_plan_id(self) -> str:
        return pulumi.get(self, "usage_plan_id")

    @property
    @pulumi.getter(name="usagePlanName")
    def usage_plan_name(self) -> str:
        return pulumi.get(self, "usage_plan_name")


@pulumi.output_type
class TCRInstancesInstanceListResult(dict):
    def __init__(__self__, *,
                 id: str,
                 instance_type: str,
                 internal_end_point: str,
                 name: str,
                 public_domain: str,
                 status: str,
                 tags: Mapping[str, Any]):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_type", instance_type)
        pulumi.set(__self__, "internal_end_point", internal_end_point)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "public_domain", public_domain)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> str:
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="internalEndPoint")
    def internal_end_point(self) -> str:
        return pulumi.get(self, "internal_end_point")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="publicDomain")
    def public_domain(self) -> str:
        return pulumi.get(self, "public_domain")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, Any]:
        return pulumi.get(self, "tags")


@pulumi.output_type
class TCRNamespacesNamespaceListResult(dict):
    def __init__(__self__, *,
                 is_public: bool,
                 name: str):
        pulumi.set(__self__, "is_public", is_public)
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="isPublic")
    def is_public(self) -> bool:
        return pulumi.get(self, "is_public")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


@pulumi.output_type
class TCRRepositoriesRepositoryListResult(dict):
    def __init__(__self__, *,
                 brief_desc: str,
                 create_time: str,
                 description: str,
                 is_public: bool,
                 name: str,
                 namespace_name: str,
                 update_time: str,
                 url: str):
        pulumi.set(__self__, "brief_desc", brief_desc)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "is_public", is_public)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "namespace_name", namespace_name)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="briefDesc")
    def brief_desc(self) -> str:
        return pulumi.get(self, "brief_desc")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="isPublic")
    def is_public(self) -> bool:
        return pulumi.get(self, "is_public")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> str:
        return pulumi.get(self, "namespace_name")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter
    def url(self) -> str:
        return pulumi.get(self, "url")


@pulumi.output_type
class TCRTokensTokenListResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 description: str,
                 enable: bool,
                 token_id: str):
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "token_id", token_id)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def enable(self) -> bool:
        return pulumi.get(self, "enable")

    @property
    @pulumi.getter(name="tokenId")
    def token_id(self) -> str:
        return pulumi.get(self, "token_id")


@pulumi.output_type
class TCRVPCAttachmentsVpcAttachmentListResult(dict):
    def __init__(__self__, *,
                 access_ip: str,
                 enable_public_domain_dns: bool,
                 enable_vpc_domain_dns: bool,
                 status: str,
                 subnet_id: str,
                 vpc_id: str):
        pulumi.set(__self__, "access_ip", access_ip)
        pulumi.set(__self__, "enable_public_domain_dns", enable_public_domain_dns)
        pulumi.set(__self__, "enable_vpc_domain_dns", enable_vpc_domain_dns)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="accessIp")
    def access_ip(self) -> str:
        return pulumi.get(self, "access_ip")

    @property
    @pulumi.getter(name="enablePublicDomainDns")
    def enable_public_domain_dns(self) -> bool:
        return pulumi.get(self, "enable_public_domain_dns")

    @property
    @pulumi.getter(name="enableVpcDomainDns")
    def enable_vpc_domain_dns(self) -> bool:
        return pulumi.get(self, "enable_vpc_domain_dns")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        return pulumi.get(self, "vpc_id")


