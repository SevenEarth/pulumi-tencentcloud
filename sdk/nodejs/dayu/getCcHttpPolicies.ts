// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query dayu CC http policies
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const idTest = tencentcloud.Dayu.getCcHttpPolicies({
 *     resourceType: tencentcloud_dayu_cc_http_policy.test_policy.resource_type,
 *     resourceId: tencentcloud_dayu_cc_http_policy.test_policy.resource_id,
 *     policyId: tencentcloud_dayu_cc_http_policy.test_policy.policy_id,
 * });
 * const nameTest = tencentcloud.Dayu.getCcHttpPolicies({
 *     resourceType: tencentcloud_dayu_cc_http_policy.test_policy.resource_type,
 *     resourceId: tencentcloud_dayu_cc_http_policy.test_policy.resource_id,
 *     name: tencentcloud_dayu_cc_http_policy.test_policy.name,
 * });
 * ```
 */
export function getCcHttpPolicies(args: GetCcHttpPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetCcHttpPoliciesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Dayu/getCcHttpPolicies:getCcHttpPolicies", {
        "name": args.name,
        "policyId": args.policyId,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCcHttpPolicies.
 */
export interface GetCcHttpPoliciesArgs {
    /**
     * Name of the CC http policy to be queried.
     */
    name?: string;
    /**
     * Id of the CC http policy to be queried.
     */
    policyId?: string;
    /**
     * ID of the resource that the CC http policy works for.
     */
    resourceId: string;
    /**
     * Type of the resource that the CC http policy works for, valid values are `bgpip`, `bgp`, `bgp-multip` and `net`.
     */
    resourceType: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCcHttpPolicies.
 */
export interface GetCcHttpPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of CC http policies. Each element contains the following attributes:
     */
    readonly lists: outputs.Dayu.GetCcHttpPoliciesList[];
    /**
     * Name of the CC self-define http policy.
     */
    readonly name?: string;
    /**
     * ID of the CC self-define http policy.
     */
    readonly policyId?: string;
    /**
     * ID of the resource that the CC self-define http policy works for.
     */
    readonly resourceId: string;
    /**
     * Type of the resource that the CC self-define http policy works for.
     */
    readonly resourceType: string;
    readonly resultOutputFile?: string;
}

export function getCcHttpPoliciesOutput(args: GetCcHttpPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCcHttpPoliciesResult> {
    return pulumi.output(args).apply(a => getCcHttpPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getCcHttpPolicies.
 */
export interface GetCcHttpPoliciesOutputArgs {
    /**
     * Name of the CC http policy to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the CC http policy to be queried.
     */
    policyId?: pulumi.Input<string>;
    /**
     * ID of the resource that the CC http policy works for.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Type of the resource that the CC http policy works for, valid values are `bgpip`, `bgp`, `bgp-multip` and `net`.
     */
    resourceType: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
