// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of kms getParametersForImport
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.Kms.getGetParametersForImport({
 *     keyId: "786aea8c-4aec-11ee-b601-525400281a45",
 *     wrappingAlgorithm: "RSAES_OAEP_SHA_1",
 *     wrappingKeySpec: "RSA_2048",
 * }));
 * ```
 */
export function getGetParametersForImport(args: GetGetParametersForImportArgs, opts?: pulumi.InvokeOptions): Promise<GetGetParametersForImportResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Kms/getGetParametersForImport:getGetParametersForImport", {
        "keyId": args.keyId,
        "resultOutputFile": args.resultOutputFile,
        "wrappingAlgorithm": args.wrappingAlgorithm,
        "wrappingKeySpec": args.wrappingKeySpec,
    }, opts);
}

/**
 * A collection of arguments for invoking getGetParametersForImport.
 */
export interface GetGetParametersForImportArgs {
    /**
     * CMK unique identifier.
     */
    keyId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
     */
    wrappingAlgorithm: string;
    /**
     * Specifies the type of encryption key material, currently only supports RSA_2048.
     */
    wrappingKeySpec: string;
}

/**
 * A collection of values returned by getGetParametersForImport.
 */
export interface GetGetParametersForImportResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The token required for importing key material is used as the parameter of ImportKeyMaterial.
     */
    readonly importToken: string;
    readonly keyId: string;
    /**
     * The validity period of the exported token and public key cannot be imported after this period, and you need to call GetParametersForImport again to obtain it.
     */
    readonly parametersValidTo: number;
    /**
     * Base64-encoded public key content.
     */
    readonly publicKey: string;
    readonly resultOutputFile?: string;
    readonly wrappingAlgorithm: string;
    readonly wrappingKeySpec: string;
}

export function getGetParametersForImportOutput(args: GetGetParametersForImportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGetParametersForImportResult> {
    return pulumi.output(args).apply(a => getGetParametersForImport(a, opts))
}

/**
 * A collection of arguments for invoking getGetParametersForImport.
 */
export interface GetGetParametersForImportOutputArgs {
    /**
     * CMK unique identifier.
     */
    keyId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
     */
    wrappingAlgorithm: pulumi.Input<string>;
    /**
     * Specifies the type of encryption key material, currently only supports RSA_2048.
     */
    wrappingKeySpec: pulumi.Input<string>;
}
