// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a sqlserver businessIntelligenceFile
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const zones = tencentcloud.Availability.getZonesByProduct({
 *     product: "sqlserver",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: zones.then(zones => zones.zones?.[4]?.name),
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.0.0/16",
 *     isMulticast: false,
 * });
 * const securityGroup = new tencentcloud.security.Group("securityGroup", {description: "desc."});
 * const exampleBusinessIntelligenceInstance = new tencentcloud.sqlserver.BusinessIntelligenceInstance("exampleBusinessIntelligenceInstance", {
 *     zone: zones.then(zones => zones.zones?.[4]?.name),
 *     memory: 4,
 *     storage: 100,
 *     cpu: 2,
 *     machineType: "CLOUD_PREMIUM",
 *     projectId: 0,
 *     subnetId: subnet.id,
 *     vpcId: vpc.id,
 *     dbVersion: "201603",
 *     securityGroupLists: [securityGroup.id],
 *     weeklies: [
 *         1,
 *         2,
 *         3,
 *         4,
 *         5,
 *         6,
 *         7,
 *     ],
 *     startTime: "00:00",
 *     span: 6,
 *     instanceName: "tf_example",
 * });
 * const exampleBusinessIntelligenceFile = new tencentcloud.sqlserver.BusinessIntelligenceFile("exampleBusinessIntelligenceFile", {
 *     instanceId: exampleBusinessIntelligenceInstance.id,
 *     fileUrl: "https://tf-example-1208515315.cos.ap-guangzhou.myqcloud.com/sqlserver_business_intelligence_file.txt",
 *     fileType: "FLAT",
 *     remark: "desc.",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * sqlserver business_intelligence_file can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Sqlserver/businessIntelligenceFile:BusinessIntelligenceFile example mssqlbi-fo2dwujt#test.xlsx
 * ```
 */
export class BusinessIntelligenceFile extends pulumi.CustomResource {
    /**
     * Get an existing BusinessIntelligenceFile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BusinessIntelligenceFileState, opts?: pulumi.CustomResourceOptions): BusinessIntelligenceFile {
        return new BusinessIntelligenceFile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Sqlserver/businessIntelligenceFile:BusinessIntelligenceFile';

    /**
     * Returns true if the given object is an instance of BusinessIntelligenceFile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BusinessIntelligenceFile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BusinessIntelligenceFile.__pulumiType;
    }

    /**
     * File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
     */
    public readonly fileType!: pulumi.Output<string>;
    /**
     * Cos Url.
     */
    public readonly fileUrl!: pulumi.Output<string>;
    /**
     * instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * remark.
     */
    public readonly remark!: pulumi.Output<string | undefined>;

    /**
     * Create a BusinessIntelligenceFile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BusinessIntelligenceFileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BusinessIntelligenceFileArgs | BusinessIntelligenceFileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BusinessIntelligenceFileState | undefined;
            resourceInputs["fileType"] = state ? state.fileType : undefined;
            resourceInputs["fileUrl"] = state ? state.fileUrl : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
        } else {
            const args = argsOrState as BusinessIntelligenceFileArgs | undefined;
            if ((!args || args.fileType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileType'");
            }
            if ((!args || args.fileUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileUrl'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["fileType"] = args ? args.fileType : undefined;
            resourceInputs["fileUrl"] = args ? args.fileUrl : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BusinessIntelligenceFile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BusinessIntelligenceFile resources.
 */
export interface BusinessIntelligenceFileState {
    /**
     * File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
     */
    fileType?: pulumi.Input<string>;
    /**
     * Cos Url.
     */
    fileUrl?: pulumi.Input<string>;
    /**
     * instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * remark.
     */
    remark?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BusinessIntelligenceFile resource.
 */
export interface BusinessIntelligenceFileArgs {
    /**
     * File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
     */
    fileType: pulumi.Input<string>;
    /**
     * Cos Url.
     */
    fileUrl: pulumi.Input<string>;
    /**
     * instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * remark.
     */
    remark?: pulumi.Input<string>;
}
