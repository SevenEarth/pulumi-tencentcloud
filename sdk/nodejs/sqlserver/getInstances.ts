// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query SQL Server instances
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const vpc = pulumi.output(tencentcloud.Sqlserver.getInstances({
 *     subnetId: "subnet-nf9n81ps",
 *     vpcId: "vpc-409mvdvv",
 * }));
 * const project = pulumi.output(tencentcloud.Sqlserver.getInstances({
 *     projectId: 0,
 * }));
 * const id = pulumi.output(tencentcloud.Sqlserver.getInstances({
 *     id: "postgres-h9t4fde1",
 * }));
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Sqlserver/getInstances:getInstances", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
        "subnetId": args.subnetId,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * ID of the SQL Server instance to be query.
     */
    id?: string;
    /**
     * Name of the SQL Server instance to be query.
     */
    name?: string;
    /**
     * Project ID of the SQL Server instance to be query.
     */
    projectId?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Subnet ID of the SQL Server instance to be query.
     */
    subnetId?: string;
    /**
     * Vpc ID of the SQL Server instance to be query.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * ID of the SQL Server instance.
     */
    readonly id?: string;
    /**
     * A list of SQL Server instances. Each element contains the following attributes.
     */
    readonly instanceLists: outputs.Sqlserver.GetInstancesInstanceList[];
    /**
     * Name of the SQL Server instance.
     */
    readonly name?: string;
    /**
     * Project ID, default value is 0.
     */
    readonly projectId?: number;
    readonly resultOutputFile?: string;
    /**
     * ID of subnet.
     */
    readonly subnetId?: string;
    /**
     * ID of VPC.
     */
    readonly vpcId?: string;
}

export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply(a => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * ID of the SQL Server instance to be query.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the SQL Server instance to be query.
     */
    name?: pulumi.Input<string>;
    /**
     * Project ID of the SQL Server instance to be query.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Subnet ID of the SQL Server instance to be query.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Vpc ID of the SQL Server instance to be query.
     */
    vpcId?: pulumi.Input<string>;
}
