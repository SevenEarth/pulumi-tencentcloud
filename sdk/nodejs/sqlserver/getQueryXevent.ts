// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of sqlserver queryXevent
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.Sqlserver.getQueryXevent({
 *     endTime: "2023-08-10 00:00:00",
 *     eventType: "blocked",
 *     instanceId: "mssql-gyg9xycl",
 *     startTime: "2023-08-01 00:00:00",
 * }));
 * ```
 */
export function getQueryXevent(args: GetQueryXeventArgs, opts?: pulumi.InvokeOptions): Promise<GetQueryXeventResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Sqlserver/getQueryXevent:getQueryXevent", {
        "endTime": args.endTime,
        "eventType": args.eventType,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueryXevent.
 */
export interface GetQueryXeventArgs {
    /**
     * Generation end time of an extended file.
     */
    endTime: string;
    /**
     * Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
     */
    eventType: string;
    /**
     * Instance ID.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Generation start time of an extended file.
     */
    startTime: string;
}

/**
 * A collection of values returned by getQueryXevent.
 */
export interface GetQueryXeventResult {
    /**
     * Generation end time of an extended file.
     */
    readonly endTime: string;
    /**
     * Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock (deadlock event).
     */
    readonly eventType: string;
    /**
     * List of extended events.
     */
    readonly events: outputs.Sqlserver.GetQueryXeventEvent[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly resultOutputFile?: string;
    /**
     * Generation start time of an extended file.
     */
    readonly startTime: string;
}

export function getQueryXeventOutput(args: GetQueryXeventOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueryXeventResult> {
    return pulumi.output(args).apply(a => getQueryXevent(a, opts))
}

/**
 * A collection of arguments for invoking getQueryXevent.
 */
export interface GetQueryXeventOutputArgs {
    /**
     * Generation end time of an extended file.
     */
    endTime: pulumi.Input<string>;
    /**
     * Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
     */
    eventType: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Generation start time of an extended file.
     */
    startTime: pulumi.Input<string>;
}
