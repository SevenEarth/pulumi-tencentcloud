// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function publishSubscribes(args: PublishSubscribesArgs, opts?: pulumi.InvokeOptions): Promise<PublishSubscribesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Sqlserver/publishSubscribes:PublishSubscribes", {
        "instanceId": args.instanceId,
        "pubOrSubInstanceId": args.pubOrSubInstanceId,
        "pubOrSubInstanceIp": args.pubOrSubInstanceIp,
        "publishDatabase": args.publishDatabase,
        "publishSubscribeId": args.publishSubscribeId,
        "publishSubscribeName": args.publishSubscribeName,
        "resultOutputFile": args.resultOutputFile,
        "subscribeDatabase": args.subscribeDatabase,
    }, opts);
}

/**
 * A collection of arguments for invoking PublishSubscribes.
 */
export interface PublishSubscribesArgs {
    instanceId: string;
    pubOrSubInstanceId?: string;
    pubOrSubInstanceIp?: string;
    publishDatabase?: string;
    publishSubscribeId?: number;
    publishSubscribeName?: string;
    resultOutputFile?: string;
    subscribeDatabase?: string;
}

/**
 * A collection of values returned by PublishSubscribes.
 */
export interface PublishSubscribesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly pubOrSubInstanceId?: string;
    readonly pubOrSubInstanceIp?: string;
    readonly publishDatabase?: string;
    readonly publishSubscribeId?: number;
    readonly publishSubscribeLists: outputs.Sqlserver.PublishSubscribesPublishSubscribeList[];
    readonly publishSubscribeName?: string;
    readonly resultOutputFile?: string;
    readonly subscribeDatabase?: string;
}

export function publishSubscribesOutput(args: PublishSubscribesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PublishSubscribesResult> {
    return pulumi.output(args).apply(a => publishSubscribes(a, opts))
}

/**
 * A collection of arguments for invoking PublishSubscribes.
 */
export interface PublishSubscribesOutputArgs {
    instanceId: pulumi.Input<string>;
    pubOrSubInstanceId?: pulumi.Input<string>;
    pubOrSubInstanceIp?: pulumi.Input<string>;
    publishDatabase?: pulumi.Input<string>;
    publishSubscribeId?: pulumi.Input<number>;
    publishSubscribeName?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    subscribeDatabase?: pulumi.Input<string>;
}
