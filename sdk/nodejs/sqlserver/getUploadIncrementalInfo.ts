// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of sqlserver uploadIncrementalInfo
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.Sqlserver.getUploadIncrementalInfo({
 *     backupMigrationId: "mssql-backup-migration-83t5u3tv",
 *     incrementalMigrationId: "mssql-incremental-migration-h36gkdxn",
 *     instanceId: "mssql-4tgeyeeh",
 * }));
 * ```
 */
export function getUploadIncrementalInfo(args: GetUploadIncrementalInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetUploadIncrementalInfoResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Sqlserver/getUploadIncrementalInfo:getUploadIncrementalInfo", {
        "backupMigrationId": args.backupMigrationId,
        "incrementalMigrationId": args.incrementalMigrationId,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getUploadIncrementalInfo.
 */
export interface GetUploadIncrementalInfoArgs {
    /**
     * Backup import task ID, which is returned through the API CreateBackupMigration.
     */
    backupMigrationId: string;
    /**
     * ID of the incremental import task.
     */
    incrementalMigrationId: string;
    /**
     * Instance ID.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getUploadIncrementalInfo.
 */
export interface GetUploadIncrementalInfoResult {
    readonly backupMigrationId: string;
    /**
     * Bucket name.
     */
    readonly bucketName: string;
    /**
     * Temporary key expiration time.
     */
    readonly expiredTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly incrementalMigrationId: string;
    readonly instanceId: string;
    /**
     * Storage path.
     */
    readonly path: string;
    /**
     * Bucket location information.
     */
    readonly region: string;
    readonly resultOutputFile?: string;
    /**
     * Temporary key start time.
     */
    readonly startTime: string;
    /**
     * Temporary key ID.
     */
    readonly tmpSecretId: string;
    /**
     * Temporary key (Key).
     */
    readonly tmpSecretKey: string;
    /**
     * Temporary key (Token).
     */
    readonly xCosSecurityToken: string;
}

export function getUploadIncrementalInfoOutput(args: GetUploadIncrementalInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUploadIncrementalInfoResult> {
    return pulumi.output(args).apply(a => getUploadIncrementalInfo(a, opts))
}

/**
 * A collection of arguments for invoking getUploadIncrementalInfo.
 */
export interface GetUploadIncrementalInfoOutputArgs {
    /**
     * Backup import task ID, which is returned through the API CreateBackupMigration.
     */
    backupMigrationId: pulumi.Input<string>;
    /**
     * ID of the incremental import task.
     */
    incrementalMigrationId: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
