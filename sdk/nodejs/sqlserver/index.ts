// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./account";
export * from "./accountDbAttachment";
export * from "./basicInstance";
export * from "./db";
export * from "./getAccountDbAttachments";
export * from "./getAccounts";
export * from "./getBackups";
export * from "./getBasicInstances";
export * from "./getDbs";
export * from "./getInstances";
export * from "./getPublishSubscribes";
export * from "./getReadonlyGroups";
export * from "./getZoneConfig";
export * from "./instance";
export * from "./publishSubscribe";
export * from "./readonlyInstance";

// Import resources to register:
import { Account } from "./account";
import { AccountDbAttachment } from "./accountDbAttachment";
import { BasicInstance } from "./basicInstance";
import { Db } from "./db";
import { Instance } from "./instance";
import { PublishSubscribe } from "./publishSubscribe";
import { ReadonlyInstance } from "./readonlyInstance";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Sqlserver/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/accountDbAttachment:AccountDbAttachment":
                return new AccountDbAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/basicInstance:BasicInstance":
                return new BasicInstance(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/db:Db":
                return new Db(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/publishSubscribe:PublishSubscribe":
                return new PublishSubscribe(name, <any>undefined, { urn })
            case "tencentcloud:Sqlserver/readonlyInstance:ReadonlyInstance":
                return new ReadonlyInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/account", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/accountDbAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/basicInstance", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/db", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/instance", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/publishSubscribe", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Sqlserver/readonlyInstance", _module)
