// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a ci mediaConcatTemplate
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const mediaConcatTemplate = new tencentcloud.ci.MediaConcatTemplate("mediaConcatTemplate", {
 *     bucket: "terraform-ci-xxxxxx",
 *     concatTemplate: {
 *         audio: {
 *             bitrate: "",
 *             channels: "",
 *             codec: "mp3",
 *             samplerate: "",
 *         },
 *         audioMixes: [{
 *             audioSource: "https://terraform-ci-xxxxxx.cos.ap-guangzhou.myqcloud.com/mp3%2Fnizhan-test.mp3",
 *             effectConfig: {
 *                 bgmFadeTime: "1.7",
 *                 enableBgmFade: "true",
 *                 enableEndFadeout: "false",
 *                 enableStartFadein: "true",
 *                 endFadeoutTime: "0.1",
 *                 startFadeinTime: "3",
 *             },
 *             mixMode: "Once",
 *             replace: "true",
 *         }],
 *         concatFragments: [
 *             {
 *                 mode: "Start",
 *                 url: "https://terraform-ci-xxxxxx.cos.ap-guangzhou.myqcloud.com/mp4%2Fmp4-test.mp4",
 *             },
 *             {
 *                 mode: "End",
 *                 url: "https://terraform-ci-xxxxxx.cos.ap-guangzhou.myqcloud.com/mp4%2Fmp4-test.mp4",
 *             },
 *         ],
 *         container: {
 *             format: "mp4",
 *         },
 *         video: {
 *             bitrate: "1000",
 *             codec: "H.264",
 *             crf: "",
 *             fps: "25",
 *             height: "",
 *             remove: "",
 *             rotate: "",
 *             width: "1280",
 *         },
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ci media_concat_template can be imported using the bucket#templateId, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Ci/mediaConcatTemplate:MediaConcatTemplate media_concat_template id=terraform-ci-xxxxxx#t1cb115dfa1fcc414284f83b7c69bcedcf
 * ```
 */
export class MediaConcatTemplate extends pulumi.CustomResource {
    /**
     * Get an existing MediaConcatTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MediaConcatTemplateState, opts?: pulumi.CustomResourceOptions): MediaConcatTemplate {
        return new MediaConcatTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Ci/mediaConcatTemplate:MediaConcatTemplate';

    /**
     * Returns true if the given object is an instance of MediaConcatTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MediaConcatTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MediaConcatTemplate.__pulumiType;
    }

    /**
     * bucket name.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * stitching template.
     */
    public readonly concatTemplate!: pulumi.Output<outputs.Ci.MediaConcatTemplateConcatTemplate>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a MediaConcatTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MediaConcatTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MediaConcatTemplateArgs | MediaConcatTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MediaConcatTemplateState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["concatTemplate"] = state ? state.concatTemplate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as MediaConcatTemplateArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.concatTemplate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'concatTemplate'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["concatTemplate"] = args ? args.concatTemplate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MediaConcatTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MediaConcatTemplate resources.
 */
export interface MediaConcatTemplateState {
    /**
     * bucket name.
     */
    bucket?: pulumi.Input<string>;
    /**
     * stitching template.
     */
    concatTemplate?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplate>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MediaConcatTemplate resource.
 */
export interface MediaConcatTemplateArgs {
    /**
     * bucket name.
     */
    bucket: pulumi.Input<string>;
    /**
     * stitching template.
     */
    concatTemplate: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplate>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    name?: pulumi.Input<string>;
}
