// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of kubernetes cluster addons.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const name = tencentcloud.Kubernetes.getCharts({});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCharts(args?: GetChartsArgs, opts?: pulumi.InvokeOptions): Promise<GetChartsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Kubernetes/getCharts:getCharts", {
        "arch": args.arch,
        "clusterType": args.clusterType,
        "kind": args.kind,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCharts.
 */
export interface GetChartsArgs {
    /**
     * Operation system app supported. Available values: `arm32`, `arm64`, `amd64`.
     */
    arch?: string;
    /**
     * Cluster type. Available values: `tke`, `eks`.
     */
    clusterType?: string;
    /**
     * Kind of app chart. Available values: `log`, `scheduler`, `network`, `storage`, `monitor`, `dns`, `image`, `other`, `invisible`.
     */
    kind?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCharts.
 */
export interface GetChartsResult {
    readonly arch?: string;
    /**
     * App chart list.
     */
    readonly chartLists: outputs.Kubernetes.GetChartsChartList[];
    readonly clusterType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kind?: string;
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query detailed information of kubernetes cluster addons.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const name = tencentcloud.Kubernetes.getCharts({});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getChartsOutput(args?: GetChartsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChartsResult> {
    return pulumi.output(args).apply((a: any) => getCharts(a, opts))
}

/**
 * A collection of arguments for invoking getCharts.
 */
export interface GetChartsOutputArgs {
    /**
     * Operation system app supported. Available values: `arm32`, `arm64`, `amd64`.
     */
    arch?: pulumi.Input<string>;
    /**
     * Cluster type. Available values: `tke`, `eks`.
     */
    clusterType?: pulumi.Input<string>;
    /**
     * Kind of app chart. Available values: `log`, `scheduler`, `network`, `storage`, `monitor`, `dns`, `image`, `other`, `invisible`.
     */
    kind?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
