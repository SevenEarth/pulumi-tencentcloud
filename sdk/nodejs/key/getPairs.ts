// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query key pairs.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Key.getPairs({
 *     keyId: "skey-ie97i3ml",
 * });
 * const name = tencentcloud.Key.getPairs({
 *     keyName: "^test$",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPairs(args?: GetPairsArgs, opts?: pulumi.InvokeOptions): Promise<GetPairsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Key/getPairs:getPairs", {
        "keyId": args.keyId,
        "keyName": args.keyName,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getPairs.
 */
export interface GetPairsArgs {
    /**
     * ID of the key pair to be queried.
     */
    keyId?: string;
    /**
     * Name of the key pair to be queried. Support regular expression search, only `^` and `$` are supported.
     */
    keyName?: string;
    /**
     * Project ID of the key pair to be queried.
     */
    projectId?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getPairs.
 */
export interface GetPairsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the key pair.
     */
    readonly keyId?: string;
    /**
     * Name of the key pair.
     */
    readonly keyName?: string;
    /**
     * An information list of key pair. Each element contains the following attributes:
     */
    readonly keyPairLists: outputs.Key.GetPairsKeyPairList[];
    /**
     * Project ID of the key pair.
     */
    readonly projectId?: number;
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query key pairs.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Key.getPairs({
 *     keyId: "skey-ie97i3ml",
 * });
 * const name = tencentcloud.Key.getPairs({
 *     keyName: "^test$",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPairsOutput(args?: GetPairsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPairsResult> {
    return pulumi.output(args).apply((a: any) => getPairs(a, opts))
}

/**
 * A collection of arguments for invoking getPairs.
 */
export interface GetPairsOutputArgs {
    /**
     * ID of the key pair to be queried.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Name of the key pair to be queried. Support regular expression search, only `^` and `$` are supported.
     */
    keyName?: pulumi.Input<string>;
    /**
     * Project ID of the key pair to be queried.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
