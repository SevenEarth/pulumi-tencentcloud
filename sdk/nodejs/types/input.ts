// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ProviderAssumeRole {
    policy?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    sessionDuration: pulumi.Input<number>;
    sessionName: pulumi.Input<string>;
}
export namespace Address {
}

export namespace ApiGateway {
    export interface ApiRequestParameter {
        /**
         * Parameter default value.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter location.
         */
        position: pulumi.Input<string>;
        /**
         * If this parameter required. Default value: `false`.
         */
        required?: pulumi.Input<boolean>;
        /**
         * Parameter type.
         */
        type: pulumi.Input<string>;
    }

    export interface ApiResponseErrorCode {
        /**
         * Custom response configuration error code.
         */
        code: pulumi.Input<number>;
        /**
         * Custom error code conversion.
         */
        convertedCode?: pulumi.Input<number>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * Custom response configuration error message.
         */
        msg: pulumi.Input<string>;
        /**
         * Whether to enable error code conversion. Default value: `false`.
         */
        needConvert?: pulumi.Input<boolean>;
    }

    export interface ServiceApiList {
        /**
         * Description of the API.
         */
        apiDesc?: pulumi.Input<string>;
        /**
         * ID of the API.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Name of the API.
         */
        apiName?: pulumi.Input<string>;
        /**
         * Method of the API.
         */
        method?: pulumi.Input<string>;
        /**
         * Path of the API.
         */
        path?: pulumi.Input<string>;
    }

    export interface ServiceUsagePlanList {
        /**
         * ID of the API.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Binding type.
         */
        bindType?: pulumi.Input<string>;
        /**
         * ID of the usage plan.
         */
        usagePlanId?: pulumi.Input<string>;
        /**
         * Name of the usage plan.
         */
        usagePlanName?: pulumi.Input<string>;
    }

    export interface UsagePlanAttachList {
        /**
         * The API ID, this value is empty if attach service.
         */
        apiId?: pulumi.Input<string>;
        /**
         * The API name, this value is empty if attach service.
         */
        apiName?: pulumi.Input<string>;
        /**
         * Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
         */
        createTime?: pulumi.Input<string>;
        /**
         * The environment name.
         */
        environment?: pulumi.Input<string>;
        /**
         * The API method, this value is empty if attach service.
         */
        method?: pulumi.Input<string>;
        /**
         * Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * The API path, this value is empty if attach service.
         */
        path?: pulumi.Input<string>;
        /**
         * The service ID.
         */
        serviceId?: pulumi.Input<string>;
        /**
         * The service name.
         */
        serviceName?: pulumi.Input<string>;
    }
}

export namespace As {
    export interface GetInstancesFilterArgs {
        /**
         * Fields to be filtered. Valid names: `instance-id`: Filters by instance ID, `auto-scaling-group-id`: Filter by scaling group ID.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstancesFilter {
        /**
         * Fields to be filtered. Valid names: `instance-id`: Filters by instance ID, `auto-scaling-group-id`: Filter by scaling group ID.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface LoadBalancerForwardLoadBalancer {
        listenerId: pulumi.Input<string>;
        loadBalancerId: pulumi.Input<string>;
        locationId?: pulumi.Input<string>;
        region?: pulumi.Input<string>;
        targetAttributes: pulumi.Input<pulumi.Input<inputs.As.LoadBalancerForwardLoadBalancerTargetAttribute>[]>;
    }

    export interface LoadBalancerForwardLoadBalancerTargetAttribute {
        port: pulumi.Input<number>;
        weight: pulumi.Input<number>;
    }

    export interface ScalingConfigDataDisk {
        /**
         * Indicates whether the disk remove after instance terminated. Default is `false`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. valid when diskTypePolicy is ORIGINAL.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScalingConfigInstanceNameSettings {
        /**
         * CVM instance name.
         */
        instanceName: pulumi.Input<string>;
        /**
         * Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default is `ORIGINAL`.
         */
        instanceNameStyle?: pulumi.Input<string>;
    }

    export interface ScalingGroupForwardBalancerId {
        /**
         * Listener ID for application load balancers.
         */
        listenerId: pulumi.Input<string>;
        /**
         * ID of available load balancers.
         */
        loadBalancerId: pulumi.Input<string>;
        /**
         * ID of forwarding rules.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Attribute list of target rules.
         */
        targetAttributes: pulumi.Input<pulumi.Input<inputs.As.ScalingGroupForwardBalancerIdTargetAttribute>[]>;
    }

    export interface ScalingGroupForwardBalancerIdTargetAttribute {
        /**
         * Port number.
         */
        port: pulumi.Input<number>;
        /**
         * Weight.
         */
        weight: pulumi.Input<number>;
    }
}

export namespace Audit {
    export interface TrackStorage {
        /**
         * Track Storage name:- when StorageType is `cls`, StorageName is cls topicId- when StorageType is `cos`, StorageName is cos bucket name that does not contain `-APPID`.
         */
        storageName: pulumi.Input<string>;
        /**
         * Storage path prefix.
         */
        storagePrefix: pulumi.Input<string>;
        /**
         * Storage region.
         */
        storageRegion: pulumi.Input<string>;
        /**
         * Track Storage type, optional:- `cos`- `cls`.
         */
        storageType: pulumi.Input<string>;
    }
}

export namespace Audits {
}

export namespace Availability {
}

export namespace Cam {
}

export namespace Cat {
    export interface TaskSetBatchTasks {
        /**
         * Task name.
         */
        name: pulumi.Input<string>;
        /**
         * Target address.
         */
        targetAddress: pulumi.Input<string>;
    }
}

export namespace Cbs {
}

export namespace Ccn {
    export interface GetCrossBorderRegionBandwidthLimitsFilter {
        /**
         * attribute name.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetCrossBorderRegionBandwidthLimitsFilterArgs {
        /**
         * attribute name.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstancesAcceptAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface InstancesRejectAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface InstancesResetAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

}

export namespace Cdh {
    export interface InstanceHostResource {
        /**
         * The number of available CPU cores of the instance.
         */
        cpuAvailableNum?: pulumi.Input<number>;
        /**
         * The number of total CPU cores of the instance.
         */
        cpuTotalNum?: pulumi.Input<number>;
        /**
         * Instance disk available capacity, unit in GB.
         */
        diskAvailableSize?: pulumi.Input<number>;
        /**
         * Instance disk total capacity, unit in GB.
         */
        diskTotalSize?: pulumi.Input<number>;
        /**
         * Type of the disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Instance memory available capacity, unit in GB.
         */
        memoryAvailableSize?: pulumi.Input<number>;
        /**
         * Instance memory total capacity, unit in GB.
         */
        memoryTotalSize?: pulumi.Input<number>;
    }
}

export namespace Cdn {
    export interface DomainAuthentication {
        /**
         * Authentication switching, available values: `on`, `off`.
         */
        switch?: pulumi.Input<string>;
        /**
         * Timestamp hotlink protection mode A configuration.
         */
        typeA?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeA>;
        /**
         * Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
         */
        typeB?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeB>;
        /**
         * Timestamp hotlink protection mode C configuration.
         */
        typeC?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeC>;
        /**
         * Timestamp hotlink protection mode D configuration.
         */
        typeD?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeD>;
    }

    export interface DomainAuthenticationTypeA {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
         */
        signParam: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeB {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeC {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Timestamp formation, available values: `dec`, `hex`.
         */
        timeFormat?: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeD {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Timestamp formation, available values: `dec`, `hex`.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
         */
        timeParam?: pulumi.Input<string>;
    }

    export interface DomainAwsPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainBandWidthAlert {
        /**
         * Alert percentage.
         */
        alertPercentage?: pulumi.Input<number>;
        /**
         * Switch alert.
         */
        alertSwitch?: pulumi.Input<string>;
        /**
         * threshold of bps.
         */
        bpsThreshold?: pulumi.Input<number>;
        /**
         * Counter measure.
         */
        counterMeasure?: pulumi.Input<string>;
        lastTriggerTime?: pulumi.Input<string>;
        lastTriggerTimeOverseas?: pulumi.Input<string>;
        /**
         * Metric.
         */
        metric?: pulumi.Input<string>;
        /**
         * Specify statistic item configuration.
         */
        statisticItem?: pulumi.Input<inputs.Cdn.DomainBandWidthAlertStatisticItem>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainBandWidthAlertStatisticItem {
        /**
         * Alert percentage.
         */
        alertPercentage?: pulumi.Input<number>;
        /**
         * Switch alert.
         */
        alertSwitch?: pulumi.Input<string>;
        /**
         * threshold of bps.
         */
        bpsThreshold?: pulumi.Input<number>;
        /**
         * Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
         */
        counterMeasure?: pulumi.Input<string>;
        /**
         * Cycle of checking in minutes, values `60`, `1440`.
         */
        cycle?: pulumi.Input<number>;
        /**
         * Metric.
         */
        metric?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
        /**
         * Type of statistic item.
         */
        type?: pulumi.Input<string>;
        /**
         * Time of auto unblock.
         */
        unblockTime?: pulumi.Input<number>;
    }

    export interface DomainCacheKey {
        /**
         * Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Specifies whether the cache key is case sensitive.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Path-specific cache key configuration.
         */
        keyRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainCacheKeyKeyRule>[]>;
        /**
         * Request parameter contained in CacheKey.
         */
        queryString?: pulumi.Input<inputs.Cdn.DomainCacheKeyQueryString>;
    }

    export interface DomainCacheKeyKeyRule {
        /**
         * Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Whether caches are case insensitive.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Request parameter contained in CacheKey.
         */
        queryString: pulumi.Input<inputs.Cdn.DomainCacheKeyKeyRuleQueryString>;
        /**
         * List of rule paths for each `keyRules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify rule tag, default value is `user`.
         */
        ruleTag?: pulumi.Input<string>;
        /**
         * Rule type, available: `file`, `directory`, `path`, `index`.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainCacheKeyKeyRuleQueryString {
        /**
         * Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
         */
        switch?: pulumi.Input<string>;
        /**
         * Array of included/excluded query strings (separated by `;`).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainCacheKeyQueryString {
        /**
         * Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to sort again, values `on`, `off` (Default).
         */
        reorder?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
         */
        switch?: pulumi.Input<string>;
        /**
         * Array of included/excluded query strings (separated by `;`).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainCompression {
        /**
         * List of compression rules.
         */
        compressionRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainCompressionCompressionRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainCompressionCompressionRule {
        /**
         * List of algorithms, available: `gzip` and `brotli`.
         */
        algorithms: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Must be set as true, enables compression.
         */
        compress: pulumi.Input<boolean>;
        /**
         * List of file extensions like `jpg`, `txt`.
         */
        fileExtensions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The maximum file size to trigger compression (in bytes).
         */
        maxLength: pulumi.Input<number>;
        /**
         * The minimum file size to trigger compression (in bytes).
         */
        minLength: pulumi.Input<number>;
        /**
         * List of rule paths for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
         */
        ruleType?: pulumi.Input<string>;
    }

    export interface DomainDownstreamCapping {
        /**
         * List of capping rule.
         */
        cappingRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainDownstreamCappingCappingRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainDownstreamCappingCappingRule {
        /**
         * Capping rule kbps threshold.
         */
        kbpsThreshold: pulumi.Input<number>;
        /**
         * List of capping rule path.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Capping rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainErrorPage {
        /**
         * List of error page rule.
         */
        pageRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainErrorPagePageRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainErrorPagePageRule {
        /**
         * Redirect code of error page rules.
         */
        redirectCode: pulumi.Input<number>;
        /**
         * Redirect url of error page rules.
         */
        redirectUrl: pulumi.Input<string>;
        /**
         * Status code of error page rules.
         */
        statusCode: pulumi.Input<number>;
    }

    export interface DomainHttpsConfig {
        /**
         * Client certificate configuration information.
         */
        clientCertificateConfig?: pulumi.Input<inputs.Cdn.DomainHttpsConfigClientCertificateConfig>;
        /**
         * Configuration of forced HTTP or HTTPS redirects.
         */
        forceRedirect?: pulumi.Input<inputs.Cdn.DomainHttpsConfigForceRedirect>;
        /**
         * HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        http2Switch?: pulumi.Input<string>;
        /**
         * HTTPS configuration switch. Valid values are `on` and `off`.
         */
        httpsSwitch: pulumi.Input<string>;
        /**
         * OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        ocspStaplingSwitch?: pulumi.Input<string>;
        /**
         * Server certificate configuration information.
         */
        serverCertificateConfig?: pulumi.Input<inputs.Cdn.DomainHttpsConfigServerCertificateConfig>;
        /**
         * Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
         */
        spdySwitch?: pulumi.Input<string>;
        /**
         * Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
         */
        tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
         */
        verifyClient?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigClientCertificateConfig {
        /**
         * Client Certificate PEM format, requires Base64 encoding.
         */
        certificateContent: pulumi.Input<string>;
        certificateName?: pulumi.Input<string>;
        deployTime?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigForceRedirect {
        /**
         * Whether to return the newly added header during force redirection. Values: `on`, `off`.
         */
        carryHeaders?: pulumi.Input<string>;
        /**
         * Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
         */
        redirectStatusCode?: pulumi.Input<number>;
        /**
         * Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigServerCertificateConfig {
        /**
         * Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
         */
        certificateContent?: pulumi.Input<string>;
        /**
         * Server certificate ID.
         */
        certificateId?: pulumi.Input<string>;
        certificateName?: pulumi.Input<string>;
        deployTime?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime?: pulumi.Input<string>;
        /**
         * Certificate remarks.
         */
        message?: pulumi.Input<string>;
        /**
         * Server key information. This is required when uploading an external certificate.
         */
        privateKey?: pulumi.Input<string>;
    }

    export interface DomainHwPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainIpFilter {
        /**
         * Ip filter rules, This feature is only available to selected beta customers.
         */
        filterRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainIpFilterFilterRule>[]>;
        /**
         * IP `blacklist`/`whitelist` type.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
         */
        filters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return code, available values: 400-499.
         */
        returnCode?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainIpFilterFilterRule {
        /**
         * Ip filter `blacklist`/`whitelist` type of filter rules.
         */
        filterType: pulumi.Input<string>;
        /**
         * Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
         */
        filters: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Content list for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainIpFreqLimit {
        /**
         * Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
         */
        qps?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainMaxAge {
        /**
         * List of Max Age rule configuration.
         */
        maxAgeRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainMaxAgeMaxAgeRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainMaxAgeMaxAgeRule {
        /**
         * Whether to follow origin, values: `on`/`off`, if set to `on`, the `maxAgeTime` will be ignored.
         */
        followOrigin?: pulumi.Input<string>;
        /**
         * List of rule paths for each `maxAgeType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        maxAgeContents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Max Age time in seconds, this can set to `0` that stands for no cache.
         */
        maxAgeTime: pulumi.Input<number>;
        /**
         * The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
         */
        maxAgeType: pulumi.Input<string>;
    }

    export interface DomainOrigin {
        /**
         * Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
         */
        backupOriginLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server.
         */
        backupOriginType?: pulumi.Input<string>;
        /**
         * Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
         */
        backupServerName?: pulumi.Input<string>;
        /**
         * When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
         */
        cosPrivateAccess?: pulumi.Input<string>;
        /**
         * Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
         */
        originLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
         */
        originPullProtocol?: pulumi.Input<string>;
        /**
         * Master origin server type. The following types are supported: `domain`: domain name type, `cos`: COS origin, `ip`: IP list used as origin server, `ipv6`: origin server list is a single IPv6 address, `ipIpv6`: origin server list is multiple IPv4 addresses and an IPv6 address.
         */
        originType: pulumi.Input<string>;
        /**
         * Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
         */
        serverName?: pulumi.Input<string>;
    }

    export interface DomainOriginPullOptimization {
        /**
         * Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
         */
        optimizationType?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainOriginPullTimeout {
        /**
         * The origin-pull connection timeout (in seconds). Valid range: 5-60.
         */
        connectTimeout: pulumi.Input<number>;
        /**
         * The origin-pull receipt timeout (in seconds). Valid range: 10-60.
         */
        receiveTimeout: pulumi.Input<number>;
    }

    export interface DomainOssPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainPostMaxSize {
        /**
         * Maximum size in MB, value range is `[1, 200]`.
         */
        maxSize?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainQnPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainReferer {
        /**
         * List of referer rules.
         */
        refererRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainRefererRefererRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainRefererRefererRule {
        /**
         * Whether to allow emptpy.
         */
        allowEmpty: pulumi.Input<boolean>;
        /**
         * Referer type.
         */
        refererType: pulumi.Input<string>;
        /**
         * Referer list.
         */
        referers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Referer rule path list.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Referer rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainRequestHeader {
        /**
         * Custom request header configuration rules.
         */
        headerRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainRequestHeaderHeaderRule>[]>;
        /**
         * Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainRequestHeaderHeaderRule {
        /**
         * Response header mode.
         */
        headerMode: pulumi.Input<string>;
        /**
         * response header name of rule.
         */
        headerName: pulumi.Input<string>;
        /**
         * response header value of rule.
         */
        headerValue: pulumi.Input<string>;
        /**
         * response rule paths of rule.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * response rule type of rule.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainResponseHeader {
        /**
         * List of response header rule.
         */
        headerRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainResponseHeaderHeaderRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainResponseHeaderHeaderRule {
        /**
         * Response header mode.
         */
        headerMode: pulumi.Input<string>;
        /**
         * response header name of rule.
         */
        headerName: pulumi.Input<string>;
        /**
         * response header value of rule.
         */
        headerValue: pulumi.Input<string>;
        /**
         * response rule paths of rule.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * response rule type of rule.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainRuleCach {
        /**
         * Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
         */
        cacheTime: pulumi.Input<number>;
        /**
         * Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
         */
        compareMaxAge?: pulumi.Input<string>;
        /**
         * Follow the source station configuration switch. Valid values are `on` and `off`.
         */
        followOriginSwitch?: pulumi.Input<string>;
        /**
         * Specify whether to enable heuristic cache, only available while `followOriginSwitch` enabled, values: `on`, `off` (Default).
         */
        heuristicCacheSwitch?: pulumi.Input<string>;
        /**
         * Specify heuristic cache time in second, only available while `followOriginSwitch` and `heuristicCacheSwitch` enabled.
         */
        heuristicCacheTime?: pulumi.Input<number>;
        /**
         * Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
         */
        ignoreCacheControl?: pulumi.Input<string>;
        /**
         * Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
         */
        ignoreSetCookie?: pulumi.Input<string>;
        /**
         * Cache configuration switch. Valid values are `on` and `off`.
         */
        noCacheSwitch?: pulumi.Input<string>;
        /**
         * Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
         */
        reValidate?: pulumi.Input<string>;
        /**
         * Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /.
         */
        rulePaths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Cache configuration switch. Valid values are `on` and `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainStatusCodeCache {
        /**
         * List of cache rule.
         */
        cacheRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainStatusCodeCacheCacheRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainStatusCodeCacheCacheRule {
        /**
         * Status code cache expiration time (in seconds).
         */
        cacheTime: pulumi.Input<number>;
        /**
         * Code of status cache. available values: `403`, `404`.
         */
        statusCode: pulumi.Input<string>;
    }

    export interface UrlPurgePurgeHistory {
        /**
         * Purge task create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Purge flush type of `flush` or `delete`.
         */
        flushType?: pulumi.Input<string>;
        /**
         * Purge category in of `url` or `path`.
         */
        purgeType?: pulumi.Input<string>;
        /**
         * Purge status of `fail`, `done`, `process`.
         */
        status?: pulumi.Input<string>;
        /**
         * Task id of last operation.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Purge url.
         */
        url?: pulumi.Input<string>;
    }

    export interface UrlPushPushHistory {
        /**
         * Specify push area. NOTE: only push same area cache contents.
         */
        area?: pulumi.Input<string>;
        /**
         * Push task create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Push progress in percent.
         */
        percent?: pulumi.Input<number>;
        /**
         * Push status of `fail`, `done`, `process` or `invalid` (4xx, 5xx response).
         */
        status?: pulumi.Input<string>;
        /**
         * Push task id.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Push task update time.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * Push url.
         */
        url?: pulumi.Input<string>;
    }
}

export namespace Cfs {
}

export namespace Chdfs {
    export interface AccessRuleAccessRule {
        /**
         * rule access mode, 1: read only, 2: read &amp; wirte.
         */
        accessMode?: pulumi.Input<number>;
        accessRuleId?: pulumi.Input<number>;
        /**
         * rule address, IP OR IP SEG.
         */
        address?: pulumi.Input<string>;
        createTime?: pulumi.Input<string>;
        /**
         * rule priority, range 1 - 100, value less higher priority.
         */
        priority?: pulumi.Input<number>;
    }

    export interface LifeCycleRuleLifeCycleRule {
        createTime?: pulumi.Input<string>;
        lifeCycleRuleId?: pulumi.Input<number>;
        /**
         * rule name.
         */
        lifeCycleRuleName?: pulumi.Input<string>;
        /**
         * rule op path.
         */
        path?: pulumi.Input<string>;
        /**
         * rule status, 1:open, 2:close.
         */
        status?: pulumi.Input<number>;
        /**
         * life cycle rule transition list.
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.Chdfs.LifeCycleRuleLifeCycleRuleTransition>[]>;
    }

    export interface LifeCycleRuleLifeCycleRuleTransition {
        /**
         * trigger days(n day).
         */
        days: pulumi.Input<number>;
        /**
         * transition type, 1: archive, 2: delete, 3: low rate.
         */
        type: pulumi.Input<number>;
    }
}

export namespace Ci {
    export interface MediaAnimationTemplateContainer {
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaAnimationTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaAnimationTemplateVideo {
        /**
         * Animation per second frame number, Priority: AnimateFramesPerSecond &gt; AnimateOnlyKeepKeyFrame &gt; AnimateTimeIntervalOfFrame.
         */
        animateFramesPerSecond?: pulumi.Input<string>;
        /**
         * GIFs are kept only Keyframe, Priority: AnimateFramesPerSecond &gt; AnimateOnlyKeepKeyFrame &gt; AnimateTimeIntervalOfFrame.
         */
        animateOnlyKeepKeyFrame?: pulumi.Input<string>;
        /**
         * Animation frame extraction every time, (0, video duration], Animation frame extraction time interval, If TimeInterval.Duration is set, it is less than this value.
         */
        animateTimeIntervalOfFrame?: pulumi.Input<string>;
        /**
         * Codec format `gif`, `webp`.
         */
        codec: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Set relative quality, [1, 100), webp image quality setting takes effect, gif has no quality parameter.
         */
        quality?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplate {
        /**
         * audio parameters, the target file does not require Audio information, need to set Audio.Remove to true.
         */
        audio?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudio>;
        /**
         * mixing parameters.
         */
        audioMixes?: pulumi.Input<pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudioMix>[]>;
        /**
         * Package format.
         */
        concatFragments: pulumi.Input<pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateConcatFragment>[]>;
        /**
         * Only splicing without transcoding.
         */
        container: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateContainer>;
        /**
         * video information, do not upload Video, which is equivalent to deleting video information.
         */
        video?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateVideo>;
    }

    export interface MediaConcatTemplateConcatTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 11025, 22050, 32000, 44100, 48000, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateConcatFragment {
        /**
         * node type, `start`, `end`.
         */
        mode: pulumi.Input<string>;
        /**
         * Splicing object address.
         */
        url: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateContainer {
        /**
         * Container format: mp4, flv, hls, ts, mp3, aac.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateVideo {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format `H.264`.
         */
        codec: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaPicProcessTemplatePicProcess {
        /**
         * Whether to return the original image information.
         */
        isPicInfo?: pulumi.Input<string>;
        /**
         * Image processing rules, 1: basic image processing, please refer to the basic image processing document, 2: image compression, please refer to the image compression document, 3: blind watermark, please refer to the blind watermark document.
         */
        processRule: pulumi.Input<string>;
    }

    export interface MediaSmartCoverTemplateSmartCover {
        /**
         * Number of screenshots, [1,10].
         */
        count?: pulumi.Input<string>;
        /**
         * cover deduplication, true/false.
         */
        deleteDuplicates?: pulumi.Input<string>;
        /**
         * Image Format, value jpg, png, webp.
         */
        format: pulumi.Input<string>;
        /**
         * Height, value range: [128, 4096], unit: px, if only Height is set, Width is calculated according to the original video ratio.
         */
        height?: pulumi.Input<string>;
        /**
         * Width, value range: [128, 4096], unit: px, if only Width is set, Height is calculated according to the original ratio of the video.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaSnapshotTemplateSnapshot {
        /**
         * Screenshot black screen detection parameters, Valid when IsCheckBlack=true, Value reference range [30, 100], indicating the proportion of black pixels, the smaller the value, the smaller the proportion of black pixels, Start&gt;0, the parameter setting is invalid, no filter black screen, Start =0 parameter is valid, the start time of the frame capture is the first frame non-black screen start.
         */
        blackLevel?: pulumi.Input<string>;
        /**
         * Screenshot image processing parameters, for example: imageMogr2/format/png.
         */
        ciParam?: pulumi.Input<string>;
        /**
         * Number of screenshots, range (0 10000].
         */
        count: pulumi.Input<string>;
        /**
         * high, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to enable black screen detection true/false.
         */
        isCheckBlack?: pulumi.Input<string>;
        /**
         * Whether to check the number of screenshots forcibly, when using custom interval mode to take screenshots, the video time is not long enough to capture Count screenshots, you can switch to average screenshot mode to capture Count screenshots.
         */
        isCheckCount?: pulumi.Input<string>;
        /**
         * Screenshot mode, value range: {Interval, Average, KeyFrame}- Interval means interval mode Average means average mode- KeyFrame represents the key frame mode- Interval mode: Start, TimeInterval, The Count parameter takes effect. When Count is set and TimeInterval is not set, Indicates to capture all frames, a total of Count pictures- Average mode: Start, the Count parameter takes effect. express.
         */
        mode?: pulumi.Input<string>;
        /**
         * Screenshot black screen detection parameters, Valid when IsCheckBlack=true, The threshold for judging whether a pixel is a black point, value range: [0, 255].
         */
        pixelBlackThreshold?: pulumi.Input<string>;
        /**
         * Screenshot output mode parameters, Value range: {OnlySnapshot, OnlySprite, SnapshotAndSprite}, OnlySnapshot means output only screenshot mode OnlySprite means only output sprite mode SnapshotAndSprite means output screenshot and sprite mode.
         */
        snapshotOutMode?: pulumi.Input<string>;
        /**
         * Screenshot output configuration.
         */
        spriteSnapshotConfig?: pulumi.Input<inputs.Ci.MediaSnapshotTemplateSnapshotSpriteSnapshotConfig>;
        /**
         * Starting time, [0 video duration] in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
        /**
         * Screenshot time interval, (0 3600], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * wide, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaSnapshotTemplateSnapshotSpriteSnapshotConfig {
        /**
         * Single image height Value range: [8, 4096], Unit: px.
         */
        cellHeight?: pulumi.Input<string>;
        /**
         * Single image width Value range: [8, 4096], Unit: px.
         */
        cellWidth?: pulumi.Input<string>;
        /**
         * See `https://www.ffmpeg.org/ffmpeg-utils.html#color-syntax` for details on supported colors.
         */
        color: pulumi.Input<string>;
        /**
         * Number of screenshot columns, value range: [1, 10000].
         */
        columns: pulumi.Input<string>;
        /**
         * Number of screenshot lines, value range: [1, 10000].
         */
        lines: pulumi.Input<string>;
        /**
         * screenshot margin size, Value range: [8, 4096], Unit: px.
         */
        margin?: pulumi.Input<string>;
        /**
         * screenshot padding size, Value range: [8, 4096], Unit: px.
         */
        padding?: pulumi.Input<string>;
    }

    export interface MediaSpeechRecognitionTemplateSpeechRecognition {
        /**
         * Number of voice channels: 1 means mono. EngineModelType supports only mono for non-telephone scenarios, and 2 means dual channels (only 8kZh engine model supports dual channels, which should correspond to both sides of the call).
         */
        channelNum: pulumi.Input<string>;
        /**
         * Whether to perform intelligent conversion of Arabic numerals (currently supports Mandarin Chinese engine): 0 means no conversion, directly output Chinese numbers, 1 means intelligently convert to Arabic numerals according to the scene, 3 means enable math-related digital conversion, the default value is 0.
         */
        convertNumMode?: pulumi.Input<string>;
        /**
         * Engine model type, divided into phone scene and non-phone scene, phone scene: 8k_zh: phone 8k Chinese Mandarin general (can be used for dual-channel audio), 8k_zh_s: phone 8k Chinese Mandarin speaker separation (only for monophonic audio), 8k_en: Telephone 8k English; non-telephone scene: 16k_zh: 16k Mandarin Chinese, 16k_zh_video: 16k audio and video field, 16k_en: 16k English, 16k_ca: 16k Cantonese, 16k_ja: 16k Japanese, 16k_zh_edu: Chinese education, 16k_en_edu: English education, 16k_zh_medical: medical, 16k_th: Thai, 16k_zh_dialect: multi-dialect, supports 23 dialects.
         */
        engineModelType: pulumi.Input<string>;
        /**
         * Whether to filter dirty words (currently supports Mandarin Chinese engine): 0 means not to filter dirty words, 1 means to filter dirty words, 2 means to replace dirty words with *, the default value is 0.
         */
        filterDirty?: pulumi.Input<string>;
        /**
         * Whether to pass modal particles (currently supports Mandarin Chinese engine): 0 means not to filter modal particles, 1 means partial filtering, 2 means strict filtering, and the default value is 0.
         */
        filterModal?: pulumi.Input<string>;
        /**
         * Whether to filter punctuation (currently supports Mandarin Chinese engine): 0 means no filtering, 1 means filtering end-of-sentence punctuation, 2 means filtering all punctuation, the default value is 0.
         */
        filterPunc?: pulumi.Input<string>;
        /**
         * Output file type, optional txt, srt. The default is txt.
         */
        outputFileType?: pulumi.Input<string>;
        /**
         * Recognition result return form: 0 means the recognition result text (including segmented time stamps), 1 is the detailed recognition result at the word level granularity, without punctuation, and includes the speech rate value (a list of word time stamps, generally used to generate subtitle scenes), 2 Detailed recognition results at word-level granularity (including punctuation and speech rate values)..
         */
        resTextFormat?: pulumi.Input<string>;
        /**
         * Whether to enable speaker separation: 0 means not enabled, 1 means enabled (only supports 8k_zh, 16k_zh, 16k_zh_video, monophonic audio), the default value is 0, Note: 8K telephony scenarios suggest using dual-channel to distinguish between the two parties, set ChannelNum=2 is enough, no need to enable speaker separation.
         */
        speakerDiarization?: pulumi.Input<string>;
        /**
         * The number of speakers to be separated (need to be used in conjunction with enabling speaker separation), value range: 0-10, 0 means automatic separation (currently only supports <= 6 people), 1-10 represents the number of specified speakers to be separated. The default value is 0.
         */
        speakerNumber?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateAudio {
        /**
         * Codec format, value aac, mp3, flac, amr, Vorbis, opus, pcm_s16le.
         */
        codec: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateContainer {
        /**
         * Fragment configuration, valid when format is hls and dash.
         */
        clipConfig?: pulumi.Input<inputs.Ci.MediaTranscodeProTemplateContainerClipConfig>;
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateContainerClipConfig {
        /**
         * Fragmentation duration, default 5s.
         */
        duration?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateTransConfig {
        /**
         * Resolution adjustment method, value scale, crop, pad, none, When the aspect ratio of the output video is different from the original video, adjust the resolution accordingly according to this parameter.
         */
        adjDarMethod?: pulumi.Input<string>;
        /**
         * Audio bit rate adjustment mode, value 0, 1; when the output audio bit rate is greater than the original audio bit rate, 0 means use the original audio bit rate; 1 means return transcoding failed, Take effect when IsCheckAudioBitrate is true.
         */
        audioBitrateAdjMethod?: pulumi.Input<string>;
        /**
         * Whether to delete the MetaData information in the file, true, false, When false, keep source file information.
         */
        deleteMetadata?: pulumi.Input<string>;
        /**
         * Whether to check the audio code rate, true, false, When false, transcode according to configuration parameters.
         */
        isCheckAudioBitrate?: pulumi.Input<string>;
        /**
         * Whether to check the resolution, when it is false, transcode according to the configuration parameters.
         */
        isCheckReso?: pulumi.Input<string>;
        /**
         * Whether to check the video code rate, when it is false, transcode according to the configuration parameters.
         */
        isCheckVideoBitrate?: pulumi.Input<string>;
        /**
         * Whether to enable HDR to SDR true, false.
         */
        isHdr2Sdr?: pulumi.Input<string>;
        /**
         * Resolution adjustment mode, value 0, 1; 0 means use the original video resolution; 1 means return transcoding failed, Take effect when IsCheckReso is true.
         */
        resoAdjMethod?: pulumi.Input<string>;
        /**
         * Video bit rate adjustment method, value 0, 1; when the output video bit rate is greater than the original video bit rate, 0 means use the original video bit rate; 1 means return transcoding failed, Take effect when IsCheckVideoBitrate is true.
         */
        videoBitrateAdjMethod?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format, default value: `H.264`, when format is WebM, it is VP8, value range: `H.264`, `H.265`, `VP8`, `VP9`, `AV1`.
         */
        codec?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * field pattern.
         */
        interlaced?: pulumi.Input<string>;
        /**
         * encoding level, Support baseline, main, high, auto- When Pixfmt is auto, this parameter can only be set to auto, when it is set to other options, the parameter value will be set to auto- baseline: suitable for mobile devices- main: suitable for standard resolution devices- high: suitable for high-resolution devices- Only H.264 supports this parameter.
         */
        profile?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac/flac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3/opus, support 1, 2- When Codec is set to Vorbis, only 2 is supported- When Codec is set to amr, only 1 is supported- When Codec is set to pcm_s16le, only 1 and 2 are supported- When the encapsulation format is dash, 8 is not supported.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3, flac, amr, Vorbis, opus, pcm_s16le.
         */
        codec?: pulumi.Input<string>;
        /**
         * Keep dual audio tracks, the value is true, false. This parameter is invalid when Video.Codec is H.265.
         */
        keepTwoTracks?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Sampling bit width- When Codec is set to aac, support fltp- When Codec is set to mp3, fltp, s16p, s32p are supported- When Codec is set to flac, s16, s32, s16p, s32p are supported- When Codec is set to amr, support s16, s16p- When Codec is set to opus, support s16- When Codec is set to pcm_s16le, support s16- When Codec is set to Vorbis, support fltp- This parameter is invalid when Video.Codec is H.265.
         */
        sampleFormat?: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000, 88200, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below- When Codec is set to amr, only 8000 is supported- When Codec is set to opus, it supports 8000, 16000, 24000, 48000.
         */
        samplerate?: pulumi.Input<string>;
        /**
         * Convert track, the value is true, false. This parameter is invalid when Video.Codec is H.265.
         */
        switchTrack?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateContainer {
        /**
         * Fragment configuration, valid when format is hls and dash.
         */
        clipConfig?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateContainerClipConfig>;
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateContainerClipConfig {
        /**
         * Fragmentation duration, default 5s.
         */
        duration?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTransConfig {
        /**
         * Resolution adjustment method, value scale, crop, pad, none, When the aspect ratio of the output video is different from the original video, adjust the resolution accordingly according to this parameter.
         */
        adjDarMethod?: pulumi.Input<string>;
        /**
         * Audio bit rate adjustment mode, value 0, 1; when the output audio bit rate is greater than the original audio bit rate, 0 means use the original audio bit rate; 1 means return transcoding failed, Take effect when IsCheckAudioBitrate is true.
         */
        audioBitrateAdjMethod?: pulumi.Input<string>;
        /**
         * Whether to delete the MetaData information in the file, true, false, When false, keep source file information.
         */
        deleteMetadata?: pulumi.Input<string>;
        /**
         * hls encryption configuration.
         */
        hlsEncrypt?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateTransConfigHlsEncrypt>;
        /**
         * Whether to check the audio code rate, true, false, When false, transcode according to configuration parameters.
         */
        isCheckAudioBitrate?: pulumi.Input<string>;
        /**
         * Whether to check the resolution, when it is false, transcode according to the configuration parameters.
         */
        isCheckReso?: pulumi.Input<string>;
        /**
         * Whether to check the video code rate, when it is false, transcode according to the configuration parameters.
         */
        isCheckVideoBitrate?: pulumi.Input<string>;
        /**
         * Whether to enable HDR to SDR true, false.
         */
        isHdr2Sdr?: pulumi.Input<string>;
        /**
         * Resolution adjustment mode, value 0, 1; 0 means use the original video resolution; 1 means return transcoding failed, Take effect when IsCheckReso is true.
         */
        resoAdjMethod?: pulumi.Input<string>;
        /**
         * Video bit rate adjustment method, value 0, 1; when the output video bit rate is greater than the original video bit rate, 0 means use the original video bit rate; 1 means return transcoding failed, Take effect when IsCheckVideoBitrate is true.
         */
        videoBitrateAdjMethod?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTransConfigHlsEncrypt {
        /**
         * Whether to enable HLS encryption, support encryption when Container.Format is hls.
         */
        isHlsEncrypt?: pulumi.Input<string>;
        /**
         * HLS encrypted key, this parameter is only meaningful when IsHlsEncrypt is true.
         */
        uriKey?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * buffer size, Value range: [1000, 128000], Unit: Kb, This parameter is not supported when Codec is VP8/VP9.
         */
        bufsize?: pulumi.Input<string>;
        /**
         * Codec format, default value: `H.264`, when format is WebM, it is VP8, value range: `H.264`, `H.265`, `VP8`, `VP9`, `AV1`.
         */
        codec?: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * The maximum number of frames between key frames, value range: [1, 100000].
         */
        gop?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Adaptive length,true, false, This parameter is not supported when Codec is VP8/VP9/AV1.
         */
        longShortMode?: pulumi.Input<string>;
        /**
         * Peak video bit rate, Value range: [10, 50000], Unit: Kbps, This parameter is not supported when Codec is VP8/VP9.
         */
        maxrate?: pulumi.Input<string>;
        /**
         * video color format, H.264 support: yuv420p, yuv422p, yuv444p, yuvj420p, yuvj422p, yuvj444p, auto, H.265 support: yuv420p, yuv420p10le, auto, This parameter is not supported when Codec is VP8/VP9/AV1.
         */
        pixfmt?: pulumi.Input<string>;
        /**
         * Video Algorithm Presets- H.264 supports this parameter, the values are veryfast, fast, medium, slow, slower- VP8 supports this parameter, the value is good, realtime- AV1 supports this parameter, the value is 5 (recommended value), 4- H.265 and VP9 do not support this parameter.
         */
        preset?: pulumi.Input<string>;
        /**
         * encoding level, Support baseline, main, high, auto- When Pixfmt is auto, this parameter can only be set to auto, when it is set to other options, the parameter value will be set to auto- baseline: suitable for mobile devices- main: suitable for standard resolution devices- high: suitable for high-resolution devices- Only H.264 supports this parameter.
         */
        profile?: pulumi.Input<string>;
        /**
         * Whether to delete the video stream, true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3.
         */
        codec: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 11025, 22050, 32000, 44100, 48000, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaVideoMontageTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateContainer {
        /**
         * Container format: mp4, flv, hls, ts, mkv.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format `H.264`.
         */
        codec: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaVideoProcessTemplateColorEnhance {
        /**
         * Contrast, value range: [0, 100], empty string (indicates automatic analysis).
         */
        contrast?: pulumi.Input<string>;
        /**
         * colorcorrection, value range: [0, 100], empty string (indicating automatic analysis).
         */
        correction?: pulumi.Input<string>;
        /**
         * Whether color enhancement is turned on.
         */
        enable?: pulumi.Input<string>;
        /**
         * Saturation, value range: [0, 100], empty string (indicating automatic analysis).
         */
        saturation?: pulumi.Input<string>;
    }

    export interface MediaVideoProcessTemplateMsSharpen {
        /**
         * Whether detail enhancement is enabled.
         */
        enable?: pulumi.Input<string>;
        /**
         * Enhancement level, value range: [0, 10], empty string (indicates automatic analysis).
         */
        sharpenLevel?: pulumi.Input<string>;
    }

    export interface MediaVoiceSeparateTemplateAudioConfig {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac/flac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2- When Codec is set to amr, only 1 is supported.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3, flac, amr.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling Rate- 1: Unit: Hz- 2: Optional 8000, 11025, 22050, 32000, 44100, 48000, 96000- 3: When Codec is set to aac/flac, 8000 is not supported- 4: When Codec is set to mp3, 8000 and 96000 are not supported- 5: When Codec is set to amr, only 8000 is supported.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermark {
        /**
         * Horizontal offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ], 2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Top, Bottom and Center, the parameter is invalid.
         */
        dx: pulumi.Input<string>;
        /**
         * Vertical offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ],2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096],3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Left, Right and Center, the parameter is invalid.
         */
        dy: pulumi.Input<string>;
        /**
         * Watermark end time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Image watermark node.
         */
        image?: pulumi.Input<inputs.Ci.MediaWatermarkTemplateWatermarkImage>;
        /**
         * Offset method, Relativity: proportional, Absolute: fixed position.
         */
        locMode: pulumi.Input<string>;
        /**
         * Reference position, TopRight, TopLeft, BottomRight, BottomLeft, Left, Right, Top, Bottom, Center.
         */
        pos: pulumi.Input<string>;
        /**
         * Watermark start time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Text Watermark Node.
         */
        text?: pulumi.Input<inputs.Ci.MediaWatermarkTemplateWatermarkText>;
        /**
         * Watermark type, Text: text watermark, Image: image watermark.
         */
        type: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermarkImage {
        /**
         * Whether the background image.
         */
        background: pulumi.Input<string>;
        /**
         * High, 1: When the Mode is Original, it does not support setting the width of the watermark image, 2: When the Mode is Proportion, the unit is %, the value range of the background image: [100 300]; the value range of the foreground image: [1 100], relative to Video width, up to 4096px, 3: When Mode is Fixed, the unit is px, value range: [8, 4096], 4: If only Width is set, Height is calculated according to the proportion of the watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Size mode, Original: original size, Proportion: proportional, Fixed: fixed size.
         */
        mode: pulumi.Input<string>;
        /**
         * Transparency, value range: [1 100], unit %.
         */
        transparency: pulumi.Input<string>;
        /**
         * Address of watermark map (pass in after Urlencode is required).
         */
        url: pulumi.Input<string>;
        /**
         * Width, 1: When the Mode is Original, it does not support setting the width of the watermark image, 2: When the Mode is Proportion, the unit is %, the value range of the background image: [100 300]; the value range of the foreground image: [1 100], relative to Video width, up to 4096px, 3: When Mode is Fixed, the unit is px, value range: [8, 4096], 4: If only Width is set, Height is calculated according to the proportion of the watermark image.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermarkText {
        /**
         * Font color, format: 0xRRGGBB.
         */
        fontColor: pulumi.Input<string>;
        /**
         * Font size, value range: [5 100], unit px.
         */
        fontSize: pulumi.Input<string>;
        /**
         * font type.
         */
        fontType: pulumi.Input<string>;
        /**
         * Watermark content, the length does not exceed 64 characters, only supports Chinese, English, numbers, _, - and *.
         */
        text: pulumi.Input<string>;
        /**
         * Transparency, value range: [1 100], unit %.
         */
        transparency: pulumi.Input<string>;
    }

}

export namespace Ckafka {
    export interface AclRuleRuleList {
        /**
         * The default is *, which means that any host can be accessed. Currently, ckafka does not support host and ip network segment.
         */
        host: pulumi.Input<string>;
        /**
         * Acl operation mode, enumeration value (all operations All, read Read, write Write).
         */
        operation: pulumi.Input<string>;
        /**
         * permission type, (Deny|Allow).
         */
        permissionType: pulumi.Input<string>;
        /**
         * User list, the default is User:, which means that any user can access, and the current user can only be the user included in the user list. The input format needs to be prefixed with [User:]. For example, user A is passed in as User:A.
         */
        principal: pulumi.Input<string>;
    }

    export interface ConnectResourceClickhouseConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Password for Clickhouse connection source.
         */
        password: pulumi.Input<string>;
        /**
         * Clickhouse connection port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resources for Click House connection sources.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Clickhouse connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * The username of the clickhouse connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceDorisConnectParam {
        /**
         * Doris http CLB port, Usually mapped to port 8040 of be.
         */
        bePort?: pulumi.Input<number>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Doris  password.
         */
        password: pulumi.Input<string>;
        /**
         * Doris jdbc CLB port, Usually mapped to port 9030 of fe.
         */
        port: pulumi.Input<number>;
        /**
         * Doris  instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * Doris Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * Doris vip, When it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * Doris vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Doris  The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceDtsConnectParam {
        /**
         * Id of the Dts consumption group.
         */
        groupId: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * The password of the Dts consumption group.
         */
        password: pulumi.Input<string>;
        /**
         * Dts port.
         */
        port: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Topic subscribed by Dts.
         */
        topic: pulumi.Input<string>;
        /**
         * The account number of the Dts consumption group.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceEsConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Es The password of the connection source.
         */
        password: pulumi.Input<string>;
        /**
         * Es port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of Es connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Es connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceKafkaConnectParam {
        /**
         * Kafka broker ip, Mandatory when self-built.
         */
        brokerAddress?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Dip task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * CKafka instanceId region, Required when crossing regions.
         */
        region?: pulumi.Input<string>;
        /**
         * Kafka instanceId, When it is a Tencent Cloud instance, it is required.
         */
        resource?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
    }

    export interface ConnectResourceMariadbConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * MariaDB password.
         */
        password: pulumi.Input<string>;
        /**
         * MariaDB port.
         */
        port: pulumi.Input<number>;
        /**
         * MariaDB instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * MariaDB The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceMongodbConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Password for the source of the Mongo DB connection.
         */
        password: pulumi.Input<string>;
        /**
         * MongoDB port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of Mongo DB connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Mongo DB connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * The username of the Mongo DB connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceMysqlConnectParam {
        /**
         * Required when type is TDSQL C_MYSQL.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Mysql connection source password.
         */
        password: pulumi.Input<string>;
        /**
         * MySQL port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of My SQL connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Mysql Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Username of Mysql connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourcePostgresqlConnectParam {
        /**
         * Required when type is TDSQL C_POSTGRESQL.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * PostgreSQL password.
         */
        password: pulumi.Input<string>;
        /**
         * PostgreSQL port.
         */
        port: pulumi.Input<number>;
        /**
         * PostgreSQL instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * PostgreSQL Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * PostgreSQL The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceSqlserverConnectParam {
        /**
         * Whether to update to the associated Dip task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * SQLServer password.
         */
        password: pulumi.Input<string>;
        /**
         * SQLServer port.
         */
        port: pulumi.Input<number>;
        /**
         * SQLServer instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * SQLServer The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResource {
        /**
         * ClickHouse config, Type CLICKHOUSE requierd.
         */
        clickHouseParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParam>;
        /**
         * Cls configuration, Required when Type is CLS.
         */
        clsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClsParam>;
        /**
         * Cos configuration, required when Type is COS.
         */
        cosParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceCosParam>;
        /**
         * Ctsdb configuration, Required when Type is CTSDB.
         */
        ctsdbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceCtsdbParam>;
        /**
         * Dts configuration, required when Type is DTS.
         */
        dtsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceDtsParam>;
        /**
         * Es configuration, required when Type is ES.
         */
        esParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParam>;
        /**
         * EB configuration, required when type is EB.
         */
        eventBusParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEventBusParam>;
        /**
         * ckafka configuration, required when Type is KAFKA.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceKafkaParam>;
        /**
         * MariaDB configuration, Required when Type is MARIADB.
         */
        mariaDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMariaDbParam>;
        /**
         * MongoDB config, Required when Type is MONGODB.
         */
        mongoDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMongoDbParam>;
        /**
         * MySQL configuration, Required when Type is MYSQL.
         */
        mySqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParam>;
        /**
         * PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
         */
        postgreSqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourcePostgreSqlParam>;
        /**
         * Scf configuration, Required when Type is SCF.
         */
        scfParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceScfParam>;
        /**
         * SQLServer configuration, Required when Type is SQLSERVER.
         */
        sqlServerParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceSqlServerParam>;
        /**
         * Tdw configuration, required when Type is TDW.
         */
        tdwParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceTdwParam>;
        /**
         * Topic configuration, Required when Type is Topic.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceTopicParam>;
        /**
         * resource type.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClickHouseParam {
        /**
         * ClickHouse cluster.
         */
        cluster: pulumi.Input<string>;
        /**
         * ClickHouse database name.
         */
        database: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParamDropCls>;
        /**
         * Whether ClickHouse discards the message that fails to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * ClickHouse ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * ClickHouse passwd.
         */
        password?: pulumi.Input<string>;
        /**
         * ClickHouse port.
         */
        port?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * ClickHouse schema.
         */
        schemas: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParamSchema>[]>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * ClickHouse table.
         */
        table: pulumi.Input<string>;
        /**
         * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
         */
        type?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * ClickHouse user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClickHouseParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceClickHouseParamSchema {
        /**
         * Whether the column item is allowed to be empty.
         */
        allowNull: pulumi.Input<boolean>;
        /**
         * column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * The json Key name corresponding to this column.
         */
        jsonKey: pulumi.Input<string>;
        /**
         * type of table column.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClsParam {
        /**
         * Required when Decode Json is false.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * Whether the produced information is in json format.
         */
        decodeJson: pulumi.Input<boolean>;
        /**
         * LogSet id.
         */
        logSet?: pulumi.Input<string>;
        /**
         * cls id.
         */
        resource: pulumi.Input<string>;
        /**
         * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
         */
        timeField?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceCosParam {
        /**
         * The size of aggregated messages MB.
         */
        aggregateBatchSize?: pulumi.Input<number>;
        /**
         * time interval.
         */
        aggregateInterval?: pulumi.Input<number>;
        /**
         * cos bucket name.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Partition format formatted according to strptime time.
         */
        directoryTimeFormat?: pulumi.Input<string>;
        /**
         * The file format after message aggregation csv|json.
         */
        formatOutputType?: pulumi.Input<string>;
        /**
         * ObjectKey.
         */
        objectKey?: pulumi.Input<string>;
        /**
         * Dumped object directory prefix.
         */
        objectKeyPrefix?: pulumi.Input<string>;
        /**
         * region code.
         */
        region: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceCtsdbParam {
        /**
         * Ctsdb metric.
         */
        ctsdbMetric?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceDtsParam {
        /**
         * Dts consumer group Id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Dts consumer group passwd.
         */
        groupPassword?: pulumi.Input<string>;
        /**
         * Dts account.
         */
        groupUser?: pulumi.Input<string>;
        /**
         * Dts connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Dts connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Dts topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
         */
        tranSql?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEsParam {
        /**
         * key for data in non-json format.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
         */
        databasePrimaryKey?: pulumi.Input<string>;
        /**
         * Es date suffix.
         */
        dateFormat?: pulumi.Input<string>;
        /**
         * The field name of the document ID value dumped into Es.
         */
        documentIdField?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropCls>;
        /**
         * dead letter queue.
         */
        dropDlq?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlq>;
        /**
         * Whether Es discards messages in non-json format.
         */
        dropInvalidJsonMessage?: pulumi.Input<boolean>;
        /**
         * Whether Es discards the message of parsing failure.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Es index name.
         */
        index?: pulumi.Input<string>;
        /**
         * Es custom index name type, STRING, JSONPATH, the default is STRING.
         */
        indexType?: pulumi.Input<string>;
        /**
         * Es Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Es connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Resource.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es UserName.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlq {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEventBusParam {
        /**
         * SCF function name.
         */
        functionName?: pulumi.Input<string>;
        /**
         * SCF namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF version and alias.
         */
        qualifier?: pulumi.Input<string>;
        /**
         * instance id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * resource type. EB_COS/EB_ES/EB_CLS.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskSourceResourceKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMariaDbParam {
        /**
         * MariaDB database name, * for all database.
         */
        database: pulumi.Input<string>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MariaDB connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMongoDbParam {
        /**
         * MongoDB collection.
         */
        collection: pulumi.Input<string>;
        /**
         * Whether to copy the stock data, the default parameter is true.
         */
        copyExisting: pulumi.Input<boolean>;
        /**
         * MongoDB database name.
         */
        database: pulumi.Input<string>;
        /**
         * Mongo DB connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
         */
        listeningEvent?: pulumi.Input<string>;
        /**
         * MongoDB database password.
         */
        password?: pulumi.Input<string>;
        /**
         * aggregation pipeline.
         */
        pipeline?: pulumi.Input<string>;
        /**
         * MongoDB connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Master-slave priority, default master node.
         */
        readPreference?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * MongoDB database user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParam {
        /**
         * the name of the column to be monitored.
         */
        dataSourceIncrementColumn?: pulumi.Input<string>;
        /**
         * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
         */
        dataSourceIncrementMode?: pulumi.Input<string>;
        /**
         * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
         */
        dataSourceMonitorMode?: pulumi.Input<string>;
        /**
         * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
         */
        dataSourceMonitorResource?: pulumi.Input<string>;
        /**
         * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
         */
        dataSourceStartFrom?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping>[]>;
        /**
         * MySQL database name, * is the whole database.
         */
        database: pulumi.Input<string>;
        /**
         * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
         */
        ddlTopic?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParamDropCls>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MySQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * database name of signal table.
         */
        signalDatabase?: pulumi.Input<string>;
        /**
         * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
         */
        table: pulumi.Input<string>;
        /**
         * Regular expression for routing events to specific topics, defaults to (.*).
         */
        topicRegex?: pulumi.Input<string>;
        /**
         * TopicRegex, $1, $2.
         */
        topicReplacement?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Corresponding mapping column name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current column size.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current column precision.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourcePostgreSqlParam {
        /**
         * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
         */
        dataFormat?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping>[]>;
        /**
         * PostgreSQL database name.
         */
        database: pulumi.Input<string>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * (decoderbufs/pgoutput), default decoderbufs.
         */
        pluginName: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * PostgreSQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * never|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Corresponding mapping column name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current column size.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current column precision.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceScfParam {
        /**
         * The maximum number of messages sent in each batch, the default is 1000.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * SCF function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * The number of retries after the SCF call fails, the default is 5.
         */
        maxRetries?: pulumi.Input<number>;
        /**
         * SCF cloud function namespace, the default is default.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF cloud function version and alias, the default is DEFAULT.
         */
        qualifier?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceSqlServerParam {
        /**
         * SQLServer database name.
         */
        database: pulumi.Input<string>;
        /**
         * SQLServer connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceTdwParam {
        /**
         * Tdw bid.
         */
        bid: pulumi.Input<string>;
        /**
         * default true.
         */
        isDomestic?: pulumi.Input<boolean>;
        /**
         * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
         */
        tdwHost?: pulumi.Input<string>;
        /**
         * TDW port, default 8099.
         */
        tdwPort?: pulumi.Input<number>;
        /**
         * Tdw tid.
         */
        tid: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResource {
        /**
         * ClickHouse config, Type CLICKHOUSE requierd.
         */
        clickHouseParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParam>;
        /**
         * Cls configuration, Required when Type is CLS.
         */
        clsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClsParam>;
        /**
         * Cos configuration, required when Type is COS.
         */
        cosParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceCosParam>;
        /**
         * Ctsdb configuration, Required when Type is CTSDB.
         */
        ctsdbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceCtsdbParam>;
        /**
         * Dts configuration, required when Type is DTS.
         */
        dtsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceDtsParam>;
        /**
         * Es configuration, required when Type is ES.
         */
        esParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParam>;
        /**
         * EB configuration, required when type is EB.
         */
        eventBusParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEventBusParam>;
        /**
         * ckafka configuration, required when Type is KAFKA.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceKafkaParam>;
        /**
         * MariaDB configuration, Required when Type is MARIADB.
         */
        mariaDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMariaDbParam>;
        /**
         * MongoDB config, Required when Type is MONGODB.
         */
        mongoDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMongoDbParam>;
        /**
         * MySQL configuration, Required when Type is MYSQL.
         */
        mySqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParam>;
        /**
         * PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
         */
        postgreSqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourcePostgreSqlParam>;
        /**
         * Scf configuration, Required when Type is SCF.
         */
        scfParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceScfParam>;
        /**
         * SQLServer configuration, Required when Type is SQLSERVER.
         */
        sqlServerParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceSqlServerParam>;
        /**
         * Tdw configuration, required when Type is TDW.
         */
        tdwParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceTdwParam>;
        /**
         * Topic configuration, Required when Type is Topic.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceTopicParam>;
        /**
         * Resource Type.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClickHouseParam {
        /**
         * ClickHouse cluster.
         */
        cluster: pulumi.Input<string>;
        /**
         * ClickHouse database name.
         */
        database: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParamDropCls>;
        /**
         * Whether ClickHouse discards the message that fails to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * ClickHouse ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * ClickHouse passwd.
         */
        password?: pulumi.Input<string>;
        /**
         * ClickHouse port.
         */
        port?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * ClickHouse schema.
         */
        schemas: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParamSchema>[]>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * ClickHouse table.
         */
        table: pulumi.Input<string>;
        /**
         * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
         */
        type?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * ClickHouse user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClickHouseParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceClickHouseParamSchema {
        /**
         * Whether the column item is allowed to be empty.
         */
        allowNull: pulumi.Input<boolean>;
        /**
         * column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * The json Key name corresponding to this column.
         */
        jsonKey: pulumi.Input<string>;
        /**
         * type of table column.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClsParam {
        /**
         * Required when Decode Json is false.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * Whether the produced information is in json format.
         */
        decodeJson: pulumi.Input<boolean>;
        /**
         * LogSet id.
         */
        logSet?: pulumi.Input<string>;
        /**
         * cls id.
         */
        resource: pulumi.Input<string>;
        /**
         * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
         */
        timeField?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceCosParam {
        /**
         * The size of aggregated messages MB.
         */
        aggregateBatchSize?: pulumi.Input<number>;
        /**
         * time interval.
         */
        aggregateInterval?: pulumi.Input<number>;
        /**
         * cos bucket name.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Partition format formatted according to strptime time.
         */
        directoryTimeFormat?: pulumi.Input<string>;
        /**
         * The file format after message aggregation csv|json.
         */
        formatOutputType?: pulumi.Input<string>;
        /**
         * ObjectKey.
         */
        objectKey?: pulumi.Input<string>;
        /**
         * Dumped object directory prefix.
         */
        objectKeyPrefix?: pulumi.Input<string>;
        /**
         * region code.
         */
        region: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceCtsdbParam {
        /**
         * Ctsdb metric.
         */
        ctsdbMetric?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceDtsParam {
        /**
         * Dts consumer group Id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Dts consumer group passwd.
         */
        groupPassword?: pulumi.Input<string>;
        /**
         * Dts account.
         */
        groupUser?: pulumi.Input<string>;
        /**
         * Dts connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Dts connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Dts topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
         */
        tranSql?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEsParam {
        /**
         * key for data in non-json format.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
         */
        databasePrimaryKey?: pulumi.Input<string>;
        /**
         * Es date suffix.
         */
        dateFormat?: pulumi.Input<string>;
        /**
         * The field name of the document ID value dumped into Es.
         */
        documentIdField?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropCls>;
        /**
         * dead letter queue.
         */
        dropDlq?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlq>;
        /**
         * Whether Es discards messages in non-json format.
         */
        dropInvalidJsonMessage?: pulumi.Input<boolean>;
        /**
         * Whether Es discards the message of parsing failure.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Es index name.
         */
        index?: pulumi.Input<string>;
        /**
         * Es custom index name type, STRING, JSONPATH, the default is STRING.
         */
        indexType?: pulumi.Input<string>;
        /**
         * Es Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Es connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Resource.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es UserName.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlq {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEventBusParam {
        /**
         * SCF function name.
         */
        functionName?: pulumi.Input<string>;
        /**
         * SCF namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF version and alias.
         */
        qualifier?: pulumi.Input<string>;
        /**
         * instance id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * resource type. EB_COS/EB_ES/EB_CLS.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTargetResourceKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMariaDbParam {
        /**
         * MariaDB database name, * for all database.
         */
        database: pulumi.Input<string>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MariaDB connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMongoDbParam {
        /**
         * MongoDB collection.
         */
        collection: pulumi.Input<string>;
        /**
         * Whether to copy the stock data, the default parameter is true.
         */
        copyExisting: pulumi.Input<boolean>;
        /**
         * MongoDB database name.
         */
        database: pulumi.Input<string>;
        /**
         * Mongo DB connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
         */
        listeningEvent?: pulumi.Input<string>;
        /**
         * MongoDB database password.
         */
        password?: pulumi.Input<string>;
        /**
         * aggregation pipeline.
         */
        pipeline?: pulumi.Input<string>;
        /**
         * MongoDB connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Master-slave priority, default master node.
         */
        readPreference?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * MongoDB database user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParam {
        /**
         * the name of the column to be monitored.
         */
        dataSourceIncrementColumn?: pulumi.Input<string>;
        /**
         * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
         */
        dataSourceIncrementMode?: pulumi.Input<string>;
        /**
         * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
         */
        dataSourceMonitorMode?: pulumi.Input<string>;
        /**
         * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
         */
        dataSourceMonitorResource?: pulumi.Input<string>;
        /**
         * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
         */
        dataSourceStartFrom?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping>[]>;
        /**
         * MySQL database name, * is the whole database.
         */
        database: pulumi.Input<string>;
        /**
         * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
         */
        ddlTopic?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParamDropCls>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MySQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * database name of signal table.
         */
        signalDatabase?: pulumi.Input<string>;
        /**
         * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
         */
        table: pulumi.Input<string>;
        /**
         * Regular expression for routing events to specific topics, defaults to (.*).
         */
        topicRegex?: pulumi.Input<string>;
        /**
         * TopicRegex, $1, $2.
         */
        topicReplacement?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Corresponding mapping column name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current column size.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current column precision.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParamDropCls {
        /**
         * cls log set.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * Delivery account of cls.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * topic of cls.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourcePostgreSqlParam {
        /**
         * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
         */
        dataFormat?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping>[]>;
        /**
         * PostgreSQL database name.
         */
        database: pulumi.Input<string>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * (decoderbufs/pgoutput), default decoderbufs.
         */
        pluginName: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * PostgreSQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * never|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Corresponding mapping column name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current column size.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current column precision.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceScfParam {
        /**
         * The maximum number of messages sent in each batch, the default is 1000.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * SCF function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * The number of retries after the SCF call fails, the default is 5.
         */
        maxRetries?: pulumi.Input<number>;
        /**
         * SCF cloud function namespace, the default is default.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF cloud function version and alias, the default is DEFAULT.
         */
        qualifier?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceSqlServerParam {
        /**
         * SQLServer database name.
         */
        database: pulumi.Input<string>;
        /**
         * SQLServer connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceTdwParam {
        /**
         * Tdw bid.
         */
        bid: pulumi.Input<string>;
        /**
         * default true.
         */
        isDomestic?: pulumi.Input<boolean>;
        /**
         * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
         */
        tdwHost?: pulumi.Input<string>;
        /**
         * TDW port, default 8099.
         */
        tdwPort?: pulumi.Input<number>;
        /**
         * Tdw tid.
         */
        tid: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParam {
        /**
         * Analysis result.
         */
        analyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamAnalyseResult>[]>;
        /**
         * parsing format, JSON | DELIMITER| REGULAR.
         */
        analysisFormat: pulumi.Input<string>;
        /**
         * Raw data.
         */
        content: pulumi.Input<string>;
        /**
         * Whether to keep parsing failure data.
         */
        failureParam: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParam>;
        /**
         * filter.
         */
        filterParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFilterParam>[]>;
        /**
         * Map.
         */
        mapParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamMapParam>[]>;
        /**
         * output format.
         */
        outputFormat: pulumi.Input<string>;
        /**
         * delimiter, regular expression.
         */
        regex?: pulumi.Input<string>;
        /**
         * Test Results.
         */
        result?: pulumi.Input<string>;
        /**
         * Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
         */
        sourceType: pulumi.Input<string>;
        /**
         * Whether the underlying engine uses eb.
         */
        useEventBus?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParamAnalyseResult {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
         */
        type?: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParam {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParamKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformParamFailureParamKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParamTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParamFilterParam {
        /**
         * Key.
         */
        key: pulumi.Input<string>;
        /**
         * Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
         */
        matchMode: pulumi.Input<string>;
        /**
         * REGULAR.
         */
        type?: pulumi.Input<string>;
        /**
         * Value.
         */
        value: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamMapParam {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
         */
        type?: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParam {
        /**
         * data process.
         */
        batchAnalyse?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamBatchAnalyse>;
        /**
         * Raw data.
         */
        content: pulumi.Input<string>;
        /**
         * fail process.
         */
        failureParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParam>;
        /**
         * processing chain.
         */
        fieldChains: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChain>[]>;
        /**
         * filter.
         */
        filterParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFilterParam>[]>;
        /**
         * Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
         */
        keepMetadata?: pulumi.Input<boolean>;
        /**
         * output format, JSON, ROW, default JSON.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The output format is ROW Required.
         */
        rowParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamRowParam>;
        /**
         * data source.
         */
        sourceType?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamBatchAnalyse {
        /**
         * ONE BY ONE single output, MERGE combined output.
         */
        format: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParam {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParamKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * Enable the fault-tolerant instance and enable the dead-letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * Partition num.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * resource id name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamKafkaParamTableMapping>[]>;
        /**
         * Topic name, multiple separated by,.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic Id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * Distribute to multiple topics switch, the default is false.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFailureParamKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParamTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformsParamFieldChain {
        /**
         * analyze.
         */
        analyse: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyse>;
        /**
         * Parsing results in JSON format.
         */
        analyseJsonResult?: pulumi.Input<string>;
        /**
         * Analysis result.
         */
        analyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResult>[]>;
        /**
         * Test Results.
         */
        result?: pulumi.Input<string>;
        /**
         * data processing.
         */
        sMTs?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMT>[]>;
        /**
         * secondary analysis.
         */
        secondaryAnalyse?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyse>;
        /**
         * Secondary parsing results in JSON format.
         */
        secondaryAnalyseJsonResult?: pulumi.Input<string>;
        /**
         * Secondary Analysis Results.
         */
        secondaryAnalyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyse {
        /**
         * Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
         */
        format: pulumi.Input<string>;
        /**
         * KEY to be processed again - KEY expression.
         */
        inputValue?: pulumi.Input<string>;
        /**
         * KEY to be processed again - mode.
         */
        inputValueType?: pulumi.Input<string>;
        /**
         * delimiter, regular expression.
         */
        regex?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResult {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMT {
        /**
         * KEY.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * VALUE.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyse {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult {
        /**
         * KEY.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * VALUE.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFilterParam {
        /**
         * Key.
         */
        key: pulumi.Input<string>;
        /**
         * Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
         */
        matchMode: pulumi.Input<string>;
        /**
         * REGULAR.
         */
        type?: pulumi.Input<string>;
        /**
         * Value.
         */
        value: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamRowParam {
        /**
         * delimiter.
         */
        entryDelimiter?: pulumi.Input<string>;
        /**
         * key, value delimiter.
         */
        keyValueDelimiter?: pulumi.Input<string>;
        /**
         * row content, KEY_VALUE, VALUE.
         */
        rowContent: pulumi.Input<string>;
    }

    export interface GetInstancesFilter {
        /**
         * The field that needs to be filtered.
         */
        name: string;
        /**
         * The filtered value of the field.
         */
        values: string[];
    }

    export interface GetInstancesFilterArgs {
        /**
         * The field that needs to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * The filtered value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceConfig {
        /**
         * Automatic creation. true: enabled, false: not enabled.
         */
        autoCreateTopicEnable: pulumi.Input<boolean>;
        /**
         * If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
         */
        defaultNumPartitions: pulumi.Input<number>;
        /**
         * If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
         */
        defaultReplicationFactor: pulumi.Input<number>;
    }

    export interface InstanceDynamicRetentionConfig {
        /**
         * Minimum retention time, in minutes.
         */
        bottomRetention?: pulumi.Input<number>;
        /**
         * Disk quota threshold (in percentage) for triggering the message retention time change event.
         */
        diskQuotaPercentage?: pulumi.Input<number>;
        /**
         * Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
         */
        enable?: pulumi.Input<number>;
        /**
         * Percentage by which the message retention time is shortened each time.
         */
        stepForwardPercentage?: pulumi.Input<number>;
    }

    export interface InstanceTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Clb {
    export interface AttachmentTarget {
        /**
         * Eni IP address of the backend server, conflict with `instanceId` but must specify one of them.
         */
        eniIp?: pulumi.Input<string>;
        /**
         * CVM Instance Id of the backend server, conflict with `eniIp` but must specify one of them.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Port of the backend server. Valid value ranges: (0~65535).
         */
        port: pulumi.Input<number>;
        /**
         * Forwarding weight of the backend service. Valid value ranges: (0~100). defaults to `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface FunctionTargetsAttachmentFunctionTargets {
        /**
         * Information about cloud functions.Note: This field may return null, indicating that no valid value can be obtained.
         */
        function: pulumi.Input<inputs.Clb.FunctionTargetsAttachmentFunctionTargetsFunction>;
        /**
         * Weight. The default is `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface FunctionTargetsAttachmentFunctionTargetsFunction {
        /**
         * The name of function.
         */
        functionName: pulumi.Input<string>;
        /**
         * The namespace of function.
         */
        functionNamespace: pulumi.Input<string>;
        /**
         * The version name or alias of the function.
         */
        functionQualifier: pulumi.Input<string>;
        /**
         * Identifies the type of FunctionQualifier parameter, possible values: VERSION, ALIAS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        functionQualifierType?: pulumi.Input<string>;
    }

    export interface GetClusterResourcesFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetClusterResourcesFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCrossTargetsFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCrossTargetsFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetExclusiveClustersFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetExclusiveClustersFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstanceDetailFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstanceDetailFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetListenersByTargetsBackendArgs {
        /**
         * Private network IP to be queried, which can be of the CVM or ENI.
         */
        privateIp: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface GetListenersByTargetsBackend {
        /**
         * Private network IP to be queried, which can be of the CVM or ENI.
         */
        privateIp: string;
        /**
         * VPC ID.
         */
        vpcId: string;
    }

    export interface GetResourcesFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetResourcesFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetTargetGroupListFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetTargetGroupListFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface InstanceSnatIp {
        /**
         * Snat IP address, If set to empty will auto allocated.
         */
        ip?: pulumi.Input<string>;
        /**
         * Snat subnet ID.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface ReplaceCertForLbsCertificate {
        /**
         * Content of the uploaded client certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
         */
        certCaContent?: pulumi.Input<string>;
        /**
         * ID of a client certificate. When the listener adopts mutual authentication (i.e., SSLMode = mutual), if you leave this parameter empty, you must upload the client certificate, including CertCaContent and CertCaName.
         */
        certCaId?: pulumi.Input<string>;
        /**
         * Name of the uploaded client CA certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
         */
        certCaName?: pulumi.Input<string>;
        /**
         * Content of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certContent?: pulumi.Input<string>;
        /**
         * ID of a server certificate. If you leave this parameter empty, you must upload the certificate, including CertContent, CertKey, and CertName.
         */
        certId?: pulumi.Input<string>;
        /**
         * Key of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certKey?: pulumi.Input<string>;
        /**
         * Name of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certName?: pulumi.Input<string>;
        /**
         * Authentication type. Value range: UNIDIRECTIONAL (unidirectional authentication), MUTUAL (mutual authentication).
         */
        sslMode?: pulumi.Input<string>;
    }

    export interface SnatIpIp {
        /**
         * Snat IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface TargetGroupTargetGroupInstance {
        /**
         * The internal ip of target group instance.
         */
        bindIp: pulumi.Input<string>;
        /**
         * The new port of target group instance.
         */
        newPort?: pulumi.Input<number>;
        /**
         * The port of target group instance.
         */
        port: pulumi.Input<number>;
        /**
         * The weight of target group instance.
         */
        weight?: pulumi.Input<number>;
    }
}

export namespace Cls {
    export interface AlarmAlarmTarget {
        /**
         * search end time of offset.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * logset id.
         */
        logsetId: pulumi.Input<string>;
        /**
         * the number of alarm object.
         */
        number: pulumi.Input<number>;
        /**
         * query rules.
         */
        query: pulumi.Input<string>;
        /**
         * search start time of offset.
         */
        startTimeOffset: pulumi.Input<number>;
        /**
         * topic id.
         */
        topicId: pulumi.Input<string>;
    }

    export interface AlarmAnalysis {
        /**
         * configuration.
         */
        configInfos?: pulumi.Input<pulumi.Input<inputs.Cls.AlarmAnalysisConfigInfo>[]>;
        /**
         * analysis content.
         */
        content: pulumi.Input<string>;
        /**
         * analysis name.
         */
        name: pulumi.Input<string>;
        /**
         * analysis type.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmAnalysisConfigInfo {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface AlarmCallBack {
        /**
         * callback body.
         */
        body: pulumi.Input<string>;
        /**
         * callback headers.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AlarmMonitorTime {
        /**
         * time period or point in time.
         */
        time: pulumi.Input<number>;
        /**
         * Period for periodic execution, Fixed for regular execution.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmNoticeNoticeReceiver {
        /**
         * end time allowed to receive messages.
         */
        endTime?: pulumi.Input<string>;
        /**
         * index.
         */
        index?: pulumi.Input<number>;
        /**
         * receiver channels, Email,Sms,WeChat or Phone.
         */
        receiverChannels: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * receiver id.
         */
        receiverIds: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * receiver type, Uin or Group.
         */
        receiverType: pulumi.Input<string>;
        /**
         * start time allowed to receive messages.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface AlarmNoticeWebCallback {
        /**
         * abandoned.
         */
        body?: pulumi.Input<string>;
        /**
         * callback type, WeCom or Http.
         */
        callbackType: pulumi.Input<string>;
        /**
         * abandoned.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * index.
         */
        index?: pulumi.Input<number>;
        /**
         * Method, POST or PUT.
         */
        method?: pulumi.Input<string>;
        /**
         * callback url.
         */
        url: pulumi.Input<string>;
    }

    export interface CkafkaConsumerCkafka {
        /**
         * instance id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * instance name.
         */
        instanceName: pulumi.Input<string>;
        /**
         * topic id of ckafka.
         */
        topicId: pulumi.Input<string>;
        /**
         * topic name of ckafka.
         */
        topicName: pulumi.Input<string>;
        /**
         * vip.
         */
        vip: pulumi.Input<string>;
        /**
         * vport.
         */
        vport: pulumi.Input<string>;
    }

    export interface CkafkaConsumerContent {
        /**
         * whether to deliver the TAG info.
         */
        enableTag: pulumi.Input<boolean>;
        /**
         * metadata info list.
         */
        metaFields: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * whether to tiling tag json.
         */
        tagJsonNotTiled?: pulumi.Input<boolean>;
        /**
         * delivery timestamp precision,1 for second, 2 for millisecond.
         */
        timestampAccuracy?: pulumi.Input<number>;
    }

    export interface ConfigExcludePath {
        /**
         * Type. Valid values: File, Path.
         */
        type?: pulumi.Input<string>;
        /**
         * Specific content corresponding to Type.
         */
        value?: pulumi.Input<string>;
    }

    export interface ConfigExtraContainerFile {
        /**
         * Container name.
         */
        container: pulumi.Input<string>;
        /**
         * Pod label to be excluded.
         */
        excludeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespaces to be excluded, separated by separators, such as A, B.
         */
        excludeNamespace?: pulumi.Input<string>;
        /**
         * log name.
         */
        filePattern: pulumi.Input<string>;
        /**
         * Pod label info.
         */
        includeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Log Path.
         */
        logPath: pulumi.Input<string>;
        /**
         * Namespace. There can be multiple namespaces, separated by separators, such as A, B.
         */
        namespace: pulumi.Input<string>;
        /**
         * Workload info.
         */
        workload?: pulumi.Input<inputs.Cls.ConfigExtraContainerFileWorkload>;
    }

    export interface ConfigExtraContainerFileWorkload {
        /**
         * container name.
         */
        container?: pulumi.Input<string>;
        /**
         * workload type.
         */
        kind: pulumi.Input<string>;
        /**
         * workload name.
         */
        name: pulumi.Input<string>;
        /**
         * namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ConfigExtraContainerStdout {
        /**
         * Is all containers.
         */
        allContainers: pulumi.Input<boolean>;
        /**
         * Pod label to be excluded.
         */
        excludeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespaces to be excluded, separated by separators, such as A, B.
         */
        excludeNamespace?: pulumi.Input<string>;
        /**
         * Pod label info.
         */
        includeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespace. There can be multiple namespaces, separated by separators, such as A, B.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Workload info.
         */
        workloads?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtraContainerStdoutWorkload>[]>;
    }

    export interface ConfigExtraContainerStdoutWorkload {
        /**
         * container name.
         */
        container?: pulumi.Input<string>;
        /**
         * workload type.
         */
        kind: pulumi.Input<string>;
        /**
         * workload name.
         */
        name: pulumi.Input<string>;
        /**
         * namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ConfigExtraExcludePath {
        /**
         * Type. Valid values: File, Path.
         */
        type?: pulumi.Input<string>;
        /**
         * Specific content corresponding to Type.
         */
        value?: pulumi.Input<string>;
    }

    export interface ConfigExtraExtractRule {
        /**
         * Size of the data to be rewound in incremental collection mode. Default value: -1 (full collection).
         */
        backtracking?: pulumi.Input<number>;
        /**
         * First-Line matching rule, which is valid only if logType is multilineLog or fullregex_log.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * Delimiter for delimited log, which is valid only if logType is delimiter_log.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * Log keys to be filtered and the corresponding regex.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtraExtractRuleFilterKeyRegex>[]>;
        /**
         * Key name of each extracted field. An empty key indicates to discard the field. This parameter is valid only if logType is delimiter_log. jsonLog logs use the key of JSON itself.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Full log matching rule, which is valid only if logType is fullregex_log.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * Time field format. For more information, please see the output parameters of the time format description of the strftime function in C language.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Time field key name. timeKey and timeFormat must appear in pair.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * Unmatched log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * Whether to upload the logs that failed to be parsed. Valid values: true: yes; false: no.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface ConfigExtraExtractRuleFilterKeyRegex {
        /**
         * Log key to be filtered.
         */
        key?: pulumi.Input<string>;
        /**
         * Filter rule regex corresponding to key.
         */
        regex?: pulumi.Input<string>;
    }

    export interface ConfigExtraHostFile {
        /**
         * Metadata info.
         */
        customLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Log file name.
         */
        filePattern: pulumi.Input<string>;
        /**
         * Log file dir.
         */
        logPath: pulumi.Input<string>;
    }

    export interface ConfigExtractRule {
        /**
         * syslog system log collection specifies the address and port that the collector listens to.
         */
        address?: pulumi.Input<string>;
        /**
         * Size of the data to be rewound in incremental collection mode. Default value: -1 (full collection).
         */
        backtracking?: pulumi.Input<number>;
        /**
         * First-Line matching rule, which is valid only if logType is multilineLog or fullregex_log.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * Delimiter for delimited log, which is valid only if logType is delimiter_log.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * Log keys to be filtered and the corresponding regex.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtractRuleFilterKeyRegex>[]>;
        /**
         * GBK encoding. Default 0.
         */
        isGbk?: pulumi.Input<number>;
        /**
         * standard json. Default 0.
         */
        jsonStandard?: pulumi.Input<number>;
        /**
         * Key name of each extracted field. An empty key indicates to discard the field. This parameter is valid only if logType is delimiter_log. jsonLog logs use the key of JSON itself.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Full log matching rule, which is valid only if logType is fullregex_log.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * metadata tags.
         */
        metaTags?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtractRuleMetaTag>[]>;
        /**
         * metadata type.
         */
        metadataType?: pulumi.Input<number>;
        /**
         * parse protocol.
         */
        parseProtocol?: pulumi.Input<string>;
        /**
         * metadata path regex.
         */
        pathRegex?: pulumi.Input<string>;
        /**
         * syslog protocol, tcp or udp.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Time field format. For more information, please see the output parameters of the time format description of the strftime function in C language.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Time field key name. timeKey and timeFormat must appear in pair.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * Unmatched log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * Whether to upload the logs that failed to be parsed. Valid values: true: yes; false: no.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface ConfigExtractRuleFilterKeyRegex {
        /**
         * Log key to be filtered.
         */
        key?: pulumi.Input<string>;
        /**
         * Filter rule regex corresponding to key.
         */
        regex?: pulumi.Input<string>;
    }

    export interface ConfigExtractRuleMetaTag {
        /**
         * tag key.
         */
        key?: pulumi.Input<string>;
        /**
         * tag value.
         */
        value?: pulumi.Input<string>;
    }

    export interface CosRechargeExtractRuleInfo {
        /**
         * syslog address.
         */
        address?: pulumi.Input<string>;
        /**
         * backtracking data volume in incremental acquisition mode.
         */
        backtracking?: pulumi.Input<number>;
        /**
         * begin line regex.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * log delimiter.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * rules that need to filter logs.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.CosRechargeExtractRuleInfoFilterKeyRegex>[]>;
        /**
         * gbk encoding.
         */
        isGbk?: pulumi.Input<number>;
        /**
         * is standard json.
         */
        jsonStandard?: pulumi.Input<number>;
        /**
         * key list.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * log regex.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * metadata tag list.
         */
        metaTags?: pulumi.Input<pulumi.Input<inputs.Cls.CosRechargeExtractRuleInfoMetaTag>[]>;
        /**
         * metadata type.
         */
        metadataType?: pulumi.Input<number>;
        /**
         * parse protocol.
         */
        parseProtocol?: pulumi.Input<string>;
        /**
         * metadata path regex.
         */
        pathRegex?: pulumi.Input<string>;
        /**
         * syslog protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * time format.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * time key.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * parsing failure log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * whether to upload the parsing failure log.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface CosRechargeExtractRuleInfoFilterKeyRegex {
        /**
         * need filter log key.
         */
        key: pulumi.Input<string>;
        /**
         * need filter log regex.
         */
        regex: pulumi.Input<string>;
    }

    export interface CosRechargeExtractRuleInfoMetaTag {
        /**
         * metadata key.
         */
        key?: pulumi.Input<string>;
        /**
         * metadata value.
         */
        value?: pulumi.Input<string>;
    }

    export interface CosShipperCompress {
        /**
         * Compression format. Valid values: gzip, lzop, none (no compression).
         */
        format: pulumi.Input<string>;
    }

    export interface CosShipperContent {
        /**
         * CSV format content description.Note: this field may return null, indicating that no valid values can be obtained.
         */
        csv?: pulumi.Input<inputs.Cls.CosShipperContentCsv>;
        /**
         * Content format. Valid values: json, csv.
         */
        format: pulumi.Input<string>;
        /**
         * JSON format content description.Note: this field may return null, indicating that no valid values can be obtained.
         */
        json?: pulumi.Input<inputs.Cls.CosShipperContentJson>;
    }

    export interface CosShipperContentCsv {
        /**
         * Field delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Field delimiter.
         */
        escapeChar: pulumi.Input<string>;
        /**
         * Names of keys.Note: this field may return null, indicating that no valid values can be obtained.
         */
        keys: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Content used to populate non-existing fields.
         */
        nonExistingField: pulumi.Input<string>;
        /**
         * Whether to print key on the first row of the CSV file.
         */
        printKey: pulumi.Input<boolean>;
    }

    export interface CosShipperContentJson {
        /**
         * Enablement flag.
         */
        enableTag: pulumi.Input<boolean>;
        /**
         * Metadata information list
         * Note: this field may return null, indicating that no valid values can be obtained..
         */
        metaFields: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CosShipperFilterRule {
        /**
         * Filter rule key.
         */
        key: pulumi.Input<string>;
        /**
         * Filter rule.
         */
        regex: pulumi.Input<string>;
        /**
         * Filter rule value.
         */
        value: pulumi.Input<string>;
    }

    export interface IndexRule {
        /**
         * Full-Text index configuration.
         */
        fullText?: pulumi.Input<inputs.Cls.IndexRuleFullText>;
        /**
         * Key-Value index configuration.
         */
        keyValue?: pulumi.Input<inputs.Cls.IndexRuleKeyValue>;
        /**
         * Metafield index configuration.
         */
        tag?: pulumi.Input<inputs.Cls.IndexRuleTag>;
    }

    export interface IndexRuleFullText {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Whether Chinese characters are contained.
         */
        containZH: pulumi.Input<boolean>;
        /**
         * Full-Text index delimiter. Each character in the string represents a delimiter.
         */
        tokenizer: pulumi.Input<string>;
    }

    export interface IndexRuleKeyValue {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Key-Value pair information of the index to be created. Up to 100 key-value pairs can be configured.
         */
        keyValues?: pulumi.Input<pulumi.Input<inputs.Cls.IndexRuleKeyValueKeyValue>[]>;
    }

    export interface IndexRuleKeyValueKeyValue {
        /**
         * When a key value or metafield index needs to be configured for a field, the metafield Key does not need to be prefixed with __TAG__. and is consistent with the one when logs are uploaded. __TAG__. will be prefixed automatically for display in the console..
         */
        key: pulumi.Input<string>;
        /**
         * Field index description information.
         */
        value?: pulumi.Input<inputs.Cls.IndexRuleKeyValueKeyValueValue>;
    }

    export interface IndexRuleKeyValueKeyValueValue {
        /**
         * Whether Chinese characters are contained.
         */
        containZH?: pulumi.Input<boolean>;
        /**
         * Whether the analysis feature is enabled for the field.
         */
        sqlFlag?: pulumi.Input<boolean>;
        /**
         * Field delimiter, which is meaningful only if the field type is text. Each character in the entered string represents a delimiter.
         */
        tokenizer?: pulumi.Input<string>;
        /**
         * Field type. Valid values: long, text, double.
         */
        type: pulumi.Input<string>;
    }

    export interface IndexRuleTag {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Key-Value pair information of the index to be created. Up to 100 key-value pairs can be configured.
         */
        keyValues?: pulumi.Input<pulumi.Input<inputs.Cls.IndexRuleTagKeyValue>[]>;
    }

    export interface IndexRuleTagKeyValue {
        /**
         * When a key value or metafield index needs to be configured for a field, the metafield Key does not need to be prefixed with __TAG__. and is consistent with the one when logs are uploaded. __TAG__. will be prefixed automatically for display in the console..
         */
        key: pulumi.Input<string>;
        /**
         * Field index description information.
         */
        value?: pulumi.Input<inputs.Cls.IndexRuleTagKeyValueValue>;
    }

    export interface IndexRuleTagKeyValueValue {
        /**
         * Whether Chinese characters are contained.
         */
        containZH?: pulumi.Input<boolean>;
        /**
         * Whether the analysis feature is enabled for the field.
         */
        sqlFlag?: pulumi.Input<boolean>;
        /**
         * Field delimiter, which is meaningful only if the field type is text. Each character in the entered string represents a delimiter.
         */
        tokenizer?: pulumi.Input<string>;
        /**
         * Field type. Valid values: long, text, double.
         */
        type: pulumi.Input<string>;
    }

    export interface MachineGroupMachineGroupType {
        /**
         * Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
         */
        type: pulumi.Input<string>;
        /**
         * Machine description list.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Cos {
    export interface BatchManifest {
        /**
         * The location information of the list of objects.
         */
        location: pulumi.Input<inputs.Cos.BatchManifestLocation>;
        /**
         * Format information that describes the list of objects. If it is a CSV file, this element describes the fields contained in the manifest.
         */
        spec: pulumi.Input<inputs.Cos.BatchManifestSpec>;
    }

    export interface BatchManifestLocation {
        /**
         * Specifies the etag of the object list. Length 1-1024 bytes.
         */
        etag: pulumi.Input<string>;
        /**
         * Specifies the unique resource identifier of the object manifest, which is 1-1024 bytes long.
         */
        objectArn: pulumi.Input<string>;
        /**
         * Specifies the version of the object manifest ID, which is 1-1024 bytes long.
         */
        objectVersionId?: pulumi.Input<string>;
    }

    export interface BatchManifestSpec {
        /**
         * Describes the fields contained in the listing, which you need to use to specify CSV file fields when Format is COSBatchOperations_CSV_V1. Legal fields are: Ignore, Bucket, Key, VersionId.
         */
        fields?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the format information for the list of objects. Legal fields are: COSBatchOperations_CSV_V1, COSInventoryReport_CSV_V1.
         */
        format: pulumi.Input<string>;
    }

    export interface BatchOperation {
        /**
         * Specifies the specific parameters for the batch restore operation for archive storage type objects in the inventory.
         */
        cosInitiateRestoreObject?: pulumi.Input<inputs.Cos.BatchOperationCosInitiateRestoreObject>;
        /**
         * Specifies the specific parameters for the batch copy operation on the objects in the list.
         */
        cosPutObjectCopy?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopy>;
    }

    export interface BatchOperationCosInitiateRestoreObject {
        /**
         * Sets the number of days after which the copy will be automatically expired and deleted, an integer in the range of 1-365.
         */
        expirationInDays: pulumi.Input<number>;
        /**
         * Select archive recovery model. Available values: Bulk, Standard.
         */
        jobTier: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopy {
        /**
         * This element specifies how ACL is copied. Valid values:
         * - Copy: inherits the source object ACL
         * - Replaced: replace source ACL
         * - Add: add a new ACL based on the source ACL.
         */
        accessControlDirective?: pulumi.Input<string>;
        /**
         * Controls the specific access to the object.
         */
        accessControlGrants?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyAccessControlGrants>;
        /**
         * Defines the ACL property of the object. Valid values: private, public-read.
         */
        cannedAccessControlList?: pulumi.Input<string>;
        /**
         * This element specifies whether to copy object metadata from the source object or replace it with metadata in the < NewObjectMetadata > element. Valid values are: Copy, Replaced, Add. Copy: inherit source object metadata; Replaced: replace source metadata; Add: add new metadata based on source metadata.
         */
        metadataDirective?: pulumi.Input<string>;
        /**
         * When the object is modified after the specified time, the operation is performed, otherwise 412 is returned.
         */
        modifiedSinceConstraint?: pulumi.Input<number>;
        /**
         * Configure the metadata for the object.
         */
        newObjectMetadata?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectMetadata>;
        /**
         * The label of the configuration object, which must be specified when the < TaggingDirective > value is Replace or Add.
         */
        newObjectTaggings?: pulumi.Input<pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectTagging>[]>;
        /**
         * Specifies whether the prefix of the source object needs to be replaced. A value of true indicates the replacement object prefix, which needs to be used with <ResourcesPrefix> and <TargetKeyPrefix>. Default value: false.
         */
        prefixReplace?: pulumi.Input<boolean>;
        /**
         * This field is valid only when the < PrefixReplace > value is true. Specify the source object prefix to be replaced, and the replacement directory should end with `/`. Can be empty with a maximum length of 1024 bytes.
         */
        resourcesPrefix?: pulumi.Input<string>;
        /**
         * Sets the storage level of the object. Enumerated value: STANDARD,STANDARD_IA. Default value: STANDARD.
         */
        storageClass?: pulumi.Input<string>;
        /**
         * This element specifies whether to copy the object tag from the source object or replace it with the tag in the < NewObjectTagging > element. Valid values are: Copy, Replaced, Add. Copy: inherits the source object tag; Replaced: replaces the source tag; Add: adds a new tag based on the source tag.
         */
        taggingDirective?: pulumi.Input<string>;
        /**
         * This field is valid only when the <PrefixReplace> value is true. This value represents the replaced prefix, and the replacement directory should end with /. Can be empty with a maximum length of 1024 bytes.
         */
        targetKeyPrefix?: pulumi.Input<string>;
        /**
         * Sets the target bucket for the Copy. Use qcs to specify, for example, qcs::cos:ap-chengdu:uid/1250000000:examplebucket-1250000000.
         */
        targetResource: pulumi.Input<string>;
        /**
         * When the object has not been modified after the specified time, the operation is performed, otherwise 412 is returned.
         */
        unmodifiedSinceConstraint?: pulumi.Input<number>;
    }

    export interface BatchOperationCosPutObjectCopyAccessControlGrants {
        /**
         * User name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * User ID (UIN) in qcs format. For example: qcs::cam::uin/100000000001:uin/100000000001.
         */
        identifier: pulumi.Input<string>;
        /**
         * Specify a permission to be granted. Enumerated value: READ,WRITE,FULL_CONTROL.
         */
        permission: pulumi.Input<string>;
        /**
         * Specifies the type of Identifier. Currently, only user ID is supported. Enumerated value: ID.
         */
        typeIdentifier: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectMetadata {
        /**
         * The caching instructions defined in RFC 2616 are saved as object metadata.
         */
        cacheControl?: pulumi.Input<string>;
        /**
         * The file name defined in RFC 2616 is saved as object metadata.
         */
        contentDisposition?: pulumi.Input<string>;
        /**
         * The encoding format defined in RFC 2616 is saved as object metadata.
         */
        contentEncoding?: pulumi.Input<string>;
        /**
         * The content types defined in RFC 2616 are saved as object metadata.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The cache expiration time defined in RFC 2616 is saved as object metadata.
         */
        httpExpiresDate?: pulumi.Input<string>;
        /**
         * Server encryption algorithm. Currently, only AES256 is supported.
         */
        sseAlgorithm?: pulumi.Input<string>;
        /**
         * Includes user-defined metadata.
         */
        userMetadatas?: pulumi.Input<pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectMetadataUserMetadata>[]>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectMetadataUserMetadata {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectTagging {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface BatchReport {
        /**
         * Delivery bucket for task completion reports.
         */
        bucket: pulumi.Input<string>;
        /**
         * Whether to output the task completion report.
         */
        enabled: pulumi.Input<string>;
        /**
         * Task completion report format information. Legal value: Report_CSV_V1.
         */
        format: pulumi.Input<string>;
        /**
         * Prefix information for the task completion report. Length 0-256 bytes.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Task completion report the task information that needs to be recorded to determine whether to record the execution information of all operations or the information of failed operations. Legal values: AllTasks, FailedTasksOnly.
         */
        reportScope: pulumi.Input<string>;
    }

    export interface BucketCorsRule {
        /**
         * Specifies which headers are allowed.
         */
        allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
         */
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which origins are allowed.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies expose header in the response.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies time in seconds that browser can cache the response for a preflight request.
         */
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificate {
        /**
         * Certificate info.
         */
        certificate: pulumi.Input<inputs.Cos.BucketDomainCertificateAttachmentDomainCertificateCertificate>;
        /**
         * The name of domain.
         */
        domain: pulumi.Input<string>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificateCertificate {
        /**
         * Certificate type.
         */
        certType: pulumi.Input<string>;
        /**
         * Custom certificate.
         */
        customCert: pulumi.Input<inputs.Cos.BucketDomainCertificateAttachmentDomainCertificateCertificateCustomCert>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificateCertificateCustomCert {
        /**
         * Public key of certificate.
         */
        cert: pulumi.Input<string>;
        /**
         * Private key of certificate.
         */
        privateKey: pulumi.Input<string>;
    }

    export interface BucketInventoryDestination {
        /**
         * ID of the bucket owner.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Bucket name.
         */
        bucket: pulumi.Input<string>;
        /**
         * Server-side encryption for the inventory result.
         */
        encryption?: pulumi.Input<inputs.Cos.BucketInventoryDestinationEncryption>;
        /**
         * Format of the inventory result. Valid value: CSV.
         */
        format: pulumi.Input<string>;
        /**
         * Prefix of the inventory result.
         */
        prefix?: pulumi.Input<string>;
    }

    export interface BucketInventoryDestinationEncryption {
        /**
         * Encryption with COS-managed key. This field can be left empty.
         */
        sseCos?: pulumi.Input<string>;
    }

    export interface BucketInventoryFilter {
        /**
         * Creation time range of the objects to analyze.
         */
        period?: pulumi.Input<inputs.Cos.BucketInventoryFilterPeriod>;
        /**
         * Prefix of the objects to analyze.
         */
        prefix?: pulumi.Input<string>;
    }

    export interface BucketInventoryFilterPeriod {
        /**
         * Creation end time of the objects to analyze. The parameter is a timestamp in seconds, for example, 1568688762.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Creation start time of the objects to analyze. The parameter is a timestamp in seconds, for example, 1568688761.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface BucketInventoryOptionalFields {
        /**
         * Optional analysis items to include in the inventory result. The optional fields include Size, LastModifiedDate, StorageClass, ETag, IsMultipartUploaded, ReplicationStatus, Tag, Crc64, and x-cos-meta-*.
         */
        fields?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BucketInventorySchedule {
        /**
         * Frequency of the inventory job. Enumerated values: Daily, Weekly.
         */
        frequency: pulumi.Input<string>;
    }

    export interface BucketLifecycleRule {
        /**
         * Specifies a period in the object's expire (documented below).
         */
        expiration?: pulumi.Input<inputs.Cos.BucketLifecycleRuleExpiration>;
        /**
         * Object key prefix identifying one or more objects to which the rule applies.
         */
        filterPrefix: pulumi.Input<string>;
        /**
         * A unique identifier for the rule. It can be up to 255 characters.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies when non current object versions shall expire.
         */
        nonCurrentExpiration?: pulumi.Input<inputs.Cos.BucketLifecycleRuleNonCurrentExpiration>;
        /**
         * Specifies a period in the non current object's transitions.
         */
        nonCurrentTransitions?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRuleNonCurrentTransition>[]>;
        /**
         * Specifies a period in the object's transitions (documented below).
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRuleTransition>[]>;
    }

    export interface BucketLifecycleRuleExpiration {
        /**
         * Specifies the date after which you want the corresponding action to take effect.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * Indicates whether the delete marker of an expired object will be removed.
         */
        deleteMarker?: pulumi.Input<boolean>;
    }

    export interface BucketLifecycleRuleNonCurrentExpiration {
        /**
         * Number of days after non current object creation when the specific rule action takes effect. The maximum value is 3650.
         */
        nonCurrentDays?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleNonCurrentTransition {
        /**
         * Number of days after non current object creation when the specific rule action takes effect.
         */
        nonCurrentDays?: pulumi.Input<number>;
        /**
         * Specifies the storage class to which you want the non current object to transition. Available values include `STANDARD_IA`, `MAZ_STANDARD_IA`, `INTELLIGENT_TIERING`, `MAZ_INTELLIGENT_TIERING`, `ARCHIVE`, `DEEP_ARCHIVE`. For more information, please refer to: https://cloud.tencent.com/document/product/436/33417.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketLifecycleRuleTransition {
        /**
         * Specifies the date after which you want the corresponding action to take effect.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * Specifies the storage class to which you want the object to transition. Available values include `STANDARD_IA`, `MAZ_STANDARD_IA`, `INTELLIGENT_TIERING`, `MAZ_INTELLIGENT_TIERING`, `ARCHIVE`, `DEEP_ARCHIVE`. For more information, please refer to: https://cloud.tencent.com/document/product/436/33417.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketOriginDomainRule {
        /**
         * Specify domain host.
         */
        domain: pulumi.Input<string>;
        /**
         * Domain status, default: `ENABLED`.
         */
        status?: pulumi.Input<string>;
        /**
         * Specify origin domain type, available values: `REST`, `WEBSITE`, `ACCELERATE`, default: `REST`.
         */
        type?: pulumi.Input<string>;
    }

    export interface BucketOriginPullRule {
        /**
         * Specifies the custom headers that you can add for COS to access your origin server.
         */
        customHttpHeaders?: pulumi.Input<{[key: string]: any}>;
        /**
         * Specifies the pass through headers when accessing the origin server.
         */
        followHttpHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether to pass through COS request query string when accessing the origin server.
         */
        followQueryString?: pulumi.Input<boolean>;
        /**
         * Specifies whether to follow 3XX redirect to another origin server to pull data from.
         */
        followRedirection?: pulumi.Input<boolean>;
        /**
         * Allows only a domain name or IP address. You can optionally append a port number to the address.
         */
        host: pulumi.Input<string>;
        /**
         * Triggers the origin-pull rule when the requested file name matches this prefix.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Priority of origin-pull rules, do not set the same value for multiple rules.
         */
        priority: pulumi.Input<number>;
        /**
         * the protocol used for COS to access the specified origin server. The available value include `HTTP`, `HTTPS` and `FOLLOW`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * If `true`, COS will not return 3XX status code when pulling data from an origin server. Current available zone: ap-beijing, ap-shanghai, ap-singapore, ap-mumbai.
         */
        syncBackToSource?: pulumi.Input<boolean>;
    }

    export interface BucketReplicaRule {
        /**
         * Destination bucket identifier, format: `qcs::cos:<region>::<bucketname-appid>`. NOTE: destination bucket must enable versioning.
         */
        destinationBucket: pulumi.Input<string>;
        /**
         * Storage class of destination, available values: `STANDARD`, `INTELLIGENT_TIERING`, `STANDARD_IA`. default is following current class of destination.
         */
        destinationStorageClass?: pulumi.Input<string>;
        /**
         * Name of a specific rule.
         */
        id?: pulumi.Input<string>;
        /**
         * Prefix matching policy. Policies cannot overlap; otherwise, an error will be returned. To match the root directory, leave this parameter empty.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Status identifier, available values: `Enabled`, `Disabled`.
         */
        status: pulumi.Input<string>;
    }

    export interface BucketWebsite {
        endpoint?: pulumi.Input<string>;
        /**
         * An absolute path to the document to return in case of a 4XX error.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * COS returns this index document when requests are made to the root domain or any of the subfolders.
         */
        indexDocument?: pulumi.Input<string>;
    }

}

export namespace Css {
    export interface PlayDomainCertAttachmentDomainInfo {
        /**
         * domain name.
         */
        domainName: pulumi.Input<string>;
        /**
         * Whether to enable the https rule for the domain name. 1: enable, 0: disabled, -1: remain unchanged.
         */
        status: pulumi.Input<number>;
    }

    export interface PullStreamTaskWatermarkList {
        /**
         * pic height.
         */
        height: pulumi.Input<number>;
        /**
         * position type, 0:left top, 1:right top, 2:right bot, 3: left bot.
         */
        location: pulumi.Input<number>;
        /**
         * watermark picture url.
         */
        pictureUrl: pulumi.Input<string>;
        /**
         * pic width.
         */
        width: pulumi.Input<number>;
        /**
         * x position.
         */
        xPosition: pulumi.Input<number>;
        /**
         * y position.
         */
        yPosition: pulumi.Input<number>;
    }
}

export namespace Cvm {
    export interface ChcConfigBmcVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC. Valid values:&lt;br&gt;&lt;li&gt;TRUE: yes;&lt;br&gt;&lt;li&gt;FALSE: no&lt;br&gt;&lt;br&gt;Default: FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx. To obtain valid subnet IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call DescribeSubnets and look for the unSubnetId fields in the response. If you specify DEFAULT for both SubnetId and VpcId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx. To obtain valid VPC IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call the DescribeVpcEx API and look for the unVpcId fields in the response. If you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ChcConfigDeployVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC. Valid values:&lt;br&gt;&lt;li&gt;TRUE: yes;&lt;br&gt;&lt;li&gt;FALSE: no&lt;br&gt;&lt;br&gt;Default: FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx. To obtain valid subnet IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call DescribeSubnets and look for the unSubnetId fields in the response. If you specify DEFAULT for both SubnetId and VpcId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx. To obtain valid VPC IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call the DescribeVpcEx API and look for the unVpcId fields in the response. If you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface GetChcHostsFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetChcHostsFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstancesModificationFilter {
        /**
         * Fields to be filtered.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetInstancesModificationFilterArgs {
        /**
         * Fields to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ImportImageTagSpecification {
        resourceType: pulumi.Input<string>;
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.ImportImageTagSpecificationTag>[]>;
    }

    export interface ImportImageTagSpecificationTag {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateActionTimer {
        /**
         * Execution time.
         */
        actionTime?: pulumi.Input<string>;
        /**
         * Extended data.
         */
        externals?: pulumi.Input<inputs.Cvm.LaunchTemplateActionTimerExternals>;
        /**
         * Timer name.
         */
        timerAction?: pulumi.Input<string>;
    }

    export interface LaunchTemplateActionTimerExternals {
        /**
         * Release address.
         */
        releaseAddress?: pulumi.Input<boolean>;
        /**
         * HDD local storage attributes.
         */
        storageBlockAttr?: pulumi.Input<inputs.Cvm.LaunchTemplateActionTimerExternalsStorageBlockAttr>;
        /**
         * Unsupported network type.
         */
        unsupportNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LaunchTemplateActionTimerExternalsStorageBlockAttr {
        /**
         * The maximum capacity of HDD local storage.
         */
        maxSize: pulumi.Input<number>;
        /**
         * The minimum capacity of HDD local storage.
         */
        minSize: pulumi.Input<number>;
        /**
         * The type of HDD local storage.
         */
        type: pulumi.Input<string>;
    }

    export interface LaunchTemplateDataDisk {
        /**
         * Cloud Dedicated Cluster(CDC) ID.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * Whether the data disk is destroyed along with the instance, true or false.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Data disk ID.
         */
        diskId?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         */
        diskSize: pulumi.Input<number>;
        /**
         * The type of data disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Whether the data disk is encrypted, TRUE or FALSE.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * The id of custom CMK.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance, MB/s.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface LaunchTemplateEnhancedService {
        /**
         * Enable TencentCloud Automation Tools(TAT).
         */
        automationService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceAutomationService>;
        /**
         * Enable cloud monitor service.
         */
        monitorService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceMonitorService>;
        /**
         * Enable cloud security service.
         */
        securityService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceSecurityService>;
    }

    export interface LaunchTemplateEnhancedServiceAutomationService {
        /**
         * Whether to enable TencentCloud Automation Tools(TAT), TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateEnhancedServiceMonitorService {
        /**
         * Whether to enable cloud monitor service, TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateEnhancedServiceSecurityService {
        /**
         * Whether to enable cloud security service, TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateInstanceChargePrepaid {
        /**
         * The period of purchasing instances.
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renew flag.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface LaunchTemplateInstanceMarketOptions {
        /**
         * Market option type, currently only supports value: spot.
         */
        marketType?: pulumi.Input<string>;
        /**
         * Bidding related options.
         */
        spotOptions: pulumi.Input<inputs.Cvm.LaunchTemplateInstanceMarketOptionsSpotOptions>;
    }

    export interface LaunchTemplateInstanceMarketOptionsSpotOptions {
        /**
         * Bidding.
         */
        maxPrice: pulumi.Input<string>;
        /**
         * Bidding request type, currently only supported type: one-time.
         */
        spotInstanceType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateInternetAccessible {
        /**
         * The ID of bandwidth package.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * The type of internet charge.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Internet outbound bandwidth upper limit, Mbps.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * Whether to allocate public network IP, TRUE or FALSE.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateLoginSettings {
        /**
         * Keep the original settings of the mirror.
         */
        keepImageLogin?: pulumi.Input<string>;
        /**
         * List of key ID.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The login password of instance.
         */
        password?: pulumi.Input<string>;
    }

    export interface LaunchTemplatePlacement {
        /**
         * The CDH ID list of the instance(input).
         */
        hostIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify the host machine ip.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The project ID of the instance.
         */
        projectId?: pulumi.Input<number>;
        /**
         * The available zone ID of the instance.
         */
        zone: pulumi.Input<string>;
    }

    export interface LaunchTemplateSystemDisk {
        /**
         * Cloud Dedicated Cluster(CDC) ID.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * System disk ID.
         */
        diskId?: pulumi.Input<string>;
        /**
         * The size of system disk.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * The type of system disk.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateTagSpecification {
        /**
         * The type of resource.
         */
        resourceType: pulumi.Input<string>;
        /**
         * Tag list.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.LaunchTemplateTagSpecificationTag>[]>;
    }

    export interface LaunchTemplateTagSpecificationTag {
        /**
         * The key of tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value of tag.
         */
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionActionTimer {
        /**
         * Execution time, displayed according to ISO8601 standard, and UTC time is used. The format is YYYY-MM-DDThh:mm:ssZ. For example, 2018-05-29T11:26:40Z, the execution must be at least 5 minutes later than the current time.
         */
        actionTime?: pulumi.Input<string>;
        /**
         * Additional data.
         */
        externals?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionActionTimerExternals>;
        /**
         * Timer name. Currently TerminateInstances is the only supported value.
         */
        timerAction?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionActionTimerExternals {
        /**
         * Release address.
         */
        releaseAddress?: pulumi.Input<boolean>;
        /**
         * Information on local HDD storage.
         */
        storageBlockAttr?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionActionTimerExternalsStorageBlockAttr>;
        /**
         * Not supported network.
         */
        unsupportNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LaunchTemplateVersionActionTimerExternalsStorageBlockAttr {
        /**
         * Maximum capacity of local HDD storage.
         */
        maxSize: pulumi.Input<number>;
        /**
         * Minimum capacity of local HDD storage.
         */
        minSize: pulumi.Input<number>;
        /**
         * Local HDD storage type. Value: LOCAL_PRO.
         */
        type: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionDataDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * Whether to terminate the data disk when its CVM is terminated. Default value: `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * System disk ID. System disks whose type is LOCAL_BASIC or LOCAL_SSD do not have an ID and do not support this parameter. It is only used as a response parameter for APIs such as DescribeInstances, and cannot be used as a request parameter for APIs such as RunInstances.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Data disk size (in GB). The minimum adjustment increment is 10 GB. The value range varies by data disk type.
         */
        diskSize: pulumi.Input<number>;
        /**
         * The type of data disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specifies whether the data disk is encrypted.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID. The size of the selected data disk snapshot must be smaller than that of the data disk. Note: This field may return null, indicating that no valid value is found.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance in MB/s.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface LaunchTemplateVersionEnhancedService {
        /**
         * Whether to enable the TAT service. If this parameter is not specified, the TAT service is enabled for public images and disabled for other images by default.
         */
        automationService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceAutomationService>;
        /**
         * Enables cloud monitor service. If this parameter is not specified, the cloud monitor service will be enabled by default.
         */
        monitorService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceMonitorService>;
        /**
         * Enables cloud security service. If this parameter is not specified, the cloud security service will be enabled by default.
         */
        securityService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceSecurityService>;
    }

    export interface LaunchTemplateVersionEnhancedServiceAutomationService {
        /**
         * Whether to enable the TAT service.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionEnhancedServiceMonitorService {
        /**
         * Whether to enable Cloud Monitor.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionEnhancedServiceSecurityService {
        /**
         * Whether to enable Cloud Security.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionInstanceChargePrepaid {
        /**
         * Subscription period; unit: month; valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60.
         */
        period: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically &lt;br&gt;&lt;br&gt;Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionInstanceMarketOptions {
        /**
         * Market option type. Currently spot is the only supported value.
         */
        marketType?: pulumi.Input<string>;
        /**
         * Options related to bidding.
         */
        spotOptions: pulumi.Input<inputs.Cvm.LaunchTemplateVersionInstanceMarketOptionsSpotOptions>;
    }

    export interface LaunchTemplateVersionInstanceMarketOptionsSpotOptions {
        /**
         * Bidding price.
         */
        maxPrice: pulumi.Input<string>;
        /**
         * Bidding request type. Currently only one-time is supported.
         */
        spotInstanceType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionInternetAccessible {
        /**
         * Bandwidth package ID.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Network connection billing plan.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * The maximum outbound bandwidth of the public network, in Mbps. The default value is 0 Mbps.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * Whether to assign a public IP.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionLoginSettings {
        /**
         * Whether to keep the original settings of an image.
         */
        keepImageLogin?: pulumi.Input<string>;
        /**
         * List of key IDs. After an instance is associated with a key, you can access the instance with the private key in the key pair.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Login password of the instance.
         */
        password?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionPlacement {
        /**
         * ID list of CDHs from which the instance can be created. If you have purchased CDHs and specify this parameter, the instances you purchase will be randomly deployed on the CDHs.
         */
        hostIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * IPs of the hosts to create CVMs.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ID of the project to which the instance belongs. This parameter can be obtained from the projectId returned by DescribeProject. If this is left empty, the default project is used.
         */
        projectId?: pulumi.Input<number>;
        /**
         * ID of the availability zone where the instance resides. You can call the DescribeZones API and obtain the ID in the returned Zone field.
         */
        zone: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionSystemDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * System disk ID. System disks whose type is LOCAL_BASIC or LOCAL_SSD do not have an ID and do not support this parameter. It is only used as a response parameter for APIs such as DescribeInstances, and cannot be used as a request parameter for APIs such as RunInstances.
         */
        diskId?: pulumi.Input<string>;
        /**
         * System disk size; unit: GB; default value: 50 GB.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * The type of system disk. Default value: the type of hard disk currently in stock.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionTagSpecification {
        /**
         * The type of resource that the tag is bound to.
         */
        resourceType: pulumi.Input<string>;
        /**
         * List of tags.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.LaunchTemplateVersionTagSpecificationTag>[]>;
    }

    export interface LaunchTemplateVersionTagSpecificationTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx, if you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx, if you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface LaunchTemplateVirtualPrivateCloud {
        /**
         * Is it used as a Public network gateway, TRUE or FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * The number of ipv6 addresses for Elastic Network Interface.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * The address of private ip.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The id of subnet.
         */
        subnetId: pulumi.Input<string>;
        /**
         * The id of VPC.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ModifyInstanceDiskTypeDataDisk {
        cdcId?: pulumi.Input<string>;
        deleteWithInstance?: pulumi.Input<boolean>;
        diskId?: pulumi.Input<string>;
        diskSize: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
        encrypt?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface ModifyInstanceDiskTypeSystemDisk {
        cdcId?: pulumi.Input<string>;
        diskId?: pulumi.Input<string>;
        diskSize?: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
    }

    export interface RenewHostHostChargePrepaid {
        period: pulumi.Input<number>;
        renewFlag?: pulumi.Input<string>;
    }

    export interface RenewInstanceInstanceChargePrepaid {
        /**
         * Subscription period; unit: month; valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60. Note: This field may return null, indicating that no valid value is found.
         */
        period: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values:
         * - `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically;
         * - `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically;
         * - `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically;
         * Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. Note: This field may return null, indicating that no valid value is found.
         */
        renewFlag?: pulumi.Input<string>;
    }

}

export namespace Cynosdb {
    export interface AccountPrivilegesDatabasePrivilege {
        /**
         * Database.
         */
        db: pulumi.Input<string>;
        /**
         * Database privileges.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesTablePrivilege {
        /**
         * Database name.
         */
        db: pulumi.Input<string>;
        /**
         * Table privileges.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface AuditLogFileFilter {
        /**
         * Affects the number of rows. Indicates that the audit log whose number of affected rows is greater than this value is filtered.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * The name of database.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client host.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of audit policy.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return the number of rows.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * SQL statement. Support fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous query of multiple types. currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Support passing multiple sql statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of table.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of thread.
         */
        threadIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterDatabasesUserHostPrivilege {
        /**
         * .
         */
        dbHost: pulumi.Input<string>;
        /**
         * .
         */
        dbPrivilege: pulumi.Input<string>;
        /**
         * Authorized Users.
         */
        dbUserName: pulumi.Input<string>;
    }

    export interface ClusterParamItem {
        /**
         * Param expected value to set.
         */
        currentValue: pulumi.Input<string>;
        /**
         * Name of param, e.g. `characterSetServer`.
         */
        name: pulumi.Input<string>;
        /**
         * Param old value, indicates the value which already set, this value is required when modifying current_value.
         */
        oldValue?: pulumi.Input<string>;
    }

    export interface ClusterRoGroupAddr {
        /**
         * IP address for read-write connection.
         */
        ip?: pulumi.Input<string>;
        /**
         * Port of CynosDB cluster.
         */
        port?: pulumi.Input<number>;
    }

    export interface ClusterRoGroupInstance {
        /**
         * ID of instance.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Name of instance.
         */
        instanceName?: pulumi.Input<string>;
    }

    export interface ClusterRwGroupAddr {
        /**
         * IP address for read-write connection.
         */
        ip?: pulumi.Input<string>;
        /**
         * Port of CynosDB cluster.
         */
        port?: pulumi.Input<number>;
    }

    export interface ClusterRwGroupInstance {
        /**
         * ID of instance.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Name of instance.
         */
        instanceName?: pulumi.Input<string>;
    }

    export interface ExportInstanceErrorLogsErrorLogItemExport {
        /**
         * log content.
         */
        content?: pulumi.Input<string>;
        /**
         * Log level, optional values note, warning, error.
         */
        level?: pulumi.Input<string>;
        /**
         * time.
         */
        timestamp?: pulumi.Input<string>;
    }

    export interface GetAccountAllGrantPrivilegesAccount {
        /**
         * Account.
         */
        accountName: string;
        /**
         * Host, default `%`.
         */
        host?: string;
    }

    export interface GetAccountAllGrantPrivilegesAccountArgs {
        /**
         * Account.
         */
        accountName: pulumi.Input<string>;
        /**
         * Host, default `%`.
         */
        host?: pulumi.Input<string>;
    }

    export interface GetAuditLogsFilterArgs {
        /**
         * Affects the number of rows. Indicates that filtering affects audit logs with rows greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. Unit: ms. Indicates audit logs with a filter execution time greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Audit policy name.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Returns the number of rows.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * SQL statement. Supports fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous querying of multiple types. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Supports passing multiple SQL statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Thread ID.
         */
        threadIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetAuditLogsFilter {
        /**
         * Affects the number of rows. Indicates that filtering affects audit logs with rows greater than this value.
         */
        affectRows?: number;
        /**
         * Database name.
         */
        dbNames?: string[];
        /**
         * Execution time. Unit: ms. Indicates audit logs with a filter execution time greater than this value.
         */
        execTime?: number;
        /**
         * Client address.
         */
        hosts?: string[];
        /**
         * Audit policy name.
         */
        policyNames?: string[];
        /**
         * Returns the number of rows.
         */
        sentRows?: number;
        /**
         * SQL statement. Supports fuzzy matching.
         */
        sql?: string;
        /**
         * SQL type. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlType?: string;
        /**
         * SQL type. Supports simultaneous querying of multiple types. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: string[];
        /**
         * SQL statement. Supports passing multiple SQL statements.
         */
        sqls?: string[];
        /**
         * Table name.
         */
        tableNames?: string[];
        /**
         * Thread ID.
         */
        threadIds?: string[];
        /**
         * User name.
         */
        users?: string[];
    }

    export interface GetProxyNodeFilter {
        /**
         * Exact match or not.
         */
        exactMatch?: boolean;
        /**
         * Search Fields. Supported: Status, ProxyNodeId, ClusterId.
         */
        name?: string;
        /**
         * Search String.
         */
        names: string[];
        /**
         * Operator.
         */
        operator?: string;
        /**
         * Search String.
         */
        values: string[];
    }

    export interface GetProxyNodeFilterArgs {
        /**
         * Exact match or not.
         */
        exactMatch?: pulumi.Input<boolean>;
        /**
         * Search Fields. Supported: Status, ProxyNodeId, ClusterId.
         */
        name?: pulumi.Input<string>;
        /**
         * Search String.
         */
        names: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Search String.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceParamInstanceParamList {
        /**
         * Current value of parameter.
         */
        currentValue: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        paramName: pulumi.Input<string>;
    }

    export interface ParamTemplateParamList {
        /**
         * Current value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        paramName?: pulumi.Input<string>;
    }

    export interface ProxyEndPointInstanceWeight {
        /**
         * Instance Id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface ProxyProxyZone {
        /**
         * Number of proxy nodes.
         */
        proxyNodeCount?: pulumi.Input<number>;
        /**
         * Proxy node availability zone.
         */
        proxyNodeZone?: pulumi.Input<string>;
    }

    export interface RollBackClusterRollbackDatabase {
        /**
         * New database name.
         */
        newDatabase: pulumi.Input<string>;
        /**
         * Old database name.
         */
        oldDatabase: pulumi.Input<string>;
    }

    export interface RollBackClusterRollbackTable {
        /**
         * New database name.
         */
        database: pulumi.Input<string>;
        /**
         * Tables.
         */
        tables: pulumi.Input<pulumi.Input<inputs.Cynosdb.RollBackClusterRollbackTableTable>[]>;
    }

    export interface RollBackClusterRollbackTableTable {
        /**
         * New table name.
         */
        newTable: pulumi.Input<string>;
        /**
         * Old table name.
         */
        oldTable: pulumi.Input<string>;
    }
}

export namespace Dayu {
    export interface CcHttpPolicyRuleList {
        /**
         * Operator of the rule. Valid values: `include`, `notInclude`, `equal`.
         */
        operator?: pulumi.Input<string>;
        /**
         * Key of the rule. Valid values: `host`, `cgi`, `ua`, `referer`.
         */
        skey?: pulumi.Input<string>;
        /**
         * Rule value, then length should be less than 31 bytes.
         */
        value?: pulumi.Input<string>;
    }

    export interface CcHttpsPolicyRuleList {
        /**
         * Operator of the rule. Valid values are `include` and `equal`.
         */
        operator: pulumi.Input<string>;
        /**
         * Key of the rule. Valid values are `cgi`, `ua` and `referer`.
         */
        skey: pulumi.Input<string>;
        /**
         * Rule value, then length should be less than 31 bytes.
         */
        value: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcBlackWhiteIp {
        /**
         * Blacklist and whitelist IP addresses.
         */
        blackWhiteIp: pulumi.Input<string>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Modify time.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * IP type, value [black(blacklist IP), white (whitelist IP)].
         */
        type: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcGeoIpPolicy {
        /**
         * User action, drop or arg.
         */
        action: pulumi.Input<string>;
        /**
         * The list of region IDs that the user selects to block.
         */
        areaLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Modify time.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Protocol, preferably HTTP, HTTPS.
         */
        protocol: pulumi.Input<string>;
        /**
         * Regional types, divided into china, oversea and customized.
         */
        regionType: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionPolicy {
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Ip address.
         */
        ip: pulumi.Input<string>;
        /**
         * Policy mode (discard or captcha).
         */
        policyAction: pulumi.Input<string>;
        policyId?: pulumi.Input<string>;
        /**
         * A list of policies.
         */
        policys: pulumi.Input<pulumi.Input<inputs.Dayu.CcPolicyV2CcPrecisionPolicyPolicy>[]>;
        /**
         * Protocol.
         */
        protocol: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionPolicyPolicy {
        /**
         * Configuration item types, currently only support value.
         */
        fieldName: pulumi.Input<string>;
        /**
         * Configuration fields with the desirable values cgi, ua, cookie, referer, accept, srcip.
         */
        fieldType: pulumi.Input<string>;
        /**
         * Configure the value.
         */
        value: pulumi.Input<string>;
        /**
         * Configure the item-value comparison mode, which can be taken as the value of evaluate, not_equal, include.
         */
        valueOperator: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionReqLimit {
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        instanceId?: pulumi.Input<string>;
        /**
         * Ip address.
         */
        ip?: pulumi.Input<string>;
        /**
         * Protection rating, the optional value of default means default policy, loose means loose, and strict means strict.
         */
        level: pulumi.Input<string>;
        /**
         * The CC Frequency Limit Policy Item field.
         */
        policys: pulumi.Input<pulumi.Input<inputs.Dayu.CcPolicyV2CcPrecisionReqLimitPolicy>[]>;
        /**
         * Protocol, preferably HTTP, HTTPS.
         */
        protocol: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionReqLimitPolicy {
        /**
         * The frequency limit policy mode, the optional value of arg indicates the verification code, and drop indicates the discard.
         */
        action: pulumi.Input<string>;
        /**
         * Cookies, one of the three policy entries can only be filled in.
         */
        cookie?: pulumi.Input<string>;
        /**
         * The duration of the frequency limit policy can be taken from 1 to 86400 per second.
         */
        executeDuration: pulumi.Input<number>;
        /**
         * The policy item is compared, and the optional value include indicates inclusion, and equal means equal.
         */
        mode: pulumi.Input<string>;
        /**
         * Statistical period, take values 1, 10, 30, 60, in seconds.
         */
        period: pulumi.Input<number>;
        /**
         * The number of requests, the value is 1 to 20000.
         */
        requestNum: pulumi.Input<number>;
        /**
         * Uri, one of the three policy entries can only be filled in.
         */
        uri?: pulumi.Input<string>;
        /**
         * User-Agent, only one of the three policy entries can be filled in.
         */
        userAgent?: pulumi.Input<string>;
    }

    export interface CcPolicyV2Threshold {
        /**
         * domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Cleaning threshold, -1 indicates that the `default` mode is turned on.
         */
        threshold: pulumi.Input<number>;
    }

    export interface DdosIpAttachmentV2BoundIpList {
        /**
         * Category of product that can be bound. Valid values: public (CVM and CLB), bm (BM), eni (ENI), vpngw (VPN gateway), natgw (NAT gateway), waf (WAF), fpc (financial products), gaap (GAAP), and other (hosted IP). This field is required when you perform binding.
         */
        bizType?: pulumi.Input<string>;
        /**
         * Sub-product category. Valid values: cvm (CVM), lb (Load balancer), eni (ENI), vpngw (VPN gateway), natgw (NAT gateway), waf (WAF), fpc (financial products), gaap (GAAP), eip (BM EIP) and other (managed IP). This field is required when you perform binding.
         */
        deviceType?: pulumi.Input<string>;
        /**
         * Anti-DDoS instance ID of the IP. This field is required only when the instance is bound to an IP. For example, this field InstanceId will be eni-* if the instance ID is bound to an ENI IP; none if there is no instance to bind to a managed IP.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * IP address.
         */
        ip: pulumi.Input<string>;
    }

    export interface DdosPolicyDropOption {
        /**
         * The number of new connections based on destination IP that trigger suppression of connections. Valid value ranges: (0~4294967295).
         */
        badConnThreshold: pulumi.Input<number>;
        /**
         * Indicate whether to check null connection or not.
         */
        checkSyncConn: pulumi.Input<boolean>;
        /**
         * Connection timeout of abnormal connection check. Valid value ranges: (0~65535).
         */
        connTimeout: pulumi.Input<number>;
        /**
         * The limit of concurrent connections based on destination IP. Valid value ranges: (0~4294967295).
         */
        dConnLimit: pulumi.Input<number>;
        /**
         * The limit of new connections based on destination IP. Valid value ranges: (0~4294967295).
         */
        dNewLimit: pulumi.Input<number>;
        /**
         * Indicate whether to drop abroad traffic or not.
         */
        dropAbroad: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop ICMP protocol or not.
         */
        dropIcmp: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop other protocols(exclude TCP/UDP/ICMP) or not.
         */
        dropOther: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop TCP protocol or not.
         */
        dropTcp: pulumi.Input<boolean>;
        /**
         * Indicate to drop UDP protocol or not.
         */
        dropUdp: pulumi.Input<boolean>;
        /**
         * The limit of ICMP traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        icmpMbpsLimit: pulumi.Input<number>;
        /**
         * Indicate to enable null connection or not.
         */
        nullConnEnable: pulumi.Input<boolean>;
        /**
         * The limit of other protocols(exclude TCP/UDP/ICMP) traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        otherMbpsLimit: pulumi.Input<number>;
        /**
         * The limit of concurrent connections based on source IP. Valid value ranges: (0~4294967295).
         */
        sConnLimit: pulumi.Input<number>;
        /**
         * The limit of new connections based on source IP. Valid value ranges: (0~4294967295).
         */
        sNewLimit: pulumi.Input<number>;
        /**
         * The limit of syn of abnormal connection check. Valid value ranges: (0~100).
         */
        synLimit: pulumi.Input<number>;
        /**
         * The percentage of syn in ack of abnormal connection check. Valid value ranges: (0~100).
         */
        synRate?: pulumi.Input<number>;
        /**
         * The limit of TCP traffic. Valid value ranges: (0~4294967295)(Mbps).
         */
        tcpMbpsLimit: pulumi.Input<number>;
        /**
         * The limit of UDP traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        udpMbpsLimit: pulumi.Input<number>;
    }

    export interface DdosPolicyPacketFilter {
        /**
         * Action of port to take. Valid values: `drop`, `dropBlack`,`dropRst`,`dropBlackRst`,`transmit`.`drop`(drop the packet), `dropBlack`(drop the packet and black the ip),`dropRst`(drop the packet and disconnect),`dropBlackRst`(drop the packet, black the ip and disconnect),`transmit`(transmit the packet).
         */
        action?: pulumi.Input<string>;
        /**
         * End port of the destination. Valid value ranges: (0~65535). It must be greater than `dStartPort`.
         */
        dEndPort?: pulumi.Input<number>;
        /**
         * Start port of the destination. Valid value ranges: (0~65535).
         */
        dStartPort?: pulumi.Input<number>;
        /**
         * The depth of match. Valid value ranges: (0~1500).
         */
        depth?: pulumi.Input<number>;
        /**
         * Indicate whether to include the key word/regular expression or not.
         */
        isInclude?: pulumi.Input<boolean>;
        /**
         * Indicate whether to check load or not, `beginL5` means to match and `noMatch` means not.
         */
        matchBegin?: pulumi.Input<string>;
        /**
         * The key word or regular expression.
         */
        matchStr?: pulumi.Input<string>;
        /**
         * Match type. Valid values: `sunday` and `pcre`. `sunday` means key word match while `pcre` means regular match.
         */
        matchType?: pulumi.Input<string>;
        /**
         * The offset of match. Valid value ranges: (0~1500).
         */
        offset?: pulumi.Input<number>;
        /**
         * The max length of the packet. Valid value ranges: (0~1500)(Mbps). It must be greater than `pktLengthMin`.
         */
        pktLengthMax?: pulumi.Input<number>;
        /**
         * The minimum length of the packet. Valid value ranges: (0~1500)(Mbps).
         */
        pktLengthMin?: pulumi.Input<number>;
        /**
         * Protocol. Valid values: `tcp`, `udp`, `icmp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * End port of the source. Valid value ranges: (0~65535). It must be greater than `sStartPort`.
         */
        sEndPort?: pulumi.Input<number>;
        /**
         * Start port of the source. Valid value ranges: (0~65535).
         */
        sStartPort?: pulumi.Input<number>;
    }

    export interface DdosPolicyPortFilter {
        /**
         * Action of port to take. Valid values: `drop`, `transmit`.
         */
        action?: pulumi.Input<string>;
        /**
         * End port. Valid value ranges: (0~65535). It must be greater than `startPort`.
         */
        endPort?: pulumi.Input<number>;
        /**
         * The type of forbidden port. Valid values: `0`, `1`, `2`. `0` for destination ports make effect, `1` for source ports make effect. `2` for both destination and source ports.
         */
        kind?: pulumi.Input<number>;
        /**
         * Protocol. Valid values are `tcp`, `udp`, `icmp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Start port. Valid value ranges: (0~65535).
         */
        startPort?: pulumi.Input<number>;
    }

    export interface DdosPolicyV2Acl {
        /**
         * Action, optional values: drop, transmit, forward.
         */
        action: pulumi.Input<string>;
        /**
         * The destination port ends, and the value range is 0~65535.
         */
        dPortEnd: pulumi.Input<number>;
        /**
         * The destination port starts, and the value range is 0~65535.
         */
        dPortStart: pulumi.Input<number>;
        /**
         * Protocol type, desirable values tcp, udp, all.
         */
        forwardProtocol: pulumi.Input<string>;
        /**
         * Policy priority, the lower the number, the higher the level, the higher the rule matches, taking a value of 1-1000.Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        priority: pulumi.Input<number>;
        /**
         * The source port ends, and the acceptable value ranges from 0 to 65535.
         */
        sPortEnd: pulumi.Input<number>;
        /**
         * The source port starts, and the value range is 0~65535.
         */
        sPortStart: pulumi.Input<number>;
    }

    export interface DdosPolicyV2BlackWhiteIp {
        /**
         * Ip of resource instance.
         */
        ip: pulumi.Input<string>;
        /**
         * IP type, value [`black`(blacklist IP), `white` (whitelist IP)].
         */
        ipType: pulumi.Input<string>;
    }

    export interface DdosPolicyV2DdosConnectLimit {
        /**
         * Based on connection suppression trigger threshold, value range [0,4294967295].
         */
        badConnThreshold: pulumi.Input<number>;
        /**
         * Abnormal connection detection condition, connection timeout, value range [0,65535].
         */
        connTimeout: pulumi.Input<number>;
        /**
         * Concurrent connection control based on destination IP+ destination port.
         */
        dstConnLimit: pulumi.Input<number>;
        /**
         * Limit on the number of news per second based on the destination IP.
         */
        dstNewLimit: pulumi.Input<number>;
        /**
         * Abnormal connection detection conditions, empty connection guard switch, value range[0,1].
         */
        nullConnEnable: pulumi.Input<number>;
        /**
         * Concurrent connection control based on source IP + destination IP.
         */
        sdConnLimit: pulumi.Input<number>;
        /**
         * The limit on the number of news per second based on source IP + destination IP.
         */
        sdNewLimit: pulumi.Input<number>;
        /**
         * Anomaly connection detection condition, syn threshold, value range [0,100].
         */
        synLimit: pulumi.Input<number>;
        /**
         * Anomalous connection detection condition, percentage of syn ack, value range [0,100].
         */
        synRate: pulumi.Input<number>;
    }

    export interface DdosPolicyV2DdosGeoIpBlockConfig {
        /**
         * Block action, take the value [`drop`, `trans`].
         */
        action: pulumi.Input<string>;
        /**
         * When the RegionType is customized, the AreaList must be filled in, and a maximum of 128 must be filled in.
         */
        areaLists: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Zone type, value [oversea (overseas),china (domestic),customized (custom region)].
         */
        regionType: pulumi.Input<string>;
    }

    export interface DdosPolicyV2DdosSpeedLimitConfig {
        /**
         * Bandwidth bps.
         */
        bandwidth: pulumi.Input<number>;
        /**
         * List of port ranges, up to 8, multiple; Separated, the range is represented with -; this port range must be filled in; fill in the style 1:0-65535, style 2:80; 443; 1000-2000.
         */
        dstPortList: pulumi.Input<string>;
        /**
         * Speed limit mode, take the value [1 (speed limit based on source IP),2 (speed limit based on destination port)].
         */
        mode: pulumi.Input<number>;
        /**
         * Packet rate pps.
         */
        packetRate: pulumi.Input<number>;
        /**
         * IP protocol numbers, take the value[ ALL (all protocols),TCP (tcp protocol),UDP (udp protocol),SMP (smp protocol),1; 2-100 (custom protocol number range, up to 8)].
         */
        protocolList: pulumi.Input<string>;
    }

    export interface DdosPolicyV2PacketFilter {
        /**
         * Action, take the value [drop,transmit,drop_black (discard and black out),drop_rst (Interception),drop_black_rst (intercept and block),forward].
         */
        action: pulumi.Input<string>;
        /**
         * The end destination port, take the value 1~65535, which must be greater than or equal to the starting destination port.
         */
        dPortEnd: pulumi.Input<number>;
        /**
         * From the destination port, take the value 0~65535.
         */
        dPortStart: pulumi.Input<number>;
        /**
         * Detection depth from the detection position, value [0,1500].
         */
        depth: pulumi.Input<number>;
        /**
         * Second detection depth starting from the second detection position, value [0,1500].
         */
        depth2: pulumi.Input<number>;
        /**
         * Whether to include the detected value, take the value [0 (included),1 (not included)].
         */
        isNot: pulumi.Input<number>;
        /**
         * Whether the second detection contains the detected value, the value [0 (included),1 (not included)].
         */
        isNot2: pulumi.Input<number>;
        /**
         * Detect position, take the value [beginL3 (IP header),begin_l4 (TCP/UDP header),begin_l5 (T load), noMatch (mismatch)].
         */
        matchBegin: pulumi.Input<string>;
        /**
         * The second detection position. take the value [beginL3 (IP header),begin_l4 (TCP/UDP header),begin_l5 (T load), noMatch (mismatch)].
         */
        matchBegin2: pulumi.Input<string>;
        /**
         * When there is a second detection condition, the and/or relationship with the first detection condition, takes the value [And (and relationship),none (fill in this value when there is no second detection condition)].
         */
        matchLogic: pulumi.Input<string>;
        /**
         * Detection type, value [sunday (keyword),pcre (regular expression)].
         */
        matchType: pulumi.Input<string>;
        /**
         * The second type of detection, takes the value [sunday (keyword),pcre (regular expression)].
         */
        matchType2: pulumi.Input<string>;
        /**
         * Offset from detection position, value range [0, Depth].
         */
        offset: pulumi.Input<number>;
        /**
         * Offset from the second detection position, value range [0,Depth2].
         */
        offset2: pulumi.Input<number>;
        /**
         * The maximum message length, taken from 1 to 1500, must be greater than or equal to the minimum message length.
         */
        pktlenMax: pulumi.Input<number>;
        /**
         * Minimum message length, 1-1500.
         */
        pktlenMin: pulumi.Input<number>;
        /**
         * Protocol, value [tcp udp icmp all].
         */
        protocol: pulumi.Input<string>;
        /**
         * End source port, take the value 1~65535, must be greater than or equal to the starting source port.
         */
        sPortEnd: pulumi.Input<number>;
        /**
         * Start the source port, take the value 0~65535.
         */
        sPortStart: pulumi.Input<number>;
        /**
         * Detect values, key strings or regular expressions, take the value [When the detection type is sunday, please fill in the string or hexadecimal bytecode, for example 13233 corresponds to the hexadecimal bytecode of the string `123`;When the detection type is pcre, please fill in the regular expression string;].
         */
        str: pulumi.Input<string>;
        /**
         * The second detection value, the key string or regular expression, takes the value [When the detection type is sunday, please fill in the string or hexadecimal bytecode, for example 13233 corresponds to the hexadecimal bytecode of the string `123`;When the detection type is pcre, please fill in the regular expression string;].
         */
        str2: pulumi.Input<string>;
    }

    export interface DdosPolicyV2ProtocolBlockConfig {
        /**
         * ICMP block, value [0 (block off), 1 (block on)].
         */
        dropIcmp: pulumi.Input<number>;
        /**
         * Other block, value [0 (block off), 1 (block on)].
         */
        dropOther: pulumi.Input<number>;
        /**
         * TCP block, value [0 (block off), 1 (block on)].
         */
        dropTcp: pulumi.Input<number>;
        /**
         * UDP block, value [0 (block off), 1 (block on)].
         */
        dropUdp: pulumi.Input<number>;
    }

    export interface DdosPolicyWatermarkFilter {
        /**
         * Indicate whether to auto-remove the watermark or not.
         */
        autoRemove?: pulumi.Input<boolean>;
        /**
         * The offset of watermark. Valid value ranges: (0~1500).
         */
        offset?: pulumi.Input<number>;
        /**
         * Indicate whether to open watermark or not. It muse be set `true` when any field of watermark was set.
         */
        openSwitch?: pulumi.Input<boolean>;
        /**
         * Port range of TCP, the format is like `2000-3000`.
         */
        tcpPortLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Port range of TCP, the format is like `2000-3000`.
         */
        udpPortLists?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DdosPolicyWatermarkKey {
        /**
         * Content of the watermark.
         */
        content?: pulumi.Input<string>;
        /**
         * Create time of the DDoS policy.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Id of the watermark.
         */
        id?: pulumi.Input<string>;
        /**
         * Indicate whether to open watermark or not. It muse be set `true` when any field of watermark was set.
         */
        openSwitch?: pulumi.Input<boolean>;
    }

    export interface L4RuleSourceList {
        /**
         * Source IP or domain, valid format of ip is like `1.1.1.1` and valid format of host source is like `abc.com`.
         */
        source: pulumi.Input<string>;
        /**
         * Weight of the source, the valid value ranges from 0 to 100.
         */
        weight: pulumi.Input<number>;
    }

    export interface L4RuleV2Rules {
        keepEnable: pulumi.Input<boolean>;
        keeptime: pulumi.Input<number>;
        lbType: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
        region: pulumi.Input<number>;
        removeSwitch: pulumi.Input<boolean>;
        ruleName: pulumi.Input<string>;
        sourceLists: pulumi.Input<pulumi.Input<inputs.Dayu.L4RuleV2RulesSourceList>[]>;
        sourcePort: pulumi.Input<number>;
        sourceType: pulumi.Input<number>;
        virtualPort: pulumi.Input<number>;
    }

    export interface L4RuleV2RulesSourceList {
        source: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface L7RuleV2Rule {
        /**
         * HTTPS protocol CC protection status, value [0 (off), 1 (on)], defaule is 0.
         */
        ccEnable?: pulumi.Input<number>;
        /**
         * The source of the certificate must be filled in when the forwarding protocol is https, the value [2 (Tencent Cloud Hosting Certificate)], and 0 when the forwarding protocol is http.
         */
        certType?: pulumi.Input<number>;
        /**
         * Domain of the rule.
         */
        domain: pulumi.Input<string>;
        /**
         * Whether to enable the Https protocol to use Http back-to-source, take the value [0 (off), 1 (on)], do not fill in the default is off, defaule is 0.
         */
        httpsToHttpEnable?: pulumi.Input<number>;
        /**
         * session hold switch.
         */
        keepEnable: pulumi.Input<number>;
        /**
         * The keeptime of the layer 4 rule.
         */
        keeptime: pulumi.Input<number>;
        /**
         * LB type of the rule, `1` for weight cycling and `2` for IP hash.
         */
        lbType: pulumi.Input<number>;
        /**
         * Protocol of the rule.
         */
        protocol: pulumi.Input<string>;
        sourceLists: pulumi.Input<pulumi.Input<inputs.Dayu.L7RuleV2RuleSourceList>[]>;
        /**
         * Source type, `1` for source of host, `2` for source of IP.
         */
        sourceType: pulumi.Input<number>;
        /**
         * When the certificate source is a Tencent Cloud managed certificate, this field must be filled in with the managed certificate ID.
         */
        sslId?: pulumi.Input<string>;
    }

    export interface L7RuleV2RuleSourceList {
        source: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }
}

export namespace Dbbrain {
    export interface GetSlowLogTopSqlsSchemaList {
        /**
         * DB name.
         */
        schema: string;
    }

    export interface GetSlowLogTopSqlsSchemaListArgs {
        /**
         * DB name.
         */
        schema: pulumi.Input<string>;
    }

    export interface ModifyDiagDbInstanceOperationInstanceConfs {
        /**
         * Database inspection switch, Yes/No.
         */
        dailyInspection?: pulumi.Input<string>;
        /**
         * Instance overview switch, Yes/No.
         */
        overviewDisplay?: pulumi.Input<string>;
    }

    export interface SqlFilterSessionToken {
        /**
         * password.
         */
        password: pulumi.Input<string>;
        /**
         * user name.
         */
        user: pulumi.Input<string>;
    }

    export interface TdsqlAuditLogFilter {
        /**
         * Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client Address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * Username.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Dc {
    export interface GetPublicDirectConnectTunnelRoutesFilter {
        /**
         * Fields to be filtered.
         */
        name: string;
        /**
         * filter value of the field.
         */
        values: string[];
    }

    export interface GetPublicDirectConnectTunnelRoutesFilterArgs {
        /**
         * Fields to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * filter value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Dcdb {
    export interface AccountPrivilegesAccount {
        /**
         * account host.
         */
        host: pulumi.Input<string>;
        /**
         * account name.
         */
        user: pulumi.Input<string>;
    }

    export interface AccountPrivilegesColumnPrivileges {
        /**
         * Database column name.
         */
        column: pulumi.Input<string>;
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesDatabasePrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesTablePrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesViewPrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database view name.
         */
        view: pulumi.Input<string>;
    }

    export interface DbInstanceInitParam {
        /**
         * The name of parameter.
         */
        param: pulumi.Input<string>;
        /**
         * The value of parameter.
         */
        value: pulumi.Input<string>;
    }

    export interface DbInstanceResourceTag {
        /**
         * The key of tag.
         */
        tagKey: pulumi.Input<string>;
        /**
         * The value of tag.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface DbParametersParams {
        /**
         * The name of parameter.
         */
        param: pulumi.Input<string>;
        /**
         * The value of parameter.
         */
        value: pulumi.Input<string>;
    }

    export interface GetUpgradePriceAddShardConfigArgs {
        /**
         * The number of new shards.
         */
        shardCount: pulumi.Input<number>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
    }

    export interface GetUpgradePriceAddShardConfig {
        /**
         * The number of new shards.
         */
        shardCount: number;
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
    }

    export interface GetUpgradePriceExpandShardConfig {
        /**
         * List of shard ID.
         */
        shardInstanceIds: string[];
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard node count.
         */
        shardNodeCount?: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
    }

    export interface GetUpgradePriceExpandShardConfigArgs {
        /**
         * List of shard ID.
         */
        shardInstanceIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard node count.
         */
        shardNodeCount?: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
    }

    export interface GetUpgradePriceSplitShardConfig {
        /**
         * List of shard ID.
         */
        shardInstanceIds: string[];
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
        /**
         * Data split ratio, fixed at 50%.
         */
        splitRate: number;
    }

    export interface GetUpgradePriceSplitShardConfigArgs {
        /**
         * List of shard ID.
         */
        shardInstanceIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
        /**
         * Data split ratio, fixed at 50%.
         */
        splitRate: pulumi.Input<number>;
    }

    export interface HourdbInstanceResourceTag {
        /**
         * tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
    }
}

export namespace Dcx {
    export interface ExtraConfigBfdInfo {
        /**
         * detect interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * detect times.
         */
        probeFailedTimes?: pulumi.Input<number>;
    }

    export interface ExtraConfigBgpPeer {
        /**
         * user idc BGP Asn.
         */
        asn?: pulumi.Input<number>;
        /**
         * user bgp key.
         */
        authKey?: pulumi.Input<string>;
    }

    export interface ExtraConfigNqaInfo {
        /**
         * detect ip.
         */
        destinationIp?: pulumi.Input<string>;
        /**
         * detect interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * detect times.
         */
        probeFailedTimes?: pulumi.Input<number>;
    }

    export interface ExtraConfigRouteFilterPrefixes {
        /**
         * user network prefixes.
         */
        cidr?: pulumi.Input<string>;
    }

}

export namespace Dnats {
}

export namespace Dnspod {
}

export namespace Domains {
}

export namespace Dts {
    export interface CompareTaskObjects {
        /**
         * object items.
         */
        objectItems?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItem>[]>;
        /**
         * object mode.
         */
        objectMode: pulumi.Input<string>;
    }

    export interface CompareTaskObjectsObjectItem {
        /**
         * database mode.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * schema name.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * table mode.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * table list.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItemTable>[]>;
        /**
         * view mode.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * view list.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItemView>[]>;
    }

    export interface CompareTaskObjectsObjectItemTable {
        /**
         * table name.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface CompareTaskObjectsObjectItemView {
        /**
         * view name.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface GetMigrateJobsTagFilterArgs {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface GetMigrateJobsTagFilter {
        /**
         * tag key.
         */
        tagKey?: string;
        /**
         * tag value.
         */
        tagValue?: string;
    }

    export interface GetSyncJobsTagFilter {
        /**
         * tag key.
         */
        tagKey?: string;
        /**
         * tag value.
         */
        tagValue?: string;
    }

    export interface GetSyncJobsTagFilterArgs {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfo {
        /**
         * AccessType.
         */
        accessType: pulumi.Input<string>;
        /**
         * DatabaseType.
         */
        databaseType: pulumi.Input<string>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobDstInfoExtraAttr>[]>;
        /**
         * Info.
         */
        infos: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobDstInfoInfo>[]>;
        /**
         * NodeType.
         */
        nodeType: pulumi.Input<string>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Supplier.
         */
        supplier?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfoExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfoInfo {
        /**
         * Account.
         */
        account?: pulumi.Input<string>;
        /**
         * AccountMode.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * AccountRole.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * CcnGwId.
         */
        ccnGwId?: pulumi.Input<string>;
        /**
         * CvmInstanceId.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * DbKernel.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * EngineVersion.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Host.
         */
        host?: pulumi.Input<string>;
        /**
         * InstanceId.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Port.
         */
        port?: pulumi.Input<number>;
        /**
         * Role.
         */
        role?: pulumi.Input<string>;
        /**
         * SubnetId.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * TmpSecretId.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * TmpSecretKey.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * TmpToken.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * UniqDcgId.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * UniqVpnGwId.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * User.
         */
        user?: pulumi.Input<string>;
        /**
         * VpcId.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOption {
        /**
         * Consistency.
         */
        consistency?: pulumi.Input<inputs.Dts.MigrateJobMigrateOptionConsistency>;
        /**
         * Migration object option, you need to tell the migration service which library table objects to migrate.
         */
        databaseTable: pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTable>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionExtraAttr>[]>;
        /**
         * IsDstReadOnly.
         */
        isDstReadOnly?: pulumi.Input<boolean>;
        /**
         * IsMigrateAccount.
         */
        isMigrateAccount?: pulumi.Input<boolean>;
        /**
         * IsOverrideRoot.
         */
        isOverrideRoot?: pulumi.Input<boolean>;
        /**
         * MigrateType.
         */
        migrateType?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionConsistency {
        /**
         * ConsistencyOption.
         */
        mode?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTable {
        /**
         * AdvancedObjects.
         */
        advancedObjects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The database list.
         */
        databases?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabase>[]>;
        /**
         * Object mode. eg:all,partial.
         */
        objectMode: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabase {
        /**
         * DB selection mode:all (for all objects under the current object), partial (partial objects), when the ObjectMode is partial, this item is required.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * EventMode.
         */
        eventMode?: pulumi.Input<string>;
        /**
         * Events.
         */
        events?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * FunctionMode.
         */
        functionMode?: pulumi.Input<string>;
        /**
         * Functions.
         */
        functions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * New database name.
         */
        newDbName?: pulumi.Input<string>;
        /**
         * schema name after migration or synchronization.
         */
        newSchemaName?: pulumi.Input<string>;
        /**
         * ProcedureMode.
         */
        procedureMode?: pulumi.Input<string>;
        /**
         * Procedures.
         */
        procedures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * RoleMode.
         */
        roleMode?: pulumi.Input<string>;
        /**
         * Roles.
         */
        roles?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseRole>[]>;
        /**
         * schema mode: all,partial.
         */
        schemaMode?: pulumi.Input<string>;
        /**
         * schema name.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * table mode: all,partial.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * tables list.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseTable>[]>;
        /**
         * TriggerMode.
         */
        triggerMode?: pulumi.Input<string>;
        /**
         * Triggers.
         */
        triggers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ViewMode.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * Views.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseView>[]>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseRole {
        /**
         * NewRoleName.
         */
        newRoleName?: pulumi.Input<string>;
        /**
         * RoleName.
         */
        roleName?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseTable {
        /**
         * new table name.
         */
        newTableName?: pulumi.Input<string>;
        /**
         * table edit mode.
         */
        tableEditMode?: pulumi.Input<string>;
        /**
         * table name.
         */
        tableName?: pulumi.Input<string>;
        /**
         * temporary tables.
         */
        tmpTables?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseView {
        /**
         * NewViewName.
         */
        newViewName?: pulumi.Input<string>;
        /**
         * ViewName.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfo {
        /**
         * AccessType.
         */
        accessType: pulumi.Input<string>;
        /**
         * DatabaseType.
         */
        databaseType: pulumi.Input<string>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobSrcInfoExtraAttr>[]>;
        /**
         * Info.
         */
        infos: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobSrcInfoInfo>[]>;
        /**
         * NodeType.
         */
        nodeType: pulumi.Input<string>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Supplier.
         */
        supplier?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfoExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfoInfo {
        /**
         * Account.
         */
        account?: pulumi.Input<string>;
        /**
         * AccountMode.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * AccountRole.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * CcnGwId.
         */
        ccnGwId?: pulumi.Input<string>;
        /**
         * CvmInstanceId.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * DbKernel.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * EngineVersion.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Host.
         */
        host?: pulumi.Input<string>;
        /**
         * InstanceId.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Port.
         */
        port?: pulumi.Input<number>;
        /**
         * Role.
         */
        role?: pulumi.Input<string>;
        /**
         * SubnetId.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * TmpSecretId.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * TmpSecretKey.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * TmpToken.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * UniqDcgId.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * UniqVpnGwId.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * User.
         */
        user?: pulumi.Input<string>;
        /**
         * VpcId.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrateServiceTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface SyncConfigDstInfo {
        /**
         * The account to which the instance belongs. This field is required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        account?: pulumi.Input<string>;
        /**
         * The account to which the resource belongs is empty or self (represents resources within this account), other (represents cross-account resources). Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * The role during cross-account synchronization, only [a-zA-Z0-9-_]+ is allowed, if it is a cross-account instance, this field is required. Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * Cloud networking ID, which is required for the cloud networking access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ccnId?: pulumi.Input<string>;
        /**
         * CVM instance short ID, which is the same as the instance ID displayed on the cloud server console page. If it is a self-built instance of CVM, this field needs to be passed. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * Database kernel type, used to distinguish different kernels in tdsql: percona, mariadb, mysql. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * Database name, when the database is cdwpg, it needs to be provided. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Whether to use encrypted transmission, UnEncrypted means not to use encrypted transmission, Encrypted means to use encrypted transmission, the default is UnEncrypted. Note: This field may return null, indicating that no valid value can be obtained.
         */
        encryptConn?: pulumi.Input<string>;
        /**
         * Database version, valid only when the instance is an RDS instance, ignored by other instances, the format is: 5.6 or 5.7, the default is 5.6. Note: This field may return null, indicating that no valid value can be obtained.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Database instance id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The IP address of the instance, which is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        password?: pulumi.Input<string>;
        /**
         * Instance port, this item is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The english name of region. Note: This field may return null, indicating that no valid value can be obtained.
         */
        region?: pulumi.Input<string>;
        /**
         * The node type of tdsql mysql version, the enumeration value is proxy, set. Note: This field may return null, indicating that no valid value can be obtained.
         */
        role?: pulumi.Input<string>;
        /**
         * External role id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        roleExternalId?: pulumi.Input<string>;
        /**
         * The subnet ID under the private network, this item is required for the private network, leased line, and VPN access methods. Note: This field may return null, indicating that no valid value can be obtained.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cloud vendor type, when the instance is an RDS instance, fill in aliyun, in other cases fill in others, the default is others. Note: This field may return null, indicating that no valid value can be obtained.
         */
        supplier?: pulumi.Input<string>;
        /**
         * Temporary key Id, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * Temporary key Key, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * Temporary Token, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * Leased line gateway ID, which is required for the leased line access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * VPN gateway ID, which is required for the VPN access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * Username, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        user?: pulumi.Input<string>;
        /**
         * Private network ID, which is required for access methods of private network, leased line, and VPN. Note: This field may return null, indicating that no valid value can be obtained.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface SyncConfigObjects {
        /**
         * For advanced object types, such as function and procedure, when an advanced object needs to be synchronized, the initialization type must include the structure initialization type, that is, the value of the Options.InitType field is Structure or Full. Note: This field may return null, indicating that no valid value can be obtained.
         */
        advancedObjects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Synchronization object, not null when Mode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databases?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabase>[]>;
        /**
         * Migration object type Partial (partial object). Note: This field may return null, indicating that no valid value can be obtained.
         */
        mode?: pulumi.Input<string>;
        /**
         * OnlineDDL type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        onlineDdl?: pulumi.Input<inputs.Dts.SyncConfigObjectsOnlineDdl>;
    }

    export interface SyncConfigObjectsDatabase {
        /**
         * DB selection mode: All (for all objects under the current object), Partial (for some objects), when the Mode is Partial, this item is required. Note that synchronization of advanced objects does not depend on this value. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * The name of the library that needs to be migrated or synchronized. This item is required when the ObjectMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Event migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
         */
        eventMode?: pulumi.Input<string>;
        /**
         * When EventMode is partial, specify the name of the event to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
         */
        events?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Select the mode to be synchronized, Partial is a part, all is an entire selection. Note: This field may return null, indicating that no valid value can be obtained.
         */
        functionMode?: pulumi.Input<string>;
        /**
         * Required when the FunctionMode value is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        functions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the library after migration or synchronization, which is the same as the source library by default. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newDbName?: pulumi.Input<string>;
        /**
         * Schema name after migration or synchronization. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newSchemaName?: pulumi.Input<string>;
        /**
         * Select the mode to be synchronized, Partial is part, All is the whole selection. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedureMode?: pulumi.Input<string>;
        /**
         * Required when the value of ProcedureMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Migrated or synchronized schemaNote: This field may return null, indicating that no valid value can be obtained.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * Table selection mode: All (for all objects under the current object), Partial (for some objects), this item is required when the DBMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * A collection of table graph objects, when TableMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabaseTable>[]>;
        /**
         * Trigger migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
         */
        triggerMode?: pulumi.Input<string>;
        /**
         * When TriggerMode is partial, specify the name of the trigger to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
         */
        triggers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * View selection mode: All is all view objects under the current object, Partial is part of the view objects. Note: This field may return null, indicating that no valid value can be obtained.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * View object collection, when ViewMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabaseView>[]>;
    }

    export interface SyncConfigObjectsDatabaseTable {
        /**
         * Filter condition. Note: This field may return null, indicating that no valid value can be obtained.
         */
        filterCondition?: pulumi.Input<string>;
        /**
         * New table name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newTableName?: pulumi.Input<string>;
        /**
         * Table name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface SyncConfigObjectsDatabaseView {
        /**
         * New view name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newViewName?: pulumi.Input<string>;
        /**
         * View name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface SyncConfigObjectsOnlineDdl {
        /**
         * status.
         */
        status?: pulumi.Input<string>;
    }

    export interface SyncConfigOptions {
        /**
         * Whether to add additional columns. Note: This field may return null, indicating that no valid value can be obtained.
         */
        addAdditionalColumn?: pulumi.Input<boolean>;
        /**
         * Detailed options for conflict handling, such as conditional rows and conditional actions in conditional overrides. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conflictHandleOption?: pulumi.Input<inputs.Dts.SyncConfigOptionsConflictHandleOption>;
        /**
         * Conflict handling options, ReportError (error report, the default value), Ignore (ignore), Cover (cover), ConditionCover (condition coverage). Note: This field may return null, indicating that no valid value can be obtained.
         */
        conflictHandleType?: pulumi.Input<string>;
        /**
         * DDL synchronization options, specifically describe which DDLs to synchronize. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlOptions?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigOptionsDdlOption>[]>;
        /**
         * The processing of the table with the same name, ReportErrorAfterCheck (pre-check and report error, default), InitializeAfterDelete (delete and re-initialize), ExecuteAfterIgnore (ignore and continue to execute). Note: This field may return null, indicating that no valid value can be obtained.
         */
        dealOfExistSameTable?: pulumi.Input<string>;
        /**
         * Synchronous initialization options, Data (full data initialization), Structure (structure initialization), Full (full data and structure initialization, default), None (incremental only). Note: This field may return null, indicating that no valid value can be obtained.
         */
        initType?: pulumi.Input<string>;
        /**
         * DML and DDL options to be synchronized, Insert (insert operation), Update (update operation), Delete (delete operation), DDL (structure synchronization), leave blank (not selected), PartialDDL (custom, work with DdlOptions). Note: This field may return null, indicating that no valid value can be obtained.
         */
        opTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SyncConfigOptionsConflictHandleOption {
        /**
         * Columns covered by the condition. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionColumn?: pulumi.Input<string>;
        /**
         * Conditional Override Operation. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionOperator?: pulumi.Input<string>;
        /**
         * Conditional Override Priority Processing. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionOrderInSrcAndDst?: pulumi.Input<string>;
    }

    export interface SyncConfigOptionsDdlOption {
        /**
         * Ddl type, such as Database, Table, View, Index, etc. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlObject?: pulumi.Input<string>;
        /**
         * The specific value of ddl, the possible values for Database [Create,Drop,Alter].The possible values for Table [Create,Drop,Alter,Truncate,Rename].The possible values for View[Create,Drop].For the possible values of Index [Create, Drop]. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlValues?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SyncConfigSrcInfo {
        /**
         * The account to which the instance belongs. This field is required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        account?: pulumi.Input<string>;
        /**
         * The account to which the resource belongs is empty or self (represents resources within this account), other (represents cross-account resources). Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * The role during cross-account synchronization, only [a-zA-Z0-9-_]+ is allowed, if it is a cross-account instance, this field is required. Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * Cloud networking ID, which is required for the cloud networking access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ccnId?: pulumi.Input<string>;
        /**
         * CVM instance short ID, which is the same as the instance ID displayed on the cloud server console page. If it is a self-built instance of CVM, this field needs to be passed. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * Database kernel type, used to distinguish different kernels in tdsql: percona, mariadb, mysql. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * Database name, when the database is cdwpg, it needs to be provided. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Whether to use encrypted transmission, UnEncrypted means not to use encrypted transmission, Encrypted means to use encrypted transmission, the default is UnEncrypted. Note: This field may return null, indicating that no valid value can be obtained.
         */
        encryptConn?: pulumi.Input<string>;
        /**
         * Database version, valid only when the instance is an RDS instance, ignored by other instances, the format is: 5.6 or 5.7, the default is 5.6. Note: This field may return null, indicating that no valid value can be obtained.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Database instance id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The IP address of the instance, which is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        password?: pulumi.Input<string>;
        /**
         * Instance port, this item is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The english name of region. Note: This field may return null, indicating that no valid value can be obtained.
         */
        region?: pulumi.Input<string>;
        /**
         * The node type of tdsql mysql version, the enumeration value is proxy, set. Note: This field may return null, indicating that no valid value can be obtained.
         */
        role?: pulumi.Input<string>;
        /**
         * External role id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        roleExternalId?: pulumi.Input<string>;
        /**
         * The subnet ID under the private network, this item is required for the private network, leased line, and VPN access methods. Note: This field may return null, indicating that no valid value can be obtained.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cloud vendor type, when the instance is an RDS instance, fill in aliyun, in other cases fill in others, the default is others. Note: This field may return null, indicating that no valid value can be obtained.
         */
        supplier?: pulumi.Input<string>;
        /**
         * Temporary key Id, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * Temporary key Key, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * Temporary Token, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * Leased line gateway ID, which is required for the leased line access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * VPN gateway ID, which is required for the VPN access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * Username, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        user?: pulumi.Input<string>;
        /**
         * Private network ID, which is required for access methods of private network, leased line, and VPN. Note: This field may return null, indicating that no valid value can be obtained.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface SyncJobTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }
}

export namespace Eip {
}

export namespace Eips {
}

export namespace Elasticsearch {
    export interface InstanceEsAcl {
        /**
         * Blacklist of kibana access.
         */
        blackLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whitelist of kibana access.
         */
        whiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceMultiZoneInfo {
        /**
         * Availability zone.
         */
        availabilityZone: pulumi.Input<string>;
        /**
         * The ID of a VPC subnetwork.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface InstanceNodeInfoList {
        /**
         * Node disk size. Unit is GB, and default value is `100`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Node disk type. Valid values are `CLOUD_SSD` and `CLOUD_PREMIUM`, `CLOUD_HSSD`. The default value is `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Decides to encrypt this disk or not.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Number of nodes.
         */
        nodeNum: pulumi.Input<number>;
        /**
         * Node specification, and valid values refer to [document of tencentcloud](https://intl.cloud.tencent.com/document/product/845/18376).
         */
        nodeType: pulumi.Input<string>;
        /**
         * Node type. Valid values are `hotData`, `warmData` and `dedicatedMaster`. The default value is 'hotData`.
         */
        type?: pulumi.Input<string>;
    }

    export interface InstanceWebNodeTypeInfo {
        /**
         * Visual node number.
         */
        nodeNum: pulumi.Input<number>;
        /**
         * Visual node specifications.
         */
        nodeType: pulumi.Input<string>;
    }
}

export namespace Emr {
    export interface ClusterResourceSpec {
        /**
         * The number of common node.
         */
        commonCount?: pulumi.Input<number>;
        commonResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecCommonResourceSpec>;
        /**
         * The number of core node.
         */
        coreCount?: pulumi.Input<number>;
        coreResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecCoreResourceSpec>;
        /**
         * The number of master node.
         */
        masterCount?: pulumi.Input<number>;
        masterResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecMasterResourceSpec>;
        /**
         * The number of core node.
         */
        taskCount?: pulumi.Input<number>;
        taskResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecTaskResourceSpec>;
    }

    export interface ClusterResourceSpecCommonResourceSpec {
        cpu?: pulumi.Input<number>;
        diskSize?: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
        memSize?: pulumi.Input<number>;
        rootSize?: pulumi.Input<number>;
        spec?: pulumi.Input<string>;
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecCoreResourceSpec {
        cpu?: pulumi.Input<number>;
        diskSize?: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
        memSize?: pulumi.Input<number>;
        rootSize?: pulumi.Input<number>;
        spec?: pulumi.Input<string>;
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecMasterResourceSpec {
        cpu?: pulumi.Input<number>;
        diskSize?: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
        memSize?: pulumi.Input<number>;
        rootSize?: pulumi.Input<number>;
        spec?: pulumi.Input<string>;
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecTaskResourceSpec {
        cpu?: pulumi.Input<number>;
        diskSize?: pulumi.Input<number>;
        diskType?: pulumi.Input<string>;
        memSize?: pulumi.Input<number>;
        rootSize?: pulumi.Input<number>;
        spec?: pulumi.Input<string>;
        storageType?: pulumi.Input<number>;
    }

}

export namespace Eni {
    export interface InstanceIpv4 {
        /**
         * Description of the IP, maximum length 25.
         */
        description?: pulumi.Input<string>;
        /**
         * Intranet IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Indicates whether the IP is primary.
         */
        primary: pulumi.Input<boolean>;
    }

    export interface InstanceIpv4Info {
        /**
         * Description of the IP, maximum length 25.
         */
        description?: pulumi.Input<string>;
        /**
         * Intranet IP.
         */
        ip?: pulumi.Input<string>;
        /**
         * Indicates whether the IP is primary.
         */
        primary?: pulumi.Input<boolean>;
    }
}

export namespace Enis {
}

export namespace Gaap {
    export interface HttpRuleRealserver {
        /**
         * ID of the GAAP realserver.
         */
        id: pulumi.Input<string>;
        /**
         * IP of the GAAP realserver.
         */
        ip: pulumi.Input<string>;
        /**
         * Port of the GAAP realserver.
         */
        port: pulumi.Input<number>;
        /**
         * Scheduling weight, default value is `1`. Valid value ranges: (1~100).
         */
        weight?: pulumi.Input<number>;
    }

    export interface Layer4ListenerRealserverBindSet {
        /**
         * ID of the GAAP realserver.
         */
        id: pulumi.Input<string>;
        /**
         * IP of the GAAP realserver.
         */
        ip: pulumi.Input<string>;
        /**
         * Port of the GAAP realserver.
         */
        port: pulumi.Input<number>;
        /**
         * Scheduling weight, default value is `1`. The range of values is [1,100].
         */
        weight?: pulumi.Input<number>;
    }

}

export namespace Ha {
}

export namespace Image {
    export interface GetInstanceFilter {
        /**
         * Key of the filter, valid keys: `image-id`, `image-type`, `image-name`.
         */
        name: string;
        /**
         * Values of the filter.
         */
        values: string[];
    }

    export interface GetInstanceFilterArgs {
        /**
         * Key of the filter, valid keys: `image-id`, `image-type`, `image-name`.
         */
        name: pulumi.Input<string>;
        /**
         * Values of the filter.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Images {
}

export namespace Instance {
    export interface GetTypesFilter {
        /**
         * The filter name. Valid values: `zone`, `instance-family` and `instance-charge-type`.
         */
        name: string;
        /**
         * The filter values.
         */
        values: string[];
    }

    export interface GetTypesFilterArgs {
        /**
         * The filter name. Valid values: `zone`, `instance-family` and `instance-charge-type`.
         */
        name: pulumi.Input<string>;
        /**
         * The filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceDataDisk {
        /**
         * Data disk ID used to initialize the data disk. When data disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
         */
        dataDiskId?: pulumi.Input<string>;
        /**
         * Size of the data disk, and unit is GB.
         */
        dataDiskSize: pulumi.Input<number>;
        /**
         * Snapshot ID of the data disk. The selected data disk snapshot size must be smaller than the data disk size.
         */
        dataDiskSnapshotId?: pulumi.Input<string>;
        /**
         * Data disk type. For more information about limits on different data disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, LOCAL_NVME: local NVME disk, specified in the InstanceType, LOCAL_PRO: local HDD disk, specified in the InstanceType, CLOUD_BASIC: HDD cloud disk, CLOUD_PREMIUM: Premium Cloud Storage, CLOUD_SSD: SSD, CLOUD_HSSD: Enhanced SSD, CLOUD_TSSD: Tremendous SSD, CLOUD_BSSD: Balanced SSD.
         */
        dataDiskType: pulumi.Input<string>;
        /**
         * Decides whether the disk is deleted with instance(only applied to `CLOUD_BASIC`, `CLOUD_SSD` and `CLOUD_PREMIUM` disk with `POSTPAID_BY_HOUR` instance), default is true.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Decides whether the disk is encrypted. Default is `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD`.
         */
        throughputPerformance?: pulumi.Input<number>;
    }
}

export namespace Instances {
}

export namespace Key {
}

export namespace Kms {
}

export namespace Kubernetes {
    export interface ClusterAttachmentWorkerConfig {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigGpuArgs>;
        /**
         * Indicate to schedule the adding node or not. Default is true.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Base64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterAttachmentWorkerConfigOverrides {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigOverridesDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigOverridesGpuArgs>;
        /**
         * Indicate to schedule the adding node or not. Default is true.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Base64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigOverridesDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigOverridesGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterAuthOptions {
        /**
         * If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
         */
        autoCreateDiscoveryAnonymousAuth?: pulumi.Input<boolean>;
        /**
         * Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
         */
        issuer?: pulumi.Input<string>;
        /**
         * Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
         */
        jwksUri?: pulumi.Input<string>;
        /**
         * If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
         */
        useTkeDefault?: pulumi.Input<boolean>;
    }

    export interface ClusterClusterAudit {
        /**
         * when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
         */
        deleteAuditLogAndTopic?: pulumi.Input<boolean>;
        /**
         * Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specify id of existing CLS log set, or auto create a new set by leave it empty.
         */
        logSetId?: pulumi.Input<string>;
        /**
         * Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
         */
        topicId?: pulumi.Input<string>;
    }

    export interface ClusterClusterExtraArgs {
        /**
         * The customized parameters for kube-apiserver.
         */
        kubeApiservers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The customized parameters for kube-controller-manager.
         */
        kubeControllerManagers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The customized parameters for kube-scheduler.
         */
        kubeSchedulers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterEventPersistence {
        /**
         * when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
         */
        deleteEventLogAndTopic?: pulumi.Input<boolean>;
        /**
         * Specify weather the Event Persistence enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specify id of existing CLS log set, or auto create a new set by leave it empty.
         */
        logSetId?: pulumi.Input<string>;
        /**
         * Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
         */
        topicId?: pulumi.Input<string>;
    }

    export interface ClusterExistInstance {
        /**
         * Custom mode cluster, you can specify the number of pods for each node. corresponding to the existed_instances_para.instance_ids parameter.
         */
        desiredPodNumbers?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Reinstallation parameters of an existing instance.
         */
        instancesPara?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesPara>;
        /**
         * Role of existed node. value:MASTER_ETCD or WORKER.
         */
        nodeRole?: pulumi.Input<string>;
    }

    export interface ClusterExistInstanceInstancesPara {
        /**
         * Cluster IDs.
         */
        instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterExtensionAddon {
        /**
         * Add-on name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter of the add-on resource object in JSON string format, please check the example at the top of page for reference.
         */
        param: pulumi.Input<string>;
    }

    export interface ClusterLogAgent {
        /**
         * Whether the log agent enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Kubelet root directory as the literal.
         */
        kubeletRootDir?: pulumi.Input<string>;
    }

    export interface ClusterMasterConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * ase64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterMasterConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ClusterNodePoolGlobalConfig {
        /**
         * Indicates which scale-out method will be used when there are multiple scaling groups. Valid values: `random` - select a random scaling group, `most-pods` - select the scaling group that can schedule the most pods, `least-waste` - select the scaling group that can ensure the fewest remaining resources after Pod scheduling.
         */
        expander?: pulumi.Input<string>;
        /**
         * Whether to ignore DaemonSet pods by default when calculating resource usage.
         */
        ignoreDaemonSetsUtilization?: pulumi.Input<boolean>;
        /**
         * Indicates whether to enable scale-in.
         */
        isScaleInEnabled?: pulumi.Input<boolean>;
        /**
         * Max concurrent scale-in volume.
         */
        maxConcurrentScaleIn?: pulumi.Input<number>;
        /**
         * Number of minutes after cluster scale-out when the system starts judging whether to perform scale-in.
         */
        scaleInDelay?: pulumi.Input<number>;
        /**
         * Number of consecutive minutes of idleness after which the node is subject to scale-in.
         */
        scaleInUnneededTime?: pulumi.Input<number>;
        /**
         * Percentage of node resource usage below which the node is considered to be idle.
         */
        scaleInUtilizationThreshold?: pulumi.Input<number>;
        /**
         * During scale-in, ignore nodes with local storage pods.
         */
        skipNodesWithLocalStorage?: pulumi.Input<boolean>;
        /**
         * During scale-in, ignore nodes with pods in the kube-system namespace that are not managed by DaemonSet.
         */
        skipNodesWithSystemPods?: pulumi.Input<boolean>;
    }

    export interface ClusterWorkerConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * ase64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ClusterWorkerInstancesList {
        /**
         * Information of the cvm when it is failed.
         */
        failedReason?: pulumi.Input<string>;
        /**
         * ID of the cvm.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Role of the cvm.
         */
        instanceRole?: pulumi.Input<string>;
        /**
         * State of the cvm.
         */
        instanceState?: pulumi.Input<string>;
        /**
         * LAN IP of the cvm.
         */
        lanIp?: pulumi.Input<string>;
    }

    export interface EncryptionProtectionKmsConfiguration {
        /**
         * kms id.
         */
        keyId?: pulumi.Input<string>;
        /**
         * kms region.
         */
        kmsRegion?: pulumi.Input<string>;
    }

    export interface NodePoolAutoScalingConfig {
        /**
         * Backup CVM instance types if specified instance type sold out or mismatch.
         */
        backupInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Name of cam role.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NodePoolAutoScalingConfigDataDisk>[]>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        hostName?: pulumi.Input<string>;
        /**
         * The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        hostNameStyle?: pulumi.Input<string>;
        /**
         * Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is `0`.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Password to access.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
         */
        spotInstanceType?: pulumi.Input<string>;
        /**
         * Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
         */
        spotMaxPrice?: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * Type of a CVM disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.
         */
        systemDiskType?: pulumi.Input<string>;
    }

    export interface NodePoolAutoScalingConfigDataDisk {
        /**
         * Indicates whether the disk remove after instance terminated. Default is `false`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `dataSize` > 460GB.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface NodePoolNodeConfig {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NodePoolNodeConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.NodePoolNodeConfigGpuArgs>;
        /**
         * Indicate to schedule the adding node or not. Default is true.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Base64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface NodePoolNodeConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `CLOUD_PREMIUM` and `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface NodePoolNodeConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface NodePoolTaint {
        /**
         * Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
         */
        effect: pulumi.Input<string>;
        /**
         * Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
         */
        key: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value: pulumi.Input<string>;
    }

    export interface ScaleWorkerDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ScaleWorkerGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ScaleWorkerWorkerConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ScaleWorkerWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * ase64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ScaleWorkerWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScaleWorkerWorkerInstancesList {
        /**
         * Information of the cvm when it is failed.
         */
        failedReason?: pulumi.Input<string>;
        /**
         * ID of the cvm.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Role of the cvm.
         */
        instanceRole?: pulumi.Input<string>;
        /**
         * State of the cvm.
         */
        instanceState?: pulumi.Input<string>;
        /**
         * LAN IP of the cvm.
         */
        lanIp?: pulumi.Input<string>;
    }

    export interface ServerlessNodePoolServerlessNode {
        /**
         * display name of serverless node.
         */
        displayName?: pulumi.Input<string>;
        /**
         * subnet id of serverless node.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface ServerlessNodePoolTaint {
        /**
         * Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
         */
        effect: pulumi.Input<string>;
        /**
         * Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
         */
        key: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value: pulumi.Input<string>;
    }

}

export namespace Lighthouse {
    export interface DiskAutoMountConfiguration {
        /**
         * The file system type. Value: ext4, xfs. Only instances of the Linux operating system can pass in this parameter, and if it is not passed, it defaults to ext4.
         */
        fileSystemType?: pulumi.Input<string>;
        /**
         * Instance ID to be mounted. The specified instance must be in the Running state.
         */
        instanceId: pulumi.Input<string>;
        /**
         * The mount point within the instance. Only instances of the Linux operating system can pass in this parameter, and if it is not passed, it will be mounted under the /data/disk path by default.
         */
        mountPoint?: pulumi.Input<string>;
    }

    export interface DiskDiskChargePrepaid {
        /**
         * new purchase cycle.
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renewal flag. Value: `NOTIFY_AND_AUTO_RENEW`: Notice expires and auto-renews. `NOTIFY_AND_MANUAL_RENEW`: Notification expires without automatic renewal, users need to manually renew. `DISABLE_NOTIFY_AND_AUTO_RENEW`: No automatic renewal and no notification. Default: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the disk will be automatically renewed monthly when the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
        /**
         * newly purchased unit. Default: m.
         */
        timeUnit?: pulumi.Input<string>;
    }

    export interface FirewallRuleFirewallRule {
        /**
         * Valid values are ACCEPT, DROP. Default value is ACCEPT.
         */
        action?: pulumi.Input<string>;
        /**
         * IP range or IP (mutually exclusive). Default value is 0.0.0.0/0, which indicates all sources.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Firewall rule description.
         */
        firewallRuleDescription?: pulumi.Input<string>;
        /**
         * Port. Valid values are ALL, one single port, multiple ports separated by commas, or port range indicated by a minus sign.
         */
        port?: pulumi.Input<string>;
        /**
         * Protocol. Valid values are TCP, UDP, ICMP, ALL.
         */
        protocol: pulumi.Input<string>;
    }

    export interface GetBundleFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetBundleFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDiskConfigFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDiskConfigFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetDisksFilter {
        /**
         * Fields to be filtered. Valid names: `disk-id`: Filters by disk id; `instance-id`: Filter by instance id; `disk-name`: Filter by disk name; `zone`: Filter by zone; `disk-usage`: Filter by disk usage(Values: `SYSTEM_DISK` or `DATA_DISK`); `disk-state`: Filter by disk state.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetDisksFilterArgs {
        /**
         * Fields to be filtered. Valid names: `disk-id`: Filters by disk id; `instance-id`: Filter by instance id; `disk-name`: Filter by disk name; `zone`: Filter by zone; `disk-usage`: Filter by disk usage(Values: `SYSTEM_DISK` or `DATA_DISK`); `disk-state`: Filter by disk state.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetModifyInstanceBundleFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetModifyInstanceBundleFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetResetInstanceBlueprintFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetResetInstanceBlueprintFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface InstanceContainer {
        /**
         * The command to run.
         */
        command?: pulumi.Input<string>;
        /**
         * Container image address.
         */
        containerImage?: pulumi.Input<string>;
        /**
         * Container name.
         */
        containerName?: pulumi.Input<string>;
        /**
         * List of environment variables.
         */
        envs?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerEnv>[]>;
        /**
         * List of mappings of container ports and host ports.
         */
        publishPorts?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerPublishPort>[]>;
        /**
         * List of container mount volumes.
         */
        volumes?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerVolume>[]>;
    }

    export interface InstanceContainerEnv {
        /**
         * Environment variable key.
         */
        key: pulumi.Input<string>;
        /**
         * Environment variable value.
         */
        value: pulumi.Input<string>;
    }

    export interface InstanceContainerPublishPort {
        /**
         * Container port.
         */
        containerPort: pulumi.Input<number>;
        /**
         * Host port.
         */
        hostPort: pulumi.Input<number>;
        /**
         * External IP. It defaults to 0.0.0.0.
         */
        ip?: pulumi.Input<string>;
        /**
         * The protocol defaults to tcp. Valid values: tcp, udp and sctp.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface InstanceContainerVolume {
        /**
         * Container path.
         */
        containerPath: pulumi.Input<string>;
        /**
         * Host path.
         */
        hostPath: pulumi.Input<string>;
    }

    export interface InstanceLoginConfiguration {
        /**
         * whether auto generate password. if false, need set password.
         */
        autoGeneratePassword: pulumi.Input<string>;
        /**
         * Login password.
         */
        password?: pulumi.Input<string>;
    }

    export interface RenewDiskRenewDiskChargePrepaid {
        /**
         * Current instance expiration time. Such as 2018-01-01 00:00:00. Specifying this parameter can align the expiration time of the instance attached to the disk. One of this parameter and Period must be specified, and cannot be specified at the same time.
         */
        curInstanceDeadline?: pulumi.Input<string>;
        /**
         * Renewal period.
         */
        period?: pulumi.Input<number>;
        /**
         * Automatic renewal falg. Value:NOTIFY_AND_AUTO_RENEW: Notice expires and auto-renews.NOTIFY_AND_MANUAL_RENEW: Notification expires without automatic renewal, users need to manually renew.DISABLE_NOTIFY_AND_AUTO_RENEW: No automatic renewal and no notification.Default: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the disk will be automatically renewed monthly when the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
        /**
         * newly purchased unit. Default: m.
         */
        timeUnit?: pulumi.Input<string>;
    }

    export interface RenewInstanceInstanceChargePrepaid {
        /**
         * The duration of purchasing an instance. Unit is month. Valid values are (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60).
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renewal logo. Values:
         * - `NOTIFY_AND_AUTO_RENEW`: notify expiration and renew automatically;
         * - `NOTIFY_AND_MANUAL_RENEW`: notification of expiration does not renew automatically. Users need to renew manually;
         * - `DISABLE_NOTIFY_AND_AUTO_RENEW`: no automatic renewal and no notification;
         * Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis after expiration, when the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
    }
}

export namespace Mariadb {
    export interface AccountPrivilegesAccounts {
        /**
         * user host.
         */
        host: pulumi.Input<string>;
        /**
         * user name.
         */
        user: pulumi.Input<string>;
    }

    export interface AccountPrivilegesColumnPrivilege {
        /**
         * Column name.
         */
        column: pulumi.Input<string>;
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesDatabasePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesFunctionPrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesProcedurePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Procedure name.
         */
        procedure: pulumi.Input<string>;
    }

    export interface AccountPrivilegesTablePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesViewPrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * View name.
         */
        view: pulumi.Input<string>;
    }

    export interface InstanceInitParam {
        /**
         * parameter name.
         */
        param: pulumi.Input<string>;
        /**
         * parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface ParametersParam {
        /**
         * parameter name.
         */
        param: pulumi.Input<string>;
        /**
         * parameter value.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Mdl {
    export interface StreamLiveInputInputSetting {
        /**
         * Application name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
         */
        appName?: pulumi.Input<string>;
        /**
         * Delayed time (ms) for playback, which is valid if `Type` is `RTMP_PUSH`Value range: 0 (default) or 10000-600000The value must be a multiple of 1,000.Note: This field may return `null`, indicating that no valid value was found.
         */
        delayTime?: pulumi.Input<number>;
        /**
         * RTP/UDP input address, which does not need to be entered for the input parameter.Note: this field may return null, indicating that no valid values can be obtained.
         */
        inputAddress?: pulumi.Input<string>;
        /**
         * The domain of an SRT_PUSH address. If this is a request parameter, you do not need to specify it.Note: This field may return `null`, indicating that no valid value was found.
         */
        inputDomain?: pulumi.Input<string>;
        /**
         * The password, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
         */
        password?: pulumi.Input<string>;
        /**
         * Source type for stream pulling and relaying. To pull content from private-read COS buckets under the current account, set this parameter to `TencentCOS`; otherwise, leave it empty.Note: this field may return `null`, indicating that no valid value was found.
         */
        sourceType?: pulumi.Input<string>;
        /**
         * Source URL, which is valid if `Type` is `RTMP_PULL`, `HLS_PULL`, or `MP4_PULL` and can contain 1-512 charactersNote: This field may return `null`, indicating that no valid value was found.
         */
        sourceUrl?: pulumi.Input<string>;
        /**
         * Stream name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
         */
        streamName?: pulumi.Input<string>;
        /**
         * The username, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
         */
        userName?: pulumi.Input<string>;
    }
}

export namespace Mongodb {
    export interface InstanceAccountAuthRole {
        /**
         * Permission information of the current account. 0: No permission. 1: read-only. 2: Write only. 3: Read and write.
         */
        mask: pulumi.Input<number>;
        /**
         * Refers to the name of the database with the current account permissions.*: Indicates all databases. db.name: Indicates the database of a specific name.
         */
        namespace: pulumi.Input<string>;
    }

    export interface InstanceBackupDownloadTaskBackupSet {
        replicaSetId: pulumi.Input<string>;
    }

    export interface InstanceStandbyInstanceList {
        /**
         * Indicates the ID of standby instance.
         */
        standbyInstanceId?: pulumi.Input<string>;
        /**
         * Indicates the region of standby instance.
         */
        standbyInstanceRegion?: pulumi.Input<string>;
    }

}

export namespace Monitor {
    export interface AlarmNoticeClsNotice {
        /**
         * Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
         */
        enable?: pulumi.Input<number>;
        /**
         * Log collection Id.
         */
        logSetId: pulumi.Input<string>;
        /**
         * Regional.
         */
        region: pulumi.Input<string>;
        /**
         * Theme Id.
         */
        topicId: pulumi.Input<string>;
    }

    export interface AlarmNoticeUrlNotice {
        /**
         * Notification End Time Seconds at the start of a day.
         */
        endTime?: pulumi.Input<number>;
        /**
         * Notification Start Time Number of seconds at the start of a day.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Callback URL (limited to 256 characters).
         */
        url: pulumi.Input<string>;
        /**
         * Notification period 1-7 indicates Monday to Sunday.
         */
        weekdays?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface AlarmNoticeUserNotice {
        /**
         * The number of seconds since the notification end time 00:00:00 (value range 0-86399).
         */
        endTime: pulumi.Input<number>;
        /**
         * User group ID list.
         */
        groupIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Contact notification required 0= No 1= Yes.
         */
        needPhoneArriveNotice?: pulumi.Input<number>;
        /**
         * Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
         */
        noticeWays: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
         */
        phoneCallType?: pulumi.Input<string>;
        /**
         * Number of seconds between polls (value range: 60-900).
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * Number of telephone polls (value range: 1-5).
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Number of seconds between calls in a polling session (value range: 60-900).
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Telephone polling list.
         */
        phoneOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Recipient Type USER=User GROUP=User Group.
         */
        receiverType: pulumi.Input<string>;
        /**
         * The number of seconds since the notification start time 00:00:00 (value range 0-86399).
         */
        startTime: pulumi.Input<number>;
        /**
         * User UID List.
         */
        userIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Notification period 1-7 indicates Monday to Sunday.
         */
        weekdays?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface AlarmPolicyConditions {
        /**
         * The and or relation of indicator alarm rule.
         */
        isUnionRule?: pulumi.Input<number>;
        /**
         * A list of metric trigger condition.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.Monitor.AlarmPolicyConditionsRule>[]>;
    }

    export interface AlarmPolicyConditionsRule {
        /**
         * Number of periods.
         */
        continuePeriod?: pulumi.Input<number>;
        /**
         * Metric display name, which is used in the output parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * Filter condition for one single trigger rule. Must set it when create tke-xxx rules.
         */
        filter?: pulumi.Input<inputs.Monitor.AlarmPolicyConditionsRuleFilter>;
        /**
         * Whether the alarm frequency increases exponentially.
         */
        isPowerNotice?: pulumi.Input<number>;
        /**
         * Metric name or event name.
         */
        metricName?: pulumi.Input<string>;
        /**
         * Alarm interval in seconds.
         */
        noticeFrequency?: pulumi.Input<number>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Statistical period in seconds.
         */
        period?: pulumi.Input<number>;
        /**
         * Trigger condition type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Unit, which is used in the output parameter.
         */
        unit?: pulumi.Input<string>;
        /**
         * Threshold.
         */
        value?: pulumi.Input<string>;
    }

    export interface AlarmPolicyConditionsRuleFilter {
        /**
         * JSON string generated by serializing the AlarmPolicyDimension two-dimensional array.
         */
        dimensions?: pulumi.Input<string>;
        /**
         * Filter condition type. Valid values: DIMENSION (uses dimensions for filtering).
         */
        type?: pulumi.Input<string>;
    }

    export interface AlarmPolicyEventCondition {
        /**
         * Number of periods.
         */
        continuePeriod?: pulumi.Input<number>;
        /**
         * Metric display name, which is used in the output parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * Filter condition for one single trigger rule. Must set it when create tke-xxx rules.
         */
        filter?: pulumi.Input<inputs.Monitor.AlarmPolicyEventConditionFilter>;
        /**
         * Whether the alarm frequency increases exponentially.
         */
        isPowerNotice?: pulumi.Input<number>;
        /**
         * Metric name or event name.
         */
        metricName?: pulumi.Input<string>;
        /**
         * Alarm interval in seconds.
         */
        noticeFrequency?: pulumi.Input<number>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Statistical period in seconds.
         */
        period?: pulumi.Input<number>;
        /**
         * Trigger condition type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Unit, which is used in the output parameter.
         */
        unit?: pulumi.Input<string>;
        /**
         * Threshold.
         */
        value?: pulumi.Input<string>;
    }

    export interface AlarmPolicyEventConditionFilter {
        /**
         * JSON string generated by serializing the AlarmPolicyDimension two-dimensional array.
         */
        dimensions?: pulumi.Input<string>;
        /**
         * Filter condition type. Valid values: DIMENSION (uses dimensions for filtering).
         */
        type?: pulumi.Input<string>;
    }

    export interface AlarmPolicyPolicyTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface AlarmPolicyTriggerTask {
        /**
         * Configuration information in JSON format.
         */
        taskConfig: pulumi.Input<string>;
        /**
         * Triggered task type.
         */
        type: pulumi.Input<string>;
    }

    export interface BindingReceiverReceivers {
        /**
         * End of alarm period. Meaning with `startTime`.
         */
        endTime?: pulumi.Input<number>;
        /**
         * Method of warning notification.Optional `CALL`,`EMAIL`,`SITE`,`SMS`,`WECHAT`.
         */
        notifyWays: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alert sending language. Optional `en-US`,`zh-CN`.
         */
        receiveLanguage?: pulumi.Input<string>;
        /**
         * Alarm receive group ID list.
         */
        receiverGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Receive type. Optional `group`,`user`.
         */
        receiverType: pulumi.Input<string>;
        /**
         * Alarm receiver ID list.
         */
        receiverUserLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alarm period start time. Valid value ranges: (0~86399). which removes the date after it is converted to Beijing time as a Unix timestamp, for example 7200 means '10:0:0'.
         */
        startTime?: pulumi.Input<number>;
    }

    export interface GetDataDimension {
        /**
         * Instance dimension name, eg: `InstanceId` for cvm.
         */
        name: string;
        /**
         * Instance dimension value, eg: `ins-j0hk02zo` for cvm.
         */
        value: string;
    }

    export interface GetDataDimensionArgs {
        /**
         * Instance dimension name, eg: `InstanceId` for cvm.
         */
        name: pulumi.Input<string>;
        /**
         * Instance dimension value, eg: `ins-j0hk02zo` for cvm.
         */
        value: pulumi.Input<string>;
    }

    export interface GetProductEventDimensionArgs {
        /**
         * Instance dimension name, eg: `deviceWanIp` for internet ip.
         */
        name?: pulumi.Input<string>;
        /**
         * Instance dimension value, eg: `119.119.119.119` for internet ip.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetProductEventDimension {
        /**
         * Instance dimension name, eg: `deviceWanIp` for internet ip.
         */
        name?: string;
        /**
         * Instance dimension value, eg: `119.119.119.119` for internet ip.
         */
        value?: string;
    }

    export interface GrafanaSsoAccountRole {
        /**
         * Grafana organization id string.
         */
        organization: pulumi.Input<string>;
        /**
         * Grafana role, one of {Admin,Editor,Viewer}.
         */
        role: pulumi.Input<string>;
    }

    export interface PolicyBindingObjectDimension {
        /**
         * Represents a collection of dimensions of an object instance, json format.eg:'{"unInstanceId":"ins-ot3cq4bi"}'.
         */
        dimensionsJson: pulumi.Input<string>;
        uniqueId?: pulumi.Input<string>;
    }

    export interface TmpAlertRuleAnnotation {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpAlertRuleLabel {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRule {
        /**
         * If the alarm policy is derived from the CRD resource definition of the user cluster, the ClusterId is the cluster ID to which it belongs.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        id?: pulumi.Input<string>;
        /**
         * Policy name.
         */
        name: pulumi.Input<string>;
        /**
         * Alarm channels, which may be returned using null in the template.
         */
        notification?: pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleNotification>;
        /**
         * A list of rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRule>[]>;
        /**
         * If the alarm is sent from a template, the TemplateId is the template id.
         */
        templateId?: pulumi.Input<string>;
        /**
         * Last modified time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleNotification {
        /**
         * If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
         */
        alertManager?: pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleNotificationAlertManager>;
        /**
         * Whether it is enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
         */
        notifyWays?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Telephone alerts reach notifications.
         */
        phoneArriveNotice?: pulumi.Input<boolean>;
        /**
         * Effective end timeTelephone alarm wheel interval. Units: Seconds.
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * PhoneCircleTimes.
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Telephone alarm wheel intervals. Units: Seconds.
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Telephone alarm sequence.
         */
        phoneNotifyOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alert Receiving Group (User Group).
         */
        receiverGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Convergence time.
         */
        repeatInterval?: pulumi.Input<string>;
        /**
         * Effective end time.
         */
        timeRangeEnd?: pulumi.Input<string>;
        /**
         * The time from which it takes effect.
         */
        timeRangeStart?: pulumi.Input<string>;
        /**
         * The channel type, which defaults to amp, supports the following `amp`, `webhook`, `alertmanager`.
         */
        type: pulumi.Input<string>;
        /**
         * If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        webHook?: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleNotificationAlertManager {
        /**
         * The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Alertmanager url.
         */
        url: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRule {
        /**
         * Refer to annotations in prometheus rule.
         */
        annotations?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRuleAnnotation>[]>;
        /**
         * A description of the rule.
         */
        describe?: pulumi.Input<string>;
        /**
         * Time of duration.
         */
        for: pulumi.Input<string>;
        /**
         * Extra labels.
         */
        labels: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRuleLabel>[]>;
        /**
         * Rule name.
         */
        name: pulumi.Input<string>;
        /**
         * Prometheus statement.
         */
        rule: pulumi.Input<string>;
        /**
         * Alarm rule status.
         */
        ruleState?: pulumi.Input<number>;
        /**
         * Alert sending template.
         */
        template: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRuleAnnotation {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRuleLabel {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgents {
        /**
         * An id identify the cluster, like `cls-xxxxxx`.
         */
        clusterId: pulumi.Input<string>;
        clusterName?: pulumi.Input<string>;
        /**
         * Type of cluster.
         */
        clusterType: pulumi.Input<string>;
        /**
         * Whether to enable the public network CLB.
         */
        enableExternal: pulumi.Input<boolean>;
        /**
         * All metrics collected by the cluster will carry these labels.
         */
        externalLabels?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsExternalLabel>[]>;
        /**
         * Pod configuration for components deployed in the cluster.
         */
        inClusterPodConfig?: pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfig>;
        /**
         * Whether to install the default collection configuration.
         */
        notInstallBasicScrape?: pulumi.Input<boolean>;
        /**
         * Whether to collect indicators, true means drop all indicators, false means collect default indicators.
         */
        notScrape?: pulumi.Input<boolean>;
        /**
         * Limitation of region.
         */
        region: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsExternalLabel {
        /**
         * Indicator name.
         */
        name: pulumi.Input<string>;
        /**
         * Index value.
         */
        value?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfig {
        /**
         * Whether to use HostNetWork.
         */
        hostNet: pulumi.Input<boolean>;
        /**
         * Specify the pod to run the node.
         */
        nodeSelectors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfigNodeSelector>[]>;
        /**
         * Tolerate Stain.
         */
        tolerations?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfigToleration>[]>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfigNodeSelector {
        /**
         * The pod configuration name of the component deployed in the cluster.
         */
        name?: pulumi.Input<string>;
        /**
         * Pod configuration values for components deployed in the cluster.
         */
        value?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfigToleration {
        /**
         * blemish effect to match.
         */
        effect?: pulumi.Input<string>;
        /**
         * The taint key to which the tolerance applies.
         */
        key?: pulumi.Input<string>;
        /**
         * key-value relationship.
         */
        operator?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigPodMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name. The naming rule is: namespace/name. If you don't have any namespace, use the default namespace: kube-system, otherwise use the specified one.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigRawJob {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigServiceMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name. The naming rule is: namespace/name. If you don't have any namespace, use the default namespace: kube-system, otherwise use the specified one.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeGlobalNotificationNotification {
        /**
         * Alert manager, if Type is `alertmanager`, this field is required.
         */
        alertManagers?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeGlobalNotificationNotificationAlertManager>[]>;
        /**
         * Alarm notification switch.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Alarm notification method, Valid values: `SMS`, `EMAIL`, `CALL`, `WECHAT`.
         */
        notifyWays?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Phone Alarm Reach Notification, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneArriveNotice?: pulumi.Input<boolean>;
        /**
         * Telephone alarm off-wheel interval, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * Number of phone alerts (user group), NotifyWay is `CALL`, and this parameter is used.
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Interval between telephone alarm rounds, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Phone alert sequence, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneNotifyOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alarm receiving group(user group).
         */
        receiverGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Convergence time.
         */
        repeatInterval?: pulumi.Input<string>;
        /**
         * Effective end time.
         */
        timeRangeEnd?: pulumi.Input<string>;
        /**
         * Effective start time.
         */
        timeRangeStart?: pulumi.Input<string>;
        /**
         * Alarm notification type, Valid values: `amp`, `webhook`, `alertmanager`.
         */
        type: pulumi.Input<string>;
        /**
         * Web hook, if Type is `webhook`, this field is required.
         */
        webHook?: pulumi.Input<string>;
    }

    export interface TmpTkeGlobalNotificationNotificationAlertManager {
        /**
         * Cluster id.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Alert manager url.
         */
        url: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateAttachmentTargets {
        /**
         * ID of the cluster.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Name the cluster.
         */
        clusterName?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * instance id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Name of the prometheus instance.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * target area.
         */
        region: pulumi.Input<string>;
        /**
         * Last sync template time.
         */
        syncTime?: pulumi.Input<string>;
        /**
         * Template version currently in use.
         */
        version?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplate {
        /**
         * Template description.
         */
        describe?: pulumi.Input<string>;
        /**
         * Whether the system-supplied default template is used for outgoing references.
         */
        isDefault?: pulumi.Input<boolean>;
        /**
         * Template dimensions, the following types are supported `instance` instance level, `cluster` cluster level.
         */
        level: pulumi.Input<string>;
        /**
         * Template name.
         */
        name: pulumi.Input<string>;
        /**
         * Effective when Level is a cluster, A list of PodMonitors rules in the template.
         */
        podMonitors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplatePodMonitor>[]>;
        /**
         * Effective when Level is a cluster, A list of RawJobs rules in the template.
         */
        rawJobs?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateRawJob>[]>;
        /**
         * Effective when Level is instance, A list of aggregation rules in the template.
         */
        recordRules?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateRecordRule>[]>;
        /**
         * Effective when Level is a cluster, A list of ServiceMonitor rules in the template.
         */
        serviceMonitors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateServiceMonitor>[]>;
        /**
         * The ID of the template, which is used for the outgoing reference.
         */
        templateId?: pulumi.Input<string>;
        /**
         * Last updated, for outgoing references.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * Whether the system-supplied default template is used for outgoing references.
         */
        version?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplatePodMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateRawJob {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateRecordRule {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateServiceMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

}

export namespace Mps {
    export interface AdaptiveDynamicStreamingTemplateStreamInfo {
        /**
         * Audio parameter information.
         */
        audio: pulumi.Input<inputs.Mps.AdaptiveDynamicStreamingTemplateStreamInfoAudio>;
        /**
         * Whether to remove audio stream, value:0: reserved.1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video stream, value:0: reserved.1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Video parameter information.
         */
        video: pulumi.Input<inputs.Mps.AdaptiveDynamicStreamingTemplateStreamInfoVideo>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoAudio {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of audio stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoVideo {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling type, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling type:stretch: Stretching, stretching each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave black, keep the video aspect ratio unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and use Gaussian blur for the rest of the edge.Default value: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of the height (or short side) of the video streaming, value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents the short side of the video.close: At this point, Width represents the width of the video, and Height represents the height of the video.Default value: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of the width (or long side) of the video streaming, value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface AiAnalysisTemplateClassificationConfigure {
        /**
         * Ai classification task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateCoverConfigure {
        /**
         * Ai cover task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateFrameTagConfigure {
        /**
         * Ai frame tag task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateTagConfigure {
        /**
         * Ai tag task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateAsrFullTextConfigure {
        /**
         * Generated subtitle file format, if left blank or blank string means no subtitle file will be generated, optional value:vtt: Generate WebVTT subtitle files.
         */
        subtitleFormat?: pulumi.Input<string>;
        /**
         * Asr full text recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateAsrWordsConfigure {
        /**
         * Keyword filter label, specify the label of the keyword to be returned. If not filled or empty, all results will be returned.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Asr word recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateFaceConfigure {
        /**
         * Default face filter tag, specify the tag of the default face that needs to be returned. If not filled or empty, all default face results will be returned. Label optional value:entertainment, sport, politician.
         */
        defaultLibraryLabelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Face library selection, optional value:Default, UserDefine, AllDefault value: All, use the system default face library and user-defined face library.
         */
        faceLibrary?: pulumi.Input<string>;
        /**
         * Face recognition filter score, when the recognition result reaches the score above, the recognition result will be returned. The default is 95 points. Value range: 0 - 100.
         */
        score?: pulumi.Input<number>;
        /**
         * Ai face recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
        /**
         * User-defined face filter tag, specify the tag of the user-defined face that needs to be returned. If not filled or empty, all custom face results will be returned.The maximum number of tags is 100, and the length of each tag is up to 16 characters.
         */
        userDefineLibraryLabelSets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AiRecognitionTemplateOcrFullTextConfigure {
        /**
         * Ocr full text recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateOcrWordsConfigure {
        /**
         * Keyword filter label, specify the label of the keyword to be returned. If not filled or empty, all results will be returned.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ocr words recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface TranscodeTemplateAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodeTemplateEnhanceConfig {
        /**
         * Video Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        videoEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhance>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhance {
        /**
         * De-artifact (glitch) configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        artifactRepair?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceArtifactRepair>;
        /**
         * Color Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        colorEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceColorEnhance>;
        /**
         * Video Noise Reduction Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        denoise?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceDenoise>;
        /**
         * Face Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        faceEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceFaceEnhance>;
        /**
         * Interpolation frame rate configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        frameRate?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceFrameRate>;
        /**
         * HDR configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        hdr?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceHdr>;
        /**
         * Comprehensive Enhanced Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        imageQualityEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceImageQualityEnhance>;
        /**
         * Low Light Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        lowLightEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceLowLightEnhance>;
        /**
         * De-scratch configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        scratchRepair?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceScratchRepair>;
        /**
         * Detail Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        sharpEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceSharpEnhance>;
        /**
         * Super resolution configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        superResolution?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceSuperResolution>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceArtifactRepair {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceColorEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/normal/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceDenoise {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceFaceEnhance {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceFrameRate {
        /**
         * Frame rate, value range: [0, 100], unit: Hz.Default value: 0.Note: For transcoding, this parameter will override the Fps inside the VideoTemplate.Note: This field may return null, indicating that no valid value can be obtained.
         */
        fps?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceHdr {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: HDR10/HLG.Default value: HDR10.Note: The encoding method of video needs to be libx265.Note: Video encoding bit depth is 10.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceImageQualityEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/normal/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceLowLightEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: normal.Default value: normal.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceScratchRepair {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceSharpEnhance {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceSuperResolution {
        /**
         * Super resolution multiple, optional value:2: currently only supports 2x super resolution.Default value: 2.Note: This field may return null, indicating that no valid value can be obtained.
         */
        size?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value:lq: super-resolution for low-definition video with more noise.hq: super resolution for high-definition video.Default value: lq.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface TranscodeTemplateVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WatermarkTemplateImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels. The value range is 0 or [8, 4096].Default value: 0px. Indicates that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Watermark image[Base64](https://tools.ietf.org/html/rfc4648) encoded string. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<string>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges:once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixel, such as 100px means that the Width is 100 pixels. The value range is [8, 4096].Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateSvgTemplate {
        /**
         * The height of the watermark, supports px, W%, H%, S%, L% six formats:When the string ends with px, it means that the watermark Height unit is pixels, such as 100px means that the Height is 100 pixels; when filling 0px and Width is not 0px, it means that the height of the watermark is proportionally scaled according to the original SVG image; when both Width and Height are filled When 0px, it means that the height of the watermark takes the height of the original SVG image.When the string ends with W%, it means that the watermark Height is a percentage of the video width, such as 10W% means that the Height is 10% of the video width.When the string ends with H%, it means that the watermark Height is the percentage size of the video height, such as 10H% means that the Height is 10% of the video height.When the string ends with S%, it means that the watermark Height is the percentage size of the short side of the video, such as 10S% means that the Height is 10% of the short side of the video.When the string ends with L%, it means that the watermark Height is the percentage size of the long side of the video, such as 10L% means that the Height is 10% of the long side of the video.When the string ends with %, the meaning is the same as H%.Default value: 0px.
         */
        height?: pulumi.Input<string>;
        /**
         * The width of the watermark, supports px, %, W%, H%, S%, L% six formats.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels; when filling 0px and the Height is not 0px, it means that the width of the watermark is proportionally scaled according to the original SVG image; when both Width and Height are filled When 0px, it means that the width of the watermark takes the width of the original SVG image.When the string ends with W%, it means that the watermark Width is a percentage of the video width, such as 10W% means that the Width is 10% of the video width.When the string ends with H%, it means that the watermark Width is a percentage of the video height, such as 10H% means that the Width is 10% of the video height.When the string ends with S%, it means that the watermark Width is the percentage size of the short side of the video, such as 10S% means that the Width is 10% of the short side of the video.When the string ends with L%, it means that the watermark Width is the percentage size of the long side of the video, such as 10L% means that the Width is 10% of the long side of the video.When the string ends with %, it has the same meaning as W%.Default value: 10W%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateTextTemplate {
        /**
         * Text transparency, value range: (0, 1].0: fully transparent.1: fully opaque.Default value: 1.
         */
        fontAlpha: pulumi.Input<number>;
        /**
         * Font color, format: 0xRRGGBB, default value: 0xFFFFFF (white).
         */
        fontColor: pulumi.Input<string>;
        /**
         * Font size, format: Npx, N is a number.
         */
        fontSize: pulumi.Input<string>;
        /**
         * Font type, currently supports two:simkai.ttf: can support Chinese and English.arial.ttf: English only.
         */
        fontType: pulumi.Input<string>;
    }

    export interface WorkflowAiAnalysisTask {
        /**
         * Video Content Analysis Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Extension parameter whose value is a serialized json string.Note: This parameter is a customized demand parameter, which requires offline docking.Note: This field may return null, indicating that no valid value can be obtained.
         */
        extendedParameter?: pulumi.Input<string>;
    }

    export interface WorkflowAiContentReviewTask {
        /**
         * Video Content Review Template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface WorkflowAiRecognitionTask {
        /**
         * Video Intelligent Recognition Template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTask {
        /**
         * Transfer Adaptive Code Stream Task List.
         */
        adaptiveDynamicStreamingTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSet>[]>;
        /**
         * Video Rotation Map Task List.
         */
        animatedGraphicTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSet>[]>;
        /**
         * Sprite image capture task list for video.
         */
        imageSpriteTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSet>[]>;
        /**
         * Screenshot task list for video sampling.
         */
        sampleSnapshotTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSet>[]>;
        /**
         * Screenshot the task list of the video according to the time point.
         */
        snapshotByTimeOffsetTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSet>[]>;
        /**
         * Video Transcoding Task List.
         */
        transcodeTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSet>[]>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSet {
        /**
         * Transfer Adaptive Code Stream Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * After converting to an adaptive stream, the output path of the manifest file can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_adaptiveDynamicStreaming_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after converting to the adaptive code stream, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage>;
        /**
         * After converting to an adaptive stream (only HLS), the output path of the fragmented file can only be a relative path. If not filled, the default is a relative path: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}_{segmentNumber}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * After converting to an adaptive stream, the output path of the sub-stream file can only be a relative path. If not filled, the default is a relative path: {inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}.{format}`.
         */
        subStreamObjectName?: pulumi.Input<string>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSet {
        /**
         * Video turntable template id.
         */
        definition: pulumi.Input<number>;
        /**
         * The end time of the animation in the video, in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * The output path of the file after rotating the image, which can be a relative path or an absolute path. If not filled, the default is a relative path: {inputName}_animatedGraphic_{definition}.{format}.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the transcoded file, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorage>;
        /**
         * The start time of the animation in the video, in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSet {
        /**
         * Sprite Illustration Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rules for the `{number}` variable in the output path after intercepting the Sprite image.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetObjectNumberFormat>;
        /**
         * After capturing the sprite image, the output path of the sprite image file can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_imageSprite_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the sprite image is intercepted, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorage>;
        /**
         * After capturing the sprite image, the output path of the Web VTT file can only be a relative path. If not filled, the default is a relative path: `{inputName}_imageSprite_{definition}.{format}`.
         */
        webVttObjectName?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSet {
        /**
         * Sample screenshot template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rules for the `{number}` variable in the output path after sampling the screenshot.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat>;
        /**
         * The output path of the image file after sampling the screenshot, which can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_sampleSnapshot_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the screenshot at the time point, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorage>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSet {
        /**
         * Specified time point screenshot template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Screenshot time point list, the time point supports two formats: s and %:;When the string ends with s, it means that the time point is in seconds, such as 3.5s means that the time point is the 3.5th second.When the string ends with %, it means that the time point is the percentage of the video duration, such as 10% means that the time point is the first 10% of the time in the video.
         */
        extTimeOffsetSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rules for the `{number}` variable in the output path after the screenshot at the time point.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat>;
        /**
         * The output path of the picture file after the snapshot at the time point can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_snapshotByTimeOffset_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the screenshot at the time point, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage>;
        /**
         * Screenshot time point list, the unit is &lt;font color=red&gt;seconds&lt;/font&gt;. This parameter is no longer recommended, it is recommended that you use the ExtTimeOffsetSet parameter.
         */
        timeOffsetSets?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSet {
        /**
         * Video Transcoding Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of video after transcoding, unit: second.Do not fill in or fill in 0, indicating that the transcoded video continues until the end of the original video.When the value is greater than 0 (assumed to be n), it means that the transcoded video lasts until the nth second of the original video and terminates.When the value is less than 0 (assumed to be -n), it means that the transcoded video lasts until n seconds before the end of the original video.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Opening and ending parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        headTailParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameter>;
        /**
         * Mosaic list, up to 10 sheets can be supported.
         */
        mosaicSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetMosaicSet>[]>;
        /**
         * Rules for the `{number}` variable in the output path after transcoding.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetObjectNumberFormat>;
        /**
         * The output path of the main file after transcoding can be a relative path or an absolute path. If not filled, the default is a relative path: {inputName}_transcode_{definition}.{format}.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the transcoded file, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOutputStorage>;
        /**
         * Video transcoding custom parameters, valid when Definition is not filled with 0.When some transcoding parameters in this structure are filled in, the parameters in the transcoding template will be overwritten with the filled parameters.This parameter is used in highly customized scenarios, it is recommended that you only use Definition to specify transcoding parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        overrideParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameter>;
        /**
         * Video transcoding custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios. It is recommended that you use Definition to specify transcoding parameters first.Note: This field may return null, indicating that no valid value can be obtained.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameter>;
        /**
         * The output path of the transcoded fragment file (the path of ts when transcoding HLS), can only be a relative path. If not filled, the default is: `{inputName}_transcode_{definition}_{number}.{format}.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * The start time offset of the transcoded video, unit: second.Do not fill in or fill in 0, indicating that the transcoded video starts from the beginning of the original video.When the value is greater than 0 (assumed to be n), it means that the transcoded video starts from the nth second position of the original video.When the value is less than 0 (assumed to be -n), it means that the transcoded video starts from the position n seconds before the end of the original video.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.Note: This field may return null, indicating that no valid value can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameter {
        /**
         * Title list.
         */
        headSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet>[]>;
        /**
         * Ending List.
         */
        tailSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetMosaicSet {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the coordinate origin is located in the upper left corner of the video image, and the origin of the mosaic is the upper left corner of the picture or textDefault: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * The end time offset of the mosaic, unit: second.Fill in or fill in 0, indicating that the mosaic continues until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the mosaic lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the mosaic lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * The height of the mosaic. Support %, px two formats.When the string ends with %, it means that the mosaic Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the mosaic Height unit is pixel, such as 100px means that the Height is 100 pixels.Default: 10%.
         */
        height?: pulumi.Input<string>;
        /**
         * The start time offset of the mosaic, unit: second. Do not fill or fill in 0, which means that the mosaic will start to appear when the screen appears.Fill in or fill in 0, which means that the mosaic will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the mosaic appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the mosaic starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * The width of the mosaic. Support %, px two formats:When the string ends with %, it means that the mosaic Width is the percentage size of the video width, such as 10% means that the Width is 10% of the video width.The string ends with px, indicating that the mosaic Width unit is pixels, such as 100px indicates that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameter {
        /**
         * Audio stream configuration parameters.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate>;
        /**
         * Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure audio files.
         */
        container?: pulumi.Input<string>;
        /**
         * Whether to remove audio data, value:0: reserved.1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data, value:0: reserved.1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Subtitle Stream Configuration Parameters.
         */
        subtitleTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate>;
        /**
         * Ultra-fast HD transcoding parameters.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig>;
        /**
         * Video streaming configuration parameters.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec?: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate?: pulumi.Input<number>;
        /**
         * Specifies the audio track to preserve for the output. The default is to keep all sources.
         */
        streamSelects?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate {
        /**
         * Text transparency, value range: (0, 1].0: fully transparent.1: fully opaque.Default: 1.
         */
        fontAlpha?: pulumi.Input<number>;
        /**
         * Font color, format: 0xRRGGBB, default value: 0xFFFFFF (white).
         */
        fontColor?: pulumi.Input<string>;
        /**
         * Font size, format: Npx, N is a value, if not specified, the subtitle file shall prevail.
         */
        fontSize?: pulumi.Input<string>;
        /**
         * Font type.hei.ttf, song.ttf, simkai.ttf, arial.ttf.Default: hei.ttf.
         */
        fontType?: pulumi.Input<string>;
        /**
         * The address of the subtitle file to be compressed into the video.
         */
        path?: pulumi.Input<string>;
        /**
         * Specifies the subtitle track to be compressed into the video. If there is a specified Path, the Path has a higher priority. Path and StreamIndex specify at least one.
         */
        streamIndex?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec?: pulumi.Input<string>;
        /**
         * Content Adaptive Encoding. optional value:0: not open.1: open.Default: 0.When this parameter is turned on, multiple code streams with different resolutions and different bit rates will be adaptively generated. The width and height of the VideoTemplate are the maximum resolutions among the multiple code streams, and the bit rates in the VideoTemplate are multiple code rates. The highest bit rate in the stream, the vcrf in VideoTemplate is the highest quality among multiple bit streams. When the resolution, bit rate and vcrf are not set, the highest resolution generated by the ContentAdaptStream parameter is the resolution of the video source, and the video quality is close to vmaf95. To enable this parameter or learn about billing details, please contact your Tencent Cloud Business.
         */
        contentAdaptStream?: pulumi.Input<number>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched;.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps?: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameter {
        /**
         * Audio stream configuration parameters, when RemoveAudio is 0, this field is required.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate>;
        /**
         * Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure audio files.
         */
        container: pulumi.Input<string>;
        /**
         * Whether to remove audio data, value:0: reserved.1: remove.Default: 0.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data, value:0: reserved.1: remove.Default: 0.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Ultra-fast HD transcoding parameters.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig>;
        /**
         * Video stream configuration parameters, when RemoveVideo is 0, this field is required.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched;.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowTaskNotifyConfig {
        /**
         * CMQ or TDMQ-CMQ model, there are two kinds of Queue and Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * Region of CMQ or TDMQ-CMQ, such as sh, bj, etc.
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * The mode of the workflow notification, the possible values are Finish and Change, leaving blank means Finish.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * Notification type, optional value:CMQ: offline, it is recommended to switch to TDMQ-CMQ.TDMQ-CMQ: message queue.URL: When the URL is specified, the HTTP callback is pushed to the address specified by NotifyUrl, the callback protocol is http+json, and the package body content is the same as the output parameters of the parsing event notification interface.SCF: not recommended, additional configuration of SCF in the console is required.Note: CMQ is the default when not filled or empty, if you need to use other types, you need to fill in the corresponding type value.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback address, required when NotifyType is URL.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * Valid when the model is Queue, indicating the queue name of the CMQ or TDMQ-CMQ that receives the event notification.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Valid when the model is a Topic, indicating the topic name of the CMQ or TDMQ-CMQ that receives event notifications.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface WorkflowTrigger {
        /**
         * Mandatory and valid when Type is CosFileUpload, the rule is triggered for COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosFileUploadTrigger?: pulumi.Input<inputs.Mps.WorkflowTriggerCosFileUploadTrigger>;
        /**
         * The type of trigger, currently only supports CosFileUpload.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowTriggerCosFileUploadTrigger {
        /**
         * The name of the COS Bucket bound to the workflow.
         */
        bucket: pulumi.Input<string>;
        /**
         * The input path directory of the workflow binding must be an absolute path, that is, start and end with `/`.
         */
        dir?: pulumi.Input<string>;
        /**
         * A list of file formats that are allowed to be triggered by the workflow, if not filled in, it means that files of all formats can trigger the workflow.
         */
        formats?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The park to which the COS Bucket bound to the workflow belongs.
         */
        region: pulumi.Input<string>;
    }

}

export namespace Mysql {
    export interface AuditLogFileFilter {
        /**
         * Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of policy.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. support fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Support passing multiple sql statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BackupDownloadRestrictionLimitVpc {
        /**
         * Restrict downloads from regions. Currently only the current region is supported.
         */
        region: pulumi.Input<string>;
        /**
         * List of vpcs to limit downloads.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ParamTemplateParamList {
        /**
         * The value of parameter.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * The name of parameter.
         */
        name?: pulumi.Input<string>;
    }

    export interface PasswordComplexityParamList {
        /**
         * Parameter value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name?: pulumi.Input<string>;
    }

    export interface PrivilegeColumn {
        /**
         * Column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Column privilege.available values for Privileges:SELECT,INSERT,UPDATE,REFERENCES.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface PrivilegeDatabase {
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Database privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PrivilegeTable {
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Table privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW,TRIGGER.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface ProxyProxyNodeCustom {
        /**
         * Number of CPU cores.
         */
        cpu: pulumi.Input<number>;
        /**
         * Memory size.
         */
        mem: pulumi.Input<number>;
        /**
         * Number of nodes.
         */
        nodeCount: pulumi.Input<number>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface RoGroupRoGroupInfo {
        /**
         * The minimum number of reserved instances. It can be set to any value less than or equal to the number of RO instances under this RO group. Note that if the setting value is greater than the number of RO instances, it will not be removed; if it is set to 0, all instances whose latency exceeds the limit will be removed.
         */
        minRoInGroup?: pulumi.Input<number>;
        /**
         * Delayed replication time.
         */
        replicationDelayTime?: pulumi.Input<number>;
        /**
         * RO group name.
         */
        roGroupName?: pulumi.Input<string>;
        /**
         * RO instance maximum latency threshold. The unit is seconds, the minimum value is 1. Note that the RO group must have enabled instance delay culling policy for this value to be valid.
         */
        roMaxDelayTime?: pulumi.Input<number>;
        /**
         * Whether to enable delayed culling of instances. Supported values are: 1 - on; 0 - not on. Note that if you enable instance delay culling, you must set the delay threshold (RoMaxDelayTime) parameter.
         */
        roOfflineDelay?: pulumi.Input<number>;
        /**
         * weight mode. Supported values include: `system` - automatically assigned by the system; `custom` - user-defined settings. Note that if the `custom` mode is set, the RO instance weight configuration (RoWeightValues) parameter must be set.
         */
        weightMode?: pulumi.Input<string>;
    }

    export interface RoGroupRoWeightValue {
        /**
         * RO instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Weights. The value range is [0, 100].
         */
        weight: pulumi.Input<number>;
    }

    export interface RollbackDatabase {
        /**
         * The original database name before rollback.
         */
        databaseName: pulumi.Input<string>;
        /**
         * The new database name after rollback.
         */
        newDatabaseName: pulumi.Input<string>;
    }

    export interface RollbackTable {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Database table details.
         */
        tables: pulumi.Input<pulumi.Input<inputs.Mysql.RollbackTableTable>[]>;
    }

    export interface RollbackTableTable {
        /**
         * New database table name after rollback.
         */
        newTableName: pulumi.Input<string>;
        /**
         * The original database table name before rollback.
         */
        tableName: pulumi.Input<string>;
    }
}

export namespace Nat {
}

export namespace Organization {
    export interface OrgMemberOrgPermission {
        /**
         * Permissions ID.
         */
        id?: pulumi.Input<number>;
        /**
         * Member name.
         */
        name?: pulumi.Input<string>;
    }
}

export namespace Placement {
}

export namespace Postgresql {
    export interface GetBackupDownloadUrlsBackupDownloadRestriction {
        /**
         * Whether IP is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        ipRestrictionEffect?: string;
        /**
         * Whether it is allowed to download IP list of the backup files.
         */
        ipSets?: string[];
        /**
         * Type of the network restrictions for downloading backup files. Valid values: `NONE` (backups can be downloaded over both private and public networks), `INTRANET` (backups can only be downloaded over the private network), `CUSTOMIZE` (backups can be downloaded over specified VPCs or at specified IPs).
         */
        restrictionType?: string;
        /**
         * Whether it is allowed to download the VPC ID list of the backup files.
         */
        vpcIdSets?: string[];
        /**
         * Whether VPC is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        vpcRestrictionEffect?: string;
    }

    export interface GetBackupDownloadUrlsBackupDownloadRestrictionArgs {
        /**
         * Whether IP is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        ipRestrictionEffect?: pulumi.Input<string>;
        /**
         * Whether it is allowed to download IP list of the backup files.
         */
        ipSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Type of the network restrictions for downloading backup files. Valid values: `NONE` (backups can be downloaded over both private and public networks), `INTRANET` (backups can only be downloaded over the private network), `CUSTOMIZE` (backups can be downloaded over specified VPCs or at specified IPs).
         */
        restrictionType?: pulumi.Input<string>;
        /**
         * Whether it is allowed to download the VPC ID list of the backup files.
         */
        vpcIdSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether VPC is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        vpcRestrictionEffect?: pulumi.Input<string>;
    }

    export interface GetBaseBackupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetBaseBackupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetLogBackupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetLogBackupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetParameterTemplatesFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetParameterTemplatesFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetReadonlyGroupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetReadonlyGroupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface InstanceBackupPlan {
        /**
         * List of backup period per week, available values: `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`. NOTE: At least specify two days.
         */
        backupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify days of the retention.
         */
        baseBackupRetentionPeriod?: pulumi.Input<number>;
        /**
         * Specify latest backup start time, format `hh:mm:ss`.
         */
        maxBackupStartTime?: pulumi.Input<string>;
        /**
         * Specify earliest backup start time, format `hh:mm:ss`.
         */
        minBackupStartTime?: pulumi.Input<string>;
    }

    export interface InstanceDbNodeSet {
        /**
         * Indicates node type, available values:`Primary`, `Standby`. Default: `Standby`.
         */
        role?: pulumi.Input<string>;
        /**
         * Indicates the node available zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface ParameterTemplateModifyParamEntrySet {
        /**
         * Modify the parameter value. The input parameters are passed in the form of strings, for example: decimal `0.1`, integer `1000`, enumeration `replica`.
         */
        expectedValue: pulumi.Input<string>;
        /**
         * The parameter name.
         */
        name: pulumi.Input<string>;
    }
}

export namespace PrivateDns {
    export interface ZoneAccountVpcSet {
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * UIN of the VPC account.
         */
        uin: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        uniqVpcId: pulumi.Input<string>;
        /**
         * VPC NAME.
         */
        vpcName: pulumi.Input<string>;
    }

    export interface ZoneTagSet {
        /**
         * Key of Tag.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Value of Tag.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface ZoneVpcSet {
        /**
         * VPC REGION.
         */
        region: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        uniqVpcId: pulumi.Input<string>;
    }
}

export namespace Projects {
}

export namespace Protocol {
}

export namespace Pts {
    export interface FileFileInfo {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobDataset {
        fileId?: pulumi.Input<string>;
        headLines?: pulumi.Input<pulumi.Input<string>[]>;
        headerColumns?: pulumi.Input<pulumi.Input<string>[]>;
        headerInFile: pulumi.Input<boolean>;
        lineCount?: pulumi.Input<number>;
        name: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        split: pulumi.Input<boolean>;
        tailLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobDomainNameConfig {
        dnsConfig?: pulumi.Input<inputs.Pts.JobDomainNameConfigDnsConfig>;
        hostAliases?: pulumi.Input<pulumi.Input<inputs.Pts.JobDomainNameConfigHostAlias>[]>;
    }

    export interface JobDomainNameConfigDnsConfig {
        nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobDomainNameConfigHostAlias {
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        ip?: pulumi.Input<string>;
    }

    export interface JobLoad {
        geoRegionsLoadDistributions?: pulumi.Input<pulumi.Input<inputs.Pts.JobLoadGeoRegionsLoadDistribution>[]>;
        loadSpec?: pulumi.Input<inputs.Pts.JobLoadLoadSpec>;
        vpcLoadDistribution?: pulumi.Input<inputs.Pts.JobLoadVpcLoadDistribution>;
    }

    export interface JobLoadGeoRegionsLoadDistribution {
        percentage?: pulumi.Input<number>;
        region?: pulumi.Input<string>;
        regionId: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpec {
        concurrency?: pulumi.Input<inputs.Pts.JobLoadLoadSpecConcurrency>;
        /**
         * Average number of requests per second.
         */
        requestsPerSecond?: pulumi.Input<inputs.Pts.JobLoadLoadSpecRequestsPerSecond>;
        scriptOrigin?: pulumi.Input<inputs.Pts.JobLoadLoadSpecScriptOrigin>;
    }

    export interface JobLoadLoadSpecConcurrency {
        gracefulStopSeconds?: pulumi.Input<number>;
        iterationCount?: pulumi.Input<number>;
        /**
         * Maximum requests per second.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        stages?: pulumi.Input<pulumi.Input<inputs.Pts.JobLoadLoadSpecConcurrencyStage>[]>;
    }

    export interface JobLoadLoadSpecConcurrencyStage {
        durationSeconds?: pulumi.Input<number>;
        targetVirtualUsers?: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpecRequestsPerSecond {
        durationSeconds?: pulumi.Input<number>;
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Maximum requests per second.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        resources?: pulumi.Input<number>;
        startRequestsPerSecond?: pulumi.Input<number>;
        targetRequestsPerSecond?: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpecScriptOrigin {
        durationSeconds: pulumi.Input<number>;
        machineNumber: pulumi.Input<number>;
        machineSpecification: pulumi.Input<string>;
    }

    export interface JobLoadVpcLoadDistribution {
        region?: pulumi.Input<string>;
        regionId: pulumi.Input<number>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        vpcId?: pulumi.Input<string>;
    }

    export interface JobPlugin {
        fileId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobProtocol {
        fileId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobRequestFile {
        fileId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobTestScript {
        encodedContent?: pulumi.Input<string>;
        encodedHttpArchive?: pulumi.Input<string>;
        loadWeight?: pulumi.Input<number>;
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        updatedAt?: pulumi.Input<string>;
    }

    export interface ProjectTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface ScenarioDataset {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Header data row.
         */
        headLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Parameter name array.
         */
        headerColumns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether the first line is the parameter name.
         */
        headerInFile: pulumi.Input<boolean>;
        /**
         * Number of file lines.
         */
        lineCount?: pulumi.Input<number>;
        /**
         * The file name where the test dataset is located.
         */
        name: pulumi.Input<string>;
        /**
         * Number of file bytes.
         */
        size?: pulumi.Input<number>;
        /**
         * Test whether the dataset is fragmented.
         */
        split: pulumi.Input<boolean>;
        /**
         * Trailing data row.
         */
        tailLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioDomainNameConfig {
        /**
         * DNS configuration.
         */
        dnsConfig?: pulumi.Input<inputs.Pts.ScenarioDomainNameConfigDnsConfig>;
        /**
         * Domain name binding configuration.
         */
        hostAliases?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioDomainNameConfigHostAlias>[]>;
    }

    export interface ScenarioDomainNameConfigDnsConfig {
        /**
         * DNS IP List.
         */
        nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ScenarioDomainNameConfigHostAlias {
        /**
         * List of domain names to be bound.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The IP address to be bound.
         */
        ip?: pulumi.Input<string>;
    }

    export interface ScenarioLoad {
        /**
         * Pressure distribution.
         */
        geoRegionsLoadDistributions?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioLoadGeoRegionsLoadDistribution>[]>;
        /**
         * Pressure allocation.
         */
        loadSpec?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpec>;
        /**
         * Source of stress.
         */
        vpcLoadDistribution?: pulumi.Input<inputs.Pts.ScenarioLoadVpcLoadDistribution>;
    }

    export interface ScenarioLoadGeoRegionsLoadDistribution {
        /**
         * Percentage.
         */
        percentage?: pulumi.Input<number>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpec {
        /**
         * Configuration of concurrent pressure mode.
         */
        concurrency?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecConcurrency>;
        /**
         * Configuration of RPS pressure mode.
         */
        requestsPerSecond?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecRequestsPerSecond>;
        /**
         * Built-in stress mode in script.
         */
        scriptOrigin?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecScriptOrigin>;
    }

    export interface ScenarioLoadLoadSpecConcurrency {
        /**
         * Wait time for graceful termination of the task.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Number of runs.
         */
        iterationCount?: pulumi.Input<number>;
        /**
         * Maximum RPS.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Multi-phase configuration array.
         */
        stages?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecConcurrencyStage>[]>;
    }

    export interface ScenarioLoadLoadSpecConcurrencyStage {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Number of virtual users.
         */
        targetVirtualUsers?: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpecRequestsPerSecond {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Elegant shutdown waiting time.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Maximum RPS.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Number of resources.
         */
        resources?: pulumi.Input<number>;
        /**
         * Initial RPS.
         */
        startRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Target RPS, invalid input parameter.
         */
        targetRequestsPerSecond?: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpecScriptOrigin {
        /**
         * Pressure testing time.
         */
        durationSeconds: pulumi.Input<number>;
        /**
         * Number of machines.
         */
        machineNumber: pulumi.Input<number>;
        /**
         * Machine specification.
         */
        machineSpecification: pulumi.Input<string>;
    }

    export interface ScenarioLoadVpcLoadDistribution {
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
        /**
         * Subnet ID list.
         */
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC ID.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface ScenarioPlugin {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioProtocol {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Protocol name.
         */
        name?: pulumi.Input<string>;
        /**
         * File name.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioRequestFile {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioSlaPolicy {
        /**
         * Alarm notification channel.
         */
        alertChannel?: pulumi.Input<inputs.Pts.ScenarioSlaPolicyAlertChannel>;
        /**
         * SLA rules.
         */
        slaRules?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioSlaPolicySlaRule>[]>;
    }

    export interface ScenarioSlaPolicyAlertChannel {
        /**
         * AMP consumer ID.
         */
        ampConsumerId?: pulumi.Input<string>;
        /**
         * Notification template ID.
         */
        noticeId?: pulumi.Input<string>;
    }

    export interface ScenarioSlaPolicySlaRule {
        /**
         * Whether to stop the stress test task.
         */
        abortFlag?: pulumi.Input<boolean>;
        /**
         * Aggregation method of pressure test index.
         */
        aggregation?: pulumi.Input<string>;
        /**
         * Pressure test index condition judgment symbol.
         */
        condition?: pulumi.Input<string>;
        /**
         * duraion.
         */
        for?: pulumi.Input<string>;
        /**
         * tag.
         */
        labelFilters?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioSlaPolicySlaRuleLabelFilter>[]>;
        /**
         * Pressure test index.
         */
        metric?: pulumi.Input<string>;
        /**
         * Threshold value.
         */
        value?: pulumi.Input<number>;
    }

    export interface ScenarioSlaPolicySlaRuleLabelFilter {
        /**
         * Label name.
         */
        labelName?: pulumi.Input<string>;
        /**
         * Label value.
         */
        labelValue?: pulumi.Input<string>;
    }

    export interface ScenarioTestScript {
        /**
         * Base64 encoded file content.
         */
        encodedContent?: pulumi.Input<string>;
        /**
         * Base64 encoded har structure.
         */
        encodedHttpArchive?: pulumi.Input<string>;
        /**
         * Script weight, range 1-100.
         */
        loadWeight?: pulumi.Input<number>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

}

export namespace Redis {
    export interface BackupDownloadRestrictionLimitVpc {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: pulumi.Input<string>;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetBackupDownloadInfoLimitVpcArgs {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: pulumi.Input<string>;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetBackupDownloadInfoLimitVpc {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: string;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: string[];
    }

    export interface InstanceNodeInfo {
        /**
         * ID of the master or replica node.
         */
        id?: pulumi.Input<number>;
        /**
         * Indicates whether the node is master.
         */
        master?: pulumi.Input<boolean>;
        /**
         * ID of the availability zone of the master or replica node.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface ParamTemplateParamDetail {
        /**
         * Current value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Default value.
         */
        default?: pulumi.Input<string>;
        /**
         * Parameter template description.
         */
        description?: pulumi.Input<string>;
        /**
         * Enum values.
         */
        enumValues?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum value.
         */
        max?: pulumi.Input<string>;
        /**
         * Minimum value.
         */
        min?: pulumi.Input<string>;
        /**
         * Parameter template name.
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates whether to reboot redis instance if modified.
         */
        needReboot?: pulumi.Input<number>;
        /**
         * Parameter type.
         */
        paramType?: pulumi.Input<string>;
    }

    export interface ParamTemplateParamsOverride {
        /**
         * Parameter key e.g. `timeout`, check https://www.tencentcloud.com/document/product/239/39796 for more reference.
         */
        key: pulumi.Input<string>;
        /**
         * Parameter value, check https://www.tencentcloud.com/document/product/239/39796 for more reference.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Reserved {
}

export namespace Rum {
}

export namespace Scf {
    export interface FunctionAliasRoutingConfig {
        /**
         * Additional version with rule-based routing.
         */
        additionalVersionMatches?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionAliasRoutingConfigAdditionalVersionMatch>[]>;
        /**
         * Additional version with random weight-based routing.
         */
        additionalVersionWeights?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionAliasRoutingConfigAdditionalVersionWeight>[]>;
    }

    export interface FunctionAliasRoutingConfigAdditionalVersionMatch {
        /**
         * Rule requirements for range match:It should be described in an open or closed range, i.e., (a,b) or [a,b], where both a and b are integersRule requirements for exact match:Exact string match.
         */
        expression: pulumi.Input<string>;
        /**
         * Matching rule key. When the API is called, pass in the key to route the request to the specified version based on the matching ruleHeader method:Enter invoke.headers.User for key and pass in RoutingKey:{User:value} when invoking a function through invoke for invocation based on rule matching.
         */
        key: pulumi.Input<string>;
        /**
         * Match method. Valid values:range: Range matchexact: exact string match.
         */
        method: pulumi.Input<string>;
        /**
         * Function version name.
         */
        version: pulumi.Input<string>;
    }

    export interface FunctionAliasRoutingConfigAdditionalVersionWeight {
        /**
         * Function version name.
         */
        version: pulumi.Input<string>;
        /**
         * Version weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface FunctionCfsConfig {
        /**
         * File system instance ID.
         */
        cfsId: pulumi.Input<string>;
        ipAddress?: pulumi.Input<string>;
        /**
         * Local mount directory.
         */
        localMountDir: pulumi.Input<string>;
        /**
         * File system mount instance ID.
         */
        mountInsId: pulumi.Input<string>;
        mountSubnetId?: pulumi.Input<string>;
        mountVpcId?: pulumi.Input<string>;
        /**
         * Remote mount directory.
         */
        remoteMountDir: pulumi.Input<string>;
        /**
         * ID of user group.
         */
        userGroupId: pulumi.Input<string>;
        /**
         * ID of user.
         */
        userId: pulumi.Input<string>;
    }

    export interface FunctionEventInvokeConfigAsyncTriggerConfig {
        /**
         * Message retention period.
         */
        msgTtl: pulumi.Input<number>;
        /**
         * Async retry configuration of function upon user error.
         */
        retryConfigs: pulumi.Input<pulumi.Input<inputs.Scf.FunctionEventInvokeConfigAsyncTriggerConfigRetryConfig>[]>;
    }

    export interface FunctionEventInvokeConfigAsyncTriggerConfigRetryConfig {
        /**
         * Number of retry attempts.
         */
        retryNum: pulumi.Input<number>;
    }

    export interface FunctionImageConfig {
        /**
         * the parameters of command.
         */
        args?: pulumi.Input<string>;
        /**
         * The command of entrypoint.
         */
        command?: pulumi.Input<string>;
        /**
         * The entrypoint of app.
         */
        entryPoint?: pulumi.Input<string>;
        /**
         * The image type. personal or enterprise.
         */
        imageType: pulumi.Input<string>;
        /**
         * The uri of image.
         */
        imageUri: pulumi.Input<string>;
        /**
         * The registry id of TCR. When image type is enterprise, it must be set.
         */
        registryId?: pulumi.Input<string>;
    }

    export interface FunctionLayer {
        /**
         * The name of Layer.
         */
        layerName: pulumi.Input<string>;
        /**
         * The version of layer.
         */
        layerVersion: pulumi.Input<number>;
    }

    export interface FunctionTrigger {
        /**
         * Region of cos bucket. if `type` is `cos`, `cosRegion` is required.
         */
        cosRegion?: pulumi.Input<string>;
        /**
         * Name of the SCF function trigger, if `type` is `ckafka`, the format of name must be `<ckafkaInstanceId>-<topicId>`; if `type` is `cos`, the name is cos bucket id, other In any case, it can be combined arbitrarily. It can only contain English letters, numbers, connectors and underscores. The maximum length is 100.
         */
        name: pulumi.Input<string>;
        /**
         * TriggerDesc of the SCF function trigger, parameter format of `timer` is linux cron expression; parameter of `cos` type is json string `{"bucketUrl":"<name-appid>.cos.<region>.myqcloud.com","event":"cos:ObjectCreated:*","filter":{"Prefix":"","Suffix":""}}`, where `bucketUrl` is cos bucket (optional), `event` is the cos event trigger, `Prefix` is the corresponding file prefix filter condition, `Suffix` is the suffix filter condition, if not need filter condition can not pass; `cmq` type does not pass this parameter; `ckafka` type parameter format is json string `{"maxMsgNum":"1","offset":"latest"}`; `apigw` type parameter format is json string `{"api":{"authRequired":"FALSE","requestConfig":{"method":"ANY"},"isIntegratedResponse":"FALSE"},"service":{"serviceId":"service-dqzh68sg"},"release":{"environmentName":"test"}}`.
         */
        triggerDesc: pulumi.Input<string>;
        /**
         * Type of the SCF function trigger, support `cos`, `cmq`, `timer`, `ckafka`, `apigw`.
         */
        type: pulumi.Input<string>;
    }

    export interface FunctionTriggerInfo {
        /**
         * Create time of SCF function trigger.
         */
        createTime?: pulumi.Input<string>;
        /**
         * User-defined parameters of SCF function trigger.
         */
        customArgument?: pulumi.Input<string>;
        /**
         * Whether SCF function trigger is enable.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Modify time of SCF function trigger.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Name of the SCF function. Name supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
         */
        name?: pulumi.Input<string>;
        /**
         * TriggerDesc of the SCF function trigger, parameter format of `timer` is linux cron expression; parameter of `cos` type is json string `{"bucketUrl":"<name-appid>.cos.<region>.myqcloud.com","event":"cos:ObjectCreated:*","filter":{"Prefix":"","Suffix":""}}`, where `bucketUrl` is cos bucket (optional), `event` is the cos event trigger, `Prefix` is the corresponding file prefix filter condition, `Suffix` is the suffix filter condition, if not need filter condition can not pass; `cmq` type does not pass this parameter; `ckafka` type parameter format is json string `{"maxMsgNum":"1","offset":"latest"}`; `apigw` type parameter format is json string `{"api":{"authRequired":"FALSE","requestConfig":{"method":"ANY"},"isIntegratedResponse":"FALSE"},"service":{"serviceId":"service-dqzh68sg"},"release":{"environmentName":"test"}}`.
         */
        triggerDesc?: pulumi.Input<string>;
        /**
         * Type of the SCF function trigger, support `cos`, `cmq`, `timer`, `ckafka`, `apigw`.
         */
        type?: pulumi.Input<string>;
    }

    export interface GetTriggersFilter {
        /**
         * Fields to be filtered. Up to 10 conditions allowed.Values of Name: VpcId, SubnetId, ClsTopicId, ClsLogsetId, Role, CfsId, CfsMountInsId, Eip. Values limit: 1.Name options: Status, Runtime, FunctionType, PublicNetStatus, AsyncRunEnable, TraceEnable. Values limit: 20.When Name is Runtime, CustomImage refers to the image type function.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetTriggersFilterArgs {
        /**
         * Fields to be filtered. Up to 10 conditions allowed.Values of Name: VpcId, SubnetId, ClsTopicId, ClsLogsetId, Role, CfsId, CfsMountInsId, Eip. Values limit: 1.Name options: Status, Runtime, FunctionType, PublicNetStatus, AsyncRunEnable, TraceEnable. Values limit: 20.When Name is Runtime, CustomImage refers to the image type function.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LayerContent {
        /**
         * Cos bucket name of the SCF layer, such as `cos-1234567890`, conflict with `zipFile`.
         */
        cosBucketName?: pulumi.Input<string>;
        /**
         * Cos bucket region of the SCF layer, conflict with `zipFile`.
         */
        cosBucketRegion?: pulumi.Input<string>;
        /**
         * Cos object name of the SCF layer, should have suffix `.zip` or `.jar`, conflict with `zipFile`.
         */
        cosObjectName?: pulumi.Input<string>;
        /**
         * Zip file of the SCF layer, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`.
         */
        zipFile?: pulumi.Input<string>;
    }

    export interface ProvisionedConcurrencyConfigTriggerAction {
        /**
         * The provision type. Value: Default Note: This field may return null, indicating that no valid value can be found.
         */
        provisionedType?: pulumi.Input<string>;
        /**
         * Trigger time of the scheduled action in Cron expression. Seven fields are required and should be separated with a space. Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerCronConfig: pulumi.Input<string>;
        /**
         * Scheduled action name Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerName: pulumi.Input<string>;
        /**
         * Target provisioned concurrency of the scheduled scaling action Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerProvisionedConcurrencyNum: pulumi.Input<number>;
    }
}

export namespace Security {
    export interface GroupRuleAddressTemplate {
        /**
         * Address template group ID, conflicts with `templateId`.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Address template ID, conflicts with `groupId`.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface GroupRuleProtocolTemplate {
        /**
         * Address template group ID, conflicts with `templateId`.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Address template ID, conflicts with `groupId`.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface GroupRuleSetEgress {
        /**
         * Rule policy of security group. Valid values: `ACCEPT` and `DROP`.
         */
        action: pulumi.Input<string>;
        /**
         * Specify Group ID of Address template like `ipmg-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`.
         */
        addressTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Address template ID like `ipm-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`.
         */
        addressTemplateId?: pulumi.Input<string>;
        /**
         * An IP address network or CIDR segment. NOTE: `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` are exclusive and cannot be set in the same time.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the security group rule.
         */
        description?: pulumi.Input<string>;
        /**
         * An IPV6 address network or CIDR segment, and conflict with `sourceSecurityId` and `address_template_*`.
         */
        ipv6CidrBlock?: pulumi.Input<string>;
        /**
         * Range of the port. The available value can be one, multiple or one segment. E.g. `80`, `80,90` and `80-90`. Default to all ports, and conflicts with `service_template_*`.
         */
        port?: pulumi.Input<string>;
        /**
         * Type of IP protocol. Valid values: `TCP`, `UDP` and `ICMP`. Default to all types protocol, and conflicts with `service_template_*`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Specify Group ID of Protocol template ID like `ppmg-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Protocol template ID like `ppm-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateId?: pulumi.Input<string>;
        /**
         * ID of the nested security group, and conflicts with `cidrBlock` and `address_template_*`.
         */
        sourceSecurityId?: pulumi.Input<string>;
    }

    export interface GroupRuleSetIngress {
        /**
         * Rule policy of security group. Valid values: `ACCEPT` and `DROP`.
         */
        action: pulumi.Input<string>;
        /**
         * Specify Group ID of Address template like `ipmg-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`.
         */
        addressTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Address template ID like `ipm-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`.
         */
        addressTemplateId?: pulumi.Input<string>;
        /**
         * An IP address network or CIDR segment. NOTE: `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` are exclusive and cannot be set in the same time.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the security group rule.
         */
        description?: pulumi.Input<string>;
        /**
         * An IPV6 address network or CIDR segment, and conflict with `sourceSecurityId` and `address_template_*`.
         */
        ipv6CidrBlock?: pulumi.Input<string>;
        /**
         * Range of the port. The available value can be one, multiple or one segment. E.g. `80`, `80,90` and `80-90`. Default to all ports, and conflicts with `service_template_*`.
         */
        port?: pulumi.Input<string>;
        /**
         * Type of IP protocol. Valid values: `TCP`, `UDP` and `ICMP`. Default to all types protocol, and conflicts with `service_template_*`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Specify Group ID of Protocol template ID like `ppmg-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Protocol template ID like `ppm-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateId?: pulumi.Input<string>;
        /**
         * ID of the nested security group, and conflicts with `cidrBlock` and `address_template_*`.
         */
        sourceSecurityId?: pulumi.Input<string>;
    }
}

export namespace Ses {
    export interface TemplateTemplateContent {
        /**
         * Html code after base64.
         */
        html?: pulumi.Input<string>;
        /**
         * Text content after base64.
         */
        text?: pulumi.Input<string>;
    }
}

export namespace Sqlserver {
    export interface BusinessIntelligenceInstanceResourceTag {
        /**
         * Tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface ConfigInstanceParamParamList {
        /**
         * Parameter value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name?: pulumi.Input<string>;
    }

    export interface ConfigInstanceRoGroupWeightPair {
        /**
         * Read-only instance ID, in the format: mssqlro-3l3fgqn7.
         */
        readOnlyInstanceId: pulumi.Input<string>;
        /**
         * Read-only instance weight, the range is 0-100.
         */
        readOnlyWeight: pulumi.Input<number>;
    }

    export interface GeneralCloudInstanceResourceTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface MigrationMigrateDbSet {
        /**
         * Name of the migration database.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface MigrationRenameRestore {
        /**
         * When the new name of the library is used for offline migration, if it is not filled in, it will be named according to OldName. OldName and NewName cannot be filled in at the same time. OldName and NewName must be filled in and cannot be duplicate when used for cloning database.
         */
        newName?: pulumi.Input<string>;
        /**
         * The name of the library. If oldName does not exist, a failure is returned.It can be left blank when used for offline migration tasks.
         */
        oldName?: pulumi.Input<string>;
    }

    export interface MigrationSource {
        /**
         * ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
         */
        cvmId?: pulumi.Input<string>;
        /**
         * The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, MigrateType=1 or MigrateType=2.
         */
        password?: pulumi.Input<string>;
        /**
         * The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
         */
        port?: pulumi.Input<number>;
        /**
         * The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The source backup password for offline migration, MigrateType=4 or MigrateType=5.
         */
        urlPassword?: pulumi.Input<string>;
        /**
         * The source backup address for offline migration. MigrateType=4 or MigrateType=5.
         */
        urls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name, MigrateType=1 or MigrateType=2.
         */
        userName?: pulumi.Input<string>;
        /**
         * The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrationTarget {
        /**
         * The ID of the migration target instance, in the format mssql-si2823jyl.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password of the migration target instance.
         */
        password?: pulumi.Input<string>;
        /**
         * User name of the migration target instance.
         */
        userName?: pulumi.Input<string>;
    }

    export interface PublishSubscribeDatabaseTuple {
        /**
         * Publish the database.
         */
        publishDatabase: pulumi.Input<string>;
    }

    export interface RestoreInstanceEncryption {
        /**
         * Database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * encryption, `enable` encrypted, `disable` unencrypted.
         */
        status?: pulumi.Input<string>;
    }

    export interface RestoreInstanceRenameRestore {
        /**
         * New database name. In offline migration, OldName will be used if NewName is left empty (OldName and NewName cannot be both empty). In database cloning, OldName and NewName must be both specified and cannot have the same value.
         */
        newName: pulumi.Input<string>;
        /**
         * Database name. If the OldName database does not exist, a failure will be returned.It can be left empty in offline migration tasks.
         */
        oldName: pulumi.Input<string>;
    }

    export interface RollbackInstanceEncryption {
        /**
         * Database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * encryption, `enable` encrypted, `disable` unencrypted.
         */
        status?: pulumi.Input<string>;
    }

    export interface RollbackInstanceRenameRestore {
        /**
         * New database name.
         */
        newName: pulumi.Input<string>;
        /**
         * Database name. If the OldName database does not exist, a failure will be returned. It can be left empty in offline migration tasks.
         */
        oldName: pulumi.Input<string>;
    }

    export interface StartXeventEventConfig {
        /**
         * Event type. Valid values: slow (set threshold for slow SQL ), blocked (set threshold for the blocking and deadlock).
         */
        eventType: pulumi.Input<string>;
        /**
         * Threshold in milliseconds. Valid values: 0(disable), non-zero (enable).
         */
        threshold: pulumi.Input<number>;
    }

}

export namespace Ssl {
    export interface FreeCertificateDvAuth {
        /**
         * DV authentication key.
         */
        dvAuthKey?: pulumi.Input<string>;
        /**
         * DV authentication value.
         */
        dvAuthValue?: pulumi.Input<string>;
        /**
         * DV authentication type.
         */
        dvAuthVerifyType?: pulumi.Input<string>;
    }

    export interface PayCertificateDvAuth {
        /**
         * DV authentication key.
         */
        dvAuthKey?: pulumi.Input<string>;
        /**
         * DV authentication value.
         */
        dvAuthValue?: pulumi.Input<string>;
        /**
         * DV authentication type.
         */
        dvAuthVerifyType?: pulumi.Input<string>;
    }

    export interface PayCertificateInformation {
        /**
         * The administrator's email address.
         */
        adminEmail: pulumi.Input<string>;
        /**
         * The first name of the administrator.
         */
        adminFirstName: pulumi.Input<string>;
        /**
         * The last name of the administrator.
         */
        adminLastName: pulumi.Input<string>;
        /**
         * Manager mobile phone number.
         */
        adminPhoneNum: pulumi.Input<string>;
        /**
         * Manager position.
         */
        adminPosition: pulumi.Input<string>;
        /**
         * Domain name for binding certificate.
         */
        certificateDomain: pulumi.Input<string>;
        /**
         * Contact email address.
         */
        contactEmail: pulumi.Input<string>;
        /**
         * Contact first name.
         */
        contactFirstName: pulumi.Input<string>;
        /**
         * Contact last name.
         */
        contactLastName: pulumi.Input<string>;
        /**
         * Contact phone number.
         */
        contactNumber: pulumi.Input<string>;
        /**
         * Contact position.
         */
        contactPosition: pulumi.Input<string>;
        /**
         * CSR content uploaded.
         */
        csrContent?: pulumi.Input<string>;
        /**
         * CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
         */
        csrType?: pulumi.Input<string>;
        /**
         * Array of uploaded domain names, multi-domain certificates can be uploaded.
         */
        domainLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private key password.
         */
        keyPassword?: pulumi.Input<string>;
        /**
         * Company address.
         */
        organizationAddress: pulumi.Input<string>;
        /**
         * Company city.
         */
        organizationCity: pulumi.Input<string>;
        /**
         * Country name, such as China: CN.
         */
        organizationCountry: pulumi.Input<string>;
        /**
         * Department name.
         */
        organizationDivision: pulumi.Input<string>;
        /**
         * Company name.
         */
        organizationName: pulumi.Input<string>;
        /**
         * The province where the company is located.
         */
        organizationRegion: pulumi.Input<string>;
        /**
         * Company landline area code.
         */
        phoneAreaCode: pulumi.Input<string>;
        /**
         * Company landline number.
         */
        phoneNumber: pulumi.Input<string>;
        /**
         * Company postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
         */
        verifyType: pulumi.Input<string>;
    }
}

export namespace Ssm {
}

export namespace Tat {
    export interface CommandTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface GetAgentFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetAgentFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInvocationTaskFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetInvocationTaskFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InvokerScheduleSettings {
        /**
         * The next execution time of the invoker. This field is required if Policy is ONCE.
         */
        invokeTime?: pulumi.Input<string>;
        /**
         * Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
         */
        policy: pulumi.Input<string>;
        /**
         * Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
         */
        recurrence?: pulumi.Input<string>;
    }
}

export namespace Tcaplus {
    export interface IdlTableInfo {
        /**
         * Error messages for creating IDL file.
         */
        error?: pulumi.Input<string>;
        /**
         * Index key set of the TcaplusDB table.
         */
        indexKeySet?: pulumi.Input<string>;
        /**
         * Primary key fields of the TcaplusDB table.
         */
        keyFields?: pulumi.Input<string>;
        /**
         * Total size of primary key field of the TcaplusDB table.
         */
        sumKeyFieldSize?: pulumi.Input<number>;
        /**
         * Total size of non-primary key fields of the TcaplusDB table.
         */
        sumValueFieldSize?: pulumi.Input<number>;
        /**
         * Name of the TcaplusDB table.
         */
        tableName?: pulumi.Input<string>;
        /**
         * Non-primary key fields of the TcaplusDB table.
         */
        valueFields?: pulumi.Input<string>;
    }
}

export namespace Tcm {
    export interface AccessLogConfigCls {
        /**
         * Whether enable CLS.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Log set of CLS.
         */
        logSet?: pulumi.Input<string>;
        /**
         * Log topic of CLS.
         */
        topic?: pulumi.Input<string>;
    }

    export interface AccessLogConfigSelectedRange {
        /**
         * Select all if true, default false.
         */
        all?: pulumi.Input<boolean>;
        /**
         * Items.
         */
        items?: pulumi.Input<pulumi.Input<inputs.Tcm.AccessLogConfigSelectedRangeItem>[]>;
    }

    export interface AccessLogConfigSelectedRangeItem {
        /**
         * Ingress gateway list.
         */
        gateways?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentClusterList {
        /**
         * TKE Cluster id.
         */
        clusterId: pulumi.Input<string>;
        /**
         * TKE cluster region.
         */
        region: pulumi.Input<string>;
        /**
         * Cluster role in mesh, REMOTE or MASTER.
         */
        role: pulumi.Input<string>;
        /**
         * Subnet id, only needed if it&#39;s standalone mesh.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        type: pulumi.Input<string>;
        /**
         * Cluster&#39;s VpcId.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface MeshConfig {
        /**
         * Sidecar inject configuration.
         */
        inject?: pulumi.Input<inputs.Tcm.MeshConfigInject>;
        /**
         * Istio configuration.
         */
        istio?: pulumi.Input<inputs.Tcm.MeshConfigIstio>;
        /**
         * Prometheus configuration.
         */
        prometheus?: pulumi.Input<inputs.Tcm.MeshConfigPrometheus>;
        /**
         * Default sidecar requests and limits.
         */
        sidecarResources?: pulumi.Input<inputs.Tcm.MeshConfigSidecarResources>;
        /**
         * Tracing config.
         */
        tracing?: pulumi.Input<inputs.Tcm.MeshConfigTracing>;
    }

    export interface MeshConfigInject {
        /**
         * IP ranges that should not be proxied.
         */
        excludeIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Let istio-proxy(sidecar) start first, before app container.
         */
        holdApplicationUntilProxyStarts?: pulumi.Input<boolean>;
        /**
         * Let istio-proxy(sidecar) stop last, after app container.
         */
        holdProxyUntilApplicationEnds?: pulumi.Input<boolean>;
    }

    export interface MeshConfigIstio {
        /**
         * Disable http retry.
         */
        disableHttpRetry?: pulumi.Input<boolean>;
        /**
         * Disable policy checks.
         */
        disablePolicyChecks?: pulumi.Input<boolean>;
        /**
         * Enable HTTP/1.0 support.
         */
        enablePilotHttp?: pulumi.Input<boolean>;
        /**
         * Outbound traffic policy, REGISTRY_ONLY or ALLOW_ANY, see https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-OutboundTrafficPolicy-Mode.
         */
        outboundTrafficPolicy: pulumi.Input<string>;
        /**
         * SmartDNS configuration.
         */
        smartDns?: pulumi.Input<inputs.Tcm.MeshConfigIstioSmartDns>;
        /**
         * Tracing config(Deprecated, please use MeshConfig.Tracing for configuration).
         */
        tracing?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracing>;
    }

    export interface MeshConfigIstioSmartDns {
        /**
         * Enable auto allocate address.
         */
        istioMetaDnsAutoAllocate?: pulumi.Input<boolean>;
        /**
         * Enable dns proxy.
         */
        istioMetaDnsCapture?: pulumi.Input<boolean>;
    }

    export interface MeshConfigIstioTracing {
        /**
         * APM config.
         */
        apm?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracingApm>;
        /**
         * Whether enable tracing.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Tracing sampling, 0.0-1.0.
         */
        sampling?: pulumi.Input<number>;
        /**
         * Third party zipkin config.
         */
        zipkin?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracingZipkin>;
    }

    export interface MeshConfigIstioTracingApm {
        /**
         * Whether enable APM.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface MeshConfigIstioTracingZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }

    export interface MeshConfigPrometheus {
        /**
         * Custom prometheus.
         */
        customProm?: pulumi.Input<inputs.Tcm.MeshConfigPrometheusCustomProm>;
        /**
         * Instance id.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Subnet id.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MeshConfigPrometheusCustomProm {
        /**
         * Authentication type of the prometheus.
         */
        authType: pulumi.Input<string>;
        /**
         * Whether it is public address, default false.
         */
        isPublicAddr?: pulumi.Input<boolean>;
        /**
         * Password of the prometheus, used in basic authentication type.
         */
        password?: pulumi.Input<string>;
        /**
         * Url of the prometheus.
         */
        url: pulumi.Input<string>;
        /**
         * Username of the prometheus, used in basic authentication type.
         */
        username?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MeshConfigSidecarResources {
        /**
         * Sidecar limits.
         */
        limits?: pulumi.Input<pulumi.Input<inputs.Tcm.MeshConfigSidecarResourcesLimit>[]>;
        /**
         * Sidecar requests.
         */
        requests?: pulumi.Input<pulumi.Input<inputs.Tcm.MeshConfigSidecarResourcesRequest>[]>;
    }

    export interface MeshConfigSidecarResourcesLimit {
        /**
         * Resource type name, `cpu/memory`.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource quantity, example: cpu-`100m`, memory-`1Gi`.
         */
        quantity?: pulumi.Input<string>;
    }

    export interface MeshConfigSidecarResourcesRequest {
        /**
         * Resource type name, `cpu/memory`.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource quantity, example: cpu-`100m`, memory-`1Gi`.
         */
        quantity?: pulumi.Input<string>;
    }

    export interface MeshConfigTracing {
        /**
         * APM config.
         */
        apm?: pulumi.Input<inputs.Tcm.MeshConfigTracingApm>;
        /**
         * Whether enable tracing.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Tracing sampling, 0.0-1.0.
         */
        sampling?: pulumi.Input<number>;
        /**
         * Third party zipkin config.
         */
        zipkin?: pulumi.Input<inputs.Tcm.MeshConfigTracingZipkin>;
    }

    export interface MeshConfigTracingApm {
        /**
         * Whether enable APM.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface MeshConfigTracingZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }

    export interface MeshTagList {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Passthrough to other related product.
         */
        passthrough?: pulumi.Input<boolean>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface PrometheusAttachmentPrometheus {
        /**
         * Third party prometheus.
         */
        customProm?: pulumi.Input<inputs.Tcm.PrometheusAttachmentPrometheusCustomProm>;
        /**
         * Existed TMP id, auto create TMP if empty.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region for TMP.
         */
        region?: pulumi.Input<string>;
        /**
         * Subnet id for TMP.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc id for TMP.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface PrometheusAttachmentPrometheusCustomProm {
        /**
         * Authentication type of the prometheus.
         */
        authType: pulumi.Input<string>;
        /**
         * Whether it is public address, default false.
         */
        isPublicAddr?: pulumi.Input<boolean>;
        /**
         * Password of the prometheus, used in basic authentication type.
         */
        password?: pulumi.Input<string>;
        /**
         * Url of the prometheus.
         */
        url: pulumi.Input<string>;
        /**
         * Username of the prometheus, used in basic authentication type.
         */
        username?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface TracingConfigApm {
        /**
         * Whether enable APM.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface TracingConfigZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }

}

export namespace Tcmq {
    export interface GetQueueFilterArgs {
        /**
         * Filter parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetQueueFilter {
        /**
         * Filter parameter name.
         */
        name?: string;
        /**
         * Value.
         */
        values?: string[];
    }

    export interface GetTopicFilter {
        /**
         * Filter parameter name.
         */
        name?: string;
        /**
         * Value.
         */
        values?: string[];
    }

    export interface GetTopicFilterArgs {
        /**
         * Filter parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Tcr {
    export interface ImmutableTagRuleRule {
        /**
         * disable rule.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<number>;
        nsName?: pulumi.Input<string>;
        /**
         * repository decoration type:repoMatches or repoExcludes.
         */
        repositoryDecoration: pulumi.Input<string>;
        /**
         * repository matching rules.
         */
        repositoryPattern: pulumi.Input<string>;
        /**
         * tag decoration type: matches or excludes.
         */
        tagDecoration: pulumi.Input<string>;
        /**
         * tag matching rules.
         */
        tagPattern: pulumi.Input<string>;
    }

    export interface InstanceReplication {
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<string>;
        /**
         * Replication region ID, check the example at the top of page to find out id of region.
         */
        regionId?: pulumi.Input<number>;
        /**
         * Specify whether to sync TCR cloud tags to COS Bucket. NOTE: You have to specify when adding, modifying will be ignored for now.
         */
        synTag?: pulumi.Input<boolean>;
    }

    export interface InstanceSecurityPolicy {
        /**
         * The public network IP address of the access source.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Remarks of policy.
         */
        description?: pulumi.Input<string>;
        index?: pulumi.Input<number>;
        version?: pulumi.Input<string>;
    }

    export interface ManageReplicationOperationPeerReplicationOption {
        /**
         * whether to enable cross-master account instance synchronization.
         */
        enablePeerReplication: pulumi.Input<boolean>;
        /**
         * access permanent token of the instance to be synchronized.
         */
        peerRegistryToken: pulumi.Input<string>;
        /**
         * uin of the instance to be synchronized.
         */
        peerRegistryUin: pulumi.Input<string>;
    }

    export interface ManageReplicationOperationRule {
        /**
         * target namespace.
         */
        destNamespace: pulumi.Input<string>;
        /**
         * sync filters.
         */
        filters: pulumi.Input<pulumi.Input<inputs.Tcr.ManageReplicationOperationRuleFilter>[]>;
        /**
         * synchronization rule names.
         */
        name: pulumi.Input<string>;
        /**
         * whether to cover.
         */
        override: pulumi.Input<boolean>;
    }

    export interface ManageReplicationOperationRuleFilter {
        /**
         * type (name, tag, and resource).
         */
        type: pulumi.Input<string>;
        /**
         * empty by default.
         */
        value?: pulumi.Input<string>;
    }

    export interface NamespaceCveWhitelistItem {
        /**
         * Vulnerability Whitelist ID.
         */
        cveId?: pulumi.Input<string>;
    }

    export interface ServiceAccountPermission {
        /**
         * Actions, currently only support: tcr:PushRepository, tcr:PullRepository. Note: This field may return null, indicating that no valid value can be obtained.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * resource path, currently only supports Namespace. Note: This field may return null, indicating that no valid value can be obtained.
         */
        resource: pulumi.Input<string>;
    }

    export interface TagRetentionRuleRetentionRule {
        /**
         * The supported policies are latestPushedK (retain the latest `k` pushed versions) and nDaysSinceLastPush (retain pushed versions within the last `n` days).
         */
        key: pulumi.Input<string>;
        /**
         * corresponding values for rule settings.
         */
        value: pulumi.Input<number>;
    }

    export interface WebhookTriggerTrigger {
        /**
         * trigger rule.
         */
        condition: pulumi.Input<string>;
        /**
         * trigger description.
         */
        description?: pulumi.Input<string>;
        /**
         * enable trigger.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * trigger action.
         */
        eventTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<number>;
        /**
         * trigger name.
         */
        name: pulumi.Input<string>;
        /**
         * the namespace Id to which the trigger belongs.
         */
        namespaceId?: pulumi.Input<number>;
        /**
         * trigger target.
         */
        targets: pulumi.Input<pulumi.Input<inputs.Tcr.WebhookTriggerTriggerTarget>[]>;
    }

    export interface WebhookTriggerTriggerTarget {
        /**
         * target address.
         */
        address: pulumi.Input<string>;
        /**
         * custom Headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.Tcr.WebhookTriggerTriggerTargetHeader>[]>;
    }

    export interface WebhookTriggerTriggerTargetHeader {
        /**
         * Header Key.
         */
        key: pulumi.Input<string>;
        /**
         * Header Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Tdcpg {
}

export namespace Tdmq {
    export interface GetProInstancesFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetProInstancesFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPublishersFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPublishersFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetPublishersSortArgs {
        /**
         * sorter.
         */
        name: pulumi.Input<string>;
        /**
         * Ascending ASC, descending DESC.
         */
        order: pulumi.Input<string>;
    }

    export interface GetPublishersSort {
        /**
         * sorter.
         */
        name: string;
        /**
         * Ascending ASC, descending DESC.
         */
        order: string;
    }

    export interface GetRabbitmqNodeListFilterArgs {
        name?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRabbitmqNodeListFilter {
        name?: string;
        values?: string[];
    }

    export interface GetRabbitmqVipInstanceFilterArgs {
        name?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRabbitmqVipInstanceFilter {
        name?: string;
        values?: string[];
    }

    export interface RocketmqClusterVpc {
        /**
         * Subnet ID.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc ID.
         */
        vpcId?: pulumi.Input<string>;
    }

}

export namespace Tem {
    export interface AppConfigConfigData {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface ApplicationServiceService {
        ip?: pulumi.Input<string>;
        /**
         * port mapping item list.
         */
        portMappingItemLists?: pulumi.Input<pulumi.Input<inputs.Tem.ApplicationServiceServicePortMappingItemList>[]>;
        /**
         * application service name.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * ID of subnet instance, required when type is `VPC`.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * application service type: EXTERNAL | VPC | CLUSTER.
         */
        type?: pulumi.Input<string>;
        /**
         * ID of vpc instance, required when type is `VPC`.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface ApplicationServiceServicePortMappingItemList {
        /**
         * container port.
         */
        port?: pulumi.Input<number>;
        /**
         * UDP or TCP.
         */
        protocol?: pulumi.Input<string>;
        /**
         * application listen port.
         */
        targetPort?: pulumi.Input<number>;
    }

    export interface GatewayIngress {
        /**
         * ip version, support IPV4.
         */
        addressIpVersion: pulumi.Input<string>;
        /**
         * related CLB ID, support binding existing clb, does not support modification.
         */
        clbId?: pulumi.Input<string>;
        createTime?: pulumi.Input<string>;
        /**
         * environment ID.
         */
        environmentId: pulumi.Input<string>;
        /**
         * gateway name.
         */
        ingressName: pulumi.Input<string>;
        /**
         * mixing HTTP and HTTPS.
         */
        mixed: pulumi.Input<boolean>;
        /**
         * redirect mode, support AUTO and NONE.
         */
        rewriteType?: pulumi.Input<string>;
        /**
         * proxy rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressRule>[]>;
        /**
         * ingress TLS configurations.
         */
        tls?: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressTl>[]>;
        vip?: pulumi.Input<string>;
    }

    export interface GatewayIngressRule {
        /**
         * host name.
         */
        host?: pulumi.Input<string>;
        /**
         * rule payload.
         */
        http: pulumi.Input<inputs.Tem.GatewayIngressRuleHttp>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface GatewayIngressRuleHttp {
        /**
         * path payload.
         */
        paths: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressRuleHttpPath>[]>;
    }

    export interface GatewayIngressRuleHttpPath {
        /**
         * backend payload.
         */
        backend: pulumi.Input<inputs.Tem.GatewayIngressRuleHttpPathBackend>;
        /**
         * path.
         */
        path: pulumi.Input<string>;
    }

    export interface GatewayIngressRuleHttpPathBackend {
        /**
         * backend name.
         */
        serviceName: pulumi.Input<string>;
        /**
         * backend port.
         */
        servicePort: pulumi.Input<number>;
    }

    export interface GatewayIngressTl {
        /**
         * certificate ID.
         */
        certificateId: pulumi.Input<string>;
        /**
         * host names.
         */
        hosts: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * secret name, if you use a certificate, you don't need to fill in this field.
         */
        secretName?: pulumi.Input<string>;
    }

    export interface ScaleRuleAutoscaler {
        /**
         * name.
         */
        autoscalerName: pulumi.Input<string>;
        /**
         * scaler based on cron configuration.
         */
        cronHorizontalAutoscalers?: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerCronHorizontalAutoscaler>[]>;
        /**
         * description.
         */
        description?: pulumi.Input<string>;
        /**
         * enable AutoScaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * scaler based on metrics.
         */
        horizontalAutoscalers?: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerHorizontalAutoscaler>[]>;
        /**
         * maximal replica number.
         */
        maxReplicas: pulumi.Input<number>;
        /**
         * minimal replica number.
         */
        minReplicas: pulumi.Input<number>;
    }

    export interface ScaleRuleAutoscalerCronHorizontalAutoscaler {
        /**
         * enable scaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * name.
         */
        name: pulumi.Input<string>;
        /**
         * period.
         */
        period: pulumi.Input<string>;
        /**
         * priority.
         */
        priority: pulumi.Input<number>;
        /**
         * schedule payload.
         */
        schedules: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule>[]>;
    }

    export interface ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule {
        /**
         * start time.
         */
        startAt: pulumi.Input<string>;
        /**
         * target replica number.
         */
        targetReplicas: pulumi.Input<number>;
    }

    export interface ScaleRuleAutoscalerHorizontalAutoscaler {
        /**
         * enable scaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * maximal replica number.
         */
        maxReplicas: pulumi.Input<number>;
        /**
         * metric name.
         */
        metrics: pulumi.Input<string>;
        /**
         * minimal replica number.
         */
        minReplicas: pulumi.Input<number>;
        /**
         * metric threshold.
         */
        threshold: pulumi.Input<number>;
    }

    export interface WorkloadDeployStrategyConf {
        /**
         * interval between batches.
         */
        batchInterval?: pulumi.Input<number>;
        /**
         * beta batch number.
         */
        betaBatchNum?: pulumi.Input<number>;
        /**
         * strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
         */
        deployStrategyType: pulumi.Input<number>;
        /**
         * force update.
         */
        force?: pulumi.Input<boolean>;
        /**
         * minimal available instances duration deployment.
         */
        minAvailable?: pulumi.Input<number>;
        /**
         * total batch number.
         */
        totalBatchCount: pulumi.Input<number>;
    }

    export interface WorkloadEnvConf {
        /**
         * referenced config name when type=referenced.
         */
        config?: pulumi.Input<string>;
        /**
         * env key.
         */
        key: pulumi.Input<string>;
        /**
         * referenced secret name when type=referenced.
         */
        secret?: pulumi.Input<string>;
        /**
         * env type, support default, referenced.
         */
        type?: pulumi.Input<string>;
        /**
         * env value.
         */
        value: pulumi.Input<string>;
    }

    export interface WorkloadLiveness {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for liveness check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for liveness check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * liveness check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for liveness check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadReadiness {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for readiness check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for readiness check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * readiness check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for readiness check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadStartupProbe {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for startup check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for startup check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * startup check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for startup check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadStorageConf {
        /**
         * volume ip.
         */
        storageVolIp: pulumi.Input<string>;
        /**
         * volume name.
         */
        storageVolName: pulumi.Input<string>;
        /**
         * volume path.
         */
        storageVolPath: pulumi.Input<string>;
    }

    export interface WorkloadStorageMountConf {
        /**
         * mount path.
         */
        mountPath: pulumi.Input<string>;
        /**
         * volume name.
         */
        volumeName: pulumi.Input<string>;
    }
}

export namespace Teo {
    export interface ApplicationProxyIpv6 {
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRule {
        /**
         * DDoS ACL rule configuration.
         */
        acl?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleAcl>;
        /**
         * DDoS black-white list.
         */
        allowBlock?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleAllowBlock>;
        /**
         * DDoS protocol and connection protection.
         */
        antiPly?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleAntiPly>;
        /**
         * DDoS Protection by Geo Info.
         */
        geoIp?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleGeoIp>;
        /**
         * DDoS feature filtering configuration.
         */
        packetFilter?: pulumi.Input<inputs.Teo.DdosPolicyDdosRulePacketFilter>;
        /**
         * DDoS access origin site speed limit configuration.
         */
        speedLimit?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleSpeedLimit>;
        /**
         * DDoS protection level.
         */
        statusInfo?: pulumi.Input<inputs.Teo.DdosPolicyDdosRuleStatusInfo>;
        /**
         * DDoS protection switch. Valid values:- `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleAcl {
        /**
         * DDoS ACL rule configuration detail.
         */
        acls?: pulumi.Input<pulumi.Input<inputs.Teo.DdosPolicyDdosRuleAclAcl>[]>;
        /**
         * - `on`: Enable. `Acl` parameter is require.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleAclAcl {
        /**
         * Action to take. Valid values: `drop`, `transmit`, `forward`.
         */
        action?: pulumi.Input<string>;
        /**
         * End of the dest port range. Valid value range: 0-65535.
         */
        dportEnd?: pulumi.Input<number>;
        /**
         * Start of the dest port range. Valid value range: 0-65535.
         */
        dportStart?: pulumi.Input<number>;
        /**
         * Valid values: `tcp`, `udp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * End of the source port range. Valid value range: 0-65535.
         */
        sportEnd?: pulumi.Input<number>;
        /**
         * Start of the source port range. Valid value range: 0-65535.
         */
        sportStart?: pulumi.Input<number>;
    }

    export interface DdosPolicyDdosRuleAllowBlock {
        /**
         * DDoS black-white list detail.
         */
        allowBlockIps?: pulumi.Input<pulumi.Input<inputs.Teo.DdosPolicyDdosRuleAllowBlockAllowBlockIp>[]>;
        /**
         * - `on`: Enable. `AllowBlockIps` parameter is required.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleAllowBlockAllowBlockIp {
        /**
         * Valid value format:- ip, for example 1.1.1.1- ip range, for example 1.1.1.2-1.1.1.3- network segment, for example 1.2.1.0/24- network segment range, for example 1.2.1.0/24-1.2.2.0/24.
         */
        ip?: pulumi.Input<string>;
        /**
         * Valid values: `block`, `allow`.
         */
        type: pulumi.Input<string>;
        updateTime?: pulumi.Input<number>;
    }

    export interface DdosPolicyDdosRuleAntiPly {
        /**
         * Abnormal connections threshold. Valid value range: 0-4294967295.
         */
        abnormalConnectNum: pulumi.Input<number>;
        /**
         * Abnormal syn packet number threshold. Valid value range: 0-65535.
         */
        abnormalSynNum: pulumi.Input<number>;
        /**
         * Abnormal syn packet ratio threshold. Valid value range: 0-100.
         */
        abnormalSynRatio: pulumi.Input<number>;
        /**
         * Connection timeout detection per second. Valid value range: 0-65535.
         */
        connectTimeout: pulumi.Input<number>;
        /**
         * Limitation of connections to dest port. Valid value range: 0-4294967295.
         */
        destinationConnectLimit: pulumi.Input<number>;
        /**
         * Limitation of new connection to dest port per second. Valid value range: 0-4294967295.
         */
        destinationCreateLimit: pulumi.Input<number>;
        /**
         * Block ICMP protocol. Valid values: `on`, `off`.
         */
        dropIcmp: pulumi.Input<string>;
        /**
         * Block other protocols. Valid values: `on`, `off`.
         */
        dropOther: pulumi.Input<string>;
        /**
         * Block TCP protocol. Valid values: `on`, `off`.
         */
        dropTcp: pulumi.Input<string>;
        /**
         * Block UDP protocol. Valid values: `on`, `off`.
         */
        dropUdp: pulumi.Input<string>;
        /**
         * Empty connection protection switch. Valid values: `on`, `off`.
         */
        emptyConnectProtect: pulumi.Input<string>;
        /**
         * Limitation of connections to origin site. Valid value range: 0-4294967295.
         */
        sourceConnectLimit: pulumi.Input<number>;
        /**
         * Limitation of new connection to origin site per second. Valid value range: 0-4294967295.
         */
        sourceCreateLimit: pulumi.Input<number>;
        /**
         * UDP shard protection switch. Valid values: `on`, `off`.
         */
        udpShard?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleGeoIp {
        /**
         * Region ID. See details in data source `securityPolicyRegions`.
         */
        regionIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRulePacketFilter {
        /**
         * DDoS feature filtering configuration detail.
         */
        packetFilters?: pulumi.Input<pulumi.Input<inputs.Teo.DdosPolicyDdosRulePacketFilterPacketFilter>[]>;
        /**
         * - `on`: Enable. `PacketFilters` parameter is required.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRulePacketFilterPacketFilter {
        /**
         * Action to take. Valid values: `drop`, `transmit`, `dropBlock`, `forward`.
         */
        action?: pulumi.Input<string>;
        /**
         * Packet character depth to check of feature 1. Valid value range: 1-1500.
         */
        depth?: pulumi.Input<number>;
        /**
         * Packet character depth to check of feature 2. Valid value range: 1-1500.
         */
        depth2?: pulumi.Input<number>;
        /**
         * End of the dest port range. Valid value range: 0-65535.
         */
        dportEnd?: pulumi.Input<number>;
        /**
         * Start of the dest port range. Valid value range: 0-65535.
         */
        dportStart?: pulumi.Input<number>;
        /**
         * Negate the match condition of feature 1. Valid values:- `0`: match.- `1`: not match.
         */
        isNot?: pulumi.Input<number>;
        /**
         * Negate the match condition of feature 2. Valid values:- `0`: match.- `1`: not match.
         */
        isNot2?: pulumi.Input<number>;
        /**
         * Packet layer for matching begin of feature 1. Valid values:- `beginL5`: matching from packet payload.- `beginL4`: matching from TCP/UDP header.- `beginL3`: matching from IP header.
         */
        matchBegin?: pulumi.Input<string>;
        /**
         * Packet layer for matching begin of feature 2. Valid values:- `beginL5`: matching from packet payload.- `beginL4`: matching from TCP/UDP header.- `beginL3`: matching from IP header.
         */
        matchBegin2?: pulumi.Input<string>;
        /**
         * Relation between multi features. Valid values: `and`, `or`, `none` (only feature 1 is used).
         */
        matchLogic?: pulumi.Input<string>;
        /**
         * Match type of feature 1. Valid values:- `pcre`: regex expression.- `sunday`: string match.
         */
        matchType?: pulumi.Input<string>;
        /**
         * Match type of feature 2. Valid values:- `pcre`: regex expression.- `sunday`: string match.
         */
        matchType2?: pulumi.Input<string>;
        /**
         * Offset of feature 1. Valid value range: 1-1500.
         */
        offset?: pulumi.Input<number>;
        /**
         * Offset of feature 2. Valid value range: 1-1500.
         */
        offset2?: pulumi.Input<number>;
        /**
         * Max packet size. Valid value range: 0-1500.
         */
        packetMax?: pulumi.Input<number>;
        /**
         * Min packet size. Valid value range: 0-1500.
         */
        packetMin?: pulumi.Input<number>;
        /**
         * Valid value: `tcp`, `udp`, `icmp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * End of the source port range. Valid value range: 0-65535.
         */
        sportEnd?: pulumi.Input<number>;
        /**
         * Start of the source port range. Valid value range: 0-65535.
         */
        sportStart?: pulumi.Input<number>;
        /**
         * Regex expression or string to match.
         */
        str?: pulumi.Input<string>;
        /**
         * Regex expression or string to match.
         */
        str2?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleSpeedLimit {
        /**
         * Limit the number of fluxes. Valid range: 1 bps-10000 Gbps, 0 means no limitation, supported units: `pps`,`Kpps`,`Mpps`,`Gpps`.
         */
        fluxLimit?: pulumi.Input<string>;
        /**
         * Limit the number of packages. Valid range: 1 pps-10000 Gpps, 0 means no limitation, supported units: `pps`,`Kpps`,`Mpps`,`Gpps`.
         */
        packageLimit?: pulumi.Input<string>;
    }

    export interface DdosPolicyDdosRuleStatusInfo {
        /**
         * Policy level. Valid values:- `low`: loose.- `middle`: moderate.- `high`: strict.
         */
        plyLevel: pulumi.Input<string>;
    }

    export interface DnsSecDnssec {
        algorithm?: pulumi.Input<string>;
        dS?: pulumi.Input<string>;
        digest?: pulumi.Input<string>;
        digestAlgorithm?: pulumi.Input<string>;
        digestType?: pulumi.Input<string>;
        flags?: pulumi.Input<number>;
        keyTag?: pulumi.Input<number>;
        keyType?: pulumi.Input<string>;
        publicKey?: pulumi.Input<string>;
    }

    export interface OriginGroupOriginRecord {
        /**
         * Indicating origin site&#39;s area when `Type` field is `area`. An empty List indicate the default area. Valid value:- Asia, Americas, Europe, Africa or Oceania.- 2 characters ISO 3166 area code.
         */
        areas?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Port of the origin site. Valid value range: 1-65535.
         */
        port: pulumi.Input<number>;
        /**
         * Whether origin site is using private authentication. Only valid when `OriginType` is `thirdParty`.
         */
        private?: pulumi.Input<boolean>;
        /**
         * Parameters for private authentication. Only valid when `Private` is `true`.
         */
        privateParameters?: pulumi.Input<pulumi.Input<inputs.Teo.OriginGroupOriginRecordPrivateParameter>[]>;
        /**
         * Record value, which could be an IPv4/IPv6 address or a domain.
         */
        record: pulumi.Input<string>;
        recordId?: pulumi.Input<string>;
        /**
         * Indicating origin site&#39;s weight when `Type` field is `weight`. Valid value range: 1-100. Sum of all weights should be 100.
         */
        weight?: pulumi.Input<number>;
    }

    export interface OriginGroupOriginRecordPrivateParameter {
        /**
         * Parameter Name. Valid values:- AccessKeyId:Access Key ID.- SecretAccessKey:Secret Access Key.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface RuleEnginePriorityRulesPriority {
        /**
         * Priority order of rules.
         */
        index?: pulumi.Input<number>;
        /**
         * Priority of rules id.
         */
        value?: pulumi.Input<string>;
    }

    export interface RuleEngineRule {
        /**
         * Actions list of the rule. See details in data source `ruleEngineSetting`.
         */
        actions: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleAction>[]>;
        /**
         * OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
         */
        ors: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleOr>[]>;
        /**
         * Actions list of the rule. See details in data source `ruleEngineSetting`.
         */
        subRules?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRule>[]>;
    }

    export interface RuleEngineRuleAction {
        /**
         * Define a code action.
         */
        codeAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionCodeAction>;
        /**
         * Define a normal action.
         */
        normalAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionNormalAction>;
        /**
         * Define a rewrite action.
         */
        rewriteAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionRewriteAction>;
    }

    export interface RuleEngineRuleActionCodeAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionCodeActionParameter>[]>;
    }

    export interface RuleEngineRuleActionCodeActionParameter {
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * HTTP status code to use.
         */
        statusCode: pulumi.Input<number>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleActionNormalAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionNormalActionParameter>[]>;
    }

    export interface RuleEngineRuleActionNormalActionParameter {
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleActionRewriteAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionRewriteActionParameter>[]>;
    }

    export interface RuleEngineRuleActionRewriteActionParameter {
        /**
         * Action to take on the HEADER. Valid values: `add`, `del`, `set`.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleOr {
        /**
         * AND Conditions list of the rule. Rule would be triggered if all conditions are true.
         */
        ands: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleOrAnd>[]>;
    }

    export interface RuleEngineRuleOrAnd {
        /**
         * Whether to ignore the case of the parameter value, the default value is false.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * The parameter name corresponding to the matching type is valid when the Target value is the following, and the valid value cannot be empty: `queryString` (query string): The parameter name of the query string in the URL request under the current site, such as lang and version in lang=cn&version=1; `requestHeader` (HTTP request header): HTTP request header field name, such as Accept-Language in Accept-Language:zh-CN,zh;q=0.9.
         */
        name?: pulumi.Input<string>;
        /**
         * Condition operator. Valid values are `equal`, `notequal`.
         */
        operator: pulumi.Input<string>;
        /**
         * Condition target. Valid values:- `host`: Host of the URL.- `filename`: filename of the URL.- `extension`: file extension of the URL.- `fullUrl`: full url.- `url`: path of the URL.
         */
        target: pulumi.Input<string>;
        /**
         * Condition Value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRule {
        /**
         * Rule items list.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRule>[]>;
        /**
         * rule tag list.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRule {
        /**
         * Actions list of the rule. See details in data source `ruleEngineSetting`.
         */
        actions: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleAction>[]>;
        /**
         * OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
         */
        ors: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleOr>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleAction {
        /**
         * Define a code action.
         */
        codeAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionCodeAction>;
        /**
         * Define a normal action.
         */
        normalAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionNormalAction>;
        /**
         * Define a rewrite action.
         */
        rewriteAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionRewriteAction>;
    }

    export interface RuleEngineRuleSubRuleRuleActionCodeAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionCodeActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionCodeActionParameter {
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * HTTP status code to use.
         */
        statusCode: pulumi.Input<number>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionNormalAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionNormalActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionNormalActionParameter {
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionRewriteAction {
        /**
         * Action name.
         */
        action: pulumi.Input<string>;
        /**
         * Action parameters.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionRewriteActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
        /**
         * Action to take on the HEADER. Valid values: `add`, `del`, `set`.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleOr {
        /**
         * AND Conditions list of the rule. Rule would be triggered if all conditions are true.
         */
        ands: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleOrAnd>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleOrAnd {
        /**
         * Whether to ignore the case of the parameter value, the default value is false.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * The parameter name corresponding to the matching type is valid when the Target value is the following, and the valid value cannot be empty: `queryString` (query string): The parameter name of the query string in the URL request under the current site, such as lang and version in lang=cn&version=1; `requestHeader` (HTTP request header): HTTP request header field name, such as Accept-Language in Accept-Language:zh-CN,zh;q=0.9.
         */
        name?: pulumi.Input<string>;
        /**
         * Condition operator. Valid values are `equal`, `notequal`.
         */
        operator: pulumi.Input<string>;
        /**
         * Condition target. Valid values:- `host`: Host of the URL.- `filename`: filename of the URL.- `extension`: file extension of the URL.- `fullUrl`: full url.- `url`: path of the URL.
         */
        target: pulumi.Input<string>;
        /**
         * Condition Value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SecurityPolicyConfig {
        /**
         * ACL configuration.
         */
        aclConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigAclConfig>;
        /**
         * Bot Configuration.
         */
        botConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigBotConfig>;
        /**
         * Custom drop page configuration.
         */
        dropPageConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigDropPageConfig>;
        /**
         * Exception rule configuration.
         */
        exceptConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigExceptConfig>;
        /**
         * Basic access control.
         */
        ipTableConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigIpTableConfig>;
        /**
         * RateLimit Configuration.
         */
        rateLimitConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfig>;
        /**
         * Main switch of 7-layer security.
         */
        switchConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigSwitchConfig>;
        /**
         * WAF (Web Application Firewall) Configuration.
         */
        wafConfig?: pulumi.Input<inputs.Teo.SecurityPolicyConfigWafConfig>;
    }

    export interface SecurityPolicyConfigAclConfig {
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
        /**
         * Custom configuration.
         */
        userRules?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigAclConfigUserRule>[]>;
    }

    export interface SecurityPolicyConfigAclConfigUserRule {
        /**
         * Valid values: `monitor`, `drop`.
         */
        action: pulumi.Input<string>;
        /**
         * Conditions of the rule.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigAclConfigUserRuleCondition>[]>;
        /**
         * Name of the custom response page.
         */
        name?: pulumi.Input<string>;
        /**
         * ID of the custom response page.
         */
        pageId?: pulumi.Input<number>;
        /**
         * Punish time, Valid value range: 0-2 days.
         */
        punishTime?: pulumi.Input<number>;
        /**
         * Time unit of the punish time. Valid values: `second`, `minutes`, `hour`.
         */
        punishTimeUnit?: pulumi.Input<string>;
        /**
         * Redirect target URL, must be an sub-domain from one of the account&#39;s site.
         */
        redirectUrl?: pulumi.Input<string>;
        /**
         * Response code to use when redirecting.
         */
        responseCode?: pulumi.Input<number>;
        ruleId?: pulumi.Input<number>;
        /**
         * Rule Name.
         */
        ruleName: pulumi.Input<string>;
        /**
         * Priority of the rule. Valid value range: 1-100.
         */
        rulePriority: pulumi.Input<number>;
        /**
         * Status of the rule. Valid values: `on`, `off`, `hour`.
         */
        ruleStatus: pulumi.Input<string>;
        updateTime?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigAclConfigUserRuleCondition {
        /**
         * Content to match.
         */
        matchContent: pulumi.Input<string>;
        /**
         * Items to match. Valid values:- `host`: Host of the request.- `sip`: Client IP.- `ua`: User-Agent.- `cookie`: Session cookie.- `cgi`: CGI script.- `xff`: XFF extension header.- `url`: URL of the request.- `accept`: Accept encoding of the request.- `method`: HTTP method of the request.- `header`: HTTP header of the request.- `sipProto`: Network protocol of the request.
         */
        matchFrom: pulumi.Input<string>;
        /**
         * Parameter for match item. For example, when match from header, match parameter can be set to a header key.
         */
        matchParam: pulumi.Input<string>;
        /**
         * Valid values:- `equal`: string equal.- `notEqual`: string not equal.- `include`: string include.- `notInclude`: string not include.- `match`: ip match.- `notMatch`: ip not match.- `includeArea`: area include.- `isEmpty`: field existed but empty.- `notExists`: field is not existed.- `regexp`: regex match.- `lenGt`: value greater than.- `lenLt`: value less than.- `lenEq`: value equal.- `matchPrefix`: string prefix match.- `matchSuffix`: string suffix match.- `wildcard`: wildcard match.
         */
        operator: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigBotConfig {
        /**
         * Bot intelligent rule configuration.
         */
        intelligenceRule?: pulumi.Input<inputs.Teo.SecurityPolicyConfigBotConfigIntelligenceRule>;
        /**
         * Preset rules.
         */
        managedRule?: pulumi.Input<inputs.Teo.SecurityPolicyConfigBotConfigManagedRule>;
        /**
         * Portrait rule.
         */
        portraitRule?: pulumi.Input<inputs.Teo.SecurityPolicyConfigBotConfigPortraitRule>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigBotConfigIntelligenceRule {
        /**
         * Configuration detail.
         */
        items?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigBotConfigIntelligenceRuleItem>[]>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigBotConfigIntelligenceRuleItem {
        /**
         * Action to take. Valid values: `trans`, `monitor`, `alg`, `captcha`, `drop`.
         */
        action?: pulumi.Input<string>;
        /**
         * Bot label, valid values: `evilBot`, `suspectBot`, `goodBot`, `normal`.
         */
        label?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigBotConfigManagedRule {
        /**
         * Action to take. Valid values: `drop`, `trans`, `monitor`, `alg`.
         */
        action?: pulumi.Input<string>;
        /**
         * Rules to enable when action is `alg`. See details in data source `botManagedRules`.
         */
        algManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `captcha`. See details in data source `botManagedRules`.
         */
        capManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `drop`. See details in data source `botManagedRules`.
         */
        dropManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `monitor`. See details in data source `botManagedRules`.
         */
        monManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Name of the custom response page.
         */
        name?: pulumi.Input<string>;
        /**
         * ID of the custom response page.
         */
        pageId?: pulumi.Input<number>;
        /**
         * Punish time.
         */
        punishTime?: pulumi.Input<number>;
        /**
         * Time unit of the punish time.
         */
        punishTimeUnit?: pulumi.Input<string>;
        /**
         * Redirect target URL, must be an sub-domain from one of the account&#39;s site.
         */
        redirectUrl?: pulumi.Input<string>;
        /**
         * Response code to use when redirecting.
         */
        responseCode?: pulumi.Input<number>;
        ruleId?: pulumi.Input<number>;
        /**
         * Rules to enable when action is `trans`. See details in data source `botManagedRules`.
         */
        transManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface SecurityPolicyConfigBotConfigPortraitRule {
        /**
         * Rules to enable when action is `alg`. See details in data source `botPortraitRules`.
         */
        algManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `captcha`. See details in data source `botPortraitRules`.
         */
        capManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `drop`. See details in data source `botPortraitRules`.
         */
        dropManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Rules to enable when action is `monitor`. See details in data source `botPortraitRules`.
         */
        monManagedIds?: pulumi.Input<pulumi.Input<number>[]>;
        ruleId?: pulumi.Input<number>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigDropPageConfig {
        /**
         * Custom error page of ACL rules.
         */
        aclDropPageDetail?: pulumi.Input<inputs.Teo.SecurityPolicyConfigDropPageConfigAclDropPageDetail>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
        /**
         * Custom error page of WAF rules.
         */
        wafDropPageDetail?: pulumi.Input<inputs.Teo.SecurityPolicyConfigDropPageConfigWafDropPageDetail>;
    }

    export interface SecurityPolicyConfigDropPageConfigAclDropPageDetail {
        /**
         * File name or URL.
         */
        name?: pulumi.Input<string>;
        /**
         * ID of the custom error page. when set to 0, use system default error page.
         */
        pageId?: pulumi.Input<number>;
        /**
         * HTTP status code to use. Valid range: 100-600.
         */
        statusCode?: pulumi.Input<number>;
        /**
         * Type of the custom error page. Valid values: `file`, `url`.
         */
        type?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigDropPageConfigWafDropPageDetail {
        /**
         * File name or URL.
         */
        name?: pulumi.Input<string>;
        /**
         * ID of the custom error page. when set to 0, use system default error page.
         */
        pageId?: pulumi.Input<number>;
        /**
         * HTTP status code to use. Valid range: 100-600.
         */
        statusCode?: pulumi.Input<number>;
        /**
         * Type of the custom error page. Valid values: `file`, `url`.
         */
        type?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigExceptConfig {
        /**
         * Exception rules.
         */
        exceptUserRules?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigExceptConfigExceptUserRule>[]>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigExceptConfigExceptUserRule {
        /**
         * Action to take. Valid values: `skip`.
         */
        action?: pulumi.Input<string>;
        /**
         * Conditions of the rule.
         */
        exceptUserRuleConditions?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigExceptConfigExceptUserRuleExceptUserRuleCondition>[]>;
        /**
         * Scope of the rule in effect.
         */
        exceptUserRuleScope?: pulumi.Input<inputs.Teo.SecurityPolicyConfigExceptConfigExceptUserRuleExceptUserRuleScope>;
        ruleId?: pulumi.Input<number>;
        /**
         * Rule name.
         */
        ruleName?: pulumi.Input<string>;
        /**
         * Priority of the rule. Valid value range: 0-100.
         */
        rulePriority?: pulumi.Input<number>;
        /**
         * Status of the rule. Valid values:- `on`: Enabled.- `off`: Disabled.
         */
        ruleStatus?: pulumi.Input<string>;
        updateTime?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigExceptConfigExceptUserRuleExceptUserRuleCondition {
        /**
         * Content to match.
         */
        matchContent?: pulumi.Input<string>;
        /**
         * Items to match. Valid values:- `host`: Host of the request.- `sip`: Client IP.- `ua`: User-Agent.- `cookie`: Session cookie.- `cgi`: CGI script.- `xff`: XFF extension header.- `url`: URL of the request.- `accept`: Accept encoding of the request.- `method`: HTTP method of the request.- `header`: HTTP header of the request.- `sipProto`: Network protocol of the request.
         */
        matchFrom?: pulumi.Input<string>;
        /**
         * Parameter for match item. For example, when match from header, match parameter can be set to a header key.
         */
        matchParam?: pulumi.Input<string>;
        /**
         * Valid values:- `equal`: string equal.- `notEqual`: string not equal.- `include`: string include.- `notInclude`: string not include.- `match`: ip match.- `notMatch`: ip not match.- `includeArea`: area include.- `isEmpty`: field existed but empty.- `notExists`: field is not existed.- `regexp`: regex match.- `lenGt`: value greater than.- `lenLt`: value less than.- `lenEq`: value equal.- `matchPrefix`: string prefix match.- `matchSuffix`: string suffix match.- `wildcard`: wildcard match.
         */
        operator?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigExceptConfigExceptUserRuleExceptUserRuleScope {
        /**
         * Modules in which the rule take effect. Valid values: `waf`.
         */
        modules?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SecurityPolicyConfigIpTableConfig {
        /**
         * Rules list.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigIpTableConfigRule>[]>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigIpTableConfigRule {
        /**
         * Actions to take. Valid values: `drop`, `trans`, `monitor`.
         */
        action?: pulumi.Input<string>;
        /**
         * Matching content.
         */
        matchContent?: pulumi.Input<string>;
        /**
         * Matching type. Valid values: `ip`, `area`.
         */
        matchFrom?: pulumi.Input<string>;
        ruleId?: pulumi.Input<number>;
        updateTime?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigRateLimitConfig {
        /**
         * Intelligent client filter.
         */
        intelligence?: pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfigIntelligence>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
        /**
         * Default Template. Note: This field may return null, indicating that no valid value can be obtained.
         */
        template?: pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfigTemplate>;
        /**
         * Custom configuration.
         */
        userRules?: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfigUserRule>[]>;
    }

    export interface SecurityPolicyConfigRateLimitConfigIntelligence {
        /**
         * Action to take. Valid values: `monitor`, `alg`.
         */
        action?: pulumi.Input<string>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigRateLimitConfigTemplate {
        /**
         * Detail of the template.
         */
        detail?: pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfigTemplateDetail>;
        /**
         * Template Name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        mode?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigRateLimitConfigTemplateDetail {
        /**
         * Action to take.
         */
        action?: pulumi.Input<string>;
        /**
         * Template ID. Note: This field may return null, indicating that no valid value can be obtained.
         */
        id?: pulumi.Input<number>;
        /**
         * Template Name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        mode?: pulumi.Input<string>;
        /**
         * Period.
         */
        period?: pulumi.Input<number>;
        /**
         * Punish time.
         */
        punishTime?: pulumi.Input<number>;
        /**
         * Threshold.
         */
        threshold?: pulumi.Input<number>;
    }

    export interface SecurityPolicyConfigRateLimitConfigUserRule {
        /**
         * Valid values: `monitor`, `drop`.
         */
        action: pulumi.Input<string>;
        /**
         * Conditions of the rule.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.Teo.SecurityPolicyConfigRateLimitConfigUserRuleCondition>[]>;
        /**
         * Filter words.
         */
        freqFields?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Period of the rate limit. Valid values: 10, 20, 30, 40, 50, 60 (in seconds).
         */
        period: pulumi.Input<number>;
        /**
         * Punish time, Valid value range: 0-2 days.
         */
        punishTime: pulumi.Input<number>;
        /**
         * Time unit of the punish time. Valid values: `second`, `minutes`, `hour`.
         */
        punishTimeUnit: pulumi.Input<string>;
        ruleId?: pulumi.Input<number>;
        /**
         * Rule Name.
         */
        ruleName: pulumi.Input<string>;
        /**
         * Priority of the rule. Valid value range: 1-100.
         */
        rulePriority: pulumi.Input<number>;
        /**
         * Status of the rule. Valid values: `on`, `off`, `hour`.
         */
        ruleStatus?: pulumi.Input<string>;
        /**
         * Threshold of the rate limit. Valid value range: 0-4294967294.
         */
        threshold: pulumi.Input<number>;
        updateTime?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigRateLimitConfigUserRuleCondition {
        /**
         * Content to match.
         */
        matchContent: pulumi.Input<string>;
        /**
         * Items to match. Valid values:- `host`: Host of the request.- `sip`: Client IP.- `ua`: User-Agent.- `cookie`: Session cookie.- `cgi`: CGI script.- `xff`: XFF extension header.- `url`: URL of the request.- `accept`: Accept encoding of the request.- `method`: HTTP method of the request.- `header`: HTTP header of the request.- `sipProto`: Network protocol of the request.
         */
        matchFrom: pulumi.Input<string>;
        /**
         * Parameter for match item. For example, when match from header, match parameter can be set to a header key.
         */
        matchParam: pulumi.Input<string>;
        /**
         * Valid values:- `equal`: string equal.- `notEqual`: string not equal.- `include`: string include.- `notInclude`: string not include.- `match`: ip match.- `notMatch`: ip not match.- `includeArea`: area include.- `isEmpty`: field existed but empty.- `notExists`: field is not existed.- `regexp`: regex match.- `lenGt`: value greater than.- `lenLt`: value less than.- `lenEq`: value equal.- `matchPrefix`: string prefix match.- `matchSuffix`: string suffix match.- `wildcard`: wildcard match.
         */
        operator: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigSwitchConfig {
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        webSwitch?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigWafConfig {
        /**
         * AI based rules configuration.
         */
        aiRule?: pulumi.Input<inputs.Teo.SecurityPolicyConfigWafConfigAiRule>;
        /**
         * Protection level. Valid values: `loose`, `normal`, `strict`, `stricter`, `custom`.
         */
        level: pulumi.Input<string>;
        /**
         * Protection mode. Valid values:- `block`: use block mode globally, you still can set a group of rules to use observe mode.- `observe`: use observe mode globally.
         */
        mode: pulumi.Input<string>;
        /**
         * Whether to enable WAF rules. Valid values:- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
        /**
         * WAF Rules Configuration.
         */
        wafRules: pulumi.Input<inputs.Teo.SecurityPolicyConfigWafConfigWafRules>;
    }

    export interface SecurityPolicyConfigWafConfigAiRule {
        /**
         * Valid values:- `smartStatusClose`: disabled.- `smartStatusOpen`: blocked.- `smartStatusObserve`: observed.
         */
        mode?: pulumi.Input<string>;
    }

    export interface SecurityPolicyConfigWafConfigWafRules {
        /**
         * Block mode rules list. See details in data source `wafManagedRules`.
         */
        blockRuleIds: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Observe rules list. See details in data source `wafManagedRules`.
         */
        observeRuleIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Whether to host the rules&#39; configuration.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneResource {
        /**
         * Valid values: `mainland`, `overseas`.
         */
        area?: pulumi.Input<string>;
        /**
         * Whether to automatically renew. Valid values:- `0`: Default.- `1`: Enable automatic renewal.- `2`: Disable automatic renewal.
         */
        autoRenewFlag?: pulumi.Input<number>;
        /**
         * Resource creation date.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Enable time of the resource.
         */
        enableTime?: pulumi.Input<string>;
        /**
         * Expire time of the resource.
         */
        expireTime?: pulumi.Input<string>;
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource pay mode. Valid values:- `0`: post pay mode.
         */
        payMode?: pulumi.Input<number>;
        /**
         * Associated plan ID.
         */
        planId?: pulumi.Input<string>;
        /**
         * Site status. Valid values:- `active`: NS is switched.- `pending`: NS is not switched.- `moved`: NS is moved.- `deactivated`: this site is blocked.
         */
        status?: pulumi.Input<string>;
        /**
         * Price inquiry parameters.
         */
        svs?: pulumi.Input<pulumi.Input<inputs.Teo.ZoneResourceSv>[]>;
    }

    export interface ZoneResourceSv {
        /**
         * Parameter Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Parameter Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface ZoneSettingCache {
        /**
         * Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cache?: pulumi.Input<inputs.Teo.ZoneSettingCacheCache>;
        /**
         * Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        followOrigin?: pulumi.Input<inputs.Teo.ZoneSettingCacheFollowOrigin>;
        /**
         * No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        noCache?: pulumi.Input<inputs.Teo.ZoneSettingCacheNoCache>;
    }

    export interface ZoneSettingCacheCache {
        /**
         * Cache expiration time settings.Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cacheTime?: pulumi.Input<number>;
        /**
         * Specifies whether to enable force cache.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ignoreCacheControl?: pulumi.Input<string>;
        /**
         * Cache configuration switch.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCacheFollowOrigin {
        /**
         * Specifies whether to follow the origin server configuration.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCacheKey {
        /**
         * Specifies whether to enable full-path cache.- `on`: Enable full-path cache (i.e., disable Ignore Query String).- `off`: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
         */
        queryString?: pulumi.Input<inputs.Teo.ZoneSettingCacheKeyQueryString>;
    }

    export interface ZoneSettingCacheKeyQueryString {
        /**
         * - `includeCustom`: Include the specified query strings.- `excludeCustom`: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch: pulumi.Input<string>;
        /**
         * Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingCacheNoCache {
        /**
         * Whether to cache the configuration.- `on`: Do not cache.- `off`: Cache. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCachePrefresh {
        /**
         * Percentage of cache time before try to prefresh. Valid value range: 1-99.
         */
        percent?: pulumi.Input<number>;
        /**
         * Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingClientIpHeader {
        /**
         * Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
         */
        headerName?: pulumi.Input<string>;
        /**
         * Specifies whether to enable client IP header.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingCompression {
        /**
         * Compression algorithms to select. Valid values: `brotli`, `gzip`.
         */
        algorithms?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable Smart compression.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingForceRedirect {
        /**
         * Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
         */
        redirectStatusCode?: pulumi.Input<number>;
        /**
         * Whether to enable force redirect.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingHttps {
        /**
         * HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        hsts?: pulumi.Input<inputs.Teo.ZoneSettingHttpsHsts>;
        /**
         * HTTP2 configuration switch.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        http2?: pulumi.Input<string>;
        /**
         * OCSP configuration switch.- `on`: Enable.- `off`: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ocspStapling?: pulumi.Input<string>;
        /**
         * TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingHttpsHsts {
        /**
         * Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
         */
        includeSubDomains?: pulumi.Input<string>;
        /**
         * MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxAge?: pulumi.Input<number>;
        /**
         * Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
         */
        preload?: pulumi.Input<string>;
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingIpv6 {
        /**
         * Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingMaxAge {
        /**
         * Specifies whether to follow the max cache age of the origin server.- `on`: Enable.- `off`: Disable.If it&#39;s on, MaxAgeTime is ignored. Note: This field may return null, indicating that no valid value can be obtained.
         */
        followOrigin?: pulumi.Input<string>;
        /**
         * Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxAgeTime?: pulumi.Input<number>;
    }

    export interface ZoneSettingOfflineCache {
        /**
         * Whether to enable offline cache.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingOrigin {
        /**
         * Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
         */
        backupOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether access private cos bucket is allowed when `OriginType` is cos. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosPrivateAccess?: pulumi.Input<string>;
        /**
         * Origin-pull protocol.- `http`: Switch HTTPS requests to HTTP.- `follow`: Follow the protocol of the request.- `https`: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
         */
        originPullProtocol?: pulumi.Input<string>;
        /**
         * Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
         */
        origins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingPostMaxSize {
        /**
         * Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxSize?: pulumi.Input<number>;
        /**
         * Specifies whether to enable custom setting of the maximum file size.- `on`: Enable. You can set a custom max size.- `off`: Disable. In this case, the max size defaults to 32 MB.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingQuic {
        /**
         * Whether to enable QUIC.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingSmartRouting {
        /**
         * Whether to enable HTTP2 origin-pull.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingUpstreamHttp2 {
        /**
         * Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingWebSocket {
        /**
         * Whether to enable custom WebSocket timeout setting. When it&#39;s off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
         */
        switch: pulumi.Input<string>;
        /**
         * Sets timeout period in seconds. Maximum value: 120.
         */
        timeout?: pulumi.Input<number>;
    }

    export interface ZoneVanityNameServers {
        /**
         * List of custom name servers.
         */
        servers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable the custom name server.- `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneVanityNameServersIp {
        /**
         * IPv4 address of the custom name server.
         */
        ipv4?: pulumi.Input<string>;
        /**
         * Name of the custom name server.
         */
        name?: pulumi.Input<string>;
    }
}

export namespace Tse {
    export interface InstanceEngineRegionInfo {
        /**
         * Engine node region.
         */
        engineRegion: pulumi.Input<string>;
        /**
         * The number of nodes allocated in this region.
         */
        replica: pulumi.Input<number>;
        /**
         * Cluster network information.
         */
        vpcInfos: pulumi.Input<pulumi.Input<inputs.Tse.InstanceEngineRegionInfoVpcInfo>[]>;
    }

    export interface InstanceEngineRegionInfoVpcInfo {
        /**
         * Intranet access addressNote: This field may return null, indicating that a valid value is not available..
         */
        intranetAddress?: pulumi.Input<string>;
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Vpc Id.
         */
        vpcId: pulumi.Input<string>;
    }

}

export namespace Tsf {
    export interface ApiGroupBindedGatewayDeployGroup {
        /**
         * application ID.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Application Name.
         */
        applicationName?: pulumi.Input<string>;
        /**
         * Application classification: V: virtual machine application, C: container application.
         */
        applicationType?: pulumi.Input<string>;
        /**
         * Cluster type, C: container, V: virtual machine.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Gateway deployment group ID.
         */
        deployGroupId?: pulumi.Input<string>;
        /**
         * Gateway deployment group name.
         */
        deployGroupName?: pulumi.Input<string>;
        /**
         * Deployment group application status, values: Running, Waiting, Paused, Updating, RollingBack, Abnormal, Unknown.
         */
        groupStatus?: pulumi.Input<string>;
    }

    export interface ApplicationServiceConfigList {
        /**
         * Health check configuration.
         */
        healthCheck?: pulumi.Input<inputs.Tsf.ApplicationServiceConfigListHealthCheck>;
        /**
         * Service name.
         */
        name: pulumi.Input<string>;
        /**
         * List of port information.
         */
        ports: pulumi.Input<pulumi.Input<inputs.Tsf.ApplicationServiceConfigListPort>[]>;
    }

    export interface ApplicationServiceConfigListHealthCheck {
        /**
         * Health check path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ApplicationServiceConfigListPort {
        /**
         * Port protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * Service port.
         */
        targetPort: pulumi.Input<number>;
    }

    export interface ClusterOperationInfo {
        /**
         * Add the control information of the instance button.
         */
        addInstances?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoAddInstance>[]>;
        /**
         * Destroy the control information of the machine.
         */
        destroys?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoDestroy>[]>;
        /**
         * Initialize the control information of the button.
         */
        inits?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoInit>[]>;
    }

    export interface ClusterOperationInfoAddInstance {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface ClusterOperationInfoDestroy {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface ClusterOperationInfoInit {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface DeployContainerGroupAgentProfileList {
        /**
         * Agent type.
         */
        agentType?: pulumi.Input<string>;
        /**
         * Agent version.
         */
        agentVersion?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupEnv {
        /**
         * env param name.
         */
        name: pulumi.Input<string>;
        /**
         * value of env.
         */
        value?: pulumi.Input<string>;
        /**
         * Kubernetes ValueFrom configuration. Note: This field may return null, indicating that no valid values can be obtained.
         */
        valueFrom?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFrom>;
    }

    export interface DeployContainerGroupEnvValueFrom {
        /**
         * The FieldRef configuration of Kubernetes env. Note: This field may return null, indicating that no valid values can be obtained.
         */
        fieldRef?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFromFieldRef>;
        /**
         * The ResourceFieldRef configuration of Kubernetes env. Note: This field may return null, indicating that no valid values can be obtained.
         */
        resourceFieldRef?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFromResourceFieldRef>;
    }

    export interface DeployContainerGroupEnvValueFromFieldRef {
        /**
         * The FieldPath configuration of Kubernetes. Note: This field may return null, indicating that no valid values can be obtained.
         */
        fieldPath?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupEnvValueFromResourceFieldRef {
        /**
         * The Resource configuration of Kubernetes. Note: This field may return null, indicating that no valid values can be obtained.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupHealthCheckSettings {
        /**
         * Liveness probe. Note: This field may return null, indicating that no valid values can be obtained.
         */
        livenessProbe?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettingsLivenessProbe>;
        /**
         * Readiness health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        readinessProbe?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettingsReadinessProbe>;
    }

    export interface DeployContainerGroupHealthCheckSettingsLivenessProbe {
        /**
         * The health check method. HTTP: checks through an HTTP interface; CMD: checks by executing a command; TCP: checks by establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time delay for the container to start the health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupHealthCheckSettingsReadinessProbe {
        /**
         * The health check method. HTTP indicates checking through an HTTP interface, CMD indicates checking through executing a command, and TCP indicates checking through establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time to delay the start of the container health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupSchedulingStrategy {
        /**
         * NONE: Do not use scheduling strategy; CROSS_AZ: Deploy across availability zones. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type: pulumi.Input<string>;
    }

    export interface DeployContainerGroupServiceSetting {
        /**
         * 0: Public network, 1: Access within the cluster, 2: NodePort, 3: Access within VPC. Note: This field may return null, indicating that no valid values can be obtained.
         */
        accessType: pulumi.Input<number>;
        /**
         * When set to true and DisableService is also true, the previously created service will be deleted. Please use with caution. Note: This field may return null, indicating that no valid values can be obtained.
         */
        allowDeleteService?: pulumi.Input<boolean>;
        /**
         * Whether to create a Kubernetes service. The default value is false. Note: This field may return null, indicating that no valid values can be obtained.
         */
        disableService?: pulumi.Input<boolean>;
        /**
         * Whether the service is of headless type. Note: This field may return null, indicating that no valid values can be obtained.
         */
        headlessService?: pulumi.Input<boolean>;
        /**
         * Enable session affinity. true means enabled, false means disabled. The default value is false. Note: This field may return null, indicating that no valid values can be obtained.
         */
        openSessionAffinity?: pulumi.Input<boolean>;
        /**
         * Container port mapping. Note: This field may return null, indicating that no valid values can be obtained.
         */
        protocolPorts: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupServiceSettingProtocolPort>[]>;
        /**
         * Session affinity session time. The default value is 10800. Note: This field may return null, indicating that no valid values can be obtained.
         */
        sessionAffinityTimeoutSeconds?: pulumi.Input<number>;
        /**
         * subnet Id.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface DeployContainerGroupServiceSettingProtocolPort {
        /**
         * node port.
         */
        nodePort?: pulumi.Input<number>;
        /**
         * port.
         */
        port: pulumi.Input<number>;
        /**
         * TCP or UDP.
         */
        protocol: pulumi.Input<string>;
        /**
         * container port.
         */
        targetPort: pulumi.Input<number>;
    }

    export interface DeployContainerGroupVolumeInfoList {
        /**
         * volume config.
         */
        volumeConfig?: pulumi.Input<string>;
        /**
         * volume name.
         */
        volumeName: pulumi.Input<string>;
        /**
         * volume type.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface DeployContainerGroupVolumeMountInfoList {
        /**
         * Read and write access mode. 1: Read-only. 2: Read-write.
         */
        readOrWrite?: pulumi.Input<string>;
        /**
         * mount volume name.
         */
        volumeMountName: pulumi.Input<string>;
        /**
         * mount path.
         */
        volumeMountPath: pulumi.Input<string>;
        /**
         * mount subPath.
         */
        volumeMountSubPath?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupWarmupSetting {
        /**
         * Preheating curvature, with a value between 1 and 5.
         */
        curvature?: pulumi.Input<number>;
        /**
         * Whether to enable preheating.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Whether to enable preheating protection. If protection is enabled and more than 50% of nodes are in preheating state, preheating will be aborted.
         */
        enabledProtection?: pulumi.Input<boolean>;
        /**
         * warmup time.
         */
        warmupTime?: pulumi.Input<number>;
    }

    export interface DeployVmGroupAgentProfileList {
        /**
         * Agent type.
         */
        agentType?: pulumi.Input<string>;
        /**
         * Agent version.
         */
        agentVersion?: pulumi.Input<string>;
    }

    export interface DeployVmGroupHealthCheckSettings {
        /**
         * Survival health check. Note: This field may return null, indicating that no valid value was found.
         */
        livenessProbe?: pulumi.Input<inputs.Tsf.DeployVmGroupHealthCheckSettingsLivenessProbe>;
        /**
         * Readiness health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        readinessProbe?: pulumi.Input<inputs.Tsf.DeployVmGroupHealthCheckSettingsReadinessProbe>;
    }

    export interface DeployVmGroupHealthCheckSettingsLivenessProbe {
        /**
         * Health check method. HTTP: check through HTTP interface; CMD: check through executing command; TCP: check through establishing TCP connection. Note: This field may return null, indicating that no valid value was found.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time delay for the container to start the health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployVmGroupHealthCheckSettingsReadinessProbe {
        /**
         * The health check method. HTTP indicates checking through an HTTP interface, CMD indicates checking through executing a command, and TCP indicates checking through establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time to delay the start of the container health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployVmGroupWarmupSetting {
        /**
         * Preheating curvature, with a value between 1 and 5.
         */
        curvature?: pulumi.Input<number>;
        /**
         * Whether to enable preheating.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Whether to enable preheating protection. If protection is enabled and more than 50% of nodes are in preheating state, preheating will be aborted.
         */
        enabledProtection?: pulumi.Input<boolean>;
        /**
         * warmup time.
         */
        warmupTime?: pulumi.Input<number>;
    }

    export interface InstancesAttachmentInstanceAdvancedSettings {
        /**
         * Dockerd --graph specifies the value, default is /var/lib/docker Note: This field may return null, indicating that no valid values can be obtained.
         */
        dockerGraphPath: pulumi.Input<string>;
        /**
         * Data disk mount point, data disks are not mounted by default. Data disks with formatted ext3, ext4, xfs file systems will be mounted directly, other file systems or unformatted data disks will be automatically formatted as ext4 and mounted. Please back up your data! This setting does not take effect for cloud servers with no data disks or multiple data disks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        mountTarget: pulumi.Input<string>;
    }

    export interface LaneLaneGroupList {
        /**
         * application ID.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * application name.
         */
        applicationName?: pulumi.Input<string>;
        /**
         * cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * creation time.
         */
        createTime?: pulumi.Input<number>;
        /**
         * Whether to enter the application.
         */
        entrance: pulumi.Input<boolean>;
        /**
         * Deployment group ID.
         */
        groupId: pulumi.Input<string>;
        /**
         * deployment group name.
         */
        groupName?: pulumi.Input<string>;
        /**
         * Swimlane deployment group ID.
         */
        laneGroupId?: pulumi.Input<string>;
        /**
         * Lane ID.
         */
        laneId?: pulumi.Input<string>;
        /**
         * Namespace ID.
         */
        namespaceId?: pulumi.Input<string>;
        /**
         * namespace name.
         */
        namespaceName?: pulumi.Input<string>;
        /**
         * update time.
         */
        updateTime?: pulumi.Input<number>;
    }

    export interface LaneRuleRuleTagList {
        /**
         * creation time.
         */
        createTime?: pulumi.Input<number>;
        /**
         * lane rule ID.
         */
        laneRuleId?: pulumi.Input<string>;
        /**
         * label ID.
         */
        tagId?: pulumi.Input<string>;
        /**
         * label name.
         */
        tagName: pulumi.Input<string>;
        /**
         * label operator.
         */
        tagOperator: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
        /**
         * update time.
         */
        updateTime?: pulumi.Input<number>;
    }

    export interface TaskAdvanceSettings {
        /**
         * Subtask single-machine concurrency limit, the default value is 2.
         */
        subTaskConcurrency?: pulumi.Input<number>;
    }

    export interface TaskShardArgument {
        /**
         * Sharding parameter KEY, integer, range [1,1000].
         */
        shardKey: pulumi.Input<number>;
        /**
         * Shard parameter VALUE.
         */
        shardValue: pulumi.Input<string>;
    }

    export interface TaskTaskRule {
        /**
         * Cron type rule, cron expression.
         */
        expression?: pulumi.Input<string>;
        /**
         * time interval, in milliseconds.
         */
        repeatInterval?: pulumi.Input<number>;
        /**
         * trigger rule type, Cron/Repeat.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface UnitRuleUnitRuleItemList {
        /**
         * rule description.
         */
        description?: pulumi.Input<string>;
        /**
         * destination namespace ID.
         */
        destNamespaceId: pulumi.Input<string>;
        /**
         * destination namespace name.
         */
        destNamespaceName: pulumi.Input<string>;
        /**
         * rule item name.
         */
        name: pulumi.Input<string>;
        /**
         * rule order, the smaller the higher the priority: the default is 0.
         */
        priority?: pulumi.Input<number>;
        /**
         * logical relationship: AND/OR.
         */
        relationship: pulumi.Input<string>;
        /**
         * rule item ID.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Unitization rule ID.
         */
        unitRuleId?: pulumi.Input<string>;
        /**
         * list of rule labels.
         */
        unitRuleTagLists?: pulumi.Input<pulumi.Input<inputs.Tsf.UnitRuleUnitRuleItemListUnitRuleTagList>[]>;
    }

    export interface UnitRuleUnitRuleItemListUnitRuleTagList {
        /**
         * rule ID.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * label name.
         */
        tagField: pulumi.Input<string>;
        /**
         * Operator: IN/NOT_IN/EQUAL/NOT_EQUAL/REGEX.
         */
        tagOperator: pulumi.Input<string>;
        /**
         * Tag Type: U(User Tag).
         */
        tagType: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
        /**
         * Unitization rule item ID.
         */
        unitRuleItemId?: pulumi.Input<string>;
    }
}

export namespace Vod {
    export interface AdaptiveDynamicStreamingTemplateStreamInfo {
        /**
         * Audio parameter information.
         */
        audio: pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfoAudio>;
        /**
         * Whether to remove audio stream. Valid values: `false`: no, `true`: yes. `false` by default.
         */
        removeAudio?: pulumi.Input<boolean>;
        /**
         * Video parameter information.
         */
        video: pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfoVideo>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoAudio {
        /**
         * Audio channel system. Valid values: mono, dual, stereo. Default value: dual.
         */
        audioChannel?: pulumi.Input<string>;
        /**
         * Audio stream bitrate in Kbps. Value range: `0` and `[26, 256]`. If the value is `0`, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Audio stream encoder. Valid value are: `libfdkAac` and `libmp3lame`. while `libfdkAac` is recommended.
         */
        codec: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values: `32000`, `44100`, `48000`Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoVideo {
        /**
         * Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Video stream encoder. Valid values: `libx264`,`libx265`,`av1`. `libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Default value: black. Note: this field may return null, indicating that no valid values can be obtained.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
         */
        fps: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        height?: pulumi.Input<number>;
        /**
         * Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Default value: `true`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        resolutionAdaptive?: pulumi.Input<boolean>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        width?: pulumi.Input<number>;
    }

    export interface ProcedureTemplateMediaProcessTask {
        /**
         * List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        adaptiveDynamicStreamingTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList>[]>;
        /**
         * List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        animatedGraphicTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList>[]>;
        /**
         * List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        coverBySnapshotTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList>[]>;
        /**
         * List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        imageSpriteTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskImageSpriteTaskList>[]>;
        /**
         * List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        sampleSnapshotTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList>[]>;
        /**
         * List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        snapshotByTimeOffsetTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList>[]>;
        /**
         * List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        transcodeTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList {
        /**
         * Adaptive bitrate streaming template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList {
        /**
         * Animated image generating template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time of animated image in video in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * Start time of animated image in video in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList {
        /**
         * Time point screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
         */
        positionType: pulumi.Input<string>;
        /**
         * Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
         */
        positionValue: pulumi.Input<number>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskImageSpriteTaskList {
        /**
         * Image sprite generating template ID.
         */
        definition: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList {
        /**
         * Sampled screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList {
        /**
         * Time point screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
         */
        extTimeOffsetLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskList {
        /**
         * Video transcoding template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * List of blurs. Up to 10 ones can be supported.
         */
        mosaicLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList>[]>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList {
        /**
         * Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text. Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px. Default value: `10%`.
         */
        height?: pulumi.Input<string>;
        /**
         * Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px. Default value: `10%`.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px. Default value: `0px`.
         */
        xPos?: pulumi.Input<string>;
        /**
         * Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px. Default value: `0px`.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface SuperPlayerConfigDrmStreamingInfo {
        /**
         * ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
         */
        simpleAesDefinition?: pulumi.Input<string>;
    }

    export interface SuperPlayerConfigResolutionName {
        /**
         * Length of video short side in px.
         */
        minEdgeLength: pulumi.Input<number>;
        /**
         * Display name.
         */
        name: pulumi.Input<string>;
    }

}

export namespace Vpc {
    export interface FlowLogFlowLogStorage {
        /**
         * Specify storage instance id, required while `storageType` is `ckafka`.
         */
        storageId?: pulumi.Input<string>;
        /**
         * Specify storage topic id, required while `storageType` is `ckafka`.
         */
        storageTopic?: pulumi.Input<string>;
    }

    export interface GetClassicLinkInstancesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * The attribute value. If there are multiple Values for one Filter, the logical relation between these Values under the same Filter is `OR`.
         */
        values: string[];
    }

    export interface GetClassicLinkInstancesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * The attribute value. If there are multiple Values for one Filter, the logical relation between these Values under the same Filter is `OR`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCvmInstancesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCvmInstancesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: string[];
    }

    export interface GetNetDetectStatesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetNetDetectStatesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: string[];
    }

    export interface Ipv6EniAddressIpv6Address {
        /**
         * `IPv6` address, in the form of: `3402:4e00:20:100:0:8cd9:2a67:71f3`.
         */
        address: pulumi.Input<string>;
        /**
         * `EIP` instance `ID`, such as:`eip-hxlqja90`.
         */
        addressId?: pulumi.Input<string>;
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether the public network IP is blocked.
         */
        isWanIpBlocked?: pulumi.Input<boolean>;
        /**
         * Whether to master `IP`.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * `IPv6` address status: `PENDING`: pending, `MIGRATING`: migrating, `DELETING`: deleting, `AVAILABLE`: available.
         */
        state?: pulumi.Input<string>;
    }

    export interface Ipv6SubnetCidrBlockIpv6SubnetCidrBlocks {
        /**
         * `IPv6` subnet segment. Such as: `3402:4e00:20:1001::/64`.
         */
        ipv6CidrBlock: pulumi.Input<string>;
        /**
         * Subnet instance `ID`. Such as:`subnet-pxir56ns`.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSet {
        egresses?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclQuintupleNetworkAclQuintupleSetEgress>[]>;
        ingresses?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclQuintupleNetworkAclQuintupleSetIngress>[]>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSetEgress {
        action?: pulumi.Input<string>;
        createTime?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        destinationCidr?: pulumi.Input<string>;
        destinationPort?: pulumi.Input<string>;
        networkAclDirection?: pulumi.Input<string>;
        networkAclQuintupleEntryId?: pulumi.Input<string>;
        priority?: pulumi.Input<number>;
        protocol?: pulumi.Input<string>;
        sourceCidr?: pulumi.Input<string>;
        sourcePort?: pulumi.Input<string>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSetIngress {
        action?: pulumi.Input<string>;
        createTime?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        destinationCidr?: pulumi.Input<string>;
        destinationPort?: pulumi.Input<string>;
        networkAclDirection?: pulumi.Input<string>;
        networkAclQuintupleEntryId?: pulumi.Input<string>;
        priority?: pulumi.Input<number>;
        protocol?: pulumi.Input<string>;
        sourceCidr?: pulumi.Input<string>;
        sourcePort?: pulumi.Input<string>;
    }

    export interface SnapshotPolicyAttachmentInstance {
        /**
         * InstanceId.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance name.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * The region where the instance is located.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * Instance type, currently supports set: `securitygroup`.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Snapshot policy Id.
         */
        snapshotPolicyId?: pulumi.Input<string>;
    }

    export interface SnapshotPolicyBackupPolicy {
        /**
         * Backup cycle time, the value can be monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        backupDay: pulumi.Input<string>;
        /**
         * Backup time point, format:HH:mm:ss.
         */
        backupTime: pulumi.Input<string>;
    }

}

export namespace Vpn {
    export interface ConnectionSecurityGroupPolicy {
        /**
         * Local cidr block.
         */
        localCidrBlock: pulumi.Input<string>;
        /**
         * Remote cidr block list.
         */
        remoteCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CustomerGatewayConfigurationDownloadCustomerGatewayVendor {
        /**
         * Platform.
         */
        platform: pulumi.Input<string>;
        /**
         * SoftwareVersion.
         */
        softwareVersion: pulumi.Input<string>;
        /**
         * VendorName.
         */
        vendorName: pulumi.Input<string>;
    }

}

export namespace config {
}
