// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ckafka connectResource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const connectResource = pulumi.output(tencentcloud.Ckafka.getConnectResource());
 * ```
 */
export function getConnectResource(args?: GetConnectResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectResourceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Ckafka/getConnectResource:getConnectResource", {
        "limit": args.limit,
        "offset": args.offset,
        "resourceRegion": args.resourceRegion,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectResource.
 */
export interface GetConnectResourceArgs {
    /**
     * Return the number, the default is 20, the maximum is 100.
     */
    limit?: number;
    /**
     * Page offset, default is 0.
     */
    offset?: number;
    /**
     * Keyword query of the connection source, query the connection in the connection management list in the local region according to the region (only support the connection source containing the region input).
     */
    resourceRegion?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Keyword for search.
     */
    searchWord?: string;
    /**
     * connection source type.
     */
    type?: string;
}

/**
 * A collection of values returned by getConnectResource.
 */
export interface GetConnectResourceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly offset?: number;
    readonly resourceRegion?: string;
    readonly resultOutputFile?: string;
    /**
     * Connection source list.
     */
    readonly results: outputs.Ckafka.GetConnectResourceResult[];
    readonly searchWord?: string;
    /**
     * Resource type.
     */
    readonly type?: string;
}

export function getConnectResourceOutput(args?: GetConnectResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectResourceResult> {
    return pulumi.output(args).apply(a => getConnectResource(a, opts))
}

/**
 * A collection of arguments for invoking getConnectResource.
 */
export interface GetConnectResourceOutputArgs {
    /**
     * Return the number, the default is 20, the maximum is 100.
     */
    limit?: pulumi.Input<number>;
    /**
     * Page offset, default is 0.
     */
    offset?: pulumi.Input<number>;
    /**
     * Keyword query of the connection source, query the connection in the connection management list in the local region according to the region (only support the connection source containing the region input).
     */
    resourceRegion?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Keyword for search.
     */
    searchWord?: pulumi.Input<string>;
    /**
     * connection source type.
     */
    type?: pulumi.Input<string>;
}
