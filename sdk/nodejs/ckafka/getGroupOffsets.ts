// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ckafka groupOffsets
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const groupOffsets = pulumi.output(tencentcloud.Ckafka.getGroupOffsets({
 *     group: "xxxxxx",
 *     instanceId: "ckafka-xxxxxx",
 * }));
 * ```
 */
export function getGroupOffsets(args: GetGroupOffsetsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupOffsetsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Ckafka/getGroupOffsets:getGroupOffsets", {
        "group": args.group,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
        "topics": args.topics,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupOffsets.
 */
export interface GetGroupOffsetsArgs {
    /**
     * Kafka consumer group name.
     */
    group: string;
    /**
     * InstanceId.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * fuzzy match topicName.
     */
    searchWord?: string;
    /**
     * An array of topic names subscribed by the group, if there is no such array, it means all topic information under the specified group.
     */
    topics?: string[];
}

/**
 * A collection of values returned by getGroupOffsets.
 */
export interface GetGroupOffsetsResult {
    readonly group: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly resultOutputFile?: string;
    readonly searchWord?: string;
    /**
     * The topic array, where each element is a json object.
     */
    readonly topicLists: outputs.Ckafka.GetGroupOffsetsTopicList[];
    readonly topics?: string[];
}

export function getGroupOffsetsOutput(args: GetGroupOffsetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupOffsetsResult> {
    return pulumi.output(args).apply(a => getGroupOffsets(a, opts))
}

/**
 * A collection of arguments for invoking getGroupOffsets.
 */
export interface GetGroupOffsetsOutputArgs {
    /**
     * Kafka consumer group name.
     */
    group: pulumi.Input<string>;
    /**
     * InstanceId.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * fuzzy match topicName.
     */
    searchWord?: pulumi.Input<string>;
    /**
     * An array of topic names subscribed by the group, if there is no such array, it means all topic information under the specified group.
     */
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}
