// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of apigateway plugin
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const exampleService = new tencentcloud.apigateway.Service("exampleService", {
 *     serviceName: "tf_example",
 *     protocol: "http&https",
 *     serviceDesc: "desc.",
 *     netTypes: [
 *         "INNER",
 *         "OUTER",
 *     ],
 *     ipVersion: "IPv4",
 *     tags: {
 *         testKey: "testValue",
 *     },
 *     releaseLimit: 500,
 *     preLimit: 500,
 *     testLimit: 500,
 * });
 * const exampleApi = new tencentcloud.apigateway.Api("exampleApi", {
 *     serviceId: exampleService.id,
 *     apiName: "hello",
 *     apiDesc: "my hello api",
 *     authType: "NONE",
 *     protocol: "HTTP",
 *     enableCors: true,
 *     requestConfigPath: "/user/info",
 *     requestConfigMethod: "GET",
 *     requestParameters: [{
 *         name: "name",
 *         position: "QUERY",
 *         type: "string",
 *         desc: "who are you?",
 *         defaultValue: "tom",
 *         required: true,
 *     }],
 *     serviceConfigType: "HTTP",
 *     serviceConfigTimeout: 15,
 *     serviceConfigUrl: "http://www.qq.com",
 *     serviceConfigPath: "/user",
 *     serviceConfigMethod: "GET",
 *     responseType: "HTML",
 *     responseSuccessExample: "success",
 *     responseFailExample: "fail",
 *     responseErrorCodes: [{
 *         code: 500,
 *         msg: "system error",
 *         desc: "system error code",
 *         convertedCode: 5000,
 *         needConvert: true,
 *     }],
 * });
 * const exampleServiceRelease = new tencentcloud.apigateway.ServiceRelease("exampleServiceRelease", {
 *     serviceId: exampleApi.serviceId,
 *     environmentName: "release",
 *     releaseDesc: "desc.",
 * });
 * const examplePlugin = new tencentcloud.apigateway.Plugin("examplePlugin", {
 *     pluginName: "tf-example",
 *     pluginType: "IPControl",
 *     pluginData: JSON.stringify({
 *         type: "white_list",
 *         blocks: "1.1.1.1",
 *     }),
 *     description: "desc.",
 * });
 * const examplePlugins = tencentcloud.ApiGateway.getPluginsOutput({
 *     serviceId: exampleServiceRelease.serviceId,
 *     pluginId: examplePlugin.id,
 *     environmentName: "release",
 * });
 * ```
 */
export function getPlugins(args: GetPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetPluginsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:ApiGateway/getPlugins:getPlugins", {
        "environmentName": args.environmentName,
        "pluginId": args.pluginId,
        "resultOutputFile": args.resultOutputFile,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsArgs {
    /**
     * Environmental information.
     */
    environmentName: string;
    /**
     * The plugin ID to query.
     */
    pluginId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * The service ID to query.
     */
    serviceId: string;
}

/**
 * A collection of values returned by getPlugins.
 */
export interface GetPluginsResult {
    readonly environmentName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pluginId: string;
    readonly resultOutputFile?: string;
    /**
     * List of plugin related APIs.
     */
    readonly results: outputs.ApiGateway.GetPluginsResult[];
    readonly serviceId: string;
}

export function getPluginsOutput(args: GetPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPluginsResult> {
    return pulumi.output(args).apply(a => getPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsOutputArgs {
    /**
     * Environmental information.
     */
    environmentName: pulumi.Input<string>;
    /**
     * The plugin ID to query.
     */
    pluginId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * The service ID to query.
     */
    serviceId: pulumi.Input<string>;
}
