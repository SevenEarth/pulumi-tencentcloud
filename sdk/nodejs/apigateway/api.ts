// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export class API extends pulumi.CustomResource {
    /**
     * Get an existing API resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: APIState, opts?: pulumi.CustomResourceOptions): API {
        return new API(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:APIGateway/aPI:API';

    /**
     * Returns true if the given object is an instance of API.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is API {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === API.__pulumiType;
    }

    /**
     * Custom API description.
     */
    public readonly apiDesc!: pulumi.Output<string | undefined>;
    /**
     * Custom API name.
     */
    public readonly apiName!: pulumi.Output<string>;
    /**
     * API authentication type. Valid values: `SECRET` (key pair authentication),`NONE` (no authentication). Default value:
     * `NONE`.
     */
    public readonly authType!: pulumi.Output<string | undefined>;
    /**
     * Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Whether to enable CORS. Default value: `true`.
     */
    public readonly enableCors!: pulumi.Output<boolean | undefined>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    public readonly preLimit!: pulumi.Output<number>;
    /**
     * API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    public readonly releaseLimit!: pulumi.Output<number>;
    /**
     * Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
     */
    public readonly requestConfigMethod!: pulumi.Output<string | undefined>;
    /**
     * Request frontend path configuration. Like `/user/getinfo`.
     */
    public readonly requestConfigPath!: pulumi.Output<string>;
    /**
     * Frontend request parameters.
     */
    public readonly requestParameters!: pulumi.Output<outputs.APIGateway.APIRequestParameter[] | undefined>;
    /**
     * Custom error code configuration. Must keep at least one after set.
     */
    public readonly responseErrorCodes!: pulumi.Output<outputs.APIGateway.APIResponseErrorCode[] | undefined>;
    /**
     * Response failure sample of custom response configuration.
     */
    public readonly responseFailExample!: pulumi.Output<string | undefined>;
    /**
     * Successful response sample of custom response configuration.
     */
    public readonly responseSuccessExample!: pulumi.Output<string | undefined>;
    /**
     * Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
     */
    public readonly responseType!: pulumi.Output<string>;
    /**
     * API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required.
     * The frontend `request_config_method` and backend method `service_config_method` can be different.
     */
    public readonly serviceConfigMethod!: pulumi.Output<string | undefined>;
    /**
     * Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
     */
    public readonly serviceConfigMockReturnMessage!: pulumi.Output<string | undefined>;
    /**
     * API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The
     * frontend `request_config_path` and backend path `service_config_path` can be different.
     */
    public readonly serviceConfigPath!: pulumi.Output<string | undefined>;
    /**
     * Backend type. This parameter takes effect when VPC is enabled. Currently, only `clb` is supported.
     */
    public readonly serviceConfigProduct!: pulumi.Output<string | undefined>;
    /**
     * SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
     */
    public readonly serviceConfigScfFunctionName!: pulumi.Output<string | undefined>;
    /**
     * SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
     */
    public readonly serviceConfigScfFunctionNamespace!: pulumi.Output<string | undefined>;
    /**
     * SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
     */
    public readonly serviceConfigScfFunctionQualifier!: pulumi.Output<string | undefined>;
    /**
     * API backend service timeout period in seconds. Default value: `5`.
     */
    public readonly serviceConfigTimeout!: pulumi.Output<number | undefined>;
    /**
     * API backend service type. Valid values: `WEBSOCKET`, `HTTP`, `SCF`, `MOCK`. Default value: `HTTP`.
     */
    public readonly serviceConfigType!: pulumi.Output<string | undefined>;
    /**
     * API backend service url. This parameter is required when `service_config_type` is `HTTP`.
     */
    public readonly serviceConfigUrl!: pulumi.Output<string | undefined>;
    /**
     * Unique VPC ID.
     */
    public readonly serviceConfigVpcId!: pulumi.Output<string | undefined>;
    /**
     * Which service this API belongs. Refer to resource `tencentcloud_api_gateway_service`.
     */
    public readonly serviceId!: pulumi.Output<string>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    public readonly testLimit!: pulumi.Output<number>;
    /**
     * Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a API resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: APIArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: APIArgs | APIState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as APIState | undefined;
            resourceInputs["apiDesc"] = state ? state.apiDesc : undefined;
            resourceInputs["apiName"] = state ? state.apiName : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["enableCors"] = state ? state.enableCors : undefined;
            resourceInputs["preLimit"] = state ? state.preLimit : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["releaseLimit"] = state ? state.releaseLimit : undefined;
            resourceInputs["requestConfigMethod"] = state ? state.requestConfigMethod : undefined;
            resourceInputs["requestConfigPath"] = state ? state.requestConfigPath : undefined;
            resourceInputs["requestParameters"] = state ? state.requestParameters : undefined;
            resourceInputs["responseErrorCodes"] = state ? state.responseErrorCodes : undefined;
            resourceInputs["responseFailExample"] = state ? state.responseFailExample : undefined;
            resourceInputs["responseSuccessExample"] = state ? state.responseSuccessExample : undefined;
            resourceInputs["responseType"] = state ? state.responseType : undefined;
            resourceInputs["serviceConfigMethod"] = state ? state.serviceConfigMethod : undefined;
            resourceInputs["serviceConfigMockReturnMessage"] = state ? state.serviceConfigMockReturnMessage : undefined;
            resourceInputs["serviceConfigPath"] = state ? state.serviceConfigPath : undefined;
            resourceInputs["serviceConfigProduct"] = state ? state.serviceConfigProduct : undefined;
            resourceInputs["serviceConfigScfFunctionName"] = state ? state.serviceConfigScfFunctionName : undefined;
            resourceInputs["serviceConfigScfFunctionNamespace"] = state ? state.serviceConfigScfFunctionNamespace : undefined;
            resourceInputs["serviceConfigScfFunctionQualifier"] = state ? state.serviceConfigScfFunctionQualifier : undefined;
            resourceInputs["serviceConfigTimeout"] = state ? state.serviceConfigTimeout : undefined;
            resourceInputs["serviceConfigType"] = state ? state.serviceConfigType : undefined;
            resourceInputs["serviceConfigUrl"] = state ? state.serviceConfigUrl : undefined;
            resourceInputs["serviceConfigVpcId"] = state ? state.serviceConfigVpcId : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["testLimit"] = state ? state.testLimit : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as APIArgs | undefined;
            if ((!args || args.apiName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiName'");
            }
            if ((!args || args.requestConfigPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestConfigPath'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["apiDesc"] = args ? args.apiDesc : undefined;
            resourceInputs["apiName"] = args ? args.apiName : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["enableCors"] = args ? args.enableCors : undefined;
            resourceInputs["preLimit"] = args ? args.preLimit : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["releaseLimit"] = args ? args.releaseLimit : undefined;
            resourceInputs["requestConfigMethod"] = args ? args.requestConfigMethod : undefined;
            resourceInputs["requestConfigPath"] = args ? args.requestConfigPath : undefined;
            resourceInputs["requestParameters"] = args ? args.requestParameters : undefined;
            resourceInputs["responseErrorCodes"] = args ? args.responseErrorCodes : undefined;
            resourceInputs["responseFailExample"] = args ? args.responseFailExample : undefined;
            resourceInputs["responseSuccessExample"] = args ? args.responseSuccessExample : undefined;
            resourceInputs["responseType"] = args ? args.responseType : undefined;
            resourceInputs["serviceConfigMethod"] = args ? args.serviceConfigMethod : undefined;
            resourceInputs["serviceConfigMockReturnMessage"] = args ? args.serviceConfigMockReturnMessage : undefined;
            resourceInputs["serviceConfigPath"] = args ? args.serviceConfigPath : undefined;
            resourceInputs["serviceConfigProduct"] = args ? args.serviceConfigProduct : undefined;
            resourceInputs["serviceConfigScfFunctionName"] = args ? args.serviceConfigScfFunctionName : undefined;
            resourceInputs["serviceConfigScfFunctionNamespace"] = args ? args.serviceConfigScfFunctionNamespace : undefined;
            resourceInputs["serviceConfigScfFunctionQualifier"] = args ? args.serviceConfigScfFunctionQualifier : undefined;
            resourceInputs["serviceConfigTimeout"] = args ? args.serviceConfigTimeout : undefined;
            resourceInputs["serviceConfigType"] = args ? args.serviceConfigType : undefined;
            resourceInputs["serviceConfigUrl"] = args ? args.serviceConfigUrl : undefined;
            resourceInputs["serviceConfigVpcId"] = args ? args.serviceConfigVpcId : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["testLimit"] = args ? args.testLimit : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(API.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering API resources.
 */
export interface APIState {
    /**
     * Custom API description.
     */
    apiDesc?: pulumi.Input<string>;
    /**
     * Custom API name.
     */
    apiName?: pulumi.Input<string>;
    /**
     * API authentication type. Valid values: `SECRET` (key pair authentication),`NONE` (no authentication). Default value:
     * `NONE`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Whether to enable CORS. Default value: `true`.
     */
    enableCors?: pulumi.Input<boolean>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    preLimit?: pulumi.Input<number>;
    /**
     * API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    releaseLimit?: pulumi.Input<number>;
    /**
     * Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
     */
    requestConfigMethod?: pulumi.Input<string>;
    /**
     * Request frontend path configuration. Like `/user/getinfo`.
     */
    requestConfigPath?: pulumi.Input<string>;
    /**
     * Frontend request parameters.
     */
    requestParameters?: pulumi.Input<pulumi.Input<inputs.APIGateway.APIRequestParameter>[]>;
    /**
     * Custom error code configuration. Must keep at least one after set.
     */
    responseErrorCodes?: pulumi.Input<pulumi.Input<inputs.APIGateway.APIResponseErrorCode>[]>;
    /**
     * Response failure sample of custom response configuration.
     */
    responseFailExample?: pulumi.Input<string>;
    /**
     * Successful response sample of custom response configuration.
     */
    responseSuccessExample?: pulumi.Input<string>;
    /**
     * Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
     */
    responseType?: pulumi.Input<string>;
    /**
     * API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required.
     * The frontend `request_config_method` and backend method `service_config_method` can be different.
     */
    serviceConfigMethod?: pulumi.Input<string>;
    /**
     * Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
     */
    serviceConfigMockReturnMessage?: pulumi.Input<string>;
    /**
     * API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The
     * frontend `request_config_path` and backend path `service_config_path` can be different.
     */
    serviceConfigPath?: pulumi.Input<string>;
    /**
     * Backend type. This parameter takes effect when VPC is enabled. Currently, only `clb` is supported.
     */
    serviceConfigProduct?: pulumi.Input<string>;
    /**
     * SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionName?: pulumi.Input<string>;
    /**
     * SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionNamespace?: pulumi.Input<string>;
    /**
     * SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionQualifier?: pulumi.Input<string>;
    /**
     * API backend service timeout period in seconds. Default value: `5`.
     */
    serviceConfigTimeout?: pulumi.Input<number>;
    /**
     * API backend service type. Valid values: `WEBSOCKET`, `HTTP`, `SCF`, `MOCK`. Default value: `HTTP`.
     */
    serviceConfigType?: pulumi.Input<string>;
    /**
     * API backend service url. This parameter is required when `service_config_type` is `HTTP`.
     */
    serviceConfigUrl?: pulumi.Input<string>;
    /**
     * Unique VPC ID.
     */
    serviceConfigVpcId?: pulumi.Input<string>;
    /**
     * Which service this API belongs. Refer to resource `tencentcloud_api_gateway_service`.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    testLimit?: pulumi.Input<number>;
    /**
     * Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a API resource.
 */
export interface APIArgs {
    /**
     * Custom API description.
     */
    apiDesc?: pulumi.Input<string>;
    /**
     * Custom API name.
     */
    apiName: pulumi.Input<string>;
    /**
     * API authentication type. Valid values: `SECRET` (key pair authentication),`NONE` (no authentication). Default value:
     * `NONE`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Whether to enable CORS. Default value: `true`.
     */
    enableCors?: pulumi.Input<boolean>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    preLimit?: pulumi.Input<number>;
    /**
     * API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    releaseLimit?: pulumi.Input<number>;
    /**
     * Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
     */
    requestConfigMethod?: pulumi.Input<string>;
    /**
     * Request frontend path configuration. Like `/user/getinfo`.
     */
    requestConfigPath: pulumi.Input<string>;
    /**
     * Frontend request parameters.
     */
    requestParameters?: pulumi.Input<pulumi.Input<inputs.APIGateway.APIRequestParameter>[]>;
    /**
     * Custom error code configuration. Must keep at least one after set.
     */
    responseErrorCodes?: pulumi.Input<pulumi.Input<inputs.APIGateway.APIResponseErrorCode>[]>;
    /**
     * Response failure sample of custom response configuration.
     */
    responseFailExample?: pulumi.Input<string>;
    /**
     * Successful response sample of custom response configuration.
     */
    responseSuccessExample?: pulumi.Input<string>;
    /**
     * Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
     */
    responseType?: pulumi.Input<string>;
    /**
     * API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required.
     * The frontend `request_config_method` and backend method `service_config_method` can be different.
     */
    serviceConfigMethod?: pulumi.Input<string>;
    /**
     * Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
     */
    serviceConfigMockReturnMessage?: pulumi.Input<string>;
    /**
     * API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The
     * frontend `request_config_path` and backend path `service_config_path` can be different.
     */
    serviceConfigPath?: pulumi.Input<string>;
    /**
     * Backend type. This parameter takes effect when VPC is enabled. Currently, only `clb` is supported.
     */
    serviceConfigProduct?: pulumi.Input<string>;
    /**
     * SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionName?: pulumi.Input<string>;
    /**
     * SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionNamespace?: pulumi.Input<string>;
    /**
     * SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
     */
    serviceConfigScfFunctionQualifier?: pulumi.Input<string>;
    /**
     * API backend service timeout period in seconds. Default value: `5`.
     */
    serviceConfigTimeout?: pulumi.Input<number>;
    /**
     * API backend service type. Valid values: `WEBSOCKET`, `HTTP`, `SCF`, `MOCK`. Default value: `HTTP`.
     */
    serviceConfigType?: pulumi.Input<string>;
    /**
     * API backend service url. This parameter is required when `service_config_type` is `HTTP`.
     */
    serviceConfigUrl?: pulumi.Input<string>;
    /**
     * Unique VPC ID.
     */
    serviceConfigVpcId?: pulumi.Input<string>;
    /**
     * Which service this API belongs. Refer to resource `tencentcloud_api_gateway_service`.
     */
    serviceId: pulumi.Input<string>;
    /**
     * API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
     */
    testLimit?: pulumi.Input<number>;
}
