// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of apigateway upstream
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.ApiGateway.getUpstreams({
 *     upstreamId: "upstream-4n5bfklc",
 * }));
 * ```
 * ### Filtered Queries
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.ApiGateway.getUpstreams({
 *     filters: [{
 *         name: "ServiceId",
 *         values: "service-hvg0uueg",
 *     }],
 *     upstreamId: "upstream-4n5bfklc",
 * }));
 * ```
 */
export function getUpstreams(args: GetUpstreamsArgs, opts?: pulumi.InvokeOptions): Promise<GetUpstreamsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:ApiGateway/getUpstreams:getUpstreams", {
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
        "upstreamId": args.upstreamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUpstreams.
 */
export interface GetUpstreamsArgs {
    /**
     * ServiceId and ApiId filtering queries.
     */
    filters?: inputs.ApiGateway.GetUpstreamsFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Backend channel ID.
     */
    upstreamId: string;
}

/**
 * A collection of values returned by getUpstreams.
 */
export interface GetUpstreamsResult {
    readonly filters?: outputs.ApiGateway.GetUpstreamsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    /**
     * Query Results.
     */
    readonly results: outputs.ApiGateway.GetUpstreamsResult[];
    readonly upstreamId: string;
}

export function getUpstreamsOutput(args: GetUpstreamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUpstreamsResult> {
    return pulumi.output(args).apply(a => getUpstreams(a, opts))
}

/**
 * A collection of arguments for invoking getUpstreams.
 */
export interface GetUpstreamsOutputArgs {
    /**
     * ServiceId and ApiId filtering queries.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ApiGateway.GetUpstreamsFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Backend channel ID.
     */
    upstreamId: pulumi.Input<string>;
}
