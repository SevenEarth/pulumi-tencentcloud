// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query the available database specifications for different regions. And a maximum of 20 requests can be initiated per second for this query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const mysql = pulumi.output(tencentcloud.Mysql.getZoneConfig({
 *     region: "ap-guangzhou",
 *     resultOutputFile: "mytestpath",
 * }));
 * ```
 */
export function getZoneConfig(args?: GetZoneConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneConfigResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Mysql/getZoneConfig:getZoneConfig", {
        "region": args.region,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getZoneConfig.
 */
export interface GetZoneConfigArgs {
    /**
     * Region parameter, which is used to identify the region to which the data you want to work with belongs.
     */
    region?: string;
    /**
     * Used to store results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getZoneConfig.
 */
export interface GetZoneConfigResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of zone config. Each element contains the following attributes:
     */
    readonly lists: outputs.Mysql.GetZoneConfigList[];
    readonly region?: string;
    readonly resultOutputFile?: string;
}

export function getZoneConfigOutput(args?: GetZoneConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZoneConfigResult> {
    return pulumi.output(args).apply(a => getZoneConfig(a, opts))
}

/**
 * A collection of arguments for invoking getZoneConfig.
 */
export interface GetZoneConfigOutputArgs {
    /**
     * Region parameter, which is used to identify the region to which the data you want to work with belongs.
     */
    region?: pulumi.Input<string>;
    /**
     * Used to store results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
