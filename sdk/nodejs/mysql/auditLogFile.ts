// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a mysql auditLogFile
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const zones = tencentcloud.Availability.getZonesByProduct({
 *     product: "cdb",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: zones.then(zones => zones.zones?[0]?.name),
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.0.0/16",
 *     isMulticast: false,
 * });
 * const securityGroup = new tencentcloud.security.Group("securityGroup", {description: "mysql test"});
 * const exampleInstance = new tencentcloud.mysql.Instance("exampleInstance", {
 *     internetService: 1,
 *     engineVersion: "5.7",
 *     chargeType: "POSTPAID",
 *     rootPassword: "PassWord123",
 *     slaveDeployMode: 0,
 *     availabilityZone: zones.then(zones => zones.zones?[0]?.name),
 *     slaveSyncMode: 1,
 *     instanceName: "tf-example-mysql",
 *     memSize: 4000,
 *     volumeSize: 200,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     intranetPort: 3306,
 *     securityGroups: [securityGroup.id],
 *     tags: {
 *         name: "test",
 *     },
 *     parameters: {
 *         character_set_server: "utf8",
 *         max_connections: "1000",
 *     },
 * });
 * const exampleAuditLogFile = new tencentcloud.mysql.AuditLogFile("exampleAuditLogFile", {
 *     instanceId: exampleInstance.id,
 *     startTime: "2023-07-01 00:00:00",
 *     endTime: "2023-10-01 00:00:00",
 *     order: "ASC",
 *     orderBy: "timestamp",
 * });
 * ```
 * ### Add filter
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.mysql.AuditLogFile("example", {
 *     instanceId: tencentcloud_mysql_instance.example.id,
 *     startTime: "2023-07-01 00:00:00",
 *     endTime: "2023-10-01 00:00:00",
 *     order: "ASC",
 *     orderBy: "timestamp",
 *     filter: {
 *         hosts: ["30.50.207.46"],
 *         users: ["keep_dbbrain"],
 *     },
 * });
 * ```
 */
export class AuditLogFile extends pulumi.CustomResource {
    /**
     * Get an existing AuditLogFile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuditLogFileState, opts?: pulumi.CustomResourceOptions): AuditLogFile {
        return new AuditLogFile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mysql/auditLogFile:AuditLogFile';

    /**
     * Returns true if the given object is an instance of AuditLogFile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuditLogFile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuditLogFile.__pulumiType;
    }

    /**
     * download url.
     */
    public /*out*/ readonly downloadUrl!: pulumi.Output<string>;
    /**
     * end time.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * size of file(KB).
     */
    public /*out*/ readonly fileSize!: pulumi.Output<number>;
    /**
     * Filter condition. Logs can be filtered according to the filter conditions set.
     */
    public readonly filter!: pulumi.Output<outputs.Mysql.AuditLogFileFilter | undefined>;
    /**
     * The ID of instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Sort by. supported values are: `ASC`- ascending order, `DESC`- descending order.
     */
    public readonly order!: pulumi.Output<string | undefined>;
    /**
     * Sort field. supported values include:`timestamp` - timestamp; `affectRows` - affected rows; `execTime` - execution time.
     */
    public readonly orderBy!: pulumi.Output<string | undefined>;
    /**
     * start time.
     */
    public readonly startTime!: pulumi.Output<string>;

    /**
     * Create a AuditLogFile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuditLogFileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuditLogFileArgs | AuditLogFileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuditLogFileState | undefined;
            resourceInputs["downloadUrl"] = state ? state.downloadUrl : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["fileSize"] = state ? state.fileSize : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["orderBy"] = state ? state.orderBy : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
        } else {
            const args = argsOrState as AuditLogFileArgs | undefined;
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["orderBy"] = args ? args.orderBy : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["downloadUrl"] = undefined /*out*/;
            resourceInputs["fileSize"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuditLogFile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuditLogFile resources.
 */
export interface AuditLogFileState {
    /**
     * download url.
     */
    downloadUrl?: pulumi.Input<string>;
    /**
     * end time.
     */
    endTime?: pulumi.Input<string>;
    /**
     * size of file(KB).
     */
    fileSize?: pulumi.Input<number>;
    /**
     * Filter condition. Logs can be filtered according to the filter conditions set.
     */
    filter?: pulumi.Input<inputs.Mysql.AuditLogFileFilter>;
    /**
     * The ID of instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Sort by. supported values are: `ASC`- ascending order, `DESC`- descending order.
     */
    order?: pulumi.Input<string>;
    /**
     * Sort field. supported values include:`timestamp` - timestamp; `affectRows` - affected rows; `execTime` - execution time.
     */
    orderBy?: pulumi.Input<string>;
    /**
     * start time.
     */
    startTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuditLogFile resource.
 */
export interface AuditLogFileArgs {
    /**
     * end time.
     */
    endTime: pulumi.Input<string>;
    /**
     * Filter condition. Logs can be filtered according to the filter conditions set.
     */
    filter?: pulumi.Input<inputs.Mysql.AuditLogFileFilter>;
    /**
     * The ID of instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Sort by. supported values are: `ASC`- ascending order, `DESC`- descending order.
     */
    order?: pulumi.Input<string>;
    /**
     * Sort field. supported values include:`timestamp` - timestamp; `affectRows` - affected rows; `execTime` - execution time.
     */
    orderBy?: pulumi.Input<string>;
    /**
     * start time.
     */
    startTime: pulumi.Input<string>;
}
