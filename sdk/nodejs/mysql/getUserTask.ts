// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of mysql userTask
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const userTask = pulumi.output(tencentcloud.Mysql.getUserTask({
 *     asyncRequestId: "f2fe828c-773af816-0a08f542-94bb2a9c",
 *     instanceId: "cdb-fitq5t9h",
 *     startTimeBegin: "2017-12-31 10:40:01",
 *     startTimeEnd: "2017-12-31 10:40:01",
 *     taskStatuses: ["2"],
 *     taskTypes: ["5"],
 * }));
 * ```
 */
export function getUserTask(args?: GetUserTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetUserTaskResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Mysql/getUserTask:getUserTask", {
        "asyncRequestId": args.asyncRequestId,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "startTimeBegin": args.startTimeBegin,
        "startTimeEnd": args.startTimeEnd,
        "taskStatuses": args.taskStatuses,
        "taskTypes": args.taskTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserTask.
 */
export interface GetUserTaskArgs {
    /**
     * Asynchronous task request ID, the AsyncRequestId returned by executing cloud database-related operations.
     */
    asyncRequestId?: string;
    /**
     * Instance ID, the format is: cdb-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page, and you can use the [query instance list] (https://cloud.tencent.com/document/api/236/15872) interface Gets the value of the field InstanceId in the output parameter.
     */
    instanceId?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * The start time of the first task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
     */
    startTimeBegin?: string;
    /**
     * The start time of the last task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
     */
    startTimeEnd?: string;
    /**
     * Task status. If no value is passed, all task statuses will be queried. Supported values include: `UNDEFINED` - undefined; `INITIAL` - initialization; `RUNNING` - running; `SUCCEED` - the execution was successful; `FAILED` - execution failed; `KILLED` - terminated; `REMOVED` - removed; `PAUSED` - Paused.
     */
    taskStatuses?: string[];
    /**
     * Task type. If no value is passed, all task types will be queried. Supported values include: `ROLLBACK` - database rollback; `SQL OPERATION` - SQL operation; `IMPORT DATA` - data import; `MODIFY PARAM` - parameter setting; `INITIAL` - initialize the cloud database instance; `REBOOT` - restarts the cloud database instance; `OPEN GTID` - open the cloud database instance GTID; `UPGRADE RO` - read-only instance upgrade; `BATCH ROLLBACK` - database batch rollback; `UPGRADE MASTER` - master upgrade; `DROP TABLES` - delete cloud database tables; `SWITCH DR TO MASTER` - The disaster recovery instance.
     */
    taskTypes?: string[];
}

/**
 * A collection of values returned by getUserTask.
 */
export interface GetUserTaskResult {
    /**
     * The request ID of the asynchronous task.
     */
    readonly asyncRequestId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    /**
     * The returned instance task information.
     */
    readonly items: outputs.Mysql.GetUserTaskItem[];
    readonly resultOutputFile?: string;
    readonly startTimeBegin?: string;
    readonly startTimeEnd?: string;
    /**
     * Instance task status, possible values include:UNDEFINED - undefined;INITIAL - initialization;RUNNING - running;SUCCEED - the execution was successful;FAILED - execution failed;KILLED - terminated;REMOVED - removed;PAUSED - Paused.WAITING - waiting (cancellable).
     */
    readonly taskStatuses?: string[];
    readonly taskTypes?: string[];
}

export function getUserTaskOutput(args?: GetUserTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserTaskResult> {
    return pulumi.output(args).apply(a => getUserTask(a, opts))
}

/**
 * A collection of arguments for invoking getUserTask.
 */
export interface GetUserTaskOutputArgs {
    /**
     * Asynchronous task request ID, the AsyncRequestId returned by executing cloud database-related operations.
     */
    asyncRequestId?: pulumi.Input<string>;
    /**
     * Instance ID, the format is: cdb-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page, and you can use the [query instance list] (https://cloud.tencent.com/document/api/236/15872) interface Gets the value of the field InstanceId in the output parameter.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * The start time of the first task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
     */
    startTimeBegin?: pulumi.Input<string>;
    /**
     * The start time of the last task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
     */
    startTimeEnd?: pulumi.Input<string>;
    /**
     * Task status. If no value is passed, all task statuses will be queried. Supported values include: `UNDEFINED` - undefined; `INITIAL` - initialization; `RUNNING` - running; `SUCCEED` - the execution was successful; `FAILED` - execution failed; `KILLED` - terminated; `REMOVED` - removed; `PAUSED` - Paused.
     */
    taskStatuses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Task type. If no value is passed, all task types will be queried. Supported values include: `ROLLBACK` - database rollback; `SQL OPERATION` - SQL operation; `IMPORT DATA` - data import; `MODIFY PARAM` - parameter setting; `INITIAL` - initialize the cloud database instance; `REBOOT` - restarts the cloud database instance; `OPEN GTID` - open the cloud database instance GTID; `UPGRADE RO` - read-only instance upgrade; `BATCH ROLLBACK` - database batch rollback; `UPGRADE MASTER` - master upgrade; `DROP TABLES` - delete cloud database tables; `SWITCH DR TO MASTER` - The disaster recovery instance.
     */
    taskTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
