// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of wedata rule templates
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const ruleTemplates = pulumi.output(tencentcloud.Wedata.getRuleTemplates({
 *     projectId: "1840731346428280832",
 *     sourceEngineTypes: [
 *         2,
 *         4,
 *         16,
 *     ],
 *     sourceObjectType: 2,
 *     type: 2,
 * }));
 * ```
 */
export function getRuleTemplates(args?: GetRuleTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleTemplatesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Wedata/getRuleTemplates:getRuleTemplates", {
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
        "sourceEngineTypes": args.sourceEngineTypes,
        "sourceObjectType": args.sourceObjectType,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleTemplates.
 */
export interface GetRuleTemplatesArgs {
    /**
     * Project ID.
     */
    projectId?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Applicable type of source data.
     */
    sourceEngineTypes?: number[];
    /**
     * Source data object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
     */
    sourceObjectType?: number;
    /**
     * Template type. `1` means System template, `2` means Custom template.
     */
    type?: number;
}

/**
 * A collection of values returned by getRuleTemplates.
 */
export interface GetRuleTemplatesResult {
    /**
     * rule template list.
     */
    readonly datas: outputs.Wedata.GetRuleTemplatesData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId?: string;
    readonly resultOutputFile?: string;
    /**
     * Applicable type of source data.
     */
    readonly sourceEngineTypes?: number[];
    /**
     * Source object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
     */
    readonly sourceObjectType?: number;
    /**
     * Template type. `1` means System template, `2` means Custom template.
     */
    readonly type?: number;
}

export function getRuleTemplatesOutput(args?: GetRuleTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleTemplatesResult> {
    return pulumi.output(args).apply(a => getRuleTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getRuleTemplates.
 */
export interface GetRuleTemplatesOutputArgs {
    /**
     * Project ID.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Applicable type of source data.
     */
    sourceEngineTypes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Source data object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
     */
    sourceObjectType?: pulumi.Input<number>;
    /**
     * Template type. `1` means System template, `2` means Custom template.
     */
    type?: pulumi.Input<number>;
}
