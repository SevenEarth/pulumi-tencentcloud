// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a lighthouse firewall template
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const firewallTemplate = new tencentcloud.Lighthouse.FirewallTemplate("firewall_template", {
 *     templateName: "firewall-template-test",
 *     templateRules: [
 *         {
 *             action: "ACCEPT",
 *             cidrBlock: "127.0.0.1",
 *             firewallRuleDescription: "test description",
 *             port: "8080",
 *             protocol: "TCP",
 *         },
 *         {
 *             action: "DROP",
 *             cidrBlock: "127.0.0.0/24",
 *             firewallRuleDescription: "test description",
 *             port: "8090",
 *             protocol: "TCP",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * lighthouse firewall_template can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Lighthouse/firewallTemplate:FirewallTemplate firewall_template firewall_template_id
 * ```
 */
export class FirewallTemplate extends pulumi.CustomResource {
    /**
     * Get an existing FirewallTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallTemplateState, opts?: pulumi.CustomResourceOptions): FirewallTemplate {
        return new FirewallTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Lighthouse/firewallTemplate:FirewallTemplate';

    /**
     * Returns true if the given object is an instance of FirewallTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallTemplate.__pulumiType;
    }

    /**
     * Template name.
     */
    public readonly templateName!: pulumi.Output<string>;
    /**
     * List of firewall rules.
     */
    public readonly templateRules!: pulumi.Output<outputs.Lighthouse.FirewallTemplateTemplateRule[] | undefined>;

    /**
     * Create a FirewallTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallTemplateArgs | FirewallTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallTemplateState | undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["templateRules"] = state ? state.templateRules : undefined;
        } else {
            const args = argsOrState as FirewallTemplateArgs | undefined;
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["templateRules"] = args ? args.templateRules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallTemplate resources.
 */
export interface FirewallTemplateState {
    /**
     * Template name.
     */
    templateName?: pulumi.Input<string>;
    /**
     * List of firewall rules.
     */
    templateRules?: pulumi.Input<pulumi.Input<inputs.Lighthouse.FirewallTemplateTemplateRule>[]>;
}

/**
 * The set of arguments for constructing a FirewallTemplate resource.
 */
export interface FirewallTemplateArgs {
    /**
     * Template name.
     */
    templateName: pulumi.Input<string>;
    /**
     * List of firewall rules.
     */
    templateRules?: pulumi.Input<pulumi.Input<inputs.Lighthouse.FirewallTemplateTemplateRule>[]>;
}
