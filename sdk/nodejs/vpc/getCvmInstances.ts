// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vpc cvmInstances
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const cvmInstances = pulumi.output(tencentcloud.Vpc.getCvmInstances({
 *     filters: [{
 *         name: "vpc-id",
 *         values: ["vpc-lh4nqig9"],
 *     }],
 * }));
 * ```
 */
export function getCvmInstances(args: GetCvmInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetCvmInstancesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Vpc/getCvmInstances:getCvmInstances", {
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCvmInstances.
 */
export interface GetCvmInstancesArgs {
    /**
     * Filter condition. `RouteTableIds` and `Filters` cannot be specified at the same time. vpc-id - String - (Filter condition) VPC instance ID, such as `vpc-f49l6u0z`;instance-type - String - (Filter condition) CVM instance ID;instance-name - String - (Filter condition) CVM name.
     */
    filters: inputs.Vpc.GetCvmInstancesFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCvmInstances.
 */
export interface GetCvmInstancesResult {
    readonly filters: outputs.Vpc.GetCvmInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of CVM instances.
     */
    readonly instanceSets: outputs.Vpc.GetCvmInstancesInstanceSet[];
    readonly resultOutputFile?: string;
}

export function getCvmInstancesOutput(args: GetCvmInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCvmInstancesResult> {
    return pulumi.output(args).apply(a => getCvmInstances(a, opts))
}

/**
 * A collection of arguments for invoking getCvmInstances.
 */
export interface GetCvmInstancesOutputArgs {
    /**
     * Filter condition. `RouteTableIds` and `Filters` cannot be specified at the same time. vpc-id - String - (Filter condition) VPC instance ID, such as `vpc-f49l6u0z`;instance-type - String - (Filter condition) CVM instance ID;instance-name - String - (Filter condition) CVM name.
     */
    filters: pulumi.Input<pulumi.Input<inputs.Vpc.GetCvmInstancesFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
