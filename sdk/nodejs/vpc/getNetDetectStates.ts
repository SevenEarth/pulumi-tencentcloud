// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vpc netDetectStates
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const netDetectStates = pulumi.output(tencentcloud.Vpc.getNetDetectStates({
 *     netDetectIds: ["netd-12345678"],
 * }));
 * ```
 */
export function getNetDetectStates(args?: GetNetDetectStatesArgs, opts?: pulumi.InvokeOptions): Promise<GetNetDetectStatesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Vpc/getNetDetectStates:getNetDetectStates", {
        "filters": args.filters,
        "netDetectIds": args.netDetectIds,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetDetectStates.
 */
export interface GetNetDetectStatesArgs {
    /**
     * Filter conditions. `NetDetectIds` and `Filters` cannot be specified at the same time.net-detect-id - String - (Filter condition) The network detection instance ID, such as netd-12345678.
     */
    filters?: inputs.Vpc.GetNetDetectStatesFilter[];
    /**
     * The array of network detection instance `IDs`, such as [`netd-12345678`].
     */
    netDetectIds?: string[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getNetDetectStates.
 */
export interface GetNetDetectStatesResult {
    readonly filters?: outputs.Vpc.GetNetDetectStatesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly netDetectIds?: string[];
    /**
     * The array of network detection verification results that meet requirements.Note: This field may return null, indicating that no valid values can be obtained.
     */
    readonly netDetectStateSets: outputs.Vpc.GetNetDetectStatesNetDetectStateSet[];
    readonly resultOutputFile?: string;
}

export function getNetDetectStatesOutput(args?: GetNetDetectStatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetDetectStatesResult> {
    return pulumi.output(args).apply(a => getNetDetectStates(a, opts))
}

/**
 * A collection of arguments for invoking getNetDetectStates.
 */
export interface GetNetDetectStatesOutputArgs {
    /**
     * Filter conditions. `NetDetectIds` and `Filters` cannot be specified at the same time.net-detect-id - String - (Filter condition) The network detection instance ID, such as netd-12345678.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Vpc.GetNetDetectStatesFilterArgs>[]>;
    /**
     * The array of network detection instance `IDs`, such as [`netd-12345678`].
     */
    netDetectIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
