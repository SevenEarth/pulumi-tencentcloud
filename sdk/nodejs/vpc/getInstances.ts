// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query vpc instances' information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = new tencentcloud.vpc.Instance("foo", {cidrBlock: "10.0.0.0/16"});
 * const idInstances = tencentcloud.Vpc.getInstancesOutput({
 *     vpcId: foo.id,
 * });
 * const nameInstances = tencentcloud.Vpc.getInstancesOutput({
 *     name: foo.name,
 * });
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Vpc/getInstances:getInstances", {
        "cidrBlock": args.cidrBlock,
        "isDefault": args.isDefault,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
        "tagKey": args.tagKey,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * Filter VPC with this CIDR.
     */
    cidrBlock?: string;
    /**
     * Filter default or no default VPC.
     */
    isDefault?: boolean;
    /**
     * Name of the VPC to be queried.
     */
    name?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Filter if VPC has this tag.
     */
    tagKey?: string;
    /**
     * Tags of the VPC to be queried.
     */
    tags?: {[key: string]: any};
    /**
     * ID of the VPC to be queried.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * A network address block of a VPC CIDR.
     */
    readonly cidrBlock?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The information list of the VPC.
     */
    readonly instanceLists: outputs.Vpc.GetInstancesInstanceList[];
    /**
     * Indicates whether it is the default VPC for this region.
     */
    readonly isDefault?: boolean;
    /**
     * Name of the VPC.
     */
    readonly name?: string;
    readonly resultOutputFile?: string;
    readonly tagKey?: string;
    /**
     * Tags of the VPC.
     */
    readonly tags?: {[key: string]: any};
    /**
     * ID of the VPC.
     */
    readonly vpcId?: string;
}

export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply(a => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * Filter VPC with this CIDR.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Filter default or no default VPC.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the VPC to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Filter if VPC has this tag.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Tags of the VPC to be queried.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC to be queried.
     */
    vpcId?: pulumi.Input<string>;
}
