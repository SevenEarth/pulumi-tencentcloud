// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query security policy rule.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooProxy = new tencentcloud.gaap.Proxy("fooProxy", {
 *     bandwidth: 10,
 *     concurrent: 2,
 *     accessRegion: "SouthChina",
 *     realserverRegion: "NorthChina",
 * });
 * const fooSecurityPolicy = new tencentcloud.gaap.SecurityPolicy("fooSecurityPolicy", {
 *     proxyId: fooProxy.id,
 *     action: "ACCEPT",
 * });
 * const fooSecurityRule = new tencentcloud.gaap.SecurityRule("fooSecurityRule", {
 *     policyId: fooSecurityPolicy.id,
 *     cidrIp: "1.1.1.1",
 *     action: "ACCEPT",
 *     protocol: "TCP",
 *     port: "80",
 * });
 * const protocol = pulumi.all([fooSecurityPolicy.id, fooSecurityRule.protocol]).apply(([id, protocol]) => tencentcloud.Gaap.getSecurityRulesOutput({
 *     policyId: id,
 *     protocol: protocol,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityRules(args: GetSecurityRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Gaap/getSecurityRules:getSecurityRules", {
        "action": args.action,
        "cidrIp": args.cidrIp,
        "name": args.name,
        "policyId": args.policyId,
        "port": args.port,
        "protocol": args.protocol,
        "resultOutputFile": args.resultOutputFile,
        "ruleId": args.ruleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityRules.
 */
export interface GetSecurityRulesArgs {
    /**
     * Policy of the rule to be queried.
     */
    action?: string;
    /**
     * A network address block of the request source to be queried.
     */
    cidrIp?: string;
    /**
     * Name of the security policy rule to be queried.
     */
    name?: string;
    /**
     * ID of the security policy to be queried.
     */
    policyId: string;
    /**
     * Port of the security policy rule to be queried.
     */
    port?: string;
    /**
     * Protocol of the security policy rule to be queried.
     */
    protocol?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * ID of the security policy rules to be queried.
     */
    ruleId?: string;
}

/**
 * A collection of values returned by getSecurityRules.
 */
export interface GetSecurityRulesResult {
    /**
     * Policy of the rule.
     */
    readonly action?: string;
    /**
     * A network address block of the request source.
     */
    readonly cidrIp?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the security policy rule.
     */
    readonly name?: string;
    readonly policyId: string;
    /**
     * Port of the security policy rule.
     */
    readonly port?: string;
    /**
     * Protocol of the security policy rule.
     */
    readonly protocol?: string;
    readonly resultOutputFile?: string;
    readonly ruleId?: string;
    /**
     * An information list of security policy rule. Each element contains the following attributes:
     */
    readonly rules: outputs.Gaap.GetSecurityRulesRule[];
}
/**
 * Use this data source to query security policy rule.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooProxy = new tencentcloud.gaap.Proxy("fooProxy", {
 *     bandwidth: 10,
 *     concurrent: 2,
 *     accessRegion: "SouthChina",
 *     realserverRegion: "NorthChina",
 * });
 * const fooSecurityPolicy = new tencentcloud.gaap.SecurityPolicy("fooSecurityPolicy", {
 *     proxyId: fooProxy.id,
 *     action: "ACCEPT",
 * });
 * const fooSecurityRule = new tencentcloud.gaap.SecurityRule("fooSecurityRule", {
 *     policyId: fooSecurityPolicy.id,
 *     cidrIp: "1.1.1.1",
 *     action: "ACCEPT",
 *     protocol: "TCP",
 *     port: "80",
 * });
 * const protocol = pulumi.all([fooSecurityPolicy.id, fooSecurityRule.protocol]).apply(([id, protocol]) => tencentcloud.Gaap.getSecurityRulesOutput({
 *     policyId: id,
 *     protocol: protocol,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityRulesOutput(args: GetSecurityRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityRulesResult> {
    return pulumi.output(args).apply((a: any) => getSecurityRules(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityRules.
 */
export interface GetSecurityRulesOutputArgs {
    /**
     * Policy of the rule to be queried.
     */
    action?: pulumi.Input<string>;
    /**
     * A network address block of the request source to be queried.
     */
    cidrIp?: pulumi.Input<string>;
    /**
     * Name of the security policy rule to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the security policy to be queried.
     */
    policyId: pulumi.Input<string>;
    /**
     * Port of the security policy rule to be queried.
     */
    port?: pulumi.Input<string>;
    /**
     * Protocol of the security policy rule to be queried.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * ID of the security policy rules to be queried.
     */
    ruleId?: pulumi.Input<string>;
}
