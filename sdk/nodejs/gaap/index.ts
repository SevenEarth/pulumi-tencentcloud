// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./certificate";
export * from "./domainErrorPage";
export * from "./getCertificates";
export * from "./getDomainErrorPages";
export * from "./getHttpDomains";
export * from "./getHttpRules";
export * from "./getLayer4Listeners";
export * from "./getLayer7Listeners";
export * from "./getProxies";
export * from "./getRealservers";
export * from "./getSecurityPolicies";
export * from "./getSecurityRules";
export * from "./httpDomain";
export * from "./httpRule";
export * from "./layer4Listener";
export * from "./layer7Listener";
export * from "./proxy";
export * from "./realserver";
export * from "./securityPolicy";
export * from "./securityRule";

// Import resources to register:
import { Certificate } from "./certificate";
import { DomainErrorPage } from "./domainErrorPage";
import { HttpDomain } from "./httpDomain";
import { HttpRule } from "./httpRule";
import { Layer4Listener } from "./layer4Listener";
import { Layer7Listener } from "./layer7Listener";
import { Proxy } from "./proxy";
import { Realserver } from "./realserver";
import { SecurityPolicy } from "./securityPolicy";
import { SecurityRule } from "./securityRule";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Gaap/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/domainErrorPage:DomainErrorPage":
                return new DomainErrorPage(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/httpDomain:HttpDomain":
                return new HttpDomain(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/httpRule:HttpRule":
                return new HttpRule(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/layer4Listener:Layer4Listener":
                return new Layer4Listener(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/layer7Listener:Layer7Listener":
                return new Layer7Listener(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/proxy:Proxy":
                return new Proxy(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/realserver:Realserver":
                return new Realserver(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/securityPolicy:SecurityPolicy":
                return new SecurityPolicy(name, <any>undefined, { urn })
            case "tencentcloud:Gaap/securityRule:SecurityRule":
                return new SecurityRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/certificate", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/domainErrorPage", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/httpDomain", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/httpRule", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/layer4Listener", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/layer7Listener", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/proxy", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/realserver", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/securityPolicy", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Gaap/securityRule", _module)
