// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of gaap listener statistics
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const listenerStatistics = pulumi.output(tencentcloud.Gaap.getListenerStatistics({
 *     endTime: "2023-10-19 23:59:59",
 *     granularity: 300,
 *     listenerId: "listener-xxxxxx",
 *     metricNames: [
 *         "InBandwidth",
 *         "OutBandwidth",
 *         "InPackets",
 *         "OutPackets",
 *         "Concurrent",
 *     ],
 *     startTime: "2023-10-19 00:00:00",
 * }));
 * ```
 */
export function getListenerStatistics(args: GetListenerStatisticsArgs, opts?: pulumi.InvokeOptions): Promise<GetListenerStatisticsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Gaap/getListenerStatistics:getListenerStatistics", {
        "endTime": args.endTime,
        "granularity": args.granularity,
        "listenerId": args.listenerId,
        "metricNames": args.metricNames,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getListenerStatistics.
 */
export interface GetListenerStatisticsArgs {
    /**
     * End Time.
     */
    endTime: string;
    /**
     * Monitoring granularity, currently supporting 300 3600 86400, in seconds.The query time range does not exceed 1 day and supports a minimum granularity of 300 seconds;The query interval should not exceed 7 days and support a minimum granularity of 3600 seconds;The query interval exceeds 7 days and supports a minimum granularity of 86400 seconds.
     */
    granularity: number;
    /**
     * Listener Id.
     */
    listenerId: string;
    /**
     * List of statistical indicator names. Supporting: InBandwidth, OutBandwidth, Concurrent, InPackets, OutPackets.
     */
    metricNames: string[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Start Time.
     */
    startTime: string;
}

/**
 * A collection of values returned by getListenerStatistics.
 */
export interface GetListenerStatisticsResult {
    readonly endTime: string;
    readonly granularity: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly listenerId: string;
    readonly metricNames: string[];
    readonly resultOutputFile?: string;
    readonly startTime: string;
    /**
     * Channel Group Statistics.
     */
    readonly statisticsDatas: outputs.Gaap.GetListenerStatisticsStatisticsData[];
}

export function getListenerStatisticsOutput(args: GetListenerStatisticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetListenerStatisticsResult> {
    return pulumi.output(args).apply(a => getListenerStatistics(a, opts))
}

/**
 * A collection of arguments for invoking getListenerStatistics.
 */
export interface GetListenerStatisticsOutputArgs {
    /**
     * End Time.
     */
    endTime: pulumi.Input<string>;
    /**
     * Monitoring granularity, currently supporting 300 3600 86400, in seconds.The query time range does not exceed 1 day and supports a minimum granularity of 300 seconds;The query interval should not exceed 7 days and support a minimum granularity of 3600 seconds;The query interval exceeds 7 days and supports a minimum granularity of 86400 seconds.
     */
    granularity: pulumi.Input<number>;
    /**
     * Listener Id.
     */
    listenerId: pulumi.Input<string>;
    /**
     * List of statistical indicator names. Supporting: InBandwidth, OutBandwidth, Concurrent, InPackets, OutPackets.
     */
    metricNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Start Time.
     */
    startTime: pulumi.Input<string>;
}
