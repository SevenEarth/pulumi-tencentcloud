// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of gaap check proxy create
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const checkProxyCreate = pulumi.output(tencentcloud.Gaap.getCheckProxyCreate({
 *     accessRegion: "Guangzhou",
 *     bandwidth: 10,
 *     concurrent: 2,
 *     http3Supported: 0,
 *     ipAddressVersion: "IPv4",
 *     networkType: "normal",
 *     packageType: "Thunder",
 *     realServerRegion: "Beijing",
 * }));
 * ```
 */
export function getCheckProxyCreate(args: GetCheckProxyCreateArgs, opts?: pulumi.InvokeOptions): Promise<GetCheckProxyCreateResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Gaap/getCheckProxyCreate:getCheckProxyCreate", {
        "accessRegion": args.accessRegion,
        "bandwidth": args.bandwidth,
        "concurrent": args.concurrent,
        "groupId": args.groupId,
        "ipAddressVersion": args.ipAddressVersion,
        "networkType": args.networkType,
        "packageType": args.packageType,
        "realServerRegion": args.realServerRegion,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCheckProxyCreate.
 */
export interface GetCheckProxyCreateArgs {
    /**
     * The access (acceleration) area of the proxy. The value can be obtained through the interface DescribeAccessRegionsByDestRegion.
     */
    accessRegion: string;
    /**
     * The upper limit of proxy bandwidth, in Mbps.
     */
    bandwidth: number;
    /**
     * The upper limit of chanproxynel concurrency, representing the number of simultaneous online connections, in tens of thousands.
     */
    concurrent: number;
    /**
     * If creating a proxy under a proxy group, you need to fill in the ID of the proxy group.
     */
    groupId?: string;
    /**
     * IP version, can be taken as IPv4 or IPv6, with a default value of IPv4.
     */
    ipAddressVersion?: string;
    /**
     * Network type, can take values &amp;#39;normal&amp;#39;, &amp;#39;cn2&amp;#39;, default value normal.
     */
    networkType?: string;
    /**
     * Channel package type. Thunder represents the standard proxy group, Accelerator represents the game accelerator proxy, and CrossBorder represents the cross-border proxy.
     */
    packageType?: string;
    /**
     * The origin area of the proxy. The value can be obtained through the interface DescribeDestRegions.
     */
    realServerRegion: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCheckProxyCreate.
 */
export interface GetCheckProxyCreateResult {
    readonly accessRegion: string;
    readonly bandwidth: number;
    /**
     * Query whether the proxy with the given configuration can be created, 1 can be created, 0 cannot be created.
     */
    readonly checkFlag: number;
    readonly concurrent: number;
    readonly groupId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddressVersion?: string;
    readonly networkType?: string;
    readonly packageType?: string;
    readonly realServerRegion: string;
    readonly resultOutputFile?: string;
}

export function getCheckProxyCreateOutput(args: GetCheckProxyCreateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCheckProxyCreateResult> {
    return pulumi.output(args).apply(a => getCheckProxyCreate(a, opts))
}

/**
 * A collection of arguments for invoking getCheckProxyCreate.
 */
export interface GetCheckProxyCreateOutputArgs {
    /**
     * The access (acceleration) area of the proxy. The value can be obtained through the interface DescribeAccessRegionsByDestRegion.
     */
    accessRegion: pulumi.Input<string>;
    /**
     * The upper limit of proxy bandwidth, in Mbps.
     */
    bandwidth: pulumi.Input<number>;
    /**
     * The upper limit of chanproxynel concurrency, representing the number of simultaneous online connections, in tens of thousands.
     */
    concurrent: pulumi.Input<number>;
    /**
     * If creating a proxy under a proxy group, you need to fill in the ID of the proxy group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * IP version, can be taken as IPv4 or IPv6, with a default value of IPv4.
     */
    ipAddressVersion?: pulumi.Input<string>;
    /**
     * Network type, can take values &amp;#39;normal&amp;#39;, &amp;#39;cn2&amp;#39;, default value normal.
     */
    networkType?: pulumi.Input<string>;
    /**
     * Channel package type. Thunder represents the standard proxy group, Accelerator represents the game accelerator proxy, and CrossBorder represents the cross-border proxy.
     */
    packageType?: pulumi.Input<string>;
    /**
     * The origin area of the proxy. The value can be obtained through the interface DescribeDestRegions.
     */
    realServerRegion: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
