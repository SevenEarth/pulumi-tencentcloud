// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query GAAP certificate.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooCertificate = new tencentcloud.gaap.Certificate("fooCertificate", {
 *     type: "BASIC",
 *     content: "test:tx2KGdo3zJg/.",
 * });
 * const fooCertificates = tencentcloud.Gaap.getCertificatesOutput({
 *     id: fooCertificate.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCertificates(args?: GetCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Gaap/getCertificates:getCertificates", {
        "id": args.id,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesArgs {
    /**
     * ID of the certificate to be queried.
     */
    id?: string;
    /**
     * Name of the certificate to be queried.
     */
    name?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Type of the certificate to be queried. Valid values: `BASIC`, `CLIENT`, `SERVER`, `REALSERVER` and `PROXY`. `BASIC` means basic certificate; `CLIENT` means client CA certificate; `SERVER` means server SSL certificate; `REALSERVER` means realserver CA certificate; `PROXY` means proxy SSL certificate.
     */
    type?: string;
}

/**
 * A collection of values returned by getCertificates.
 */
export interface GetCertificatesResult {
    /**
     * An information list of certificate. Each element contains the following attributes:
     */
    readonly certificates: outputs.Gaap.GetCertificatesCertificate[];
    /**
     * ID of the certificate.
     */
    readonly id?: string;
    /**
     * Name of the certificate.
     */
    readonly name?: string;
    readonly resultOutputFile?: string;
    /**
     * Type of the certificate.
     */
    readonly type?: string;
}
/**
 * Use this data source to query GAAP certificate.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooCertificate = new tencentcloud.gaap.Certificate("fooCertificate", {
 *     type: "BASIC",
 *     content: "test:tx2KGdo3zJg/.",
 * });
 * const fooCertificates = tencentcloud.Gaap.getCertificatesOutput({
 *     id: fooCertificate.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCertificatesOutput(args?: GetCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesOutputArgs {
    /**
     * ID of the certificate to be queried.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the certificate to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Type of the certificate to be queried. Valid values: `BASIC`, `CLIENT`, `SERVER`, `REALSERVER` and `PROXY`. `BASIC` means basic certificate; `CLIENT` means client CA certificate; `SERVER` means server SSL certificate; `REALSERVER` means realserver CA certificate; `PROXY` means proxy SSL certificate.
     */
    type?: pulumi.Input<string>;
}
