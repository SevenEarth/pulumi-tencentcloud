// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query gaap realservers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const fooRealserver = new tencentcloud.gaap.Realserver("fooRealserver", {ip: "1.1.1.1"});
 * const fooRealservers = fooRealserver.ip.apply(ip => tencentcloud.Gaap.getRealserversOutput({
 *     ip: ip,
 * }));
 * ```
 */
export function getRealservers(args?: GetRealserversArgs, opts?: pulumi.InvokeOptions): Promise<GetRealserversResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Gaap/getRealservers:getRealservers", {
        "domain": args.domain,
        "ip": args.ip,
        "name": args.name,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getRealservers.
 */
export interface GetRealserversArgs {
    /**
     * Domain of the GAAP realserver to be queried, conflict with `ip`.
     */
    domain?: string;
    /**
     * IP of the GAAP realserver to be queried, conflict with `domain`.
     */
    ip?: string;
    /**
     * Name of the GAAP realserver to be queried, the maximum length is 30.
     */
    name?: string;
    /**
     * ID of the project within the GAAP realserver to be queried, default value is `-1`, no set means all projects.
     */
    projectId?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Tags of the GAAP proxy to be queried. Support up to 5, display the information as long as it matches one.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getRealservers.
 */
export interface GetRealserversResult {
    /**
     * Domain of the GAAP realserver.
     */
    readonly domain?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * IP of the GAAP realserver.
     */
    readonly ip?: string;
    /**
     * Name of the GAAP realserver.
     */
    readonly name?: string;
    /**
     * ID of the project within the GAAP realserver.
     */
    readonly projectId?: number;
    /**
     * An information list of GAAP realserver. Each element contains the following attributes:
     */
    readonly realservers: outputs.Gaap.GetRealserversRealserver[];
    readonly resultOutputFile?: string;
    /**
     * Tags of the GAAP realserver.
     */
    readonly tags?: {[key: string]: any};
}

export function getRealserversOutput(args?: GetRealserversOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRealserversResult> {
    return pulumi.output(args).apply(a => getRealservers(a, opts))
}

/**
 * A collection of arguments for invoking getRealservers.
 */
export interface GetRealserversOutputArgs {
    /**
     * Domain of the GAAP realserver to be queried, conflict with `ip`.
     */
    domain?: pulumi.Input<string>;
    /**
     * IP of the GAAP realserver to be queried, conflict with `domain`.
     */
    ip?: pulumi.Input<string>;
    /**
     * Name of the GAAP realserver to be queried, the maximum length is 30.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the project within the GAAP realserver to be queried, default value is `-1`, no set means all projects.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Tags of the GAAP proxy to be queried. Support up to 5, display the information as long as it matches one.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
