// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dts migrateDbInstances
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const migrateDbInstances = tencentcloud.Dts.getMigrateDbInstances({
 *     accountMode: "self",
 *     databaseType: "mysql",
 *     instanceId: "cdb-ffulb2sg",
 *     instanceName: "cdb_test",
 *     limit: 10,
 *     migrateRole: "src",
 *     offset: 10,
 *     tmpSecretId: "AKIDvBDyVmna9TadcS4YzfBZmkU5TbX12345",
 *     tmpSecretKey: "ZswjGWWHm24qMeiX6QUJsELDpC12345",
 *     tmpToken: "JOqqCPVuWdNZvlVDLxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMigrateDbInstances(args: GetMigrateDbInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrateDbInstancesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Dts/getMigrateDbInstances:getMigrateDbInstances", {
        "accountMode": args.accountMode,
        "databaseType": args.databaseType,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "limit": args.limit,
        "migrateRole": args.migrateRole,
        "offset": args.offset,
        "resultOutputFile": args.resultOutputFile,
        "tmpSecretId": args.tmpSecretId,
        "tmpSecretKey": args.tmpSecretKey,
        "tmpToken": args.tmpToken,
    }, opts);
}

/**
 * A collection of arguments for invoking getMigrateDbInstances.
 */
export interface GetMigrateDbInstancesArgs {
    /**
     * The owning account of the resource is null or self(resources in the self account), other(resources in the other account).
     */
    accountMode?: string;
    /**
     * Database type.
     */
    databaseType: string;
    /**
     * Database instance id.
     */
    instanceId?: string;
    /**
     * Database instance name.
     */
    instanceName?: string;
    /**
     * Limit.
     */
    limit?: number;
    /**
     * Whether the instance is the migration source or destination,src(for source), dst(for destination).
     */
    migrateRole?: string;
    /**
     * Offset.
     */
    offset?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * temporary secret id, used across account.
     */
    tmpSecretId?: string;
    /**
     * temporary secret key, used across account.
     */
    tmpSecretKey?: string;
    /**
     * temporary token, used across account.
     */
    tmpToken?: string;
}

/**
 * A collection of values returned by getMigrateDbInstances.
 */
export interface GetMigrateDbInstancesResult {
    readonly accountMode?: string;
    readonly databaseType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Instance Id.
     */
    readonly instanceId?: string;
    /**
     * Database instance name.
     */
    readonly instanceName?: string;
    /**
     * Instance list.
     */
    readonly instances: outputs.Dts.GetMigrateDbInstancesInstance[];
    readonly limit?: number;
    readonly migrateRole?: string;
    readonly offset?: number;
    /**
     * Unique request id, provide this when encounter a problem.
     */
    readonly requestId: string;
    readonly resultOutputFile?: string;
    readonly tmpSecretId?: string;
    readonly tmpSecretKey?: string;
    readonly tmpToken?: string;
}
/**
 * Use this data source to query detailed information of dts migrateDbInstances
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const migrateDbInstances = tencentcloud.Dts.getMigrateDbInstances({
 *     accountMode: "self",
 *     databaseType: "mysql",
 *     instanceId: "cdb-ffulb2sg",
 *     instanceName: "cdb_test",
 *     limit: 10,
 *     migrateRole: "src",
 *     offset: 10,
 *     tmpSecretId: "AKIDvBDyVmna9TadcS4YzfBZmkU5TbX12345",
 *     tmpSecretKey: "ZswjGWWHm24qMeiX6QUJsELDpC12345",
 *     tmpToken: "JOqqCPVuWdNZvlVDLxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMigrateDbInstancesOutput(args: GetMigrateDbInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMigrateDbInstancesResult> {
    return pulumi.output(args).apply((a: any) => getMigrateDbInstances(a, opts))
}

/**
 * A collection of arguments for invoking getMigrateDbInstances.
 */
export interface GetMigrateDbInstancesOutputArgs {
    /**
     * The owning account of the resource is null or self(resources in the self account), other(resources in the other account).
     */
    accountMode?: pulumi.Input<string>;
    /**
     * Database type.
     */
    databaseType: pulumi.Input<string>;
    /**
     * Database instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Database instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Limit.
     */
    limit?: pulumi.Input<number>;
    /**
     * Whether the instance is the migration source or destination,src(for source), dst(for destination).
     */
    migrateRole?: pulumi.Input<string>;
    /**
     * Offset.
     */
    offset?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * temporary secret id, used across account.
     */
    tmpSecretId?: pulumi.Input<string>;
    /**
     * temporary secret key, used across account.
     */
    tmpSecretKey?: pulumi.Input<string>;
    /**
     * temporary token, used across account.
     */
    tmpToken?: pulumi.Input<string>;
}
