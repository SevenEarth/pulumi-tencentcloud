// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of css domains
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const domains = tencentcloud.Css.getDomains({
 *     domainType: 0,
 *     isDelayLive: 0,
 *     playType: 1,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomains(args?: GetDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Css/getDomains:getDomains", {
        "domainPrefix": args.domainPrefix,
        "domainStatus": args.domainStatus,
        "domainType": args.domainType,
        "isDelayLive": args.isDelayLive,
        "playType": args.playType,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomains.
 */
export interface GetDomainsArgs {
    /**
     * domain name prefix.
     */
    domainPrefix?: string;
    /**
     * domain name status filter. 0-disable, 1-enable.
     */
    domainStatus?: number;
    /**
     * Domain name type filtering. 0-push, 1-play.
     */
    domainType?: number;
    /**
     * 0 normal live broadcast 1 slow live broadcast default 0.
     */
    isDelayLive?: number;
    /**
     * Playing area, this parameter is meaningful only when DomainType=1. 1: Domestic.2: Global.3: Overseas.
     */
    playType?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getDomains.
 */
export interface GetDomainsResult {
    /**
     * A list of domain name details.
     */
    readonly domainLists: outputs.Css.GetDomainsDomainList[];
    readonly domainPrefix?: string;
    readonly domainStatus?: number;
    readonly domainType?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether to slow live broadcast: 0: normal live broadcast. 1: Slow live broadcast.
     */
    readonly isDelayLive?: number;
    /**
     * Playing area, this parameter is meaningful only when Type=1. 1: Domestic. 2: Global. 3: Overseas.
     */
    readonly playType?: number;
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query detailed information of css domains
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const domains = tencentcloud.Css.getDomains({
 *     domainType: 0,
 *     isDelayLive: 0,
 *     playType: 1,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomainsOutput(args?: GetDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainsResult> {
    return pulumi.output(args).apply((a: any) => getDomains(a, opts))
}

/**
 * A collection of arguments for invoking getDomains.
 */
export interface GetDomainsOutputArgs {
    /**
     * domain name prefix.
     */
    domainPrefix?: pulumi.Input<string>;
    /**
     * domain name status filter. 0-disable, 1-enable.
     */
    domainStatus?: pulumi.Input<number>;
    /**
     * Domain name type filtering. 0-push, 1-play.
     */
    domainType?: pulumi.Input<number>;
    /**
     * 0 normal live broadcast 1 slow live broadcast default 0.
     */
    isDelayLive?: pulumi.Input<number>;
    /**
     * Playing area, this parameter is meaningful only when DomainType=1. 1: Domestic.2: Global.3: Overseas.
     */
    playType?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
