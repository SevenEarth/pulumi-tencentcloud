// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of css xp2pDetailInfoList
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const xp2pDetailInfoList = tencentcloud.Css.getXp2pDetailInfoList({
 *     queryTime: "2023-11-01T14:55:01+08:00",
 *     types: ["live"],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getXp2pDetailInfoList(args?: GetXp2pDetailInfoListArgs, opts?: pulumi.InvokeOptions): Promise<GetXp2pDetailInfoListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Css/getXp2pDetailInfoList:getXp2pDetailInfoList", {
        "dimensions": args.dimensions,
        "queryTime": args.queryTime,
        "resultOutputFile": args.resultOutputFile,
        "streamNames": args.streamNames,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListArgs {
    /**
     * The dimension parameter can be used to specify the dimension for the query. If this parameter is not passed, the query will default to stream-level data. If you pass this parameter, it will only retrieve data for the specified dimension. The available dimension currently supported is AppId dimension, which allows you to query data based on the application ID. Please note that the returned fields will be related to the specified dimension.
     */
    dimensions?: string[];
    /**
     * The UTC minute granularity query time for querying usage data for a specific minute is in the format: yyyy-mm-ddTHH:MM:00Z. Please refer to the link https://cloud.tencent.com/document/product/266/11732#I.For example, if the local time is 2019-01-08 10:00:00 in Beijing, the corresponding UTC time would be 2019-01-08T10:00:00+08:00.This query supports data from the past six months.
     */
    queryTime?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * The stream array can be used to specify the streams to be queried. If no stream is specified, the query will include all streams by default.
     */
    streamNames?: string[];
    /**
     * The type array can be used to specify the type of media content to be queried. The two available options are live for live streaming and vod for video on demand. If no type is specified, the query will include both live and VOD content by default.
     */
    types?: string[];
}

/**
 * A collection of values returned by getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListResult {
    /**
     * P2P streaming statistical information.
     */
    readonly dataInfoLists: outputs.Css.GetXp2pDetailInfoListDataInfoList[];
    readonly dimensions?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly queryTime?: string;
    readonly resultOutputFile?: string;
    readonly streamNames?: string[];
    /**
     * Type, divided into two categories: live and vod.Note: This field may return null, indicating that no valid value is available.
     */
    readonly types?: string[];
}
/**
 * Use this data source to query detailed information of css xp2pDetailInfoList
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const xp2pDetailInfoList = tencentcloud.Css.getXp2pDetailInfoList({
 *     queryTime: "2023-11-01T14:55:01+08:00",
 *     types: ["live"],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getXp2pDetailInfoListOutput(args?: GetXp2pDetailInfoListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetXp2pDetailInfoListResult> {
    return pulumi.output(args).apply((a: any) => getXp2pDetailInfoList(a, opts))
}

/**
 * A collection of arguments for invoking getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListOutputArgs {
    /**
     * The dimension parameter can be used to specify the dimension for the query. If this parameter is not passed, the query will default to stream-level data. If you pass this parameter, it will only retrieve data for the specified dimension. The available dimension currently supported is AppId dimension, which allows you to query data based on the application ID. Please note that the returned fields will be related to the specified dimension.
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The UTC minute granularity query time for querying usage data for a specific minute is in the format: yyyy-mm-ddTHH:MM:00Z. Please refer to the link https://cloud.tencent.com/document/product/266/11732#I.For example, if the local time is 2019-01-08 10:00:00 in Beijing, the corresponding UTC time would be 2019-01-08T10:00:00+08:00.This query supports data from the past six months.
     */
    queryTime?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * The stream array can be used to specify the streams to be queried. If no stream is specified, the query will include all streams by default.
     */
    streamNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type array can be used to specify the type of media content to be queried. The two available options are live for live streaming and vod for video on demand. If no type is specified, the query will include both live and VOD content by default.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
