// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dnspod domainList
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const domainList = tencentcloud.Dnspod.getDomainList({
 *     groupIds: [1],
 *     keyword: "",
 *     packages: [""],
 *     projectId: -1,
 *     recordCountBegin: 0,
 *     recordCountEnd: 100,
 *     remark: "",
 *     sortField: "UPDATED_ON",
 *     sortType: "DESC",
 *     statuses: ["PAUSE"],
 *     tags: [{
 *         tagKey: "created_by",
 *         tagValues: ["terraform"],
 *     }],
 *     type: "ALL",
 *     updatedAtBegin: "2021-05-01 03:00:00",
 *     updatedAtEnd: "2024-05-10 20:00:00",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomainList(args: GetDomainListArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Dnspod/getDomainList:getDomainList", {
        "groupIds": args.groupIds,
        "keyword": args.keyword,
        "packages": args.packages,
        "projectId": args.projectId,
        "recordCountBegin": args.recordCountBegin,
        "recordCountEnd": args.recordCountEnd,
        "remark": args.remark,
        "resultOutputFile": args.resultOutputFile,
        "sortField": args.sortField,
        "sortType": args.sortType,
        "statuses": args.statuses,
        "tags": args.tags,
        "type": args.type,
        "updatedAtBegin": args.updatedAtBegin,
        "updatedAtEnd": args.updatedAtEnd,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainList.
 */
export interface GetDomainListArgs {
    /**
     * Get domain names based on domain group id, which can be obtained through the GroupId field in DescribeDomain or DescribeDomainList interface.
     */
    groupIds?: number[];
    /**
     * Get domain names based on keywords.
     */
    keyword?: string;
    /**
     * Get domain names based on the package, which can be obtained through the Grade field in DescribeDomain or DescribeDomainList interface.
     */
    packages?: string[];
    /**
     * Project ID.
     */
    projectId?: number;
    /**
     * The start point of the domain name&amp;#39;s record count query range.
     */
    recordCountBegin?: number;
    /**
     * The end point of the domain name&amp;#39;s record count query range.
     */
    recordCountEnd?: number;
    /**
     * Get domain names based on remark information.
     */
    remark?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Sorting field. Available values are NAME, STATUS, RECORDS, GRADE, UPDATED_ON. NAME: Domain name STATUS: Domain status RECORDS: Number of records GRADE: Package level UPDATED_ON: Update time.
     */
    sortField?: string;
    /**
     * Sorting type, ascending: ASC, descending: DESC.
     */
    sortType?: string;
    /**
     * Get domain names based on domain status. Available values are ENABLE, LOCK, PAUSE, SPAM. ENABLE: Normal LOCK: Locked PAUSE: Paused SPAM: Banned.
     */
    statuses?: string[];
    /**
     * Tag description list.
     */
    tags?: inputs.Dnspod.GetDomainListTag[];
    /**
     * Get domain names based on domain group type. Available values are ALL, MINE, SHARE, RECENT. ALL: All MINE: My domain names SHARE: Domain names shared with me RECENT: Recently operated domain names.
     */
    type: string;
    /**
     * The start time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-01 03:00:00&amp;#39;.
     */
    updatedAtBegin?: string;
    /**
     * The end time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-10 20:00:00&amp;#39;.
     */
    updatedAtEnd?: string;
}

/**
 * A collection of values returned by getDomainList.
 */
export interface GetDomainListResult {
    /**
     * Domain list.
     */
    readonly domainLists: outputs.Dnspod.GetDomainListDomainList[];
    /**
     * Group Id the domain belongs to.
     */
    readonly groupIds?: number[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyword?: string;
    readonly packages?: string[];
    readonly projectId?: number;
    readonly recordCountBegin?: number;
    readonly recordCountEnd?: number;
    /**
     * Domain remark description.
     */
    readonly remark?: string;
    readonly resultOutputFile?: string;
    readonly sortField?: string;
    readonly sortType?: string;
    /**
     * Domain status, normal: ENABLE, paused: PAUSE, banned: SPAM.
     */
    readonly statuses?: string[];
    readonly tags?: outputs.Dnspod.GetDomainListTag[];
    readonly type: string;
    readonly updatedAtBegin?: string;
    readonly updatedAtEnd?: string;
}
/**
 * Use this data source to query detailed information of dnspod domainList
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const domainList = tencentcloud.Dnspod.getDomainList({
 *     groupIds: [1],
 *     keyword: "",
 *     packages: [""],
 *     projectId: -1,
 *     recordCountBegin: 0,
 *     recordCountEnd: 100,
 *     remark: "",
 *     sortField: "UPDATED_ON",
 *     sortType: "DESC",
 *     statuses: ["PAUSE"],
 *     tags: [{
 *         tagKey: "created_by",
 *         tagValues: ["terraform"],
 *     }],
 *     type: "ALL",
 *     updatedAtBegin: "2021-05-01 03:00:00",
 *     updatedAtEnd: "2024-05-10 20:00:00",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomainListOutput(args: GetDomainListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainListResult> {
    return pulumi.output(args).apply((a: any) => getDomainList(a, opts))
}

/**
 * A collection of arguments for invoking getDomainList.
 */
export interface GetDomainListOutputArgs {
    /**
     * Get domain names based on domain group id, which can be obtained through the GroupId field in DescribeDomain or DescribeDomainList interface.
     */
    groupIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Get domain names based on keywords.
     */
    keyword?: pulumi.Input<string>;
    /**
     * Get domain names based on the package, which can be obtained through the Grade field in DescribeDomain or DescribeDomainList interface.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Project ID.
     */
    projectId?: pulumi.Input<number>;
    /**
     * The start point of the domain name&amp;#39;s record count query range.
     */
    recordCountBegin?: pulumi.Input<number>;
    /**
     * The end point of the domain name&amp;#39;s record count query range.
     */
    recordCountEnd?: pulumi.Input<number>;
    /**
     * Get domain names based on remark information.
     */
    remark?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Sorting field. Available values are NAME, STATUS, RECORDS, GRADE, UPDATED_ON. NAME: Domain name STATUS: Domain status RECORDS: Number of records GRADE: Package level UPDATED_ON: Update time.
     */
    sortField?: pulumi.Input<string>;
    /**
     * Sorting type, ascending: ASC, descending: DESC.
     */
    sortType?: pulumi.Input<string>;
    /**
     * Get domain names based on domain status. Available values are ENABLE, LOCK, PAUSE, SPAM. ENABLE: Normal LOCK: Locked PAUSE: Paused SPAM: Banned.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Dnspod.GetDomainListTagArgs>[]>;
    /**
     * Get domain names based on domain group type. Available values are ALL, MINE, SHARE, RECENT. ALL: All MINE: My domain names SHARE: Domain names shared with me RECENT: Recently operated domain names.
     */
    type: pulumi.Input<string>;
    /**
     * The start time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-01 03:00:00&amp;#39;.
     */
    updatedAtBegin?: pulumi.Input<string>;
    /**
     * The end time of the domain name&amp;#39;s update time to be obtained, such as &amp;#39;2021-05-10 20:00:00&amp;#39;.
     */
    updatedAtEnd?: pulumi.Input<string>;
}
