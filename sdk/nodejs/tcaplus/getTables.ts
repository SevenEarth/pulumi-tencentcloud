// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query TcaplusDB tables.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const nullTables = pulumi.output(tencentcloud.Tcaplus.getTables({
 *     clusterId: "19162256624",
 * }));
 * const tablegroup = pulumi.output(tencentcloud.Tcaplus.getTables({
 *     clusterId: "19162256624",
 *     tablegroupId: "19162256624:3",
 * }));
 * const name = pulumi.output(tencentcloud.Tcaplus.getTables({
 *     clusterId: "19162256624",
 *     tableName: "guagua",
 *     tablegroupId: "19162256624:3",
 * }));
 * const id = pulumi.output(tencentcloud.Tcaplus.getTables({
 *     clusterId: "19162256624",
 *     tableId: "tcaplus-faa65eb7",
 * }));
 * const all = pulumi.output(tencentcloud.Tcaplus.getTables({
 *     clusterId: "19162256624",
 *     tableId: "tcaplus-faa65eb7",
 *     tableName: "guagua",
 *     tablegroupId: "19162256624:3",
 * }));
 * ```
 */
export function getTables(args: GetTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetTablesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tcaplus/getTables:getTables", {
        "clusterId": args.clusterId,
        "resultOutputFile": args.resultOutputFile,
        "tableId": args.tableId,
        "tableName": args.tableName,
        "tablegroupId": args.tablegroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTables.
 */
export interface GetTablesArgs {
    /**
     * ID of the TcaplusDB cluster to be query.
     */
    clusterId: string;
    /**
     * File for saving results.
     */
    resultOutputFile?: string;
    /**
     * Table ID to be query.
     */
    tableId?: string;
    /**
     * Table name to be query.
     */
    tableName?: string;
    /**
     * ID of the table group to be query.
     */
    tablegroupId?: string;
}

/**
 * A collection of values returned by getTables.
 */
export interface GetTablesResult {
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of TcaplusDB tables. Each element contains the following attributes.
     */
    readonly lists: outputs.Tcaplus.GetTablesList[];
    readonly resultOutputFile?: string;
    /**
     * ID of the TcaplusDB table.
     */
    readonly tableId?: string;
    /**
     * Name of the TcaplusDB table.
     */
    readonly tableName?: string;
    /**
     * Table group id of the TcaplusDB table.
     */
    readonly tablegroupId?: string;
}

export function getTablesOutput(args: GetTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTablesResult> {
    return pulumi.output(args).apply(a => getTables(a, opts))
}

/**
 * A collection of arguments for invoking getTables.
 */
export interface GetTablesOutputArgs {
    /**
     * ID of the TcaplusDB cluster to be query.
     */
    clusterId: pulumi.Input<string>;
    /**
     * File for saving results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Table ID to be query.
     */
    tableId?: pulumi.Input<string>;
    /**
     * Table name to be query.
     */
    tableName?: pulumi.Input<string>;
    /**
     * ID of the table group to be query.
     */
    tablegroupId?: pulumi.Input<string>;
}
