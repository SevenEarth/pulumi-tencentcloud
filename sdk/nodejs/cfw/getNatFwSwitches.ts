// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cfw natFwSwitches
 *
 * ## Example Usage
 * ### Query Nat instance'switch by instance id
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.Cfw.getNatFwSwitches({
 *     natInsId: "cfwnat-18d2ba18",
 * }));
 * ```
 * ### Or filter by switch status
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = pulumi.output(tencentcloud.Cfw.getNatFwSwitches({
 *     natInsId: "cfwnat-18d2ba18",
 *     status: 1,
 * }));
 * ```
 */
export function getNatFwSwitches(args?: GetNatFwSwitchesArgs, opts?: pulumi.InvokeOptions): Promise<GetNatFwSwitchesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cfw/getNatFwSwitches:getNatFwSwitches", {
        "natInsId": args.natInsId,
        "resultOutputFile": args.resultOutputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getNatFwSwitches.
 */
export interface GetNatFwSwitchesArgs {
    /**
     * Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
     */
    natInsId?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Switch status, 1 open; 0 close.
     */
    status?: number;
}

/**
 * A collection of values returned by getNatFwSwitches.
 */
export interface GetNatFwSwitchesResult {
    /**
     * NAT border firewall switch list data.
     */
    readonly datas: outputs.Cfw.GetNatFwSwitchesData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * NAT firewall instance Id.
     */
    readonly natInsId?: string;
    readonly resultOutputFile?: string;
    /**
     * Switch status.
     */
    readonly status?: number;
}

export function getNatFwSwitchesOutput(args?: GetNatFwSwitchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatFwSwitchesResult> {
    return pulumi.output(args).apply(a => getNatFwSwitches(a, opts))
}

/**
 * A collection of arguments for invoking getNatFwSwitches.
 */
export interface GetNatFwSwitchesOutputArgs {
    /**
     * Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
     */
    natInsId?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Switch status, 1 open; 0 close.
     */
    status?: pulumi.Input<number>;
}
