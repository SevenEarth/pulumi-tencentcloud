// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of SSM secret version
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = pulumi.output(tencentcloud.Ssm.getSecretVersions({
 *     secretName: "test",
 *     versionId: "v1",
 * }));
 * ```
 */
export function getSecretVersions(args: GetSecretVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretVersionsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Ssm/getSecretVersions:getSecretVersions", {
        "resultOutputFile": args.resultOutputFile,
        "secretName": args.secretName,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretVersions.
 */
export interface GetSecretVersionsArgs {
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Secret name used to filter result.
     */
    secretName: string;
    /**
     * VersionId used to filter result.
     */
    versionId?: string;
}

/**
 * A collection of values returned by getSecretVersions.
 */
export interface GetSecretVersionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly secretName: string;
    /**
     * A list of SSM secret versions. When secret status is `Disabled`, this field will not update anymore.
     */
    readonly secretVersionLists: outputs.Ssm.GetSecretVersionsSecretVersionList[];
    /**
     * Version of secret.
     */
    readonly versionId?: string;
}

export function getSecretVersionsOutput(args: GetSecretVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretVersionsResult> {
    return pulumi.output(args).apply(a => getSecretVersions(a, opts))
}

/**
 * A collection of arguments for invoking getSecretVersions.
 */
export interface GetSecretVersionsOutputArgs {
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Secret name used to filter result.
     */
    secretName: pulumi.Input<string>;
    /**
     * VersionId used to filter result.
     */
    versionId?: pulumi.Input<string>;
}
