// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of SSM secret
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const exampleSecret = new tencentcloud.ssm.Secret("exampleSecret", {
 *     secretName: "tf_example",
 *     description: "desc.",
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * const exampleSecrets = exampleSecret.secretName.apply(secretName => tencentcloud.Ssm.getSecretsOutput({
 *     secretName: secretName,
 *     state: 1,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### OR you can filter by tags
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Ssm.getSecrets({
 *     secretName: tencentcloud_ssm_secret.example.secret_name,
 *     state: 1,
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecrets(args?: GetSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ssm/getSecrets:getSecrets", {
        "orderType": args.orderType,
        "productName": args.productName,
        "resultOutputFile": args.resultOutputFile,
        "secretName": args.secretName,
        "secretType": args.secretType,
        "state": args.state,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsArgs {
    /**
     * The order to sort the create time of secret. `0` - desc, `1` - asc. Default value is `0`.
     */
    orderType?: number;
    /**
     * This parameter only takes effect when the SecretType parameter value is 1. When the SecretType value is 1, if the Product Name value is empty, it means to query all types of cloud product credentials. If the Product Name value is MySQL, it means to query MySQL database credentials. If the Product Name value is Tdsql mysql, it means to query Tdsql (MySQL version) credentials.
     */
    productName?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Secret name used to filter result.
     */
    secretName?: string;
    /**
     * 0- represents user-defined credentials, defaults to 0. 1- represents the user's cloud product credentials. 2- represents SSH key pair credentials. 3- represents cloud API key pair credentials.
     */
    secretType?: number;
    /**
     * Filter by state of secret. `0` - all secrets are queried, `1` - only Enabled secrets are queried, `2` - only Disabled secrets are queried, `3` - only PendingDelete secrets are queried.
     */
    state?: number;
    /**
     * Tags to filter secret.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getSecrets.
 */
export interface GetSecretsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orderType?: number;
    /**
     * Cloud product name, only effective when SecretType is 1, which means the credential type is cloud product credential.
     */
    readonly productName?: string;
    readonly resultOutputFile?: string;
    /**
     * A list of SSM secrets.
     */
    readonly secretLists: outputs.Ssm.GetSecretsSecretList[];
    /**
     * Name of secret.
     */
    readonly secretName?: string;
    /**
     * 0- User defined credentials; 1- Cloud product credentials; 2- SSH key pair credentials; 3- Cloud API key pair credentials.
     */
    readonly secretType?: number;
    readonly state?: number;
    readonly tags?: {[key: string]: any};
}
/**
 * Use this data source to query detailed information of SSM secret
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const exampleSecret = new tencentcloud.ssm.Secret("exampleSecret", {
 *     secretName: "tf_example",
 *     description: "desc.",
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * const exampleSecrets = exampleSecret.secretName.apply(secretName => tencentcloud.Ssm.getSecretsOutput({
 *     secretName: secretName,
 *     state: 1,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### OR you can filter by tags
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Ssm.getSecrets({
 *     secretName: tencentcloud_ssm_secret.example.secret_name,
 *     state: 1,
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecretsOutput(args?: GetSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsResult> {
    return pulumi.output(args).apply((a: any) => getSecrets(a, opts))
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsOutputArgs {
    /**
     * The order to sort the create time of secret. `0` - desc, `1` - asc. Default value is `0`.
     */
    orderType?: pulumi.Input<number>;
    /**
     * This parameter only takes effect when the SecretType parameter value is 1. When the SecretType value is 1, if the Product Name value is empty, it means to query all types of cloud product credentials. If the Product Name value is MySQL, it means to query MySQL database credentials. If the Product Name value is Tdsql mysql, it means to query Tdsql (MySQL version) credentials.
     */
    productName?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Secret name used to filter result.
     */
    secretName?: pulumi.Input<string>;
    /**
     * 0- represents user-defined credentials, defaults to 0. 1- represents the user's cloud product credentials. 2- represents SSH key pair credentials. 3- represents cloud API key pair credentials.
     */
    secretType?: pulumi.Input<number>;
    /**
     * Filter by state of secret. `0` - all secrets are queried, `1` - only Enabled secrets are queried, `2` - only Disabled secrets are queried, `3` - only PendingDelete secrets are queried.
     */
    state?: pulumi.Input<number>;
    /**
     * Tags to filter secret.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
