// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function availabilityRegions(args?: AvailabilityRegionsArgs, opts?: pulumi.InvokeOptions): Promise<AvailabilityRegionsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Api/availabilityRegions:AvailabilityRegions", {
        "includeUnavailable": args.includeUnavailable,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking AvailabilityRegions.
 */
export interface AvailabilityRegionsArgs {
    includeUnavailable?: boolean;
    name?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by AvailabilityRegions.
 */
export interface AvailabilityRegionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeUnavailable?: boolean;
    readonly name?: string;
    readonly regions: outputs.Api.AvailabilityRegionsRegion[];
    readonly resultOutputFile?: string;
}

export function availabilityRegionsOutput(args?: AvailabilityRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AvailabilityRegionsResult> {
    return pulumi.output(args).apply(a => availabilityRegions(a, opts))
}

/**
 * A collection of arguments for invoking AvailabilityRegions.
 */
export interface AvailabilityRegionsOutputArgs {
    includeUnavailable?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
