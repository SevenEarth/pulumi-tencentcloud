// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ses receivers
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const receivers = pulumi.output(tencentcloud.Ses.getReceivers({
 *     keyWord: "keep",
 *     status: 3,
 * }));
 * ```
 */
export function getReceivers(args?: GetReceiversArgs, opts?: pulumi.InvokeOptions): Promise<GetReceiversResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Ses/getReceivers:getReceivers", {
        "keyWord": args.keyWord,
        "resultOutputFile": args.resultOutputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getReceivers.
 */
export interface GetReceiversArgs {
    /**
     * Group name keyword for fuzzy query.
     */
    keyWord?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Group status (`1`: to be uploaded; `2`: uploading; `3`: uploaded). To query groups in all states, do not pass in this parameter.
     */
    status?: number;
}

/**
 * A collection of values returned by getReceivers.
 */
export interface GetReceiversResult {
    /**
     * Data record.
     */
    readonly datas: outputs.Ses.GetReceiversData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyWord?: string;
    readonly resultOutputFile?: string;
    readonly status?: number;
}

export function getReceiversOutput(args?: GetReceiversOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReceiversResult> {
    return pulumi.output(args).apply(a => getReceivers(a, opts))
}

/**
 * A collection of arguments for invoking getReceivers.
 */
export interface GetReceiversOutputArgs {
    /**
     * Group name keyword for fuzzy query.
     */
    keyWord?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Group status (`1`: to be uploaded; `2`: uploading; `3`: uploaded). To query groups in all states, do not pass in this parameter.
     */
    status?: pulumi.Input<number>;
}
