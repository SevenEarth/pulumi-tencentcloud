// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of direct connect gateway route entries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const main = new tencentcloud.ccn.Instance("main", {
 *     description: "ci-temp-test-ccn-des",
 *     qos: "AG",
 * });
 * const ccnMain = new tencentcloud.dc.Gateway("ccnMain", {
 *     networkInstanceId: main.id,
 *     networkType: "CCN",
 *     gatewayType: "NORMAL",
 * });
 * const route1 = new tencentcloud.dc.GatewayCcnRoute("route1", {
 *     dcgId: ccnMain.id,
 *     cidrBlock: "10.1.1.0/32",
 * });
 * const route2 = new tencentcloud.dc.GatewayCcnRoute("route2", {
 *     dcgId: ccnMain.id,
 *     cidrBlock: "192.1.1.0/32",
 * });
 * const test = tencentcloud.Dc.getGatewayCcnRoutesOutput({
 *     dcgId: ccnMain.id,
 * });
 * ```
 */
export function getGatewayCcnRoutes(args: GetGatewayCcnRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayCcnRoutesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Dc/getGatewayCcnRoutes:getGatewayCcnRoutes", {
        "dcgId": args.dcgId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayCcnRoutes.
 */
export interface GetGatewayCcnRoutesArgs {
    /**
     * ID of the DCG to be queried.
     */
    dcgId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getGatewayCcnRoutes.
 */
export interface GetGatewayCcnRoutesResult {
    /**
     * ID of the DCG.
     */
    readonly dcgId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Information list of the DCG route entries.
     */
    readonly instanceLists: outputs.Dc.GetGatewayCcnRoutesInstanceList[];
    readonly resultOutputFile?: string;
}

export function getGatewayCcnRoutesOutput(args: GetGatewayCcnRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayCcnRoutesResult> {
    return pulumi.output(args).apply(a => getGatewayCcnRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayCcnRoutes.
 */
export interface GetGatewayCcnRoutesOutputArgs {
    /**
     * ID of the DCG to be queried.
     */
    dcgId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
