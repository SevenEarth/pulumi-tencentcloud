// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dc publicDirectConnectTunnelRoutes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const publicDirectConnectTunnelRoutes = pulumi.output(tencentcloud.Dc.getPublicDirectConnectTunnelRoutes({
 *     directConnectTunnelId: "dcx-4z49tnws",
 * }));
 * ```
 */
export function getPublicDirectConnectTunnelRoutes(args: GetPublicDirectConnectTunnelRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicDirectConnectTunnelRoutesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Dc/getPublicDirectConnectTunnelRoutes:getPublicDirectConnectTunnelRoutes", {
        "directConnectTunnelId": args.directConnectTunnelId,
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublicDirectConnectTunnelRoutes.
 */
export interface GetPublicDirectConnectTunnelRoutesArgs {
    /**
     * direct connect tunnel id.
     */
    directConnectTunnelId: string;
    /**
     * filter condition: route-type: route type, value: BGP/STATIC route-subnet: route cidr, value such as: 192.68.1.0/24.
     */
    filters?: inputs.Dc.GetPublicDirectConnectTunnelRoutesFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getPublicDirectConnectTunnelRoutes.
 */
export interface GetPublicDirectConnectTunnelRoutesResult {
    readonly directConnectTunnelId: string;
    readonly filters?: outputs.Dc.GetPublicDirectConnectTunnelRoutesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    /**
     * Internet tunnel route list.
     */
    readonly routes: outputs.Dc.GetPublicDirectConnectTunnelRoutesRoute[];
}

export function getPublicDirectConnectTunnelRoutesOutput(args: GetPublicDirectConnectTunnelRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicDirectConnectTunnelRoutesResult> {
    return pulumi.output(args).apply(a => getPublicDirectConnectTunnelRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getPublicDirectConnectTunnelRoutes.
 */
export interface GetPublicDirectConnectTunnelRoutesOutputArgs {
    /**
     * direct connect tunnel id.
     */
    directConnectTunnelId: pulumi.Input<string>;
    /**
     * filter condition: route-type: route type, value: BGP/STATIC route-subnet: route cidr, value such as: 192.68.1.0/24.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Dc.GetPublicDirectConnectTunnelRoutesFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
