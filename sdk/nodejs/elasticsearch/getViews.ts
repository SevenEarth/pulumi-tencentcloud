// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of elasticsearch views
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const views = pulumi.output(tencentcloud.Elasticsearch.getViews({
 *     instanceId: "es-xxxxxx",
 * }));
 * ```
 */
export function getViews(args: GetViewsArgs, opts?: pulumi.InvokeOptions): Promise<GetViewsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Elasticsearch/getViews:getViews", {
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getViews.
 */
export interface GetViewsArgs {
    /**
     * Instance id.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getViews.
 */
export interface GetViewsResult {
    /**
     * Cluster view.
     */
    readonly clusterViews: outputs.Elasticsearch.GetViewsClusterView[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Kibanas view.
     */
    readonly kibanasViews: outputs.Elasticsearch.GetViewsKibanasView[];
    /**
     * Node View.
     */
    readonly nodesViews: outputs.Elasticsearch.GetViewsNodesView[];
    readonly resultOutputFile?: string;
}

export function getViewsOutput(args: GetViewsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetViewsResult> {
    return pulumi.output(args).apply(a => getViews(a, opts))
}

/**
 * A collection of arguments for invoking getViews.
 */
export interface GetViewsOutputArgs {
    /**
     * Instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
