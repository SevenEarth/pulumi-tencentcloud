// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query elasticsearch instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = pulumi.output(tencentcloud.Elasticsearch.getInstances({
 *     instanceId: "es-17634f05",
 * }));
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Elasticsearch/getInstances:getInstances", {
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * ID of the instance to be queried.
     */
    instanceId?: string;
    /**
     * Name of the instance to be queried.
     */
    instanceName?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Tag of the instance to be queried.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the instance.
     */
    readonly instanceId?: string;
    /**
     * An information list of elasticsearch instance. Each element contains the following attributes:
     */
    readonly instanceLists: outputs.Elasticsearch.GetInstancesInstanceList[];
    /**
     * Name of the instance.
     */
    readonly instanceName?: string;
    readonly resultOutputFile?: string;
    /**
     * A mapping of tags to assign to the instance.
     */
    readonly tags?: {[key: string]: any};
}

export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply(a => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * ID of the instance to be queried.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Name of the instance to be queried.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Tag of the instance to be queried.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
