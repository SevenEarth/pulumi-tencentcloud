// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of elasticsearch logstashInstanceLogs
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const logstashInstanceLogs = pulumi.output(tencentcloud.Elasticsearch.getLogstashInstanceLogs({
 *     endTime: "2023-10-31 10:30:10",
 *     instanceId: "ls-xxxxxx",
 *     logType: 1,
 *     startTime: "2023-10-31 10:30:00",
 * }));
 * ```
 */
export function getLogstashInstanceLogs(args: GetLogstashInstanceLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetLogstashInstanceLogsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Elasticsearch/getLogstashInstanceLogs:getLogstashInstanceLogs", {
        "endTime": args.endTime,
        "instanceId": args.instanceId,
        "logType": args.logType,
        "orderByType": args.orderByType,
        "resultOutputFile": args.resultOutputFile,
        "searchKey": args.searchKey,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogstashInstanceLogs.
 */
export interface GetLogstashInstanceLogsArgs {
    /**
     * Log end time, in YYYY-MM-DD HH:MM:SS format, such as 2019-01-22 20:15:53.
     */
    endTime?: string;
    /**
     * Instance id.
     */
    instanceId: string;
    /**
     * Log type. Default 1, Valid values:
     * - 1: Main Log
     * - 2: Slow log
     * - 3: GC Log.
     */
    logType: number;
    /**
     * Time sort method. Default is 0. 0: descending; 1: ascending order.
     */
    orderByType?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Search terms, support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
     */
    searchKey?: string;
    /**
     * Log start time, in YYYY-MM-DD HH:MM:SS format, such as 2019-01-22 20:15:53.
     */
    startTime?: string;
}

/**
 * A collection of values returned by getLogstashInstanceLogs.
 */
export interface GetLogstashInstanceLogsResult {
    readonly endTime?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * List of log details.
     */
    readonly instanceLogLists: outputs.Elasticsearch.GetLogstashInstanceLogsInstanceLogList[];
    readonly logType: number;
    readonly orderByType?: number;
    readonly resultOutputFile?: string;
    readonly searchKey?: string;
    readonly startTime?: string;
}

export function getLogstashInstanceLogsOutput(args: GetLogstashInstanceLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogstashInstanceLogsResult> {
    return pulumi.output(args).apply(a => getLogstashInstanceLogs(a, opts))
}

/**
 * A collection of arguments for invoking getLogstashInstanceLogs.
 */
export interface GetLogstashInstanceLogsOutputArgs {
    /**
     * Log end time, in YYYY-MM-DD HH:MM:SS format, such as 2019-01-22 20:15:53.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Log type. Default 1, Valid values:
     * - 1: Main Log
     * - 2: Slow log
     * - 3: GC Log.
     */
    logType: pulumi.Input<number>;
    /**
     * Time sort method. Default is 0. 0: descending; 1: ascending order.
     */
    orderByType?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Search terms, support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
     */
    searchKey?: pulumi.Input<string>;
    /**
     * Log start time, in YYYY-MM-DD HH:MM:SS format, such as 2019-01-22 20:15:53.
     */
    startTime?: pulumi.Input<string>;
}
