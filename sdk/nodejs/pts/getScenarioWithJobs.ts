// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of pts scenarioWithJobs
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const scenarioWithJobs = tencentcloud.Pts.getScenarioWithJobs({
 *     ascend: true,
 *     ignoreDataset: true,
 *     ignoreScript: true,
 *     projectIds: ["project-45vw7v82"],
 *     scenarioIds: ["scenario-koakp3h6"],
 *     scenarioName: "pts-jmeter",
 *     scenarioType: "pts-jmeter",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getScenarioWithJobs(args: GetScenarioWithJobsArgs, opts?: pulumi.InvokeOptions): Promise<GetScenarioWithJobsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Pts/getScenarioWithJobs:getScenarioWithJobs", {
        "ascend": args.ascend,
        "ignoreDataset": args.ignoreDataset,
        "ignoreScript": args.ignoreScript,
        "orderBy": args.orderBy,
        "owner": args.owner,
        "projectIds": args.projectIds,
        "resultOutputFile": args.resultOutputFile,
        "scenarioIds": args.scenarioIds,
        "scenarioName": args.scenarioName,
        "scenarioType": args.scenarioType,
    }, opts);
}

/**
 * A collection of arguments for invoking getScenarioWithJobs.
 */
export interface GetScenarioWithJobsArgs {
    /**
     * Whether to use ascending order.
     */
    ascend?: boolean;
    /**
     * Whether to ignore the dataset.
     */
    ignoreDataset?: boolean;
    /**
     * Whether to ignore the script content.
     */
    ignoreScript?: boolean;
    /**
     * The field column used for ordering.
     */
    orderBy?: string;
    /**
     * The job owner.
     */
    owner?: string;
    /**
     * Project ID list.
     */
    projectIds: string[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Scenario ID list.
     */
    scenarioIds?: string[];
    /**
     * Scenario name.
     */
    scenarioName?: string;
    /**
     * Scenario type, e.g.: pts-http, pts-js, pts-trpc, pts-jmeter.
     */
    scenarioType?: string;
}

/**
 * A collection of values returned by getScenarioWithJobs.
 */
export interface GetScenarioWithJobsResult {
    readonly ascend?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ignoreDataset?: boolean;
    readonly ignoreScript?: boolean;
    readonly orderBy?: string;
    /**
     * The owner.
     */
    readonly owner?: string;
    readonly projectIds: string[];
    readonly resultOutputFile?: string;
    readonly scenarioIds?: string[];
    /**
     * Scenario name.
     */
    readonly scenarioName?: string;
    readonly scenarioType?: string;
    /**
     * The scenario configuration and its jobs.
     */
    readonly scenarioWithJobsSets: outputs.Pts.GetScenarioWithJobsScenarioWithJobsSet[];
}
/**
 * Use this data source to query detailed information of pts scenarioWithJobs
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const scenarioWithJobs = tencentcloud.Pts.getScenarioWithJobs({
 *     ascend: true,
 *     ignoreDataset: true,
 *     ignoreScript: true,
 *     projectIds: ["project-45vw7v82"],
 *     scenarioIds: ["scenario-koakp3h6"],
 *     scenarioName: "pts-jmeter",
 *     scenarioType: "pts-jmeter",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getScenarioWithJobsOutput(args: GetScenarioWithJobsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScenarioWithJobsResult> {
    return pulumi.output(args).apply((a: any) => getScenarioWithJobs(a, opts))
}

/**
 * A collection of arguments for invoking getScenarioWithJobs.
 */
export interface GetScenarioWithJobsOutputArgs {
    /**
     * Whether to use ascending order.
     */
    ascend?: pulumi.Input<boolean>;
    /**
     * Whether to ignore the dataset.
     */
    ignoreDataset?: pulumi.Input<boolean>;
    /**
     * Whether to ignore the script content.
     */
    ignoreScript?: pulumi.Input<boolean>;
    /**
     * The field column used for ordering.
     */
    orderBy?: pulumi.Input<string>;
    /**
     * The job owner.
     */
    owner?: pulumi.Input<string>;
    /**
     * Project ID list.
     */
    projectIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Scenario ID list.
     */
    scenarioIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Scenario name.
     */
    scenarioName?: pulumi.Input<string>;
    /**
     * Scenario type, e.g.: pts-http, pts-js, pts-trpc, pts-jmeter.
     */
    scenarioType?: pulumi.Input<string>;
}
