// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query the COS bucket multipart uploads.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const cosBucketMultipartUploads = pulumi.output(tencentcloud.Cos.getBucketMultipartUploads({
 *     bucket: "xxxxxx",
 * }));
 * ```
 */
export function getBucketMultipartUploads(args: GetBucketMultipartUploadsArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketMultipartUploadsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cos/getBucketMultipartUploads:getBucketMultipartUploads", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "prefix": args.prefix,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getBucketMultipartUploads.
 */
export interface GetBucketMultipartUploadsArgs {
    /**
     * Bucket.
     */
    bucket: string;
    /**
     * The delimiter is a symbol, and the Object name contains the Object between the specified prefix and the first occurrence of delimiter characters as a set of elements: common prefix. If there is no prefix, start from the beginning of the path.
     */
    delimiter?: string;
    /**
     * Specifies the encoding format of the return value. Legal value: url.
     */
    encodingType?: string;
    /**
     * The returned Object key must be prefixed with Prefix. Note that when using the prefix query, the returned key still contains Prefix.
     */
    prefix?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getBucketMultipartUploads.
 */
export interface GetBucketMultipartUploadsResult {
    readonly bucket: string;
    readonly delimiter?: string;
    readonly encodingType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly prefix?: string;
    readonly resultOutputFile?: string;
    /**
     * Information for each Upload.
     */
    readonly uploads: outputs.Cos.GetBucketMultipartUploadsUpload[];
}

export function getBucketMultipartUploadsOutput(args: GetBucketMultipartUploadsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketMultipartUploadsResult> {
    return pulumi.output(args).apply(a => getBucketMultipartUploads(a, opts))
}

/**
 * A collection of arguments for invoking getBucketMultipartUploads.
 */
export interface GetBucketMultipartUploadsOutputArgs {
    /**
     * Bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * The delimiter is a symbol, and the Object name contains the Object between the specified prefix and the first occurrence of delimiter characters as a set of elements: common prefix. If there is no prefix, start from the beginning of the path.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * Specifies the encoding format of the return value. Legal value: url.
     */
    encodingType?: pulumi.Input<string>;
    /**
     * The returned Object key must be prefixed with Prefix. Note that when using the prefix query, the returned key still contains Prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
