// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query the COS buckets of the current Tencent Cloud user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const cosBuckets = pulumi.output(tencentcloud.Cos.getBuckets({
 *     bucketPrefix: "tf-bucket-",
 *     resultOutputFile: "mytestpath",
 * }));
 * ```
 */
export function getBuckets(args?: GetBucketsArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cos/getBuckets:getBuckets", {
        "bucketPrefix": args.bucketPrefix,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getBuckets.
 */
export interface GetBucketsArgs {
    /**
     * A prefix string to filter results by bucket name.
     */
    bucketPrefix?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Tags to filter bucket.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getBuckets.
 */
export interface GetBucketsResult {
    /**
     * A list of bucket. Each element contains the following attributes:
     */
    readonly bucketLists: outputs.Cos.GetBucketsBucketList[];
    readonly bucketPrefix?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    /**
     * The tags of a bucket.
     */
    readonly tags?: {[key: string]: any};
}

export function getBucketsOutput(args?: GetBucketsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketsResult> {
    return pulumi.output(args).apply(a => getBuckets(a, opts))
}

/**
 * A collection of arguments for invoking getBuckets.
 */
export interface GetBucketsOutputArgs {
    /**
     * A prefix string to filter results by bucket name.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Tags to filter bucket.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
