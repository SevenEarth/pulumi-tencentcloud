// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tdmq publishers
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const publishers = pulumi.output(tencentcloud.Tdmq.getPublishers({
 *     clusterId: "pulsar-9n95ax58b9vn",
 *     filters: [{
 *         name: "ProducerName",
 *         values: ["test"],
 *     }],
 *     namespace: "keep-ns",
 *     sort: {
 *         name: "ProducerName",
 *         order: "DESC",
 *     },
 *     topic: "keep-topic",
 * }));
 * ```
 */
export function getPublishers(args: GetPublishersArgs, opts?: pulumi.InvokeOptions): Promise<GetPublishersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tdmq/getPublishers:getPublishers", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
        "sort": args.sort,
        "topic": args.topic,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublishers.
 */
export interface GetPublishersArgs {
    /**
     * Cluster ID.
     */
    clusterId: string;
    /**
     * Parameter filter, support ProducerName, Address field.
     */
    filters?: inputs.Tdmq.GetPublishersFilter[];
    /**
     * namespace name.
     */
    namespace: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * sorter.
     */
    sort?: inputs.Tdmq.GetPublishersSort;
    /**
     * topic name.
     */
    topic: string;
}

/**
 * A collection of values returned by getPublishers.
 */
export interface GetPublishersResult {
    readonly clusterId: string;
    readonly filters?: outputs.Tdmq.GetPublishersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly namespace: string;
    /**
     * Producer Information ListNote: This field may return null, indicating that no valid value can be obtained.
     */
    readonly publishers: outputs.Tdmq.GetPublishersPublisher[];
    readonly resultOutputFile?: string;
    readonly sort?: outputs.Tdmq.GetPublishersSort;
    readonly topic: string;
}

export function getPublishersOutput(args: GetPublishersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublishersResult> {
    return pulumi.output(args).apply(a => getPublishers(a, opts))
}

/**
 * A collection of arguments for invoking getPublishers.
 */
export interface GetPublishersOutputArgs {
    /**
     * Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Parameter filter, support ProducerName, Address field.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Tdmq.GetPublishersFilterArgs>[]>;
    /**
     * namespace name.
     */
    namespace: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * sorter.
     */
    sort?: pulumi.Input<inputs.Tdmq.GetPublishersSortArgs>;
    /**
     * topic name.
     */
    topic: pulumi.Input<string>;
}
