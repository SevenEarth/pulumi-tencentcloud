// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tdmqRocketmq namespace
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const exampleRocketmqCluster = new tencentcloud.tdmq.RocketmqCluster("exampleRocketmqCluster", {
 *     clusterName: "tf_example",
 *     remark: "remark.",
 * });
 * const exampleRocketmqNamespace = tencentcloud.Tdmq.getRocketmqNamespaceOutput({
 *     clusterId: exampleRocketmqCluster.clusterId,
 *     nameKeyword: exampleTdmq / rocketmqNamespaceRocketmqNamespace.namespaceName,
 * });
 * const exampleTdmq_rocketmqNamespaceRocketmqNamespace = new tencentcloud.tdmq.RocketmqNamespace("exampleTdmq/rocketmqNamespaceRocketmqNamespace", {
 *     clusterId: exampleRocketmqCluster.clusterId,
 *     namespaceName: "tf_example",
 *     remark: "remark.",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRocketmqNamespace(args: GetRocketmqNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRocketmqNamespaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Tdmq/getRocketmqNamespace:getRocketmqNamespace", {
        "clusterId": args.clusterId,
        "nameKeyword": args.nameKeyword,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getRocketmqNamespace.
 */
export interface GetRocketmqNamespaceArgs {
    /**
     * Cluster ID.
     */
    clusterId: string;
    /**
     * Search by name.
     */
    nameKeyword?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getRocketmqNamespace.
 */
export interface GetRocketmqNamespaceResult {
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameKeyword?: string;
    /**
     * List of namespaces.
     */
    readonly namespaces: outputs.Tdmq.GetRocketmqNamespaceNamespace[];
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query detailed information of tdmqRocketmq namespace
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const exampleRocketmqCluster = new tencentcloud.tdmq.RocketmqCluster("exampleRocketmqCluster", {
 *     clusterName: "tf_example",
 *     remark: "remark.",
 * });
 * const exampleRocketmqNamespace = tencentcloud.Tdmq.getRocketmqNamespaceOutput({
 *     clusterId: exampleRocketmqCluster.clusterId,
 *     nameKeyword: exampleTdmq / rocketmqNamespaceRocketmqNamespace.namespaceName,
 * });
 * const exampleTdmq_rocketmqNamespaceRocketmqNamespace = new tencentcloud.tdmq.RocketmqNamespace("exampleTdmq/rocketmqNamespaceRocketmqNamespace", {
 *     clusterId: exampleRocketmqCluster.clusterId,
 *     namespaceName: "tf_example",
 *     remark: "remark.",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRocketmqNamespaceOutput(args: GetRocketmqNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRocketmqNamespaceResult> {
    return pulumi.output(args).apply((a: any) => getRocketmqNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getRocketmqNamespace.
 */
export interface GetRocketmqNamespaceOutputArgs {
    /**
     * Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Search by name.
     */
    nameKeyword?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
