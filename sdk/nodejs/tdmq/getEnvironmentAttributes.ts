// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tdmq environmentAttributes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const exampleInstance = new tencentcloud.tdmq.Instance("exampleInstance", {
 *     clusterName: "tf_example",
 *     remark: "remark.",
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * const exampleNamespace = new tencentcloud.tdmq.Namespace("exampleNamespace", {
 *     environName: "tf_example",
 *     msgTtl: 300,
 *     clusterId: exampleInstance.id,
 *     remark: "remark.",
 * });
 * const exampleEnvironmentAttributes = tencentcloud.Tdmq.getEnvironmentAttributesOutput({
 *     environmentId: exampleNamespace.environName,
 *     clusterId: exampleInstance.id,
 * });
 * ```
 */
export function getEnvironmentAttributes(args: GetEnvironmentAttributesArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentAttributesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tdmq/getEnvironmentAttributes:getEnvironmentAttributes", {
        "clusterId": args.clusterId,
        "environmentId": args.environmentId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironmentAttributes.
 */
export interface GetEnvironmentAttributesArgs {
    /**
     * ID of the Pulsar cluster.
     */
    clusterId?: string;
    /**
     * Environment (namespace) name.
     */
    environmentId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getEnvironmentAttributes.
 */
export interface GetEnvironmentAttributesResult {
    readonly clusterId?: string;
    readonly environmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Expiration time of unconsumed messages, unit second, maximum 1296000 (15 days).
     */
    readonly msgTtl: number;
    /**
     * Consumption rate limit, unit byte/second, 0 unlimited rate.
     */
    readonly rateInByte: number;
    /**
     * Consumption rate limit, unit number/second, 0 is unlimited.
     */
    readonly rateInSize: number;
    /**
     * Remark.
     */
    readonly remark: string;
    /**
     * Duplicate number.
     */
    readonly replicas: number;
    readonly resultOutputFile?: string;
    /**
     * Consumed message storage policy, unit hour, 0 will be deleted immediately after consumption.
     */
    readonly retentionHours: number;
    /**
     * Consumed message storage strategy, unit G, 0 Delete immediately after consumption.
     */
    readonly retentionSize: number;
}

export function getEnvironmentAttributesOutput(args: GetEnvironmentAttributesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentAttributesResult> {
    return pulumi.output(args).apply(a => getEnvironmentAttributes(a, opts))
}

/**
 * A collection of arguments for invoking getEnvironmentAttributes.
 */
export interface GetEnvironmentAttributesOutputArgs {
    /**
     * ID of the Pulsar cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Environment (namespace) name.
     */
    environmentId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
