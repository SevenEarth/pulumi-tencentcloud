// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a redis securityGroupAttachment
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const zone = tencentcloud.Redis.getZoneConfig({
 *     typeId: 7,
 *     region: "ap-guangzhou",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     vpcId: vpc.id,
 *     availabilityZone: zone.then(zone => zone.lists?[2]?.zone),
 *     cidrBlock: "10.0.1.0/24",
 * });
 * const fooGroup = new tencentcloud.security.Group("fooGroup", {});
 * const fooGroupLiteRule = new tencentcloud.security.GroupLiteRule("fooGroupLiteRule", {
 *     securityGroupId: fooGroup.id,
 *     ingresses: [
 *         "ACCEPT#192.168.1.0/24#80#TCP",
 *         "DROP#8.8.8.8#80,90#UDP",
 *         "DROP#0.0.0.0/0#80-90#TCP",
 *     ],
 *     egresses: [
 *         "ACCEPT#192.168.0.0/16#ALL#TCP",
 *         "ACCEPT#10.0.0.0/8#ALL#ICMP",
 *         "DROP#0.0.0.0/0#ALL#ALL",
 *     ],
 * });
 * const fooInstance = new tencentcloud.redis.Instance("fooInstance", {
 *     availabilityZone: zone.then(zone => zone.lists?[2]?.zone),
 *     typeId: zone.then(zone => zone.lists?[2]?.typeId),
 *     password: "test12345789",
 *     memSize: 8192,
 *     redisShardNum: zone.then(zone => zone.lists?[2]?.redisShardNums?[0]),
 *     redisReplicasNum: zone.then(zone => zone.lists?[2]?.redisReplicasNums?[0]),
 *     port: 6379,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     securityGroups: [fooGroup.id],
 * });
 * const instance = new tencentcloud.redis.Instance("instance", {
 *     availabilityZone: zone.then(zone => zone.lists?[2]?.zone),
 *     typeId: zone.then(zone => zone.lists?[2]?.typeId),
 *     password: "test12345789",
 *     memSize: 8192,
 *     redisShardNum: zone.then(zone => zone.lists?[2]?.redisShardNums?[0]),
 *     redisReplicasNum: zone.then(zone => zone.lists?[2]?.redisReplicasNums?[0]),
 *     port: 6379,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     securityGroups: [fooGroup.id],
 * });
 * const replicateAttachment = new tencentcloud.redis.ReplicateAttachment("replicateAttachment", {
 *     groupId: "crs-rpl-orfiwmn5",
 *     masterInstanceId: fooInstance.id,
 *     instanceIds: [instance.id],
 * });
 * ```
 *
 * ## Import
 *
 * redis security_group_attachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Redis/securityGroupAttachment:SecurityGroupAttachment security_group_attachment instance_id#security_group_id
 * ```
 */
export class SecurityGroupAttachment extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupAttachmentState, opts?: pulumi.CustomResourceOptions): SecurityGroupAttachment {
        return new SecurityGroupAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Redis/securityGroupAttachment:SecurityGroupAttachment';

    /**
     * Returns true if the given object is an instance of SecurityGroupAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroupAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroupAttachment.__pulumiType;
    }

    /**
     * Instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Security group ID.
     */
    public readonly securityGroupId!: pulumi.Output<string>;

    /**
     * Create a SecurityGroupAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityGroupAttachmentArgs | SecurityGroupAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityGroupAttachmentState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
        } else {
            const args = argsOrState as SecurityGroupAttachmentArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroupAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityGroupAttachment resources.
 */
export interface SecurityGroupAttachmentState {
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Security group ID.
     */
    securityGroupId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityGroupAttachment resource.
 */
export interface SecurityGroupAttachmentArgs {
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Security group ID.
     */
    securityGroupId: pulumi.Input<string>;
}
