// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cwp machinesSimple
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [
 *         1210293,
 *         1157652,
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by Keyword filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "Keywords",
 *         values: ["tf_example"],
 *     }],
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [0],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by Version filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "Version",
 *         values: ["BASIC_VERSION"],
 *     }],
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [0],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by TagId filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "TagId",
 *         values: ["13771"],
 *     }],
 *     machineRegion: "all-regions",
 *     machineType: "ALL",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMachinesSimple(args: GetMachinesSimpleArgs, opts?: pulumi.InvokeOptions): Promise<GetMachinesSimpleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Cwp/getMachinesSimple:getMachinesSimple", {
        "filters": args.filters,
        "machineRegion": args.machineRegion,
        "machineType": args.machineType,
        "projectIds": args.projectIds,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getMachinesSimple.
 */
export interface GetMachinesSimpleArgs {
    /**
     * filter list.
     */
    filters?: inputs.Cwp.GetMachinesSimpleFilter[];
    /**
     * The area where the machine belongs,Such as: ap-guangzhou, ap-shanghai, all-regions: All server region types.
     */
    machineRegion: string;
    /**
     * Service types. -CVM: Cloud Virtual Machine; -ECM: Edge Computing Machine; -LH: Lighthouse; -Other: Mixed cloud; -ALL: All server types.
     */
    machineType: string;
    /**
     * Project id list.
     */
    projectIds?: number[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMachinesSimple.
 */
export interface GetMachinesSimpleResult {
    readonly filters?: outputs.Cwp.GetMachinesSimpleFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly machineRegion: string;
    /**
     * Service types. -CVM: Cloud Virtual Machine; -ECM: Edge Computing Machine -LH: Lighthouse; -Other: Mixed cloud; -ALL: All server types.
     */
    readonly machineType: string;
    /**
     * Machine list.
     */
    readonly machines: outputs.Cwp.GetMachinesSimpleMachine[];
    readonly projectIds?: number[];
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query detailed information of cwp machinesSimple
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [
 *         1210293,
 *         1157652,
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by Keyword filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "Keywords",
 *         values: ["tf_example"],
 *     }],
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [0],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by Version filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "Version",
 *         values: ["BASIC_VERSION"],
 *     }],
 *     machineRegion: "ap-guangzhou",
 *     machineType: "CVM",
 *     projectIds: [0],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query by TagId filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const example = tencentcloud.Cwp.getMachinesSimple({
 *     filters: [{
 *         exactMatch: true,
 *         name: "TagId",
 *         values: ["13771"],
 *     }],
 *     machineRegion: "all-regions",
 *     machineType: "ALL",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMachinesSimpleOutput(args: GetMachinesSimpleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMachinesSimpleResult> {
    return pulumi.output(args).apply((a: any) => getMachinesSimple(a, opts))
}

/**
 * A collection of arguments for invoking getMachinesSimple.
 */
export interface GetMachinesSimpleOutputArgs {
    /**
     * filter list.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Cwp.GetMachinesSimpleFilterArgs>[]>;
    /**
     * The area where the machine belongs,Such as: ap-guangzhou, ap-shanghai, all-regions: All server region types.
     */
    machineRegion: pulumi.Input<string>;
    /**
     * Service types. -CVM: Cloud Virtual Machine; -ECM: Edge Computing Machine; -LH: Lighthouse; -Other: Mixed cloud; -ALL: All server types.
     */
    machineType: pulumi.Input<string>;
    /**
     * Project id list.
     */
    projectIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
