// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dbbrain sqlFilters
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const sqlFilter = new tencentcloud.dbbrain.SqlFilter("sqlFilter", {
 *     instanceId: "mysql_ins_id",
 *     sessionToken: {
 *         user: "user",
 *         password: "password",
 *     },
 *     sqlType: "SELECT",
 *     filterKey: "test",
 *     maxConcurrency: 10,
 *     duration: 3600,
 * });
 * const sqlFilters = tencentcloud.Dbbrain.getSqlFiltersOutput({
 *     instanceId: "mysql_ins_id",
 *     filterIds: [sqlFilter.filterId],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSqlFilters(args: GetSqlFiltersArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlFiltersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Dbbrain/getSqlFilters:getSqlFilters", {
        "filterIds": args.filterIds,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlFilters.
 */
export interface GetSqlFiltersArgs {
    /**
     * filter id list.
     */
    filterIds?: number[];
    /**
     * instance id.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * status list.
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getSqlFilters.
 */
export interface GetSqlFiltersResult {
    readonly filterIds?: number[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * sql filter list.
     */
    readonly lists: outputs.Dbbrain.GetSqlFiltersList[];
    readonly resultOutputFile?: string;
    readonly statuses?: string[];
}
/**
 * Use this data source to query detailed information of dbbrain sqlFilters
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const sqlFilter = new tencentcloud.dbbrain.SqlFilter("sqlFilter", {
 *     instanceId: "mysql_ins_id",
 *     sessionToken: {
 *         user: "user",
 *         password: "password",
 *     },
 *     sqlType: "SELECT",
 *     filterKey: "test",
 *     maxConcurrency: 10,
 *     duration: 3600,
 * });
 * const sqlFilters = tencentcloud.Dbbrain.getSqlFiltersOutput({
 *     instanceId: "mysql_ins_id",
 *     filterIds: [sqlFilter.filterId],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSqlFiltersOutput(args: GetSqlFiltersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlFiltersResult> {
    return pulumi.output(args).apply((a: any) => getSqlFilters(a, opts))
}

/**
 * A collection of arguments for invoking getSqlFilters.
 */
export interface GetSqlFiltersOutputArgs {
    /**
     * filter id list.
     */
    filterIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * status list.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
