// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dbbrain securityAuditLogDownloadUrls
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const task = new tencentcloud.dbbrain.SecurityAuditLogExportTask("task", {
 *     secAuditGroupId: "%s",
 *     startTime: "%s",
 *     endTime: "%s",
 *     product: "mysql",
 *     dangerLevels: [
 *         0,
 *         1,
 *         2,
 *     ],
 * });
 * const test = tencentcloud.Dbbrain.getSecurityAuditLogDownloadUrlsOutput({
 *     secAuditGroupId: "%s",
 *     asyncRequestId: task.asyncRequestId,
 *     product: "mysql",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityAuditLogDownloadUrls(args: GetSecurityAuditLogDownloadUrlsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAuditLogDownloadUrlsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Dbbrain/getSecurityAuditLogDownloadUrls:getSecurityAuditLogDownloadUrls", {
        "asyncRequestId": args.asyncRequestId,
        "product": args.product,
        "resultOutputFile": args.resultOutputFile,
        "secAuditGroupId": args.secAuditGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAuditLogDownloadUrls.
 */
export interface GetSecurityAuditLogDownloadUrlsArgs {
    /**
     * Asynchronous task ID.
     */
    asyncRequestId: number;
    /**
     * Service product type, supported values: `mysql` - ApsaraDB for MySQL.
     */
    product: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Security audit group Id.
     */
    secAuditGroupId: string;
}

/**
 * A collection of values returned by getSecurityAuditLogDownloadUrls.
 */
export interface GetSecurityAuditLogDownloadUrlsResult {
    readonly asyncRequestId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly product: string;
    readonly resultOutputFile?: string;
    readonly secAuditGroupId: string;
    /**
     * List of COS links to export results. When the result set is large, it may be divided into multiple urls for download.
     */
    readonly urls: string[];
}
/**
 * Use this data source to query detailed information of dbbrain securityAuditLogDownloadUrls
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const task = new tencentcloud.dbbrain.SecurityAuditLogExportTask("task", {
 *     secAuditGroupId: "%s",
 *     startTime: "%s",
 *     endTime: "%s",
 *     product: "mysql",
 *     dangerLevels: [
 *         0,
 *         1,
 *         2,
 *     ],
 * });
 * const test = tencentcloud.Dbbrain.getSecurityAuditLogDownloadUrlsOutput({
 *     secAuditGroupId: "%s",
 *     asyncRequestId: task.asyncRequestId,
 *     product: "mysql",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityAuditLogDownloadUrlsOutput(args: GetSecurityAuditLogDownloadUrlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAuditLogDownloadUrlsResult> {
    return pulumi.output(args).apply((a: any) => getSecurityAuditLogDownloadUrls(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityAuditLogDownloadUrls.
 */
export interface GetSecurityAuditLogDownloadUrlsOutputArgs {
    /**
     * Asynchronous task ID.
     */
    asyncRequestId: pulumi.Input<number>;
    /**
     * Service product type, supported values: `mysql` - ApsaraDB for MySQL.
     */
    product: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Security audit group Id.
     */
    secAuditGroupId: pulumi.Input<string>;
}
