// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cynosdb zone
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const zone = pulumi.output(tencentcloud.Cynosdb.getZone({
 *     includeVirtualZones: true,
 *     showPermission: true,
 * }));
 * ```
 */
export function getZone(args?: GetZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cynosdb/getZone:getZone", {
        "includeVirtualZones": args.includeVirtualZones,
        "resultOutputFile": args.resultOutputFile,
        "showPermission": args.showPermission,
    }, opts);
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneArgs {
    /**
     * Is virtual zone included.
     */
    includeVirtualZones?: boolean;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Whether to display all available zones under the region and display the permissions of each available zone of the user.
     */
    showPermission?: boolean;
}

/**
 * A collection of values returned by getZone.
 */
export interface GetZoneResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeVirtualZones?: boolean;
    /**
     * Information of region.
     */
    readonly regionSets: outputs.Cynosdb.GetZoneRegionSet[];
    readonly resultOutputFile?: string;
    readonly showPermission?: boolean;
}

export function getZoneOutput(args?: GetZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZoneResult> {
    return pulumi.output(args).apply(a => getZone(a, opts))
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneOutputArgs {
    /**
     * Is virtual zone included.
     */
    includeVirtualZones?: pulumi.Input<boolean>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Whether to display all available zones under the region and display the permissions of each available zone of the user.
     */
    showPermission?: pulumi.Input<boolean>;
}
