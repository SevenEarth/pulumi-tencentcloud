// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a cynosdb cluster slave zone.
 *
 * ## Example Usage
 * ### Set a new slave zone for a cynosdb cluster.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const gz3 = tencentcloud.Vpc.getSubnets({
 *     availabilityZone: _var.default_az,
 *     isDefault: true,
 * });
 * const vpcId = gz3.then(gz3 => gz3.instanceLists?[0]?.vpcId);
 * const subnetId = gz3.then(gz3 => gz3.instanceLists?[0]?.subnetId);
 * const config = new pulumi.Config();
 * const fixedTags = config.getObject("fixedTags") || {
 *     fixed_resource: "do_not_remove",
 * };
 * const internal = tencentcloud.Security.getGroups({
 *     name: "default",
 *     tags: fixedTags,
 * });
 * const sgId = internal.then(internal => internal.securityGroups?[0]?.securityGroupId);
 * const exclusive = tencentcloud.Security.getGroups({
 *     name: "test_preset_sg",
 * });
 * const sgId2 = exclusive.then(exclusive => exclusive.securityGroups?[0]?.securityGroupId);
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-4";
 * const newAvailabilityZone = config.get("newAvailabilityZone") || "ap-guangzhou-6";
 * const myParamTemplate = config.get("myParamTemplate") || "15765";
 * const instance = new tencentcloud.cynosdb.Cluster("instance", {
 *     availableZone: availabilityZone,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     dbType: "MYSQL",
 *     dbVersion: "5.7",
 *     storageLimit: 1000,
 *     clusterName: "tf_test_cynosdb_cluster_slave_zone",
 *     password: "cynos@123",
 *     instanceMaintainDuration: 3600,
 *     instanceMaintainStartTime: 10800,
 *     instanceMaintainWeekdays: [
 *         "Fri",
 *         "Mon",
 *         "Sat",
 *         "Sun",
 *         "Thu",
 *         "Wed",
 *         "Tue",
 *     ],
 *     instanceCpuCore: 1,
 *     instanceMemorySize: 2,
 *     paramItems: [
 *         {
 *             name: "character_set_server",
 *             currentValue: "utf8",
 *         },
 *         {
 *             name: "time_zone",
 *             currentValue: "+09:00",
 *         },
 *     ],
 *     forceDelete: true,
 *     rwGroupSgs: [sgId],
 *     roGroupSgs: [sgId],
 *     prarmTemplateId: myParamTemplate,
 * });
 * const clusterSlaveZone = new tencentcloud.cynosdb.ClusterSlaveZone("clusterSlaveZone", {
 *     clusterId: instance.id,
 *     slaveZone: newAvailabilityZone,
 * });
 * ```
 *
 * ## Import
 *
 * cynosdb cluster_slave_zone can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Cynosdb/clusterSlaveZone:ClusterSlaveZone cluster_slave_zone cluster_id#slave_zone
 * ```
 */
export class ClusterSlaveZone extends pulumi.CustomResource {
    /**
     * Get an existing ClusterSlaveZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterSlaveZoneState, opts?: pulumi.CustomResourceOptions): ClusterSlaveZone {
        return new ClusterSlaveZone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cynosdb/clusterSlaveZone:ClusterSlaveZone';

    /**
     * Returns true if the given object is an instance of ClusterSlaveZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterSlaveZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterSlaveZone.__pulumiType;
    }

    /**
     * The ID of cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Slave zone.
     */
    public readonly slaveZone!: pulumi.Output<string>;

    /**
     * Create a ClusterSlaveZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterSlaveZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterSlaveZoneArgs | ClusterSlaveZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterSlaveZoneState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["slaveZone"] = state ? state.slaveZone : undefined;
        } else {
            const args = argsOrState as ClusterSlaveZoneArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.slaveZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaveZone'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["slaveZone"] = args ? args.slaveZone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterSlaveZone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterSlaveZone resources.
 */
export interface ClusterSlaveZoneState {
    /**
     * The ID of cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Slave zone.
     */
    slaveZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterSlaveZone resource.
 */
export interface ClusterSlaveZoneArgs {
    /**
     * The ID of cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Slave zone.
     */
    slaveZone: pulumi.Input<string>;
}
