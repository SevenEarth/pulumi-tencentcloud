// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cynosdb resourcePackageList
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const resourcePackageList = pulumi.output(tencentcloud.Cynosdb.getResourcePackageList({
 *     orderBies: ["startTime"],
 *     orderDirection: "DESC",
 *     packageIds: ["package-hy4d2ppl"],
 *     packageNames: ["keep-package-disk"],
 *     packageRegions: ["china"],
 *     packageTypes: ["DISK"],
 *     statuses: ["using"],
 * }));
 * ```
 */
export function getResourcePackageList(args?: GetResourcePackageListArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePackageListResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cynosdb/getResourcePackageList:getResourcePackageList", {
        "orderBies": args.orderBies,
        "orderDirection": args.orderDirection,
        "packageIds": args.packageIds,
        "packageNames": args.packageNames,
        "packageRegions": args.packageRegions,
        "packageTypes": args.packageTypes,
        "resultOutputFile": args.resultOutputFile,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourcePackageList.
 */
export interface GetResourcePackageListArgs {
    /**
     * Sorting conditions supported: startTime - effective time, expireTime - expiration time, packageUsedSpec - usage capacity, and packageTotalSpec - total storage capacity. Arrange in array order;.
     */
    orderBies?: string[];
    /**
     * Sort by, DESC Descending, ASC Ascending.
     */
    orderDirection?: string;
    /**
     * Resource Package Unique ID.
     */
    packageIds?: string[];
    /**
     * Resource Package Name.
     */
    packageNames?: string[];
    /**
     * Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and overseas.
     */
    packageRegions?: string[];
    /**
     * Resource package type CCU - Compute resource package, DISK - Storage resource package.
     */
    packageTypes?: string[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Resource package status creating - creating; Using - In use; Expired - has expired; Normal_ Finish - used up; Apply_ Refund - Applying for a refund; Refund - The fee has been refunded.
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getResourcePackageList.
 */
export interface GetResourcePackageListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orderBies?: string[];
    readonly orderDirection?: string;
    /**
     * Resource Package Unique ID Note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly packageIds?: string[];
    /**
     * Resource package name note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly packageNames?: string[];
    /**
     * The resource package is used in China, which is commonly used in mainland China, and in overseas, which is commonly used in Hong Kong, Macao, Taiwan, and overseas. Note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly packageRegions?: string[];
    /**
     * Resource package type CCU - Compute resource package, DISK - Store resource package Note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly packageTypes?: string[];
    /**
     * Resource package details note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly resourcePackageLists: outputs.Cynosdb.GetResourcePackageListResourcePackageList[];
    readonly resultOutputFile?: string;
    /**
     * Resource package status creating - creating; Using - In use; Expired - has expired; Normal_ Finish - used up; Apply_ Refund - Applying for a refund; Refund - The fee has been refunded. Note: This field may return null, indicating that a valid value cannot be obtained.
     */
    readonly statuses?: string[];
}

export function getResourcePackageListOutput(args?: GetResourcePackageListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcePackageListResult> {
    return pulumi.output(args).apply(a => getResourcePackageList(a, opts))
}

/**
 * A collection of arguments for invoking getResourcePackageList.
 */
export interface GetResourcePackageListOutputArgs {
    /**
     * Sorting conditions supported: startTime - effective time, expireTime - expiration time, packageUsedSpec - usage capacity, and packageTotalSpec - total storage capacity. Arrange in array order;.
     */
    orderBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sort by, DESC Descending, ASC Ascending.
     */
    orderDirection?: pulumi.Input<string>;
    /**
     * Resource Package Unique ID.
     */
    packageIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource Package Name.
     */
    packageNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and overseas.
     */
    packageRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource package type CCU - Compute resource package, DISK - Storage resource package.
     */
    packageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Resource package status creating - creating; Using - In use; Expired - has expired; Normal_ Finish - used up; Apply_ Refund - Applying for a refund; Refund - The fee has been refunded.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
