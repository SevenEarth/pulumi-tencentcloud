// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cam policyGrantingServiceAccess
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const policyGrantingServiceAccess = tencentcloud.Cam.getPolicyGrantingServiceAccess({
 *     roleId: 4611686018436804608,
 *     serviceType: "cam",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPolicyGrantingServiceAccess(args?: GetPolicyGrantingServiceAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyGrantingServiceAccessResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Cam/getPolicyGrantingServiceAccess:getPolicyGrantingServiceAccess", {
        "groupId": args.groupId,
        "resultOutputFile": args.resultOutputFile,
        "roleId": args.roleId,
        "serviceType": args.serviceType,
        "targetUin": args.targetUin,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyGrantingServiceAccess.
 */
export interface GetPolicyGrantingServiceAccessArgs {
    /**
     * Group Id, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    groupId?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Role Id, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    roleId?: number;
    /**
     * Service type, this field needs to be passed when viewing the details of the service authorization interface.
     */
    serviceType?: string;
    /**
     * Sub-account uin, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    targetUin?: number;
}

/**
 * A collection of values returned by getPolicyGrantingServiceAccess.
 */
export interface GetPolicyGrantingServiceAccessResult {
    readonly groupId?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List.
     */
    readonly lists: outputs.Cam.GetPolicyGrantingServiceAccessList[];
    readonly resultOutputFile?: string;
    readonly roleId?: number;
    /**
     * Service type.
     */
    readonly serviceType?: string;
    readonly targetUin?: number;
}
/**
 * Use this data source to query detailed information of cam policyGrantingServiceAccess
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const policyGrantingServiceAccess = tencentcloud.Cam.getPolicyGrantingServiceAccess({
 *     roleId: 4611686018436804608,
 *     serviceType: "cam",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPolicyGrantingServiceAccessOutput(args?: GetPolicyGrantingServiceAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyGrantingServiceAccessResult> {
    return pulumi.output(args).apply((a: any) => getPolicyGrantingServiceAccess(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyGrantingServiceAccess.
 */
export interface GetPolicyGrantingServiceAccessOutputArgs {
    /**
     * Group Id, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    groupId?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Role Id, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    roleId?: pulumi.Input<number>;
    /**
     * Service type, this field needs to be passed when viewing the details of the service authorization interface.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * Sub-account uin, one of the three (TargetUin, RoleId, GroupId) must be passed.
     */
    targetUin?: pulumi.Input<number>;
}
