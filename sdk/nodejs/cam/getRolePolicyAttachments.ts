// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of CAM role policy attachments
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Cam.getRolePolicyAttachments({
 *     roleId: tencentcloud_cam_role.foo.id,
 * });
 * const bar = tencentcloud.Cam.getRolePolicyAttachments({
 *     roleId: tencentcloud_cam_role.foo.id,
 *     policyId: tencentcloud_cam_policy.foo.id,
 * });
 * ```
 */
export function getRolePolicyAttachments(args: GetRolePolicyAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetRolePolicyAttachmentsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cam/getRolePolicyAttachments:getRolePolicyAttachments", {
        "createMode": args.createMode,
        "policyId": args.policyId,
        "policyType": args.policyType,
        "resultOutputFile": args.resultOutputFile,
        "roleId": args.roleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsArgs {
    /**
     * Mode of Creation of the CAM user policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
     */
    createMode?: number;
    /**
     * ID of CAM policy to be queried.
     */
    policyId?: string;
    /**
     * Type of the policy strategy. Valid values are 'User', 'QCS'. 'User' means customer strategy and 'QCS' means preset strategy.
     */
    policyType?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * ID of the attached CAM role to be queried.
     */
    roleId: string;
}

/**
 * A collection of values returned by getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsResult {
    /**
     * Mode of Creation of the CAM role policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
     */
    readonly createMode?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of CAM role.
     */
    readonly policyId?: string;
    /**
     * Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
     */
    readonly policyType?: string;
    readonly resultOutputFile?: string;
    /**
     * ID of CAM role.
     */
    readonly roleId: string;
    /**
     * A list of CAM role policy attachments. Each element contains the following attributes:
     */
    readonly rolePolicyAttachmentLists: outputs.Cam.GetRolePolicyAttachmentsRolePolicyAttachmentList[];
}

export function getRolePolicyAttachmentsOutput(args: GetRolePolicyAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolePolicyAttachmentsResult> {
    return pulumi.output(args).apply(a => getRolePolicyAttachments(a, opts))
}

/**
 * A collection of arguments for invoking getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsOutputArgs {
    /**
     * Mode of Creation of the CAM user policy attachment. `1` means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
     */
    createMode?: pulumi.Input<number>;
    /**
     * ID of CAM policy to be queried.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Type of the policy strategy. Valid values are 'User', 'QCS'. 'User' means customer strategy and 'QCS' means preset strategy.
     */
    policyType?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * ID of the attached CAM role to be queried.
     */
    roleId: pulumi.Input<string>;
}
