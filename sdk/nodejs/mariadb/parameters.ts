// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a mariadb parameters
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const parameters = new tencentcloud.mariadb.Parameters("parameters", {
 *     instanceId: "tdsql-4pzs5b67",
 *     params: [
 *         {
 *             param: "auto_increment_increment",
 *             value: "1",
 *         },
 *         {
 *             param: "auto_increment_offset",
 *             value: "1",
 *         },
 *         {
 *             param: "autocommit",
 *             value: "ON",
 *         },
 *         {
 *             param: "character_set_server",
 *             value: "utf8mb4",
 *         },
 *         {
 *             param: "collation_connection",
 *             value: "utf8mb4_general_ci",
 *         },
 *         {
 *             param: "collation_database",
 *             value: "utf8mb4_general_ci",
 *         },
 *         {
 *             param: "collation_server",
 *             value: "utf8mb4_general_ci",
 *         },
 *         {
 *             param: "connect_timeout",
 *             value: "10",
 *         },
 *         {
 *             param: "default_collation_for_utf8mb4",
 *             value: "utf8mb4_general_ci",
 *         },
 *         {
 *             param: "default_week_format",
 *             value: "0",
 *         },
 *         {
 *             param: "delay_key_write",
 *             value: "ON",
 *         },
 *         {
 *             param: "delayed_insert_limit",
 *             value: "100",
 *         },
 *         {
 *             param: "delayed_insert_timeout",
 *             value: "300",
 *         },
 *         {
 *             param: "delayed_queue_size",
 *             value: "1000",
 *         },
 *         {
 *             param: "div_precision_increment",
 *             value: "4",
 *         },
 *         {
 *             param: "event_scheduler",
 *             value: "ON",
 *         },
 *         {
 *             param: "group_concat_max_len",
 *             value: "1024",
 *         },
 *         {
 *             param: "innodb_concurrency_tickets",
 *             value: "5000",
 *         },
 *         {
 *             param: "innodb_flush_log_at_trx_commit",
 *             value: "1",
 *         },
 *         {
 *             param: "innodb_lock_wait_timeout",
 *             value: "20",
 *         },
 *         {
 *             param: "innodb_max_dirty_pages_pct",
 *             value: "70.000000",
 *         },
 *         {
 *             param: "innodb_old_blocks_pct",
 *             value: "37",
 *         },
 *         {
 *             param: "innodb_old_blocks_time",
 *             value: "1000",
 *         },
 *         {
 *             param: "innodb_purge_batch_size",
 *             value: "1000",
 *         },
 *         {
 *             param: "innodb_read_ahead_threshold",
 *             value: "56",
 *         },
 *         {
 *             param: "innodb_stats_method",
 *             value: "nulls_equal",
 *         },
 *         {
 *             param: "innodb_stats_on_metadata",
 *             value: "OFF",
 *         },
 *         {
 *             param: "innodb_strict_mode",
 *             value: "OFF",
 *         },
 *         {
 *             param: "innodb_table_locks",
 *             value: "ON",
 *         },
 *         {
 *             param: "innodb_thread_concurrency",
 *             value: "0",
 *         },
 *         {
 *             param: "interactive_timeout",
 *             value: "28800",
 *         },
 *         {
 *             param: "key_cache_age_threshold",
 *             value: "300",
 *         },
 *         {
 *             param: "key_cache_block_size",
 *             value: "1024",
 *         },
 *         {
 *             param: "key_cache_division_limit",
 *             value: "100",
 *         },
 *         {
 *             param: "local_infile",
 *             value: "OFF",
 *         },
 *         {
 *             param: "lock_wait_timeout",
 *             value: "5",
 *         },
 *         {
 *             param: "log_queries_not_using_indexes",
 *             value: "OFF",
 *         },
 *         {
 *             param: "long_query_time",
 *             value: "1.000000",
 *         },
 *         {
 *             param: "low_priority_updates",
 *             value: "OFF",
 *         },
 *         {
 *             param: "max_allowed_packet",
 *             value: "1073741824",
 *         },
 *         {
 *             param: "max_binlog_size",
 *             value: "536870912",
 *         },
 *         {
 *             param: "max_connect_errors",
 *             value: "2000",
 *         },
 *         {
 *             param: "max_connections",
 *             value: "10000",
 *         },
 *         {
 *             param: "max_execution_time",
 *             value: "0",
 *         },
 *         {
 *             param: "max_prepared_stmt_count",
 *             value: "200000",
 *         },
 *         {
 *             param: "myisam_sort_buffer_size",
 *             value: "4194304",
 *         },
 *         {
 *             param: "net_buffer_length",
 *             value: "16384",
 *         },
 *         {
 *             param: "net_read_timeout",
 *             value: "150",
 *         },
 *         {
 *             param: "net_retry_count",
 *             value: "10",
 *         },
 *         {
 *             param: "net_write_timeout",
 *             value: "300",
 *         },
 *         {
 *             param: "query_alloc_block_size",
 *             value: "16384",
 *         },
 *         {
 *             param: "query_prealloc_size",
 *             value: "24576",
 *         },
 *         {
 *             param: "slow_launch_time",
 *             value: "2",
 *         },
 *         {
 *             param: "sort_buffer_size",
 *             value: "2097152",
 *         },
 *         {
 *             param: "sql_mode",
 *             value: "NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES",
 *         },
 *         {
 *             param: "sql_require_primary_key",
 *             value: "ON",
 *         },
 *         {
 *             param: "sql_safe_updates",
 *             value: "OFF",
 *         },
 *         {
 *             param: "sqlasyntimeout",
 *             value: "30",
 *         },
 *         {
 *             param: "sync_binlog",
 *             value: "1",
 *         },
 *         {
 *             param: "table_definition_cache",
 *             value: "10240",
 *         },
 *         {
 *             param: "table_open_cache",
 *             value: "20480",
 *         },
 *         {
 *             param: "time_zone",
 *             value: "+08:00",
 *         },
 *         {
 *             param: "tmp_table_size",
 *             value: "33554432",
 *         },
 *         {
 *             param: "tx_isolation",
 *             value: "READ-COMMITTED",
 *         },
 *         {
 *             param: "wait_timeout",
 *             value: "28800",
 *         },
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * mariadb parameters can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Mariadb/parameters:Parameters parameters tdsql-4pzs5b67
 * ```
 */
export class Parameters extends pulumi.CustomResource {
    /**
     * Get an existing Parameters resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ParametersState, opts?: pulumi.CustomResourceOptions): Parameters {
        return new Parameters(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mariadb/parameters:Parameters';

    /**
     * Returns true if the given object is an instance of Parameters.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Parameters {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Parameters.__pulumiType;
    }

    /**
     * instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Number of days to keep, no more than 30.
     */
    public readonly params!: pulumi.Output<outputs.Mariadb.ParametersParam[]>;

    /**
     * Create a Parameters resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ParametersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ParametersArgs | ParametersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ParametersState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["params"] = state ? state.params : undefined;
        } else {
            const args = argsOrState as ParametersArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.params === undefined) && !opts.urn) {
                throw new Error("Missing required property 'params'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["params"] = args ? args.params : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Parameters.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Parameters resources.
 */
export interface ParametersState {
    /**
     * instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Number of days to keep, no more than 30.
     */
    params?: pulumi.Input<pulumi.Input<inputs.Mariadb.ParametersParam>[]>;
}

/**
 * The set of arguments for constructing a Parameters resource.
 */
export interface ParametersArgs {
    /**
     * instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Number of days to keep, no more than 30.
     */
    params: pulumi.Input<pulumi.Input<inputs.Mariadb.ParametersParam>[]>;
}
