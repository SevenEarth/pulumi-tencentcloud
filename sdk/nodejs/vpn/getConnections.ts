// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of VPN connections.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Vpn.getConnections({
 *     customerGatewayId: "",
 *     id: "vpnx-xfqag",
 *     name: "main",
 *     tags: {
 *         test: "tf",
 *     },
 *     vpcId: "cgw-xfqag",
 *     vpnGatewayId: "vpngw-8ccsnclt",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnections(args?: GetConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Vpn/getConnections:getConnections", {
        "customerGatewayId": args.customerGatewayId,
        "id": args.id,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vpnGatewayId": args.vpnGatewayId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsArgs {
    /**
     * Customer gateway ID of the VPN connection.
     */
    customerGatewayId?: string;
    /**
     * ID of the VPN connection.
     */
    id?: string;
    /**
     * Name of the VPN connection. The length of character is limited to 1-60.
     */
    name?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Tags of the VPN connection to be queried.
     */
    tags?: {[key: string]: any};
    /**
     * ID of the VPC.
     */
    vpcId?: string;
    /**
     * VPN gateway ID of the VPN connection.
     */
    vpnGatewayId?: string;
}

/**
 * A collection of values returned by getConnections.
 */
export interface GetConnectionsResult {
    /**
     * Information list of the dedicated connections.
     */
    readonly connectionLists: outputs.Vpn.GetConnectionsConnectionList[];
    /**
     * ID of the customer gateway.
     */
    readonly customerGatewayId?: string;
    /**
     * ID of the VPN connection.
     */
    readonly id?: string;
    /**
     * Name of the VPN connection.
     */
    readonly name?: string;
    readonly resultOutputFile?: string;
    /**
     * A list of tags used to associate different resources.
     */
    readonly tags?: {[key: string]: any};
    /**
     * ID of the VPC.
     */
    readonly vpcId?: string;
    /**
     * ID of the VPN gateway.
     */
    readonly vpnGatewayId?: string;
}
/**
 * Use this data source to query detailed information of VPN connections.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Vpn.getConnections({
 *     customerGatewayId: "",
 *     id: "vpnx-xfqag",
 *     name: "main",
 *     tags: {
 *         test: "tf",
 *     },
 *     vpcId: "cgw-xfqag",
 *     vpnGatewayId: "vpngw-8ccsnclt",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnectionsOutput(args?: GetConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getConnections(a, opts))
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsOutputArgs {
    /**
     * Customer gateway ID of the VPN connection.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * ID of the VPN connection.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the VPN connection. The length of character is limited to 1-60.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Tags of the VPN connection to be queried.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * VPN gateway ID of the VPN connection.
     */
    vpnGatewayId?: pulumi.Input<string>;
}
