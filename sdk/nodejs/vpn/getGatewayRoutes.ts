// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of VPN gateways.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = pulumi.output(tencentcloud.Vpn.getGateways({
 *     destinationCidrBlock: "vpngw-8ccsnclt",
 *     instanceId: "ap-guangzhou-3",
 *     instanceType: "1.1.1.1",
 *     tags: {
 *         test: "tf",
 *     },
 *     vpnGatewayId: "main",
 * }));
 * ```
 */
export function getGatewayRoutes(args: GetGatewayRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayRoutesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Vpn/getGatewayRoutes:getGatewayRoutes", {
        "destinationCidr": args.destinationCidr,
        "instanceId": args.instanceId,
        "instanceType": args.instanceType,
        "resultOutputFile": args.resultOutputFile,
        "vpnGatewayId": args.vpnGatewayId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayRoutes.
 */
export interface GetGatewayRoutesArgs {
    /**
     * Destination IDC IP range.
     */
    destinationCidr?: string;
    /**
     * Instance ID of the next hop.
     */
    instanceId?: string;
    /**
     * Next hop type (type of the associated instance). Valid values: VPNCONN (VPN tunnel) and CCN (CCN instance).
     */
    instanceType?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * VPN gateway ID.
     */
    vpnGatewayId: string;
}

/**
 * A collection of values returned by getGatewayRoutes.
 */
export interface GetGatewayRoutesResult {
    readonly destinationCidr?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    readonly instanceType?: string;
    readonly resultOutputFile?: string;
    readonly vpnGatewayId: string;
    /**
     * Information list of the vpn gateway routes.
     */
    readonly vpnGatewayRouteLists: outputs.Vpn.GetGatewayRoutesVpnGatewayRouteList[];
}

export function getGatewayRoutesOutput(args: GetGatewayRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayRoutesResult> {
    return pulumi.output(args).apply(a => getGatewayRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayRoutes.
 */
export interface GetGatewayRoutesOutputArgs {
    /**
     * Destination IDC IP range.
     */
    destinationCidr?: pulumi.Input<string>;
    /**
     * Instance ID of the next hop.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Next hop type (type of the associated instance). Valid values: VPNCONN (VPN tunnel) and CCN (CCN instance).
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * VPN gateway ID.
     */
    vpnGatewayId: pulumi.Input<string>;
}
