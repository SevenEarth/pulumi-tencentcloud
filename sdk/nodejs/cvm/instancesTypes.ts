// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function instancesTypes(args?: InstancesTypesArgs, opts?: pulumi.InvokeOptions): Promise<InstancesTypesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cvm/instancesTypes:InstancesTypes", {
        "availabilityZone": args.availabilityZone,
        "cpuCoreCount": args.cpuCoreCount,
        "excludeSoldOut": args.excludeSoldOut,
        "filters": args.filters,
        "gpuCoreCount": args.gpuCoreCount,
        "memorySize": args.memorySize,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking InstancesTypes.
 */
export interface InstancesTypesArgs {
    availabilityZone?: string;
    cpuCoreCount?: number;
    excludeSoldOut?: boolean;
    filters?: inputs.Cvm.InstancesTypesFilter[];
    gpuCoreCount?: number;
    memorySize?: number;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by InstancesTypes.
 */
export interface InstancesTypesResult {
    readonly availabilityZone?: string;
    readonly cpuCoreCount?: number;
    readonly excludeSoldOut?: boolean;
    readonly filters?: outputs.Cvm.InstancesTypesFilter[];
    readonly gpuCoreCount?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceTypes: outputs.Cvm.InstancesTypesInstanceType[];
    readonly memorySize?: number;
    readonly resultOutputFile?: string;
}

export function instancesTypesOutput(args?: InstancesTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<InstancesTypesResult> {
    return pulumi.output(args).apply(a => instancesTypes(a, opts))
}

/**
 * A collection of arguments for invoking InstancesTypes.
 */
export interface InstancesTypesOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    cpuCoreCount?: pulumi.Input<number>;
    excludeSoldOut?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.Cvm.InstancesTypesFilterArgs>[]>;
    gpuCoreCount?: pulumi.Input<number>;
    memorySize?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
}
