// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a dcdb encryptAttributesConfig
 *
 * > **NOTE:**  This resource currently only supports the newly created MySQL 8.0.24 version.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const internal = tencentcloud.Security.getGroups({
 *     name: "default",
 * });
 * const vpc = tencentcloud.Vpc.getInstances({
 *     name: "Default-VPC",
 * });
 * const subnet = vpc.then(vpc => tencentcloud.Vpc.getSubnets({
 *     vpcId: vpc.instanceLists?.[0]?.vpcId,
 * }));
 * const vpcId = subnet.then(subnet => subnet.instanceLists?.[0]?.vpcId);
 * const subnetId = subnet.then(subnet => subnet.instanceLists?.[0]?.subnetId);
 * const sgId = internal.then(internal => internal.securityGroups?.[0]?.securityGroupId);
 * const prepaidInstance = new tencentcloud.dcdb.DbInstance("prepaidInstance", {
 *     instanceName: "test_dcdb_db_post_instance",
 *     zones: [_var.default_az],
 *     period: 1,
 *     shardMemory: 2,
 *     shardStorage: 10,
 *     shardNodeCount: 2,
 *     shardCount: 2,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     dbVersionId: "8.0",
 *     resourceTags: [{
 *         tagKey: "aaa",
 *         tagValue: "bbb",
 *     }],
 *     securityGroupIds: [sgId],
 * });
 * const hourdbInstance = new tencentcloud.dcdb.HourdbInstance("hourdbInstance", {
 *     instanceName: "test_dcdb_db_hourdb_instance",
 *     zones: [_var.default_az],
 *     shardMemory: 2,
 *     shardStorage: 10,
 *     shardNodeCount: 2,
 *     shardCount: 2,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: sgId,
 *     dbVersionId: "8.0",
 *     resourceTags: [{
 *         tagKey: "aaa",
 *         tagValue: "bbb",
 *     }],
 * });
 * const prepaidDcdbId = prepaidInstance.id;
 * const hourdbDcdbId = hourdbInstance.id;
 * // for postpaid instance
 * const configHourdb = new tencentcloud.dcdb.EncryptAttributesConfig("configHourdb", {
 *     instanceId: hourdbDcdbId,
 *     encryptEnabled: 1,
 * });
 * // for prepaid instance
 * const configPrepaid = new tencentcloud.dcdb.EncryptAttributesConfig("configPrepaid", {
 *     instanceId: prepaidDcdbId,
 *     encryptEnabled: 1,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * dcdb encrypt_attributes_config can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Dcdb/encryptAttributesConfig:EncryptAttributesConfig encrypt_attributes_config encrypt_attributes_config_id
 * ```
 */
export class EncryptAttributesConfig extends pulumi.CustomResource {
    /**
     * Get an existing EncryptAttributesConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EncryptAttributesConfigState, opts?: pulumi.CustomResourceOptions): EncryptAttributesConfig {
        return new EncryptAttributesConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dcdb/encryptAttributesConfig:EncryptAttributesConfig';

    /**
     * Returns true if the given object is an instance of EncryptAttributesConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EncryptAttributesConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EncryptAttributesConfig.__pulumiType;
    }

    /**
     * whether to enable data encryption. Notice: it is not supported to turn it off after it is turned on. The optional values: 0-disable, 1-enable.
     */
    public readonly encryptEnabled!: pulumi.Output<number>;
    /**
     * instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a EncryptAttributesConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EncryptAttributesConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EncryptAttributesConfigArgs | EncryptAttributesConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EncryptAttributesConfigState | undefined;
            resourceInputs["encryptEnabled"] = state ? state.encryptEnabled : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as EncryptAttributesConfigArgs | undefined;
            if ((!args || args.encryptEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encryptEnabled'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["encryptEnabled"] = args ? args.encryptEnabled : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EncryptAttributesConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EncryptAttributesConfig resources.
 */
export interface EncryptAttributesConfigState {
    /**
     * whether to enable data encryption. Notice: it is not supported to turn it off after it is turned on. The optional values: 0-disable, 1-enable.
     */
    encryptEnabled?: pulumi.Input<number>;
    /**
     * instance id.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EncryptAttributesConfig resource.
 */
export interface EncryptAttributesConfigArgs {
    /**
     * whether to enable data encryption. Notice: it is not supported to turn it off after it is turned on. The optional values: 0-disable, 1-enable.
     */
    encryptEnabled: pulumi.Input<number>;
    /**
     * instance id.
     */
    instanceId: pulumi.Input<string>;
}
