// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dcdb shards
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const shards = pulumi.output(tencentcloud.Dcdb.getShards({
 *     instanceId: "your_instance_id",
 *     shardInstanceIds: ["shard1_id"],
 * }));
 * ```
 */
export function getShards(args: GetShardsArgs, opts?: pulumi.InvokeOptions): Promise<GetShardsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Dcdb/getShards:getShards", {
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "shardInstanceIds": args.shardInstanceIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getShards.
 */
export interface GetShardsArgs {
    /**
     * instance id.
     */
    instanceId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * shard instance ids.
     */
    shardInstanceIds?: string[];
}

/**
 * A collection of values returned by getShards.
 */
export interface GetShardsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * instance id.
     */
    readonly instanceId: string;
    /**
     * shard list.
     */
    readonly lists: outputs.Dcdb.GetShardsList[];
    readonly resultOutputFile?: string;
    readonly shardInstanceIds?: string[];
}

export function getShardsOutput(args: GetShardsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetShardsResult> {
    return pulumi.output(args).apply(a => getShards(a, opts))
}

/**
 * A collection of arguments for invoking getShards.
 */
export interface GetShardsOutputArgs {
    /**
     * instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * shard instance ids.
     */
    shardInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
}
