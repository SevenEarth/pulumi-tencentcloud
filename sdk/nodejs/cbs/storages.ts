// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function storages(args?: StoragesArgs, opts?: pulumi.InvokeOptions): Promise<StoragesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Cbs/storages:Storages", {
        "availabilityZone": args.availabilityZone,
        "chargeTypes": args.chargeTypes,
        "instanceIps": args.instanceIps,
        "instanceNames": args.instanceNames,
        "portable": args.portable,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
        "storageId": args.storageId,
        "storageName": args.storageName,
        "storageStates": args.storageStates,
        "storageType": args.storageType,
        "storageUsage": args.storageUsage,
        "tagKeys": args.tagKeys,
        "tagValues": args.tagValues,
    }, opts);
}

/**
 * A collection of arguments for invoking Storages.
 */
export interface StoragesArgs {
    availabilityZone?: string;
    chargeTypes?: string[];
    instanceIps?: string[];
    instanceNames?: string[];
    portable?: boolean;
    projectId?: number;
    resultOutputFile?: string;
    storageId?: string;
    storageName?: string;
    storageStates?: string[];
    storageType?: string;
    storageUsage?: string;
    tagKeys?: string[];
    tagValues?: string[];
}

/**
 * A collection of values returned by Storages.
 */
export interface StoragesResult {
    readonly availabilityZone?: string;
    readonly chargeTypes?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceIps?: string[];
    readonly instanceNames?: string[];
    readonly portable?: boolean;
    readonly projectId?: number;
    readonly resultOutputFile?: string;
    readonly storageId?: string;
    readonly storageLists: outputs.Cbs.StoragesStorageList[];
    readonly storageName?: string;
    readonly storageStates?: string[];
    readonly storageType?: string;
    readonly storageUsage?: string;
    readonly tagKeys?: string[];
    readonly tagValues?: string[];
}

export function storagesOutput(args?: StoragesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<StoragesResult> {
    return pulumi.output(args).apply(a => storages(a, opts))
}

/**
 * A collection of arguments for invoking Storages.
 */
export interface StoragesOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    chargeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    instanceIps?: pulumi.Input<pulumi.Input<string>[]>;
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    portable?: pulumi.Input<boolean>;
    projectId?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
    storageId?: pulumi.Input<string>;
    storageName?: pulumi.Input<string>;
    storageStates?: pulumi.Input<pulumi.Input<string>[]>;
    storageType?: pulumi.Input<string>;
    storageUsage?: pulumi.Input<string>;
    tagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
}
