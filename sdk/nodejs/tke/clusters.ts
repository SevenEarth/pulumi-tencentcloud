// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function clusters(args?: ClustersArgs, opts?: pulumi.InvokeOptions): Promise<ClustersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tke/clusters:Clusters", {
        "clusterId": args.clusterId,
        "clusterName": args.clusterName,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking Clusters.
 */
export interface ClustersArgs {
    clusterId?: string;
    clusterName?: string;
    resultOutputFile?: string;
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by Clusters.
 */
export interface ClustersResult {
    readonly clusterId?: string;
    readonly clusterName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lists: outputs.Tke.ClustersList[];
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: any};
}

export function clustersOutput(args?: ClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ClustersResult> {
    return pulumi.output(args).apply(a => clusters(a, opts))
}

/**
 * A collection of arguments for invoking Clusters.
 */
export interface ClustersOutputArgs {
    clusterId?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
}
