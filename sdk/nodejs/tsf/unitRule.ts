// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a tsf unitRule
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const unitRule = new tencentcloud.tsf.UnitRule("unitRule", {
 *     description: "terraform-desc",
 *     gatewayInstanceId: "gw-ins-rug79a70",
 *     unitRuleItemLists: [{
 *         description: "rule1-desc",
 *         destNamespaceId: "namespace-y8p88eka",
 *         destNamespaceName: "garden-test_default",
 *         name: "Rule1",
 *         relationship: "AND",
 *         unitRuleTagLists: [{
 *             tagField: "aaa",
 *             tagOperator: "IN",
 *             tagType: "U",
 *             tagValue: "1",
 *         }],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * tsf unit_rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Tsf/unitRule:UnitRule unit_rule unit-rl-zbywqeca
 * ```
 */
export class UnitRule extends pulumi.CustomResource {
    /**
     * Get an existing UnitRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UnitRuleState, opts?: pulumi.CustomResourceOptions): UnitRule {
        return new UnitRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tsf/unitRule:UnitRule';

    /**
     * Returns true if the given object is an instance of UnitRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UnitRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UnitRule.__pulumiType;
    }

    /**
     * rule description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * gateway entity ID.
     */
    public readonly gatewayInstanceId!: pulumi.Output<string>;
    /**
     * rule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * rule item ID.
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    /**
     * usage status: enabled/disabled.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * list of rule items.
     */
    public readonly unitRuleItemLists!: pulumi.Output<outputs.Tsf.UnitRuleUnitRuleItemList[] | undefined>;

    /**
     * Create a UnitRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UnitRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UnitRuleArgs | UnitRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UnitRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gatewayInstanceId"] = state ? state.gatewayInstanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["unitRuleItemLists"] = state ? state.unitRuleItemLists : undefined;
        } else {
            const args = argsOrState as UnitRuleArgs | undefined;
            if ((!args || args.gatewayInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayInstanceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gatewayInstanceId"] = args ? args.gatewayInstanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["unitRuleItemLists"] = args ? args.unitRuleItemLists : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UnitRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UnitRule resources.
 */
export interface UnitRuleState {
    /**
     * rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway entity ID.
     */
    gatewayInstanceId?: pulumi.Input<string>;
    /**
     * rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * rule item ID.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * usage status: enabled/disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * list of rule items.
     */
    unitRuleItemLists?: pulumi.Input<pulumi.Input<inputs.Tsf.UnitRuleUnitRuleItemList>[]>;
}

/**
 * The set of arguments for constructing a UnitRule resource.
 */
export interface UnitRuleArgs {
    /**
     * rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway entity ID.
     */
    gatewayInstanceId: pulumi.Input<string>;
    /**
     * rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * list of rule items.
     */
    unitRuleItemLists?: pulumi.Input<pulumi.Input<inputs.Tsf.UnitRuleUnitRuleItemList>[]>;
}
