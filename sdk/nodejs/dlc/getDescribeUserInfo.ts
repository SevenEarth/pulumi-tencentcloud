// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dlc describeUserInfo
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const describeUserInfo = pulumi.output(tencentcloud.Dlc.getDescribeUserInfo({
 *     sortBy: "create-time",
 *     sorting: "desc",
 *     type: "Group",
 *     userId: "100032772113",
 * }));
 * ```
 */
export function getDescribeUserInfo(args?: GetDescribeUserInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetDescribeUserInfoResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Dlc/getDescribeUserInfo:getDescribeUserInfo", {
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
        "sortBy": args.sortBy,
        "sorting": args.sorting,
        "type": args.type,
        "userId": args.userId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDescribeUserInfo.
 */
export interface GetDescribeUserInfoArgs {
    /**
     * Query filter conditions. when type is Group, fuzzy search with Key as workgroup-name is supported. when type is DataAuth, key is supported. policy-type: permission type, policy-source: data source, data-name: database table. Fuzzy search, when type is EngineAuth, supports fuzzy search of key, policy-type: permission type, policy-source: data source, engine-name: library table.
     */
    filters?: inputs.Dlc.GetDescribeUserInfoFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Sorting field, when type is Group, support create-time, group-name, when type is DataAuth, support create-time, when type is EngineAuth, support create-time.
     */
    sortBy?: string;
    /**
     * Sorting method, desc means forward order, asc means reverse order, the default is asc.
     */
    sorting?: string;
    /**
     * Query information type, Group: work group DataAuth: data permission EngineAuth: engine permission.
     */
    type?: string;
    /**
     * User id, the same as the sub-user uin.
     */
    userId?: string;
}

/**
 * A collection of values returned by getDescribeUserInfo.
 */
export interface GetDescribeUserInfoResult {
    readonly filters?: outputs.Dlc.GetDescribeUserInfoFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly sortBy?: string;
    readonly sorting?: string;
    /**
     * The type of information returned, Group: the returned workgroup information of the current user; DataAuth: the returned data permission information of the current user; EngineAuth: the returned engine permission information of the current user.
     */
    readonly type?: string;
    /**
     * User id, the same as the sub-user uin.
     */
    readonly userId?: string;
    /**
     * User details.
     */
    readonly userInfos: outputs.Dlc.GetDescribeUserInfoUserInfo[];
}

export function getDescribeUserInfoOutput(args?: GetDescribeUserInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDescribeUserInfoResult> {
    return pulumi.output(args).apply(a => getDescribeUserInfo(a, opts))
}

/**
 * A collection of arguments for invoking getDescribeUserInfo.
 */
export interface GetDescribeUserInfoOutputArgs {
    /**
     * Query filter conditions. when type is Group, fuzzy search with Key as workgroup-name is supported. when type is DataAuth, key is supported. policy-type: permission type, policy-source: data source, data-name: database table. Fuzzy search, when type is EngineAuth, supports fuzzy search of key, policy-type: permission type, policy-source: data source, engine-name: library table.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Dlc.GetDescribeUserInfoFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Sorting field, when type is Group, support create-time, group-name, when type is DataAuth, support create-time, when type is EngineAuth, support create-time.
     */
    sortBy?: pulumi.Input<string>;
    /**
     * Sorting method, desc means forward order, asc means reverse order, the default is asc.
     */
    sorting?: pulumi.Input<string>;
    /**
     * Query information type, Group: work group DataAuth: data permission EngineAuth: engine permission.
     */
    type?: pulumi.Input<string>;
    /**
     * User id, the same as the sub-user uin.
     */
    userId?: pulumi.Input<string>;
}
