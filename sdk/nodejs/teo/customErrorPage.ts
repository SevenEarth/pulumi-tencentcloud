// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a teo customErrorPage
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 *
 * const errorPage0 = new tencentcloud.teo.CustomErrorPage("errorPage0", {
 *     zoneId: data.tencentcloud_teo_zone_ddos_policy.zone_policy.zone_id,
 *     entity: data.tencentcloud_teo_zone_ddos_policy.zone_policy.shield_areas[0].application[0].host,
 *     content: "<html lang='en'><body><div><p>test content</p></div></body></html>",
 * });
 * ```
 */
export class CustomErrorPage extends pulumi.CustomResource {
    /**
     * Get an existing CustomErrorPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomErrorPageState, opts?: pulumi.CustomResourceOptions): CustomErrorPage {
        return new CustomErrorPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/customErrorPage:CustomErrorPage';

    /**
     * Returns true if the given object is an instance of CustomErrorPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomErrorPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomErrorPage.__pulumiType;
    }

    /**
     * Page content.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * Subdomain.
     */
    public readonly entity!: pulumi.Output<string>;
    /**
     * Page name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Page ID.
     */
    public /*out*/ readonly pageId!: pulumi.Output<string>;
    /**
     * Site ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a CustomErrorPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomErrorPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomErrorPageArgs | CustomErrorPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomErrorPageState | undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["entity"] = state ? state.entity : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pageId"] = state ? state.pageId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as CustomErrorPageArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.entity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entity'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["entity"] = args ? args.entity : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["pageId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomErrorPage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomErrorPage resources.
 */
export interface CustomErrorPageState {
    /**
     * Page content.
     */
    content?: pulumi.Input<string>;
    /**
     * Subdomain.
     */
    entity?: pulumi.Input<string>;
    /**
     * Page name.
     */
    name?: pulumi.Input<string>;
    /**
     * Page ID.
     */
    pageId?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomErrorPage resource.
 */
export interface CustomErrorPageArgs {
    /**
     * Page content.
     */
    content: pulumi.Input<string>;
    /**
     * Subdomain.
     */
    entity: pulumi.Input<string>;
    /**
     * Page name.
     */
    name?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    zoneId: pulumi.Input<string>;
}
