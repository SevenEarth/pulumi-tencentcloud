// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a teo ruleEnginePriority
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const ruleEnginePriority = new tencentcloud.Teo.RuleEnginePriority("rule_engine_priority", {
 *     rulesPriorities: [
 *         {
 *             index: 0,
 *             value: "rule-m9jlttua",
 *         },
 *         {
 *             index: 1,
 *             value: "rule-m5l9t4k1",
 *         },
 *     ],
 *     zoneId: "zone-294v965lwmn6",
 * });
 * ```
 *
 * ## Import
 *
 * teo rule_engine_priority can be imported using the zone_id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority rule_engine_priority zone-294v965lwmn6
 * ```
 */
export class RuleEnginePriority extends pulumi.CustomResource {
    /**
     * Get an existing RuleEnginePriority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleEnginePriorityState, opts?: pulumi.CustomResourceOptions): RuleEnginePriority {
        return new RuleEnginePriority(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority';

    /**
     * Returns true if the given object is an instance of RuleEnginePriority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleEnginePriority {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleEnginePriority.__pulumiType;
    }

    /**
     * Priority of rules.
     */
    public readonly rulesPriorities!: pulumi.Output<outputs.Teo.RuleEnginePriorityRulesPriority[]>;
    /**
     * Site ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a RuleEnginePriority resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleEnginePriorityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleEnginePriorityArgs | RuleEnginePriorityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleEnginePriorityState | undefined;
            resourceInputs["rulesPriorities"] = state ? state.rulesPriorities : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as RuleEnginePriorityArgs | undefined;
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["rulesPriorities"] = args ? args.rulesPriorities : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleEnginePriority.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleEnginePriority resources.
 */
export interface RuleEnginePriorityState {
    /**
     * Priority of rules.
     */
    rulesPriorities?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEnginePriorityRulesPriority>[]>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleEnginePriority resource.
 */
export interface RuleEnginePriorityArgs {
    /**
     * Priority of rules.
     */
    rulesPriorities?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEnginePriorityRulesPriority>[]>;
    /**
     * Site ID.
     */
    zoneId: pulumi.Input<string>;
}
