// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rum tawInstance
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const tawInstance = pulumi.output(tencentcloud.Rum.getTawInstance({
 *     areaIds: 0,
 *     chargeStatuses: 0,
 *     chargeTypes: 0,
 *     instanceIds: "",
 *     instanceStatuses: 0,
 * }));
 * ```
 */
export function getTawInstance(args?: GetTawInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetTawInstanceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Rum/getTawInstance:getTawInstance", {
        "areaIds": args.areaIds,
        "chargeStatuses": args.chargeStatuses,
        "chargeTypes": args.chargeTypes,
        "instanceIds": args.instanceIds,
        "instanceStatuses": args.instanceStatuses,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getTawInstance.
 */
export interface GetTawInstanceArgs {
    /**
     * Region ID.
     */
    areaIds?: number[];
    /**
     * Billing status.
     */
    chargeStatuses?: number[];
    /**
     * Billing type.
     */
    chargeTypes?: number[];
    /**
     * Instance ID.
     */
    instanceIds?: string[];
    /**
     * Instance status (`1`: creating; `2`: running; `3`: exceptional; `4`: restarting; `5`: stopping; `6`: stopped; `7`: terminating; `8`: terminated).
     */
    instanceStatuses?: number[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTawInstance.
 */
export interface GetTawInstanceResult {
    readonly areaIds?: number[];
    readonly chargeStatuses?: number[];
    readonly chargeTypes?: number[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceIds?: string[];
    /**
     * Instance list.
     */
    readonly instanceSets: outputs.Rum.GetTawInstanceInstanceSet[];
    readonly instanceStatuses?: number[];
    readonly resultOutputFile?: string;
}

export function getTawInstanceOutput(args?: GetTawInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTawInstanceResult> {
    return pulumi.output(args).apply(a => getTawInstance(a, opts))
}

/**
 * A collection of arguments for invoking getTawInstance.
 */
export interface GetTawInstanceOutputArgs {
    /**
     * Region ID.
     */
    areaIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Billing status.
     */
    chargeStatuses?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Billing type.
     */
    chargeTypes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Instance ID.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance status (`1`: creating; `2`: running; `3`: exceptional; `4`: restarting; `5`: stopping; `6`: stopped; `7`: terminating; `8`: terminated).
     */
    instanceStatuses?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
