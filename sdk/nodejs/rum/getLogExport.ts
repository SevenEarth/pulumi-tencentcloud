// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rum logExport
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const logExport = pulumi.output(tencentcloud.Rum.getLogExport({
 *     endTime: "1692609240000",
 *     name: "log",
 *     projectId: 1,
 *     query: "id:123 AND type: \"log\"",
 *     startTime: "1692594840000",
 * }));
 * ```
 */
export function getLogExport(args: GetLogExportArgs, opts?: pulumi.InvokeOptions): Promise<GetLogExportResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Rum/getLogExport:getLogExport", {
        "endTime": args.endTime,
        "fields": args.fields,
        "name": args.name,
        "projectId": args.projectId,
        "query": args.query,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogExport.
 */
export interface GetLogExportArgs {
    /**
     * End timestamp, in milliseconds.
     */
    endTime: string;
    /**
     * Log fields.
     */
    fields?: string[];
    /**
     * Export flag name.
     */
    name: string;
    /**
     * Project ID.
     */
    projectId: number;
    /**
     * Log Query syntax statement.
     */
    query: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Start timestamp, in milliseconds.
     */
    startTime: string;
}

/**
 * A collection of values returned by getLogExport.
 */
export interface GetLogExportResult {
    readonly endTime: string;
    readonly fields?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly projectId: number;
    readonly query: string;
    /**
     * Return result.
     */
    readonly result: string;
    readonly resultOutputFile?: string;
    readonly startTime: string;
}

export function getLogExportOutput(args: GetLogExportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogExportResult> {
    return pulumi.output(args).apply(a => getLogExport(a, opts))
}

/**
 * A collection of arguments for invoking getLogExport.
 */
export interface GetLogExportOutputArgs {
    /**
     * End timestamp, in milliseconds.
     */
    endTime: pulumi.Input<string>;
    /**
     * Log fields.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Export flag name.
     */
    name: pulumi.Input<string>;
    /**
     * Project ID.
     */
    projectId: pulumi.Input<number>;
    /**
     * Log Query syntax statement.
     */
    query: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Start timestamp, in milliseconds.
     */
    startTime: pulumi.Input<string>;
}
