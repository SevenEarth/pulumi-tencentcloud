// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tse gatewayServices
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const gatewayServices = pulumi.output(tencentcloud.Tse.getGatewayServices({
 *     filters: [{
 *         key: "name",
 *         value: "test",
 *     }],
 *     gatewayId: "gateway-ddbb709b",
 * }));
 * ```
 */
export function getGatewayServices(args: GetGatewayServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayServicesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tse/getGatewayServices:getGatewayServices", {
        "filters": args.filters,
        "gatewayId": args.gatewayId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayServices.
 */
export interface GetGatewayServicesArgs {
    /**
     * filter conditions, valid value:name,upstreamType.
     */
    filters?: inputs.Tse.GetGatewayServicesFilter[];
    /**
     * gateway ID.
     */
    gatewayId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getGatewayServices.
 */
export interface GetGatewayServicesResult {
    readonly filters?: outputs.Tse.GetGatewayServicesFilter[];
    readonly gatewayId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    /**
     * result.
     */
    readonly results: outputs.Tse.GetGatewayServicesResult[];
}

export function getGatewayServicesOutput(args: GetGatewayServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayServicesResult> {
    return pulumi.output(args).apply(a => getGatewayServices(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayServices.
 */
export interface GetGatewayServicesOutputArgs {
    /**
     * filter conditions, valid value:name,upstreamType.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Tse.GetGatewayServicesFilterArgs>[]>;
    /**
     * gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
