// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./appConfig";
export * from "./application";
export * from "./applicationService";
export * from "./environment";
export * from "./gateway";
export * from "./logConfig";
export * from "./scaleRule";
export * from "./workload";

// Import resources to register:
import { AppConfig } from "./appConfig";
import { Application } from "./application";
import { ApplicationService } from "./applicationService";
import { Environment } from "./environment";
import { Gateway } from "./gateway";
import { LogConfig } from "./logConfig";
import { ScaleRule } from "./scaleRule";
import { Workload } from "./workload";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Tem/appConfig:AppConfig":
                return new AppConfig(name, <any>undefined, { urn })
            case "tencentcloud:Tem/application:Application":
                return new Application(name, <any>undefined, { urn })
            case "tencentcloud:Tem/applicationService:ApplicationService":
                return new ApplicationService(name, <any>undefined, { urn })
            case "tencentcloud:Tem/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "tencentcloud:Tem/gateway:Gateway":
                return new Gateway(name, <any>undefined, { urn })
            case "tencentcloud:Tem/logConfig:LogConfig":
                return new LogConfig(name, <any>undefined, { urn })
            case "tencentcloud:Tem/scaleRule:ScaleRule":
                return new ScaleRule(name, <any>undefined, { urn })
            case "tencentcloud:Tem/workload:Workload":
                return new Workload(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/appConfig", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/application", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/applicationService", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/environment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/gateway", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/logConfig", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/scaleRule", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tem/workload", _module)
