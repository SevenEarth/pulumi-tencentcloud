// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of clb targetGroupList
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const targetGroupList = pulumi.output(tencentcloud.Clb.getTargetGroupList({
 *     filters: [{
 *         name: "TargetGroupName",
 *         values: ["keep-tgg"],
 *     }],
 * }));
 * ```
 */
export function getTargetGroupList(args?: GetTargetGroupListArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetGroupListResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Clb/getTargetGroupList:getTargetGroupList", {
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
        "targetGroupIds": args.targetGroupIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getTargetGroupList.
 */
export interface GetTargetGroupListArgs {
    /**
     * Filter array, which is exclusive of TargetGroupIds. Valid values: TargetGroupVpcId and TargetGroupName. Target group ID will be used first.
     */
    filters?: inputs.Clb.GetTargetGroupListFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Target group ID array.
     */
    targetGroupIds?: string[];
}

/**
 * A collection of values returned by getTargetGroupList.
 */
export interface GetTargetGroupListResult {
    readonly filters?: outputs.Clb.GetTargetGroupListFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly targetGroupIds?: string[];
    /**
     * Information set of displayed target groups.
     */
    readonly targetGroupSets: outputs.Clb.GetTargetGroupListTargetGroupSet[];
}

export function getTargetGroupListOutput(args?: GetTargetGroupListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTargetGroupListResult> {
    return pulumi.output(args).apply(a => getTargetGroupList(a, opts))
}

/**
 * A collection of arguments for invoking getTargetGroupList.
 */
export interface GetTargetGroupListOutputArgs {
    /**
     * Filter array, which is exclusive of TargetGroupIds. Valid values: TargetGroupVpcId and TargetGroupName. Target group ID will be used first.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Clb.GetTargetGroupListFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Target group ID array.
     */
    targetGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
