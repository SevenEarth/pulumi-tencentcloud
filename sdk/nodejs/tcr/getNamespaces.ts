// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of TCR namespaces.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const name = pulumi.output(tencentcloud.Tcr.getNamespaces({
 *     instanceId: "cls-satg5125",
 *     namespaceName: "test",
 * }));
 * ```
 */
export function getNamespaces(args: GetNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespacesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tcr/getNamespaces:getNamespaces", {
        "instanceId": args.instanceId,
        "namespaceName": args.namespaceName,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaces.
 */
export interface GetNamespacesArgs {
    /**
     * ID of the instance that the namespace belongs to.
     */
    instanceId: string;
    /**
     * ID of the TCR namespace to query.
     */
    namespaceName?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getNamespaces.
 */
export interface GetNamespacesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Information list of the dedicated TCR namespaces.
     */
    readonly namespaceLists: outputs.Tcr.GetNamespacesNamespaceList[];
    readonly namespaceName?: string;
    readonly resultOutputFile?: string;
}

export function getNamespacesOutput(args: GetNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespacesResult> {
    return pulumi.output(args).apply(a => getNamespaces(a, opts))
}

/**
 * A collection of arguments for invoking getNamespaces.
 */
export interface GetNamespacesOutputArgs {
    /**
     * ID of the instance that the namespace belongs to.
     */
    instanceId: pulumi.Input<string>;
    /**
     * ID of the TCR namespace to query.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
