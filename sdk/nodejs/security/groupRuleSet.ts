// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to create security group rule. This resource is similar with tencentcloud_security_group_lite_rule, rules can be ordered and configure descriptions.
 *
 * > **NOTE:** This resource must exclusive in one security group, do not declare additional rule resources of this security group elsewhere.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 *
 * const baseGroup = new tencentcloud.security.Group("baseGroup", {description: "Testing Rule Set Security"});
 * const relative = new tencentcloud.security.Group("relative", {description: "Used for attach security policy"});
 * const fooTemplate = new tencentcloud.address.Template("fooTemplate", {addresses: [
 *     "10.0.0.1",
 *     "10.0.1.0/24",
 *     "10.0.0.1-10.0.0.100",
 * ]});
 * const fooTemplateGroup = new tencentcloud.address.TemplateGroup("fooTemplateGroup", {templateIds: [fooTemplate.id]});
 * const baseGroupRuleSet = new tencentcloud.security.GroupRuleSet("baseGroupRuleSet", {
 *     securityGroupId: baseGroup.id,
 *     ingresses: [
 *         {
 *             action: "ACCEPT",
 *             cidrBlock: "10.0.0.0/22",
 *             protocol: "TCP",
 *             port: "80-90",
 *             description: "A:Allow Ips and 80-90",
 *         },
 *         {
 *             action: "ACCEPT",
 *             cidrBlock: "10.0.2.1",
 *             protocol: "UDP",
 *             port: "8080",
 *             description: "B:Allow UDP 8080",
 *         },
 *         {
 *             action: "ACCEPT",
 *             cidrBlock: "10.0.2.1",
 *             protocol: "UDP",
 *             port: "8080",
 *             description: "C:Allow UDP 8080",
 *         },
 *         {
 *             action: "ACCEPT",
 *             cidrBlock: "172.18.1.2",
 *             protocol: "ALL",
 *             port: "ALL",
 *             description: "D:Allow ALL",
 *         },
 *         {
 *             action: "DROP",
 *             protocol: "TCP",
 *             port: "80",
 *             sourceSecurityId: relative.id,
 *             description: "E:Block relative",
 *         },
 *     ],
 *     egresses: [
 *         {
 *             action: "DROP",
 *             cidrBlock: "10.0.0.0/16",
 *             protocol: "ICMP",
 *             description: "A:Block ping3",
 *         },
 *         {
 *             action: "DROP",
 *             addressTemplateId: fooTemplate.id,
 *             description: "B:Allow template",
 *         },
 *         {
 *             action: "DROP",
 *             addressTemplateGroup: fooTemplateGroup.id,
 *             description: "C:DROP template group",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Resource tencentcloud_security_group_rule_set can be imported by passing security grou id
 *
 * ```sh
 *  $ pulumi import tencentcloud:Security/groupRuleSet:GroupRuleSet sglab_1 sg-xxxxxxxx
 * ```
 */
export class GroupRuleSet extends pulumi.CustomResource {
    /**
     * Get an existing GroupRuleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupRuleSetState, opts?: pulumi.CustomResourceOptions): GroupRuleSet {
        return new GroupRuleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Security/groupRuleSet:GroupRuleSet';

    /**
     * Returns true if the given object is an instance of GroupRuleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupRuleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupRuleSet.__pulumiType;
    }

    /**
     * List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    public readonly egresses!: pulumi.Output<outputs.Security.GroupRuleSetEgress[] | undefined>;
    /**
     * List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    public readonly ingresses!: pulumi.Output<outputs.Security.GroupRuleSetIngress[] | undefined>;
    /**
     * ID of the security group to be queried.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Security policies version, auto increment for every update.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a GroupRuleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupRuleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupRuleSetArgs | GroupRuleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupRuleSetState | undefined;
            resourceInputs["egresses"] = state ? state.egresses : undefined;
            resourceInputs["ingresses"] = state ? state.ingresses : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as GroupRuleSetArgs | undefined;
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            resourceInputs["egresses"] = args ? args.egresses : undefined;
            resourceInputs["ingresses"] = args ? args.ingresses : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupRuleSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GroupRuleSet resources.
 */
export interface GroupRuleSetState {
    /**
     * List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    egresses?: pulumi.Input<pulumi.Input<inputs.Security.GroupRuleSetEgress>[]>;
    /**
     * List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    ingresses?: pulumi.Input<pulumi.Input<inputs.Security.GroupRuleSetIngress>[]>;
    /**
     * ID of the security group to be queried.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Security policies version, auto increment for every update.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupRuleSet resource.
 */
export interface GroupRuleSetArgs {
    /**
     * List of egress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    egresses?: pulumi.Input<pulumi.Input<inputs.Security.GroupRuleSetEgress>[]>;
    /**
     * List of ingress rule. NOTE: this block is ordered, the first rule has the highest priority.
     */
    ingresses?: pulumi.Input<pulumi.Input<inputs.Security.GroupRuleSetIngress>[]>;
    /**
     * ID of the security group to be queried.
     */
    securityGroupId: pulumi.Input<string>;
}
