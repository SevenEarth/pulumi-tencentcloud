// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of CCN bandwidth limits.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const config = new pulumi.Config();
 * const otherRegion1 = config.get("otherRegion1") || "ap-shanghai";
 * const main = new tencentcloud.ccn.Instance("main", {
 *     description: "ci-temp-test-ccn-des",
 *     qos: "AG",
 * });
 * const limit = tencentcloud.Ccn.getBandwidthLimitsOutput({
 *     ccnId: main.id,
 * });
 * const limit1 = new tencentcloud.ccn.BandwidthLimit("limit1", {
 *     ccnId: main.id,
 *     region: otherRegion1,
 *     bandwidthLimit: 500,
 * });
 * ```
 */
export function getBandwidthLimits(args: GetBandwidthLimitsArgs, opts?: pulumi.InvokeOptions): Promise<GetBandwidthLimitsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Ccn/getBandwidthLimits:getBandwidthLimits", {
        "ccnId": args.ccnId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getBandwidthLimits.
 */
export interface GetBandwidthLimitsArgs {
    /**
     * ID of the CCN to be queried.
     */
    ccnId: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getBandwidthLimits.
 */
export interface GetBandwidthLimitsResult {
    readonly ccnId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The bandwidth limits of regions:
     */
    readonly limits: outputs.Ccn.GetBandwidthLimitsLimit[];
    readonly resultOutputFile?: string;
}

export function getBandwidthLimitsOutput(args: GetBandwidthLimitsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBandwidthLimitsResult> {
    return pulumi.output(args).apply(a => getBandwidthLimits(a, opts))
}

/**
 * A collection of arguments for invoking getBandwidthLimits.
 */
export interface GetBandwidthLimitsOutputArgs {
    /**
     * ID of the CCN to be queried.
     */
    ccnId: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
