// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ccn crossBorderCompliance
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const crossBorderCompliance = tencentcloud.Ccn.getCrossBorderCompliance({
 *     complianceId: 10002,
 *     email: "test@tencent.com",
 *     serviceEndDate: "2021-07-29",
 *     serviceProvider: "UNICOM",
 *     serviceStartDate: "2020-07-29",
 *     state: "APPROVED",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCrossBorderCompliance(args?: GetCrossBorderComplianceArgs, opts?: pulumi.InvokeOptions): Promise<GetCrossBorderComplianceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ccn/getCrossBorderCompliance:getCrossBorderCompliance", {
        "businessAddress": args.businessAddress,
        "company": args.company,
        "complianceId": args.complianceId,
        "email": args.email,
        "issuingAuthority": args.issuingAuthority,
        "legalPerson": args.legalPerson,
        "manager": args.manager,
        "managerAddress": args.managerAddress,
        "managerId": args.managerId,
        "managerTelephone": args.managerTelephone,
        "postCode": args.postCode,
        "resultOutputFile": args.resultOutputFile,
        "serviceEndDate": args.serviceEndDate,
        "serviceProvider": args.serviceProvider,
        "serviceStartDate": args.serviceStartDate,
        "state": args.state,
        "uniformSocialCreditCode": args.uniformSocialCreditCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getCrossBorderCompliance.
 */
export interface GetCrossBorderComplianceArgs {
    /**
     * (Fuzzy query) business license address.
     */
    businessAddress?: string;
    /**
     * (Fuzzy query) Company name.
     */
    company?: string;
    /**
     * (Exact match) compliance approval form: 'ID'.
     */
    complianceId?: number;
    /**
     * (Exact match) email.
     */
    email?: string;
    /**
     * (Fuzzy query) Issuing authority.
     */
    issuingAuthority?: string;
    /**
     * (Fuzzy query) legal representative.
     */
    legalPerson?: string;
    /**
     * (Fuzzy query) Person in charge.
     */
    manager?: string;
    /**
     * (Fuzzy query) ID card address of the person in charge.
     */
    managerAddress?: string;
    /**
     * (Exact query) ID number of the person in charge.
     */
    managerId?: string;
    /**
     * (Exact match) contact number of the person in charge.
     */
    managerTelephone?: string;
    /**
     * (Exact match) post code.
     */
    postCode?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * (Exact match) service end date, such as: '2020-07-28'.
     */
    serviceEndDate?: string;
    /**
     * (Exact match) service provider, optional value: 'UNICOM'.
     */
    serviceProvider?: string;
    /**
     * (Exact match) service start date, such as: '2020-07-28'.
     */
    serviceStartDate?: string;
    /**
     * (Exact match) status. Pending: PENDING, Passed: APPROVED, Denied: DENY.
     */
    state?: string;
    /**
     * (Exact match) Uniform Social Credit Code.
     */
    uniformSocialCreditCode?: string;
}

/**
 * A collection of values returned by getCrossBorderCompliance.
 */
export interface GetCrossBorderComplianceResult {
    readonly businessAddress?: string;
    readonly company?: string;
    readonly complianceId?: number;
    readonly email?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly issuingAuthority?: string;
    readonly legalPerson?: string;
    readonly manager?: string;
    readonly managerAddress?: string;
    readonly managerId?: string;
    readonly managerTelephone?: string;
    readonly postCode?: number;
    readonly resultOutputFile?: string;
    readonly serviceEndDate?: string;
    readonly serviceProvider?: string;
    readonly serviceStartDate?: string;
    readonly state?: string;
    readonly uniformSocialCreditCode?: string;
}
/**
 * Use this data source to query detailed information of ccn crossBorderCompliance
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const crossBorderCompliance = tencentcloud.Ccn.getCrossBorderCompliance({
 *     complianceId: 10002,
 *     email: "test@tencent.com",
 *     serviceEndDate: "2021-07-29",
 *     serviceProvider: "UNICOM",
 *     serviceStartDate: "2020-07-29",
 *     state: "APPROVED",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCrossBorderComplianceOutput(args?: GetCrossBorderComplianceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrossBorderComplianceResult> {
    return pulumi.output(args).apply((a: any) => getCrossBorderCompliance(a, opts))
}

/**
 * A collection of arguments for invoking getCrossBorderCompliance.
 */
export interface GetCrossBorderComplianceOutputArgs {
    /**
     * (Fuzzy query) business license address.
     */
    businessAddress?: pulumi.Input<string>;
    /**
     * (Fuzzy query) Company name.
     */
    company?: pulumi.Input<string>;
    /**
     * (Exact match) compliance approval form: 'ID'.
     */
    complianceId?: pulumi.Input<number>;
    /**
     * (Exact match) email.
     */
    email?: pulumi.Input<string>;
    /**
     * (Fuzzy query) Issuing authority.
     */
    issuingAuthority?: pulumi.Input<string>;
    /**
     * (Fuzzy query) legal representative.
     */
    legalPerson?: pulumi.Input<string>;
    /**
     * (Fuzzy query) Person in charge.
     */
    manager?: pulumi.Input<string>;
    /**
     * (Fuzzy query) ID card address of the person in charge.
     */
    managerAddress?: pulumi.Input<string>;
    /**
     * (Exact query) ID number of the person in charge.
     */
    managerId?: pulumi.Input<string>;
    /**
     * (Exact match) contact number of the person in charge.
     */
    managerTelephone?: pulumi.Input<string>;
    /**
     * (Exact match) post code.
     */
    postCode?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * (Exact match) service end date, such as: '2020-07-28'.
     */
    serviceEndDate?: pulumi.Input<string>;
    /**
     * (Exact match) service provider, optional value: 'UNICOM'.
     */
    serviceProvider?: pulumi.Input<string>;
    /**
     * (Exact match) service start date, such as: '2020-07-28'.
     */
    serviceStartDate?: pulumi.Input<string>;
    /**
     * (Exact match) status. Pending: PENDING, Passed: APPROVED, Denied: DENY.
     */
    state?: pulumi.Input<string>;
    /**
     * (Exact match) Uniform Social Credit Code.
     */
    uniformSocialCreditCode?: pulumi.Input<string>;
}
