// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function zones(args?: ZonesArgs, opts?: pulumi.InvokeOptions): Promise<ZonesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Availability/zones:Zones", {
        "includeUnavailable": args.includeUnavailable,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking Zones.
 */
export interface ZonesArgs {
    includeUnavailable?: boolean;
    name?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by Zones.
 */
export interface ZonesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeUnavailable?: boolean;
    readonly name?: string;
    readonly resultOutputFile?: string;
    readonly zones: outputs.Availability.ZonesZone[];
}

export function zonesOutput(args?: ZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ZonesResult> {
    return pulumi.output(args).apply(a => zones(a, opts))
}

/**
 * A collection of arguments for invoking Zones.
 */
export interface ZonesOutputArgs {
    includeUnavailable?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
