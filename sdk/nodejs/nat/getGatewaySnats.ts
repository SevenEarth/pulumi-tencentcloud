// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of VPN gateways.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const snat = tencentcloud.Nat.getGatewaySnats({
 *     natGatewayId: tencentcloud_nat_gateway.my_nat.id,
 *     subnetId: tencentcloud_nat_gateway_snat.my_subnet.id,
 *     publicIpAddrs: ["50.29.23.234"],
 *     description: "snat demo",
 *     resultOutputFile: "./snat.txt",
 * });
 * ```
 */
export function getGatewaySnats(args: GetGatewaySnatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewaySnatsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Nat/getGatewaySnats:getGatewaySnats", {
        "description": args.description,
        "instanceId": args.instanceId,
        "natGatewayId": args.natGatewayId,
        "publicIpAddrs": args.publicIpAddrs,
        "resultOutputFile": args.resultOutputFile,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewaySnats.
 */
export interface GetGatewaySnatsArgs {
    /**
     * Description.
     */
    description?: string;
    /**
     * Instance ID.
     */
    instanceId?: string;
    /**
     * NAT gateway ID.
     */
    natGatewayId: string;
    /**
     * Elastic IP address pool.
     */
    publicIpAddrs?: string[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Subnet instance ID.
     */
    subnetId?: string;
}

/**
 * A collection of values returned by getGatewaySnats.
 */
export interface GetGatewaySnatsResult {
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    readonly natGatewayId: string;
    readonly publicIpAddrs?: string[];
    readonly resultOutputFile?: string;
    /**
     * Information list of the nat gateway snat.
     */
    readonly snatLists: outputs.Nat.GetGatewaySnatsSnatList[];
    readonly subnetId?: string;
}

export function getGatewaySnatsOutput(args: GetGatewaySnatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewaySnatsResult> {
    return pulumi.output(args).apply(a => getGatewaySnats(a, opts))
}

/**
 * A collection of arguments for invoking getGatewaySnats.
 */
export interface GetGatewaySnatsOutputArgs {
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * NAT gateway ID.
     */
    natGatewayId: pulumi.Input<string>;
    /**
     * Elastic IP address pool.
     */
    publicIpAddrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Subnet instance ID.
     */
    subnetId?: pulumi.Input<string>;
}
