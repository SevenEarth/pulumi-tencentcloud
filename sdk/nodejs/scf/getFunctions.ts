// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query SCF functions.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooFunction = new tencentcloud.scf.Function("fooFunction", {
 *     handler: "main.do_it",
 *     runtime: "Python3.6",
 *     cosBucketName: "scf-code-1234567890",
 *     cosObjectName: "code.zip",
 *     cosBucketRegion: "ap-guangzhou",
 * });
 * const fooFunctions = tencentcloud.Scf.getFunctionsOutput({
 *     name: fooFunction.name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFunctions(args?: GetFunctionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Scf/getFunctions:getFunctions", {
        "description": args.description,
        "name": args.name,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsArgs {
    /**
     * Description of the SCF function to be queried.
     */
    description?: string;
    /**
     * Name of the SCF function to be queried.
     */
    name?: string;
    /**
     * Namespace of the SCF function to be queried.
     */
    namespace?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Tags of the SCF function to be queried, can use up to 10 tags.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getFunctions.
 */
export interface GetFunctionsResult {
    /**
     * Description of the SCF function.
     */
    readonly description?: string;
    /**
     * An information list of functions. Each element contains the following attributes:
     */
    readonly functions: outputs.Scf.GetFunctionsFunction[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the SCF function trigger.
     */
    readonly name?: string;
    /**
     * Namespace of the SCF function.
     */
    readonly namespace?: string;
    readonly resultOutputFile?: string;
    /**
     * Tags of the SCF function.
     */
    readonly tags?: {[key: string]: any};
}
/**
 * Use this data source to query SCF functions.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooFunction = new tencentcloud.scf.Function("fooFunction", {
 *     handler: "main.do_it",
 *     runtime: "Python3.6",
 *     cosBucketName: "scf-code-1234567890",
 *     cosObjectName: "code.zip",
 *     cosBucketRegion: "ap-guangzhou",
 * });
 * const fooFunctions = tencentcloud.Scf.getFunctionsOutput({
 *     name: fooFunction.name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFunctionsOutput(args?: GetFunctionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsResult> {
    return pulumi.output(args).apply((a: any) => getFunctions(a, opts))
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsOutputArgs {
    /**
     * Description of the SCF function to be queried.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the SCF function to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace of the SCF function to be queried.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Tags of the SCF function to be queried, can use up to 10 tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
