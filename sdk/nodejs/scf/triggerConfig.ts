// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a scf triggerConfig
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const triggerConfig = new tencentcloud.Scf.TriggerConfig("trigger_config", {
 *     enable: "OPEN",
 *     functionName: "keep-1676351130",
 *     namespace: "default",
 *     qualifier: "$DEFAULT",
 *     triggerName: "SCF-timer-1685540160",
 *     type: "timer",
 * });
 * ```
 *
 * ## Import
 *
 * scf trigger_config can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Scf/triggerConfig:TriggerConfig trigger_config functionName#namespace#triggerName
 * ```
 */
export class TriggerConfig extends pulumi.CustomResource {
    /**
     * Get an existing TriggerConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TriggerConfigState, opts?: pulumi.CustomResourceOptions): TriggerConfig {
        return new TriggerConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Scf/triggerConfig:TriggerConfig';

    /**
     * Returns true if the given object is an instance of TriggerConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TriggerConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TriggerConfig.__pulumiType;
    }

    /**
     * Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
     */
    public readonly enable!: pulumi.Output<string>;
    /**
     * Function name.
     */
    public readonly functionName!: pulumi.Output<string>;
    /**
     * Function namespace.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
     */
    public readonly qualifier!: pulumi.Output<string | undefined>;
    /**
     * To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
     */
    public readonly triggerDesc!: pulumi.Output<string>;
    /**
     * Trigger name.
     */
    public readonly triggerName!: pulumi.Output<string>;
    /**
     * Trigger Type.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a TriggerConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TriggerConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TriggerConfigArgs | TriggerConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TriggerConfigState | undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["functionName"] = state ? state.functionName : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["qualifier"] = state ? state.qualifier : undefined;
            resourceInputs["triggerDesc"] = state ? state.triggerDesc : undefined;
            resourceInputs["triggerName"] = state ? state.triggerName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as TriggerConfigArgs | undefined;
            if ((!args || args.enable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enable'");
            }
            if ((!args || args.functionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionName'");
            }
            if ((!args || args.triggerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'triggerName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["functionName"] = args ? args.functionName : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["qualifier"] = args ? args.qualifier : undefined;
            resourceInputs["triggerDesc"] = args ? args.triggerDesc : undefined;
            resourceInputs["triggerName"] = args ? args.triggerName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TriggerConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TriggerConfig resources.
 */
export interface TriggerConfigState {
    /**
     * Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
     */
    enable?: pulumi.Input<string>;
    /**
     * Function name.
     */
    functionName?: pulumi.Input<string>;
    /**
     * Function namespace.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
     */
    triggerDesc?: pulumi.Input<string>;
    /**
     * Trigger name.
     */
    triggerName?: pulumi.Input<string>;
    /**
     * Trigger Type.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TriggerConfig resource.
 */
export interface TriggerConfigArgs {
    /**
     * Initial status of the trigger. Values: `OPEN` (enabled); `CLOSE` disabled).
     */
    enable: pulumi.Input<string>;
    /**
     * Function name.
     */
    functionName: pulumi.Input<string>;
    /**
     * Function namespace.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Function version. It defaults to `$LATEST`. It's recommended to use `[$DEFAULT](https://intl.cloud.tencent.com/document/product/583/36149?from_cn_redirect=1#.E9.BB.98.E8.AE.A4.E5.88.AB.E5.90.8D)` for canary release.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * To update a COS trigger, this field is required. It stores the data {event:cos:ObjectCreated:*} in the JSON format. The data content of this field is in the same format as that of SetTrigger. This field is optional if a scheduled trigger or CMQ trigger is to be deleted.
     */
    triggerDesc?: pulumi.Input<string>;
    /**
     * Trigger name.
     */
    triggerName: pulumi.Input<string>;
    /**
     * Trigger Type.
     */
    type: pulumi.Input<string>;
}
