// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Ssl/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Remark name.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * Returned certificate ID.
     */
    public /*out*/ readonly certificateId!: pulumi.Output<string>;
    /**
     * Number of domain names included in the certificate.
     */
    public readonly domainNum!: pulumi.Output<number>;
    /**
     * Certificate information.
     */
    public readonly information!: pulumi.Output<outputs.Ssl.InstanceInformation>;
    /**
     * Order ID returned.
     */
    public /*out*/ readonly orderId!: pulumi.Output<string>;
    /**
     * Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite Enhanced Enterprise Edition (EV Pro), `4`
     * means SecureSite Enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite
     * Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means
     * Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain
     * SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL
     * certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise
     * multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia
     * Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means
     * GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means
     * TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple
     * Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24`
     * means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means
     * Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus
     * enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise
     * wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33`
     * means DNSPod national secret domain name certificate, `34` means DNSPod national secret domain name certificate
     * Multi-domain certificate, `35` means DNSPod national secret domain name wildcard certificate, `37` means DNSPod national
     * secret enterprise certificate, `38` means DNSPod national secret enterprise multi-domain certificate, `39` means DNSPod
     * national secret enterprise wildcard certificate, `40` means DNSPod national secret increase Strong certificate, `41`
     * means DNSPod national secret enhanced multi-domain certificate, `42` means TrustAsia domain-type wildcard multi-domain
     * certificate.
     */
    public readonly productId!: pulumi.Output<number>;
    /**
     * The ID of project.
     */
    public readonly projectId!: pulumi.Output<number>;
    /**
     * SSL certificate status.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Certificate period, currently only supports 1 year certificate purchase.
     */
    public readonly timeSpan!: pulumi.Output<number | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["domainNum"] = state ? state.domainNum : undefined;
            resourceInputs["information"] = state ? state.information : undefined;
            resourceInputs["orderId"] = state ? state.orderId : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeSpan"] = state ? state.timeSpan : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.domainNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainNum'");
            }
            if ((!args || args.information === undefined) && !opts.urn) {
                throw new Error("Missing required property 'information'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["domainNum"] = args ? args.domainNum : undefined;
            resourceInputs["information"] = args ? args.information : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["timeSpan"] = args ? args.timeSpan : undefined;
            resourceInputs["certificateId"] = undefined /*out*/;
            resourceInputs["orderId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Remark name.
     */
    alias?: pulumi.Input<string>;
    /**
     * Returned certificate ID.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * Number of domain names included in the certificate.
     */
    domainNum?: pulumi.Input<number>;
    /**
     * Certificate information.
     */
    information?: pulumi.Input<inputs.Ssl.InstanceInformation>;
    /**
     * Order ID returned.
     */
    orderId?: pulumi.Input<string>;
    /**
     * Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite Enhanced Enterprise Edition (EV Pro), `4`
     * means SecureSite Enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite
     * Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means
     * Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain
     * SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL
     * certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise
     * multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia
     * Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means
     * GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means
     * TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple
     * Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24`
     * means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means
     * Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus
     * enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise
     * wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33`
     * means DNSPod national secret domain name certificate, `34` means DNSPod national secret domain name certificate
     * Multi-domain certificate, `35` means DNSPod national secret domain name wildcard certificate, `37` means DNSPod national
     * secret enterprise certificate, `38` means DNSPod national secret enterprise multi-domain certificate, `39` means DNSPod
     * national secret enterprise wildcard certificate, `40` means DNSPod national secret increase Strong certificate, `41`
     * means DNSPod national secret enhanced multi-domain certificate, `42` means TrustAsia domain-type wildcard multi-domain
     * certificate.
     */
    productId?: pulumi.Input<number>;
    /**
     * The ID of project.
     */
    projectId?: pulumi.Input<number>;
    /**
     * SSL certificate status.
     */
    status?: pulumi.Input<number>;
    /**
     * Certificate period, currently only supports 1 year certificate purchase.
     */
    timeSpan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Remark name.
     */
    alias?: pulumi.Input<string>;
    /**
     * Number of domain names included in the certificate.
     */
    domainNum: pulumi.Input<number>;
    /**
     * Certificate information.
     */
    information: pulumi.Input<inputs.Ssl.InstanceInformation>;
    /**
     * Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite Enhanced Enterprise Edition (EV Pro), `4`
     * means SecureSite Enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite
     * Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means
     * Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain
     * SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL
     * certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise
     * multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia
     * Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means
     * GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means
     * TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple
     * Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24`
     * means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means
     * Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus
     * enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise
     * wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33`
     * means DNSPod national secret domain name certificate, `34` means DNSPod national secret domain name certificate
     * Multi-domain certificate, `35` means DNSPod national secret domain name wildcard certificate, `37` means DNSPod national
     * secret enterprise certificate, `38` means DNSPod national secret enterprise multi-domain certificate, `39` means DNSPod
     * national secret enterprise wildcard certificate, `40` means DNSPod national secret increase Strong certificate, `41`
     * means DNSPod national secret enhanced multi-domain certificate, `42` means TrustAsia domain-type wildcard multi-domain
     * certificate.
     */
    productId: pulumi.Input<number>;
    /**
     * The ID of project.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Certificate period, currently only supports 1 year certificate purchase.
     */
    timeSpan?: pulumi.Input<number>;
}
