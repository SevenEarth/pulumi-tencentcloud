// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provide a datasource to query EKS cluster credential info.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const foo = tencentcloud.Eks.getClusterCredential({
 *     clusterId: "cls-xxxxxxxx",
 * });
 * export const addresses = data.tencentcloud_eks_cluster_credential.cred.addresses;
 * export const caCert = data.tencentcloud_eks_cluster_credential.cred.credential.ca_cert;
 * export const token = data.tencentcloud_eks_cluster_credential.cred.credential.token;
 * export const publicLbParam = data.tencentcloud_eks_cluster_credential.cred.public_lb[0].extra_param;
 * export const internalLbSubnet = data.tencentcloud_eks_cluster_credential.cred.internal_lb[0].subnet_id;
 * ```
 */
export function getClusterCredential(args: GetClusterCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterCredentialResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Eks/getClusterCredential:getClusterCredential", {
        "clusterId": args.clusterId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterCredential.
 */
export interface GetClusterCredentialArgs {
    /**
     * EKS Cluster ID.
     */
    clusterId: string;
    /**
     * Used for save result.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getClusterCredential.
 */
export interface GetClusterCredentialResult {
    /**
     * List of IP Address information.
     */
    readonly addresses: outputs.Eks.GetClusterCredentialAddress[];
    readonly clusterId: string;
    /**
     * Credential info. Format `{ ca_cert: String, token: String }`.
     */
    readonly credential: {[key: string]: any};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Cluster internal access LoadBalancer info.
     */
    readonly internalLbs: outputs.Eks.GetClusterCredentialInternalLb[];
    /**
     * EKS cluster kubeconfig.
     */
    readonly kubeConfig: string;
    /**
     * Indicates whether the new internal/public network function.
     */
    readonly proxyLb: boolean;
    /**
     * Cluster public access LoadBalancer info.
     */
    readonly publicLbs: outputs.Eks.GetClusterCredentialPublicLb[];
    readonly resultOutputFile?: string;
}

export function getClusterCredentialOutput(args: GetClusterCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterCredentialResult> {
    return pulumi.output(args).apply(a => getClusterCredential(a, opts))
}

/**
 * A collection of arguments for invoking getClusterCredential.
 */
export interface GetClusterCredentialOutputArgs {
    /**
     * EKS Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Used for save result.
     */
    resultOutputFile?: pulumi.Input<string>;
}
