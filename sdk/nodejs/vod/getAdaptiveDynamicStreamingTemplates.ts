// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of VOD adaptive dynamic streaming templates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const fooAdaptiveDynamicStreamingTemplate = new tencentcloud.vod.AdaptiveDynamicStreamingTemplate("fooAdaptiveDynamicStreamingTemplate", {
 *     format: "HLS",
 *     drmType: "SimpleAES",
 *     disableHigherVideoBitrate: false,
 *     disableHigherVideoResolution: false,
 *     comment: "test",
 *     streamInfos: [
 *         {
 *             video: {
 *                 codec: "libx265",
 *                 fps: 4,
 *                 bitrate: 129,
 *                 resolutionAdaptive: false,
 *                 width: 128,
 *                 height: 128,
 *                 fillType: "stretch",
 *             },
 *             audio: {
 *                 codec: "libmp3lame",
 *                 bitrate: 129,
 *                 sampleRate: 44100,
 *                 audioChannel: "dual",
 *             },
 *             removeAudio: false,
 *         },
 *         {
 *             video: {
 *                 codec: "libx264",
 *                 fps: 4,
 *                 bitrate: 256,
 *             },
 *             audio: {
 *                 codec: "libfdk_aac",
 *                 bitrate: 256,
 *                 sampleRate: 44100,
 *             },
 *             removeAudio: true,
 *         },
 *     ],
 * });
 * const fooAdaptiveDynamicStreamingTemplates = tencentcloud.Vod.getAdaptiveDynamicStreamingTemplatesOutput({
 *     type: "Custom",
 *     definition: fooAdaptiveDynamicStreamingTemplate.id,
 * });
 * ```
 */
export function getAdaptiveDynamicStreamingTemplates(args?: GetAdaptiveDynamicStreamingTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetAdaptiveDynamicStreamingTemplatesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Vod/getAdaptiveDynamicStreamingTemplates:getAdaptiveDynamicStreamingTemplates", {
        "definition": args.definition,
        "resultOutputFile": args.resultOutputFile,
        "subAppId": args.subAppId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getAdaptiveDynamicStreamingTemplates.
 */
export interface GetAdaptiveDynamicStreamingTemplatesArgs {
    /**
     * Unique ID filter of adaptive dynamic streaming template.
     */
    definition?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
     */
    subAppId?: number;
    /**
     * Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
     */
    type?: string;
}

/**
 * A collection of values returned by getAdaptiveDynamicStreamingTemplates.
 */
export interface GetAdaptiveDynamicStreamingTemplatesResult {
    /**
     * Unique ID of adaptive dynamic streaming template.
     */
    readonly definition?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly subAppId?: number;
    /**
     * A list of adaptive dynamic streaming templates. Each element contains the following attributes:
     */
    readonly templateLists: outputs.Vod.GetAdaptiveDynamicStreamingTemplatesTemplateList[];
    /**
     * Template type filter. Valid values: `Preset`,`Custom`. `Preset`: preset template; `Custom`: custom template.
     */
    readonly type?: string;
}

export function getAdaptiveDynamicStreamingTemplatesOutput(args?: GetAdaptiveDynamicStreamingTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAdaptiveDynamicStreamingTemplatesResult> {
    return pulumi.output(args).apply(a => getAdaptiveDynamicStreamingTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getAdaptiveDynamicStreamingTemplates.
 */
export interface GetAdaptiveDynamicStreamingTemplatesOutputArgs {
    /**
     * Unique ID filter of adaptive dynamic streaming template.
     */
    definition?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
     */
    subAppId?: pulumi.Input<number>;
    /**
     * Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
     */
    type?: pulumi.Input<string>;
}
