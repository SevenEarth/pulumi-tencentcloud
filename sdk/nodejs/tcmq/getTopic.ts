// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tcmq topic
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const topic = pulumi.output(tencentcloud.Tcmq.getTopic({
 *     topicName: "topic_name",
 * }));
 * ```
 */
export function getTopic(args?: GetTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetTopicResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Tcmq/getTopic:getTopic", {
        "filters": args.filters,
        "isTagFilter": args.isTagFilter,
        "limit": args.limit,
        "offset": args.offset,
        "resultOutputFile": args.resultOutputFile,
        "topicName": args.topicName,
        "topicNameLists": args.topicNameLists,
    }, opts);
}

/**
 * A collection of arguments for invoking getTopic.
 */
export interface GetTopicArgs {
    /**
     * Filter. Currently, you can filter by tag. The tag name must be prefixed with `tag:`, such as `tag: owner`, `tag: environment`, or `tag: business`.
     */
    filters?: inputs.Tcmq.GetTopicFilter[];
    /**
     * For filtering by tag, this parameter must be set to `true`.
     */
    isTagFilter?: boolean;
    /**
     * Number of topics to be returned per page in case of paginated return. If this parameter is not passed in, 20 will be used by default. Maximum value: 50.
     */
    limit?: number;
    /**
     * Starting position of the list of topics to be returned on the current page in case of paginated return. If a value is entered, limit is required. If this parameter is left empty, 0 will be used by default.
     */
    offset?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Fuzzy search by TopicName.
     */
    topicName?: string;
    /**
     * Filter by CMQ topic name.
     */
    topicNameLists?: string[];
}

/**
 * A collection of values returned by getTopic.
 */
export interface GetTopicResult {
    readonly filters?: outputs.Tcmq.GetTopicFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isTagFilter?: boolean;
    readonly limit?: number;
    readonly offset?: number;
    readonly resultOutputFile?: string;
    /**
     * Topic list.
     */
    readonly topicLists: outputs.Tcmq.GetTopicTopicList[];
    /**
     * Topic name.
     */
    readonly topicName?: string;
    readonly topicNameLists?: string[];
}

export function getTopicOutput(args?: GetTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTopicResult> {
    return pulumi.output(args).apply(a => getTopic(a, opts))
}

/**
 * A collection of arguments for invoking getTopic.
 */
export interface GetTopicOutputArgs {
    /**
     * Filter. Currently, you can filter by tag. The tag name must be prefixed with `tag:`, such as `tag: owner`, `tag: environment`, or `tag: business`.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Tcmq.GetTopicFilterArgs>[]>;
    /**
     * For filtering by tag, this parameter must be set to `true`.
     */
    isTagFilter?: pulumi.Input<boolean>;
    /**
     * Number of topics to be returned per page in case of paginated return. If this parameter is not passed in, 20 will be used by default. Maximum value: 50.
     */
    limit?: pulumi.Input<number>;
    /**
     * Starting position of the list of topics to be returned on the current page in case of paginated return. If a value is entered, limit is required. If this parameter is left empty, 0 will be used by default.
     */
    offset?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Fuzzy search by TopicName.
     */
    topicName?: pulumi.Input<string>;
    /**
     * Filter by CMQ topic name.
     */
    topicNameLists?: pulumi.Input<pulumi.Input<string>[]>;
}
