// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tcmq subscribe
 */
export function getSubscribe(args: GetSubscribeArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscribeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Tcmq/getSubscribe:getSubscribe", {
        "limit": args.limit,
        "offset": args.offset,
        "resultOutputFile": args.resultOutputFile,
        "subscriptionName": args.subscriptionName,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscribe.
 */
export interface GetSubscribeArgs {
    /**
     * Number of topics to be returned per page in case of paginated return. If this parameter is not passed in, 20 will be used by default. Maximum value: 50.
     */
    limit?: number;
    /**
     * Starting position of the list of topics to be returned on the current page in case of paginated return. If a value is entered, limit is required. If this parameter is left empty, 0 will be used by default.
     */
    offset?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Fuzzy search by SubscriptionName.
     */
    subscriptionName?: string;
    /**
     * Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
     */
    topicName: string;
}

/**
 * A collection of values returned by getSubscribe.
 */
export interface GetSubscribeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly offset?: number;
    readonly resultOutputFile?: string;
    /**
     * Set of subscription attributes.
     */
    readonly subscriptionLists: outputs.Tcmq.GetSubscribeSubscriptionList[];
    /**
     * Subscription name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
     */
    readonly subscriptionName?: string;
    readonly topicName: string;
}
/**
 * Use this data source to query detailed information of tcmq subscribe
 */
export function getSubscribeOutput(args: GetSubscribeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscribeResult> {
    return pulumi.output(args).apply((a: any) => getSubscribe(a, opts))
}

/**
 * A collection of arguments for invoking getSubscribe.
 */
export interface GetSubscribeOutputArgs {
    /**
     * Number of topics to be returned per page in case of paginated return. If this parameter is not passed in, 20 will be used by default. Maximum value: 50.
     */
    limit?: pulumi.Input<number>;
    /**
     * Starting position of the list of topics to be returned on the current page in case of paginated return. If a value is entered, limit is required. If this parameter is left empty, 0 will be used by default.
     */
    offset?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Fuzzy search by SubscriptionName.
     */
    subscriptionName?: pulumi.Input<string>;
    /**
     * Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
     */
    topicName: pulumi.Input<string>;
}
