// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of monitor basicAlarms
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const alarms = pulumi.output(tencentcloud.Monitor.getAlarmBasicAlarms({
 *     alarmStatuses: [1],
 *     endTime: 1697098903,
 *     instanceGroupIds: [5497073],
 *     metricNames: ["cpu_usage"],
 *     module: "monitor",
 *     occurTimeOrder: "DESC",
 *     projectIds: [0],
 *     startTime: 1696990903,
 *     viewNames: ["cvm_device"],
 * }));
 * ```
 */
export function getAlarmBasicAlarms(args: GetAlarmBasicAlarmsArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmBasicAlarmsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Monitor/getAlarmBasicAlarms:getAlarmBasicAlarms", {
        "alarmStatuses": args.alarmStatuses,
        "endTime": args.endTime,
        "instanceGroupIds": args.instanceGroupIds,
        "metricNames": args.metricNames,
        "module": args.module,
        "objLike": args.objLike,
        "occurTimeOrder": args.occurTimeOrder,
        "projectIds": args.projectIds,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
        "viewNames": args.viewNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarmBasicAlarms.
 */
export interface GetAlarmBasicAlarmsArgs {
    /**
     * Filter based on alarm status.
     */
    alarmStatuses?: number[];
    /**
     * End time, default to current timestamp.
     */
    endTime?: number;
    /**
     * Filter based on instance group ID.
     */
    instanceGroupIds?: number[];
    /**
     * Filter by indicator name.
     */
    metricNames?: string[];
    /**
     * Interface module name, current value monitor.
     */
    module: string;
    /**
     * Filter based on alarm objects.
     */
    objLike?: string;
    /**
     * Sort by occurrence time, taking ASC or DESC values.
     */
    occurTimeOrder?: string;
    /**
     * Filter based on project ID.
     */
    projectIds?: number[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Start time, default to one day is timestamp.
     */
    startTime?: number;
    /**
     * Filter based on policy type.
     */
    viewNames?: string[];
}

/**
 * A collection of values returned by getAlarmBasicAlarms.
 */
export interface GetAlarmBasicAlarmsResult {
    /**
     * Alarm status, ALARM indicates not recovered; OK indicates that it has been restored; NO_ DATA indicates insufficient data; NO_ CONF indicates that it has expired.
     */
    readonly alarmStatuses?: number[];
    /**
     * Alarm List.
     */
    readonly alarms: outputs.Monitor.GetAlarmBasicAlarmsAlarm[];
    readonly endTime?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceGroupIds?: number[];
    readonly metricNames?: string[];
    readonly module: string;
    readonly objLike?: string;
    readonly occurTimeOrder?: string;
    readonly projectIds?: number[];
    readonly resultOutputFile?: string;
    readonly startTime?: number;
    readonly viewNames?: string[];
    /**
     * Remarks.
     */
    readonly warning: string;
}

export function getAlarmBasicAlarmsOutput(args: GetAlarmBasicAlarmsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmBasicAlarmsResult> {
    return pulumi.output(args).apply(a => getAlarmBasicAlarms(a, opts))
}

/**
 * A collection of arguments for invoking getAlarmBasicAlarms.
 */
export interface GetAlarmBasicAlarmsOutputArgs {
    /**
     * Filter based on alarm status.
     */
    alarmStatuses?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * End time, default to current timestamp.
     */
    endTime?: pulumi.Input<number>;
    /**
     * Filter based on instance group ID.
     */
    instanceGroupIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Filter by indicator name.
     */
    metricNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface module name, current value monitor.
     */
    module: pulumi.Input<string>;
    /**
     * Filter based on alarm objects.
     */
    objLike?: pulumi.Input<string>;
    /**
     * Sort by occurrence time, taking ASC or DESC values.
     */
    occurTimeOrder?: pulumi.Input<string>;
    /**
     * Filter based on project ID.
     */
    projectIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Start time, default to one day is timestamp.
     */
    startTime?: pulumi.Input<number>;
    /**
     * Filter based on policy type.
     */
    viewNames?: pulumi.Input<pulumi.Input<string>[]>;
}
