// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a monitor tmpInstance
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const tmpInstance = new tencentcloud.Monitor.TmpInstance("tmpInstance", {
 *     dataRetentionTime: 30,
 *     instanceName: "demo",
 *     subnetId: "subnet-rdkj0agk",
 *     tags: {
 *         createdBy: "terraform",
 *     },
 *     vpcId: "vpc-2hfyray3",
 *     zone: "ap-guangzhou-3",
 * });
 * ```
 *
 * ## Import
 *
 * monitor tmpInstance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Monitor/tmpInstance:TmpInstance tmpInstance tmpInstance_id
 * ```
 */
export class TmpInstance extends pulumi.CustomResource {
    /**
     * Get an existing TmpInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TmpInstanceState, opts?: pulumi.CustomResourceOptions): TmpInstance {
        return new TmpInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Monitor/tmpInstance:TmpInstance';

    /**
     * Returns true if the given object is an instance of TmpInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TmpInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TmpInstance.__pulumiType;
    }

    /**
     * Data retention time.
     */
    public readonly dataRetentionTime!: pulumi.Output<number>;
    /**
     * Instance name.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Subnet Id.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Vpc Id.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Available zone.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a TmpInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TmpInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TmpInstanceArgs | TmpInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TmpInstanceState | undefined;
            resourceInputs["dataRetentionTime"] = state ? state.dataRetentionTime : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as TmpInstanceArgs | undefined;
            if ((!args || args.dataRetentionTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataRetentionTime'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["dataRetentionTime"] = args ? args.dataRetentionTime : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TmpInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TmpInstance resources.
 */
export interface TmpInstanceState {
    /**
     * Data retention time.
     */
    dataRetentionTime?: pulumi.Input<number>;
    /**
     * Instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Subnet Id.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Vpc Id.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Available zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TmpInstance resource.
 */
export interface TmpInstanceArgs {
    /**
     * Data retention time.
     */
    dataRetentionTime: pulumi.Input<number>;
    /**
     * Instance name.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Subnet Id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Vpc Id.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Available zone.
     */
    zone: pulumi.Input<string>;
}
