// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of monitor alarmMetric
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const alarmMetric = tencentcloud.Monitor.getAlarmMetric({
 *     module: "monitor",
 *     monitorType: "Monitoring",
 *     namespace: "cvm_device",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getAlarmMetric(args: GetAlarmMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmMetricResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Monitor/getAlarmMetric:getAlarmMetric", {
        "module": args.module,
        "monitorType": args.monitorType,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarmMetric.
 */
export interface GetAlarmMetricArgs {
    /**
     * Fixed value, as `monitor`.
     */
    module: string;
    /**
     * Monitoring Type Filter MT_QCE=Cloud Product Monitoring.
     */
    monitorType: string;
    /**
     * Alarm policy type, obtained from DescribeAllNamespaces, such as cvm_device.
     */
    namespace: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getAlarmMetric.
 */
export interface GetAlarmMetricResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Alarm indicator list.
     */
    readonly metrics: outputs.Monitor.GetAlarmMetricMetric[];
    readonly module: string;
    readonly monitorType: string;
    /**
     * Alarm strategy type.
     */
    readonly namespace: string;
    readonly resultOutputFile?: string;
}
/**
 * Use this data source to query detailed information of monitor alarmMetric
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const alarmMetric = tencentcloud.Monitor.getAlarmMetric({
 *     module: "monitor",
 *     monitorType: "Monitoring",
 *     namespace: "cvm_device",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getAlarmMetricOutput(args: GetAlarmMetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmMetricResult> {
    return pulumi.output(args).apply((a: any) => getAlarmMetric(a, opts))
}

/**
 * A collection of arguments for invoking getAlarmMetric.
 */
export interface GetAlarmMetricOutputArgs {
    /**
     * Fixed value, as `monitor`.
     */
    module: pulumi.Input<string>;
    /**
     * Monitoring Type Filter MT_QCE=Cloud Product Monitoring.
     */
    monitorType: pulumi.Input<string>;
    /**
     * Alarm policy type, obtained from DescribeAllNamespaces, such as cvm_device.
     */
    namespace: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
