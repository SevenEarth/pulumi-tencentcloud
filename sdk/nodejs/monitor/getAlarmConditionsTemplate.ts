// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of monitor alarmConditionsTemplate
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const alarmConditionsTemplate = pulumi.output(tencentcloud.Monitor.getAlarmConditionsTemplate({
 *     groupId: "7803070",
 *     groupName: "keep-template",
 *     module: "monitor",
 *     policyCountOrder: "asc=ascending",
 *     updateTimeOrder: "desc=descending",
 *     viewName: "cvm_device",
 * }));
 * ```
 */
export function getAlarmConditionsTemplate(args: GetAlarmConditionsTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmConditionsTemplateResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Monitor/getAlarmConditionsTemplate:getAlarmConditionsTemplate", {
        "groupId": args.groupId,
        "groupName": args.groupName,
        "module": args.module,
        "policyCountOrder": args.policyCountOrder,
        "resultOutputFile": args.resultOutputFile,
        "updateTimeOrder": args.updateTimeOrder,
        "viewName": args.viewName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarmConditionsTemplate.
 */
export interface GetAlarmConditionsTemplateArgs {
    /**
     * Filter queries based on trigger condition template ID.
     */
    groupId?: string;
    /**
     * Filter queries based on trigger condition template names.
     */
    groupName?: string;
    /**
     * Fixed value, as&amp;amp;#39; monitor &amp;amp;#39;.
     */
    module: string;
    /**
     * Specify the sorting method based on the number of binding policies, asc=ascending, desc=descending.
     */
    policyCountOrder?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Specify the sorting method by update time, asc=ascending, desc=descending.
     */
    updateTimeOrder?: string;
    /**
     * View name, composed of DescribeAllNamespacesObtain. For cloud product monitoring, retrieve the QceNamespacesNew. N.ID parameter from the interface, such as cvm_ Device.
     */
    viewName?: string;
}

/**
 * A collection of values returned by getAlarmConditionsTemplate.
 */
export interface GetAlarmConditionsTemplateResult {
    /**
     * Alarm Policy Group ID.
     */
    readonly groupId?: string;
    /**
     * Alarm Policy Group Name.
     */
    readonly groupName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly module: string;
    readonly policyCountOrder?: string;
    readonly resultOutputFile?: string;
    /**
     * Template List.
     */
    readonly templateGroupLists: outputs.Monitor.GetAlarmConditionsTemplateTemplateGroupList[];
    readonly updateTimeOrder?: string;
    /**
     * View.
     */
    readonly viewName?: string;
}

export function getAlarmConditionsTemplateOutput(args: GetAlarmConditionsTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmConditionsTemplateResult> {
    return pulumi.output(args).apply(a => getAlarmConditionsTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getAlarmConditionsTemplate.
 */
export interface GetAlarmConditionsTemplateOutputArgs {
    /**
     * Filter queries based on trigger condition template ID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Filter queries based on trigger condition template names.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Fixed value, as&amp;amp;#39; monitor &amp;amp;#39;.
     */
    module: pulumi.Input<string>;
    /**
     * Specify the sorting method based on the number of binding policies, asc=ascending, desc=descending.
     */
    policyCountOrder?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Specify the sorting method by update time, asc=ascending, desc=descending.
     */
    updateTimeOrder?: pulumi.Input<string>;
    /**
     * View name, composed of DescribeAllNamespacesObtain. For cloud product monitoring, retrieve the QceNamespacesNew. N.ID parameter from the interface, such as cvm_ Device.
     */
    viewName?: pulumi.Input<string>;
}
