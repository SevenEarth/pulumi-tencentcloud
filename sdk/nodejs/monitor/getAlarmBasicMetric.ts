// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of monitor basicMetric
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const alarmMetric = pulumi.output(tencentcloud.Monitor.getAlarmBasicMetric({
 *     dimensions: ["uuid"],
 *     metricName: "WanOuttraffic",
 *     namespace: "qce/cvm",
 * }));
 * ```
 */
export function getAlarmBasicMetric(args: GetAlarmBasicMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmBasicMetricResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Monitor/getAlarmBasicMetric:getAlarmBasicMetric", {
        "dimensions": args.dimensions,
        "metricName": args.metricName,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarmBasicMetric.
 */
export interface GetAlarmBasicMetricArgs {
    /**
     * Optional parameters, filtered by dimension.
     */
    dimensions?: string[];
    /**
     * Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
     */
    metricName?: string;
    /**
     * The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843 ).
     */
    namespace: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getAlarmBasicMetric.
 */
export interface GetAlarmBasicMetricResult {
    /**
     * Dimension name array.
     */
    readonly dimensions?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicator Name.
     */
    readonly metricName?: string;
    /**
     * List of indicator descriptions obtained from query.
     */
    readonly metricSets: outputs.Monitor.GetAlarmBasicMetricMetricSet[];
    /**
     * Namespaces, each cloud product will have a namespace.
     */
    readonly namespace: string;
    readonly resultOutputFile?: string;
}

export function getAlarmBasicMetricOutput(args: GetAlarmBasicMetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmBasicMetricResult> {
    return pulumi.output(args).apply(a => getAlarmBasicMetric(a, opts))
}

/**
 * A collection of arguments for invoking getAlarmBasicMetric.
 */
export interface GetAlarmBasicMetricOutputArgs {
    /**
     * Optional parameters, filtered by dimension.
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
     */
    metricName?: pulumi.Input<string>;
    /**
     * The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843 ).
     */
    namespace: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
