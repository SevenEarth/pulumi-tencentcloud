// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query monitor policy conditions(There is a lot of data and it is recommended to output to a file)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const monitorPolicyConditions = pulumi.output(tencentcloud.Monitor.getPolicyConditions({
 *     name: "Cloud Virtual Machine",
 *     resultOutputFile: "./tencentcloud_monitor_policy_conditions.txt",
 * }));
 * ```
 */
export function getPolicyConditions(args?: GetPolicyConditionsArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyConditionsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Monitor/getPolicyConditions:getPolicyConditions", {
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyConditions.
 */
export interface GetPolicyConditionsArgs {
    /**
     * Name of the policy name, support partial matching, eg:`Cloud Virtual Machine`,`Virtual`,`Cloud Load Banlancer-Private CLB Listener`.
     */
    name?: string;
    /**
     * Used to store results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getPolicyConditions.
 */
export interface GetPolicyConditionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list policy condition. Each element contains the following attributes:
     */
    readonly lists: outputs.Monitor.GetPolicyConditionsList[];
    /**
     * Name of this policy name.
     */
    readonly name?: string;
    readonly resultOutputFile?: string;
}

export function getPolicyConditionsOutput(args?: GetPolicyConditionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyConditionsResult> {
    return pulumi.output(args).apply(a => getPolicyConditions(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyConditions.
 */
export interface GetPolicyConditionsOutputArgs {
    /**
     * Name of the policy name, support partial matching, eg:`Cloud Virtual Machine`,`Virtual`,`Cloud Load Banlancer-Private CLB Listener`.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to store results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
