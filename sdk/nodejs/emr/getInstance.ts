// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides an available EMR for the user.
 *
 * The EMR data source fetch proper EMR from user's EMR pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const myEmr = pulumi.output(tencentcloud.Emr.getInstance({
 *     displayStrategy: "clusterList",
 *     instanceIds: ["emr-rnzqrleq"],
 * }));
 * ```
 */
export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Emr/getInstance:getInstance", {
        "displayStrategy": args.displayStrategy,
        "instanceIds": args.instanceIds,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    /**
     * Display strategy(e.g.:clusterList, monitorManage).
     */
    displayStrategy: string;
    /**
     * fetch all instances with same prefix(e.g.:emr-xxxxxx).
     */
    instanceIds?: string[];
    /**
     * Fetch all instances which owner same project. Default 0 meaning use default project id.
     */
    projectId?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    /**
     * A list of clusters will be exported and its every element contains the following attributes:
     */
    readonly clusters: outputs.Emr.GetInstanceCluster[];
    readonly displayStrategy: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceIds?: string[];
    /**
     * Project id of instance.
     */
    readonly projectId?: number;
    readonly resultOutputFile?: string;
}

export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply(a => getInstance(a, opts))
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    /**
     * Display strategy(e.g.:clusterList, monitorManage).
     */
    displayStrategy: pulumi.Input<string>;
    /**
     * fetch all instances with same prefix(e.g.:emr-xxxxxx).
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Fetch all instances which owner same project. Default 0 meaning use default project id.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
