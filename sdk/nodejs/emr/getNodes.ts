// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides an available EMR for the user.
 *
 * The EMR data source obtain the hardware node information by using the emr cluster ID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const myEmrNodes = tencentcloud.Emr.getNodes({
 *     instanceId: "emr-rnzqrleq",
 *     nodeFlag: "master",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNodes(args: GetNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetNodesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Emr/getNodes:getNodes", {
        "hardwareResourceType": args.hardwareResourceType,
        "instanceId": args.instanceId,
        "limit": args.limit,
        "nodeFlag": args.nodeFlag,
        "offset": args.offset,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesArgs {
    /**
     * Resource type: Support all/host/pod, default is all.
     */
    hardwareResourceType?: string;
    /**
     * Cluster instance ID, the instance ID is as follows: emr-xxxxxxxx.
     */
    instanceId: string;
    /**
     * The number returned per page, the default value is 100, and the maximum value is 100.
     */
    limit?: number;
    /**
     * Node ID, the value is:
     * - all: Means to get all type nodes, except cdb information.
     * - master: Indicates that the master node information is obtained.
     * - core: Indicates that the core node information is obtained.
     * - task: indicates obtaining task node information.
     * - common: means to get common node information.
     * - router: Indicates obtaining router node information.
     * - db: Indicates that the cdb information for the normal state is obtained.
     * - recyle: Indicates that the node information in the Recycle Bin isolation, including the cdb information, is obtained.
     * - renew: Indicates that all node information to be renewed, including cddb information, is obtained, and the auto-renewal node will not be returned.
     *
     * Note: Only the above values are now supported, entering other values will cause an error.
     */
    nodeFlag: string;
    /**
     * Page number, with a default value of 0, represents the first page.
     */
    offset?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getNodes.
 */
export interface GetNodesResult {
    /**
     * Resource type, host/pod.
     */
    readonly hardwareResourceType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly limit?: number;
    readonly nodeFlag: string;
    /**
     * List of node details.
     */
    readonly nodes: outputs.Emr.GetNodesNode[];
    readonly offset?: number;
    readonly resultOutputFile?: string;
}
/**
 * Provides an available EMR for the user.
 *
 * The EMR data source obtain the hardware node information by using the emr cluster ID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const myEmrNodes = tencentcloud.Emr.getNodes({
 *     instanceId: "emr-rnzqrleq",
 *     nodeFlag: "master",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNodesOutput(args: GetNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodesResult> {
    return pulumi.output(args).apply((a: any) => getNodes(a, opts))
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesOutputArgs {
    /**
     * Resource type: Support all/host/pod, default is all.
     */
    hardwareResourceType?: pulumi.Input<string>;
    /**
     * Cluster instance ID, the instance ID is as follows: emr-xxxxxxxx.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The number returned per page, the default value is 100, and the maximum value is 100.
     */
    limit?: pulumi.Input<number>;
    /**
     * Node ID, the value is:
     * - all: Means to get all type nodes, except cdb information.
     * - master: Indicates that the master node information is obtained.
     * - core: Indicates that the core node information is obtained.
     * - task: indicates obtaining task node information.
     * - common: means to get common node information.
     * - router: Indicates obtaining router node information.
     * - db: Indicates that the cdb information for the normal state is obtained.
     * - recyle: Indicates that the node information in the Recycle Bin isolation, including the cdb information, is obtained.
     * - renew: Indicates that all node information to be renewed, including cddb information, is obtained, and the auto-renewal node will not be returned.
     *
     * Note: Only the above values are now supported, entering other values will cause an error.
     */
    nodeFlag: pulumi.Input<string>;
    /**
     * Page number, with a default value of 0, represents the first page.
     */
    offset?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
