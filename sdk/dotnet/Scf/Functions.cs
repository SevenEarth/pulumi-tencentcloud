// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Scf
{
    public static class Functions
    {
        public static Task<FunctionsResult> InvokeAsync(FunctionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<FunctionsResult>("tencentcloud:Scf/functions:Functions", args ?? new FunctionsArgs(), options.WithDefaults());

        public static Output<FunctionsResult> Invoke(FunctionsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<FunctionsResult>("tencentcloud:Scf/functions:Functions", args ?? new FunctionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class FunctionsArgs : Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public FunctionsArgs()
        {
        }
    }

    public sealed class FunctionsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public FunctionsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class FunctionsResult
    {
        public readonly string? Description;
        public readonly ImmutableArray<Outputs.FunctionsFunctionResult> Functions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? Namespace;
        public readonly string? ResultOutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private FunctionsResult(
            string? description,

            ImmutableArray<Outputs.FunctionsFunctionResult> functions,

            string id,

            string? name,

            string? @namespace,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags)
        {
            Description = description;
            Functions = functions;
            Id = id;
            Name = name;
            Namespace = @namespace;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
        }
    }
}
