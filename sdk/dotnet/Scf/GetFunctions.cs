// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Scf
{
    public static class GetFunctions
    {
        /// <summary>
        /// Use this data source to query SCF functions.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooFunction = new Tencentcloud.Scf.Function("fooFunction", new Tencentcloud.Scf.FunctionArgs
        ///         {
        ///             Handler = "main.do_it",
        ///             Runtime = "Python3.6",
        ///             CosBucketName = "scf-code-1234567890",
        ///             CosObjectName = "code.zip",
        ///             CosBucketRegion = "ap-guangzhou",
        ///         });
        ///         var fooFunctions = Tencentcloud.Scf.GetFunctions.Invoke(new Tencentcloud.Scf.GetFunctionsInvokeArgs
        ///         {
        ///             Name = fooFunction.Name,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFunctionsResult> InvokeAsync(GetFunctionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFunctionsResult>("tencentcloud:Scf/getFunctions:getFunctions", args ?? new GetFunctionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query SCF functions.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooFunction = new Tencentcloud.Scf.Function("fooFunction", new Tencentcloud.Scf.FunctionArgs
        ///         {
        ///             Handler = "main.do_it",
        ///             Runtime = "Python3.6",
        ///             CosBucketName = "scf-code-1234567890",
        ///             CosObjectName = "code.zip",
        ///             CosBucketRegion = "ap-guangzhou",
        ///         });
        ///         var fooFunctions = Tencentcloud.Scf.GetFunctions.Invoke(new Tencentcloud.Scf.GetFunctionsInvokeArgs
        ///         {
        ///             Name = fooFunction.Name,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFunctionsResult> Invoke(GetFunctionsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFunctionsResult>("tencentcloud:Scf/getFunctions:getFunctions", args ?? new GetFunctionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the SCF function to be queried.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Name of the SCF function to be queried.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Namespace of the SCF function to be queried.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tags of the SCF function to be queried, can use up to 10 tags.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetFunctionsArgs()
        {
        }
    }

    public sealed class GetFunctionsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the SCF function to be queried.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the SCF function to be queried.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Namespace of the SCF function to be queried.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of the SCF function to be queried, can use up to 10 tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetFunctionsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFunctionsResult
    {
        /// <summary>
        /// Description of the SCF function.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// An information list of functions. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFunctionsFunctionResult> ScfFunctions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the SCF function trigger.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Namespace of the SCF function.
        /// </summary>
        public readonly string? Namespace;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Tags of the SCF function.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetFunctionsResult(
            string? description,

            ImmutableArray<Outputs.GetFunctionsFunctionResult> functions,

            string id,

            string? name,

            string? @namespace,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags)
        {
            Description = description;
            ScfFunctions = functions;
            Id = id;
            Name = name;
            Namespace = @namespace;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
        }
    }
}
