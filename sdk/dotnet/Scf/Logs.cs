// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Scf
{
    public static class Logs
    {
        public static Task<LogsResult> InvokeAsync(LogsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<LogsResult>("tencentcloud:Scf/logs:Logs", args ?? new LogsArgs(), options.WithDefaults());

        public static Output<LogsResult> Invoke(LogsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<LogsResult>("tencentcloud:Scf/logs:Logs", args ?? new LogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class LogsArgs : Pulumi.InvokeArgs
    {
        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("functionName", required: true)]
        public string FunctionName { get; set; } = null!;

        [Input("invokeRequestId")]
        public string? InvokeRequestId { get; set; }

        [Input("limit")]
        public int? Limit { get; set; }

        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        [Input("order")]
        public string? Order { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("retCode")]
        public string? RetCode { get; set; }

        [Input("startTime")]
        public string? StartTime { get; set; }

        public LogsArgs()
        {
        }
    }

    public sealed class LogsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        [Input("invokeRequestId")]
        public Input<string>? InvokeRequestId { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        [Input("order")]
        public Input<string>? Order { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("retCode")]
        public Input<string>? RetCode { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public LogsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class LogsResult
    {
        public readonly string? EndTime;
        public readonly string FunctionName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InvokeRequestId;
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.LogsLogResult> Logs;
        public readonly string? Namespace;
        public readonly int? Offset;
        public readonly string? Order;
        public readonly string? OrderBy;
        public readonly string? ResultOutputFile;
        public readonly string? RetCode;
        public readonly string? StartTime;

        [OutputConstructor]
        private LogsResult(
            string? endTime,

            string functionName,

            string id,

            string? invokeRequestId,

            int? limit,

            ImmutableArray<Outputs.LogsLogResult> logs,

            string? @namespace,

            int? offset,

            string? order,

            string? orderBy,

            string? resultOutputFile,

            string? retCode,

            string? startTime)
        {
            EndTime = endTime;
            FunctionName = functionName;
            Id = id;
            InvokeRequestId = invokeRequestId;
            Limit = limit;
            Logs = logs;
            Namespace = @namespace;
            Offset = offset;
            Order = order;
            OrderBy = orderBy;
            ResultOutputFile = resultOutputFile;
            RetCode = retCode;
            StartTime = startTime;
        }
    }
}
