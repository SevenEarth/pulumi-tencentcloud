// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    public static class GetBasicInstances
    {
        /// <summary>
        /// Use this data source to query SQL Server basic instances
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = new Tencentcloud.Sqlserver.BasicInstance("test", new Tencentcloud.Sqlserver.BasicInstanceArgs
        ///         {
        ///             AvailabilityZone = @var.Availability_zone,
        ///             ChargeType = "POSTPAID_BY_HOUR",
        ///             VpcId = "vpc-26w7r56z",
        ///             SubnetId = "subnet-lvlr6eeu",
        ///             MachineType = "CLOUD_PREMIUM",
        ///             ProjectId = 0,
        ///             Memory = 2,
        ///             Storage = 10,
        ///             Cpu = 1,
        ///             SecurityGroups = 
        ///             {
        ///                 "sg-nltpbqg1",
        ///             },
        ///             Tags = 
        ///             {
        ///                 { "test", "test" },
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBasicInstancesResult> InvokeAsync(GetBasicInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBasicInstancesResult>("tencentcloud:Sqlserver/getBasicInstances:getBasicInstances", args ?? new GetBasicInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query SQL Server basic instances
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = new Tencentcloud.Sqlserver.BasicInstance("test", new Tencentcloud.Sqlserver.BasicInstanceArgs
        ///         {
        ///             AvailabilityZone = @var.Availability_zone,
        ///             ChargeType = "POSTPAID_BY_HOUR",
        ///             VpcId = "vpc-26w7r56z",
        ///             SubnetId = "subnet-lvlr6eeu",
        ///             MachineType = "CLOUD_PREMIUM",
        ///             ProjectId = 0,
        ///             Memory = 2,
        ///             Storage = 10,
        ///             Cpu = 1,
        ///             SecurityGroups = 
        ///             {
        ///                 "sg-nltpbqg1",
        ///             },
        ///             Tags = 
        ///             {
        ///                 { "test", "test" },
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBasicInstancesResult> Invoke(GetBasicInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBasicInstancesResult>("tencentcloud:Sqlserver/getBasicInstances:getBasicInstances", args ?? new GetBasicInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBasicInstancesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of the SQL Server basic instance to be query.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Project ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("projectId")]
        public int? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Subnet ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// Vpc ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetBasicInstancesArgs()
        {
        }
    }

    public sealed class GetBasicInstancesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the SQL Server basic instance to be query.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Subnet ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// Vpc ID of the SQL Server basic instance to be query.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetBasicInstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBasicInstancesResult
    {
        /// <summary>
        /// ID of the SQL Server basic instance.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A list of SQL Server basic instances. Each element contains the following attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicInstancesInstanceListResult> InstanceLists;
        /// <summary>
        /// Name of the SQL Server basic instance.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Project ID, default value is `0`.
        /// </summary>
        public readonly int? ProjectId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// ID of subnet.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// ID of VPC.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetBasicInstancesResult(
            string? id,

            ImmutableArray<Outputs.GetBasicInstancesInstanceListResult> instanceLists,

            string? name,

            int? projectId,

            string? resultOutputFile,

            string? subnetId,

            string? vpcId)
        {
            Id = id;
            InstanceLists = instanceLists;
            Name = name;
            ProjectId = projectId;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
