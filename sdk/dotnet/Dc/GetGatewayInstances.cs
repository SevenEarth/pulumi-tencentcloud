// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dc
{
    public static class GetGatewayInstances
    {
        /// <summary>
        /// Use this data source to query detailed information of direct connect gateway instances.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = new Tencentcloud.Ccn.Instance("main", new Tencentcloud.Ccn.InstanceArgs
        ///         {
        ///             Description = "ci-temp-test-ccn-des",
        ///             Qos = "AG",
        ///         });
        ///         var ccnMain = new Tencentcloud.Dc.Gateway("ccnMain", new Tencentcloud.Dc.GatewayArgs
        ///         {
        ///             NetworkInstanceId = main.Id,
        ///             NetworkType = "CCN",
        ///             GatewayType = "NORMAL",
        ///         });
        ///         var nameSelect = Tencentcloud.Dc.GetGatewayInstances.Invoke(new Tencentcloud.Dc.GetGatewayInstancesInvokeArgs
        ///         {
        ///             Name = ccnMain.Name,
        ///         });
        ///         var idSelect = Tencentcloud.Dc.GetGatewayInstances.Invoke(new Tencentcloud.Dc.GetGatewayInstancesInvokeArgs
        ///         {
        ///             DcgId = ccnMain.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGatewayInstancesResult> InvokeAsync(GetGatewayInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewayInstancesResult>("tencentcloud:Dc/getGatewayInstances:getGatewayInstances", args ?? new GetGatewayInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of direct connect gateway instances.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = new Tencentcloud.Ccn.Instance("main", new Tencentcloud.Ccn.InstanceArgs
        ///         {
        ///             Description = "ci-temp-test-ccn-des",
        ///             Qos = "AG",
        ///         });
        ///         var ccnMain = new Tencentcloud.Dc.Gateway("ccnMain", new Tencentcloud.Dc.GatewayArgs
        ///         {
        ///             NetworkInstanceId = main.Id,
        ///             NetworkType = "CCN",
        ///             GatewayType = "NORMAL",
        ///         });
        ///         var nameSelect = Tencentcloud.Dc.GetGatewayInstances.Invoke(new Tencentcloud.Dc.GetGatewayInstancesInvokeArgs
        ///         {
        ///             Name = ccnMain.Name,
        ///         });
        ///         var idSelect = Tencentcloud.Dc.GetGatewayInstances.Invoke(new Tencentcloud.Dc.GetGatewayInstancesInvokeArgs
        ///         {
        ///             DcgId = ccnMain.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGatewayInstancesResult> Invoke(GetGatewayInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGatewayInstancesResult>("tencentcloud:Dc/getGatewayInstances:getGatewayInstances", args ?? new GetGatewayInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayInstancesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the DCG to be queried.
        /// </summary>
        [Input("dcgId")]
        public string? DcgId { get; set; }

        /// <summary>
        /// Name of the DCG to be queried.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetGatewayInstancesArgs()
        {
        }
    }

    public sealed class GetGatewayInstancesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the DCG to be queried.
        /// </summary>
        [Input("dcgId")]
        public Input<string>? DcgId { get; set; }

        /// <summary>
        /// Name of the DCG to be queried.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetGatewayInstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGatewayInstancesResult
    {
        /// <summary>
        /// ID of the DCG.
        /// </summary>
        public readonly string? DcgId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information list of the DCG.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewayInstancesInstanceListResult> InstanceLists;
        /// <summary>
        /// Name of the DCG.
        /// </summary>
        public readonly string? Name;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetGatewayInstancesResult(
            string? dcgId,

            string id,

            ImmutableArray<Outputs.GetGatewayInstancesInstanceListResult> instanceLists,

            string? name,

            string? resultOutputFile)
        {
            DcgId = dcgId;
            Id = id;
            InstanceLists = instanceLists;
            Name = name;
            ResultOutputFile = resultOutputFile;
        }
    }
}
