// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.As
{
    public static class GetScalingGroups
    {
        /// <summary>
        /// Use this data source to query the detail information of an existing autoscaling group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var asScalingGroups = Output.Create(Tencentcloud.As.GetScalingGroups.InvokeAsync(new Tencentcloud.As.GetScalingGroupsArgs
        ///         {
        ///             ConfigurationId = "asc-oqio4yyj",
        ///             ResultOutputFile = "my_test_path",
        ///             ScalingGroupName = "myasgroup",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScalingGroupsResult> InvokeAsync(GetScalingGroupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalingGroupsResult>("tencentcloud:As/getScalingGroups:getScalingGroups", args ?? new GetScalingGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query the detail information of an existing autoscaling group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var asScalingGroups = Output.Create(Tencentcloud.As.GetScalingGroups.InvokeAsync(new Tencentcloud.As.GetScalingGroupsArgs
        ///         {
        ///             ConfigurationId = "asc-oqio4yyj",
        ///             ResultOutputFile = "my_test_path",
        ///             ScalingGroupName = "myasgroup",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScalingGroupsResult> Invoke(GetScalingGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScalingGroupsResult>("tencentcloud:As/getScalingGroups:getScalingGroups", args ?? new GetScalingGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalingGroupsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by launch configuration ID.
        /// </summary>
        [Input("configurationId")]
        public string? ConfigurationId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// A specified scaling group ID used to query.
        /// </summary>
        [Input("scalingGroupId")]
        public string? ScalingGroupId { get; set; }

        /// <summary>
        /// A scaling group name used to query.
        /// </summary>
        [Input("scalingGroupName")]
        public string? ScalingGroupName { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tags used to query.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetScalingGroupsArgs()
        {
        }
    }

    public sealed class GetScalingGroupsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by launch configuration ID.
        /// </summary>
        [Input("configurationId")]
        public Input<string>? ConfigurationId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// A specified scaling group ID used to query.
        /// </summary>
        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        /// <summary>
        /// A scaling group name used to query.
        /// </summary>
        [Input("scalingGroupName")]
        public Input<string>? ScalingGroupName { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags used to query.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetScalingGroupsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScalingGroupsResult
    {
        /// <summary>
        /// Launch configuration ID.
        /// </summary>
        public readonly string? ConfigurationId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Auto scaling group ID.
        /// </summary>
        public readonly string? ScalingGroupId;
        /// <summary>
        /// A list of scaling group. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingGroupsScalingGroupListResult> ScalingGroupLists;
        /// <summary>
        /// Auto scaling group name.
        /// </summary>
        public readonly string? ScalingGroupName;
        /// <summary>
        /// Tags of the scaling group.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetScalingGroupsResult(
            string? configurationId,

            string id,

            string? resultOutputFile,

            string? scalingGroupId,

            ImmutableArray<Outputs.GetScalingGroupsScalingGroupListResult> scalingGroupLists,

            string? scalingGroupName,

            ImmutableDictionary<string, object>? tags)
        {
            ConfigurationId = configurationId;
            Id = id;
            ResultOutputFile = resultOutputFile;
            ScalingGroupId = scalingGroupId;
            ScalingGroupLists = scalingGroupLists;
            ScalingGroupName = scalingGroupName;
            Tags = tags;
        }
    }
}
