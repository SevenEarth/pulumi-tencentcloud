// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mongodb
{
    public static class Instances
    {
        public static Task<InstancesResult> InvokeAsync(InstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<InstancesResult>("tencentcloud:Mongodb/instances:Instances", args ?? new InstancesArgs(), options.WithDefaults());

        public static Output<InstancesResult> Invoke(InstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<InstancesResult>("tencentcloud:Mongodb/instances:Instances", args ?? new InstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstancesArgs : Pulumi.InvokeArgs
    {
        [Input("clusterType")]
        public string? ClusterType { get; set; }

        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("instanceNamePrefix")]
        public string? InstanceNamePrefix { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public InstancesArgs()
        {
        }
    }

    public sealed class InstancesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("instanceNamePrefix")]
        public Input<string>? InstanceNamePrefix { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public InstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class InstancesResult
    {
        public readonly string? ClusterType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly ImmutableArray<Outputs.InstancesInstanceListResult> InstanceLists;
        public readonly string? InstanceNamePrefix;
        public readonly string? ResultOutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private InstancesResult(
            string? clusterType,

            string id,

            string? instanceId,

            ImmutableArray<Outputs.InstancesInstanceListResult> instanceLists,

            string? instanceNamePrefix,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags)
        {
            ClusterType = clusterType;
            Id = id;
            InstanceId = instanceId;
            InstanceLists = instanceLists;
            InstanceNamePrefix = instanceNamePrefix;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
        }
    }
}
