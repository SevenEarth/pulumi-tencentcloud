// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Gaap
{
    public static class HttpRules
    {
        public static Task<HttpRulesResult> InvokeAsync(HttpRulesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<HttpRulesResult>("tencentcloud:Gaap/httpRules:HttpRules", args ?? new HttpRulesArgs(), options.WithDefaults());

        public static Output<HttpRulesResult> Invoke(HttpRulesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<HttpRulesResult>("tencentcloud:Gaap/httpRules:HttpRules", args ?? new HttpRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class HttpRulesArgs : Pulumi.InvokeArgs
    {
        [Input("domain")]
        public string? Domain { get; set; }

        [Input("forwardHost")]
        public string? ForwardHost { get; set; }

        [Input("listenerId", required: true)]
        public string ListenerId { get; set; } = null!;

        [Input("path")]
        public string? Path { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public HttpRulesArgs()
        {
        }
    }

    public sealed class HttpRulesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("forwardHost")]
        public Input<string>? ForwardHost { get; set; }

        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public HttpRulesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class HttpRulesResult
    {
        public readonly string? Domain;
        public readonly string? ForwardHost;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ListenerId;
        public readonly string? Path;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.HttpRulesRuleResult> Rules;

        [OutputConstructor]
        private HttpRulesResult(
            string? domain,

            string? forwardHost,

            string id,

            string listenerId,

            string? path,

            string? resultOutputFile,

            ImmutableArray<Outputs.HttpRulesRuleResult> rules)
        {
            Domain = domain;
            ForwardHost = forwardHost;
            Id = id;
            ListenerId = listenerId;
            Path = path;
            ResultOutputFile = resultOutputFile;
            Rules = rules;
        }
    }
}
