// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.ApiGateway
{
    /// <summary>
    /// Use this resource to API gateway attach access key to usage plan.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = Pulumi.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var key = new Tencentcloud.ApiGateway.ApiKey("key", new Tencentcloud.ApiGateway.ApiKeyArgs
    ///         {
    ///             SecretName = "my_api_key",
    ///             Status = "on",
    ///         });
    ///         var plan = new Tencentcloud.ApiGateway.UsagePlan("plan", new Tencentcloud.ApiGateway.UsagePlanArgs
    ///         {
    ///             UsagePlanName = "my_plan",
    ///             UsagePlanDesc = "nice plan",
    ///             MaxRequestNum = 100,
    ///             MaxRequestNumPreSec = 10,
    ///         });
    ///         var attach = new Tencentcloud.ApiGateway.ApiKeyAttachment("attach", new Tencentcloud.ApiGateway.ApiKeyAttachmentArgs
    ///         {
    ///             ApiKeyId = key.Id,
    ///             UsagePlanId = plan.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// API gateway attach access key can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:ApiGateway/apiKeyAttachment:ApiKeyAttachment attach AKID110b8Rmuw7t0fP1N8bi809n327023Is7xN8f#usagePlan-gyeafpab
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:ApiGateway/apiKeyAttachment:ApiKeyAttachment")]
    public partial class ApiKeyAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// ID of API key.
        /// </summary>
        [Output("apiKeyId")]
        public Output<string> ApiKeyId { get; private set; } = null!;

        /// <summary>
        /// ID of the usage plan.
        /// </summary>
        [Output("usagePlanId")]
        public Output<string> UsagePlanId { get; private set; } = null!;


        /// <summary>
        /// Create a ApiKeyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiKeyAttachment(string name, ApiKeyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:ApiGateway/apiKeyAttachment:ApiKeyAttachment", name, args ?? new ApiKeyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiKeyAttachment(string name, Input<string> id, ApiKeyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:ApiGateway/apiKeyAttachment:ApiKeyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiKeyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiKeyAttachment Get(string name, Input<string> id, ApiKeyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiKeyAttachment(name, id, state, options);
        }
    }

    public sealed class ApiKeyAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of API key.
        /// </summary>
        [Input("apiKeyId", required: true)]
        public Input<string> ApiKeyId { get; set; } = null!;

        /// <summary>
        /// ID of the usage plan.
        /// </summary>
        [Input("usagePlanId", required: true)]
        public Input<string> UsagePlanId { get; set; } = null!;

        public ApiKeyAttachmentArgs()
        {
        }
    }

    public sealed class ApiKeyAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of API key.
        /// </summary>
        [Input("apiKeyId")]
        public Input<string>? ApiKeyId { get; set; }

        /// <summary>
        /// ID of the usage plan.
        /// </summary>
        [Input("usagePlanId")]
        public Input<string>? UsagePlanId { get; set; }

        public ApiKeyAttachmentState()
        {
        }
    }
}
