// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tcaplus
{
    public static class GetTables
    {
        /// <summary>
        /// Use this data source to query TcaplusDB tables.
        /// </summary>
        public static Task<GetTablesResult> InvokeAsync(GetTablesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTablesResult>("tencentcloud:Tcaplus/getTables:getTables", args ?? new GetTablesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query TcaplusDB tables.
        /// </summary>
        public static Output<GetTablesResult> Invoke(GetTablesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTablesResult>("tencentcloud:Tcaplus/getTables:getTables", args ?? new GetTablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTablesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the TcaplusDB cluster to be query.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// File for saving results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Table ID to be query.
        /// </summary>
        [Input("tableId")]
        public string? TableId { get; set; }

        /// <summary>
        /// Table name to be query.
        /// </summary>
        [Input("tableName")]
        public string? TableName { get; set; }

        /// <summary>
        /// ID of the table group to be query.
        /// </summary>
        [Input("tablegroupId")]
        public string? TablegroupId { get; set; }

        public GetTablesArgs()
        {
        }
    }

    public sealed class GetTablesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the TcaplusDB cluster to be query.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// File for saving results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Table ID to be query.
        /// </summary>
        [Input("tableId")]
        public Input<string>? TableId { get; set; }

        /// <summary>
        /// Table name to be query.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// ID of the table group to be query.
        /// </summary>
        [Input("tablegroupId")]
        public Input<string>? TablegroupId { get; set; }

        public GetTablesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTablesResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of TcaplusDB tables. Each element contains the following attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTablesListResult> Lists;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// ID of the TcaplusDB table.
        /// </summary>
        public readonly string? TableId;
        /// <summary>
        /// Name of the TcaplusDB table.
        /// </summary>
        public readonly string? TableName;
        /// <summary>
        /// Table group id of the TcaplusDB table.
        /// </summary>
        public readonly string? TablegroupId;

        [OutputConstructor]
        private GetTablesResult(
            string clusterId,

            string id,

            ImmutableArray<Outputs.GetTablesListResult> lists,

            string? resultOutputFile,

            string? tableId,

            string? tableName,

            string? tablegroupId)
        {
            ClusterId = clusterId;
            Id = id;
            Lists = lists;
            ResultOutputFile = resultOutputFile;
            TableId = tableId;
            TableName = tableName;
            TablegroupId = tablegroupId;
        }
    }
}
