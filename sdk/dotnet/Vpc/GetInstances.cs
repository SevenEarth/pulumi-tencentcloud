// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpc
{
    public static class GetInstances
    {
        /// <summary>
        /// Use this data source to query vpc instances' information.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = new Tencentcloud.Vpc.Instance("foo", new Tencentcloud.Vpc.InstanceArgs
        ///         {
        ///             CidrBlock = "10.0.0.0/16",
        ///         });
        ///         var idInstances = Tencentcloud.Vpc.GetInstances.Invoke(new Tencentcloud.Vpc.GetInstancesInvokeArgs
        ///         {
        ///             VpcId = foo.Id,
        ///         });
        ///         var nameInstances = Tencentcloud.Vpc.GetInstances.Invoke(new Tencentcloud.Vpc.GetInstancesInvokeArgs
        ///         {
        ///             Name = foo.Name,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("tencentcloud:Vpc/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query vpc instances' information.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = new Tencentcloud.Vpc.Instance("foo", new Tencentcloud.Vpc.InstanceArgs
        ///         {
        ///             CidrBlock = "10.0.0.0/16",
        ///         });
        ///         var idInstances = Tencentcloud.Vpc.GetInstances.Invoke(new Tencentcloud.Vpc.GetInstancesInvokeArgs
        ///         {
        ///             VpcId = foo.Id,
        ///         });
        ///         var nameInstances = Tencentcloud.Vpc.GetInstances.Invoke(new Tencentcloud.Vpc.GetInstancesInvokeArgs
        ///         {
        ///             Name = foo.Name,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstancesResult> Invoke(GetInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstancesResult>("tencentcloud:Vpc/getInstances:getInstances", args ?? new GetInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter VPC with this CIDR.
        /// </summary>
        [Input("cidrBlock")]
        public string? CidrBlock { get; set; }

        /// <summary>
        /// Filter default or no default VPC.
        /// </summary>
        [Input("isDefault")]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Name of the VPC to be queried.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Filter if VPC has this tag.
        /// </summary>
        [Input("tagKey")]
        public string? TagKey { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tags of the VPC to be queried.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the VPC to be queried.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetInstancesArgs()
        {
        }
    }

    public sealed class GetInstancesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter VPC with this CIDR.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Filter default or no default VPC.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the VPC to be queried.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Filter if VPC has this tag.
        /// </summary>
        [Input("tagKey")]
        public Input<string>? TagKey { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of the VPC to be queried.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the VPC to be queried.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetInstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        /// <summary>
        /// A network address block of a VPC CIDR.
        /// </summary>
        public readonly string? CidrBlock;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The information list of the VPC.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceListResult> InstanceLists;
        /// <summary>
        /// Indicates whether it is the default VPC for this region.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// Name of the VPC.
        /// </summary>
        public readonly string? Name;
        public readonly string? ResultOutputFile;
        public readonly string? TagKey;
        /// <summary>
        /// Tags of the VPC.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// ID of the VPC.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetInstancesResult(
            string? cidrBlock,

            string id,

            ImmutableArray<Outputs.GetInstancesInstanceListResult> instanceLists,

            bool? isDefault,

            string? name,

            string? resultOutputFile,

            string? tagKey,

            ImmutableDictionary<string, object>? tags,

            string? vpcId)
        {
            CidrBlock = cidrBlock;
            Id = id;
            InstanceLists = instanceLists;
            IsDefault = isDefault;
            Name = name;
            ResultOutputFile = resultOutputFile;
            TagKey = tagKey;
            Tags = tags;
            VpcId = vpcId;
        }
    }
}
