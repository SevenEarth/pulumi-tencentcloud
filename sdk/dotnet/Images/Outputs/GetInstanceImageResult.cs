// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Images.Outputs
{

    [OutputType]
    public sealed class GetInstanceImageResult
    {
        /// <summary>
        /// Architecture of the image.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Created time of the image.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Image creator of the image.
        /// </summary>
        public readonly string ImageCreator;
        /// <summary>
        /// Description of the image.
        /// </summary>
        public readonly string ImageDescription;
        /// <summary>
        /// ID of the image to be queried.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Name of the image.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// Size of the image.
        /// </summary>
        public readonly int ImageSize;
        /// <summary>
        /// Image source of the image.
        /// </summary>
        public readonly string ImageSource;
        /// <summary>
        /// State of the image.
        /// </summary>
        public readonly string ImageState;
        /// <summary>
        /// A list of the image type to be queried. Valid values: 'PUBLIC_IMAGE', 'PRIVATE_IMAGE', 'SHARED_IMAGE', 'MARKET_IMAGE'.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// A string to apply with fuzzy match to the os_name attribute on the image list returned by TencentCloud, conflict with 'image_name_regex'.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Platform of the image.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// List of snapshot details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceImageSnapshotResult> Snapshots;
        /// <summary>
        /// Whether support cloud-init.
        /// </summary>
        public readonly bool SupportCloudInit;
        /// <summary>
        /// Sync percent of the image.
        /// </summary>
        public readonly int SyncPercent;

        [OutputConstructor]
        private GetInstanceImageResult(
            string architecture,

            string createdTime,

            string imageCreator,

            string imageDescription,

            string imageId,

            string imageName,

            int imageSize,

            string imageSource,

            string imageState,

            string imageType,

            string osName,

            string platform,

            ImmutableArray<Outputs.GetInstanceImageSnapshotResult> snapshots,

            bool supportCloudInit,

            int syncPercent)
        {
            Architecture = architecture;
            CreatedTime = createdTime;
            ImageCreator = imageCreator;
            ImageDescription = imageDescription;
            ImageId = imageId;
            ImageName = imageName;
            ImageSize = imageSize;
            ImageSource = imageSource;
            ImageState = imageState;
            ImageType = imageType;
            OsName = osName;
            Platform = platform;
            Snapshots = snapshots;
            SupportCloudInit = supportCloudInit;
            SyncPercent = syncPercent;
        }
    }
}
