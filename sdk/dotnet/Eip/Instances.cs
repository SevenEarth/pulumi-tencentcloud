// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Eip
{
    public static class Instances
    {
        public static Task<InstancesResult> InvokeAsync(InstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<InstancesResult>("tencentcloud:Eip/instances:Instances", args ?? new InstancesArgs(), options.WithDefaults());

        public static Output<InstancesResult> Invoke(InstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<InstancesResult>("tencentcloud:Eip/instances:Instances", args ?? new InstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstancesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.InstancesFilterArgs>? _filters;
        public List<Inputs.InstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.InstancesFilterArgs>());
            set => _filters = value;
        }

        [Input("includeArrears")]
        public bool? IncludeArrears { get; set; }

        [Input("includeBlocked")]
        public bool? IncludeBlocked { get; set; }

        public InstancesArgs()
        {
        }
    }

    public sealed class InstancesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.InstancesFilterInputArgs>? _filters;
        public InputList<Inputs.InstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.InstancesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("includeArrears")]
        public Input<bool>? IncludeArrears { get; set; }

        [Input("includeBlocked")]
        public Input<bool>? IncludeBlocked { get; set; }

        public InstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class InstancesResult
    {
        public readonly ImmutableArray<Outputs.InstancesFilterResult> Filters;
        public readonly string Id;
        public readonly bool? IncludeArrears;
        public readonly bool? IncludeBlocked;
        public readonly string PublicIp;
        public readonly string Status;

        [OutputConstructor]
        private InstancesResult(
            ImmutableArray<Outputs.InstancesFilterResult> filters,

            string id,

            bool? includeArrears,

            bool? includeBlocked,

            string publicIp,

            string status)
        {
            Filters = filters;
            Id = id;
            IncludeArrears = includeArrears;
            IncludeBlocked = includeBlocked;
            PublicIp = publicIp;
            Status = status;
        }
    }
}
