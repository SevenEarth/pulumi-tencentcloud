// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dayu.Outputs
{

    [OutputType]
    public sealed class GetL7RulesListResult
    {
        /// <summary>
        /// Domain of the layer 7 rule to be queried.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// HTTP Status Code. `1` means the return value `1xx` is health. `2` means the return value `2xx` is health. `4` means the return value `3xx` is health. `8` means the return value `4xx` is health. `16` means the return value `5xx` is health. If you want multiple return codes to indicate health, need to add the corresponding values.
        /// </summary>
        public readonly int HealthCheckCode;
        /// <summary>
        /// Health threshold of health check.
        /// </summary>
        public readonly int HealthCheckHealthNum;
        /// <summary>
        /// Interval time of health check.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// Methods of health check.
        /// </summary>
        public readonly string HealthCheckMethod;
        /// <summary>
        /// Path of health check.
        /// </summary>
        public readonly string HealthCheckPath;
        /// <summary>
        /// Indicates whether health check is enabled.
        /// </summary>
        public readonly bool HealthCheckSwitch;
        /// <summary>
        /// Unhealthy threshold of health check.
        /// </summary>
        public readonly int HealthCheckUnhealthNum;
        /// <summary>
        /// Name of the rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Protocol of the rule.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Id of the layer 7 rule to be queried.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// Source list of the rule.
        /// </summary>
        public readonly ImmutableArray<string> SourceLists;
        /// <summary>
        /// Source type, 1 for source of host, 2 for source of ip.
        /// </summary>
        public readonly int SourceType;
        /// <summary>
        /// SSL id.
        /// </summary>
        public readonly string SslId;
        /// <summary>
        /// Status of the rule. `0` for create/modify success, `2` for create/modify fail, `3` for delete success, `5` for waiting to be created/modified, `7` for waiting to be deleted and `8` for waiting to get SSL id.
        /// </summary>
        public readonly int Status;
        /// <summary>
        /// Indicate the rule will take effect or not.
        /// </summary>
        public readonly bool Switch;
        /// <summary>
        /// Threshold of the rule.
        /// </summary>
        public readonly int Threshold;

        [OutputConstructor]
        private GetL7RulesListResult(
            string domain,

            int healthCheckCode,

            int healthCheckHealthNum,

            int healthCheckInterval,

            string healthCheckMethod,

            string healthCheckPath,

            bool healthCheckSwitch,

            int healthCheckUnhealthNum,

            string name,

            string protocol,

            string ruleId,

            ImmutableArray<string> sourceLists,

            int sourceType,

            string sslId,

            int status,

            bool @switch,

            int threshold)
        {
            Domain = domain;
            HealthCheckCode = healthCheckCode;
            HealthCheckHealthNum = healthCheckHealthNum;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckMethod = healthCheckMethod;
            HealthCheckPath = healthCheckPath;
            HealthCheckSwitch = healthCheckSwitch;
            HealthCheckUnhealthNum = healthCheckUnhealthNum;
            Name = name;
            Protocol = protocol;
            RuleId = ruleId;
            SourceLists = sourceLists;
            SourceType = sourceType;
            SslId = sslId;
            Status = status;
            Switch = @switch;
            Threshold = threshold;
        }
    }
}
