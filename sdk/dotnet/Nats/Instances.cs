// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Nats
{
    public static class Instances
    {
        public static Task<InstancesResult> InvokeAsync(InstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<InstancesResult>("tencentcloud:Nats/instances:Instances", args ?? new InstancesArgs(), options.WithDefaults());

        public static Output<InstancesResult> Invoke(InstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<InstancesResult>("tencentcloud:Nats/instances:Instances", args ?? new InstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstancesArgs : Pulumi.InvokeArgs
    {
        [Input("bandwidth")]
        public int? Bandwidth { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("maxConcurrent")]
        public int? MaxConcurrent { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("state")]
        public int? State { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public InstancesArgs()
        {
        }
    }

    public sealed class InstancesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("maxConcurrent")]
        public Input<int>? MaxConcurrent { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("state")]
        public Input<int>? State { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public InstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class InstancesResult
    {
        public readonly int? Bandwidth;
        public readonly string? Id;
        public readonly int? MaxConcurrent;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.InstancesNatResult> Nats;
        public readonly int? State;
        public readonly string? VpcId;

        [OutputConstructor]
        private InstancesResult(
            int? bandwidth,

            string? id,

            int? maxConcurrent,

            string? name,

            ImmutableArray<Outputs.InstancesNatResult> nats,

            int? state,

            string? vpcId)
        {
            Bandwidth = bandwidth;
            Id = id;
            MaxConcurrent = maxConcurrent;
            Name = name;
            Nats = nats;
            State = state;
            VpcId = vpcId;
        }
    }
}
