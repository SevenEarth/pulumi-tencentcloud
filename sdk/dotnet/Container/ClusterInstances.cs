// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Container
{
    public static class ClusterInstances
    {
        public static Task<ClusterInstancesResult> InvokeAsync(ClusterInstancesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ClusterInstancesResult>("tencentcloud:Container/clusterInstances:ClusterInstances", args ?? new ClusterInstancesArgs(), options.WithDefaults());

        public static Output<ClusterInstancesResult> Invoke(ClusterInstancesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ClusterInstancesResult>("tencentcloud:Container/clusterInstances:ClusterInstances", args ?? new ClusterInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ClusterInstancesArgs : Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("limit")]
        public int? Limit { get; set; }

        public ClusterInstancesArgs()
        {
        }
    }

    public sealed class ClusterInstancesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        public ClusterInstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class ClusterInstancesResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.ClusterInstancesNodeResult> Nodes;
        public readonly int TotalCount;

        [OutputConstructor]
        private ClusterInstancesResult(
            string clusterId,

            string id,

            int? limit,

            ImmutableArray<Outputs.ClusterInstancesNodeResult> nodes,

            int totalCount)
        {
            ClusterId = clusterId;
            Id = id;
            Limit = limit;
            Nodes = nodes;
            TotalCount = totalCount;
        }
    }
}
