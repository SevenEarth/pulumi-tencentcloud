// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cfs
{
    public static class FileSystems
    {
        public static Task<FileSystemsResult> InvokeAsync(FileSystemsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<FileSystemsResult>("tencentcloud:Cfs/fileSystems:FileSystems", args ?? new FileSystemsArgs(), options.WithDefaults());

        public static Output<FileSystemsResult> Invoke(FileSystemsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<FileSystemsResult>("tencentcloud:Cfs/fileSystems:FileSystems", args ?? new FileSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class FileSystemsArgs : Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("fileSystemId")]
        public string? FileSystemId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public FileSystemsArgs()
        {
        }
    }

    public sealed class FileSystemsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public FileSystemsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class FileSystemsResult
    {
        public readonly string? AvailabilityZone;
        public readonly string? FileSystemId;
        public readonly ImmutableArray<Outputs.FileSystemsFileSystemListResult> FileSystemLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? ResultOutputFile;
        public readonly string? SubnetId;
        public readonly string? VpcId;

        [OutputConstructor]
        private FileSystemsResult(
            string? availabilityZone,

            string? fileSystemId,

            ImmutableArray<Outputs.FileSystemsFileSystemListResult> fileSystemLists,

            string id,

            string? name,

            string? resultOutputFile,

            string? subnetId,

            string? vpcId)
        {
            AvailabilityZone = availabilityZone;
            FileSystemId = fileSystemId;
            FileSystemLists = fileSystemLists;
            Id = id;
            Name = name;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
