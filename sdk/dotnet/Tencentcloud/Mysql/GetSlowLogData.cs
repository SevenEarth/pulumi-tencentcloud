// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mysql
{
    public static class GetSlowLogData
    {
        /// <summary>
        /// Use this data source to query detailed information of mysql slow_log_data
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var slowLogData = Tencentcloud.Mysql.GetSlowLogData.Invoke(new()
        ///     {
        ///         DataBases = new[]
        ///         {
        ///             "tf_ci_test",
        ///         },
        ///         EndTime = 1684392459,
        ///         InstType = "slave",
        ///         InstanceId = "cdb-fitq5t9h",
        ///         OrderBy = "ASC",
        ///         SortBy = "Timestamp",
        ///         StartTime = 1682664459,
        ///         UserHosts = new[]
        ///         {
        ///             "169.254.128.158",
        ///         },
        ///         UserNames = new[]
        ///         {
        ///             "keep_dts",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSlowLogDataResult> InvokeAsync(GetSlowLogDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSlowLogDataResult>("tencentcloud:Mysql/getSlowLogData:getSlowLogData", args ?? new GetSlowLogDataArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mysql slow_log_data
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var slowLogData = Tencentcloud.Mysql.GetSlowLogData.Invoke(new()
        ///     {
        ///         DataBases = new[]
        ///         {
        ///             "tf_ci_test",
        ///         },
        ///         EndTime = 1684392459,
        ///         InstType = "slave",
        ///         InstanceId = "cdb-fitq5t9h",
        ///         OrderBy = "ASC",
        ///         SortBy = "Timestamp",
        ///         StartTime = 1682664459,
        ///         UserHosts = new[]
        ///         {
        ///             "169.254.128.158",
        ///         },
        ///         UserNames = new[]
        ///         {
        ///             "keep_dts",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSlowLogDataResult> Invoke(GetSlowLogDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSlowLogDataResult>("tencentcloud:Mysql/getSlowLogData:getSlowLogData", args ?? new GetSlowLogDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSlowLogDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataBases")]
        private List<string>? _dataBases;

        /// <summary>
        /// List of databases accessed.
        /// </summary>
        public List<string> DataBases
        {
            get => _dataBases ?? (_dataBases = new List<string>());
            set => _dataBases = value;
        }

        /// <summary>
        /// End timestamp. For example 1585142640.
        /// </summary>
        [Input("endTime", required: true)]
        public int EndTime { get; set; }

        /// <summary>
        /// Only valid when the instance is the master instance or disaster recovery instance, the optional value: slave, which means to pull the log of the slave machine.
        /// </summary>
        [Input("instType")]
        public string? InstType { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Sort in ascending or descending order. Currently supported: ASC,DESC.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Sort field. Currently supported: Timestamp, QueryTime, LockTime, RowsExamined, RowsSent.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        /// <summary>
        /// Start timestamp. For example 1585142640.
        /// </summary>
        [Input("startTime", required: true)]
        public int StartTime { get; set; }

        [Input("userHosts")]
        private List<string>? _userHosts;

        /// <summary>
        /// List of client hosts.
        /// </summary>
        public List<string> UserHosts
        {
            get => _userHosts ?? (_userHosts = new List<string>());
            set => _userHosts = value;
        }

        [Input("userNames")]
        private List<string>? _userNames;

        /// <summary>
        /// A list of client usernames.
        /// </summary>
        public List<string> UserNames
        {
            get => _userNames ?? (_userNames = new List<string>());
            set => _userNames = value;
        }

        public GetSlowLogDataArgs()
        {
        }
        public static new GetSlowLogDataArgs Empty => new GetSlowLogDataArgs();
    }

    public sealed class GetSlowLogDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataBases")]
        private InputList<string>? _dataBases;

        /// <summary>
        /// List of databases accessed.
        /// </summary>
        public InputList<string> DataBases
        {
            get => _dataBases ?? (_dataBases = new InputList<string>());
            set => _dataBases = value;
        }

        /// <summary>
        /// End timestamp. For example 1585142640.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<int> EndTime { get; set; } = null!;

        /// <summary>
        /// Only valid when the instance is the master instance or disaster recovery instance, the optional value: slave, which means to pull the log of the slave machine.
        /// </summary>
        [Input("instType")]
        public Input<string>? InstType { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Sort in ascending or descending order. Currently supported: ASC,DESC.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Sort field. Currently supported: Timestamp, QueryTime, LockTime, RowsExamined, RowsSent.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        /// <summary>
        /// Start timestamp. For example 1585142640.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<int> StartTime { get; set; } = null!;

        [Input("userHosts")]
        private InputList<string>? _userHosts;

        /// <summary>
        /// List of client hosts.
        /// </summary>
        public InputList<string> UserHosts
        {
            get => _userHosts ?? (_userHosts = new InputList<string>());
            set => _userHosts = value;
        }

        [Input("userNames")]
        private InputList<string>? _userNames;

        /// <summary>
        /// A list of client usernames.
        /// </summary>
        public InputList<string> UserNames
        {
            get => _userNames ?? (_userNames = new InputList<string>());
            set => _userNames = value;
        }

        public GetSlowLogDataInvokeArgs()
        {
        }
        public static new GetSlowLogDataInvokeArgs Empty => new GetSlowLogDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetSlowLogDataResult
    {
        public readonly ImmutableArray<string> DataBases;
        public readonly int EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstType;
        public readonly string InstanceId;
        /// <summary>
        /// Query records.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSlowLogDataItemResult> Items;
        public readonly string? OrderBy;
        public readonly string? ResultOutputFile;
        public readonly string? SortBy;
        public readonly int StartTime;
        public readonly ImmutableArray<string> UserHosts;
        public readonly ImmutableArray<string> UserNames;

        [OutputConstructor]
        private GetSlowLogDataResult(
            ImmutableArray<string> dataBases,

            int endTime,

            string id,

            string? instType,

            string instanceId,

            ImmutableArray<Outputs.GetSlowLogDataItemResult> items,

            string? orderBy,

            string? resultOutputFile,

            string? sortBy,

            int startTime,

            ImmutableArray<string> userHosts,

            ImmutableArray<string> userNames)
        {
            DataBases = dataBases;
            EndTime = endTime;
            Id = id;
            InstType = instType;
            InstanceId = instanceId;
            Items = items;
            OrderBy = orderBy;
            ResultOutputFile = resultOutputFile;
            SortBy = sortBy;
            StartTime = startTime;
            UserHosts = userHosts;
            UserNames = userNames;
        }
    }
}
