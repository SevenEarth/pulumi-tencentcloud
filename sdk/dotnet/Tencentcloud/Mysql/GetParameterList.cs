// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mysql
{
    public static class GetParameterList
    {
        /// <summary>
        /// Use this data source to get information about a parameter group of a database instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mysql = Output.Create(Tencentcloud.Mysql.GetParameterList.InvokeAsync(new Tencentcloud.Mysql.GetParameterListArgs
        ///         {
        ///             EngineVersion = "5.5",
        ///             MysqlId = "terraform-test-local-database",
        ///             ResultOutputFile = "mytestpath",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetParameterListResult> InvokeAsync(GetParameterListArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetParameterListResult>("tencentcloud:Mysql/getParameterList:getParameterList", args ?? new GetParameterListArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a parameter group of a database instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mysql = Output.Create(Tencentcloud.Mysql.GetParameterList.InvokeAsync(new Tencentcloud.Mysql.GetParameterListArgs
        ///         {
        ///             EngineVersion = "5.5",
        ///             MysqlId = "terraform-test-local-database",
        ///             ResultOutputFile = "mytestpath",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetParameterListResult> Invoke(GetParameterListInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetParameterListResult>("tencentcloud:Mysql/getParameterList:getParameterList", args ?? new GetParameterListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterListArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("mysqlId")]
        public string? MysqlId { get; set; }

        /// <summary>
        /// Used to store results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetParameterListArgs()
        {
        }
    }

    public sealed class GetParameterListInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("mysqlId")]
        public Input<string>? MysqlId { get; set; }

        /// <summary>
        /// Used to store results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetParameterListInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetParameterListResult
    {
        public readonly string? EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? MysqlId;
        /// <summary>
        /// A list of parameters. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetParameterListParameterListResult> MysqlParameterList;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetParameterListResult(
            string? engineVersion,

            string id,

            string? mysqlId,

            ImmutableArray<Outputs.GetParameterListParameterListResult> parameterLists,

            string? resultOutputFile)
        {
            EngineVersion = engineVersion;
            Id = id;
            MysqlId = mysqlId;
            MysqlParameterList = parameterLists;
            ResultOutputFile = resultOutputFile;
        }
    }
}
