// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dayu.Outputs
{

    [OutputType]
    public sealed class GetDdosPoliciesListDropOptionResult
    {
        /// <summary>
        /// The number of new connections based on destination IP that trigger suppression of connections.
        /// </summary>
        public readonly int BadConnThreshold;
        /// <summary>
        /// Indicate whether to check null connection or not.
        /// </summary>
        public readonly bool CheckSyncConn;
        /// <summary>
        /// Connection timeout of abnormal connection check.
        /// </summary>
        public readonly int ConnTimeout;
        /// <summary>
        /// The limit of concurrent connections based on destination IP.
        /// </summary>
        public readonly int DConnLimit;
        /// <summary>
        /// The limit of new connections based on destination IP.
        /// </summary>
        public readonly int DNewLimit;
        /// <summary>
        /// Indicate whether to drop abroad traffic or not.
        /// </summary>
        public readonly bool DropAbroad;
        /// <summary>
        /// Indicate whether to drop ICMP protocol or not.
        /// </summary>
        public readonly bool DropIcmp;
        /// <summary>
        /// Indicate whether to drop other protocols(exclude TCP/UDP/ICMP) or not.
        /// </summary>
        public readonly bool DropOther;
        /// <summary>
        /// Indicate whether to drop TCP protocol or not.
        /// </summary>
        public readonly bool DropTcp;
        /// <summary>
        /// Indicate to drop UDP protocol or not.
        /// </summary>
        public readonly bool DropUdp;
        /// <summary>
        /// The limit of ICMP traffic rate.
        /// </summary>
        public readonly int IcmpMbpsLimit;
        /// <summary>
        /// Indicate to enable null connection or not.
        /// </summary>
        public readonly bool NullConnEnable;
        /// <summary>
        /// The limit of other protocols(exclude TCP/UDP/ICMP) traffic rate.
        /// </summary>
        public readonly int OtherMbpsLimit;
        /// <summary>
        /// The limit of concurrent connections based on source IP.
        /// </summary>
        public readonly int SConnLimit;
        /// <summary>
        /// The limit of new connections based on source IP.
        /// </summary>
        public readonly int SNewLimit;
        /// <summary>
        /// The limit of syn of abnormal connection check.
        /// </summary>
        public readonly int SynLimit;
        /// <summary>
        /// The percentage of syn in ack of abnormal connection check.
        /// </summary>
        public readonly int SynRate;
        /// <summary>
        /// The limit of TCP traffic.
        /// </summary>
        public readonly int TcpMbpsLimit;
        /// <summary>
        /// The limit of UDP traffic rate.
        /// </summary>
        public readonly int UdpMbpsLimit;

        [OutputConstructor]
        private GetDdosPoliciesListDropOptionResult(
            int badConnThreshold,

            bool checkSyncConn,

            int connTimeout,

            int dConnLimit,

            int dNewLimit,

            bool dropAbroad,

            bool dropIcmp,

            bool dropOther,

            bool dropTcp,

            bool dropUdp,

            int icmpMbpsLimit,

            bool nullConnEnable,

            int otherMbpsLimit,

            int sConnLimit,

            int sNewLimit,

            int synLimit,

            int synRate,

            int tcpMbpsLimit,

            int udpMbpsLimit)
        {
            BadConnThreshold = badConnThreshold;
            CheckSyncConn = checkSyncConn;
            ConnTimeout = connTimeout;
            DConnLimit = dConnLimit;
            DNewLimit = dNewLimit;
            DropAbroad = dropAbroad;
            DropIcmp = dropIcmp;
            DropOther = dropOther;
            DropTcp = dropTcp;
            DropUdp = dropUdp;
            IcmpMbpsLimit = icmpMbpsLimit;
            NullConnEnable = nullConnEnable;
            OtherMbpsLimit = otherMbpsLimit;
            SConnLimit = sConnLimit;
            SNewLimit = sNewLimit;
            SynLimit = synLimit;
            SynRate = synRate;
            TcpMbpsLimit = tcpMbpsLimit;
            UdpMbpsLimit = udpMbpsLimit;
        }
    }
}
