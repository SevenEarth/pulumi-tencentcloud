// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dayu.Outputs
{

    [OutputType]
    public sealed class GetL4RulesListResult
    {
        /// <summary>
        /// The destination port of the layer 4 rule.
        /// </summary>
        public readonly int DPort;
        /// <summary>
        /// Health threshold of health check.
        /// </summary>
        public readonly int HealthCheckHealthNum;
        /// <summary>
        /// Interval time of health check.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// Indicates whether health check is enabled.
        /// </summary>
        public readonly bool HealthCheckSwitch;
        /// <summary>
        /// HTTP Status Code. `1` means the return value `1xx` is health. `2` means the return value `2xx` is health. `4` means the return value `3xx` is health. `8` means the return value `4xx` is health. `16` means the return value `5xx` is health. If you want multiple return codes to indicate health, need to add the corresponding values.
        /// </summary>
        public readonly int HealthCheckTimeout;
        /// <summary>
        /// Unhealthy threshold of health check.
        /// </summary>
        public readonly int HealthCheckUnhealthNum;
        /// <summary>
        /// LB type of the rule, `1` for weight cycling and `2` for IP hash.
        /// </summary>
        public readonly int LbType;
        /// <summary>
        /// Name of the layer 4 rule to be queried.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Protocol of the rule.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Id of the layer 4 rule to be queried.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// The source port of the layer 4 rule.
        /// </summary>
        public readonly int SPort;
        /// <summary>
        /// Indicate that the session will keep or not.
        /// </summary>
        public readonly bool SessionSwitch;
        /// <summary>
        /// Session keep time, only valid when `session_switch` is true, the available value ranges from 1 to 300 and unit is second.
        /// </summary>
        public readonly int SessionTime;
        /// <summary>
        /// Source list of the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetL4RulesListSourceListResult> SourceLists;
        /// <summary>
        /// Source type, `1` for source of host, `2` for source of IP.
        /// </summary>
        public readonly int SourceType;

        [OutputConstructor]
        private GetL4RulesListResult(
            int dPort,

            int healthCheckHealthNum,

            int healthCheckInterval,

            bool healthCheckSwitch,

            int healthCheckTimeout,

            int healthCheckUnhealthNum,

            int lbType,

            string name,

            string protocol,

            string ruleId,

            int sPort,

            bool sessionSwitch,

            int sessionTime,

            ImmutableArray<Outputs.GetL4RulesListSourceListResult> sourceLists,

            int sourceType)
        {
            DPort = dPort;
            HealthCheckHealthNum = healthCheckHealthNum;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckSwitch = healthCheckSwitch;
            HealthCheckTimeout = healthCheckTimeout;
            HealthCheckUnhealthNum = healthCheckUnhealthNum;
            LbType = lbType;
            Name = name;
            Protocol = protocol;
            RuleId = ruleId;
            SPort = sPort;
            SessionSwitch = sessionSwitch;
            SessionTime = sessionTime;
            SourceLists = sourceLists;
            SourceType = sourceType;
        }
    }
}
