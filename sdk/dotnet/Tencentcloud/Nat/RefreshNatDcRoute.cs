// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Nat
{
    /// <summary>
    /// Provides a resource to create a vpc refresh_nat_dc_route
    /// 
    /// ## Example Usage
    /// ### is True
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var vpc = new Tencentcloud.Vpc.Instance("vpc", new Tencentcloud.Vpc.InstanceArgs
    ///         {
    ///             CidrBlock = "10.0.0.0/16",
    ///         });
    ///         var eipExample = new Tencentcloud.Eip.Instance("eipExample", new Tencentcloud.Eip.InstanceArgs
    ///         {
    ///         });
    ///         var nat = new Tencentcloud.Nat.Gateway("nat", new Tencentcloud.Nat.GatewayArgs
    ///         {
    ///             VpcId = vpc.Id,
    ///             MaxConcurrent = 3000000,
    ///             Bandwidth = 500,
    ///             AssignedEipSets = 
    ///             {
    ///                 eipExample.PublicIp,
    ///             },
    ///         });
    ///         var refreshNatDcRoute = new Tencentcloud.Nat.RefreshNatDcRoute("refreshNatDcRoute", new Tencentcloud.Nat.RefreshNatDcRouteArgs
    ///         {
    ///             NatGatewayId = nat.Id,
    ///             VpcId = vpc.Id,
    ///             DryRun = true,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### is False
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var refreshNatDcRoute = new Tencentcloud.Nat.RefreshNatDcRoute("refreshNatDcRoute", new Tencentcloud.Nat.RefreshNatDcRouteArgs
    ///         {
    ///             NatGatewayId = tencentcloud_nat_gateway.Nat.Id,
    ///             VpcId = tencentcloud_vpc.Vpc.Id,
    ///             DryRun = false,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// vpc refresh_nat_dc_route can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Nat/refreshNatDcRoute:RefreshNatDcRoute refresh_nat_dc_route vpc_id#nat_gateway_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Nat/refreshNatDcRoute:RefreshNatDcRoute")]
    public partial class RefreshNatDcRoute : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to pre-refresh, valid values: True:yes, False:no.
        /// </summary>
        [Output("dryRun")]
        public Output<bool> DryRun { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of Nat Gateway.
        /// </summary>
        [Output("natGatewayId")]
        public Output<string> NatGatewayId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of Vpc.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a RefreshNatDcRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RefreshNatDcRoute(string name, RefreshNatDcRouteArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Nat/refreshNatDcRoute:RefreshNatDcRoute", name, args ?? new RefreshNatDcRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RefreshNatDcRoute(string name, Input<string> id, RefreshNatDcRouteState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Nat/refreshNatDcRoute:RefreshNatDcRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RefreshNatDcRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RefreshNatDcRoute Get(string name, Input<string> id, RefreshNatDcRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new RefreshNatDcRoute(name, id, state, options);
        }
    }

    public sealed class RefreshNatDcRouteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to pre-refresh, valid values: True:yes, False:no.
        /// </summary>
        [Input("dryRun", required: true)]
        public Input<bool> DryRun { get; set; } = null!;

        /// <summary>
        /// Unique identifier of Nat Gateway.
        /// </summary>
        [Input("natGatewayId", required: true)]
        public Input<string> NatGatewayId { get; set; } = null!;

        /// <summary>
        /// Unique identifier of Vpc.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public RefreshNatDcRouteArgs()
        {
        }
    }

    public sealed class RefreshNatDcRouteState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to pre-refresh, valid values: True:yes, False:no.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Unique identifier of Nat Gateway.
        /// </summary>
        [Input("natGatewayId")]
        public Input<string>? NatGatewayId { get; set; }

        /// <summary>
        /// Unique identifier of Vpc.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public RefreshNatDcRouteState()
        {
        }
    }
}
