// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cbs
{
    public static class GetSnapshots
    {
        /// <summary>
        /// Use this data source to query detailed information of CBS snapshots.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshots = Tencentcloud.Cbs.GetSnapshots.Invoke(new()
        ///     {
        ///         ResultOutputFile = "mytestpath",
        ///         SnapshotId = "snap-f3io7adt",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSnapshotsResult> InvokeAsync(GetSnapshotsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotsResult>("tencentcloud:Cbs/getSnapshots:getSnapshots", args ?? new GetSnapshotsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of CBS snapshots.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshots = Tencentcloud.Cbs.GetSnapshots.Invoke(new()
        ///     {
        ///         ResultOutputFile = "mytestpath",
        ///         SnapshotId = "snap-f3io7adt",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSnapshotsResult> Invoke(GetSnapshotsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotsResult>("tencentcloud:Cbs/getSnapshots:getSnapshots", args ?? new GetSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The available zone that the CBS instance locates at.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        /// <summary>
        /// ID of the project within the snapshot.
        /// </summary>
        [Input("projectId")]
        public int? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of the snapshot to be queried.
        /// </summary>
        [Input("snapshotId")]
        public string? SnapshotId { get; set; }

        /// <summary>
        /// Name of the snapshot to be queried.
        /// </summary>
        [Input("snapshotName")]
        public string? SnapshotName { get; set; }

        /// <summary>
        /// ID of the the CBS which this snapshot created from.
        /// </summary>
        [Input("storageId")]
        public string? StorageId { get; set; }

        /// <summary>
        /// Types of CBS which this snapshot created from, and available values include SYSTEM_DISK and DATA_DISK.
        /// </summary>
        [Input("storageUsage")]
        public string? StorageUsage { get; set; }

        public GetSnapshotsArgs()
        {
        }
        public static new GetSnapshotsArgs Empty => new GetSnapshotsArgs();
    }

    public sealed class GetSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The available zone that the CBS instance locates at.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// ID of the project within the snapshot.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of the snapshot to be queried.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// Name of the snapshot to be queried.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        /// <summary>
        /// ID of the the CBS which this snapshot created from.
        /// </summary>
        [Input("storageId")]
        public Input<string>? StorageId { get; set; }

        /// <summary>
        /// Types of CBS which this snapshot created from, and available values include SYSTEM_DISK and DATA_DISK.
        /// </summary>
        [Input("storageUsage")]
        public Input<string>? StorageUsage { get; set; }

        public GetSnapshotsInvokeArgs()
        {
        }
        public static new GetSnapshotsInvokeArgs Empty => new GetSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotsResult
    {
        /// <summary>
        /// The available zone that the CBS instance locates at.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the project within the snapshot.
        /// </summary>
        public readonly int? ProjectId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// ID of the snapshot.
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// A list of snapshot. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotsSnapshotListResult> SnapshotLists;
        /// <summary>
        /// Name of the snapshot.
        /// </summary>
        public readonly string? SnapshotName;
        /// <summary>
        /// ID of the the CBS which this snapshot created from.
        /// </summary>
        public readonly string? StorageId;
        /// <summary>
        /// Types of CBS which this snapshot created from.
        /// </summary>
        public readonly string? StorageUsage;

        [OutputConstructor]
        private GetSnapshotsResult(
            string? availabilityZone,

            string id,

            int? projectId,

            string? resultOutputFile,

            string? snapshotId,

            ImmutableArray<Outputs.GetSnapshotsSnapshotListResult> snapshotLists,

            string? snapshotName,

            string? storageId,

            string? storageUsage)
        {
            AvailabilityZone = availabilityZone;
            Id = id;
            ProjectId = projectId;
            ResultOutputFile = resultOutputFile;
            SnapshotId = snapshotId;
            SnapshotLists = snapshotLists;
            SnapshotName = snapshotName;
            StorageId = storageId;
            StorageUsage = storageUsage;
        }
    }
}
