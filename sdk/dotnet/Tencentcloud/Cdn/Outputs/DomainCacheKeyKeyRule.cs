// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cdn.Outputs
{

    [OutputType]
    public sealed class DomainCacheKeyKeyRule
    {
        /// <summary>
        /// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
        /// </summary>
        public readonly string? FullUrlCache;
        /// <summary>
        /// Whether caches are case insensitive.
        /// </summary>
        public readonly string? IgnoreCase;
        /// <summary>
        /// Request parameter contained in CacheKey.
        /// </summary>
        public readonly Outputs.DomainCacheKeyKeyRuleQueryString QueryString;
        /// <summary>
        /// List of rule paths for each `key_rules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
        /// </summary>
        public readonly ImmutableArray<string> RulePaths;
        /// <summary>
        /// Specify rule tag, default value is `user`.
        /// </summary>
        public readonly string? RuleTag;
        /// <summary>
        /// Rule type, available: `file`, `directory`, `path`, `index`.
        /// </summary>
        public readonly string RuleType;

        [OutputConstructor]
        private DomainCacheKeyKeyRule(
            string? fullUrlCache,

            string? ignoreCase,

            Outputs.DomainCacheKeyKeyRuleQueryString queryString,

            ImmutableArray<string> rulePaths,

            string? ruleTag,

            string ruleType)
        {
            FullUrlCache = fullUrlCache;
            IgnoreCase = ignoreCase;
            QueryString = queryString;
            RulePaths = rulePaths;
            RuleTag = ruleTag;
            RuleType = ruleType;
        }
    }
}
