// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    public static class GetResourcesByTag
    {
        /// <summary>
        /// Use this data source to query detailed information of gaap resources by tag
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var resourcesByTag = Tencentcloud.Gaap.GetResourcesByTag.Invoke(new()
        ///     {
        ///         TagKey = "tagKey",
        ///         TagValue = "tagValue",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetResourcesByTagResult> InvokeAsync(GetResourcesByTagArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourcesByTagResult>("tencentcloud:Gaap/getResourcesByTag:getResourcesByTag", args ?? new GetResourcesByTagArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of gaap resources by tag
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var resourcesByTag = Tencentcloud.Gaap.GetResourcesByTag.Invoke(new()
        ///     {
        ///         TagKey = "tagKey",
        ///         TagValue = "tagValue",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetResourcesByTagResult> Invoke(GetResourcesByTagInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcesByTagResult>("tencentcloud:Gaap/getResourcesByTag:getResourcesByTag", args ?? new GetResourcesByTagInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourcesByTagArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Resource type, where:Proxy represents the proxy;ProxyGroup represents a proxy group;RealServer represents the Real Server.If this field is not specified, all resources under the label will be queried.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Tag key.
        /// </summary>
        [Input("tagKey", required: true)]
        public string TagKey { get; set; } = null!;

        /// <summary>
        /// Tag value.
        /// </summary>
        [Input("tagValue", required: true)]
        public string TagValue { get; set; } = null!;

        public GetResourcesByTagArgs()
        {
        }
        public static new GetResourcesByTagArgs Empty => new GetResourcesByTagArgs();
    }

    public sealed class GetResourcesByTagInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Resource type, where:Proxy represents the proxy;ProxyGroup represents a proxy group;RealServer represents the Real Server.If this field is not specified, all resources under the label will be queried.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Tag key.
        /// </summary>
        [Input("tagKey", required: true)]
        public Input<string> TagKey { get; set; } = null!;

        /// <summary>
        /// Tag value.
        /// </summary>
        [Input("tagValue", required: true)]
        public Input<string> TagValue { get; set; } = null!;

        public GetResourcesByTagInvokeArgs()
        {
        }
        public static new GetResourcesByTagInvokeArgs Empty => new GetResourcesByTagInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourcesByTagResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of resources corresponding to labels.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourcesByTagResourceSetResult> ResourceSets;
        /// <summary>
        /// Resource type, where:Proxy represents the proxy,ProxyGroup represents a proxy group,RealServer represents the real server.
        /// </summary>
        public readonly string? ResourceType;
        public readonly string? ResultOutputFile;
        public readonly string TagKey;
        public readonly string TagValue;

        [OutputConstructor]
        private GetResourcesByTagResult(
            string id,

            ImmutableArray<Outputs.GetResourcesByTagResourceSetResult> resourceSets,

            string? resourceType,

            string? resultOutputFile,

            string tagKey,

            string tagValue)
        {
            Id = id;
            ResourceSets = resourceSets;
            ResourceType = resourceType;
            ResultOutputFile = resultOutputFile;
            TagKey = tagKey;
            TagValue = tagValue;
        }
    }
}
