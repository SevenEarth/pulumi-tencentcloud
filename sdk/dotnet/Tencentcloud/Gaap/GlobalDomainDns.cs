// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    /// <summary>
    /// Provides a resource to create a gaap global domain dns
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var globalDomainDns = new Tencentcloud.Gaap.GlobalDomainDns("globalDomainDns", new Tencentcloud.Gaap.GlobalDomainDnsArgs
    ///         {
    ///             DomainId = "dm-xxxxxx",
    ///             NationCountryInnerCodes = 
    ///             {
    ///                 "101001",
    ///             },
    ///             ProxyIdLists = 
    ///             {
    ///                 "link-xxxxxx",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// gaap global_domain_dns can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Gaap/globalDomainDns:GlobalDomainDns global_domain_dns ${domainId}#${dnsRecordId}
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Gaap/globalDomainDns:GlobalDomainDns")]
    public partial class GlobalDomainDns : Pulumi.CustomResource
    {
        /// <summary>
        /// Domain Id.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// Nation Country Inner Codes.
        /// </summary>
        [Output("nationCountryInnerCodes")]
        public Output<ImmutableArray<string>> NationCountryInnerCodes { get; private set; } = null!;

        /// <summary>
        /// Proxy Id List.
        /// </summary>
        [Output("proxyIdLists")]
        public Output<ImmutableArray<string>> ProxyIdLists { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalDomainDns resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalDomainDns(string name, GlobalDomainDnsArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/globalDomainDns:GlobalDomainDns", name, args ?? new GlobalDomainDnsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalDomainDns(string name, Input<string> id, GlobalDomainDnsState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/globalDomainDns:GlobalDomainDns", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalDomainDns resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalDomainDns Get(string name, Input<string> id, GlobalDomainDnsState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalDomainDns(name, id, state, options);
        }
    }

    public sealed class GlobalDomainDnsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain Id.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        [Input("nationCountryInnerCodes", required: true)]
        private InputList<string>? _nationCountryInnerCodes;

        /// <summary>
        /// Nation Country Inner Codes.
        /// </summary>
        public InputList<string> NationCountryInnerCodes
        {
            get => _nationCountryInnerCodes ?? (_nationCountryInnerCodes = new InputList<string>());
            set => _nationCountryInnerCodes = value;
        }

        [Input("proxyIdLists", required: true)]
        private InputList<string>? _proxyIdLists;

        /// <summary>
        /// Proxy Id List.
        /// </summary>
        public InputList<string> ProxyIdLists
        {
            get => _proxyIdLists ?? (_proxyIdLists = new InputList<string>());
            set => _proxyIdLists = value;
        }

        public GlobalDomainDnsArgs()
        {
        }
    }

    public sealed class GlobalDomainDnsState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain Id.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        [Input("nationCountryInnerCodes")]
        private InputList<string>? _nationCountryInnerCodes;

        /// <summary>
        /// Nation Country Inner Codes.
        /// </summary>
        public InputList<string> NationCountryInnerCodes
        {
            get => _nationCountryInnerCodes ?? (_nationCountryInnerCodes = new InputList<string>());
            set => _nationCountryInnerCodes = value;
        }

        [Input("proxyIdLists")]
        private InputList<string>? _proxyIdLists;

        /// <summary>
        /// Proxy Id List.
        /// </summary>
        public InputList<string> ProxyIdLists
        {
            get => _proxyIdLists ?? (_proxyIdLists = new InputList<string>());
            set => _proxyIdLists = value;
        }

        public GlobalDomainDnsState()
        {
        }
    }
}
