// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    public static class GetLayer4Listeners
    {
        /// <summary>
        /// Use this data source to query gaap layer4 listeners.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooProxy = new Tencentcloud.Gaap.Proxy("fooProxy", new()
        ///     {
        ///         Bandwidth = 10,
        ///         Concurrent = 2,
        ///         AccessRegion = "SouthChina",
        ///         RealserverRegion = "NorthChina",
        ///     });
        /// 
        ///     var fooRealserver = new Tencentcloud.Gaap.Realserver("fooRealserver", new()
        ///     {
        ///         Ip = "1.1.1.1",
        ///     });
        /// 
        ///     var fooLayer4Listener = new Tencentcloud.Gaap.Layer4Listener("fooLayer4Listener", new()
        ///     {
        ///         Protocol = "TCP",
        ///         Port = 80,
        ///         RealserverType = "IP",
        ///         ProxyId = fooProxy.Id,
        ///         HealthCheck = true,
        ///         Interval = 5,
        ///         ConnectTimeout = 2,
        ///         RealserverBindSets = new[]
        ///         {
        ///             new Tencentcloud.Gaap.Inputs.Layer4ListenerRealserverBindSetArgs
        ///             {
        ///                 Id = fooRealserver.Id,
        ///                 Ip = fooRealserver.Ip,
        ///                 Port = 80,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooLayer4Listeners = Tencentcloud.Gaap.GetLayer4Listeners.Invoke(new()
        ///     {
        ///         Protocol = "TCP",
        ///         ProxyId = fooProxy.Id,
        ///         ListenerId = fooLayer4Listener.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetLayer4ListenersResult> InvokeAsync(GetLayer4ListenersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLayer4ListenersResult>("tencentcloud:Gaap/getLayer4Listeners:getLayer4Listeners", args ?? new GetLayer4ListenersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query gaap layer4 listeners.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooProxy = new Tencentcloud.Gaap.Proxy("fooProxy", new()
        ///     {
        ///         Bandwidth = 10,
        ///         Concurrent = 2,
        ///         AccessRegion = "SouthChina",
        ///         RealserverRegion = "NorthChina",
        ///     });
        /// 
        ///     var fooRealserver = new Tencentcloud.Gaap.Realserver("fooRealserver", new()
        ///     {
        ///         Ip = "1.1.1.1",
        ///     });
        /// 
        ///     var fooLayer4Listener = new Tencentcloud.Gaap.Layer4Listener("fooLayer4Listener", new()
        ///     {
        ///         Protocol = "TCP",
        ///         Port = 80,
        ///         RealserverType = "IP",
        ///         ProxyId = fooProxy.Id,
        ///         HealthCheck = true,
        ///         Interval = 5,
        ///         ConnectTimeout = 2,
        ///         RealserverBindSets = new[]
        ///         {
        ///             new Tencentcloud.Gaap.Inputs.Layer4ListenerRealserverBindSetArgs
        ///             {
        ///                 Id = fooRealserver.Id,
        ///                 Ip = fooRealserver.Ip,
        ///                 Port = 80,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooLayer4Listeners = Tencentcloud.Gaap.GetLayer4Listeners.Invoke(new()
        ///     {
        ///         Protocol = "TCP",
        ///         ProxyId = fooProxy.Id,
        ///         ListenerId = fooLayer4Listener.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetLayer4ListenersResult> Invoke(GetLayer4ListenersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLayer4ListenersResult>("tencentcloud:Gaap/getLayer4Listeners:getLayer4Listeners", args ?? new GetLayer4ListenersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLayer4ListenersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the layer4 listener to be queried.
        /// </summary>
        [Input("listenerId")]
        public string? ListenerId { get; set; }

        /// <summary>
        /// Name of the layer4 listener to be queried.
        /// </summary>
        [Input("listenerName")]
        public string? ListenerName { get; set; }

        /// <summary>
        /// Port of the layer4 listener to be queried.
        /// </summary>
        [Input("port")]
        public int? Port { get; set; }

        /// <summary>
        /// Protocol of the layer4 listener to be queried. Valid values: `TCP` and `UDP`.
        /// </summary>
        [Input("protocol", required: true)]
        public string Protocol { get; set; } = null!;

        /// <summary>
        /// ID of the GAAP proxy to be queried.
        /// </summary>
        [Input("proxyId")]
        public string? ProxyId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetLayer4ListenersArgs()
        {
        }
        public static new GetLayer4ListenersArgs Empty => new GetLayer4ListenersArgs();
    }

    public sealed class GetLayer4ListenersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the layer4 listener to be queried.
        /// </summary>
        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        /// <summary>
        /// Name of the layer4 listener to be queried.
        /// </summary>
        [Input("listenerName")]
        public Input<string>? ListenerName { get; set; }

        /// <summary>
        /// Port of the layer4 listener to be queried.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Protocol of the layer4 listener to be queried. Valid values: `TCP` and `UDP`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// ID of the GAAP proxy to be queried.
        /// </summary>
        [Input("proxyId")]
        public Input<string>? ProxyId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetLayer4ListenersInvokeArgs()
        {
        }
        public static new GetLayer4ListenersInvokeArgs Empty => new GetLayer4ListenersInvokeArgs();
    }


    [OutputType]
    public sealed class GetLayer4ListenersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ListenerId;
        public readonly string? ListenerName;
        /// <summary>
        /// An information list of layer4 listeners. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLayer4ListenersListenerResult> Listeners;
        /// <summary>
        /// Port of the layer4 listener.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Protocol of the layer4 listener.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// ID of the GAAP proxy.
        /// </summary>
        public readonly string? ProxyId;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetLayer4ListenersResult(
            string id,

            string? listenerId,

            string? listenerName,

            ImmutableArray<Outputs.GetLayer4ListenersListenerResult> listeners,

            int? port,

            string protocol,

            string? proxyId,

            string? resultOutputFile)
        {
            Id = id;
            ListenerId = listenerId;
            ListenerName = listenerName;
            Listeners = listeners;
            Port = port;
            Protocol = protocol;
            ProxyId = proxyId;
            ResultOutputFile = resultOutputFile;
        }
    }
}
