// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    public static class GetProxyGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of gaap proxy groups
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var proxyGroups = Output.Create(Tencentcloud.Gaap.GetProxyGroups.InvokeAsync(new Tencentcloud.Gaap.GetProxyGroupsArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Tencentcloud.Gaap.Inputs.GetProxyGroupsFilterArgs
        ///                 {
        ///                     Name = "GroupId",
        ///                     Values = 
        ///                     {
        ///                         "lg-5anbbou5",
        ///                     },
        ///                 },
        ///             },
        ///             ProjectId = 0,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProxyGroupsResult> InvokeAsync(GetProxyGroupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProxyGroupsResult>("tencentcloud:Gaap/getProxyGroups:getProxyGroups", args ?? new GetProxyGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of gaap proxy groups
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var proxyGroups = Output.Create(Tencentcloud.Gaap.GetProxyGroups.InvokeAsync(new Tencentcloud.Gaap.GetProxyGroupsArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Tencentcloud.Gaap.Inputs.GetProxyGroupsFilterArgs
        ///                 {
        ///                     Name = "GroupId",
        ///                     Values = 
        ///                     {
        ///                         "lg-5anbbou5",
        ///                     },
        ///                 },
        ///             },
        ///             ProjectId = 0,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProxyGroupsResult> Invoke(GetProxyGroupsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProxyGroupsResult>("tencentcloud:Gaap/getProxyGroups:getProxyGroups", args ?? new GetProxyGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProxyGroupsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetProxyGroupsFilterArgs>? _filters;

        /// <summary>
        /// Filter conditions,The upper limit of Filter.Values per request is 5.RealServerRegion - String - Required: No - (filtering criteria) Filter by real server region, refer to the RegionId in the returned results of the DescribeDestRegions interface.PackageType - String - Required: No - (Filter condition) proxy group type, where &amp;amp;#39;Thunder&amp;amp;#39; represents the standard proxy group and &amp;amp;#39;Accelerator&amp;amp;#39; represents the silver acceleration proxy group.
        /// </summary>
        public List<Inputs.GetProxyGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProxyGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Project ID. Value range:-1, All projects under this user0, default projectOther values, specified items.
        /// </summary>
        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tagSets")]
        private List<Inputs.GetProxyGroupsTagSetArgs>? _tagSets;

        /// <summary>
        /// Tag list, when this field exists, pulls the resource list under the corresponding tag.Supports a maximum of 5 labels. When there are two or more labels and any one of them is met, the proxy group will be pulled out.
        /// </summary>
        public List<Inputs.GetProxyGroupsTagSetArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new List<Inputs.GetProxyGroupsTagSetArgs>());
            set => _tagSets = value;
        }

        public GetProxyGroupsArgs()
        {
        }
    }

    public sealed class GetProxyGroupsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetProxyGroupsFilterInputArgs>? _filters;

        /// <summary>
        /// Filter conditions,The upper limit of Filter.Values per request is 5.RealServerRegion - String - Required: No - (filtering criteria) Filter by real server region, refer to the RegionId in the returned results of the DescribeDestRegions interface.PackageType - String - Required: No - (Filter condition) proxy group type, where &amp;amp;#39;Thunder&amp;amp;#39; represents the standard proxy group and &amp;amp;#39;Accelerator&amp;amp;#39; represents the silver acceleration proxy group.
        /// </summary>
        public InputList<Inputs.GetProxyGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProxyGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Project ID. Value range:-1, All projects under this user0, default projectOther values, specified items.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tagSets")]
        private InputList<Inputs.GetProxyGroupsTagSetInputArgs>? _tagSets;

        /// <summary>
        /// Tag list, when this field exists, pulls the resource list under the corresponding tag.Supports a maximum of 5 labels. When there are two or more labels and any one of them is met, the proxy group will be pulled out.
        /// </summary>
        public InputList<Inputs.GetProxyGroupsTagSetInputArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new InputList<Inputs.GetProxyGroupsTagSetInputArgs>());
            set => _tagSets = value;
        }

        public GetProxyGroupsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProxyGroupsResult
    {
        public readonly ImmutableArray<Outputs.GetProxyGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Project Id.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// List of proxy groups.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyGroupsProxyGroupListResult> ProxyGroupLists;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Tag Set.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyGroupsTagSetResult> TagSets;

        [OutputConstructor]
        private GetProxyGroupsResult(
            ImmutableArray<Outputs.GetProxyGroupsFilterResult> filters,

            string id,

            int projectId,

            ImmutableArray<Outputs.GetProxyGroupsProxyGroupListResult> proxyGroupLists,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetProxyGroupsTagSetResult> tagSets)
        {
            Filters = filters;
            Id = id;
            ProjectId = projectId;
            ProxyGroupLists = proxyGroupLists;
            ResultOutputFile = resultOutputFile;
            TagSets = tagSets;
        }
    }
}
