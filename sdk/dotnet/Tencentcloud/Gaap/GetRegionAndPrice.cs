// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    public static class GetRegionAndPrice
    {
        /// <summary>
        /// Use this data source to query detailed information of gaap region and price
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var regionAndPrice = Output.Create(Tencentcloud.Gaap.GetRegionAndPrice.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegionAndPriceResult> InvokeAsync(GetRegionAndPriceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionAndPriceResult>("tencentcloud:Gaap/getRegionAndPrice:getRegionAndPrice", args ?? new GetRegionAndPriceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of gaap region and price
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var regionAndPrice = Output.Create(Tencentcloud.Gaap.GetRegionAndPrice.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRegionAndPriceResult> Invoke(GetRegionAndPriceInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegionAndPriceResult>("tencentcloud:Gaap/getRegionAndPrice:getRegionAndPrice", args ?? new GetRegionAndPriceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionAndPriceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// IP version. Available values: IPv4, IPv6. Default is IPv4.
        /// </summary>
        [Input("ipAddressVersion")]
        public string? IpAddressVersion { get; set; }

        /// <summary>
        /// Type of channel package. `Thunder` represents standard channel group, `Accelerator` represents game accelerator channel, and `CrossBorder` represents cross-border channel.
        /// </summary>
        [Input("packageType")]
        public string? PackageType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRegionAndPriceArgs()
        {
        }
    }

    public sealed class GetRegionAndPriceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// IP version. Available values: IPv4, IPv6. Default is IPv4.
        /// </summary>
        [Input("ipAddressVersion")]
        public Input<string>? IpAddressVersion { get; set; }

        /// <summary>
        /// Type of channel package. `Thunder` represents standard channel group, `Accelerator` represents game accelerator channel, and `CrossBorder` represents cross-border channel.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRegionAndPriceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegionAndPriceResult
    {
        /// <summary>
        /// Band width Unit Price, Unit:yuan/Mbps/day.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionAndPriceBandwidthUnitPriceResult> BandwidthUnitPrices;
        /// <summary>
        /// Bandwidth Price Currency Type:CNYUSD.
        /// </summary>
        public readonly string Currency;
        /// <summary>
        /// Source Site Area Details List.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionAndPriceDestRegionSetResult> DestRegionSets;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IpAddressVersion;
        public readonly string? PackageType;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetRegionAndPriceResult(
            ImmutableArray<Outputs.GetRegionAndPriceBandwidthUnitPriceResult> bandwidthUnitPrices,

            string currency,

            ImmutableArray<Outputs.GetRegionAndPriceDestRegionSetResult> destRegionSets,

            string id,

            string? ipAddressVersion,

            string? packageType,

            string? resultOutputFile)
        {
            BandwidthUnitPrices = bandwidthUnitPrices;
            Currency = currency;
            DestRegionSets = destRegionSets;
            Id = id;
            IpAddressVersion = ipAddressVersion;
            PackageType = packageType;
            ResultOutputFile = resultOutputFile;
        }
    }
}
