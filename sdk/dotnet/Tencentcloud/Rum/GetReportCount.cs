// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Rum
{
    public static class GetReportCount
    {
        /// <summary>
        /// Use this data source to query detailed information of rum report_count
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var reportCount = Tencentcloud.Rum.GetReportCount.Invoke(new()
        ///     {
        ///         EndTime = 1625454840,
        ///         ProjectId = 1,
        ///         ReportType = "log",
        ///         StartTime = 1625444040,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetReportCountResult> InvokeAsync(GetReportCountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReportCountResult>("tencentcloud:Rum/getReportCount:getReportCount", args ?? new GetReportCountArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rum report_count
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var reportCount = Tencentcloud.Rum.GetReportCount.Invoke(new()
        ///     {
        ///         EndTime = 1625454840,
        ///         ProjectId = 1,
        ///         ReportType = "log",
        ///         StartTime = 1625444040,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetReportCountResult> Invoke(GetReportCountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReportCountResult>("tencentcloud:Rum/getReportCount:getReportCount", args ?? new GetReportCountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportCountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time but is represented using a timestamp in seconds.
        /// </summary>
        [Input("endTime", required: true)]
        public int EndTime { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        /// <summary>
        /// Report type, empty is meaning all type count. `log`:log report count, `pv`:pv report count, `event`:event report count, `speed`:speed report count, `performance`:performance report count, `custom`:custom report count, `webvitals`:webvitals report count, `miniProgramData`:miniProgramData report count.
        /// </summary>
        [Input("reportType")]
        public string? ReportType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time but is represented using a timestamp in seconds.
        /// </summary>
        [Input("startTime", required: true)]
        public int StartTime { get; set; }

        public GetReportCountArgs()
        {
        }
        public static new GetReportCountArgs Empty => new GetReportCountArgs();
    }

    public sealed class GetReportCountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time but is represented using a timestamp in seconds.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<int> EndTime { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// Report type, empty is meaning all type count. `log`:log report count, `pv`:pv report count, `event`:event report count, `speed`:speed report count, `performance`:performance report count, `custom`:custom report count, `webvitals`:webvitals report count, `miniProgramData`:miniProgramData report count.
        /// </summary>
        [Input("reportType")]
        public Input<string>? ReportType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time but is represented using a timestamp in seconds.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<int> StartTime { get; set; } = null!;

        public GetReportCountInvokeArgs()
        {
        }
        public static new GetReportCountInvokeArgs Empty => new GetReportCountInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportCountResult
    {
        public readonly int EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly int ProjectId;
        public readonly string? ReportType;
        /// <summary>
        /// Return value.
        /// </summary>
        public readonly string Result;
        public readonly string? ResultOutputFile;
        public readonly int StartTime;

        [OutputConstructor]
        private GetReportCountResult(
            int endTime,

            string id,

            string? instanceId,

            int projectId,

            string? reportType,

            string result,

            string? resultOutputFile,

            int startTime)
        {
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            ProjectId = projectId;
            ReportType = reportType;
            Result = result;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
