// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Rum
{
    public static class GetSign
    {
        /// <summary>
        /// Use this data source to query detailed information of rum sign
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var sign = Output.Create(Tencentcloud.Rum.GetSign.InvokeAsync(new Tencentcloud.Rum.GetSignArgs
        ///         {
        ///             FileType = 1,
        ///             Timeout = 1800,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSignResult> InvokeAsync(GetSignArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSignResult>("tencentcloud:Rum/getSign:getSign", args ?? new GetSignArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rum sign
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var sign = Output.Create(Tencentcloud.Rum.GetSign.InvokeAsync(new Tencentcloud.Rum.GetSignArgs
        ///         {
        ///             FileType = 1,
        ///             Timeout = 1800,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSignResult> Invoke(GetSignInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSignResult>("tencentcloud:Rum/getSign:getSign", args ?? new GetSignInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSignArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Bucket type. `1`:web project; `2`:app project.
        /// </summary>
        [Input("fileType")]
        public int? FileType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Timeout duration.
        /// </summary>
        [Input("timeout")]
        public int? Timeout { get; set; }

        public GetSignArgs()
        {
        }
    }

    public sealed class GetSignInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Bucket type. `1`:web project; `2`:app project.
        /// </summary>
        [Input("fileType")]
        public Input<int>? FileType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Timeout duration.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public GetSignInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSignResult
    {
        /// <summary>
        /// Expiration timestamp.
        /// </summary>
        public readonly int ExpiredTime;
        public readonly int? FileType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Temporary access key ID.
        /// </summary>
        public readonly string SecretId;
        /// <summary>
        /// Temporary access key.
        /// </summary>
        public readonly string SecretKey;
        /// <summary>
        /// Temporary access key token.
        /// </summary>
        public readonly string SessionToken;
        /// <summary>
        /// Start timestamp.
        /// </summary>
        public readonly int StartTime;
        public readonly int? Timeout;

        [OutputConstructor]
        private GetSignResult(
            int expiredTime,

            int? fileType,

            string id,

            string? resultOutputFile,

            string secretId,

            string secretKey,

            string sessionToken,

            int startTime,

            int? timeout)
        {
            ExpiredTime = expiredTime;
            FileType = fileType;
            Id = id;
            ResultOutputFile = resultOutputFile;
            SecretId = secretId;
            SecretKey = secretKey;
            SessionToken = sessionToken;
            StartTime = startTime;
            Timeout = timeout;
        }
    }
}
