// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Rum
{
    public static class GetScores
    {
        /// <summary>
        /// Use this data source to query detailed information of rum scores
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var scores = Output.Create(Tencentcloud.Rum.GetScores.InvokeAsync(new Tencentcloud.Rum.GetScoresArgs
        ///         {
        ///             EndTime = "2023082215",
        ///             IsDemo = 1,
        ///             ProjectId = 1,
        ///             StartTime = "2023082214",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScoresResult> InvokeAsync(GetScoresArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScoresResult>("tencentcloud:Rum/getScores:getScores", args ?? new GetScoresArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rum scores
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var scores = Output.Create(Tencentcloud.Rum.GetScores.InvokeAsync(new Tencentcloud.Rum.GetScoresArgs
        ///         {
        ///             EndTime = "2023082215",
        ///             IsDemo = 1,
        ///             ProjectId = 1,
        ///             StartTime = "2023082214",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScoresResult> Invoke(GetScoresInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScoresResult>("tencentcloud:Rum/getScores:getScores", args ?? new GetScoresInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScoresArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// Get data from demo. This parameter is deprecated.
        /// </summary>
        [Input("isDemo")]
        public int? IsDemo { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId")]
        public int? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetScoresArgs()
        {
        }
    }

    public sealed class GetScoresInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// Get data from demo. This parameter is deprecated.
        /// </summary>
        [Input("isDemo")]
        public Input<int>? IsDemo { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetScoresInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScoresResult
    {
        public readonly string EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? IsDemo;
        /// <summary>
        /// Project ID.
        /// </summary>
        public readonly int? ProjectId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Score list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScoresScoreSetResult> ScoreSets;
        public readonly string StartTime;

        [OutputConstructor]
        private GetScoresResult(
            string endTime,

            string id,

            int? isDemo,

            int? projectId,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetScoresScoreSetResult> scoreSets,

            string startTime)
        {
            EndTime = endTime;
            Id = id;
            IsDemo = isDemo;
            ProjectId = projectId;
            ResultOutputFile = resultOutputFile;
            ScoreSets = scoreSets;
            StartTime = startTime;
        }
    }
}
