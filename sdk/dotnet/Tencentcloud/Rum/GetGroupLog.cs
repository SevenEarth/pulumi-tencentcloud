// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Rum
{
    public static class GetGroupLog
    {
        /// <summary>
        /// Use this data source to query detailed information of rum group_log
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupLog = Output.Create(Tencentcloud.Rum.GetGroupLog.InvokeAsync(new Tencentcloud.Rum.GetGroupLogArgs
        ///         {
        ///             EndTime = "1625454840000",
        ///             GroupField = "level",
        ///             OrderBy = "desc",
        ///             ProjectId = 1,
        ///             Query = "id:123 AND type:\"log\"",
        ///             StartTime = "1625444040000",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupLogResult> InvokeAsync(GetGroupLogArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupLogResult>("tencentcloud:Rum/getGroupLog:getGroupLog", args ?? new GetGroupLogArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rum group_log
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupLog = Output.Create(Tencentcloud.Rum.GetGroupLog.InvokeAsync(new Tencentcloud.Rum.GetGroupLogArgs
        ///         {
        ///             EndTime = "1625454840000",
        ///             GroupField = "level",
        ///             OrderBy = "desc",
        ///             ProjectId = 1,
        ///             Query = "id:123 AND type:\"log\"",
        ///             StartTime = "1625444040000",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupLogResult> Invoke(GetGroupLogInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGroupLogResult>("tencentcloud:Rum/getGroupLog:getGroupLog", args ?? new GetGroupLogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupLogArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time but is represented using a timestamp in milliseconds.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// The field used for group.
        /// </summary>
        [Input("groupField", required: true)]
        public string GroupField { get; set; } = null!;

        /// <summary>
        /// Sorting method. `desc`:Descending order; `asc`: Ascending order.
        /// </summary>
        [Input("orderBy", required: true)]
        public string OrderBy { get; set; } = null!;

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        /// <summary>
        /// Log Query syntax statement.
        /// </summary>
        [Input("query", required: true)]
        public string Query { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time but is represented using a timestamp in milliseconds.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetGroupLogArgs()
        {
        }
    }

    public sealed class GetGroupLogInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time but is represented using a timestamp in milliseconds.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// The field used for group.
        /// </summary>
        [Input("groupField", required: true)]
        public Input<string> GroupField { get; set; } = null!;

        /// <summary>
        /// Sorting method. `desc`:Descending order; `asc`: Ascending order.
        /// </summary>
        [Input("orderBy", required: true)]
        public Input<string> OrderBy { get; set; } = null!;

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// Log Query syntax statement.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Start time but is represented using a timestamp in milliseconds.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetGroupLogInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupLogResult
    {
        public readonly string EndTime;
        public readonly string GroupField;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrderBy;
        public readonly int ProjectId;
        public readonly string Query;
        /// <summary>
        /// Return value.
        /// </summary>
        public readonly string Result;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;

        [OutputConstructor]
        private GetGroupLogResult(
            string endTime,

            string groupField,

            string id,

            string orderBy,

            int projectId,

            string query,

            string result,

            string? resultOutputFile,

            string startTime)
        {
            EndTime = endTime;
            GroupField = groupField;
            Id = id;
            OrderBy = orderBy;
            ProjectId = projectId;
            Query = query;
            Result = result;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
