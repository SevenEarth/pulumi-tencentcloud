// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ckafka
{
    public static class GetGroupInfo
    {
        /// <summary>
        /// Use this data source to query detailed information of ckafka group_info
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupInfo = Output.Create(Tencentcloud.Ckafka.GetGroupInfo.InvokeAsync(new Tencentcloud.Ckafka.GetGroupInfoArgs
        ///         {
        ///             GroupLists = 
        ///             {
        ///                 "xxxxxx",
        ///             },
        ///             InstanceId = "ckafka-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupInfoResult> InvokeAsync(GetGroupInfoArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupInfoResult>("tencentcloud:Ckafka/getGroupInfo:getGroupInfo", args ?? new GetGroupInfoArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ckafka group_info
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupInfo = Output.Create(Tencentcloud.Ckafka.GetGroupInfo.InvokeAsync(new Tencentcloud.Ckafka.GetGroupInfoArgs
        ///         {
        ///             GroupLists = 
        ///             {
        ///                 "xxxxxx",
        ///             },
        ///             InstanceId = "ckafka-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupInfoResult> Invoke(GetGroupInfoInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGroupInfoResult>("tencentcloud:Ckafka/getGroupInfo:getGroupInfo", args ?? new GetGroupInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupInfoArgs : Pulumi.InvokeArgs
    {
        [Input("groupLists", required: true)]
        private List<string>? _groupLists;

        /// <summary>
        /// Kafka consumption group, Consumer-group, here is an array format, format GroupList.0=xxx&amp;amp;amp;GroupList.1=yyy.
        /// </summary>
        public List<string> GroupLists
        {
            get => _groupLists ?? (_groupLists = new List<string>());
            set => _groupLists = value;
        }

        /// <summary>
        /// InstanceId.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetGroupInfoArgs()
        {
        }
    }

    public sealed class GetGroupInfoInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("groupLists", required: true)]
        private InputList<string>? _groupLists;

        /// <summary>
        /// Kafka consumption group, Consumer-group, here is an array format, format GroupList.0=xxx&amp;amp;amp;GroupList.1=yyy.
        /// </summary>
        public InputList<string> GroupLists
        {
            get => _groupLists ?? (_groupLists = new InputList<string>());
            set => _groupLists = value;
        }

        /// <summary>
        /// InstanceId.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetGroupInfoInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupInfoResult
    {
        public readonly ImmutableArray<string> GroupLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// result.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupInfoResultResult> Results;

        [OutputConstructor]
        private GetGroupInfoResult(
            ImmutableArray<string> groupLists,

            string id,

            string instanceId,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetGroupInfoResultResult> results)
        {
            GroupLists = groupLists;
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
            Results = results;
        }
    }
}
