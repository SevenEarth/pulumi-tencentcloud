// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ckafka
{
    public static class GetDatahubTopic
    {
        /// <summary>
        /// Use this data source to query detailed information of ckafka datahub_topic
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datahubTopic = Tencentcloud.Ckafka.GetDatahubTopic.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDatahubTopicResult> InvokeAsync(GetDatahubTopicArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatahubTopicResult>("tencentcloud:Ckafka/getDatahubTopic:getDatahubTopic", args ?? new GetDatahubTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ckafka datahub_topic
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datahubTopic = Tencentcloud.Ckafka.GetDatahubTopic.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDatahubTopicResult> Invoke(GetDatahubTopicInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatahubTopicResult>("tencentcloud:Ckafka/getDatahubTopic:getDatahubTopic", args ?? new GetDatahubTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatahubTopicArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The maximum number of results returned this time, the default is 50, and the maximum value is 50.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// The offset position of this query, the default is 0.
        /// </summary>
        [Input("offset")]
        public int? Offset { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// query key word.
        /// </summary>
        [Input("searchWord")]
        public string? SearchWord { get; set; }

        public GetDatahubTopicArgs()
        {
        }
        public static new GetDatahubTopicArgs Empty => new GetDatahubTopicArgs();
    }

    public sealed class GetDatahubTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The maximum number of results returned this time, the default is 50, and the maximum value is 50.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// The offset position of this query, the default is 0.
        /// </summary>
        [Input("offset")]
        public Input<int>? Offset { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// query key word.
        /// </summary>
        [Input("searchWord")]
        public Input<string>? SearchWord { get; set; }

        public GetDatahubTopicInvokeArgs()
        {
        }
        public static new GetDatahubTopicInvokeArgs Empty => new GetDatahubTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatahubTopicResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly int? Offset;
        public readonly string? ResultOutputFile;
        public readonly string? SearchWord;
        /// <summary>
        /// Topic list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatahubTopicTopicListResult> TopicLists;

        [OutputConstructor]
        private GetDatahubTopicResult(
            string id,

            int? limit,

            int? offset,

            string? resultOutputFile,

            string? searchWord,

            ImmutableArray<Outputs.GetDatahubTopicTopicListResult> topicLists)
        {
            Id = id;
            Limit = limit;
            Offset = offset;
            ResultOutputFile = resultOutputFile;
            SearchWord = searchWord;
            TopicLists = topicLists;
        }
    }
}
