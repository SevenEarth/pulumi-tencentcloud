// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ckafka.Inputs
{

    public sealed class DatahubTaskSourceResourceKafkaParamArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
        /// </summary>
        [Input("compressionType")]
        public Input<string>? CompressionType { get; set; }

        /// <summary>
        /// enable dead letter queue.
        /// </summary>
        [Input("enableToleration")]
        public Input<bool>? EnableToleration { get; set; }

        /// <summary>
        /// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
        /// </summary>
        [Input("msgMultiple")]
        public Input<int>? MsgMultiple { get; set; }

        /// <summary>
        /// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
        /// </summary>
        [Input("offsetType")]
        public Input<string>? OffsetType { get; set; }

        /// <summary>
        /// the partition num of the topic.
        /// </summary>
        [Input("partitionNum")]
        public Input<int>? PartitionNum { get; set; }

        /// <summary>
        /// Qps(query per seconds) limit.
        /// </summary>
        [Input("qpsLimit")]
        public Input<int>? QpsLimit { get; set; }

        /// <summary>
        /// instance resource.
        /// </summary>
        [Input("resource", required: true)]
        public Input<string> Resource { get; set; } = null!;

        /// <summary>
        /// instance name.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// whether the cluster is built by yourself instead of cloud product.
        /// </summary>
        [Input("selfBuilt", required: true)]
        public Input<bool> SelfBuilt { get; set; } = null!;

        /// <summary>
        /// when Offset type timestamp is required.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        [Input("tableMappings")]
        private InputList<Inputs.DatahubTaskSourceResourceKafkaParamTableMappingArgs>? _tableMappings;

        /// <summary>
        /// maps of table to topic, required when multi topic is selected.
        /// </summary>
        public InputList<Inputs.DatahubTaskSourceResourceKafkaParamTableMappingArgs> TableMappings
        {
            get => _tableMappings ?? (_tableMappings = new InputList<Inputs.DatahubTaskSourceResourceKafkaParamTableMappingArgs>());
            set => _tableMappings = value;
        }

        /// <summary>
        /// Topic name, use `,` when more than 1 topic.
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        /// <summary>
        /// Topic id.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
        /// </summary>
        [Input("useAutoCreateTopic")]
        public Input<bool>? UseAutoCreateTopic { get; set; }

        /// <summary>
        /// whether to use multi table.
        /// </summary>
        [Input("useTableMapping")]
        public Input<bool>? UseTableMapping { get; set; }

        /// <summary>
        /// Zone ID.
        /// </summary>
        [Input("zoneId")]
        public Input<int>? ZoneId { get; set; }

        public DatahubTaskSourceResourceKafkaParamArgs()
        {
        }
    }
}
