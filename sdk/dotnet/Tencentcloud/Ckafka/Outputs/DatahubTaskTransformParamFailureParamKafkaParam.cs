// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ckafka.Outputs
{

    [OutputType]
    public sealed class DatahubTaskTransformParamFailureParamKafkaParam
    {
        /// <summary>
        /// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
        /// </summary>
        public readonly string? CompressionType;
        /// <summary>
        /// Enable the fault-tolerant instance and enable the dead-letter queue.
        /// </summary>
        public readonly bool? EnableToleration;
        /// <summary>
        /// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
        /// </summary>
        public readonly int? MsgMultiple;
        /// <summary>
        /// Offset type, initial position earliest, latest position latest, time point position timestamp.
        /// </summary>
        public readonly string? OffsetType;
        /// <summary>
        /// Partition num.
        /// </summary>
        public readonly int? PartitionNum;
        /// <summary>
        /// Qps limit.
        /// </summary>
        public readonly int? QpsLimit;
        /// <summary>
        /// resource id.
        /// </summary>
        public readonly string Resource;
        /// <summary>
        /// resource id name.
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// Whether it is a self-built cluster.
        /// </summary>
        public readonly bool SelfBuilt;
        /// <summary>
        /// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
        /// </summary>
        public readonly int? StartTime;
        /// <summary>
        /// The route from Table to Topic must be passed when the Distribute to multiple topics switch is turned on.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatahubTaskTransformParamFailureParamKafkaParamTableMapping> TableMappings;
        /// <summary>
        /// Topic name, multiple separated by,.
        /// </summary>
        public readonly string? Topic;
        /// <summary>
        /// Topic Id.
        /// </summary>
        public readonly string? TopicId;
        /// <summary>
        /// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
        /// </summary>
        public readonly bool? UseAutoCreateTopic;
        /// <summary>
        /// Distribute to multiple topics switch, the default is false.
        /// </summary>
        public readonly bool? UseTableMapping;
        /// <summary>
        /// Zone ID.
        /// </summary>
        public readonly int? ZoneId;

        [OutputConstructor]
        private DatahubTaskTransformParamFailureParamKafkaParam(
            string? compressionType,

            bool? enableToleration,

            int? msgMultiple,

            string? offsetType,

            int? partitionNum,

            int? qpsLimit,

            string resource,

            string? resourceName,

            bool selfBuilt,

            int? startTime,

            ImmutableArray<Outputs.DatahubTaskTransformParamFailureParamKafkaParamTableMapping> tableMappings,

            string? topic,

            string? topicId,

            bool? useAutoCreateTopic,

            bool? useTableMapping,

            int? zoneId)
        {
            CompressionType = compressionType;
            EnableToleration = enableToleration;
            MsgMultiple = msgMultiple;
            OffsetType = offsetType;
            PartitionNum = partitionNum;
            QpsLimit = qpsLimit;
            Resource = resource;
            ResourceName = resourceName;
            SelfBuilt = selfBuilt;
            StartTime = startTime;
            TableMappings = tableMappings;
            Topic = topic;
            TopicId = topicId;
            UseAutoCreateTopic = useAutoCreateTopic;
            UseTableMapping = useTableMapping;
            ZoneId = zoneId;
        }
    }
}
