// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Wedata.Inputs
{

    public sealed class IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Crontab expression.
        /// </summary>
        [Input("crontabExpression")]
        public Input<string>? CrontabExpression { get; set; }

        /// <summary>
        /// Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
        /// </summary>
        [Input("cycleType")]
        public Input<int>? CycleType { get; set; }

        /// <summary>
        /// Scheduling execution end time.
        /// </summary>
        [Input("executionEndTime")]
        public Input<string>? ExecutionEndTime { get; set; }

        /// <summary>
        /// Scheduling execution start time.
        /// </summary>
        [Input("executionStartTime")]
        public Input<string>? ExecutionStartTime { get; set; }

        /// <summary>
        /// Whether to retry.
        /// </summary>
        [Input("retriable")]
        public Input<int>? Retriable { get; set; }

        /// <summary>
        /// Retry waiting time, unit is minutes.
        /// </summary>
        [Input("retryWait")]
        public Input<int>? RetryWait { get; set; }

        /// <summary>
        /// Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
        /// </summary>
        [Input("selfDepend")]
        public Input<int>? SelfDepend { get; set; }

        /// <summary>
        /// Number of retries.
        /// </summary>
        [Input("tryLimit")]
        public Input<int>? TryLimit { get; set; }

        public IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs()
        {
        }
    }
}
