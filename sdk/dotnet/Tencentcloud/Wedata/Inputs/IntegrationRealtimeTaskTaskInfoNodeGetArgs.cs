// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Wedata.Inputs
{

    public sealed class IntegrationRealtimeTaskTaskInfoNodeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User App Id.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("configs")]
        private InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeConfigGetArgs>? _configs;

        /// <summary>
        /// Node configuration information.
        /// </summary>
        public InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeConfigGetArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeConfigGetArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// Create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Creator User ID.
        /// </summary>
        [Input("creatorUin")]
        public Input<string>? CreatorUin { get; set; }

        /// <summary>
        /// Data source type: MYSQL, POSTGRE, ORACLE, SQLSERVER, FTP, HIVE, HDFS, ICEBERG, KAFKA, HBASE, SPARK, TBASE, DB2, DM, GAUSSDB, GBASE, IMPALA, ES, S3_DATAINSIGHT, GREENPLUM, PHOENIX, SAP_HANA, SFTP, OCEANBASE, CLICKHOUSE, KUDU, VERTICA, REDIS, COS, DLC, DORIS, CKAFKA, DTS_KAFKA, S3, CDW, TDSQLC, TDSQL, MONGODB, SYBASE, REST_API, StarRocks, TCHOUSE_X.
        /// </summary>
        [Input("dataSourceType")]
        public Input<string>? DataSourceType { get; set; }

        /// <summary>
        /// Datasource ID.
        /// </summary>
        [Input("datasourceId")]
        public Input<string>? DatasourceId { get; set; }

        /// <summary>
        /// Node Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("extConfigs")]
        private InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeExtConfigGetArgs>? _extConfigs;

        /// <summary>
        /// Node extension configuration information.
        /// </summary>
        public InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeExtConfigGetArgs> ExtConfigs
        {
            get => _extConfigs ?? (_extConfigs = new InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeExtConfigGetArgs>());
            set => _extConfigs = value;
        }

        /// <summary>
        /// Node ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Node Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Node mapping.
        /// </summary>
        [Input("nodeMapping")]
        public Input<Inputs.IntegrationRealtimeTaskTaskInfoNodeNodeMappingGetArgs>? NodeMapping { get; set; }

        /// <summary>
        /// Node type: INPUT,OUTPUT,JOIN,FILTER,TRANSFORM.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// Operator User ID.
        /// </summary>
        [Input("operatorUin")]
        public Input<string>? OperatorUin { get; set; }

        /// <summary>
        /// Owner User ID.
        /// </summary>
        [Input("ownerUin")]
        public Input<string>? OwnerUin { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("schemas")]
        private InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeSchemaGetArgs>? _schemas;

        /// <summary>
        /// Schema information.
        /// </summary>
        public InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeSchemaGetArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.IntegrationRealtimeTaskTaskInfoNodeSchemaGetArgs>());
            set => _schemas = value;
        }

        /// <summary>
        /// The task id to which the node belongs.
        /// </summary>
        [Input("taskId")]
        public Input<string>? TaskId { get; set; }

        /// <summary>
        /// Update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public IntegrationRealtimeTaskTaskInfoNodeGetArgs()
        {
        }
        public static new IntegrationRealtimeTaskTaskInfoNodeGetArgs Empty => new IntegrationRealtimeTaskTaskInfoNodeGetArgs();
    }
}
