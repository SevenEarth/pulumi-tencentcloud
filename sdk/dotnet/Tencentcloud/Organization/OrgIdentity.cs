// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Organization
{
    /// <summary>
    /// Provides a resource to create a organization org_identity
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var orgIdentity = new Tencentcloud.Organization.OrgIdentity("orgIdentity", new()
    ///     {
    ///         Description = "iac-test",
    ///         IdentityAliasName = "example-iac-test",
    ///         IdentityPolicies = new[]
    ///         {
    ///             new Tencentcloud.Organization.Inputs.OrgIdentityIdentityPolicyArgs
    ///             {
    ///                 PolicyId = 1,
    ///                 PolicyName = "AdministratorAccess",
    ///                 PolicyType = 2,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// organization org_identity can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Organization/orgIdentity:OrgIdentity org_identity org_identity_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Organization/orgIdentity:OrgIdentity")]
    public partial class OrgIdentity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identity description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
        /// </summary>
        [Output("identityAliasName")]
        public Output<string> IdentityAliasName { get; private set; } = null!;

        /// <summary>
        /// Identity policy list.
        /// </summary>
        [Output("identityPolicies")]
        public Output<ImmutableArray<Outputs.OrgIdentityIdentityPolicy>> IdentityPolicies { get; private set; } = null!;


        /// <summary>
        /// Create a OrgIdentity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgIdentity(string name, OrgIdentityArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Organization/orgIdentity:OrgIdentity", name, args ?? new OrgIdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgIdentity(string name, Input<string> id, OrgIdentityState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Organization/orgIdentity:OrgIdentity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgIdentity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgIdentity Get(string name, Input<string> id, OrgIdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new OrgIdentity(name, id, state, options);
        }
    }

    public sealed class OrgIdentityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
        /// </summary>
        [Input("identityAliasName", required: true)]
        public Input<string> IdentityAliasName { get; set; } = null!;

        [Input("identityPolicies", required: true)]
        private InputList<Inputs.OrgIdentityIdentityPolicyArgs>? _identityPolicies;

        /// <summary>
        /// Identity policy list.
        /// </summary>
        public InputList<Inputs.OrgIdentityIdentityPolicyArgs> IdentityPolicies
        {
            get => _identityPolicies ?? (_identityPolicies = new InputList<Inputs.OrgIdentityIdentityPolicyArgs>());
            set => _identityPolicies = value;
        }

        public OrgIdentityArgs()
        {
        }
        public static new OrgIdentityArgs Empty => new OrgIdentityArgs();
    }

    public sealed class OrgIdentityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
        /// </summary>
        [Input("identityAliasName")]
        public Input<string>? IdentityAliasName { get; set; }

        [Input("identityPolicies")]
        private InputList<Inputs.OrgIdentityIdentityPolicyGetArgs>? _identityPolicies;

        /// <summary>
        /// Identity policy list.
        /// </summary>
        public InputList<Inputs.OrgIdentityIdentityPolicyGetArgs> IdentityPolicies
        {
            get => _identityPolicies ?? (_identityPolicies = new InputList<Inputs.OrgIdentityIdentityPolicyGetArgs>());
            set => _identityPolicies = value;
        }

        public OrgIdentityState()
        {
        }
        public static new OrgIdentityState Empty => new OrgIdentityState();
    }
}
