// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Oceanus
{
    public static class GetTreeResources
    {
        /// <summary>
        /// Use this data source to query detailed information of oceanus tree_resources
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Oceanus.GetTreeResources.Invoke(new()
        ///     {
        ///         WorkSpaceId = "space-2idq8wbr",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTreeResourcesResult> InvokeAsync(GetTreeResourcesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTreeResourcesResult>("tencentcloud:Oceanus/getTreeResources:getTreeResources", args ?? new GetTreeResourcesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of oceanus tree_resources
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Oceanus.GetTreeResources.Invoke(new()
        ///     {
        ///         WorkSpaceId = "space-2idq8wbr",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTreeResourcesResult> Invoke(GetTreeResourcesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTreeResourcesResult>("tencentcloud:Oceanus/getTreeResources:getTreeResources", args ?? new GetTreeResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTreeResourcesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Workspace SerialId.
        /// </summary>
        [Input("workSpaceId", required: true)]
        public string WorkSpaceId { get; set; } = null!;

        public GetTreeResourcesArgs()
        {
        }
        public static new GetTreeResourcesArgs Empty => new GetTreeResourcesArgs();
    }

    public sealed class GetTreeResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Workspace SerialId.
        /// </summary>
        [Input("workSpaceId", required: true)]
        public Input<string> WorkSpaceId { get; set; } = null!;

        public GetTreeResourcesInvokeArgs()
        {
        }
        public static new GetTreeResourcesInvokeArgs Empty => new GetTreeResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTreeResourcesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Tree structure information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTreeResourcesTreeInfoResult> TreeInfos;
        public readonly string WorkSpaceId;

        [OutputConstructor]
        private GetTreeResourcesResult(
            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetTreeResourcesTreeInfoResult> treeInfos,

            string workSpaceId)
        {
            Id = id;
            ResultOutputFile = resultOutputFile;
            TreeInfos = treeInfos;
            WorkSpaceId = workSpaceId;
        }
    }
}
