// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Elasticsearch
{
    public static class GetInstanceLogs
    {
        /// <summary>
        /// Use this data source to query detailed information of es elasticsearch_instance_logs
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var elasticsearchInstanceLogs = Output.Create(Tencentcloud.Elasticsearch.GetInstanceLogs.InvokeAsync(new Tencentcloud.Elasticsearch.GetInstanceLogsArgs
        ///         {
        ///             InstanceId = "es-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceLogsResult> InvokeAsync(GetInstanceLogsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceLogsResult>("tencentcloud:Elasticsearch/getInstanceLogs:getInstanceLogs", args ?? new GetInstanceLogsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of es elasticsearch_instance_logs
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var elasticsearchInstanceLogs = Output.Create(Tencentcloud.Elasticsearch.GetInstanceLogs.InvokeAsync(new Tencentcloud.Elasticsearch.GetInstanceLogsArgs
        ///         {
        ///             InstanceId = "es-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstanceLogsResult> Invoke(GetInstanceLogsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceLogsResult>("tencentcloud:Elasticsearch/getInstanceLogs:getInstanceLogs", args ?? new GetInstanceLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceLogsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
        /// </summary>
        [Input("endTime")]
        public string? EndTime { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Log type. Log type, default is 1, Valid values:
        /// - 1: master log
        /// - 2: Search slow log
        /// - 3: Index slow log
        /// - 4: GC log.
        /// </summary>
        [Input("logType")]
        public int? LogType { get; set; }

        /// <summary>
        /// Order type. Time sort method. Default is 0, valid values:
        /// - 0: descending;
        /// - 1: ascending order.
        /// </summary>
        [Input("orderByType")]
        public int? OrderByType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Search key. Support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
        /// </summary>
        [Input("searchKey")]
        public string? SearchKey { get; set; }

        /// <summary>
        /// Start time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
        /// </summary>
        [Input("startTime")]
        public string? StartTime { get; set; }

        public GetInstanceLogsArgs()
        {
        }
    }

    public sealed class GetInstanceLogsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// End time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Log type. Log type, default is 1, Valid values:
        /// - 1: master log
        /// - 2: Search slow log
        /// - 3: Index slow log
        /// - 4: GC log.
        /// </summary>
        [Input("logType")]
        public Input<int>? LogType { get; set; }

        /// <summary>
        /// Order type. Time sort method. Default is 0, valid values:
        /// - 0: descending;
        /// - 1: ascending order.
        /// </summary>
        [Input("orderByType")]
        public Input<int>? OrderByType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Search key. Support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
        /// </summary>
        [Input("searchKey")]
        public Input<string>? SearchKey { get; set; }

        /// <summary>
        /// Start time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public GetInstanceLogsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceLogsResult
    {
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        /// <summary>
        /// List of log details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceLogsInstanceLogListResult> InstanceLogLists;
        public readonly int? LogType;
        public readonly int? OrderByType;
        public readonly string? ResultOutputFile;
        public readonly string? SearchKey;
        public readonly string? StartTime;

        [OutputConstructor]
        private GetInstanceLogsResult(
            string? endTime,

            string id,

            string instanceId,

            ImmutableArray<Outputs.GetInstanceLogsInstanceLogListResult> instanceLogLists,

            int? logType,

            int? orderByType,

            string? resultOutputFile,

            string? searchKey,

            string? startTime)
        {
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            InstanceLogLists = instanceLogLists;
            LogType = logType;
            OrderByType = orderByType;
            ResultOutputFile = resultOutputFile;
            SearchKey = searchKey;
            StartTime = startTime;
        }
    }
}
