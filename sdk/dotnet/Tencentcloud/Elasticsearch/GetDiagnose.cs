// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Elasticsearch
{
    public static class GetDiagnose
    {
        /// <summary>
        /// Use this data source to query detailed information of elasticsearch diagnose
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var diagnose = Output.Create(Tencentcloud.Elasticsearch.GetDiagnose.InvokeAsync(new Tencentcloud.Elasticsearch.GetDiagnoseArgs
        ///         {
        ///             Date = "20231030",
        ///             InstanceId = "es-xxxxxx",
        ///             Limit = 1,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDiagnoseResult> InvokeAsync(GetDiagnoseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDiagnoseResult>("tencentcloud:Elasticsearch/getDiagnose:getDiagnose", args ?? new GetDiagnoseArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of elasticsearch diagnose
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var diagnose = Output.Create(Tencentcloud.Elasticsearch.GetDiagnose.InvokeAsync(new Tencentcloud.Elasticsearch.GetDiagnoseArgs
        ///         {
        ///             Date = "20231030",
        ///             InstanceId = "es-xxxxxx",
        ///             Limit = 1,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDiagnoseResult> Invoke(GetDiagnoseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDiagnoseResult>("tencentcloud:Elasticsearch/getDiagnose:getDiagnose", args ?? new GetDiagnoseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiagnoseArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report date, format 20210301.
        /// </summary>
        [Input("date")]
        public string? Date { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Number of copies returned in the report. Default value 1.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDiagnoseArgs()
        {
        }
    }

    public sealed class GetDiagnoseInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Report date, format 20210301.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Number of copies returned in the report. Default value 1.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDiagnoseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDiagnoseResult
    {
        public readonly string? Date;
        /// <summary>
        /// List of diagnostic reports.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiagnoseDiagnoseResultResult> DiagnoseResults;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Instance id.
        /// </summary>
        public readonly string InstanceId;
        public readonly int? Limit;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetDiagnoseResult(
            string? date,

            ImmutableArray<Outputs.GetDiagnoseDiagnoseResultResult> diagnoseResults,

            string id,

            string instanceId,

            int? limit,

            string? resultOutputFile)
        {
            Date = date;
            DiagnoseResults = diagnoseResults;
            Id = id;
            InstanceId = instanceId;
            Limit = limit;
            ResultOutputFile = resultOutputFile;
        }
    }
}
