// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Elasticsearch.Outputs
{

    [OutputType]
    public sealed class GetDescribeIndexListIndexMetaFieldResult
    {
        /// <summary>
        /// App id.
        /// </summary>
        public readonly int AppId;
        /// <summary>
        /// Backing indices.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldBackingIndexResult> BackingIndices;
        /// <summary>
        /// Cluster id.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// Cluster name.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// Cluster version.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// Index create time.
        /// </summary>
        public readonly string IndexCreateTime;
        /// <summary>
        /// Number of indexed documents.
        /// </summary>
        public readonly int IndexDocs;
        /// <summary>
        /// Index meta json.
        /// </summary>
        public readonly string IndexMetaJson;
        /// <summary>
        /// Index name. If you fill in the blanks, get all indexes.
        /// </summary>
        public readonly string IndexName;
        /// <summary>
        /// Index options field.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexOptionsFieldResult> IndexOptionsFields;
        /// <summary>
        /// Index lifecycle field.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexPolicyFieldResult> IndexPolicyFields;
        /// <summary>
        /// Index settings field.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexSettingsFieldResult> IndexSettingsFields;
        /// <summary>
        /// Index status.
        /// </summary>
        public readonly string IndexStatus;
        /// <summary>
        /// Index storage.
        /// </summary>
        public readonly int IndexStorage;
        /// <summary>
        /// Index type. `auto`: Autonomous index; `normal`: General index.
        /// </summary>
        public readonly string IndexType;

        [OutputConstructor]
        private GetDescribeIndexListIndexMetaFieldResult(
            int appId,

            ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldBackingIndexResult> backingIndices,

            string clusterId,

            string clusterName,

            string clusterVersion,

            string indexCreateTime,

            int indexDocs,

            string indexMetaJson,

            string indexName,

            ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexOptionsFieldResult> indexOptionsFields,

            ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexPolicyFieldResult> indexPolicyFields,

            ImmutableArray<Outputs.GetDescribeIndexListIndexMetaFieldIndexSettingsFieldResult> indexSettingsFields,

            string indexStatus,

            int indexStorage,

            string indexType)
        {
            AppId = appId;
            BackingIndices = backingIndices;
            ClusterId = clusterId;
            ClusterName = clusterName;
            ClusterVersion = clusterVersion;
            IndexCreateTime = indexCreateTime;
            IndexDocs = indexDocs;
            IndexMetaJson = indexMetaJson;
            IndexName = indexName;
            IndexOptionsFields = indexOptionsFields;
            IndexPolicyFields = indexPolicyFields;
            IndexSettingsFields = indexSettingsFields;
            IndexStatus = indexStatus;
            IndexStorage = indexStorage;
            IndexType = indexType;
        }
    }
}
