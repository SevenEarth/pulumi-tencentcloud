// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kms
{
    public static class GetGetParametersForImport
    {
        /// <summary>
        /// Use this data source to query detailed information of kms get_parameters_for_import
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Kms.GetGetParametersForImport.Invoke(new()
        ///     {
        ///         KeyId = "786aea8c-4aec-11ee-b601-525400281a45",
        ///         WrappingAlgorithm = "RSAES_OAEP_SHA_1",
        ///         WrappingKeySpec = "RSA_2048",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetGetParametersForImportResult> InvokeAsync(GetGetParametersForImportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGetParametersForImportResult>("tencentcloud:Kms/getGetParametersForImport:getGetParametersForImport", args ?? new GetGetParametersForImportArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of kms get_parameters_for_import
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Kms.GetGetParametersForImport.Invoke(new()
        ///     {
        ///         KeyId = "786aea8c-4aec-11ee-b601-525400281a45",
        ///         WrappingAlgorithm = "RSAES_OAEP_SHA_1",
        ///         WrappingKeySpec = "RSA_2048",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetGetParametersForImportResult> Invoke(GetGetParametersForImportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGetParametersForImportResult>("tencentcloud:Kms/getGetParametersForImport:getGetParametersForImport", args ?? new GetGetParametersForImportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGetParametersForImportArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// CMK unique identifier.
        /// </summary>
        [Input("keyId", required: true)]
        public string KeyId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
        /// </summary>
        [Input("wrappingAlgorithm", required: true)]
        public string WrappingAlgorithm { get; set; } = null!;

        /// <summary>
        /// Specifies the type of encryption key material, currently only supports RSA_2048.
        /// </summary>
        [Input("wrappingKeySpec", required: true)]
        public string WrappingKeySpec { get; set; } = null!;

        public GetGetParametersForImportArgs()
        {
        }
        public static new GetGetParametersForImportArgs Empty => new GetGetParametersForImportArgs();
    }

    public sealed class GetGetParametersForImportInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// CMK unique identifier.
        /// </summary>
        [Input("keyId", required: true)]
        public Input<string> KeyId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
        /// </summary>
        [Input("wrappingAlgorithm", required: true)]
        public Input<string> WrappingAlgorithm { get; set; } = null!;

        /// <summary>
        /// Specifies the type of encryption key material, currently only supports RSA_2048.
        /// </summary>
        [Input("wrappingKeySpec", required: true)]
        public Input<string> WrappingKeySpec { get; set; } = null!;

        public GetGetParametersForImportInvokeArgs()
        {
        }
        public static new GetGetParametersForImportInvokeArgs Empty => new GetGetParametersForImportInvokeArgs();
    }


    [OutputType]
    public sealed class GetGetParametersForImportResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The token required for importing key material is used as the parameter of ImportKeyMaterial.
        /// </summary>
        public readonly string ImportToken;
        public readonly string KeyId;
        /// <summary>
        /// The validity period of the exported token and public key cannot be imported after this period, and you need to call GetParametersForImport again to obtain it.
        /// </summary>
        public readonly int ParametersValidTo;
        /// <summary>
        /// Base64-encoded public key content.
        /// </summary>
        public readonly string PublicKey;
        public readonly string? ResultOutputFile;
        public readonly string WrappingAlgorithm;
        public readonly string WrappingKeySpec;

        [OutputConstructor]
        private GetGetParametersForImportResult(
            string id,

            string importToken,

            string keyId,

            int parametersValidTo,

            string publicKey,

            string? resultOutputFile,

            string wrappingAlgorithm,

            string wrappingKeySpec)
        {
            Id = id;
            ImportToken = importToken;
            KeyId = keyId;
            ParametersValidTo = parametersValidTo;
            PublicKey = publicKey;
            ResultOutputFile = resultOutputFile;
            WrappingAlgorithm = wrappingAlgorithm;
            WrappingKeySpec = wrappingKeySpec;
        }
    }
}
