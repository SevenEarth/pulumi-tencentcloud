// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cam
{
    /// <summary>
    /// Provides a resource to create a cam role_permission_boundary_attachment
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var rolePermissionBoundaryAttachment = new Tencentcloud.Cam.RolePermissionBoundaryAttachment("rolePermissionBoundaryAttachment", new Tencentcloud.Cam.RolePermissionBoundaryAttachmentArgs
    ///         {
    ///             PolicyId = 1,
    ///             RoleName = "test-cam-tag",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// cam role_permission_boundary_attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Cam/rolePermissionBoundaryAttachment:RolePermissionBoundaryAttachment role_permission_boundary_attachment role_permission_boundary_attachment_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Cam/rolePermissionBoundaryAttachment:RolePermissionBoundaryAttachment")]
    public partial class RolePermissionBoundaryAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// Role ID.
        /// </summary>
        [Output("policyId")]
        public Output<int> PolicyId { get; private set; } = null!;

        /// <summary>
        /// Role ID (at least one should be filled in with the role name).
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;

        /// <summary>
        /// Role name (at least one should be filled in with the role ID).
        /// </summary>
        [Output("roleName")]
        public Output<string?> RoleName { get; private set; } = null!;


        /// <summary>
        /// Create a RolePermissionBoundaryAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RolePermissionBoundaryAttachment(string name, RolePermissionBoundaryAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/rolePermissionBoundaryAttachment:RolePermissionBoundaryAttachment", name, args ?? new RolePermissionBoundaryAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RolePermissionBoundaryAttachment(string name, Input<string> id, RolePermissionBoundaryAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/rolePermissionBoundaryAttachment:RolePermissionBoundaryAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RolePermissionBoundaryAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RolePermissionBoundaryAttachment Get(string name, Input<string> id, RolePermissionBoundaryAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new RolePermissionBoundaryAttachment(name, id, state, options);
        }
    }

    public sealed class RolePermissionBoundaryAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Role ID.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<int> PolicyId { get; set; } = null!;

        /// <summary>
        /// Role ID (at least one should be filled in with the role name).
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// Role name (at least one should be filled in with the role ID).
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public RolePermissionBoundaryAttachmentArgs()
        {
        }
    }

    public sealed class RolePermissionBoundaryAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Role ID.
        /// </summary>
        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        /// <summary>
        /// Role ID (at least one should be filled in with the role name).
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// Role name (at least one should be filled in with the role ID).
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public RolePermissionBoundaryAttachmentState()
        {
        }
    }
}
