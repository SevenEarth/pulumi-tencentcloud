// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cam
{
    /// <summary>
    /// Provides a resource to create a CAM user policy attachment.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Tencentcloud = Pulumi.Tencentcloud;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var camUserBasic = config.Get("camUserBasic") ?? "keep-cam-user";
    ///     var policyBasic = new Tencentcloud.Cam.Policy("policyBasic", new()
    ///     {
    ///         Document = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["version"] = "2.0",
    ///             ["statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["action"] = new[]
    ///                     {
    ///                         "cos:*",
    ///                     },
    ///                     ["resource"] = new[]
    ///                     {
    ///                         "*",
    ///                     },
    ///                     ["effect"] = "allow",
    ///                 },
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["effect"] = "allow",
    ///                     ["action"] = new[]
    ///                     {
    ///                         "monitor:*",
    ///                         "cam:ListUsersForGroup",
    ///                         "cam:ListGroups",
    ///                         "cam:GetGroup",
    ///                     },
    ///                     ["resource"] = new[]
    ///                     {
    ///                         "*",
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///         Description = "tf_test",
    ///     });
    /// 
    ///     var users = Tencentcloud.Cam.GetUsers.Invoke(new()
    ///     {
    ///         Name = camUserBasic,
    ///     });
    /// 
    ///     var userPolicyAttachmentBasic = new Tencentcloud.Cam.UserPolicyAttachment("userPolicyAttachmentBasic", new()
    ///     {
    ///         UserName = users.Apply(getUsersResult =&gt; getUsersResult.UserLists[0]?.UserId),
    ///         PolicyId = policyBasic.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// CAM user policy attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Cam/userPolicyAttachment:UserPolicyAttachment foo cam-test#26800353
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Cam/userPolicyAttachment:UserPolicyAttachment")]
    public partial class UserPolicyAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Mode of Creation of the CAM user policy attachment. `1` means the CAM policy attachment is created by production, and the others indicate syntax strategy ways.
        /// </summary>
        [Output("createMode")]
        public Output<int> CreateMode { get; private set; } = null!;

        /// <summary>
        /// Create time of the CAM user policy attachment.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// ID of the policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Output("policyName")]
        public Output<string> PolicyName { get; private set; } = null!;

        /// <summary>
        /// Type of the policy strategy. `User` means customer strategy and `QCS` means preset strategy.
        /// </summary>
        [Output("policyType")]
        public Output<string> PolicyType { get; private set; } = null!;

        /// <summary>
        /// It has been deprecated from version 1.59.5. Use `user_name` instead. ID of the attached CAM user.
        /// </summary>
        [Output("userId")]
        public Output<string?> UserId { get; private set; } = null!;

        /// <summary>
        /// Name of the attached CAM user as uniq key.
        /// </summary>
        [Output("userName")]
        public Output<string?> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a UserPolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPolicyAttachment(string name, UserPolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/userPolicyAttachment:UserPolicyAttachment", name, args ?? new UserPolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPolicyAttachment(string name, Input<string> id, UserPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/userPolicyAttachment:UserPolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPolicyAttachment Get(string name, Input<string> id, UserPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new UserPolicyAttachment(name, id, state, options);
        }
    }

    public sealed class UserPolicyAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the policy.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        /// <summary>
        /// It has been deprecated from version 1.59.5. Use `user_name` instead. ID of the attached CAM user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Name of the attached CAM user as uniq key.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public UserPolicyAttachmentArgs()
        {
        }
        public static new UserPolicyAttachmentArgs Empty => new UserPolicyAttachmentArgs();
    }

    public sealed class UserPolicyAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Mode of Creation of the CAM user policy attachment. `1` means the CAM policy attachment is created by production, and the others indicate syntax strategy ways.
        /// </summary>
        [Input("createMode")]
        public Input<int>? CreateMode { get; set; }

        /// <summary>
        /// Create time of the CAM user policy attachment.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// ID of the policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        /// <summary>
        /// Type of the policy strategy. `User` means customer strategy and `QCS` means preset strategy.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        /// <summary>
        /// It has been deprecated from version 1.59.5. Use `user_name` instead. ID of the attached CAM user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Name of the attached CAM user as uniq key.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public UserPolicyAttachmentState()
        {
        }
        public static new UserPolicyAttachmentState Empty => new UserPolicyAttachmentState();
    }
}
