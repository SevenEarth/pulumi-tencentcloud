// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cam
{
    public static class GetUsers
    {
        /// <summary>
        /// Use this data source to query detailed information of CAM users
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         Name = "cam-user-test",
        ///     });
        /// 
        ///     var bar = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         Email = "hello@test.com",
        ///     });
        /// 
        ///     var far = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         PhoneNum = "12345678910",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("tencentcloud:Cam/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of CAM users
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         Name = "cam-user-test",
        ///     });
        /// 
        ///     var bar = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         Email = "hello@test.com",
        ///     });
        /// 
        ///     var far = Tencentcloud.Cam.GetUsers.Invoke(new()
        ///     {
        ///         PhoneNum = "12345678910",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetUsersResult> Invoke(GetUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsersResult>("tencentcloud:Cam/getUsers:getUsers", args ?? new GetUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Indicate whether the user can login in.
        /// </summary>
        [Input("consoleLogin")]
        public bool? ConsoleLogin { get; set; }

        /// <summary>
        /// Country code of the CAM user to be queried.
        /// </summary>
        [Input("countryCode")]
        public string? CountryCode { get; set; }

        /// <summary>
        /// Email of the CAM user to be queried.
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        /// <summary>
        /// Name of CAM user to be queried.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Phone num of the CAM user to be queried.
        /// </summary>
        [Input("phoneNum")]
        public string? PhoneNum { get; set; }

        /// <summary>
        /// Remark of the CAM user to be queried.
        /// </summary>
        [Input("remark")]
        public string? Remark { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Uid of the CAM user to be queried.
        /// </summary>
        [Input("uid")]
        public int? Uid { get; set; }

        /// <summary>
        /// Uin of the CAM user to be queried.
        /// </summary>
        [Input("uin")]
        public int? Uin { get; set; }

        public GetUsersArgs()
        {
        }
        public static new GetUsersArgs Empty => new GetUsersArgs();
    }

    public sealed class GetUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Indicate whether the user can login in.
        /// </summary>
        [Input("consoleLogin")]
        public Input<bool>? ConsoleLogin { get; set; }

        /// <summary>
        /// Country code of the CAM user to be queried.
        /// </summary>
        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// Email of the CAM user to be queried.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Name of CAM user to be queried.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Phone num of the CAM user to be queried.
        /// </summary>
        [Input("phoneNum")]
        public Input<string>? PhoneNum { get; set; }

        /// <summary>
        /// Remark of the CAM user to be queried.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Uid of the CAM user to be queried.
        /// </summary>
        [Input("uid")]
        public Input<int>? Uid { get; set; }

        /// <summary>
        /// Uin of the CAM user to be queried.
        /// </summary>
        [Input("uin")]
        public Input<int>? Uin { get; set; }

        public GetUsersInvokeArgs()
        {
        }
        public static new GetUsersInvokeArgs Empty => new GetUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        public readonly bool? ConsoleLogin;
        /// <summary>
        /// Country code of the CAM user.
        /// </summary>
        public readonly string? CountryCode;
        /// <summary>
        /// Email of the CAM user.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of CAM user.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Phone num of the CAM user.
        /// </summary>
        public readonly string? PhoneNum;
        /// <summary>
        /// Remark of the CAM user.
        /// </summary>
        public readonly string? Remark;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Uid of the CAM user.
        /// </summary>
        public readonly int? Uid;
        /// <summary>
        /// Uin of the CAM user.
        /// </summary>
        public readonly int? Uin;
        /// <summary>
        /// A list of CAM users. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersUserListResult> UserLists;

        [OutputConstructor]
        private GetUsersResult(
            bool? consoleLogin,

            string? countryCode,

            string? email,

            string id,

            string? name,

            string? phoneNum,

            string? remark,

            string? resultOutputFile,

            int? uid,

            int? uin,

            ImmutableArray<Outputs.GetUsersUserListResult> userLists)
        {
            ConsoleLogin = consoleLogin;
            CountryCode = countryCode;
            Email = email;
            Id = id;
            Name = name;
            PhoneNum = phoneNum;
            Remark = remark;
            ResultOutputFile = resultOutputFile;
            Uid = uid;
            Uin = uin;
            UserLists = userLists;
        }
    }
}
