// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    public static class GetProductNamespace
    {
        /// <summary>
        /// Use this data source to query product namespace in monitor)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var instances = Output.Create(Tencentcloud.Monitor.GetProductNamespace.InvokeAsync(new Tencentcloud.Monitor.GetProductNamespaceArgs
        ///         {
        ///             Name = "Redis",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProductNamespaceResult> InvokeAsync(GetProductNamespaceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProductNamespaceResult>("tencentcloud:Monitor/getProductNamespace:getProductNamespace", args ?? new GetProductNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query product namespace in monitor)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var instances = Output.Create(Tencentcloud.Monitor.GetProductNamespace.InvokeAsync(new Tencentcloud.Monitor.GetProductNamespaceArgs
        ///         {
        ///             Name = "Redis",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProductNamespaceResult> Invoke(GetProductNamespaceInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProductNamespaceResult>("tencentcloud:Monitor/getProductNamespace:getProductNamespace", args ?? new GetProductNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductNamespaceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for filter, eg:`Load Banlancer`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to store results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetProductNamespaceArgs()
        {
        }
    }

    public sealed class GetProductNamespaceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for filter, eg:`Load Banlancer`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to store results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetProductNamespaceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProductNamespaceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list product namespaces. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductNamespaceListResult> Lists;
        public readonly string? Name;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetProductNamespaceResult(
            string id,

            ImmutableArray<Outputs.GetProductNamespaceListResult> lists,

            string? name,

            string? resultOutputFile)
        {
            Id = id;
            Lists = lists;
            Name = name;
            ResultOutputFile = resultOutputFile;
        }
    }
}
