// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetAlarmPolicyPolicyConditionRuleResult
    {
        /// <summary>
        /// Number of periods. 1: continue for one period; 2: continue for two periods; and so on. The valid values can be queried via DescribeAlarmMetrics.Note: this field may return null, indicating that no valid value is obtained.
        /// </summary>
        public readonly int ContinuePeriod;
        /// <summary>
        /// Metric display name, which is used in the output parameterNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Filter condition for one single trigger ruleNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleFilterResult> Filters;
        /// <summary>
        /// The configuration of alarm level thresholdNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleHierarchicalValueResult> HierarchicalValues;
        /// <summary>
        /// Whether it is an advanced metric. 0: No; 1: Yes.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int IsAdvanced;
        /// <summary>
        /// Whether the advanced metric feature is enabled. 0: No; 1: Yes.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int IsOpen;
        /// <summary>
        /// Whether the alarm frequency increases exponentially. Valid values: 0 (no), 1 (yes)Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int IsPowerNotice;
        /// <summary>
        /// Metric name or event name. The supported metrics can be queried via DescribeAlarmMetrics and the supported events via DescribeAlarmEventsNote: this field may return null, indicating that no valid value is obtained.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// Alarm interval in seconds. Valid values: 0 (do not repeat), 300 (alarm once every 5 minutes), 600 (alarm once every 10 minutes), 900 (alarm once every 15 minutes), 1800 (alarm once every 30 minutes), 3600 (alarm once every hour), 7200 (alarm once every 2 hours), 10800 (alarm once every 3 hours), 21600 (alarm once every 6 hours), 43200 (alarm once every 12 hours), 86400 (alarm once every day)Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int NoticeFrequency;
        /// <summary>
        /// Statistical period in seconds. The valid values can be queried via DescribeAlarmMetrics.Note: this field may return null, indicating that no valid value is obtained.Operator	String	No	Operatorintelligent = intelligent detection without thresholdeq = equal toge = greater than or equal togt = greater thanle = less than or equal tolt = less thanne = not equal today_increase = day-on-day increaseday_decrease = day-on-day decreaseday_wave = day-on-day fluctuationweek_increase = week-on-week increaseweek_decrease = week-on-week decreaseweek_wave = week-on-week fluctuationcycle_increase = cyclical increasecycle_decrease = cyclical decreasecycle_wave = cyclical fluctuationre = regex matchThe valid values can be queried via DescribeAlarmMetrics.Note: this field may return null, indicating that no valid value is obtained.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Statistical period in seconds. The valid values can be queried via DescribeAlarmMetricsNote: this field may return null, indicating that no valid value is obtained.
        /// </summary>
        public readonly int Period;
        /// <summary>
        /// Integration center product ID.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ProductId;
        /// <summary>
        /// Trigger condition type. Valid values: STATIC (static threshold), DYNAMIC (dynamic)Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string RuleType;
        /// <summary>
        /// Unit, which is used in the output parameterNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string Unit;
        /// <summary>
        /// Tag value.
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Maximum valueNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly double ValueMax;
        /// <summary>
        /// Minimum valueNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly double ValueMin;

        [OutputConstructor]
        private GetAlarmPolicyPolicyConditionRuleResult(
            int continuePeriod,

            string description,

            ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleFilterResult> filters,

            ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleHierarchicalValueResult> hierarchicalValues,

            int isAdvanced,

            int isOpen,

            int isPowerNotice,

            string metricName,

            int noticeFrequency,

            string @operator,

            int period,

            string productId,

            string ruleType,

            string unit,

            string value,

            double valueMax,

            double valueMin)
        {
            ContinuePeriod = continuePeriod;
            Description = description;
            Filters = filters;
            HierarchicalValues = hierarchicalValues;
            IsAdvanced = isAdvanced;
            IsOpen = isOpen;
            IsPowerNotice = isPowerNotice;
            MetricName = metricName;
            NoticeFrequency = noticeFrequency;
            Operator = @operator;
            Period = period;
            ProductId = productId;
            RuleType = ruleType;
            Unit = unit;
            Value = value;
            ValueMax = valueMax;
            ValueMin = valueMin;
        }
    }
}
