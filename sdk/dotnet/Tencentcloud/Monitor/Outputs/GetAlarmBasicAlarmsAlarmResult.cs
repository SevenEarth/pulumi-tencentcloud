// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetAlarmBasicAlarmsAlarmResult
    {
        /// <summary>
        /// Filter based on alarm status.
        /// </summary>
        public readonly string AlarmStatus;
        /// <summary>
        /// Alarm type, 0 represents indicator alarm, 2 represents product event alarm, and 3 represents platform event alarm.
        /// </summary>
        public readonly int AlarmType;
        /// <summary>
        /// Alarm content.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Alarm object dimension information.
        /// </summary>
        public readonly string Dimensions;
        /// <summary>
        /// Duration in seconds.
        /// </summary>
        public readonly int Duration;
        /// <summary>
        /// Time of occurrence.
        /// </summary>
        public readonly string FirstOccurTime;
        /// <summary>
        /// Policy Group ID.
        /// </summary>
        public readonly int GroupId;
        /// <summary>
        /// Policy Group Name.
        /// </summary>
        public readonly string GroupName;
        /// <summary>
        /// The ID of this alarm.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// Instance Group Information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmBasicAlarmsAlarmInstanceGroupResult> InstanceGroups;
        /// <summary>
        /// End time.
        /// </summary>
        public readonly string LastOccurTime;
        /// <summary>
        /// Indicator ID.
        /// </summary>
        public readonly int MetricId;
        /// <summary>
        /// Indicator Name.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// Notification method.
        /// </summary>
        public readonly ImmutableArray<string> NotifyWays;
        /// <summary>
        /// Alarm object ID.
        /// </summary>
        public readonly string ObjId;
        /// <summary>
        /// Alarm Object.
        /// </summary>
        public readonly string ObjName;
        /// <summary>
        /// Project ID.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Entry name.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Alarm status ID, 0 indicates not recovered; 1 indicates that it has been restored; 2,3,5 indicates insufficient data; 4 indicates it has expired.
        /// </summary>
        public readonly int Status;
        /// <summary>
        /// Policy Type.
        /// </summary>
        public readonly string ViewName;
        /// <summary>
        /// VPC, only CVM has.
        /// </summary>
        public readonly string Vpc;

        [OutputConstructor]
        private GetAlarmBasicAlarmsAlarmResult(
            string alarmStatus,

            int alarmType,

            string content,

            string dimensions,

            int duration,

            string firstOccurTime,

            int groupId,

            string groupName,

            int id,

            ImmutableArray<Outputs.GetAlarmBasicAlarmsAlarmInstanceGroupResult> instanceGroups,

            string lastOccurTime,

            int metricId,

            string metricName,

            ImmutableArray<string> notifyWays,

            string objId,

            string objName,

            int projectId,

            string projectName,

            string region,

            int status,

            string viewName,

            string vpc)
        {
            AlarmStatus = alarmStatus;
            AlarmType = alarmType;
            Content = content;
            Dimensions = dimensions;
            Duration = duration;
            FirstOccurTime = firstOccurTime;
            GroupId = groupId;
            GroupName = groupName;
            Id = id;
            InstanceGroups = instanceGroups;
            LastOccurTime = lastOccurTime;
            MetricId = metricId;
            MetricName = metricName;
            NotifyWays = notifyWays;
            ObjId = objId;
            ObjName = objName;
            ProjectId = projectId;
            ProjectName = projectName;
            Region = region;
            Status = status;
            ViewName = viewName;
            Vpc = vpc;
        }
    }
}
