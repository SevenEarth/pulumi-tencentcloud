// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetAlarmMetricMetricResult
    {
        /// <summary>
        /// Indicator display name.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Dimension List.
        /// </summary>
        public readonly ImmutableArray<string> Dimensions;
        /// <summary>
        /// Is it a high-level indicator. 1 Yes 0 No.
        /// </summary>
        public readonly int IsAdvanced;
        /// <summary>
        /// Is the advanced indicator activated. 1 Yes 0 No.
        /// </summary>
        public readonly int IsOpen;
        /// <summary>
        /// Maximum value.
        /// </summary>
        public readonly double Max;
        /// <summary>
        /// Indicator configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmMetricMetricMetricConfigResult> MetricConfigs;
        /// <summary>
        /// Indicator Name.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// Minimum value.
        /// </summary>
        public readonly double Min;
        /// <summary>
        /// Alarm policy type, obtained from DescribeAllNamespaces, such as cvm_device.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Matching operator.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmMetricMetricOperatorResult> Operators;
        /// <summary>
        /// Indicator trigger.
        /// </summary>
        public readonly ImmutableArray<int> Periods;
        /// <summary>
        /// Integration Center Product ID.
        /// </summary>
        public readonly int ProductId;
        /// <summary>
        /// Unit.
        /// </summary>
        public readonly string Unit;

        [OutputConstructor]
        private GetAlarmMetricMetricResult(
            string description,

            ImmutableArray<string> dimensions,

            int isAdvanced,

            int isOpen,

            double max,

            ImmutableArray<Outputs.GetAlarmMetricMetricMetricConfigResult> metricConfigs,

            string metricName,

            double min,

            string @namespace,

            ImmutableArray<Outputs.GetAlarmMetricMetricOperatorResult> operators,

            ImmutableArray<int> periods,

            int productId,

            string unit)
        {
            Description = description;
            Dimensions = dimensions;
            IsAdvanced = isAdvanced;
            IsOpen = isOpen;
            Max = max;
            MetricConfigs = metricConfigs;
            MetricName = metricName;
            Min = min;
            Namespace = @namespace;
            Operators = operators;
            Periods = periods;
            ProductId = productId;
            Unit = unit;
        }
    }
}
