// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetAlarmHistoryHistoryResult
    {
        /// <summary>
        /// Alarm record ID.
        /// </summary>
        public readonly string AlarmId;
        /// <summary>
        /// Alarm level.Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string AlarmLevel;
        /// <summary>
        /// Filter by alarm object. Fuzzy search with string is supported.
        /// </summary>
        public readonly string AlarmObject;
        /// <summary>
        /// Filter by alarm status. Valid values: ALARM (not resolved), OK (resolved), NO_CONF (expired), NO_DATA (insufficient data). If this parameter is left empty, all will be queried by default.
        /// </summary>
        public readonly string AlarmStatus;
        /// <summary>
        /// Alarm type.
        /// </summary>
        public readonly string AlarmType;
        /// <summary>
        /// Fuzzy search by alarm content.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Dimension information of an instance that triggered alarms.Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string Dimensions;
        /// <summary>
        /// Event ID.
        /// </summary>
        public readonly int EventId;
        /// <summary>
        /// Timestamp of the first occurrence.
        /// </summary>
        public readonly int FirstOccurTime;
        /// <summary>
        /// Instance group of alarm object.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmHistoryHistoryInstanceGroupResult> InstanceGroups;
        /// <summary>
        /// Timestamp of the last occurrence.
        /// </summary>
        public readonly int LastOccurTime;
        /// <summary>
        /// Metric informationNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmHistoryHistoryMetricsInfoResult> MetricsInfos;
        /// <summary>
        /// Monitor type.
        /// </summary>
        public readonly string MonitorType;
        /// <summary>
        /// Policy type.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Alarm channel list. Valid values: SMS (SMS), EMAIL (email), CALL (phone), WECHAT (WeChat).
        /// </summary>
        public readonly ImmutableArray<string> NoticeWays;
        /// <summary>
        /// Alarm policy ID, which can be used when you call APIs (BindingPolicyObject, UnBindingAllPolicyObject, UnBindingPolicyObject) to bind/unbind instances or instance groups to/from an alarm policy.
        /// </summary>
        public readonly string OriginId;
        /// <summary>
        /// Whether the policy exists. Valid values: 0 (no), 1 (yes).
        /// </summary>
        public readonly int PolicyExists;
        /// <summary>
        /// Alarm policy ID.
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// Fuzzy search by policy name.
        /// </summary>
        public readonly string PolicyName;
        /// <summary>
        /// Project ID.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Project name.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Search by recipient group.
        /// </summary>
        public readonly ImmutableArray<int> ReceiverGroups;
        /// <summary>
        /// Search by recipient.
        /// </summary>
        public readonly ImmutableArray<int> ReceiverUids;
        /// <summary>
        /// Region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// VPC of alarm object for basic product alarm.
        /// </summary>
        public readonly string Vpc;

        [OutputConstructor]
        private GetAlarmHistoryHistoryResult(
            string alarmId,

            string alarmLevel,

            string alarmObject,

            string alarmStatus,

            string alarmType,

            string content,

            string dimensions,

            int eventId,

            int firstOccurTime,

            ImmutableArray<Outputs.GetAlarmHistoryHistoryInstanceGroupResult> instanceGroups,

            int lastOccurTime,

            ImmutableArray<Outputs.GetAlarmHistoryHistoryMetricsInfoResult> metricsInfos,

            string monitorType,

            string @namespace,

            ImmutableArray<string> noticeWays,

            string originId,

            int policyExists,

            string policyId,

            string policyName,

            int projectId,

            string projectName,

            ImmutableArray<int> receiverGroups,

            ImmutableArray<int> receiverUids,

            string region,

            string vpc)
        {
            AlarmId = alarmId;
            AlarmLevel = alarmLevel;
            AlarmObject = alarmObject;
            AlarmStatus = alarmStatus;
            AlarmType = alarmType;
            Content = content;
            Dimensions = dimensions;
            EventId = eventId;
            FirstOccurTime = firstOccurTime;
            InstanceGroups = instanceGroups;
            LastOccurTime = lastOccurTime;
            MetricsInfos = metricsInfos;
            MonitorType = monitorType;
            Namespace = @namespace;
            NoticeWays = noticeWays;
            OriginId = originId;
            PolicyExists = policyExists;
            PolicyId = policyId;
            PolicyName = policyName;
            ProjectId = projectId;
            ProjectName = projectName;
            ReceiverGroups = receiverGroups;
            ReceiverUids = receiverUids;
            Region = region;
            Vpc = vpc;
        }
    }
}
