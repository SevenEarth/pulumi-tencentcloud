// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetPolicyConditionsListMetricResult
    {
        /// <summary>
        /// Calculate type of this metric.
        /// </summary>
        public readonly ImmutableArray<int> CalcTypeKeys;
        /// <summary>
        /// Whether `calc_type` required in the configuration.
        /// </summary>
        public readonly bool CalcTypeNeed;
        /// <summary>
        /// The default calculate value of this metric.
        /// </summary>
        public readonly string CalcValueDefault;
        /// <summary>
        /// The fixed calculate value of this metric.
        /// </summary>
        public readonly string CalcValueFixed;
        /// <summary>
        /// The max calculate value of this metric.
        /// </summary>
        public readonly string CalcValueMax;
        /// <summary>
        /// The min calculate value of this metric.
        /// </summary>
        public readonly string CalcValueMin;
        /// <summary>
        /// Whether `calc_value` required in the configuration.
        /// </summary>
        public readonly bool CalcValueNeed;
        /// <summary>
        /// The default continue time(seconds) config for this metric.
        /// </summary>
        public readonly int ContinueTimeDefault;
        /// <summary>
        /// The continue time(seconds) keys for this metric.
        /// </summary>
        public readonly ImmutableArray<int> ContinueTimeKeys;
        /// <summary>
        /// Whether `continue_time` required in the configuration.
        /// </summary>
        public readonly bool ContinueTimeNeed;
        /// <summary>
        /// The ID of this metric.
        /// </summary>
        public readonly int MetricId;
        /// <summary>
        /// The name of this metric.
        /// </summary>
        public readonly string MetricShowName;
        /// <summary>
        /// The unit of this metric.
        /// </summary>
        public readonly string MetricUnit;
        /// <summary>
        /// The default data time(seconds) config for this metric.
        /// </summary>
        public readonly int PeriodDefault;
        /// <summary>
        /// The data time(seconds) keys for this metric.
        /// </summary>
        public readonly ImmutableArray<int> PeriodKeys;
        /// <summary>
        /// Whether `period` required in the configuration.
        /// </summary>
        public readonly bool PeriodNeed;
        /// <summary>
        /// The default period number config for this metric.
        /// </summary>
        public readonly int PeriodNumDefault;
        /// <summary>
        /// The period number keys for this metric.
        /// </summary>
        public readonly ImmutableArray<int> PeriodNumKeys;
        /// <summary>
        /// Whether `period_num` required in the configuration.
        /// </summary>
        public readonly bool PeriodNumNeed;
        /// <summary>
        /// Data aggregation mode, cycle of 10 seconds.
        /// </summary>
        public readonly string StatTypeP10;
        /// <summary>
        /// Data aggregation mode, cycle of 1800 seconds.
        /// </summary>
        public readonly string StatTypeP1800;
        /// <summary>
        /// Data aggregation mode, cycle of 300 seconds.
        /// </summary>
        public readonly string StatTypeP300;
        /// <summary>
        /// Data aggregation mode, cycle of 3600 seconds.
        /// </summary>
        public readonly string StatTypeP3600;
        /// <summary>
        /// Data aggregation mode, cycle of 5 seconds.
        /// </summary>
        public readonly string StatTypeP5;
        /// <summary>
        /// Data aggregation mode, cycle of 60 seconds.
        /// </summary>
        public readonly string StatTypeP60;
        /// <summary>
        /// Data aggregation mode, cycle of 600 seconds.
        /// </summary>
        public readonly string StatTypeP600;
        /// <summary>
        /// Data aggregation mode, cycle of 86400 seconds.
        /// </summary>
        public readonly string StatTypeP86400;

        [OutputConstructor]
        private GetPolicyConditionsListMetricResult(
            ImmutableArray<int> calcTypeKeys,

            bool calcTypeNeed,

            string calcValueDefault,

            string calcValueFixed,

            string calcValueMax,

            string calcValueMin,

            bool calcValueNeed,

            int continueTimeDefault,

            ImmutableArray<int> continueTimeKeys,

            bool continueTimeNeed,

            int metricId,

            string metricShowName,

            string metricUnit,

            int periodDefault,

            ImmutableArray<int> periodKeys,

            bool periodNeed,

            int periodNumDefault,

            ImmutableArray<int> periodNumKeys,

            bool periodNumNeed,

            string statTypeP10,

            string statTypeP1800,

            string statTypeP300,

            string statTypeP3600,

            string statTypeP5,

            string statTypeP60,

            string statTypeP600,

            string statTypeP86400)
        {
            CalcTypeKeys = calcTypeKeys;
            CalcTypeNeed = calcTypeNeed;
            CalcValueDefault = calcValueDefault;
            CalcValueFixed = calcValueFixed;
            CalcValueMax = calcValueMax;
            CalcValueMin = calcValueMin;
            CalcValueNeed = calcValueNeed;
            ContinueTimeDefault = continueTimeDefault;
            ContinueTimeKeys = continueTimeKeys;
            ContinueTimeNeed = continueTimeNeed;
            MetricId = metricId;
            MetricShowName = metricShowName;
            MetricUnit = metricUnit;
            PeriodDefault = periodDefault;
            PeriodKeys = periodKeys;
            PeriodNeed = periodNeed;
            PeriodNumDefault = periodNumDefault;
            PeriodNumKeys = periodNumKeys;
            PeriodNumNeed = periodNumNeed;
            StatTypeP10 = statTypeP10;
            StatTypeP1800 = statTypeP1800;
            StatTypeP300 = statTypeP300;
            StatTypeP3600 = statTypeP3600;
            StatTypeP5 = statTypeP5;
            StatTypeP60 = statTypeP60;
            StatTypeP600 = statTypeP600;
            StatTypeP86400 = statTypeP86400;
        }
    }
}
