// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    public static class GetAlarmMetric
    {
        /// <summary>
        /// Use this data source to query detailed information of monitor alarm_metric
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var alarmMetric = Output.Create(Tencentcloud.Monitor.GetAlarmMetric.InvokeAsync(new Tencentcloud.Monitor.GetAlarmMetricArgs
        ///         {
        ///             Module = "monitor",
        ///             MonitorType = "Monitoring",
        ///             Namespace = "cvm_device",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAlarmMetricResult> InvokeAsync(GetAlarmMetricArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAlarmMetricResult>("tencentcloud:Monitor/getAlarmMetric:getAlarmMetric", args ?? new GetAlarmMetricArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of monitor alarm_metric
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var alarmMetric = Output.Create(Tencentcloud.Monitor.GetAlarmMetric.InvokeAsync(new Tencentcloud.Monitor.GetAlarmMetricArgs
        ///         {
        ///             Module = "monitor",
        ///             MonitorType = "Monitoring",
        ///             Namespace = "cvm_device",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAlarmMetricResult> Invoke(GetAlarmMetricInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAlarmMetricResult>("tencentcloud:Monitor/getAlarmMetric:getAlarmMetric", args ?? new GetAlarmMetricInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmMetricArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fixed value, as `monitor`.
        /// </summary>
        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        /// <summary>
        /// Monitoring Type Filter MT_QCE=Cloud Product Monitoring.
        /// </summary>
        [Input("monitorType", required: true)]
        public string MonitorType { get; set; } = null!;

        /// <summary>
        /// Alarm policy type, obtained from DescribeAllNamespaces, such as cvm_device.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetAlarmMetricArgs()
        {
        }
    }

    public sealed class GetAlarmMetricInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fixed value, as `monitor`.
        /// </summary>
        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        /// <summary>
        /// Monitoring Type Filter MT_QCE=Cloud Product Monitoring.
        /// </summary>
        [Input("monitorType", required: true)]
        public Input<string> MonitorType { get; set; } = null!;

        /// <summary>
        /// Alarm policy type, obtained from DescribeAllNamespaces, such as cvm_device.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetAlarmMetricInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAlarmMetricResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alarm indicator list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmMetricMetricResult> Metrics;
        public readonly string Module;
        public readonly string MonitorType;
        /// <summary>
        /// Alarm strategy type.
        /// </summary>
        public readonly string Namespace;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetAlarmMetricResult(
            string id,

            ImmutableArray<Outputs.GetAlarmMetricMetricResult> metrics,

            string module,

            string monitorType,

            string @namespace,

            string? resultOutputFile)
        {
            Id = id;
            Metrics = metrics;
            Module = module;
            MonitorType = monitorType;
            Namespace = @namespace;
            ResultOutputFile = resultOutputFile;
        }
    }
}
