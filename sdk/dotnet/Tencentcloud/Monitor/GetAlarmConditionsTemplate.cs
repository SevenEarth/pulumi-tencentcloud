// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    public static class GetAlarmConditionsTemplate
    {
        /// <summary>
        /// Use this data source to query detailed information of monitor alarm_conditions_template
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var alarmConditionsTemplate = Tencentcloud.Monitor.GetAlarmConditionsTemplate.Invoke(new()
        ///     {
        ///         GroupId = "7803070",
        ///         GroupName = "keep-template",
        ///         Module = "monitor",
        ///         PolicyCountOrder = "asc=ascending",
        ///         UpdateTimeOrder = "desc=descending",
        ///         ViewName = "cvm_device",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetAlarmConditionsTemplateResult> InvokeAsync(GetAlarmConditionsTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmConditionsTemplateResult>("tencentcloud:Monitor/getAlarmConditionsTemplate:getAlarmConditionsTemplate", args ?? new GetAlarmConditionsTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of monitor alarm_conditions_template
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var alarmConditionsTemplate = Tencentcloud.Monitor.GetAlarmConditionsTemplate.Invoke(new()
        ///     {
        ///         GroupId = "7803070",
        ///         GroupName = "keep-template",
        ///         Module = "monitor",
        ///         PolicyCountOrder = "asc=ascending",
        ///         UpdateTimeOrder = "desc=descending",
        ///         ViewName = "cvm_device",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetAlarmConditionsTemplateResult> Invoke(GetAlarmConditionsTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmConditionsTemplateResult>("tencentcloud:Monitor/getAlarmConditionsTemplate:getAlarmConditionsTemplate", args ?? new GetAlarmConditionsTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmConditionsTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter queries based on trigger condition template ID.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        /// <summary>
        /// Filter queries based on trigger condition template names.
        /// </summary>
        [Input("groupName")]
        public string? GroupName { get; set; }

        /// <summary>
        /// Fixed value, as&amp;amp;amp;#39; monitor &amp;amp;amp;#39;.
        /// </summary>
        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        /// <summary>
        /// Specify the sorting method based on the number of binding policies, asc=ascending, desc=descending.
        /// </summary>
        [Input("policyCountOrder")]
        public string? PolicyCountOrder { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Specify the sorting method by update time, asc=ascending, desc=descending.
        /// </summary>
        [Input("updateTimeOrder")]
        public string? UpdateTimeOrder { get; set; }

        /// <summary>
        /// View name, composed of DescribeAllNamespacesObtain. For cloud product monitoring, retrieve the QceNamespacesNew. N.ID parameter from the interface, such as cvm_ Device.
        /// </summary>
        [Input("viewName")]
        public string? ViewName { get; set; }

        public GetAlarmConditionsTemplateArgs()
        {
        }
        public static new GetAlarmConditionsTemplateArgs Empty => new GetAlarmConditionsTemplateArgs();
    }

    public sealed class GetAlarmConditionsTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter queries based on trigger condition template ID.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Filter queries based on trigger condition template names.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// Fixed value, as&amp;amp;amp;#39; monitor &amp;amp;amp;#39;.
        /// </summary>
        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        /// <summary>
        /// Specify the sorting method based on the number of binding policies, asc=ascending, desc=descending.
        /// </summary>
        [Input("policyCountOrder")]
        public Input<string>? PolicyCountOrder { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Specify the sorting method by update time, asc=ascending, desc=descending.
        /// </summary>
        [Input("updateTimeOrder")]
        public Input<string>? UpdateTimeOrder { get; set; }

        /// <summary>
        /// View name, composed of DescribeAllNamespacesObtain. For cloud product monitoring, retrieve the QceNamespacesNew. N.ID parameter from the interface, such as cvm_ Device.
        /// </summary>
        [Input("viewName")]
        public Input<string>? ViewName { get; set; }

        public GetAlarmConditionsTemplateInvokeArgs()
        {
        }
        public static new GetAlarmConditionsTemplateInvokeArgs Empty => new GetAlarmConditionsTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmConditionsTemplateResult
    {
        /// <summary>
        /// Alarm Policy Group ID.
        /// </summary>
        public readonly string? GroupId;
        /// <summary>
        /// Alarm Policy Group Name.
        /// </summary>
        public readonly string? GroupName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Module;
        public readonly string? PolicyCountOrder;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Template List.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmConditionsTemplateTemplateGroupListResult> TemplateGroupLists;
        public readonly string? UpdateTimeOrder;
        /// <summary>
        /// View.
        /// </summary>
        public readonly string? ViewName;

        [OutputConstructor]
        private GetAlarmConditionsTemplateResult(
            string? groupId,

            string? groupName,

            string id,

            string module,

            string? policyCountOrder,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetAlarmConditionsTemplateTemplateGroupListResult> templateGroupLists,

            string? updateTimeOrder,

            string? viewName)
        {
            GroupId = groupId;
            GroupName = groupName;
            Id = id;
            Module = module;
            PolicyCountOrder = policyCountOrder;
            ResultOutputFile = resultOutputFile;
            TemplateGroupLists = templateGroupLists;
            UpdateTimeOrder = updateTimeOrder;
            ViewName = viewName;
        }
    }
}
