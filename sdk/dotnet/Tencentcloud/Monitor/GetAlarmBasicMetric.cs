// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    public static class GetAlarmBasicMetric
    {
        /// <summary>
        /// Use this data source to query detailed information of monitor basic_metric
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var alarmMetric = Tencentcloud.Monitor.GetAlarmBasicMetric.Invoke(new()
        ///     {
        ///         Dimensions = new[]
        ///         {
        ///             "uuid",
        ///         },
        ///         MetricName = "WanOuttraffic",
        ///         Namespace = "qce/cvm",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetAlarmBasicMetricResult> InvokeAsync(GetAlarmBasicMetricArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmBasicMetricResult>("tencentcloud:Monitor/getAlarmBasicMetric:getAlarmBasicMetric", args ?? new GetAlarmBasicMetricArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of monitor basic_metric
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var alarmMetric = Tencentcloud.Monitor.GetAlarmBasicMetric.Invoke(new()
        ///     {
        ///         Dimensions = new[]
        ///         {
        ///             "uuid",
        ///         },
        ///         MetricName = "WanOuttraffic",
        ///         Namespace = "qce/cvm",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetAlarmBasicMetricResult> Invoke(GetAlarmBasicMetricInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmBasicMetricResult>("tencentcloud:Monitor/getAlarmBasicMetric:getAlarmBasicMetric", args ?? new GetAlarmBasicMetricInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmBasicMetricArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        private List<string>? _dimensions;

        /// <summary>
        /// Optional parameters, filtered by dimension.
        /// </summary>
        public List<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new List<string>());
            set => _dimensions = value;
        }

        /// <summary>
        /// Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
        /// </summary>
        [Input("metricName")]
        public string? MetricName { get; set; }

        /// <summary>
        /// The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843 ).
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetAlarmBasicMetricArgs()
        {
        }
        public static new GetAlarmBasicMetricArgs Empty => new GetAlarmBasicMetricArgs();
    }

    public sealed class GetAlarmBasicMetricInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        private InputList<string>? _dimensions;

        /// <summary>
        /// Optional parameters, filtered by dimension.
        /// </summary>
        public InputList<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<string>());
            set => _dimensions = value;
        }

        /// <summary>
        /// Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
        /// </summary>
        [Input("metricName")]
        public Input<string>? MetricName { get; set; }

        /// <summary>
        /// The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843 ).
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetAlarmBasicMetricInvokeArgs()
        {
        }
        public static new GetAlarmBasicMetricInvokeArgs Empty => new GetAlarmBasicMetricInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmBasicMetricResult
    {
        /// <summary>
        /// Dimension name array.
        /// </summary>
        public readonly ImmutableArray<string> Dimensions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicator Name.
        /// </summary>
        public readonly string? MetricName;
        /// <summary>
        /// List of indicator descriptions obtained from query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmBasicMetricMetricSetResult> MetricSets;
        /// <summary>
        /// Namespaces, each cloud product will have a namespace.
        /// </summary>
        public readonly string Namespace;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetAlarmBasicMetricResult(
            ImmutableArray<string> dimensions,

            string id,

            string? metricName,

            ImmutableArray<Outputs.GetAlarmBasicMetricMetricSetResult> metricSets,

            string @namespace,

            string? resultOutputFile)
        {
            Dimensions = dimensions;
            Id = id;
            MetricName = metricName;
            MetricSets = metricSets;
            Namespace = @namespace;
            ResultOutputFile = resultOutputFile;
        }
    }
}
