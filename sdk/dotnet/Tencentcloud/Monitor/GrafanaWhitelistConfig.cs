// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    /// <summary>
    /// Provides a resource to create a monitor grafana_whitelist_config
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var grafanaWhitelistConfig = new Tencentcloud.Monitor.GrafanaWhitelistConfig("grafanaWhitelistConfig", new Tencentcloud.Monitor.GrafanaWhitelistConfigArgs
    ///         {
    ///             InstanceId = "grafana-dp2hnnfa",
    ///             Whitelists = 
    ///             {
    ///                 "10.1.1.1",
    ///                 "10.1.1.2",
    ///                 "10.1.1.3",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// monitor grafana_whitelist_config can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig grafana_whitelist_config instance_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig")]
    public partial class GrafanaWhitelistConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// Grafana instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The addresses in the whitelist.
        /// </summary>
        [Output("whitelists")]
        public Output<ImmutableArray<string>> Whitelists { get; private set; } = null!;


        /// <summary>
        /// Create a GrafanaWhitelistConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GrafanaWhitelistConfig(string name, GrafanaWhitelistConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig", name, args ?? new GrafanaWhitelistConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GrafanaWhitelistConfig(string name, Input<string> id, GrafanaWhitelistConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GrafanaWhitelistConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GrafanaWhitelistConfig Get(string name, Input<string> id, GrafanaWhitelistConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new GrafanaWhitelistConfig(name, id, state, options);
        }
    }

    public sealed class GrafanaWhitelistConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Grafana instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("whitelists")]
        private InputList<string>? _whitelists;

        /// <summary>
        /// The addresses in the whitelist.
        /// </summary>
        public InputList<string> Whitelists
        {
            get => _whitelists ?? (_whitelists = new InputList<string>());
            set => _whitelists = value;
        }

        public GrafanaWhitelistConfigArgs()
        {
        }
    }

    public sealed class GrafanaWhitelistConfigState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Grafana instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("whitelists")]
        private InputList<string>? _whitelists;

        /// <summary>
        /// The addresses in the whitelist.
        /// </summary>
        public InputList<string> Whitelists
        {
            get => _whitelists ?? (_whitelists = new InputList<string>());
            set => _whitelists = value;
        }

        public GrafanaWhitelistConfigState()
        {
        }
    }
}
