// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Clickhouse
{
    public static class GetSpec
    {
        /// <summary>
        /// Use this data source to query detailed information of clickhouse spec
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var spec = Output.Create(Tencentcloud.Clickhouse.GetSpec.InvokeAsync(new Tencentcloud.Clickhouse.GetSpecArgs
        ///         {
        ///             IsElastic = false,
        ///             PayMode = "PREPAID",
        ///             Zone = "ap-guangzhou-7",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSpecResult> InvokeAsync(GetSpecArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSpecResult>("tencentcloud:Clickhouse/getSpec:getSpec", args ?? new GetSpecArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of clickhouse spec
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var spec = Output.Create(Tencentcloud.Clickhouse.GetSpec.InvokeAsync(new Tencentcloud.Clickhouse.GetSpecArgs
        ///         {
        ///             IsElastic = false,
        ///             PayMode = "PREPAID",
        ///             Zone = "ap-guangzhou-7",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSpecResult> Invoke(GetSpecInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSpecResult>("tencentcloud:Clickhouse/getSpec:getSpec", args ?? new GetSpecInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpecArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Is it elastic.
        /// </summary>
        [Input("isElastic")]
        public bool? IsElastic { get; set; }

        /// <summary>
        /// Billing type, PREPAID means annual and monthly subscription, POSTPAID_BY_HOUR means pay-as-you-go billing.
        /// </summary>
        [Input("payMode")]
        public string? PayMode { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Regional information.
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetSpecArgs()
        {
        }
    }

    public sealed class GetSpecInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Is it elastic.
        /// </summary>
        [Input("isElastic")]
        public Input<bool>? IsElastic { get; set; }

        /// <summary>
        /// Billing type, PREPAID means annual and monthly subscription, POSTPAID_BY_HOUR means pay-as-you-go billing.
        /// </summary>
        [Input("payMode")]
        public Input<string>? PayMode { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Regional information.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetSpecInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSpecResult
    {
        /// <summary>
        /// Cloud disk list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpecAttachCbsSpecResult> AttachCbsSpecs;
        /// <summary>
        /// Zookeeper node specification description.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpecCommonSpecResult> CommonSpecs;
        /// <summary>
        /// Data node specification description.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpecDataSpecResult> DataSpecs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsElastic;
        public readonly string? PayMode;
        public readonly string? ResultOutputFile;
        public readonly string Zone;

        [OutputConstructor]
        private GetSpecResult(
            ImmutableArray<Outputs.GetSpecAttachCbsSpecResult> attachCbsSpecs,

            ImmutableArray<Outputs.GetSpecCommonSpecResult> commonSpecs,

            ImmutableArray<Outputs.GetSpecDataSpecResult> dataSpecs,

            string id,

            bool? isElastic,

            string? payMode,

            string? resultOutputFile,

            string zone)
        {
            AttachCbsSpecs = attachCbsSpecs;
            CommonSpecs = commonSpecs;
            DataSpecs = dataSpecs;
            Id = id;
            IsElastic = isElastic;
            PayMode = payMode;
            ResultOutputFile = resultOutputFile;
            Zone = zone;
        }
    }
}
