// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Clickhouse
{
    public static class GetBackupTables
    {
        /// <summary>
        /// Use this data source to query detailed information of clickhouse backup tables
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var backupTables = Output.Create(Tencentcloud.Clickhouse.GetBackupTables.InvokeAsync(new Tencentcloud.Clickhouse.GetBackupTablesArgs
        ///         {
        ///             InstanceId = "cdwch-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBackupTablesResult> InvokeAsync(GetBackupTablesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBackupTablesResult>("tencentcloud:Clickhouse/getBackupTables:getBackupTables", args ?? new GetBackupTablesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of clickhouse backup tables
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var backupTables = Output.Create(Tencentcloud.Clickhouse.GetBackupTables.InvokeAsync(new Tencentcloud.Clickhouse.GetBackupTablesArgs
        ///         {
        ///             InstanceId = "cdwch-xxxxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBackupTablesResult> Invoke(GetBackupTablesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBackupTablesResult>("tencentcloud:Clickhouse/getBackupTables:getBackupTables", args ?? new GetBackupTablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupTablesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetBackupTablesArgs()
        {
        }
    }

    public sealed class GetBackupTablesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetBackupTablesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBackupTablesResult
    {
        /// <summary>
        /// Available tables.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBackupTablesAvailableTableResult> AvailableTables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetBackupTablesResult(
            ImmutableArray<Outputs.GetBackupTablesAvailableTableResult> availableTables,

            string id,

            string instanceId,

            string? resultOutputFile)
        {
            AvailableTables = availableTables;
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
        }
    }
}
