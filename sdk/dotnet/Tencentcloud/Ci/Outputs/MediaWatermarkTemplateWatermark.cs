// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ci.Outputs
{

    [OutputType]
    public sealed class MediaWatermarkTemplateWatermark
    {
        /// <summary>
        /// Horizontal offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ], 2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Top, Bottom and Center, the parameter is invalid.
        /// </summary>
        public readonly string Dx;
        /// <summary>
        /// Vertical offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ],2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096],3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Left, Right and Center, the parameter is invalid.
        /// </summary>
        public readonly string Dy;
        /// <summary>
        /// Watermark end time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
        /// </summary>
        public readonly string? EndTime;
        /// <summary>
        /// Image watermark node.
        /// </summary>
        public readonly Outputs.MediaWatermarkTemplateWatermarkImage? Image;
        /// <summary>
        /// Offset method, Relativity: proportional, Absolute: fixed position.
        /// </summary>
        public readonly string LocMode;
        /// <summary>
        /// Reference position, TopRight, TopLeft, BottomRight, BottomLeft, Left, Right, Top, Bottom, Center.
        /// </summary>
        public readonly string Pos;
        /// <summary>
        /// Watermark start time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
        /// </summary>
        public readonly string? StartTime;
        /// <summary>
        /// Text Watermark Node.
        /// </summary>
        public readonly Outputs.MediaWatermarkTemplateWatermarkText? Text;
        /// <summary>
        /// Watermark type, Text: text watermark, Image: image watermark.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private MediaWatermarkTemplateWatermark(
            string dx,

            string dy,

            string? endTime,

            Outputs.MediaWatermarkTemplateWatermarkImage? image,

            string locMode,

            string pos,

            string? startTime,

            Outputs.MediaWatermarkTemplateWatermarkText? text,

            string type)
        {
            Dx = dx;
            Dy = dy;
            EndTime = endTime;
            Image = image;
            LocMode = locMode;
            Pos = pos;
            StartTime = startTime;
            Text = text;
            Type = type;
        }
    }
}
