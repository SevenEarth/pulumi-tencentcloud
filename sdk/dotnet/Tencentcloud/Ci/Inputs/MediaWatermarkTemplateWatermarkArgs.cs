// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ci.Inputs
{

    public sealed class MediaWatermarkTemplateWatermarkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Horizontal offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ], 2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Top, Bottom and Center, the parameter is invalid.
        /// </summary>
        [Input("dx", required: true)]
        public Input<string> Dx { get; set; } = null!;

        /// <summary>
        /// Vertical offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ],2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096],3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Left, Right and Center, the parameter is invalid.
        /// </summary>
        [Input("dy", required: true)]
        public Input<string> Dy { get; set; } = null!;

        /// <summary>
        /// Watermark end time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Image watermark node.
        /// </summary>
        [Input("image")]
        public Input<Inputs.MediaWatermarkTemplateWatermarkImageArgs>? Image { get; set; }

        /// <summary>
        /// Offset method, Relativity: proportional, Absolute: fixed position.
        /// </summary>
        [Input("locMode", required: true)]
        public Input<string> LocMode { get; set; } = null!;

        /// <summary>
        /// Reference position, TopRight, TopLeft, BottomRight, BottomLeft, Left, Right, Top, Bottom, Center.
        /// </summary>
        [Input("pos", required: true)]
        public Input<string> Pos { get; set; } = null!;

        /// <summary>
        /// Watermark start time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Text Watermark Node.
        /// </summary>
        [Input("text")]
        public Input<Inputs.MediaWatermarkTemplateWatermarkTextArgs>? Text { get; set; }

        /// <summary>
        /// Watermark type, Text: text watermark, Image: image watermark.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public MediaWatermarkTemplateWatermarkArgs()
        {
        }
    }
}
