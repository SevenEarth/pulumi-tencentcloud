// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ci.Inputs
{

    public sealed class MediaTranscodeTemplateVideoArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
        /// </summary>
        [Input("bitrate")]
        public Input<string>? Bitrate { get; set; }

        /// <summary>
        /// buffer size, Value range: [1000, 128000], Unit: Kb, This parameter is not supported when Codec is VP8/VP9.
        /// </summary>
        [Input("bufsize")]
        public Input<string>? Bufsize { get; set; }

        /// <summary>
        /// Codec format, default value: `H.264`, when format is WebM, it is VP8, value range: `H.264`, `H.265`, `VP8`, `VP9`, `AV1`.
        /// </summary>
        [Input("codec")]
        public Input<string>? Codec { get; set; }

        /// <summary>
        /// Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
        /// </summary>
        [Input("crf")]
        public Input<string>? Crf { get; set; }

        /// <summary>
        /// Frame rate, value range: (0, 60], Unit: fps.
        /// </summary>
        [Input("fps")]
        public Input<string>? Fps { get; set; }

        /// <summary>
        /// The maximum number of frames between key frames, value range: [1, 100000].
        /// </summary>
        [Input("gop")]
        public Input<string>? Gop { get; set; }

        /// <summary>
        /// High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
        /// </summary>
        [Input("height")]
        public Input<string>? Height { get; set; }

        /// <summary>
        /// Adaptive length,true, false, This parameter is not supported when Codec is VP8/VP9/AV1.
        /// </summary>
        [Input("longShortMode")]
        public Input<string>? LongShortMode { get; set; }

        /// <summary>
        /// Peak video bit rate, Value range: [10, 50000], Unit: Kbps, This parameter is not supported when Codec is VP8/VP9.
        /// </summary>
        [Input("maxrate")]
        public Input<string>? Maxrate { get; set; }

        /// <summary>
        /// video color format, H.264 support: yuv420p, yuv422p, yuv444p, yuvj420p, yuvj422p, yuvj444p, auto, H.265 support: yuv420p, yuv420p10le, auto, This parameter is not supported when Codec is VP8/VP9/AV1.
        /// </summary>
        [Input("pixfmt")]
        public Input<string>? Pixfmt { get; set; }

        /// <summary>
        /// Video Algorithm Presets- H.264 supports this parameter, the values are veryfast, fast, medium, slow, slower- VP8 supports this parameter, the value is good, realtime- AV1 supports this parameter, the value is 5 (recommended value), 4- H.265 and VP9 do not support this parameter.
        /// </summary>
        [Input("preset")]
        public Input<string>? Preset { get; set; }

        /// <summary>
        /// encoding level, Support baseline, main, high, auto- When Pixfmt is auto, this parameter can only be set to auto, when it is set to other options, the parameter value will be set to auto- baseline: suitable for mobile devices- main: suitable for standard resolution devices- high: suitable for high-resolution devices- Only H.264 supports this parameter.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// Whether to delete the video stream, true, false.
        /// </summary>
        [Input("remove")]
        public Input<string>? Remove { get; set; }

        /// <summary>
        /// Rotation angle, Value range: [0, 360), Unit: degree.
        /// </summary>
        [Input("rotate")]
        public Input<string>? Rotate { get; set; }

        /// <summary>
        /// width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
        /// </summary>
        [Input("width")]
        public Input<string>? Width { get; set; }

        public MediaTranscodeTemplateVideoArgs()
        {
        }
    }
}
