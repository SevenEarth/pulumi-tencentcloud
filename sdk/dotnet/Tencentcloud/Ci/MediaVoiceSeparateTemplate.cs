// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ci
{
    /// <summary>
    /// Provides a resource to create a ci media_voice_separate_template
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var mediaVoiceSeparateTemplate = new Tencentcloud.Ci.MediaVoiceSeparateTemplate("mediaVoiceSeparateTemplate", new Tencentcloud.Ci.MediaVoiceSeparateTemplateArgs
    ///         {
    ///             AudioConfig = new Tencentcloud.Ci.Inputs.MediaVoiceSeparateTemplateAudioConfigArgs
    ///             {
    ///                 Bitrate = "128",
    ///                 Channels = "4",
    ///                 Codec = "aac",
    ///                 Samplerate = "44100",
    ///             },
    ///             AudioMode = "IsAudio",
    ///             Bucket = "terraform-ci-xxxxx",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ci media_voice_separate_template can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Ci/mediaVoiceSeparateTemplate:MediaVoiceSeparateTemplate media_voice_separate_template terraform-ci-xxxxxx#t1c95566664530460d9bc2b6265feb7c32
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Ci/mediaVoiceSeparateTemplate:MediaVoiceSeparateTemplate")]
    public partial class MediaVoiceSeparateTemplate : Pulumi.CustomResource
    {
        /// <summary>
        /// audio configuration.
        /// </summary>
        [Output("audioConfig")]
        public Output<Outputs.MediaVoiceSeparateTemplateAudioConfig> AudioConfig { get; private set; } = null!;

        /// <summary>
        /// Output audio IsAudio: output human voice, IsBackground: output background sound, AudioAndBackground: output vocal and background sound.
        /// </summary>
        [Output("audioMode")]
        public Output<string> AudioMode { get; private set; } = null!;

        /// <summary>
        /// bucket name.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a MediaVoiceSeparateTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MediaVoiceSeparateTemplate(string name, MediaVoiceSeparateTemplateArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ci/mediaVoiceSeparateTemplate:MediaVoiceSeparateTemplate", name, args ?? new MediaVoiceSeparateTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MediaVoiceSeparateTemplate(string name, Input<string> id, MediaVoiceSeparateTemplateState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ci/mediaVoiceSeparateTemplate:MediaVoiceSeparateTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MediaVoiceSeparateTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MediaVoiceSeparateTemplate Get(string name, Input<string> id, MediaVoiceSeparateTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new MediaVoiceSeparateTemplate(name, id, state, options);
        }
    }

    public sealed class MediaVoiceSeparateTemplateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// audio configuration.
        /// </summary>
        [Input("audioConfig", required: true)]
        public Input<Inputs.MediaVoiceSeparateTemplateAudioConfigArgs> AudioConfig { get; set; } = null!;

        /// <summary>
        /// Output audio IsAudio: output human voice, IsBackground: output background sound, AudioAndBackground: output vocal and background sound.
        /// </summary>
        [Input("audioMode", required: true)]
        public Input<string> AudioMode { get; set; } = null!;

        /// <summary>
        /// bucket name.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MediaVoiceSeparateTemplateArgs()
        {
        }
    }

    public sealed class MediaVoiceSeparateTemplateState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// audio configuration.
        /// </summary>
        [Input("audioConfig")]
        public Input<Inputs.MediaVoiceSeparateTemplateAudioConfigGetArgs>? AudioConfig { get; set; }

        /// <summary>
        /// Output audio IsAudio: output human voice, IsBackground: output background sound, AudioAndBackground: output vocal and background sound.
        /// </summary>
        [Input("audioMode")]
        public Input<string>? AudioMode { get; set; }

        /// <summary>
        /// bucket name.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MediaVoiceSeparateTemplateState()
        {
        }
    }
}
