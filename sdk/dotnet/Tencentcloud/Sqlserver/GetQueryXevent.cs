// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Sqlserver
{
    public static class GetQueryXevent
    {
        /// <summary>
        /// Use this data source to query detailed information of sqlserver query_xevent
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Sqlserver.GetQueryXevent.Invoke(new()
        ///     {
        ///         EndTime = "2023-08-10 00:00:00",
        ///         EventType = "blocked",
        ///         InstanceId = "mssql-gyg9xycl",
        ///         StartTime = "2023-08-01 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetQueryXeventResult> InvokeAsync(GetQueryXeventArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueryXeventResult>("tencentcloud:Sqlserver/getQueryXevent:getQueryXevent", args ?? new GetQueryXeventArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of sqlserver query_xevent
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Sqlserver.GetQueryXevent.Invoke(new()
        ///     {
        ///         EndTime = "2023-08-10 00:00:00",
        ///         EventType = "blocked",
        ///         InstanceId = "mssql-gyg9xycl",
        ///         StartTime = "2023-08-01 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetQueryXeventResult> Invoke(GetQueryXeventInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueryXeventResult>("tencentcloud:Sqlserver/getQueryXevent:getQueryXevent", args ?? new GetQueryXeventInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueryXeventArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generation end time of an extended file.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
        /// </summary>
        [Input("eventType", required: true)]
        public string EventType { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Generation start time of an extended file.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetQueryXeventArgs()
        {
        }
        public static new GetQueryXeventArgs Empty => new GetQueryXeventArgs();
    }

    public sealed class GetQueryXeventInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generation end time of an extended file.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
        /// </summary>
        [Input("eventType", required: true)]
        public Input<string> EventType { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Generation start time of an extended file.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetQueryXeventInvokeArgs()
        {
        }
        public static new GetQueryXeventInvokeArgs Empty => new GetQueryXeventInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueryXeventResult
    {
        /// <summary>
        /// Generation end time of an extended file.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock (deadlock event).
        /// </summary>
        public readonly string EventType;
        /// <summary>
        /// List of extended events.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetQueryXeventEventResult> Events;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Generation start time of an extended file.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private GetQueryXeventResult(
            string endTime,

            string eventType,

            ImmutableArray<Outputs.GetQueryXeventEventResult> events,

            string id,

            string instanceId,

            string? resultOutputFile,

            string startTime)
        {
            EndTime = endTime;
            EventType = eventType;
            Events = events;
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
