// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Scf.Outputs
{

    [OutputType]
    public sealed class GetLogsLogResult
    {
        /// <summary>
        /// Function billing time, according to duration up to the last 100ms, unit is ms.
        /// </summary>
        public readonly int BillDuration;
        /// <summary>
        /// Function execution time-consuming, unit is ms.
        /// </summary>
        public readonly double Duration;
        /// <summary>
        /// Name of the SCF function to be queried.
        /// </summary>
        public readonly string FunctionName;
        /// <summary>
        /// Whether the function call ends, `1` means the execution ends, other values indicate the call exception.
        /// </summary>
        public readonly int InvokeFinished;
        /// <summary>
        /// Log level.
        /// </summary>
        public readonly string Level;
        /// <summary>
        /// Log output during function execution.
        /// </summary>
        public readonly string Log;
        /// <summary>
        /// The actual memory size consumed in the execution of the function, unit is Byte.
        /// </summary>
        public readonly int MemUsage;
        /// <summary>
        /// Execute the requestId corresponding to the function.
        /// </summary>
        public readonly string RequestId;
        /// <summary>
        /// Use to filter log, optional value: `not0` only returns the error log. `is0` only returns the correct log. `TimeLimitExceeded` returns the log of the function call timeout. `ResourceLimitExceeded` returns the function call generation resource overrun log. `UserCodeException` returns logs of the user code error that occurred in the function call. Not passing the parameter means returning all logs.
        /// </summary>
        public readonly int RetCode;
        /// <summary>
        /// Return value after function execution is completed.
        /// </summary>
        public readonly string RetMsg;
        /// <summary>
        /// Log source.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// The start time of the query, the format is `2017-05-16 20:00:00`, which can only be within one day from `end_time`.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private GetLogsLogResult(
            int billDuration,

            double duration,

            string functionName,

            int invokeFinished,

            string level,

            string log,

            int memUsage,

            string requestId,

            int retCode,

            string retMsg,

            string source,

            string startTime)
        {
            BillDuration = billDuration;
            Duration = duration;
            FunctionName = functionName;
            InvokeFinished = invokeFinished;
            Level = level;
            Log = log;
            MemUsage = memUsage;
            RequestId = requestId;
            RetCode = retCode;
            RetMsg = retMsg;
            Source = source;
            StartTime = startTime;
        }
    }
}
