// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Scf.Outputs
{

    [OutputType]
    public sealed class GetAccountInfoAccountUsageNamespaceResult
    {
        /// <summary>
        /// Function array.
        /// </summary>
        public readonly ImmutableArray<string> Functions;
        /// <summary>
        /// Number of functions in namespace.
        /// </summary>
        public readonly int FunctionsCount;
        /// <summary>
        /// Namespace name.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Quota of configured user concurrency memory in the current region.
        /// </summary>
        public readonly int TotalAllocatedConcurrencyMem;
        /// <summary>
        /// Provisioned concurrency usage of the namespace Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly int TotalAllocatedProvisionedMem;
        /// <summary>
        /// Upper limit of user concurrency memory in the current region.
        /// </summary>
        public readonly int TotalConcurrencyMem;

        [OutputConstructor]
        private GetAccountInfoAccountUsageNamespaceResult(
            ImmutableArray<string> functions,

            int functionsCount,

            string @namespace,

            int totalAllocatedConcurrencyMem,

            int totalAllocatedProvisionedMem,

            int totalConcurrencyMem)
        {
            Functions = functions;
            FunctionsCount = functionsCount;
            Namespace = @namespace;
            TotalAllocatedConcurrencyMem = totalAllocatedConcurrencyMem;
            TotalAllocatedProvisionedMem = totalAllocatedProvisionedMem;
            TotalConcurrencyMem = totalConcurrencyMem;
        }
    }
}
