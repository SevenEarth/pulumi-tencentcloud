// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Scf.Outputs
{

    [OutputType]
    public sealed class GetTriggersTriggerResult
    {
        /// <summary>
        /// Trigger creation time.
        /// </summary>
        public readonly string AddTime;
        /// <summary>
        /// Whether the trigger is available.
        /// </summary>
        public readonly string AvailableStatus;
        /// <summary>
        /// Trigger-Function binding status.
        /// </summary>
        public readonly string BindStatus;
        /// <summary>
        /// Custom parameterNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string CustomArgument;
        /// <summary>
        /// Whether to enable.
        /// </summary>
        public readonly int Enable;
        /// <summary>
        /// Trigger last modified time.
        /// </summary>
        public readonly string ModTime;
        /// <summary>
        /// Function version or alias.
        /// </summary>
        public readonly string Qualifier;
        /// <summary>
        /// Minimum resource ID of trigger.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Trigger type. Two-way means that the trigger can be manipulated in both consoles, while one-way means that the trigger can be created only in the SCF Console.
        /// </summary>
        public readonly string TriggerAttribute;
        /// <summary>
        /// Detailed configuration of trigger.
        /// </summary>
        public readonly string TriggerDesc;
        /// <summary>
        /// Trigger name.
        /// </summary>
        public readonly string TriggerName;
        /// <summary>
        /// Trigger type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTriggersTriggerResult(
            string addTime,

            string availableStatus,

            string bindStatus,

            string customArgument,

            int enable,

            string modTime,

            string qualifier,

            string resourceId,

            string triggerAttribute,

            string triggerDesc,

            string triggerName,

            string type)
        {
            AddTime = addTime;
            AvailableStatus = availableStatus;
            BindStatus = bindStatus;
            CustomArgument = customArgument;
            Enable = enable;
            ModTime = modTime;
            Qualifier = qualifier;
            ResourceId = resourceId;
            TriggerAttribute = triggerAttribute;
            TriggerDesc = triggerDesc;
            TriggerName = triggerName;
            Type = type;
        }
    }
}
