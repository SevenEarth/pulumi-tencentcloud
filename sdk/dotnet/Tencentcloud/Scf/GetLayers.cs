// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Scf
{
    public static class GetLayers
    {
        /// <summary>
        /// Use this data source to query detailed information of scf layers
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var layers = Tencentcloud.Scf.GetLayers.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetLayersResult> InvokeAsync(GetLayersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLayersResult>("tencentcloud:Scf/getLayers:getLayers", args ?? new GetLayersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of scf layers
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var layers = Tencentcloud.Scf.GetLayers.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetLayersResult> Invoke(GetLayersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLayersResult>("tencentcloud:Scf/getLayers:getLayers", args ?? new GetLayersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLayersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compatible runtimes.
        /// </summary>
        [Input("compatibleRuntime")]
        public string? CompatibleRuntime { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Query key, which fuzzily matches the name.
        /// </summary>
        [Input("searchKey")]
        public string? SearchKey { get; set; }

        public GetLayersArgs()
        {
        }
        public static new GetLayersArgs Empty => new GetLayersArgs();
    }

    public sealed class GetLayersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compatible runtimes.
        /// </summary>
        [Input("compatibleRuntime")]
        public Input<string>? CompatibleRuntime { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Query key, which fuzzily matches the name.
        /// </summary>
        [Input("searchKey")]
        public Input<string>? SearchKey { get; set; }

        public GetLayersInvokeArgs()
        {
        }
        public static new GetLayersInvokeArgs Empty => new GetLayersInvokeArgs();
    }


    [OutputType]
    public sealed class GetLayersResult
    {
        public readonly string? CompatibleRuntime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Layer list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLayersLayerResult> ScfLayers;
        public readonly string? ResultOutputFile;
        public readonly string? SearchKey;

        [OutputConstructor]
        private GetLayersResult(
            string? compatibleRuntime,

            string id,

            ImmutableArray<Outputs.GetLayersLayerResult> layers,

            string? resultOutputFile,

            string? searchKey)
        {
            CompatibleRuntime = compatibleRuntime;
            Id = id;
            ScfLayers = layers;
            ResultOutputFile = resultOutputFile;
            SearchKey = searchKey;
        }
    }
}
