// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Teo
{
    public static class GetZoneAvailablePlans
    {
        /// <summary>
        /// Use this data source to query detailed information of teo zoneAvailablePlans
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var zoneAvailablePlans = Tencentcloud.Teo.GetZoneAvailablePlans.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetZoneAvailablePlansResult> InvokeAsync(GetZoneAvailablePlansArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneAvailablePlansResult>("tencentcloud:Teo/getZoneAvailablePlans:getZoneAvailablePlans", args ?? new GetZoneAvailablePlansArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of teo zoneAvailablePlans
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var zoneAvailablePlans = Tencentcloud.Teo.GetZoneAvailablePlans.Invoke();
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetZoneAvailablePlansResult> Invoke(GetZoneAvailablePlansInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneAvailablePlansResult>("tencentcloud:Teo/getZoneAvailablePlans:getZoneAvailablePlans", args ?? new GetZoneAvailablePlansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneAvailablePlansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetZoneAvailablePlansArgs()
        {
        }
        public static new GetZoneAvailablePlansArgs Empty => new GetZoneAvailablePlansArgs();
    }

    public sealed class GetZoneAvailablePlansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetZoneAvailablePlansInvokeArgs()
        {
        }
        public static new GetZoneAvailablePlansInvokeArgs Empty => new GetZoneAvailablePlansInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneAvailablePlansResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Zone plans which current account can use.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZoneAvailablePlansPlanInfoListResult> PlanInfoLists;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetZoneAvailablePlansResult(
            string id,

            ImmutableArray<Outputs.GetZoneAvailablePlansPlanInfoListResult> planInfoLists,

            string? resultOutputFile)
        {
            Id = id;
            PlanInfoLists = planInfoLists;
            ResultOutputFile = resultOutputFile;
        }
    }
}
