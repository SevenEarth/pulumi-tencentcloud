// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Css
{
    /// <summary>
    /// Provides a resource to create a css live_transcode_rule_attachment
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var task = new Tencentcloud.Css.PullStreamTask("task", new()
    ///     {
    ///         SourceType = "%s",
    ///         SourceUrls = new[]
    ///         {
    ///             "%s",
    ///         },
    ///         DomainName = "%s",
    ///         AppName = "%s",
    ///         StreamName = "%s",
    ///         StartTime = "%s",
    ///         EndTime = "%s",
    ///         Operator = "%s",
    ///         Comment = "This is a demo.",
    ///     });
    /// 
    ///     var temp = new Tencentcloud.Css.LiveTranscodeTemplate("temp", new()
    ///     {
    ///         TemplateName = "xxx",
    ///         Acodec = "aac",
    ///         VideoBitrate = 100,
    ///         Vcodec = "origin",
    ///         Description = "This_is_a_tf_test_temp.",
    ///         NeedVideo = 1,
    ///         NeedAudio = 1,
    ///     });
    /// 
    ///     var liveTranscodeRuleAttachment = new Tencentcloud.Css.LiveTranscodeRuleAttachment("liveTranscodeRuleAttachment", new()
    ///     {
    ///         DomainName = task.DomainName,
    ///         AppName = task.AppName,
    ///         StreamName = task.StreamName,
    ///         TemplateId = temp.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// css live_transcode_rule_attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Css/liveTranscodeRuleAttachment:LiveTranscodeRuleAttachment live_transcode_rule_attachment liveTranscodeRuleAttachment_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Css/liveTranscodeRuleAttachment:LiveTranscodeRuleAttachment")]
    public partial class LiveTranscodeRuleAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// app name which you want to bind, can be empty string if not binding specific app name.
        /// </summary>
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        /// <summary>
        /// create time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// domain name hich you want to bind the transcode template.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// stream name which you want to bind, can be empty string if not binding specific stream.
        /// </summary>
        [Output("streamName")]
        public Output<string> StreamName { get; private set; } = null!;

        /// <summary>
        /// template created by css_live_transcode_template.
        /// </summary>
        [Output("templateId")]
        public Output<int> TemplateId { get; private set; } = null!;

        /// <summary>
        /// update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a LiveTranscodeRuleAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LiveTranscodeRuleAttachment(string name, LiveTranscodeRuleAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/liveTranscodeRuleAttachment:LiveTranscodeRuleAttachment", name, args ?? new LiveTranscodeRuleAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LiveTranscodeRuleAttachment(string name, Input<string> id, LiveTranscodeRuleAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/liveTranscodeRuleAttachment:LiveTranscodeRuleAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LiveTranscodeRuleAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LiveTranscodeRuleAttachment Get(string name, Input<string> id, LiveTranscodeRuleAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new LiveTranscodeRuleAttachment(name, id, state, options);
        }
    }

    public sealed class LiveTranscodeRuleAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// app name which you want to bind, can be empty string if not binding specific app name.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// domain name hich you want to bind the transcode template.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// stream name which you want to bind, can be empty string if not binding specific stream.
        /// </summary>
        [Input("streamName", required: true)]
        public Input<string> StreamName { get; set; } = null!;

        /// <summary>
        /// template created by css_live_transcode_template.
        /// </summary>
        [Input("templateId", required: true)]
        public Input<int> TemplateId { get; set; } = null!;

        public LiveTranscodeRuleAttachmentArgs()
        {
        }
        public static new LiveTranscodeRuleAttachmentArgs Empty => new LiveTranscodeRuleAttachmentArgs();
    }

    public sealed class LiveTranscodeRuleAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// app name which you want to bind, can be empty string if not binding specific app name.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// domain name hich you want to bind the transcode template.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// stream name which you want to bind, can be empty string if not binding specific stream.
        /// </summary>
        [Input("streamName")]
        public Input<string>? StreamName { get; set; }

        /// <summary>
        /// template created by css_live_transcode_template.
        /// </summary>
        [Input("templateId")]
        public Input<int>? TemplateId { get; set; }

        /// <summary>
        /// update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public LiveTranscodeRuleAttachmentState()
        {
        }
        public static new LiveTranscodeRuleAttachmentState Empty => new LiveTranscodeRuleAttachmentState();
    }
}
