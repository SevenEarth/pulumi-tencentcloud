// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ccn
{
    /// <summary>
    /// Provides a resource to create a vpc ccn_instances_accept_attach, you can use this resource to approve cross-region attachment.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var ccnInstancesAcceptAttach = new Tencentcloud.Ccn.InstancesAcceptAttach("ccnInstancesAcceptAttach", new()
    ///     {
    ///         CcnId = "ccn-39lqkygf",
    ///         Instances = new[]
    ///         {
    ///             new Tencentcloud.Ccn.Inputs.InstancesAcceptAttachInstanceArgs
    ///             {
    ///                 InstanceId = "vpc-j9yhbzpn",
    ///                 InstanceRegion = "ap-guangzhou",
    ///                 InstanceType = "VPC",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Ccn/instancesAcceptAttach:InstancesAcceptAttach")]
    public partial class InstancesAcceptAttach : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CCN Instance ID.
        /// </summary>
        [Output("ccnId")]
        public Output<string> CcnId { get; private set; } = null!;

        /// <summary>
        /// Accept List Of Attachment Instances.
        /// </summary>
        [Output("instances")]
        public Output<ImmutableArray<Outputs.InstancesAcceptAttachInstance>> Instances { get; private set; } = null!;


        /// <summary>
        /// Create a InstancesAcceptAttach resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstancesAcceptAttach(string name, InstancesAcceptAttachArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/instancesAcceptAttach:InstancesAcceptAttach", name, args ?? new InstancesAcceptAttachArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstancesAcceptAttach(string name, Input<string> id, InstancesAcceptAttachState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/instancesAcceptAttach:InstancesAcceptAttach", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstancesAcceptAttach resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstancesAcceptAttach Get(string name, Input<string> id, InstancesAcceptAttachState? state = null, CustomResourceOptions? options = null)
        {
            return new InstancesAcceptAttach(name, id, state, options);
        }
    }

    public sealed class InstancesAcceptAttachArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CCN Instance ID.
        /// </summary>
        [Input("ccnId", required: true)]
        public Input<string> CcnId { get; set; } = null!;

        [Input("instances", required: true)]
        private InputList<Inputs.InstancesAcceptAttachInstanceArgs>? _instances;

        /// <summary>
        /// Accept List Of Attachment Instances.
        /// </summary>
        public InputList<Inputs.InstancesAcceptAttachInstanceArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.InstancesAcceptAttachInstanceArgs>());
            set => _instances = value;
        }

        public InstancesAcceptAttachArgs()
        {
        }
        public static new InstancesAcceptAttachArgs Empty => new InstancesAcceptAttachArgs();
    }

    public sealed class InstancesAcceptAttachState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CCN Instance ID.
        /// </summary>
        [Input("ccnId")]
        public Input<string>? CcnId { get; set; }

        [Input("instances")]
        private InputList<Inputs.InstancesAcceptAttachInstanceGetArgs>? _instances;

        /// <summary>
        /// Accept List Of Attachment Instances.
        /// </summary>
        public InputList<Inputs.InstancesAcceptAttachInstanceGetArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.InstancesAcceptAttachInstanceGetArgs>());
            set => _instances = value;
        }

        public InstancesAcceptAttachState()
        {
        }
        public static new InstancesAcceptAttachState Empty => new InstancesAcceptAttachState();
    }
}
