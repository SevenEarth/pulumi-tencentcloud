// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ccn
{
    public static class GetCrossBorderRegionBandwidthLimits
    {
        /// <summary>
        /// Use this data source to query detailed information of ccn_cross_border_region_bandwidth_limits
        /// 
        /// &gt; **NOTE:** This resource is dedicated to Unicom.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ccnRegionBandwidthLimits = Tencentcloud.Ccn.GetCrossBorderRegionBandwidthLimits.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Tencentcloud.Ccn.Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs
        ///             {
        ///                 Name = "source-region",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-guangzhou",
        ///                 },
        ///             },
        ///             new Tencentcloud.Ccn.Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs
        ///             {
        ///                 Name = "destination-region",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-shanghai",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetCrossBorderRegionBandwidthLimitsResult> InvokeAsync(GetCrossBorderRegionBandwidthLimitsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCrossBorderRegionBandwidthLimitsResult>("tencentcloud:Ccn/getCrossBorderRegionBandwidthLimits:getCrossBorderRegionBandwidthLimits", args ?? new GetCrossBorderRegionBandwidthLimitsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ccn_cross_border_region_bandwidth_limits
        /// 
        /// &gt; **NOTE:** This resource is dedicated to Unicom.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ccnRegionBandwidthLimits = Tencentcloud.Ccn.GetCrossBorderRegionBandwidthLimits.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Tencentcloud.Ccn.Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs
        ///             {
        ///                 Name = "source-region",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-guangzhou",
        ///                 },
        ///             },
        ///             new Tencentcloud.Ccn.Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs
        ///             {
        ///                 Name = "destination-region",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-shanghai",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetCrossBorderRegionBandwidthLimitsResult> Invoke(GetCrossBorderRegionBandwidthLimitsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCrossBorderRegionBandwidthLimitsResult>("tencentcloud:Ccn/getCrossBorderRegionBandwidthLimits:getCrossBorderRegionBandwidthLimits", args ?? new GetCrossBorderRegionBandwidthLimitsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCrossBorderRegionBandwidthLimitsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCrossBorderRegionBandwidthLimitsFilterArgs>? _filters;

        /// <summary>
        /// Filter condition. Currently, only one value is supported. The supported fields, 1)source-region, the value is like ap-guangzhou; 2)destination-region, the value is like ap-shanghai; 3)ccn-ids,cloud network ID array, the value is like ccn-12345678; 4)user-account-id,user account ID, the value is like 12345678.
        /// </summary>
        public List<Inputs.GetCrossBorderRegionBandwidthLimitsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCrossBorderRegionBandwidthLimitsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetCrossBorderRegionBandwidthLimitsArgs()
        {
        }
        public static new GetCrossBorderRegionBandwidthLimitsArgs Empty => new GetCrossBorderRegionBandwidthLimitsArgs();
    }

    public sealed class GetCrossBorderRegionBandwidthLimitsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs>? _filters;

        /// <summary>
        /// Filter condition. Currently, only one value is supported. The supported fields, 1)source-region, the value is like ap-guangzhou; 2)destination-region, the value is like ap-shanghai; 3)ccn-ids,cloud network ID array, the value is like ccn-12345678; 4)user-account-id,user account ID, the value is like 12345678.
        /// </summary>
        public InputList<Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCrossBorderRegionBandwidthLimitsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetCrossBorderRegionBandwidthLimitsInvokeArgs()
        {
        }
        public static new GetCrossBorderRegionBandwidthLimitsInvokeArgs Empty => new GetCrossBorderRegionBandwidthLimitsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCrossBorderRegionBandwidthLimitsResult
    {
        /// <summary>
        /// Info of cross region ccn instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetResult> CcnBandwidthSets;
        public readonly ImmutableArray<Outputs.GetCrossBorderRegionBandwidthLimitsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetCrossBorderRegionBandwidthLimitsResult(
            ImmutableArray<Outputs.GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetResult> ccnBandwidthSets,

            ImmutableArray<Outputs.GetCrossBorderRegionBandwidthLimitsFilterResult> filters,

            string id,

            string? resultOutputFile)
        {
            CcnBandwidthSets = ccnBandwidthSets;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
