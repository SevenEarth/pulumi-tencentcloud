// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cfw
{
    public static class GetNatFwSwitches
    {
        /// <summary>
        /// Use this data source to query detailed information of cfw nat_fw_switches
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Query Nat instance'switch by instance id
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Tencentcloud.Cfw.GetNatFwSwitches.InvokeAsync(new Tencentcloud.Cfw.GetNatFwSwitchesArgs
        ///         {
        ///             NatInsId = "cfwnat-18d2ba18",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Or filter by switch status
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Tencentcloud.Cfw.GetNatFwSwitches.InvokeAsync(new Tencentcloud.Cfw.GetNatFwSwitchesArgs
        ///         {
        ///             NatInsId = "cfwnat-18d2ba18",
        ///             Status = 1,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNatFwSwitchesResult> InvokeAsync(GetNatFwSwitchesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNatFwSwitchesResult>("tencentcloud:Cfw/getNatFwSwitches:getNatFwSwitches", args ?? new GetNatFwSwitchesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cfw nat_fw_switches
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Query Nat instance'switch by instance id
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Tencentcloud.Cfw.GetNatFwSwitches.InvokeAsync(new Tencentcloud.Cfw.GetNatFwSwitchesArgs
        ///         {
        ///             NatInsId = "cfwnat-18d2ba18",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Or filter by switch status
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Tencentcloud.Cfw.GetNatFwSwitches.InvokeAsync(new Tencentcloud.Cfw.GetNatFwSwitchesArgs
        ///         {
        ///             NatInsId = "cfwnat-18d2ba18",
        ///             Status = 1,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNatFwSwitchesResult> Invoke(GetNatFwSwitchesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNatFwSwitchesResult>("tencentcloud:Cfw/getNatFwSwitches:getNatFwSwitches", args ?? new GetNatFwSwitchesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNatFwSwitchesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
        /// </summary>
        [Input("natInsId")]
        public string? NatInsId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Switch status, 1 open; 0 close.
        /// </summary>
        [Input("status")]
        public int? Status { get; set; }

        public GetNatFwSwitchesArgs()
        {
        }
    }

    public sealed class GetNatFwSwitchesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
        /// </summary>
        [Input("natInsId")]
        public Input<string>? NatInsId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Switch status, 1 open; 0 close.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public GetNatFwSwitchesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNatFwSwitchesResult
    {
        /// <summary>
        /// NAT border firewall switch list data.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNatFwSwitchesDataResult> Datas;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// NAT firewall instance Id.
        /// </summary>
        public readonly string? NatInsId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Switch status.
        /// </summary>
        public readonly int? Status;

        [OutputConstructor]
        private GetNatFwSwitchesResult(
            ImmutableArray<Outputs.GetNatFwSwitchesDataResult> datas,

            string id,

            string? natInsId,

            string? resultOutputFile,

            int? status)
        {
            Datas = datas;
            Id = id;
            NatInsId = natInsId;
            ResultOutputFile = resultOutputFile;
            Status = status;
        }
    }
}
