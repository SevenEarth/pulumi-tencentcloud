// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cfw.Outputs
{

    [OutputType]
    public sealed class GetNatFwSwitchesDataResult
    {
        /// <summary>
        /// Whether the switch is abnormal, 0: normal, 1: abnormal.
        /// </summary>
        public readonly int Abnormal;
        /// <summary>
        /// Cvm Num.
        /// </summary>
        public readonly int CvmNum;
        /// <summary>
        /// Effective status.
        /// </summary>
        public readonly int Enable;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// NAT gatway Id.
        /// </summary>
        public readonly string NatId;
        /// <summary>
        /// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
        /// </summary>
        public readonly string NatInsId;
        /// <summary>
        /// NAT firewall instance name.
        /// </summary>
        public readonly string NatInsName;
        /// <summary>
        /// NAT gatway name.
        /// </summary>
        public readonly string NatName;
        /// <summary>
        /// Region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Route Id.
        /// </summary>
        public readonly string RouteId;
        /// <summary>
        /// Route Name.
        /// </summary>
        public readonly string RouteName;
        /// <summary>
        /// Switch status, 1 open; 0 close.
        /// </summary>
        public readonly int Status;
        /// <summary>
        /// IPv4 CIDR.
        /// </summary>
        public readonly string SubnetCidr;
        /// <summary>
        /// Subnet Id.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Subnet Name.
        /// </summary>
        public readonly string SubnetName;
        /// <summary>
        /// Vpc Id.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// Vpc Name.
        /// </summary>
        public readonly string VpcName;

        [OutputConstructor]
        private GetNatFwSwitchesDataResult(
            int abnormal,

            int cvmNum,

            int enable,

            int id,

            string natId,

            string natInsId,

            string natInsName,

            string natName,

            string region,

            string routeId,

            string routeName,

            int status,

            string subnetCidr,

            string subnetId,

            string subnetName,

            string vpcId,

            string vpcName)
        {
            Abnormal = abnormal;
            CvmNum = cvmNum;
            Enable = enable;
            Id = id;
            NatId = natId;
            NatInsId = natInsId;
            NatInsName = natInsName;
            NatName = natName;
            Region = region;
            RouteId = routeId;
            RouteName = routeName;
            Status = status;
            SubnetCidr = subnetCidr;
            SubnetId = subnetId;
            SubnetName = subnetName;
            VpcId = vpcId;
            VpcName = vpcName;
        }
    }
}
