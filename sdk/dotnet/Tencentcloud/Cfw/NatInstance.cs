// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cfw
{
    /// <summary>
    /// Provides a resource to create a cfw nat_instance
    /// 
    /// ## Example Usage
    /// ### If mode is 0
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Tencentcloud.Cfw.NatInstance("example", new Tencentcloud.Cfw.NatInstanceArgs
    ///         {
    ///             CrossAZone = 0,
    ///             Mode = 0,
    ///             NewModeItems = new Tencentcloud.Cfw.Inputs.NatInstanceNewModeItemsArgs
    ///             {
    ///                 Eips = 
    ///                 {
    ///                     "152.136.168.192",
    ///                 },
    ///                 VpcLists = 
    ///                 {
    ///                     "vpc-5063ta4i",
    ///                 },
    ///             },
    ///             Width = 20,
    ///             ZoneSets = 
    ///             {
    ///                 "ap-guangzhou-7",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### If mode is 1
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Tencentcloud.Cfw.NatInstance("example", new Tencentcloud.Cfw.NatInstanceArgs
    ///         {
    ///             CrossAZone = 0,
    ///             Mode = 1,
    ///             NatGwLists = 
    ///             {
    ///                 "nat-9wwkz1kr",
    ///             },
    ///             Width = 20,
    ///             ZoneSets = 
    ///             {
    ///                 "ap-guangzhou-6",
    ///                 "ap-guangzhou-7",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// cfw nat_instance can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Cfw/natInstance:NatInstance example cfwnat-54a21421
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Cfw/natInstance:NatInstance")]
    public partial class NatInstance : Pulumi.CustomResource
    {
        /// <summary>
        /// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if empty, the default is not to use off-site disaster recovery.
        /// </summary>
        [Output("crossAZone")]
        public Output<int?> CrossAZone { get; private set; } = null!;

        /// <summary>
        /// Mode 1: access mode; 0: new mode.
        /// </summary>
        [Output("mode")]
        public Output<int> Mode { get; private set; } = null!;

        /// <summary>
        /// Firewall instance name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of nat gateways connected to the access mode, at least one of NewModeItems and NatgwList is passed.
        /// </summary>
        [Output("natGwLists")]
        public Output<ImmutableArray<string>> NatGwLists { get; private set; } = null!;

        /// <summary>
        /// New mode passing parameters are added, at least one of new_mode_items and nat_gw_list is passed.
        /// </summary>
        [Output("newModeItems")]
        public Output<Outputs.NatInstanceNewModeItems?> NewModeItems { get; private set; } = null!;

        /// <summary>
        /// Bandwidth.
        /// </summary>
        [Output("width")]
        public Output<int> Width { get; private set; } = null!;

        /// <summary>
        /// Zone list.
        /// </summary>
        [Output("zoneSets")]
        public Output<ImmutableArray<string>> ZoneSets { get; private set; } = null!;


        /// <summary>
        /// Create a NatInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatInstance(string name, NatInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cfw/natInstance:NatInstance", name, args ?? new NatInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatInstance(string name, Input<string> id, NatInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cfw/natInstance:NatInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatInstance Get(string name, Input<string> id, NatInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new NatInstance(name, id, state, options);
        }
    }

    public sealed class NatInstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if empty, the default is not to use off-site disaster recovery.
        /// </summary>
        [Input("crossAZone")]
        public Input<int>? CrossAZone { get; set; }

        /// <summary>
        /// Mode 1: access mode; 0: new mode.
        /// </summary>
        [Input("mode", required: true)]
        public Input<int> Mode { get; set; } = null!;

        /// <summary>
        /// Firewall instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natGwLists")]
        private InputList<string>? _natGwLists;

        /// <summary>
        /// A list of nat gateways connected to the access mode, at least one of NewModeItems and NatgwList is passed.
        /// </summary>
        public InputList<string> NatGwLists
        {
            get => _natGwLists ?? (_natGwLists = new InputList<string>());
            set => _natGwLists = value;
        }

        /// <summary>
        /// New mode passing parameters are added, at least one of new_mode_items and nat_gw_list is passed.
        /// </summary>
        [Input("newModeItems")]
        public Input<Inputs.NatInstanceNewModeItemsArgs>? NewModeItems { get; set; }

        /// <summary>
        /// Bandwidth.
        /// </summary>
        [Input("width", required: true)]
        public Input<int> Width { get; set; } = null!;

        [Input("zoneSets", required: true)]
        private InputList<string>? _zoneSets;

        /// <summary>
        /// Zone list.
        /// </summary>
        public InputList<string> ZoneSets
        {
            get => _zoneSets ?? (_zoneSets = new InputList<string>());
            set => _zoneSets = value;
        }

        public NatInstanceArgs()
        {
        }
    }

    public sealed class NatInstanceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if empty, the default is not to use off-site disaster recovery.
        /// </summary>
        [Input("crossAZone")]
        public Input<int>? CrossAZone { get; set; }

        /// <summary>
        /// Mode 1: access mode; 0: new mode.
        /// </summary>
        [Input("mode")]
        public Input<int>? Mode { get; set; }

        /// <summary>
        /// Firewall instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natGwLists")]
        private InputList<string>? _natGwLists;

        /// <summary>
        /// A list of nat gateways connected to the access mode, at least one of NewModeItems and NatgwList is passed.
        /// </summary>
        public InputList<string> NatGwLists
        {
            get => _natGwLists ?? (_natGwLists = new InputList<string>());
            set => _natGwLists = value;
        }

        /// <summary>
        /// New mode passing parameters are added, at least one of new_mode_items and nat_gw_list is passed.
        /// </summary>
        [Input("newModeItems")]
        public Input<Inputs.NatInstanceNewModeItemsGetArgs>? NewModeItems { get; set; }

        /// <summary>
        /// Bandwidth.
        /// </summary>
        [Input("width")]
        public Input<int>? Width { get; set; }

        [Input("zoneSets")]
        private InputList<string>? _zoneSets;

        /// <summary>
        /// Zone list.
        /// </summary>
        public InputList<string> ZoneSets
        {
            get => _zoneSets ?? (_zoneSets = new InputList<string>());
            set => _zoneSets = value;
        }

        public NatInstanceState()
        {
        }
    }
}
