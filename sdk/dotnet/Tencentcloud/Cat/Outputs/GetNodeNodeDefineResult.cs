// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cat.Outputs
{

    [OutputType]
    public sealed class GetNodeNodeDefineResult
    {
        /// <summary>
        /// City.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// Node ID.
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// If the node type is base, it is an availability dial test point; if it is blank, it is an advanced dial test point.
        /// </summary>
        public readonly string CodeType;
        /// <summary>
        /// District.
        /// </summary>
        public readonly string District;
        /// <summary>
        /// IP type:1 = IPv4,2 = IPv6.
        /// </summary>
        public readonly int IpType;
        /// <summary>
        /// Node area:1=Chinese Mainland,2=Hong Kong, Macao and Taiwan,3=Overseas.
        /// </summary>
        public readonly int Location;
        /// <summary>
        /// Node name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network service provider.
        /// </summary>
        public readonly string NetService;
        /// <summary>
        /// Node status: 1=running, 2=offline.
        /// </summary>
        public readonly int NodeDefineStatus;
        /// <summary>
        /// The task types supported by the node. `1`: page performance, `2`: file upload, `3`: file download, `4`: port performance, `5`: network quality, `6`: audio and video experience.
        /// </summary>
        public readonly ImmutableArray<int> TaskTypes;
        /// <summary>
        /// Node Type;1 = IDC,2 = LastMile,3 = Mobile.
        /// </summary>
        public readonly int Type;

        [OutputConstructor]
        private GetNodeNodeDefineResult(
            string city,

            string code,

            string codeType,

            string district,

            int ipType,

            int location,

            string name,

            string netService,

            int nodeDefineStatus,

            ImmutableArray<int> taskTypes,

            int type)
        {
            City = city;
            Code = code;
            CodeType = codeType;
            District = district;
            IpType = ipType;
            Location = location;
            Name = name;
            NetService = netService;
            NodeDefineStatus = nodeDefineStatus;
            TaskTypes = taskTypes;
            Type = type;
        }
    }
}
