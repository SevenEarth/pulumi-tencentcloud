// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kubernetes.Outputs
{

    [OutputType]
    public sealed class GetClusterNativeNodePoolsNodePoolNativeResult
    {
        /// <summary>
        /// Whether to enable self-healing ability.
        /// </summary>
        public readonly bool AutoRepair;
        /// <summary>
        /// Native node pool data disk list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeDataDiskResult> DataDisks;
        /// <summary>
        /// Whether to enable elastic scaling.
        /// </summary>
        public readonly bool EnableAutoscaling;
        /// <summary>
        /// Fault self-healing rule name.
        /// </summary>
        public readonly string HealthCheckPolicyName;
        /// <summary>
        /// Native node pool hostName pattern string.
        /// </summary>
        public readonly string HostNamePattern;
        /// <summary>
        /// Billing configuration for yearly and monthly models.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeInstanceChargePrepaidResult> InstanceChargePrepaids;
        /// <summary>
        /// Node billing type. `PREPAID` is a yearly and monthly subscription, `POSTPAID_BY_HOUR` is a pay-as-you-go plan. The default is `POSTPAID_BY_HOUR`.
        /// </summary>
        public readonly string InstanceChargeType;
        /// <summary>
        /// Model list.
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// Public network bandwidth settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeInternetAccessibleResult> InternetAccessibles;
        /// <summary>
        /// Node pool ssh public key id array.
        /// </summary>
        public readonly ImmutableArray<string> KeyIds;
        /// <summary>
        /// Kubelet custom parameters.
        /// </summary>
        public readonly ImmutableArray<string> KubeletArgs;
        /// <summary>
        /// Predefined scripts.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeLifecycleResult> Lifecycles;
        /// <summary>
        /// Node pool management parameter settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeManagementResult> Managements;
        /// <summary>
        /// Desired number of nodes.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// Runtime root directory.
        /// </summary>
        public readonly string RuntimeRootDir;
        /// <summary>
        /// Node pool scaling configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeScalingResult> Scalings;
        /// <summary>
        /// Security group list.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Subnet list.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// System disk configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeSystemDiskResult> SystemDisks;

        [OutputConstructor]
        private GetClusterNativeNodePoolsNodePoolNativeResult(
            bool autoRepair,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeDataDiskResult> dataDisks,

            bool enableAutoscaling,

            string healthCheckPolicyName,

            string hostNamePattern,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeInstanceChargePrepaidResult> instanceChargePrepaids,

            string instanceChargeType,

            ImmutableArray<string> instanceTypes,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeInternetAccessibleResult> internetAccessibles,

            ImmutableArray<string> keyIds,

            ImmutableArray<string> kubeletArgs,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeLifecycleResult> lifecycles,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeManagementResult> managements,

            int replicas,

            string runtimeRootDir,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeScalingResult> scalings,

            ImmutableArray<string> securityGroupIds,

            ImmutableArray<string> subnetIds,

            ImmutableArray<Outputs.GetClusterNativeNodePoolsNodePoolNativeSystemDiskResult> systemDisks)
        {
            AutoRepair = autoRepair;
            DataDisks = dataDisks;
            EnableAutoscaling = enableAutoscaling;
            HealthCheckPolicyName = healthCheckPolicyName;
            HostNamePattern = hostNamePattern;
            InstanceChargePrepaids = instanceChargePrepaids;
            InstanceChargeType = instanceChargeType;
            InstanceTypes = instanceTypes;
            InternetAccessibles = internetAccessibles;
            KeyIds = keyIds;
            KubeletArgs = kubeletArgs;
            Lifecycles = lifecycles;
            Managements = managements;
            Replicas = replicas;
            RuntimeRootDir = runtimeRootDir;
            Scalings = scalings;
            SecurityGroupIds = securityGroupIds;
            SubnetIds = subnetIds;
            SystemDisks = systemDisks;
        }
    }
}
