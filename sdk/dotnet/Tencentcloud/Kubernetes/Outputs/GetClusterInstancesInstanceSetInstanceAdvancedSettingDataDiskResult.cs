// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kubernetes.Outputs
{

    [OutputType]
    public sealed class GetClusterInstancesInstanceSetInstanceAdvancedSettingDataDiskResult
    {
        /// <summary>
        /// Whether to automatically format the disk and mount it.
        /// </summary>
        public readonly bool AutoFormatAndMount;
        /// <summary>
        /// Mount device name or partition name, required when and only when adding an existing node.
        /// </summary>
        public readonly string DiskPartition;
        /// <summary>
        /// Cloud disk size (G).
        /// </summary>
        public readonly int DiskSize;
        /// <summary>
        /// Cloud disk type.
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// File system (ext3/ext4/xfs).
        /// </summary>
        public readonly string FileSystem;
        /// <summary>
        /// Data disk mount point, the data disk is not mounted by default. Formatted ext3, ext4, xfs file system data disks will be mounted directly. Other file systems or unformatted data disks will be automatically formatted as ext4 (tlinux system formatted as xfs) and mounted. Please pay attention to backing up the data. This setting does not take effect for cloud hosts that have no data disks or multiple data disks.
        /// </summary>
        public readonly string MountTarget;

        [OutputConstructor]
        private GetClusterInstancesInstanceSetInstanceAdvancedSettingDataDiskResult(
            bool autoFormatAndMount,

            string diskPartition,

            int diskSize,

            string diskType,

            string fileSystem,

            string mountTarget)
        {
            AutoFormatAndMount = autoFormatAndMount;
            DiskPartition = diskPartition;
            DiskSize = diskSize;
            DiskType = diskType;
            FileSystem = fileSystem;
            MountTarget = mountTarget;
        }
    }
}
