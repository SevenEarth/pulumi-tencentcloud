// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Pts.Outputs
{

    [OutputType]
    public sealed class ScenarioDataset
    {
        /// <summary>
        /// File ID.
        /// </summary>
        public readonly string? FileId;
        /// <summary>
        /// Header data row.
        /// </summary>
        public readonly ImmutableArray<string> HeadLines;
        /// <summary>
        /// Parameter name array.
        /// </summary>
        public readonly ImmutableArray<string> HeaderColumns;
        /// <summary>
        /// Whether the first line is the parameter name.
        /// </summary>
        public readonly bool HeaderInFile;
        /// <summary>
        /// Number of file lines.
        /// </summary>
        public readonly int? LineCount;
        /// <summary>
        /// The file name where the test dataset is located.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of file bytes.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// Test whether the dataset is fragmented.
        /// </summary>
        public readonly bool Split;
        /// <summary>
        /// Trailing data row.
        /// </summary>
        public readonly ImmutableArray<string> TailLines;
        /// <summary>
        /// File type.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Update time.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private ScenarioDataset(
            string? fileId,

            ImmutableArray<string> headLines,

            ImmutableArray<string> headerColumns,

            bool headerInFile,

            int? lineCount,

            string name,

            int? size,

            bool split,

            ImmutableArray<string> tailLines,

            string? type,

            string? updatedAt)
        {
            FileId = fileId;
            HeadLines = headLines;
            HeaderColumns = headerColumns;
            HeaderInFile = headerInFile;
            LineCount = lineCount;
            Name = name;
            Size = size;
            Split = split;
            TailLines = tailLines;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
