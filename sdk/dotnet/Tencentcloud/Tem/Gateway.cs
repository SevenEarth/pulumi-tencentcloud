// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tem
{
    /// <summary>
    /// Provides a resource to create a tem gateway
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gateway = new Tencentcloud.Tem.Gateway("gateway", new()
    ///     {
    ///         Ingress = new Tencentcloud.Tem.Inputs.GatewayIngressArgs
    ///         {
    ///             AddressIpVersion = "IPV4",
    ///             EnvironmentId = "en-853mggjm",
    ///             IngressName = "demo",
    ///             Mixed = false,
    ///             RewriteType = "NONE",
    ///             Rules = new[]
    ///             {
    ///                 new Tencentcloud.Tem.Inputs.GatewayIngressRuleArgs
    ///                 {
    ///                     Host = "test.com",
    ///                     Http = new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpArgs
    ///                     {
    ///                         Paths = new[]
    ///                         {
    ///                             new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpPathArgs
    ///                             {
    ///                                 Backend = new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpPathBackendArgs
    ///                                 {
    ///                                     ServiceName = "demo",
    ///                                     ServicePort = 80,
    ///                                 },
    ///                                 Path = "/",
    ///                             },
    ///                         },
    ///                     },
    ///                     Protocol = "http",
    ///                 },
    ///                 new Tencentcloud.Tem.Inputs.GatewayIngressRuleArgs
    ///                 {
    ///                     Host = "hello.com",
    ///                     Http = new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpArgs
    ///                     {
    ///                         Paths = new[]
    ///                         {
    ///                             new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpPathArgs
    ///                             {
    ///                                 Backend = new Tencentcloud.Tem.Inputs.GatewayIngressRuleHttpPathBackendArgs
    ///                                 {
    ///                                     ServiceName = "hello",
    ///                                     ServicePort = 36000,
    ///                                 },
    ///                                 Path = "/",
    ///                             },
    ///                         },
    ///                     },
    ///                     Protocol = "http",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// tem gateway can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Tem/gateway:Gateway gateway environmentId#gatewayName
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Tem/gateway:Gateway")]
    public partial class Gateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// gateway properties.
        /// </summary>
        [Output("ingress")]
        public Output<Outputs.GatewayIngress?> Ingress { get; private set; } = null!;


        /// <summary>
        /// Create a Gateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Gateway(string name, GatewayArgs? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tem/gateway:Gateway", name, args ?? new GatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Gateway(string name, Input<string> id, GatewayState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tem/gateway:Gateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Gateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Gateway Get(string name, Input<string> id, GatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new Gateway(name, id, state, options);
        }
    }

    public sealed class GatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// gateway properties.
        /// </summary>
        [Input("ingress")]
        public Input<Inputs.GatewayIngressArgs>? Ingress { get; set; }

        public GatewayArgs()
        {
        }
        public static new GatewayArgs Empty => new GatewayArgs();
    }

    public sealed class GatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// gateway properties.
        /// </summary>
        [Input("ingress")]
        public Input<Inputs.GatewayIngressGetArgs>? Ingress { get; set; }

        public GatewayState()
        {
        }
        public static new GatewayState Empty => new GatewayState();
    }
}
