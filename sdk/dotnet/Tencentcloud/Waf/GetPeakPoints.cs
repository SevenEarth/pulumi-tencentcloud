// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Waf
{
    public static class GetPeakPoints
    {
        /// <summary>
        /// Use this data source to query detailed information of waf peak_points
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Query
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Waf.GetPeakPoints.Invoke(new()
        ///     {
        ///         FromTime = "2023-09-01 00:00:00",
        ///         ToTime = "2023-09-07 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Query by filter
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Waf.GetPeakPoints.Invoke(new()
        ///     {
        ///         Domain = "domain.com",
        ///         Edition = "clb-waf",
        ///         FromTime = "2023-09-01 00:00:00",
        ///         InstanceId = "waf_2kxtlbky00b2v1fn",
        ///         MetricName = "access",
        ///         ToTime = "2023-09-07 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPeakPointsResult> InvokeAsync(GetPeakPointsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeakPointsResult>("tencentcloud:Waf/getPeakPoints:getPeakPoints", args ?? new GetPeakPointsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of waf peak_points
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Query
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Waf.GetPeakPoints.Invoke(new()
        ///     {
        ///         FromTime = "2023-09-01 00:00:00",
        ///         ToTime = "2023-09-07 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Query by filter
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Tencentcloud.Waf.GetPeakPoints.Invoke(new()
        ///     {
        ///         Domain = "domain.com",
        ///         Edition = "clb-waf",
        ///         FromTime = "2023-09-01 00:00:00",
        ///         InstanceId = "waf_2kxtlbky00b2v1fn",
        ///         MetricName = "access",
        ///         ToTime = "2023-09-07 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPeakPointsResult> Invoke(GetPeakPointsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeakPointsResult>("tencentcloud:Waf/getPeakPoints:getPeakPoints", args ?? new GetPeakPointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeakPointsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain name to be queried. If all domain name data is queried, this parameter is not filled in.
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// Only support sparta-waf and clb-waf. If not passed, there will be no filtering.
        /// </summary>
        [Input("edition")]
        public string? Edition { get; set; }

        /// <summary>
        /// Begin time.
        /// </summary>
        [Input("fromTime", required: true)]
        public string FromTime { get; set; } = null!;

        /// <summary>
        /// WAF instance ID, if not passed, there will be no filtering.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// Thirteen values are available: access-Peak qps trend chart; botAccess- bot peak qps trend chart; down-Downstream peak bandwidth trend chart; up-Upstream peak bandwidth trend chart; attack-Trend chart of total number of web attacks; cc-Trend chart of total number of CC attacks; StatusServerError-Trend chart of the number of status codes returned by WAF to the server; StatusClientError-Trend chart of the number of status codes returned by WAF to the client; StatusRedirect-Trend chart of the number of status codes returned by WAF to the client; StatusOk-Trend chart of the number of status codes returned by WAF to the client; UpstreamServerError-Trend chart of the number of status codes returned to WAF by the origin site; UpstreamClientError-Trend chart of the number of status codes returned to WAF by the origin site; UpstreamRedirect-Trend chart of the number of status codes returned to WAF by the origin site.
        /// </summary>
        [Input("metricName")]
        public string? MetricName { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// End time.
        /// </summary>
        [Input("toTime", required: true)]
        public string ToTime { get; set; } = null!;

        public GetPeakPointsArgs()
        {
        }
        public static new GetPeakPointsArgs Empty => new GetPeakPointsArgs();
    }

    public sealed class GetPeakPointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain name to be queried. If all domain name data is queried, this parameter is not filled in.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Only support sparta-waf and clb-waf. If not passed, there will be no filtering.
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        /// <summary>
        /// Begin time.
        /// </summary>
        [Input("fromTime", required: true)]
        public Input<string> FromTime { get; set; } = null!;

        /// <summary>
        /// WAF instance ID, if not passed, there will be no filtering.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Thirteen values are available: access-Peak qps trend chart; botAccess- bot peak qps trend chart; down-Downstream peak bandwidth trend chart; up-Upstream peak bandwidth trend chart; attack-Trend chart of total number of web attacks; cc-Trend chart of total number of CC attacks; StatusServerError-Trend chart of the number of status codes returned by WAF to the server; StatusClientError-Trend chart of the number of status codes returned by WAF to the client; StatusRedirect-Trend chart of the number of status codes returned by WAF to the client; StatusOk-Trend chart of the number of status codes returned by WAF to the client; UpstreamServerError-Trend chart of the number of status codes returned to WAF by the origin site; UpstreamClientError-Trend chart of the number of status codes returned to WAF by the origin site; UpstreamRedirect-Trend chart of the number of status codes returned to WAF by the origin site.
        /// </summary>
        [Input("metricName")]
        public Input<string>? MetricName { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// End time.
        /// </summary>
        [Input("toTime", required: true)]
        public Input<string> ToTime { get; set; } = null!;

        public GetPeakPointsInvokeArgs()
        {
        }
        public static new GetPeakPointsInvokeArgs Empty => new GetPeakPointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeakPointsResult
    {
        public readonly string? Domain;
        public readonly string? Edition;
        public readonly string FromTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly string? MetricName;
        /// <summary>
        /// point list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPeakPointsPointResult> Points;
        public readonly string? ResultOutputFile;
        public readonly string ToTime;

        [OutputConstructor]
        private GetPeakPointsResult(
            string? domain,

            string? edition,

            string fromTime,

            string id,

            string? instanceId,

            string? metricName,

            ImmutableArray<Outputs.GetPeakPointsPointResult> points,

            string? resultOutputFile,

            string toTime)
        {
            Domain = domain;
            Edition = edition;
            FromTime = fromTime;
            Id = id;
            InstanceId = instanceId;
            MetricName = metricName;
            Points = points;
            ResultOutputFile = resultOutputFile;
            ToTime = toTime;
        }
    }
}
