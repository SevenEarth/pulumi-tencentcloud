// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Instances
{
    public static class GetSet
    {
        /// <summary>
        /// Use this data source to query cvm instances in parallel.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Tencentcloud.Instances.GetSet.InvokeAsync(new Tencentcloud.Instances.GetSetArgs
        ///         {
        ///             VpcId = "vpc-4owdpnwr",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSetResult> InvokeAsync(GetSetArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSetResult>("tencentcloud:Instances/getSet:getSet", args ?? new GetSetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query cvm instances in parallel.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Tencentcloud.Instances.GetSet.InvokeAsync(new Tencentcloud.Instances.GetSetArgs
        ///         {
        ///             VpcId = "vpc-4owdpnwr",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSetResult> Invoke(GetSetInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSetResult>("tencentcloud:Instances/getSet:getSet", args ?? new GetSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The available zone that the CVM instance locates at.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        /// <summary>
        /// ID of the instances to be queried.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// Name of the instances to be queried.
        /// </summary>
        [Input("instanceName")]
        public string? InstanceName { get; set; }

        /// <summary>
        /// The project CVM belongs to.
        /// </summary>
        [Input("projectId")]
        public int? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of a vpc subnetwork.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tags of the instance.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the vpc to be queried.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetSetArgs()
        {
        }
    }

    public sealed class GetSetInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The available zone that the CVM instance locates at.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// ID of the instances to be queried.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Name of the instances to be queried.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The project CVM belongs to.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of a vpc subnetwork.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of the instance.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the vpc to be queried.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetSetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSetResult
    {
        /// <summary>
        /// The available zone that the CVM instance locates at.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the instances.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// An information list of cvm instance. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSetInstanceListResult> InstanceLists;
        /// <summary>
        /// Name of the instances.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The project CVM belongs to.
        /// </summary>
        public readonly int? ProjectId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// ID of a vpc subnetwork.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// Tags of the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// ID of the vpc.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetSetResult(
            string? availabilityZone,

            string id,

            string? instanceId,

            ImmutableArray<Outputs.GetSetInstanceListResult> instanceLists,

            string? instanceName,

            int? projectId,

            string? resultOutputFile,

            string? subnetId,

            ImmutableDictionary<string, object>? tags,

            string? vpcId)
        {
            AvailabilityZone = availabilityZone;
            Id = id;
            InstanceId = instanceId;
            InstanceLists = instanceLists;
            InstanceName = instanceName;
            ProjectId = projectId;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            Tags = tags;
            VpcId = vpcId;
        }
    }
}
