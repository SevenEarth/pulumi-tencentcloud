// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tse.Outputs
{

    [OutputType]
    public sealed class GetGatewaysResultGatewayListResult
    {
        /// <summary>
        /// auto renew flag, `0`: default status, `1`: auto renew, `2`: auto not renew.
        /// </summary>
        public readonly int AutoRenewFlag;
        /// <summary>
        /// create time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// expire date, for prepaid type.Note: This field may return null, indicating that a valid value is not available.
        /// </summary>
        public readonly string CurDeadline;
        /// <summary>
        /// description of gateway.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// whether to enable CLS log.
        /// </summary>
        public readonly bool EnableCls;
        /// <summary>
        /// whether to open the public network of client.Note: This field may return null, indicating that a valid value is not available.
        /// </summary>
        public readonly bool EnableInternet;
        /// <summary>
        /// engine region of gateway.
        /// </summary>
        public readonly string EngineRegion;
        /// <summary>
        /// product version. `TRIAL`, `STANDARD`(default value), `PROFESSIONAL`.
        /// </summary>
        public readonly string FeatureVersion;
        /// <summary>
        /// gateway ID.
        /// </summary>
        public readonly string GatewayId;
        /// <summary>
        /// minor version of gateway.
        /// </summary>
        public readonly string GatewayMinorVersion;
        /// <summary>
        /// gateway version. Reference value: `2.4.1`, `2.5.1`.
        /// </summary>
        public readonly string GatewayVersion;
        /// <summary>
        /// ingress class name.
        /// </summary>
        public readonly string IngressClassName;
        /// <summary>
        /// the port information that the instance monitors.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListInstancePortResult> InstancePorts;
        /// <summary>
        /// public network outbound traffic bandwidth.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// trade type of internet. `BANDWIDTH`, `TRAFFIC`.
        /// </summary>
        public readonly string InternetPayMode;
        /// <summary>
        /// isolation time, used when the gateway is isolated.
        /// </summary>
        public readonly string IsolateTime;
        /// <summary>
        /// load balance type of public internet.
        /// </summary>
        public readonly string LoadBalancerType;
        /// <summary>
        /// filter name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// original node config.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListNodeConfigResult> NodeConfigs;
        /// <summary>
        /// addresses of public internet.
        /// </summary>
        public readonly ImmutableArray<string> PublicIpAddresses;
        /// <summary>
        /// status of gateway. May return values: `Creating`, `CreateFailed`, `Running`, `Modifying`, `UpdatingSpec`, `UpdateFailed`, `Deleting`, `DeleteFailed`, `Isolating`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// tags information of gatewayNote: This field may return null, indicating that a valid value is not available.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListTagResult> Tags;
        /// <summary>
        /// trade type. `0`: postpaid, `1`: Prepaid.
        /// </summary>
        public readonly int TradeType;
        /// <summary>
        /// gateway type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// vpc information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListVpcConfigResult> VpcConfigs;

        [OutputConstructor]
        private GetGatewaysResultGatewayListResult(
            int autoRenewFlag,

            string createTime,

            string curDeadline,

            string description,

            bool enableCls,

            bool enableInternet,

            string engineRegion,

            string featureVersion,

            string gatewayId,

            string gatewayMinorVersion,

            string gatewayVersion,

            string ingressClassName,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListInstancePortResult> instancePorts,

            int internetMaxBandwidthOut,

            string internetPayMode,

            string isolateTime,

            string loadBalancerType,

            string name,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListNodeConfigResult> nodeConfigs,

            ImmutableArray<string> publicIpAddresses,

            string status,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListTagResult> tags,

            int tradeType,

            string type,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListVpcConfigResult> vpcConfigs)
        {
            AutoRenewFlag = autoRenewFlag;
            CreateTime = createTime;
            CurDeadline = curDeadline;
            Description = description;
            EnableCls = enableCls;
            EnableInternet = enableInternet;
            EngineRegion = engineRegion;
            FeatureVersion = featureVersion;
            GatewayId = gatewayId;
            GatewayMinorVersion = gatewayMinorVersion;
            GatewayVersion = gatewayVersion;
            IngressClassName = ingressClassName;
            InstancePorts = instancePorts;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            InternetPayMode = internetPayMode;
            IsolateTime = isolateTime;
            LoadBalancerType = loadBalancerType;
            Name = name;
            NodeConfigs = nodeConfigs;
            PublicIpAddresses = publicIpAddresses;
            Status = status;
            Tags = tags;
            TradeType = tradeType;
            Type = type;
            VpcConfigs = vpcConfigs;
        }
    }
}
