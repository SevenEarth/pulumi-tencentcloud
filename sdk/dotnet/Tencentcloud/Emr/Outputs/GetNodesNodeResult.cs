// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Emr.Outputs
{

    [OutputType]
    public sealed class GetNodesNodeResult
    {
        /// <summary>
        /// User APPID.
        /// </summary>
        public readonly int AppId;
        /// <summary>
        /// Application time.
        /// </summary>
        public readonly string ApplyTime;
        /// <summary>
        /// Whether it is an autoscaling node, 0 is a normal node, and 1 is an autoscaling node.
        /// </summary>
        public readonly int AutoFlag;
        /// <summary>
        /// Database IP.
        /// </summary>
        public readonly string CdbIp;
        /// <summary>
        /// Database information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodesNodeCdbNodeInfoResult> CdbNodeInfos;
        /// <summary>
        /// Database port.
        /// </summary>
        public readonly int CdbPort;
        /// <summary>
        /// The type of payment.
        /// </summary>
        public readonly int ChargeType;
        /// <summary>
        /// Number of node cores.
        /// </summary>
        public readonly int CpuNum;
        /// <summary>
        /// Whether this node is destroyable, 1 can be destroyed, 0 is not destroyable.
        /// </summary>
        public readonly int Destroyable;
        /// <summary>
        /// Device identity.
        /// </summary>
        public readonly string DeviceClass;
        /// <summary>
        /// Hard disk size.
        /// </summary>
        public readonly string DiskSize;
        /// <summary>
        /// Floating specification value json string.
        /// </summary>
        public readonly string DynamicPodSpec;
        /// <summary>
        /// Node resource ID.
        /// </summary>
        public readonly string EmrResourceId;
        /// <summary>
        /// Expiration time.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// Node type. 0: common node; 1: master node; 2: core node; 3: task node.
        /// </summary>
        public readonly int Flag;
        /// <summary>
        /// Release time.
        /// </summary>
        public readonly string FreeTime;
        /// <summary>
        /// Resource type: Support all/host/pod, default is all.
        /// </summary>
        public readonly string HardwareResourceType;
        /// <summary>
        /// Hard disk capacity.
        /// </summary>
        public readonly int HwDiskSize;
        /// <summary>
        /// Hard disk capacity description.
        /// </summary>
        public readonly string HwDiskSizeDesc;
        /// <summary>
        /// Memory capacity.
        /// </summary>
        public readonly int HwMemSize;
        /// <summary>
        /// Memory capacity description.
        /// </summary>
        public readonly string HwMemSizeDesc;
        /// <summary>
        /// Intranet IP.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// Renewal logo.
        /// </summary>
        public readonly int IsAutoRenew;
        /// <summary>
        /// Floating specifications, 1 yes, 0 no.
        /// </summary>
        public readonly int IsDynamicSpec;
        /// <summary>
        /// Multi-cloud disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodesNodeMcMultiDiskResult> McMultiDisks;
        /// <summary>
        /// Node memory description.
        /// </summary>
        public readonly string MemDesc;
        /// <summary>
        /// Node memory.
        /// </summary>
        public readonly int MemSize;
        /// <summary>
        /// Supports variations.
        /// </summary>
        public readonly int Mutable;
        /// <summary>
        /// Node description.
        /// </summary>
        public readonly string NameTag;
        /// <summary>
        /// Machine instance ID.
        /// </summary>
        public readonly string OrderNo;
        /// <summary>
        /// The node is located in the region.
        /// </summary>
        public readonly int RegionId;
        /// <summary>
        /// The size of the system disk.
        /// </summary>
        public readonly int RootSize;
        /// <summary>
        /// Serial number.
        /// </summary>
        public readonly string SerialNo;
        /// <summary>
        /// Node deployment service.
        /// </summary>
        public readonly string Services;
        /// <summary>
        /// Node specifications.
        /// </summary>
        public readonly string Spec;
        /// <summary>
        /// Disk type.
        /// </summary>
        public readonly int StorageType;
        /// <summary>
        /// Whether to support change billing type 1 Yes and 0 No.
        /// </summary>
        public readonly int SupportModifyPayMode;
        /// <summary>
        /// The label of the node binding.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodesNodeTagResult> Tags;
        /// <summary>
        /// The master node is bound to the Internet IP address.
        /// </summary>
        public readonly string WanIp;
        /// <summary>
        /// Zone where the node is located.
        /// </summary>
        public readonly int ZoneId;

        [OutputConstructor]
        private GetNodesNodeResult(
            int appId,

            string applyTime,

            int autoFlag,

            string cdbIp,

            ImmutableArray<Outputs.GetNodesNodeCdbNodeInfoResult> cdbNodeInfos,

            int cdbPort,

            int chargeType,

            int cpuNum,

            int destroyable,

            string deviceClass,

            string diskSize,

            string dynamicPodSpec,

            string emrResourceId,

            string expireTime,

            int flag,

            string freeTime,

            string hardwareResourceType,

            int hwDiskSize,

            string hwDiskSizeDesc,

            int hwMemSize,

            string hwMemSizeDesc,

            string ip,

            int isAutoRenew,

            int isDynamicSpec,

            ImmutableArray<Outputs.GetNodesNodeMcMultiDiskResult> mcMultiDisks,

            string memDesc,

            int memSize,

            int mutable,

            string nameTag,

            string orderNo,

            int regionId,

            int rootSize,

            string serialNo,

            string services,

            string spec,

            int storageType,

            int supportModifyPayMode,

            ImmutableArray<Outputs.GetNodesNodeTagResult> tags,

            string wanIp,

            int zoneId)
        {
            AppId = appId;
            ApplyTime = applyTime;
            AutoFlag = autoFlag;
            CdbIp = cdbIp;
            CdbNodeInfos = cdbNodeInfos;
            CdbPort = cdbPort;
            ChargeType = chargeType;
            CpuNum = cpuNum;
            Destroyable = destroyable;
            DeviceClass = deviceClass;
            DiskSize = diskSize;
            DynamicPodSpec = dynamicPodSpec;
            EmrResourceId = emrResourceId;
            ExpireTime = expireTime;
            Flag = flag;
            FreeTime = freeTime;
            HardwareResourceType = hardwareResourceType;
            HwDiskSize = hwDiskSize;
            HwDiskSizeDesc = hwDiskSizeDesc;
            HwMemSize = hwMemSize;
            HwMemSizeDesc = hwMemSizeDesc;
            Ip = ip;
            IsAutoRenew = isAutoRenew;
            IsDynamicSpec = isDynamicSpec;
            McMultiDisks = mcMultiDisks;
            MemDesc = memDesc;
            MemSize = memSize;
            Mutable = mutable;
            NameTag = nameTag;
            OrderNo = orderNo;
            RegionId = regionId;
            RootSize = rootSize;
            SerialNo = serialNo;
            Services = services;
            Spec = spec;
            StorageType = storageType;
            SupportModifyPayMode = supportModifyPayMode;
            Tags = tags;
            WanIp = wanIp;
            ZoneId = zoneId;
        }
    }
}
