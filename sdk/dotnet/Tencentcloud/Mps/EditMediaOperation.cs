// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mps
{
    /// <summary>
    /// Provides a resource to create a mps edit_media_operation
    /// 
    /// ## Example Usage
    /// ### Operation through COS
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = Pulumi.Tencentcloud;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var output = new Tencentcloud.Cos.Bucket("output", new Tencentcloud.Cos.BucketArgs
    ///         {
    ///             Bucket = $"tf-bucket-mps-output-{local.App_id}",
    ///         });
    ///         var @object = Output.Create(Tencentcloud.Cos.GetBucketObject.InvokeAsync(new Tencentcloud.Cos.GetBucketObjectArgs
    ///         {
    ///             Bucket = $"keep-bucket-{local.App_id}",
    ///             Key = "/mps-test/test.mov",
    ///         }));
    ///         var operation = new Tencentcloud.Mps.EditMediaOperation("operation", new Tencentcloud.Mps.EditMediaOperationArgs
    ///         {
    ///             FileInfos = 
    ///             {
    ///                 new Tencentcloud.Mps.Inputs.EditMediaOperationFileInfoArgs
    ///                 {
    ///                     InputInfo = new Tencentcloud.Mps.Inputs.EditMediaOperationFileInfoInputInfoArgs
    ///                     {
    ///                         Type = "COS",
    ///                         CosInputInfo = new Tencentcloud.Mps.Inputs.EditMediaOperationFileInfoInputInfoCosInputInfoArgs
    ///                         {
    ///                             Bucket = @object.Apply(@object =&gt; @object.Bucket),
    ///                             Region = "%s",
    ///                             Object = @object.Apply(@object =&gt; @object.Key),
    ///                         },
    ///                     },
    ///                     StartTimeOffset = 60,
    ///                     EndTimeOffset = 120,
    ///                 },
    ///             },
    ///             OutputStorage = new Tencentcloud.Mps.Inputs.EditMediaOperationOutputStorageArgs
    ///             {
    ///                 Type = "COS",
    ///                 CosOutputStorage = new Tencentcloud.Mps.Inputs.EditMediaOperationOutputStorageCosOutputStorageArgs
    ///                 {
    ///                     Bucket = output.CosBucket,
    ///                     Region = "%s",
    ///                 },
    ///             },
    ///             OutputObjectPath = "/output",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Mps/editMediaOperation:EditMediaOperation")]
    public partial class EditMediaOperation : Pulumi.CustomResource
    {
        /// <summary>
        /// Information of input video file.
        /// </summary>
        [Output("fileInfos")]
        public Output<ImmutableArray<Outputs.EditMediaOperationFileInfo>> FileInfos { get; private set; } = null!;

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Output("outputConfig")]
        public Output<Outputs.EditMediaOperationOutputConfig?> OutputConfig { get; private set; } = null!;

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Output("outputObjectPath")]
        public Output<string> OutputObjectPath { get; private set; } = null!;

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Output("outputStorage")]
        public Output<Outputs.EditMediaOperationOutputStorage> OutputStorage { get; private set; } = null!;

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Output("sessionContext")]
        public Output<string?> SessionContext { get; private set; } = null!;

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered, no deduplication will be performed.
        /// </summary>
        [Output("sessionId")]
        public Output<string?> SessionId { get; private set; } = null!;

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Output("taskNotifyConfig")]
        public Output<Outputs.EditMediaOperationTaskNotifyConfig?> TaskNotifyConfig { get; private set; } = null!;

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0 will be used.
        /// </summary>
        [Output("tasksPriority")]
        public Output<int?> TasksPriority { get; private set; } = null!;


        /// <summary>
        /// Create a EditMediaOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EditMediaOperation(string name, EditMediaOperationArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/editMediaOperation:EditMediaOperation", name, args ?? new EditMediaOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EditMediaOperation(string name, Input<string> id, EditMediaOperationState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/editMediaOperation:EditMediaOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EditMediaOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EditMediaOperation Get(string name, Input<string> id, EditMediaOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new EditMediaOperation(name, id, state, options);
        }
    }

    public sealed class EditMediaOperationArgs : Pulumi.ResourceArgs
    {
        [Input("fileInfos", required: true)]
        private InputList<Inputs.EditMediaOperationFileInfoArgs>? _fileInfos;

        /// <summary>
        /// Information of input video file.
        /// </summary>
        public InputList<Inputs.EditMediaOperationFileInfoArgs> FileInfos
        {
            get => _fileInfos ?? (_fileInfos = new InputList<Inputs.EditMediaOperationFileInfoArgs>());
            set => _fileInfos = value;
        }

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Input("outputConfig")]
        public Input<Inputs.EditMediaOperationOutputConfigArgs>? OutputConfig { get; set; }

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Input("outputObjectPath", required: true)]
        public Input<string> OutputObjectPath { get; set; } = null!;

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Input("outputStorage", required: true)]
        public Input<Inputs.EditMediaOperationOutputStorageArgs> OutputStorage { get; set; } = null!;

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Input("sessionContext")]
        public Input<string>? SessionContext { get; set; }

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered, no deduplication will be performed.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Input("taskNotifyConfig")]
        public Input<Inputs.EditMediaOperationTaskNotifyConfigArgs>? TaskNotifyConfig { get; set; }

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0 will be used.
        /// </summary>
        [Input("tasksPriority")]
        public Input<int>? TasksPriority { get; set; }

        public EditMediaOperationArgs()
        {
        }
    }

    public sealed class EditMediaOperationState : Pulumi.ResourceArgs
    {
        [Input("fileInfos")]
        private InputList<Inputs.EditMediaOperationFileInfoGetArgs>? _fileInfos;

        /// <summary>
        /// Information of input video file.
        /// </summary>
        public InputList<Inputs.EditMediaOperationFileInfoGetArgs> FileInfos
        {
            get => _fileInfos ?? (_fileInfos = new InputList<Inputs.EditMediaOperationFileInfoGetArgs>());
            set => _fileInfos = value;
        }

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Input("outputConfig")]
        public Input<Inputs.EditMediaOperationOutputConfigGetArgs>? OutputConfig { get; set; }

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Input("outputObjectPath")]
        public Input<string>? OutputObjectPath { get; set; }

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Input("outputStorage")]
        public Input<Inputs.EditMediaOperationOutputStorageGetArgs>? OutputStorage { get; set; }

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Input("sessionContext")]
        public Input<string>? SessionContext { get; set; }

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered, no deduplication will be performed.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Input("taskNotifyConfig")]
        public Input<Inputs.EditMediaOperationTaskNotifyConfigGetArgs>? TaskNotifyConfig { get; set; }

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0 will be used.
        /// </summary>
        [Input("tasksPriority")]
        public Input<int>? TasksPriority { get; set; }

        public EditMediaOperationState()
        {
        }
    }
}
