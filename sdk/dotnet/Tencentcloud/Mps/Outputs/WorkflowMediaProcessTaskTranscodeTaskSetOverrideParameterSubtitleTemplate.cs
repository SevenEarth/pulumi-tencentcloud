// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mps.Outputs
{

    [OutputType]
    public sealed class WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate
    {
        /// <summary>
        /// Text transparency, value range: (0, 1].0: fully transparent.1: fully opaque.Default: 1.
        /// </summary>
        public readonly double? FontAlpha;
        /// <summary>
        /// Font color, format: 0xRRGGBB, default value: 0xFFFFFF (white).
        /// </summary>
        public readonly string? FontColor;
        /// <summary>
        /// Font size, format: Npx, N is a value, if not specified, the subtitle file shall prevail.
        /// </summary>
        public readonly string? FontSize;
        /// <summary>
        /// Font type.hei.ttf, song.ttf, simkai.ttf, arial.ttf.Default: hei.ttf.
        /// </summary>
        public readonly string? FontType;
        /// <summary>
        /// The address of the subtitle file to be compressed into the video.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Specifies the subtitle track to be compressed into the video. If there is a specified Path, the Path has a higher priority. Path and StreamIndex specify at least one.
        /// </summary>
        public readonly int? StreamIndex;

        [OutputConstructor]
        private WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate(
            double? fontAlpha,

            string? fontColor,

            string? fontSize,

            string? fontType,

            string? path,

            int? streamIndex)
        {
            FontAlpha = fontAlpha;
            FontColor = fontColor;
            FontSize = fontSize;
            FontType = fontType;
            Path = path;
            StreamIndex = streamIndex;
        }
    }
}
