// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mps.Outputs
{

    [OutputType]
    public sealed class ProcessLiveStreamOperationTaskNotifyConfig
    {
        /// <summary>
        /// CMQ model. There are two types: `Queue` and `Topic`. Currently, only `Queue` is supported.
        /// </summary>
        public readonly string? CmqModel;
        /// <summary>
        /// CMQ region, such as `sh` and `bj`.
        /// </summary>
        public readonly string? CmqRegion;
        /// <summary>
        /// The notification type, `CMQ` by default. If this parameter is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`.Note: If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.
        /// </summary>
        public readonly string? NotifyType;
        /// <summary>
        /// HTTP callback URL, required if `NotifyType` is set to `URL`.
        /// </summary>
        public readonly string? NotifyUrl;
        /// <summary>
        /// This parameter is valid when the model is `Queue`, indicating the name of the CMQ queue for receiving event notifications.
        /// </summary>
        public readonly string? QueueName;
        /// <summary>
        /// This parameter is valid when the model is `Topic`, indicating the name of the CMQ topic for receiving event notifications.
        /// </summary>
        public readonly string? TopicName;

        [OutputConstructor]
        private ProcessLiveStreamOperationTaskNotifyConfig(
            string? cmqModel,

            string? cmqRegion,

            string? notifyType,

            string? notifyUrl,

            string? queueName,

            string? topicName)
        {
            CmqModel = cmqModel;
            CmqRegion = cmqRegion;
            NotifyType = notifyType;
            NotifyUrl = notifyUrl;
            QueueName = queueName;
            TopicName = topicName;
        }
    }
}
