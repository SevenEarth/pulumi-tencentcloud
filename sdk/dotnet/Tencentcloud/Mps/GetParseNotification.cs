// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Mps
{
    public static class GetParseNotification
    {
        /// <summary>
        /// Use this data source to query detailed information of mps parse_notification
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var parseNotification = Tencentcloud.Mps.GetParseNotification.Invoke(new()
        ///     {
        ///         Content = "your_content",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetParseNotificationResult> InvokeAsync(GetParseNotificationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParseNotificationResult>("tencentcloud:Mps/getParseNotification:getParseNotification", args ?? new GetParseNotificationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mps parse_notification
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var parseNotification = Tencentcloud.Mps.GetParseNotification.Invoke(new()
        ///     {
        ///         Content = "your_content",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetParseNotificationResult> Invoke(GetParseNotificationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParseNotificationResult>("tencentcloud:Mps/getParseNotification:getParseNotification", args ?? new GetParseNotificationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParseNotificationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Event notification obtained from CMQ.
        /// </summary>
        [Input("content", required: true)]
        public string Content { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetParseNotificationArgs()
        {
        }
        public static new GetParseNotificationArgs Empty => new GetParseNotificationArgs();
    }

    public sealed class GetParseNotificationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Event notification obtained from CMQ.
        /// </summary>
        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetParseNotificationInvokeArgs()
        {
        }
        public static new GetParseNotificationInvokeArgs Empty => new GetParseNotificationInvokeArgs();
    }


    [OutputType]
    public sealed class GetParseNotificationResult
    {
        public readonly string Content;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetParseNotificationResult(
            string content,

            string id,

            string? resultOutputFile)
        {
            Content = content;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
