// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetResourceDashboardResourceDashboardSetResult
    {
        /// <summary>
        /// Relational database.
        /// </summary>
        public readonly int Cdb;
        /// <summary>
        /// Cloud file storage - CFS.
        /// </summary>
        public readonly int Cfs;
        /// <summary>
        /// Cloud Kafka (CKafka).
        /// </summary>
        public readonly int Ckafka;
        /// <summary>
        /// Classic link.
        /// </summary>
        public readonly int ClassicLink;
        /// <summary>
        /// TencentDB for Memcached.
        /// </summary>
        public readonly int Cmem;
        /// <summary>
        /// Cnas.
        /// </summary>
        public readonly int Cnas;
        /// <summary>
        /// Cloud time series database.
        /// </summary>
        public readonly int CtsDb;
        /// <summary>
        /// Cloud Virtual Machine.
        /// </summary>
        public readonly int Cvm;
        /// <summary>
        /// An enterprise-grade TencentDB - CynosDB for MySQL.
        /// </summary>
        public readonly int CynosDbMysql;
        /// <summary>
        /// Enterprise TencentDB - CynosDB for Postgres.
        /// </summary>
        public readonly int CynosDbPostgres;
        /// <summary>
        /// Cloud database audit.
        /// </summary>
        public readonly int DbAudit;
        /// <summary>
        /// A distributed cloud database - TencentDB for TDSQL.
        /// </summary>
        public readonly int Dcdb;
        /// <summary>
        /// Direct Connect gateway.
        /// </summary>
        public readonly int Dcg;
        /// <summary>
        /// ElasticSearch Service.
        /// </summary>
        public readonly int ElasticSearch;
        /// <summary>
        /// EMR cluster.
        /// </summary>
        public readonly int Emr;
        /// <summary>
        /// Flow log.
        /// </summary>
        public readonly int FlowLog;
        /// <summary>
        /// Snova data warehouse.
        /// </summary>
        public readonly int Greenplumn;
        /// <summary>
        /// Grocery.
        /// </summary>
        public readonly int Grocery;
        /// <summary>
        /// Data encryption service.
        /// </summary>
        public readonly int Hsm;
        /// <summary>
        /// Total number of used IPs except for CVM IP, EIP and network probe IP. The three IP types will be independently counted.
        /// </summary>
        public readonly int Ip;
        /// <summary>
        /// Itop.
        /// </summary>
        public readonly int Itop;
        /// <summary>
        /// Load balancer.
        /// </summary>
        public readonly int Lb;
        /// <summary>
        /// TencentDB for MariaDB (TDSQL).
        /// </summary>
        public readonly int MariaDb;
        /// <summary>
        /// TencentDB for MongoDB.
        /// </summary>
        public readonly int MongoDb;
        /// <summary>
        /// Network attached storage.
        /// </summary>
        public readonly int Nas;
        /// <summary>
        /// NAT gateway.
        /// </summary>
        public readonly int Nat;
        /// <summary>
        /// Network ACL.
        /// </summary>
        public readonly int NetworkAcl;
        /// <summary>
        /// Network probing.
        /// </summary>
        public readonly int NetworkDetect;
        /// <summary>
        /// Oracle.
        /// </summary>
        public readonly int Oracle;
        /// <summary>
        /// Peering connection.
        /// </summary>
        public readonly int Pcx;
        /// <summary>
        /// TencentDB for PostgreSQL.
        /// </summary>
        public readonly int Postgres;
        /// <summary>
        /// TencentDB for Redis.
        /// </summary>
        public readonly int Redis;
        /// <summary>
        /// Route table.
        /// </summary>
        public readonly int RouteTable;
        /// <summary>
        /// SEAL.
        /// </summary>
        public readonly int Seal;
        /// <summary>
        /// TencentDB for SQL Server.
        /// </summary>
        public readonly int SqlServer;
        /// <summary>
        /// Subnets.
        /// </summary>
        public readonly int Subnet;
        /// <summary>
        /// Subnet instance ID, such as subnet-bthucmmy.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Blockchain service.
        /// </summary>
        public readonly int TBaas;
        /// <summary>
        /// Game storage - Tcaplus.
        /// </summary>
        public readonly int Tcaplus;
        /// <summary>
        /// HTAP database - TiDB.
        /// </summary>
        public readonly int TiDb;
        /// <summary>
        /// VPC instance ID, such as `vpc-bq4bzxpj`.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// VPN gateway.
        /// </summary>
        public readonly int Vpngw;

        [OutputConstructor]
        private GetResourceDashboardResourceDashboardSetResult(
            int cdb,

            int cfs,

            int ckafka,

            int classicLink,

            int cmem,

            int cnas,

            int ctsDb,

            int cvm,

            int cynosDbMysql,

            int cynosDbPostgres,

            int dbAudit,

            int dcdb,

            int dcg,

            int elasticSearch,

            int emr,

            int flowLog,

            int greenplumn,

            int grocery,

            int hsm,

            int ip,

            int itop,

            int lb,

            int mariaDb,

            int mongoDb,

            int nas,

            int nat,

            int networkAcl,

            int networkDetect,

            int oracle,

            int pcx,

            int postgres,

            int redis,

            int routeTable,

            int seal,

            int sqlServer,

            int subnet,

            string subnetId,

            int tBaas,

            int tcaplus,

            int tiDb,

            string vpcId,

            int vpngw)
        {
            Cdb = cdb;
            Cfs = cfs;
            Ckafka = ckafka;
            ClassicLink = classicLink;
            Cmem = cmem;
            Cnas = cnas;
            CtsDb = ctsDb;
            Cvm = cvm;
            CynosDbMysql = cynosDbMysql;
            CynosDbPostgres = cynosDbPostgres;
            DbAudit = dbAudit;
            Dcdb = dcdb;
            Dcg = dcg;
            ElasticSearch = elasticSearch;
            Emr = emr;
            FlowLog = flowLog;
            Greenplumn = greenplumn;
            Grocery = grocery;
            Hsm = hsm;
            Ip = ip;
            Itop = itop;
            Lb = lb;
            MariaDb = mariaDb;
            MongoDb = mongoDb;
            Nas = nas;
            Nat = nat;
            NetworkAcl = networkAcl;
            NetworkDetect = networkDetect;
            Oracle = oracle;
            Pcx = pcx;
            Postgres = postgres;
            Redis = redis;
            RouteTable = routeTable;
            Seal = seal;
            SqlServer = sqlServer;
            Subnet = subnet;
            SubnetId = subnetId;
            TBaas = tBaas;
            Tcaplus = tcaplus;
            TiDb = tiDb;
            VpcId = vpcId;
            Vpngw = vpngw;
        }
    }
}
