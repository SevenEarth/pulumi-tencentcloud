// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpc
{
    public static class GetResourceDashboard
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc resource_dashboard
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var resourceDashboard = Tencentcloud.Vpc.GetResourceDashboard.Invoke(new()
        ///     {
        ///         VpcIds = new[]
        ///         {
        ///             "vpc-4owdpnwr",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetResourceDashboardResult> InvokeAsync(GetResourceDashboardArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceDashboardResult>("tencentcloud:Vpc/getResourceDashboard:getResourceDashboard", args ?? new GetResourceDashboardArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc resource_dashboard
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var resourceDashboard = Tencentcloud.Vpc.GetResourceDashboard.Invoke(new()
        ///     {
        ///         VpcIds = new[]
        ///         {
        ///             "vpc-4owdpnwr",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetResourceDashboardResult> Invoke(GetResourceDashboardInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceDashboardResult>("tencentcloud:Vpc/getResourceDashboard:getResourceDashboard", args ?? new GetResourceDashboardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceDashboardArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("vpcIds", required: true)]
        private List<string>? _vpcIds;

        /// <summary>
        /// Vpc instance ID, e.g. vpc-f1xjkw1b.
        /// </summary>
        public List<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new List<string>());
            set => _vpcIds = value;
        }

        public GetResourceDashboardArgs()
        {
        }
        public static new GetResourceDashboardArgs Empty => new GetResourceDashboardArgs();
    }

    public sealed class GetResourceDashboardInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("vpcIds", required: true)]
        private InputList<string>? _vpcIds;

        /// <summary>
        /// Vpc instance ID, e.g. vpc-f1xjkw1b.
        /// </summary>
        public InputList<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new InputList<string>());
            set => _vpcIds = value;
        }

        public GetResourceDashboardInvokeArgs()
        {
        }
        public static new GetResourceDashboardInvokeArgs Empty => new GetResourceDashboardInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceDashboardResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of resource objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceDashboardResourceDashboardSetResult> ResourceDashboardSets;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<string> VpcIds;

        [OutputConstructor]
        private GetResourceDashboardResult(
            string id,

            ImmutableArray<Outputs.GetResourceDashboardResourceDashboardSetResult> resourceDashboardSets,

            string? resultOutputFile,

            ImmutableArray<string> vpcIds)
        {
            Id = id;
            ResourceDashboardSets = resourceDashboardSets;
            ResultOutputFile = resultOutputFile;
            VpcIds = vpcIds;
        }
    }
}
