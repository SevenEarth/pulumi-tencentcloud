// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpc
{
    public static class GetClassicLinkInstances
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc classic_link_instances
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var classicLinkInstances = Output.Create(Tencentcloud.Vpc.GetClassicLinkInstances.InvokeAsync(new Tencentcloud.Vpc.GetClassicLinkInstancesArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Tencentcloud.Vpc.Inputs.GetClassicLinkInstancesFilterArgs
        ///                 {
        ///                     Name = "vpc-id",
        ///                     Values = 
        ///                     {
        ///                         "vpc-lh4nqig9",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClassicLinkInstancesResult> InvokeAsync(GetClassicLinkInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClassicLinkInstancesResult>("tencentcloud:Vpc/getClassicLinkInstances:getClassicLinkInstances", args ?? new GetClassicLinkInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc classic_link_instances
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var classicLinkInstances = Output.Create(Tencentcloud.Vpc.GetClassicLinkInstances.InvokeAsync(new Tencentcloud.Vpc.GetClassicLinkInstancesArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Tencentcloud.Vpc.Inputs.GetClassicLinkInstancesFilterArgs
        ///                 {
        ///                     Name = "vpc-id",
        ///                     Values = 
        ///                     {
        ///                         "vpc-lh4nqig9",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClassicLinkInstancesResult> Invoke(GetClassicLinkInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClassicLinkInstancesResult>("tencentcloud:Vpc/getClassicLinkInstances:getClassicLinkInstances", args ?? new GetClassicLinkInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClassicLinkInstancesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetClassicLinkInstancesFilterArgs>? _filters;

        /// <summary>
        /// Filter conditions.`vpc-id` - String - (Filter condition) The VPC instance ID. `vm-ip` - String - (Filter condition) The IP address of the CVM on the basic network.
        /// </summary>
        public List<Inputs.GetClassicLinkInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetClassicLinkInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetClassicLinkInstancesArgs()
        {
        }
    }

    public sealed class GetClassicLinkInstancesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetClassicLinkInstancesFilterInputArgs>? _filters;

        /// <summary>
        /// Filter conditions.`vpc-id` - String - (Filter condition) The VPC instance ID. `vm-ip` - String - (Filter condition) The IP address of the CVM on the basic network.
        /// </summary>
        public InputList<Inputs.GetClassicLinkInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetClassicLinkInstancesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetClassicLinkInstancesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClassicLinkInstancesResult
    {
        /// <summary>
        /// Classiclink instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClassicLinkInstancesClassicLinkInstanceSetResult> ClassicLinkInstanceSets;
        public readonly ImmutableArray<Outputs.GetClassicLinkInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetClassicLinkInstancesResult(
            ImmutableArray<Outputs.GetClassicLinkInstancesClassicLinkInstanceSetResult> classicLinkInstanceSets,

            ImmutableArray<Outputs.GetClassicLinkInstancesFilterResult> filters,

            string id,

            string? resultOutputFile)
        {
            ClassicLinkInstanceSets = classicLinkInstanceSets;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
