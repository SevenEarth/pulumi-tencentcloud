// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpc
{
    public static class GetUsedIpAddress
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc used_ip_address
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var usedIpAddress = Tencentcloud.Vpc.GetUsedIpAddress.Invoke(new()
        ///     {
        ///         VpcId = "vpc-4owdpnwr",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetUsedIpAddressResult> InvokeAsync(GetUsedIpAddressArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsedIpAddressResult>("tencentcloud:Vpc/getUsedIpAddress:getUsedIpAddress", args ?? new GetUsedIpAddressArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc used_ip_address
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var usedIpAddress = Tencentcloud.Vpc.GetUsedIpAddress.Invoke(new()
        ///     {
        ///         VpcId = "vpc-4owdpnwr",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetUsedIpAddressResult> Invoke(GetUsedIpAddressInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsedIpAddressResult>("tencentcloud:Vpc/getUsedIpAddress:getUsedIpAddress", args ?? new GetUsedIpAddressInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsedIpAddressArgs : global::Pulumi.InvokeArgs
    {
        [Input("ipAddresses")]
        private List<string>? _ipAddresses;

        /// <summary>
        /// IPs to query.
        /// </summary>
        public List<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new List<string>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Subnet instance ID.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// VPC instance ID.
        /// </summary>
        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetUsedIpAddressArgs()
        {
        }
        public static new GetUsedIpAddressArgs Empty => new GetUsedIpAddressArgs();
    }

    public sealed class GetUsedIpAddressInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ipAddresses")]
        private InputList<string>? _ipAddresses;

        /// <summary>
        /// IPs to query.
        /// </summary>
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Subnet instance ID.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VPC instance ID.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetUsedIpAddressInvokeArgs()
        {
        }
        public static new GetUsedIpAddressInvokeArgs Empty => new GetUsedIpAddressInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsedIpAddressResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information of resources bound with the queried IPs Note: This parameter may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsedIpAddressIpAddressStateResult> IpAddressStates;
        public readonly ImmutableArray<string> IpAddresses;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Subnet instance ID.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// VPC instance ID.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetUsedIpAddressResult(
            string id,

            ImmutableArray<Outputs.GetUsedIpAddressIpAddressStateResult> ipAddressStates,

            ImmutableArray<string> ipAddresses,

            string? resultOutputFile,

            string? subnetId,

            string vpcId)
        {
            Id = id;
            IpAddressStates = ipAddressStates;
            IpAddresses = ipAddresses;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
