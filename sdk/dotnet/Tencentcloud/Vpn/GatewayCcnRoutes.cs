// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpn
{
    /// <summary>
    /// Provides a resource to create a vpn_gateway_ccn_routes
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var vpnGatewayCcnRoutes = new Tencentcloud.Vpn.GatewayCcnRoutes("vpnGatewayCcnRoutes", new Tencentcloud.Vpn.GatewayCcnRoutesArgs
    ///         {
    ///             DestinationCidrBlock = "192.168.1.0/24",
    ///             RouteId = "vpnr-akdy0757",
    ///             Status = "DISABLE",
    ///             VpnGatewayId = "vpngw-lie1a4u7",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// vpc vpn_gateway_ccn_routes can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Vpn/gatewayCcnRoutes:GatewayCcnRoutes vpn_gateway_ccn_routes vpn_gateway_id#ccn_routes_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Vpn/gatewayCcnRoutes:GatewayCcnRoutes")]
    public partial class GatewayCcnRoutes : Pulumi.CustomResource
    {
        /// <summary>
        /// Routing CIDR.
        /// </summary>
        [Output("destinationCidrBlock")]
        public Output<string> DestinationCidrBlock { get; private set; } = null!;

        /// <summary>
        /// Route Id.
        /// </summary>
        [Output("routeId")]
        public Output<string> RouteId { get; private set; } = null!;

        /// <summary>
        /// Whether routing information is enabled. `ENABLE`: Enable Route, `DISABLE`: Disable Route.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// VPN GATEWAY INSTANCE ID.
        /// </summary>
        [Output("vpnGatewayId")]
        public Output<string> VpnGatewayId { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayCcnRoutes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayCcnRoutes(string name, GatewayCcnRoutesArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpn/gatewayCcnRoutes:GatewayCcnRoutes", name, args ?? new GatewayCcnRoutesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayCcnRoutes(string name, Input<string> id, GatewayCcnRoutesState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpn/gatewayCcnRoutes:GatewayCcnRoutes", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayCcnRoutes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayCcnRoutes Get(string name, Input<string> id, GatewayCcnRoutesState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayCcnRoutes(name, id, state, options);
        }
    }

    public sealed class GatewayCcnRoutesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Routing CIDR.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// Route Id.
        /// </summary>
        [Input("routeId", required: true)]
        public Input<string> RouteId { get; set; } = null!;

        /// <summary>
        /// Whether routing information is enabled. `ENABLE`: Enable Route, `DISABLE`: Disable Route.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// VPN GATEWAY INSTANCE ID.
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public Input<string> VpnGatewayId { get; set; } = null!;

        public GatewayCcnRoutesArgs()
        {
        }
    }

    public sealed class GatewayCcnRoutesState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Routing CIDR.
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// Route Id.
        /// </summary>
        [Input("routeId")]
        public Input<string>? RouteId { get; set; }

        /// <summary>
        /// Whether routing information is enabled. `ENABLE`: Enable Route, `DISABLE`: Disable Route.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// VPN GATEWAY INSTANCE ID.
        /// </summary>
        [Input("vpnGatewayId")]
        public Input<string>? VpnGatewayId { get; set; }

        public GatewayCcnRoutesState()
        {
        }
    }
}
