// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpn
{
    public static class GetGatewayRoutes
    {
        /// <summary>
        /// Use this data source to query detailed information of VPN gateways.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Tencentcloud.Vpn.GetGateways.InvokeAsync(new Tencentcloud.Vpn.GetGatewaysArgs
        ///         {
        ///             DestinationCidrBlock = "vpngw-8ccsnclt",
        ///             InstanceId = "ap-guangzhou-3",
        ///             InstanceType = "1.1.1.1",
        ///             Tags = 
        ///             {
        ///                 { "test", "tf" },
        ///             },
        ///             VpnGatewayId = "main",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGatewayRoutesResult> InvokeAsync(GetGatewayRoutesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewayRoutesResult>("tencentcloud:Vpn/getGatewayRoutes:getGatewayRoutes", args ?? new GetGatewayRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of VPN gateways.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Tencentcloud.Vpn.GetGateways.InvokeAsync(new Tencentcloud.Vpn.GetGatewaysArgs
        ///         {
        ///             DestinationCidrBlock = "vpngw-8ccsnclt",
        ///             InstanceId = "ap-guangzhou-3",
        ///             InstanceType = "1.1.1.1",
        ///             Tags = 
        ///             {
        ///                 { "test", "tf" },
        ///             },
        ///             VpnGatewayId = "main",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGatewayRoutesResult> Invoke(GetGatewayRoutesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGatewayRoutesResult>("tencentcloud:Vpn/getGatewayRoutes:getGatewayRoutes", args ?? new GetGatewayRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayRoutesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Destination IDC IP range.
        /// </summary>
        [Input("destinationCidr")]
        public string? DestinationCidr { get; set; }

        /// <summary>
        /// Instance ID of the next hop.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// Next hop type (type of the associated instance). Valid values: VPNCONN (VPN tunnel) and CCN (CCN instance).
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// VPN gateway ID.
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public string VpnGatewayId { get; set; } = null!;

        public GetGatewayRoutesArgs()
        {
        }
    }

    public sealed class GetGatewayRoutesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Destination IDC IP range.
        /// </summary>
        [Input("destinationCidr")]
        public Input<string>? DestinationCidr { get; set; }

        /// <summary>
        /// Instance ID of the next hop.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Next hop type (type of the associated instance). Valid values: VPNCONN (VPN tunnel) and CCN (CCN instance).
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// VPN gateway ID.
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public Input<string> VpnGatewayId { get; set; } = null!;

        public GetGatewayRoutesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGatewayRoutesResult
    {
        public readonly string? DestinationCidr;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly string? InstanceType;
        public readonly string? ResultOutputFile;
        public readonly string VpnGatewayId;
        /// <summary>
        /// Information list of the vpn gateway routes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewayRoutesVpnGatewayRouteListResult> VpnGatewayRouteLists;

        [OutputConstructor]
        private GetGatewayRoutesResult(
            string? destinationCidr,

            string id,

            string? instanceId,

            string? instanceType,

            string? resultOutputFile,

            string vpnGatewayId,

            ImmutableArray<Outputs.GetGatewayRoutesVpnGatewayRouteListResult> vpnGatewayRouteLists)
        {
            DestinationCidr = destinationCidr;
            Id = id;
            InstanceId = instanceId;
            InstanceType = instanceType;
            ResultOutputFile = resultOutputFile;
            VpnGatewayId = vpnGatewayId;
            VpnGatewayRouteLists = vpnGatewayRouteLists;
        }
    }
}
