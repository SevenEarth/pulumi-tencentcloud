// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Antiddos
{
    public static class GetOverviewAttackTrend
    {
        /// <summary>
        /// Use this data source to query detailed information of antiddos overview_attack_trend
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var overviewAttackTrend = Output.Create(Tencentcloud.Antiddos.GetOverviewAttackTrend.InvokeAsync(new Tencentcloud.Antiddos.GetOverviewAttackTrendArgs
        ///         {
        ///             Dimension = "attackcount",
        ///             EndTime = "2023-11-22 10:28:31",
        ///             Period = 86400,
        ///             StartTime = "2023-11-21 10:28:31",
        ///             Type = "ddos",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOverviewAttackTrendResult> InvokeAsync(GetOverviewAttackTrendArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOverviewAttackTrendResult>("tencentcloud:Antiddos/getOverviewAttackTrend:getOverviewAttackTrend", args ?? new GetOverviewAttackTrendArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of antiddos overview_attack_trend
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var overviewAttackTrend = Output.Create(Tencentcloud.Antiddos.GetOverviewAttackTrend.InvokeAsync(new Tencentcloud.Antiddos.GetOverviewAttackTrendArgs
        ///         {
        ///             Dimension = "attackcount",
        ///             EndTime = "2023-11-22 10:28:31",
        ///             Period = 86400,
        ///             StartTime = "2023-11-21 10:28:31",
        ///             Type = "ddos",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOverviewAttackTrendResult> Invoke(GetOverviewAttackTrendInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOverviewAttackTrendResult>("tencentcloud:Antiddos/getOverviewAttackTrend:getOverviewAttackTrend", args ?? new GetOverviewAttackTrendInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOverviewAttackTrendArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Latitude, currently only attackcount is supported.
        /// </summary>
        [Input("dimension", required: true)]
        public string Dimension { get; set; } = null!;

        /// <summary>
        /// Protection Overview Attack Trend End Time.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// Period, currently only 86400 is supported.
        /// </summary>
        [Input("period", required: true)]
        public int Period { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Protection Overview Attack Trend Start Time.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        /// <summary>
        /// Attack type: cc, ddos.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetOverviewAttackTrendArgs()
        {
        }
    }

    public sealed class GetOverviewAttackTrendInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Latitude, currently only attackcount is supported.
        /// </summary>
        [Input("dimension", required: true)]
        public Input<string> Dimension { get; set; } = null!;

        /// <summary>
        /// Protection Overview Attack Trend End Time.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// Period, currently only 86400 is supported.
        /// </summary>
        [Input("period", required: true)]
        public Input<int> Period { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Protection Overview Attack Trend Start Time.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        /// <summary>
        /// Attack type: cc, ddos.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetOverviewAttackTrendInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOverviewAttackTrendResult
    {
        /// <summary>
        /// Number of attacks per cycle point.
        /// </summary>
        public readonly ImmutableArray<int> Datas;
        public readonly string Dimension;
        public readonly string EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int Period;
        /// <summary>
        /// Number of period points included.
        /// </summary>
        public readonly int PeriodPointCount;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;
        public readonly string Type;

        [OutputConstructor]
        private GetOverviewAttackTrendResult(
            ImmutableArray<int> datas,

            string dimension,

            string endTime,

            string id,

            int period,

            int periodPointCount,

            string? resultOutputFile,

            string startTime,

            string type)
        {
            Datas = datas;
            Dimension = dimension;
            EndTime = endTime;
            Id = id;
            Period = period;
            PeriodPointCount = periodPointCount;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
            Type = type;
        }
    }
}
