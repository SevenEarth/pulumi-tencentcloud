// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Antiddos
{
    public static class GetBasicDeviceStatus
    {
        /// <summary>
        /// Use this data source to query detailed information of antiddos basic_device_status
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basicDeviceStatus = Tencentcloud.Antiddos.GetBasicDeviceStatus.Invoke(new()
        ///     {
        ///         FilterRegion = 1,
        ///         IpLists = new[]
        ///         {
        ///             "127.0.0.1",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetBasicDeviceStatusResult> InvokeAsync(GetBasicDeviceStatusArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBasicDeviceStatusResult>("tencentcloud:Antiddos/getBasicDeviceStatus:getBasicDeviceStatus", args ?? new GetBasicDeviceStatusArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of antiddos basic_device_status
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basicDeviceStatus = Tencentcloud.Antiddos.GetBasicDeviceStatus.Invoke(new()
        ///     {
        ///         FilterRegion = 1,
        ///         IpLists = new[]
        ///         {
        ///             "127.0.0.1",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetBasicDeviceStatusResult> Invoke(GetBasicDeviceStatusInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBasicDeviceStatusResult>("tencentcloud:Antiddos/getBasicDeviceStatus:getBasicDeviceStatus", args ?? new GetBasicDeviceStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBasicDeviceStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region Id.
        /// </summary>
        [Input("filterRegion")]
        public int? FilterRegion { get; set; }

        [Input("idLists")]
        private List<string>? _idLists;

        /// <summary>
        /// Named resource transfer ID.
        /// </summary>
        public List<string> IdLists
        {
            get => _idLists ?? (_idLists = new List<string>());
            set => _idLists = value;
        }

        [Input("ipLists")]
        private List<string>? _ipLists;

        /// <summary>
        /// Ip resource list.
        /// </summary>
        public List<string> IpLists
        {
            get => _ipLists ?? (_ipLists = new List<string>());
            set => _ipLists = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetBasicDeviceStatusArgs()
        {
        }
        public static new GetBasicDeviceStatusArgs Empty => new GetBasicDeviceStatusArgs();
    }

    public sealed class GetBasicDeviceStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region Id.
        /// </summary>
        [Input("filterRegion")]
        public Input<int>? FilterRegion { get; set; }

        [Input("idLists")]
        private InputList<string>? _idLists;

        /// <summary>
        /// Named resource transfer ID.
        /// </summary>
        public InputList<string> IdLists
        {
            get => _idLists ?? (_idLists = new InputList<string>());
            set => _idLists = value;
        }

        [Input("ipLists")]
        private InputList<string>? _ipLists;

        /// <summary>
        /// Ip resource list.
        /// </summary>
        public InputList<string> IpLists
        {
            get => _ipLists ?? (_ipLists = new InputList<string>());
            set => _ipLists = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetBasicDeviceStatusInvokeArgs()
        {
        }
        public static new GetBasicDeviceStatusInvokeArgs Empty => new GetBasicDeviceStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetBasicDeviceStatusResult
    {
        /// <summary>
        /// Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicDeviceStatusClbDataResult> ClbDatas;
        /// <summary>
        /// Return resources and status, status code: 1- Blocking status 2- Normal status 3- Attack status.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicDeviceStatusDataResult> Datas;
        public readonly int? FilterRegion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> IdLists;
        public readonly ImmutableArray<string> IpLists;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetBasicDeviceStatusResult(
            ImmutableArray<Outputs.GetBasicDeviceStatusClbDataResult> clbDatas,

            ImmutableArray<Outputs.GetBasicDeviceStatusDataResult> datas,

            int? filterRegion,

            string id,

            ImmutableArray<string> idLists,

            ImmutableArray<string> ipLists,

            string? resultOutputFile)
        {
            ClbDatas = clbDatas;
            Datas = datas;
            FilterRegion = filterRegion;
            Id = id;
            IdLists = idLists;
            IpLists = ipLists;
            ResultOutputFile = resultOutputFile;
        }
    }
}
