// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Antiddos
{
    public static class GetOverviewDdosEventList
    {
        /// <summary>
        /// Use this data source to query detailed information of antiddos overview_ddos_event_list
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var overviewDdosEventList = Tencentcloud.Antiddos.GetOverviewDdosEventList.Invoke(new()
        ///     {
        ///         AttackStatus = "end",
        ///         EndTime = "2023-11-21 00:00:00",
        ///         StartTime = "2023-11-20 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetOverviewDdosEventListResult> InvokeAsync(GetOverviewDdosEventListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOverviewDdosEventListResult>("tencentcloud:Antiddos/getOverviewDdosEventList:getOverviewDdosEventList", args ?? new GetOverviewDdosEventListArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of antiddos overview_ddos_event_list
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var overviewDdosEventList = Tencentcloud.Antiddos.GetOverviewDdosEventList.Invoke(new()
        ///     {
        ///         AttackStatus = "end",
        ///         EndTime = "2023-11-21 00:00:00",
        ///         StartTime = "2023-11-20 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetOverviewDdosEventListResult> Invoke(GetOverviewDdosEventListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOverviewDdosEventListResult>("tencentcloud:Antiddos/getOverviewDdosEventList:getOverviewDdosEventList", args ?? new GetOverviewDdosEventListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOverviewDdosEventListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// filter event by attack status, start: attacking; end: attack end.
        /// </summary>
        [Input("attackStatus")]
        public string? AttackStatus { get; set; }

        /// <summary>
        /// EndTime.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// StartTime.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetOverviewDdosEventListArgs()
        {
        }
        public static new GetOverviewDdosEventListArgs Empty => new GetOverviewDdosEventListArgs();
    }

    public sealed class GetOverviewDdosEventListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// filter event by attack status, start: attacking; end: attack end.
        /// </summary>
        [Input("attackStatus")]
        public Input<string>? AttackStatus { get; set; }

        /// <summary>
        /// EndTime.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// StartTime.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetOverviewDdosEventListInvokeArgs()
        {
        }
        public static new GetOverviewDdosEventListInvokeArgs Empty => new GetOverviewDdosEventListInvokeArgs();
    }


    [OutputType]
    public sealed class GetOverviewDdosEventListResult
    {
        /// <summary>
        /// Attack status, 0: Under attack; 1: End of attack.
        /// </summary>
        public readonly string? AttackStatus;
        /// <summary>
        /// EndTime.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// EventList.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOverviewDdosEventListEventListResult> EventLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// StartTime.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private GetOverviewDdosEventListResult(
            string? attackStatus,

            string endTime,

            ImmutableArray<Outputs.GetOverviewDdosEventListEventListResult> eventLists,

            string id,

            string? resultOutputFile,

            string startTime)
        {
            AttackStatus = attackStatus;
            EndTime = endTime;
            EventLists = eventLists;
            Id = id;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
