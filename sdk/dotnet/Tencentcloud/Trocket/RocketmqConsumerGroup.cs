// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Trocket
{
    /// <summary>
    /// Provides a resource to create a trocket rocketmq_consumer_group
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rocketmqInstance = new Tencentcloud.Trocket.RocketmqInstance("rocketmqInstance", new()
    ///     {
    ///         InstanceType = "EXPERIMENT",
    ///         SkuCode = "experiment_500",
    ///         Remark = "test",
    ///         VpcId = "vpc-xxxxxx",
    ///         SubnetId = "subnet-xxxxx",
    ///         Tags = 
    ///         {
    ///             { "tag_key", "rocketmq" },
    ///             { "tag_value", "5.x" },
    ///         },
    ///     });
    /// 
    ///     var rocketmqConsumerGroup = new Tencentcloud.Trocket.RocketmqConsumerGroup("rocketmqConsumerGroup", new()
    ///     {
    ///         InstanceId = rocketmqInstance.Id,
    ///         ConsumerGroup = "test_consumer_group",
    ///         MaxRetryTimes = 20,
    ///         ConsumeEnable = false,
    ///         ConsumeMessageOrderly = true,
    ///         Remark = "test for terraform",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// trocket rocketmq_consumer_group can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Trocket/rocketmqConsumerGroup:RocketmqConsumerGroup rocketmq_consumer_group instanceId#consumerGroup
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Trocket/rocketmqConsumerGroup:RocketmqConsumerGroup")]
    public partial class RocketmqConsumerGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to enable consumption.
        /// </summary>
        [Output("consumeEnable")]
        public Output<bool> ConsumeEnable { get; private set; } = null!;

        /// <summary>
        /// `true`: Sequential delivery, `false`: Concurrent delivery.
        /// </summary>
        [Output("consumeMessageOrderly")]
        public Output<bool> ConsumeMessageOrderly { get; private set; } = null!;

        /// <summary>
        /// Name of consumer group.
        /// </summary>
        [Output("consumerGroup")]
        public Output<string> ConsumerGroup { get; private set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Max retry times.
        /// </summary>
        [Output("maxRetryTimes")]
        public Output<int> MaxRetryTimes { get; private set; } = null!;

        /// <summary>
        /// remark.
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;


        /// <summary>
        /// Create a RocketmqConsumerGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RocketmqConsumerGroup(string name, RocketmqConsumerGroupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Trocket/rocketmqConsumerGroup:RocketmqConsumerGroup", name, args ?? new RocketmqConsumerGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RocketmqConsumerGroup(string name, Input<string> id, RocketmqConsumerGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Trocket/rocketmqConsumerGroup:RocketmqConsumerGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RocketmqConsumerGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RocketmqConsumerGroup Get(string name, Input<string> id, RocketmqConsumerGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new RocketmqConsumerGroup(name, id, state, options);
        }
    }

    public sealed class RocketmqConsumerGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable consumption.
        /// </summary>
        [Input("consumeEnable", required: true)]
        public Input<bool> ConsumeEnable { get; set; } = null!;

        /// <summary>
        /// `true`: Sequential delivery, `false`: Concurrent delivery.
        /// </summary>
        [Input("consumeMessageOrderly", required: true)]
        public Input<bool> ConsumeMessageOrderly { get; set; } = null!;

        /// <summary>
        /// Name of consumer group.
        /// </summary>
        [Input("consumerGroup", required: true)]
        public Input<string> ConsumerGroup { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Max retry times.
        /// </summary>
        [Input("maxRetryTimes", required: true)]
        public Input<int> MaxRetryTimes { get; set; } = null!;

        /// <summary>
        /// remark.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        public RocketmqConsumerGroupArgs()
        {
        }
        public static new RocketmqConsumerGroupArgs Empty => new RocketmqConsumerGroupArgs();
    }

    public sealed class RocketmqConsumerGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable consumption.
        /// </summary>
        [Input("consumeEnable")]
        public Input<bool>? ConsumeEnable { get; set; }

        /// <summary>
        /// `true`: Sequential delivery, `false`: Concurrent delivery.
        /// </summary>
        [Input("consumeMessageOrderly")]
        public Input<bool>? ConsumeMessageOrderly { get; set; }

        /// <summary>
        /// Name of consumer group.
        /// </summary>
        [Input("consumerGroup")]
        public Input<string>? ConsumerGroup { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Max retry times.
        /// </summary>
        [Input("maxRetryTimes")]
        public Input<int>? MaxRetryTimes { get; set; }

        /// <summary>
        /// remark.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        public RocketmqConsumerGroupState()
        {
        }
        public static new RocketmqConsumerGroupState Empty => new RocketmqConsumerGroupState();
    }
}
