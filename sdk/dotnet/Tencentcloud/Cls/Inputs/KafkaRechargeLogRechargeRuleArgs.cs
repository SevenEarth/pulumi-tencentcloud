// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cls.Inputs
{

    public sealed class KafkaRechargeLogRechargeRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// default time from.
        /// </summary>
        [Input("defaultTimeSrc")]
        public Input<int>? DefaultTimeSrc { get; set; }

        /// <summary>
        /// user default time.
        /// </summary>
        [Input("defaultTimeSwitch", required: true)]
        public Input<bool> DefaultTimeSwitch { get; set; } = null!;

        /// <summary>
        /// encoding format.
        /// </summary>
        [Input("encodingFormat", required: true)]
        public Input<int> EncodingFormat { get; set; } = null!;

        [Input("keys")]
        private InputList<string>? _keys;

        /// <summary>
        /// log key list.
        /// </summary>
        public InputList<string> Keys
        {
            get => _keys ?? (_keys = new InputList<string>());
            set => _keys = value;
        }

        /// <summary>
        /// log regex.
        /// </summary>
        [Input("logRegex")]
        public Input<string>? LogRegex { get; set; }

        [Input("metadatas")]
        private InputList<string>? _metadatas;

        /// <summary>
        /// metadata.
        /// </summary>
        public InputList<string> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<string>());
            set => _metadatas = value;
        }

        /// <summary>
        /// recharge type.
        /// </summary>
        [Input("rechargeType", required: true)]
        public Input<string> RechargeType { get; set; } = null!;

        /// <summary>
        /// time format.
        /// </summary>
        [Input("timeFormat")]
        public Input<string>? TimeFormat { get; set; }

        /// <summary>
        /// time key.
        /// </summary>
        [Input("timeKey")]
        public Input<string>? TimeKey { get; set; }

        /// <summary>
        /// time regex.
        /// </summary>
        [Input("timeRegex")]
        public Input<string>? TimeRegex { get; set; }

        /// <summary>
        /// time zone.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// parse failed log key.
        /// </summary>
        [Input("unMatchLogKey")]
        public Input<string>? UnMatchLogKey { get; set; }

        /// <summary>
        /// is push parse failed log.
        /// </summary>
        [Input("unMatchLogSwitch")]
        public Input<bool>? UnMatchLogSwitch { get; set; }

        /// <summary>
        /// parse failed log time from.
        /// </summary>
        [Input("unMatchLogTimeSrc")]
        public Input<int>? UnMatchLogTimeSrc { get; set; }

        public KafkaRechargeLogRechargeRuleArgs()
        {
        }
    }
}
