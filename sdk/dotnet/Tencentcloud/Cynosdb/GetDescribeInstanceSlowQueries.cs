// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Cynosdb
{
    public static class GetDescribeInstanceSlowQueries
    {
        /// <summary>
        /// Use this data source to query detailed information of cynosdb describe_instance_slow_queries
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var describeInstanceSlowQueries = Tencentcloud.Cynosdb.GetDescribeInstanceSlowQueries.Invoke(new()
        ///     {
        ///         ClusterId = "cynosdbmysql-bws8h88b",
        ///         EndTime = "2023-06-19 14:00:00",
        ///         StartTime = "2023-06-01 12:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDescribeInstanceSlowQueriesResult> InvokeAsync(GetDescribeInstanceSlowQueriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDescribeInstanceSlowQueriesResult>("tencentcloud:Cynosdb/getDescribeInstanceSlowQueries:getDescribeInstanceSlowQueries", args ?? new GetDescribeInstanceSlowQueriesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cynosdb describe_instance_slow_queries
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var describeInstanceSlowQueries = Tencentcloud.Cynosdb.GetDescribeInstanceSlowQueries.Invoke(new()
        ///     {
        ///         ClusterId = "cynosdbmysql-bws8h88b",
        ///         EndTime = "2023-06-19 14:00:00",
        ///         StartTime = "2023-06-01 12:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDescribeInstanceSlowQueriesResult> Invoke(GetDescribeInstanceSlowQueriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDescribeInstanceSlowQueriesResult>("tencentcloud:Cynosdb/getDescribeInstanceSlowQueries:getDescribeInstanceSlowQueries", args ?? new GetDescribeInstanceSlowQueriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDescribeInstanceSlowQueriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// End time.
        /// </summary>
        [Input("endTime")]
        public string? EndTime { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// start time.
        /// </summary>
        [Input("startTime")]
        public string? StartTime { get; set; }

        public GetDescribeInstanceSlowQueriesArgs()
        {
        }
        public static new GetDescribeInstanceSlowQueriesArgs Empty => new GetDescribeInstanceSlowQueriesArgs();
    }

    public sealed class GetDescribeInstanceSlowQueriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// End time.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// start time.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public GetDescribeInstanceSlowQueriesInvokeArgs()
        {
        }
        public static new GetDescribeInstanceSlowQueriesInvokeArgs Empty => new GetDescribeInstanceSlowQueriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDescribeInstanceSlowQueriesResult
    {
        /// <summary>
        /// Note to the Binlog list: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDescribeInstanceSlowQueriesBinlogResult> Binlogs;
        public readonly string ClusterId;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Earliest transaction time.
        /// </summary>
        public readonly string? StartTime;

        [OutputConstructor]
        private GetDescribeInstanceSlowQueriesResult(
            ImmutableArray<Outputs.GetDescribeInstanceSlowQueriesBinlogResult> binlogs,

            string clusterId,

            string? endTime,

            string id,

            string? resultOutputFile,

            string? startTime)
        {
            Binlogs = binlogs;
            ClusterId = clusterId;
            EndTime = endTime;
            Id = id;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
