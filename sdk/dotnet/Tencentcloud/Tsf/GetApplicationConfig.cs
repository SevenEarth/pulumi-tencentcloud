// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tsf
{
    public static class GetApplicationConfig
    {
        /// <summary>
        /// Use this data source to query detailed information of tsf application_config
        /// </summary>
        public static Task<GetApplicationConfigResult> InvokeAsync(GetApplicationConfigArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationConfigResult>("tencentcloud:Tsf/getApplicationConfig:getApplicationConfig", args ?? new GetApplicationConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tsf application_config
        /// </summary>
        public static Output<GetApplicationConfigResult> Invoke(GetApplicationConfigInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationConfigResult>("tencentcloud:Tsf/getApplicationConfig:getApplicationConfig", args ?? new GetApplicationConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationConfigArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Application ID, query all when not provided.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId { get; set; }

        /// <summary>
        /// Configuration ID, query all with higher priority when not provided.
        /// </summary>
        [Input("configId")]
        public string? ConfigId { get; set; }

        [Input("configIdLists")]
        private List<string>? _configIdLists;

        /// <summary>
        /// Configuration ID list, query all with lower priority when not provided.
        /// </summary>
        public List<string> ConfigIdLists
        {
            get => _configIdLists ?? (_configIdLists = new List<string>());
            set => _configIdLists = value;
        }

        /// <summary>
        /// Configuration name, precise query, query all when not provided.
        /// </summary>
        [Input("configName")]
        public string? ConfigName { get; set; }

        /// <summary>
        /// Configuration version, precise query, query all when not provided.
        /// </summary>
        [Input("configVersion")]
        public string? ConfigVersion { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetApplicationConfigArgs()
        {
        }
    }

    public sealed class GetApplicationConfigInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Application ID, query all when not provided.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Configuration ID, query all with higher priority when not provided.
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        [Input("configIdLists")]
        private InputList<string>? _configIdLists;

        /// <summary>
        /// Configuration ID list, query all with lower priority when not provided.
        /// </summary>
        public InputList<string> ConfigIdLists
        {
            get => _configIdLists ?? (_configIdLists = new InputList<string>());
            set => _configIdLists = value;
        }

        /// <summary>
        /// Configuration name, precise query, query all when not provided.
        /// </summary>
        [Input("configName")]
        public Input<string>? ConfigName { get; set; }

        /// <summary>
        /// Configuration version, precise query, query all when not provided.
        /// </summary>
        [Input("configVersion")]
        public Input<string>? ConfigVersion { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetApplicationConfigInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationConfigResult
    {
        /// <summary>
        /// application Id. Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string? ApplicationId;
        /// <summary>
        /// Configuration ID. Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string? ConfigId;
        public readonly ImmutableArray<string> ConfigIdLists;
        /// <summary>
        /// Configuration name Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string? ConfigName;
        /// <summary>
        /// Configuration version. Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string? ConfigVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Paginated configuration item list. Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplicationConfigResultResult> Results;

        [OutputConstructor]
        private GetApplicationConfigResult(
            string? applicationId,

            string? configId,

            ImmutableArray<string> configIdLists,

            string? configName,

            string? configVersion,

            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetApplicationConfigResultResult> results)
        {
            ApplicationId = applicationId;
            ConfigId = configId;
            ConfigIdLists = configIdLists;
            ConfigName = configName;
            ConfigVersion = configVersion;
            Id = id;
            ResultOutputFile = resultOutputFile;
            Results = results;
        }
    }
}
