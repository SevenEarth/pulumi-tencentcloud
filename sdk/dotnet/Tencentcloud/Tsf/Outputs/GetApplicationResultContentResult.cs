// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tsf.Outputs
{

    [OutputType]
    public sealed class GetApplicationResultContentResult
    {
        /// <summary>
        /// gateway service id.
        /// </summary>
        public readonly string ApigatewayServiceId;
        /// <summary>
        /// The description of the application.
        /// </summary>
        public readonly string ApplicationDesc;
        /// <summary>
        /// The ID of the application.
        /// </summary>
        public readonly string ApplicationId;
        /// <summary>
        /// The name of the application.
        /// </summary>
        public readonly string ApplicationName;
        /// <summary>
        /// remark name.
        /// </summary>
        public readonly string ApplicationRemarkName;
        /// <summary>
        /// application resource type.
        /// </summary>
        public readonly string ApplicationResourceType;
        /// <summary>
        /// application runtime type.
        /// </summary>
        public readonly string ApplicationRuntimeType;
        /// <summary>
        /// The application type. V OR C, V means VM, C means container.
        /// </summary>
        public readonly string ApplicationType;
        /// <summary>
        /// create time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// whether ignore create image repository.
        /// </summary>
        public readonly bool IgnoreCreateImageRepository;
        /// <summary>
        /// The microservice type of the application.
        /// </summary>
        public readonly string MicroserviceType;
        /// <summary>
        /// Programming language.
        /// </summary>
        public readonly string ProgLang;
        /// <summary>
        /// service config list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplicationResultContentServiceConfigListResult> ServiceConfigLists;
        /// <summary>
        /// update time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetApplicationResultContentResult(
            string apigatewayServiceId,

            string applicationDesc,

            string applicationId,

            string applicationName,

            string applicationRemarkName,

            string applicationResourceType,

            string applicationRuntimeType,

            string applicationType,

            string createTime,

            bool ignoreCreateImageRepository,

            string microserviceType,

            string progLang,

            ImmutableArray<Outputs.GetApplicationResultContentServiceConfigListResult> serviceConfigLists,

            string updateTime)
        {
            ApigatewayServiceId = apigatewayServiceId;
            ApplicationDesc = applicationDesc;
            ApplicationId = applicationId;
            ApplicationName = applicationName;
            ApplicationRemarkName = applicationRemarkName;
            ApplicationResourceType = applicationResourceType;
            ApplicationRuntimeType = applicationRuntimeType;
            ApplicationType = applicationType;
            CreateTime = createTime;
            IgnoreCreateImageRepository = ignoreCreateImageRepository;
            MicroserviceType = microserviceType;
            ProgLang = progLang;
            ServiceConfigLists = serviceConfigLists;
            UpdateTime = updateTime;
        }
    }
}
