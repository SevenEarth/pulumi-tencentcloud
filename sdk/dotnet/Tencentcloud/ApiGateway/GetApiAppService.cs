// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.ApiGateway
{
    public static class GetApiAppService
    {
        /// <summary>
        /// Use this data source to query detailed information of apigateway api_app_services
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = new Tencentcloud.ApiGateway.Service("exampleService", new()
        ///     {
        ///         ServiceName = "tf_example",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "desc.",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var exampleApi = new Tencentcloud.ApiGateway.Api("exampleApi", new()
        ///     {
        ///         ServiceId = exampleService.Id,
        ///         ApiName = "tf_example",
        ///         ApiDesc = "my hello api update",
        ///         AuthType = "APP",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "POST",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "email",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "desc.",
        ///                 DefaultValue = "test@qq.com",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 10,
        ///         ServiceConfigUrl = "http://www.tencent.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "POST",
        ///         ResponseType = "XML",
        ///         ResponseSuccessExample = "&lt;note&gt;success&lt;/note&gt;",
        ///         ResponseFailExample = "&lt;note&gt;fail&lt;/note&gt;",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 500,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = 5000,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleApiAppService = Tencentcloud.ApiGateway.GetApiAppService.Invoke(new()
        ///     {
        ///         ServiceId = exampleApi.ServiceId,
        ///         ApiRegion = "ap-guangzhou",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetApiAppServiceResult> InvokeAsync(GetApiAppServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiAppServiceResult>("tencentcloud:ApiGateway/getApiAppService:getApiAppService", args ?? new GetApiAppServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of apigateway api_app_services
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = new Tencentcloud.ApiGateway.Service("exampleService", new()
        ///     {
        ///         ServiceName = "tf_example",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "desc.",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var exampleApi = new Tencentcloud.ApiGateway.Api("exampleApi", new()
        ///     {
        ///         ServiceId = exampleService.Id,
        ///         ApiName = "tf_example",
        ///         ApiDesc = "my hello api update",
        ///         AuthType = "APP",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "POST",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "email",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "desc.",
        ///                 DefaultValue = "test@qq.com",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 10,
        ///         ServiceConfigUrl = "http://www.tencent.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "POST",
        ///         ResponseType = "XML",
        ///         ResponseSuccessExample = "&lt;note&gt;success&lt;/note&gt;",
        ///         ResponseFailExample = "&lt;note&gt;fail&lt;/note&gt;",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 500,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = 5000,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleApiAppService = Tencentcloud.ApiGateway.GetApiAppService.Invoke(new()
        ///     {
        ///         ServiceId = exampleApi.ServiceId,
        ///         ApiRegion = "ap-guangzhou",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetApiAppServiceResult> Invoke(GetApiAppServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiAppServiceResult>("tencentcloud:ApiGateway/getApiAppService:getApiAppService", args ?? new GetApiAppServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiAppServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Territory to which the service belongs.
        /// </summary>
        [Input("apiRegion", required: true)]
        public string ApiRegion { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The unique ID of the service to be queried.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetApiAppServiceArgs()
        {
        }
        public static new GetApiAppServiceArgs Empty => new GetApiAppServiceArgs();
    }

    public sealed class GetApiAppServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Territory to which the service belongs.
        /// </summary>
        [Input("apiRegion", required: true)]
        public Input<string> ApiRegion { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The unique ID of the service to be queried.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetApiAppServiceInvokeArgs()
        {
        }
        public static new GetApiAppServiceInvokeArgs Empty => new GetApiAppServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiAppServiceResult
    {
        /// <summary>
        /// API list.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiAppServiceApiIdStatusSetResult> ApiIdStatusSets;
        public readonly string ApiRegion;
        /// <summary>
        /// Total number of APIs.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int ApiTotalCount;
        /// <summary>
        /// List of service environments.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<string> AvailableEnvironments;
        /// <summary>
        /// Use planned time.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Internal network access HTTP service port number.
        /// </summary>
        public readonly int InnerHttpPort;
        /// <summary>
        /// Internal network access https port number.
        /// </summary>
        public readonly int InnerHttpsPort;
        /// <summary>
        /// Intranet access sub domain name.
        /// </summary>
        public readonly string InternalSubDomain;
        /// <summary>
        /// IP version.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string IpVersion;
        /// <summary>
        /// Use the schedule to modify the time.
        /// </summary>
        public readonly string ModifiedTime;
        /// <summary>
        /// A list of network types, where INNER represents internal network access and OUTER represents external network access.
        /// </summary>
        public readonly ImmutableArray<string> NetTypes;
        /// <summary>
        /// External network access sub domain name.
        /// </summary>
        public readonly string OuterSubDomain;
        /// <summary>
        /// Service support protocol, optional values are http, https, and http&amp;amp;amp;https.
        /// </summary>
        public readonly string Protocol;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Service description.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string ServiceDesc;
        /// <summary>
        /// Service unique ID.
        /// </summary>
        public readonly string ServiceId;
        /// <summary>
        /// Service name.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Reserved fields.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int SetId;
        /// <summary>
        /// Use a plan array.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiAppServiceUsagePlanListResult> UsagePlanLists;
        /// <summary>
        /// Total number of usage plans.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int UsagePlanTotalCount;
        /// <summary>
        /// The user type of this service.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string UserType;

        [OutputConstructor]
        private GetApiAppServiceResult(
            ImmutableArray<Outputs.GetApiAppServiceApiIdStatusSetResult> apiIdStatusSets,

            string apiRegion,

            int apiTotalCount,

            ImmutableArray<string> availableEnvironments,

            string createdTime,

            string id,

            int innerHttpPort,

            int innerHttpsPort,

            string internalSubDomain,

            string ipVersion,

            string modifiedTime,

            ImmutableArray<string> netTypes,

            string outerSubDomain,

            string protocol,

            string? resultOutputFile,

            string serviceDesc,

            string serviceId,

            string serviceName,

            int setId,

            ImmutableArray<Outputs.GetApiAppServiceUsagePlanListResult> usagePlanLists,

            int usagePlanTotalCount,

            string userType)
        {
            ApiIdStatusSets = apiIdStatusSets;
            ApiRegion = apiRegion;
            ApiTotalCount = apiTotalCount;
            AvailableEnvironments = availableEnvironments;
            CreatedTime = createdTime;
            Id = id;
            InnerHttpPort = innerHttpPort;
            InnerHttpsPort = innerHttpsPort;
            InternalSubDomain = internalSubDomain;
            IpVersion = ipVersion;
            ModifiedTime = modifiedTime;
            NetTypes = netTypes;
            OuterSubDomain = outerSubDomain;
            Protocol = protocol;
            ResultOutputFile = resultOutputFile;
            ServiceDesc = serviceDesc;
            ServiceId = serviceId;
            ServiceName = serviceName;
            SetId = setId;
            UsagePlanLists = usagePlanLists;
            UsagePlanTotalCount = usagePlanTotalCount;
            UserType = userType;
        }
    }
}
