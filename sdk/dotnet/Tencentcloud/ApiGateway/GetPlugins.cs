// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.ApiGateway
{
    public static class GetPlugins
    {
        /// <summary>
        /// Use this data source to query detailed information of apigateway plugin
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using System.Text.Json;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = new Tencentcloud.ApiGateway.Service("exampleService", new()
        ///     {
        ///         ServiceName = "tf_example",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "desc.",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///         Tags = 
        ///         {
        ///             { "testKey", "testValue" },
        ///         },
        ///         ReleaseLimit = 500,
        ///         PreLimit = 500,
        ///         TestLimit = 500,
        ///     });
        /// 
        ///     var exampleApi = new Tencentcloud.ApiGateway.Api("exampleApi", new()
        ///     {
        ///         ServiceId = exampleService.Id,
        ///         ApiName = "hello",
        ///         ApiDesc = "my hello api",
        ///         AuthType = "NONE",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "GET",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "name",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "who are you?",
        ///                 DefaultValue = "tom",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 15,
        ///         ServiceConfigUrl = "http://www.qq.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "GET",
        ///         ResponseType = "HTML",
        ///         ResponseSuccessExample = "success",
        ///         ResponseFailExample = "fail",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 500,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = 5000,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleServiceRelease = new Tencentcloud.ApiGateway.ServiceRelease("exampleServiceRelease", new()
        ///     {
        ///         ServiceId = exampleApi.ServiceId,
        ///         EnvironmentName = "release",
        ///         ReleaseDesc = "desc.",
        ///     });
        /// 
        ///     var examplePlugin = new Tencentcloud.ApiGateway.Plugin("examplePlugin", new()
        ///     {
        ///         PluginName = "tf-example",
        ///         PluginType = "IPControl",
        ///         PluginData = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
        ///         {
        ///             ["type"] = "white_list",
        ///             ["blocks"] = "1.1.1.1",
        ///         }),
        ///         Description = "desc.",
        ///     });
        /// 
        ///     var examplePlugins = Tencentcloud.ApiGateway.GetPlugins.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceRelease.ServiceId,
        ///         PluginId = examplePlugin.Id,
        ///         EnvironmentName = "release",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPluginsResult> InvokeAsync(GetPluginsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPluginsResult>("tencentcloud:ApiGateway/getPlugins:getPlugins", args ?? new GetPluginsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of apigateway plugin
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using System.Text.Json;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = new Tencentcloud.ApiGateway.Service("exampleService", new()
        ///     {
        ///         ServiceName = "tf_example",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "desc.",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///         Tags = 
        ///         {
        ///             { "testKey", "testValue" },
        ///         },
        ///         ReleaseLimit = 500,
        ///         PreLimit = 500,
        ///         TestLimit = 500,
        ///     });
        /// 
        ///     var exampleApi = new Tencentcloud.ApiGateway.Api("exampleApi", new()
        ///     {
        ///         ServiceId = exampleService.Id,
        ///         ApiName = "hello",
        ///         ApiDesc = "my hello api",
        ///         AuthType = "NONE",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "GET",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "name",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "who are you?",
        ///                 DefaultValue = "tom",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 15,
        ///         ServiceConfigUrl = "http://www.qq.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "GET",
        ///         ResponseType = "HTML",
        ///         ResponseSuccessExample = "success",
        ///         ResponseFailExample = "fail",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 500,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = 5000,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleServiceRelease = new Tencentcloud.ApiGateway.ServiceRelease("exampleServiceRelease", new()
        ///     {
        ///         ServiceId = exampleApi.ServiceId,
        ///         EnvironmentName = "release",
        ///         ReleaseDesc = "desc.",
        ///     });
        /// 
        ///     var examplePlugin = new Tencentcloud.ApiGateway.Plugin("examplePlugin", new()
        ///     {
        ///         PluginName = "tf-example",
        ///         PluginType = "IPControl",
        ///         PluginData = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
        ///         {
        ///             ["type"] = "white_list",
        ///             ["blocks"] = "1.1.1.1",
        ///         }),
        ///         Description = "desc.",
        ///     });
        /// 
        ///     var examplePlugins = Tencentcloud.ApiGateway.GetPlugins.Invoke(new()
        ///     {
        ///         ServiceId = exampleServiceRelease.ServiceId,
        ///         PluginId = examplePlugin.Id,
        ///         EnvironmentName = "release",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPluginsResult> Invoke(GetPluginsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPluginsResult>("tencentcloud:ApiGateway/getPlugins:getPlugins", args ?? new GetPluginsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPluginsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Environmental information.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The plugin ID to query.
        /// </summary>
        [Input("pluginId", required: true)]
        public string PluginId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The service ID to query.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetPluginsArgs()
        {
        }
        public static new GetPluginsArgs Empty => new GetPluginsArgs();
    }

    public sealed class GetPluginsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Environmental information.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The plugin ID to query.
        /// </summary>
        [Input("pluginId", required: true)]
        public Input<string> PluginId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The service ID to query.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetPluginsInvokeArgs()
        {
        }
        public static new GetPluginsInvokeArgs Empty => new GetPluginsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPluginsResult
    {
        public readonly string EnvironmentName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PluginId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// List of plugin related APIs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPluginsResultResult> Results;
        public readonly string ServiceId;

        [OutputConstructor]
        private GetPluginsResult(
            string environmentName,

            string id,

            string pluginId,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetPluginsResultResult> results,

            string serviceId)
        {
            EnvironmentName = environmentName;
            Id = id;
            PluginId = pluginId;
            ResultOutputFile = resultOutputFile;
            Results = results;
            ServiceId = serviceId;
        }
    }
}
