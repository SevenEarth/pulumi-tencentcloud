// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.ApiGateway
{
    public static class GetThrottlingApis
    {
        /// <summary>
        /// Use this data source to query API gateway throttling APIs.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var service = new Tencentcloud.ApiGateway.Service("service", new()
        ///     {
        ///         ServiceName = "niceservice",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "your nice service",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var api = new Tencentcloud.ApiGateway.Api("api", new()
        ///     {
        ///         ServiceId = service.Id,
        ///         ApiName = "tf_example",
        ///         ApiDesc = "my hello api update",
        ///         AuthType = "SECRET",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "POST",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "email",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "your email please?",
        ///                 DefaultValue = "tom@qq.com",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 10,
        ///         ServiceConfigUrl = "http://www.tencent.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "POST",
        ///         ResponseType = "XML",
        ///         ResponseSuccessExample = "&lt;note&gt;success&lt;/note&gt;",
        ///         ResponseFailExample = "&lt;note&gt;fail&lt;/note&gt;",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 10,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = -10,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///         ReleaseLimit = 100,
        ///         PreLimit = 100,
        ///         TestLimit = 100,
        ///     });
        /// 
        ///     var id = Tencentcloud.ApiGateway.GetThrottlingApis.Invoke(new()
        ///     {
        ///         ServiceId = tencentcloud_api_gateway_api.Service_id,
        ///     });
        /// 
        ///     var foo = Tencentcloud.ApiGateway.GetThrottlingApis.Invoke(new()
        ///     {
        ///         ServiceId = tencentcloud_api_gateway_api.Service.Service_id,
        ///         EnvironmentNames = new[]
        ///         {
        ///             "release",
        ///             "test",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetThrottlingApisResult> InvokeAsync(GetThrottlingApisArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetThrottlingApisResult>("tencentcloud:ApiGateway/getThrottlingApis:getThrottlingApis", args ?? new GetThrottlingApisArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query API gateway throttling APIs.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var service = new Tencentcloud.ApiGateway.Service("service", new()
        ///     {
        ///         ServiceName = "niceservice",
        ///         Protocol = "http&amp;https",
        ///         ServiceDesc = "your nice service",
        ///         NetTypes = new[]
        ///         {
        ///             "INNER",
        ///             "OUTER",
        ///         },
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var api = new Tencentcloud.ApiGateway.Api("api", new()
        ///     {
        ///         ServiceId = service.Id,
        ///         ApiName = "tf_example",
        ///         ApiDesc = "my hello api update",
        ///         AuthType = "SECRET",
        ///         Protocol = "HTTP",
        ///         EnableCors = true,
        ///         RequestConfigPath = "/user/info",
        ///         RequestConfigMethod = "POST",
        ///         RequestParameters = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = "email",
        ///                 Position = "QUERY",
        ///                 Type = "string",
        ///                 Desc = "your email please?",
        ///                 DefaultValue = "tom@qq.com",
        ///                 Required = true,
        ///             },
        ///         },
        ///         ServiceConfigType = "HTTP",
        ///         ServiceConfigTimeout = 10,
        ///         ServiceConfigUrl = "http://www.tencent.com",
        ///         ServiceConfigPath = "/user",
        ///         ServiceConfigMethod = "POST",
        ///         ResponseType = "XML",
        ///         ResponseSuccessExample = "&lt;note&gt;success&lt;/note&gt;",
        ///         ResponseFailExample = "&lt;note&gt;fail&lt;/note&gt;",
        ///         ResponseErrorCodes = new[]
        ///         {
        ///             new Tencentcloud.ApiGateway.Inputs.ApiResponseErrorCodeArgs
        ///             {
        ///                 Code = 10,
        ///                 Msg = "system error",
        ///                 Desc = "system error code",
        ///                 ConvertedCode = -10,
        ///                 NeedConvert = true,
        ///             },
        ///         },
        ///         ReleaseLimit = 100,
        ///         PreLimit = 100,
        ///         TestLimit = 100,
        ///     });
        /// 
        ///     var id = Tencentcloud.ApiGateway.GetThrottlingApis.Invoke(new()
        ///     {
        ///         ServiceId = tencentcloud_api_gateway_api.Service_id,
        ///     });
        /// 
        ///     var foo = Tencentcloud.ApiGateway.GetThrottlingApis.Invoke(new()
        ///     {
        ///         ServiceId = tencentcloud_api_gateway_api.Service.Service_id,
        ///         EnvironmentNames = new[]
        ///         {
        ///             "release",
        ///             "test",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetThrottlingApisResult> Invoke(GetThrottlingApisInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetThrottlingApisResult>("tencentcloud:ApiGateway/getThrottlingApis:getThrottlingApis", args ?? new GetThrottlingApisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThrottlingApisArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentNames")]
        private List<string>? _environmentNames;

        /// <summary>
        /// Environment list.
        /// </summary>
        public List<string> EnvironmentNames
        {
            get => _environmentNames ?? (_environmentNames = new List<string>());
            set => _environmentNames = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Unique service ID of API.
        /// </summary>
        [Input("serviceId")]
        public string? ServiceId { get; set; }

        public GetThrottlingApisArgs()
        {
        }
        public static new GetThrottlingApisArgs Empty => new GetThrottlingApisArgs();
    }

    public sealed class GetThrottlingApisInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentNames")]
        private InputList<string>? _environmentNames;

        /// <summary>
        /// Environment list.
        /// </summary>
        public InputList<string> EnvironmentNames
        {
            get => _environmentNames ?? (_environmentNames = new InputList<string>());
            set => _environmentNames = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Unique service ID of API.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public GetThrottlingApisInvokeArgs()
        {
        }
        public static new GetThrottlingApisInvokeArgs Empty => new GetThrottlingApisInvokeArgs();
    }


    [OutputType]
    public sealed class GetThrottlingApisResult
    {
        public readonly ImmutableArray<string> EnvironmentNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of policies bound to API.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetThrottlingApisListResult> Lists;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Unique service ID of API.
        /// </summary>
        public readonly string? ServiceId;

        [OutputConstructor]
        private GetThrottlingApisResult(
            ImmutableArray<string> environmentNames,

            string id,

            ImmutableArray<Outputs.GetThrottlingApisListResult> lists,

            string? resultOutputFile,

            string? serviceId)
        {
            EnvironmentNames = environmentNames;
            Id = id;
            Lists = lists;
            ResultOutputFile = resultOutputFile;
            ServiceId = serviceId;
        }
    }
}
