// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.ApiGateway
{
    public static class GetCustomerDomains
    {
        /// <summary>
        /// Use this data source to query API gateway domain list.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = new Tencentcloud.ApiGateway.CustomDomain("foo", new()
        ///     {
        ///         ServiceId = "service-ohxqslqe",
        ///         SubDomain = "tic-test.dnsv1.com",
        ///         Protocol = "http",
        ///         NetType = "OUTER",
        ///         IsDefaultMapping = false,
        ///         DefaultDomain = "service-ohxqslqe-1259649581.gz.apigw.tencentcs.com",
        ///         PathMappings = new[]
        ///         {
        ///             "/good#test",
        ///             "/root#release",
        ///         },
        ///     });
        /// 
        ///     var id = Tencentcloud.ApiGateway.GetCustomerDomains.Invoke(new()
        ///     {
        ///         ServiceId = foo.ServiceId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetCustomerDomainsResult> InvokeAsync(GetCustomerDomainsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomerDomainsResult>("tencentcloud:ApiGateway/getCustomerDomains:getCustomerDomains", args ?? new GetCustomerDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query API gateway domain list.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = new Tencentcloud.ApiGateway.CustomDomain("foo", new()
        ///     {
        ///         ServiceId = "service-ohxqslqe",
        ///         SubDomain = "tic-test.dnsv1.com",
        ///         Protocol = "http",
        ///         NetType = "OUTER",
        ///         IsDefaultMapping = false,
        ///         DefaultDomain = "service-ohxqslqe-1259649581.gz.apigw.tencentcs.com",
        ///         PathMappings = new[]
        ///         {
        ///             "/good#test",
        ///             "/root#release",
        ///         },
        ///     });
        /// 
        ///     var id = Tencentcloud.ApiGateway.GetCustomerDomains.Invoke(new()
        ///     {
        ///         ServiceId = foo.ServiceId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetCustomerDomainsResult> Invoke(GetCustomerDomainsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomerDomainsResult>("tencentcloud:ApiGateway/getCustomerDomains:getCustomerDomains", args ?? new GetCustomerDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomerDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The service ID.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetCustomerDomainsArgs()
        {
        }
        public static new GetCustomerDomainsArgs Empty => new GetCustomerDomainsArgs();
    }

    public sealed class GetCustomerDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The service ID.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetCustomerDomainsInvokeArgs()
        {
        }
        public static new GetCustomerDomainsInvokeArgs Empty => new GetCustomerDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomerDomainsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service custom domain name list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCustomerDomainsListResult> Lists;
        public readonly string? ResultOutputFile;
        public readonly string ServiceId;

        [OutputConstructor]
        private GetCustomerDomainsResult(
            string id,

            ImmutableArray<Outputs.GetCustomerDomainsListResult> lists,

            string? resultOutputFile,

            string serviceId)
        {
            Id = id;
            Lists = lists;
            ResultOutputFile = resultOutputFile;
            ServiceId = serviceId;
        }
    }
}
