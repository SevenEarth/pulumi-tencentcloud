// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tcr
{
    public static class GetVpcAttachments
    {
        /// <summary>
        /// Use this data source to query detailed information of TCR VPC attachment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var id = Tencentcloud.Tcr.GetVpcAttachments.Invoke(new()
        ///     {
        ///         InstanceId = "cls-satg5125",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetVpcAttachmentsResult> InvokeAsync(GetVpcAttachmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcAttachmentsResult>("tencentcloud:Tcr/getVpcAttachments:getVpcAttachments", args ?? new GetVpcAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of TCR VPC attachment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var id = Tencentcloud.Tcr.GetVpcAttachments.Invoke(new()
        ///     {
        ///         InstanceId = "cls-satg5125",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetVpcAttachmentsResult> Invoke(GetVpcAttachmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcAttachmentsResult>("tencentcloud:Tcr/getVpcAttachments:getVpcAttachments", args ?? new GetVpcAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the instance to query.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of subnet to query.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// ID of VPC to query.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetVpcAttachmentsArgs()
        {
        }
        public static new GetVpcAttachmentsArgs Empty => new GetVpcAttachmentsArgs();
    }

    public sealed class GetVpcAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the instance to query.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// ID of subnet to query.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// ID of VPC to query.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetVpcAttachmentsInvokeArgs()
        {
        }
        public static new GetVpcAttachmentsInvokeArgs Empty => new GetVpcAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcAttachmentsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// ID of subnet.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// Information list of the dedicated TCR namespaces.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcAttachmentsVpcAttachmentListResult> VpcAttachmentLists;
        /// <summary>
        /// ID of VPC.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetVpcAttachmentsResult(
            string id,

            string instanceId,

            string? resultOutputFile,

            string? subnetId,

            ImmutableArray<Outputs.GetVpcAttachmentsVpcAttachmentListResult> vpcAttachmentLists,

            string? vpcId)
        {
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            VpcAttachmentLists = vpcAttachmentLists;
            VpcId = vpcId;
        }
    }
}
