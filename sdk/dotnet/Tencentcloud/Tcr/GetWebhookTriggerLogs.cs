// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tcr
{
    public static class GetWebhookTriggerLogs
    {
        /// <summary>
        /// Use this data source to query detailed information of tencentcloud.Tcr.getWebhookTriggerLogs
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myLogs = Output.Create(Tencentcloud.Tcr.GetWebhookTriggerLogs.InvokeAsync(new Tencentcloud.Tcr.GetWebhookTriggerLogsArgs
        ///         {
        ///             RegistryId = local.Tcr_id,
        ///             Namespace = @var.Tcr_namespace,
        ///             TriggerId = @var.Trigger_id,
        ///             Tags = 
        ///             {
        ///                 { "createdBy", "terraform" },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWebhookTriggerLogsResult> InvokeAsync(GetWebhookTriggerLogsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWebhookTriggerLogsResult>("tencentcloud:Tcr/getWebhookTriggerLogs:getWebhookTriggerLogs", args ?? new GetWebhookTriggerLogsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tencentcloud.Tcr.getWebhookTriggerLogs
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myLogs = Output.Create(Tencentcloud.Tcr.GetWebhookTriggerLogs.InvokeAsync(new Tencentcloud.Tcr.GetWebhookTriggerLogsArgs
        ///         {
        ///             RegistryId = local.Tcr_id,
        ///             Namespace = @var.Tcr_namespace,
        ///             TriggerId = @var.Trigger_id,
        ///             Tags = 
        ///             {
        ///                 { "createdBy", "terraform" },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWebhookTriggerLogsResult> Invoke(GetWebhookTriggerLogsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWebhookTriggerLogsResult>("tencentcloud:Tcr/getWebhookTriggerLogs:getWebhookTriggerLogs", args ?? new GetWebhookTriggerLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebhookTriggerLogsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// namespace.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// instance Id.
        /// </summary>
        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// trigger id.
        /// </summary>
        [Input("triggerId", required: true)]
        public int TriggerId { get; set; }

        public GetWebhookTriggerLogsArgs()
        {
        }
    }

    public sealed class GetWebhookTriggerLogsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// namespace.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// instance Id.
        /// </summary>
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// trigger id.
        /// </summary>
        [Input("triggerId", required: true)]
        public Input<int> TriggerId { get; set; } = null!;

        public GetWebhookTriggerLogsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWebhookTriggerLogsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// log list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWebhookTriggerLogsLogResult> Logs;
        public readonly string Namespace;
        public readonly string RegistryId;
        public readonly string? ResultOutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// trigger Id.
        /// </summary>
        public readonly int TriggerId;

        [OutputConstructor]
        private GetWebhookTriggerLogsResult(
            string id,

            ImmutableArray<Outputs.GetWebhookTriggerLogsLogResult> logs,

            string @namespace,

            string registryId,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags,

            int triggerId)
        {
            Id = id;
            Logs = logs;
            Namespace = @namespace;
            RegistryId = registryId;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
            TriggerId = triggerId;
        }
    }
}
