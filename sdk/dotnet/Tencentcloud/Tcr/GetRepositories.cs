// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tcr
{
    public static class GetRepositories
    {
        /// <summary>
        /// Use this data source to query detailed information of TCR repositories.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var name = Output.Create(Tencentcloud.Tcr.GetRepositories.InvokeAsync(new Tencentcloud.Tcr.GetRepositoriesArgs
        ///         {
        ///             Name = "test",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRepositoriesResult> InvokeAsync(GetRepositoriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRepositoriesResult>("tencentcloud:Tcr/getRepositories:getRepositories", args ?? new GetRepositoriesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of TCR repositories.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var name = Output.Create(Tencentcloud.Tcr.GetRepositories.InvokeAsync(new Tencentcloud.Tcr.GetRepositoriesArgs
        ///         {
        ///             Name = "test",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRepositoriesResult> Invoke(GetRepositoriesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRepositoriesResult>("tencentcloud:Tcr/getRepositories:getRepositories", args ?? new GetRepositoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the TCR instance that the repository belongs to.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Name of the namespace that the repository belongs to.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        /// <summary>
        /// ID of the TCR repositories to query.
        /// </summary>
        [Input("repositoryName")]
        public string? RepositoryName { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRepositoriesArgs()
        {
        }
    }

    public sealed class GetRepositoriesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the TCR instance that the repository belongs to.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Name of the namespace that the repository belongs to.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// ID of the TCR repositories to query.
        /// </summary>
        [Input("repositoryName")]
        public Input<string>? RepositoryName { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRepositoriesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRepositoriesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        /// <summary>
        /// Name of the namespace that the repository belongs to.
        /// </summary>
        public readonly string NamespaceName;
        /// <summary>
        /// Information list of the dedicated TCR repositories.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRepositoriesRepositoryListResult> RepositoryLists;
        public readonly string? RepositoryName;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetRepositoriesResult(
            string id,

            string instanceId,

            string namespaceName,

            ImmutableArray<Outputs.GetRepositoriesRepositoryListResult> repositoryLists,

            string? repositoryName,

            string? resultOutputFile)
        {
            Id = id;
            InstanceId = instanceId;
            NamespaceName = namespaceName;
            RepositoryLists = repositoryLists;
            RepositoryName = repositoryName;
            ResultOutputFile = resultOutputFile;
        }
    }
}
