// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vod
{
    public static class GetProcedureTemplates
    {
        /// <summary>
        /// Use this data source to query detailed information of VOD procedure templates.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooProcedureTemplate = new Tencentcloud.Vod.ProcedureTemplate("fooProcedureTemplate", new Tencentcloud.Vod.ProcedureTemplateArgs
        ///         {
        ///             Comment = "test",
        ///             MediaProcessTask = new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskArgs
        ///             {
        ///                 AdaptiveDynamicStreamingTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id,
        ///                     },
        ///                 },
        ///                 SnapshotByTimeOffsetTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_snapshot_by_time_offset_template.Foo.Id,
        ///                         ExtTimeOffsetLists = 
        ///                         {
        ///                             "3.5s",
        ///                         },
        ///                     },
        ///                 },
        ///                 ImageSpriteTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_image_sprite_template.Foo.Id,
        ///                     },
        ///                 },
        ///             },
        ///         });
        ///         var fooProcedureTemplates = Tencentcloud.Vod.GetProcedureTemplates.Invoke(new Tencentcloud.Vod.GetProcedureTemplatesInvokeArgs
        ///         {
        ///             Type = "Custom",
        ///             Name = fooProcedureTemplate.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProcedureTemplatesResult> InvokeAsync(GetProcedureTemplatesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProcedureTemplatesResult>("tencentcloud:Vod/getProcedureTemplates:getProcedureTemplates", args ?? new GetProcedureTemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of VOD procedure templates.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooProcedureTemplate = new Tencentcloud.Vod.ProcedureTemplate("fooProcedureTemplate", new Tencentcloud.Vod.ProcedureTemplateArgs
        ///         {
        ///             Comment = "test",
        ///             MediaProcessTask = new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskArgs
        ///             {
        ///                 AdaptiveDynamicStreamingTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id,
        ///                     },
        ///                 },
        ///                 SnapshotByTimeOffsetTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_snapshot_by_time_offset_template.Foo.Id,
        ///                         ExtTimeOffsetLists = 
        ///                         {
        ///                             "3.5s",
        ///                         },
        ///                     },
        ///                 },
        ///                 ImageSpriteTaskLists = 
        ///                 {
        ///                     new Tencentcloud.Vod.Inputs.ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs
        ///                     {
        ///                         Definition = tencentcloud_vod_image_sprite_template.Foo.Id,
        ///                     },
        ///                 },
        ///             },
        ///         });
        ///         var fooProcedureTemplates = Tencentcloud.Vod.GetProcedureTemplates.Invoke(new Tencentcloud.Vod.GetProcedureTemplatesInvokeArgs
        ///         {
        ///             Type = "Custom",
        ///             Name = fooProcedureTemplate.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProcedureTemplatesResult> Invoke(GetProcedureTemplatesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProcedureTemplatesResult>("tencentcloud:Vod/getProcedureTemplates:getProcedureTemplates", args ?? new GetProcedureTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProcedureTemplatesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of procedure template.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
        /// </summary>
        [Input("subAppId")]
        public int? SubAppId { get; set; }

        /// <summary>
        /// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetProcedureTemplatesArgs()
        {
        }
    }

    public sealed class GetProcedureTemplatesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of procedure template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
        /// </summary>
        [Input("subAppId")]
        public Input<int>? SubAppId { get; set; }

        /// <summary>
        /// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetProcedureTemplatesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProcedureTemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Task flow name.
        /// </summary>
        public readonly string? Name;
        public readonly string? ResultOutputFile;
        public readonly int? SubAppId;
        /// <summary>
        /// A list of adaptive dynamic streaming templates. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProcedureTemplatesTemplateListResult> TemplateLists;
        /// <summary>
        /// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetProcedureTemplatesResult(
            string id,

            string? name,

            string? resultOutputFile,

            int? subAppId,

            ImmutableArray<Outputs.GetProcedureTemplatesTemplateListResult> templateLists,

            string? type)
        {
            Id = id;
            Name = name;
            ResultOutputFile = resultOutputFile;
            SubAppId = subAppId;
            TemplateLists = templateLists;
            Type = type;
        }
    }
}
