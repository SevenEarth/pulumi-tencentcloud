// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vod.Inputs
{

    public sealed class ProcedureTemplateMediaProcessTaskTranscodeTaskListGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// opyright watermark.
        /// </summary>
        [Input("copyRightWatermark")]
        public Input<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListCopyRightWatermarkGetArgs>? CopyRightWatermark { get; set; }

        /// <summary>
        /// Video transcoding template ID.
        /// </summary>
        [Input("definition", required: true)]
        public Input<string> Definition { get; set; } = null!;

        /// <summary>
        /// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
        /// </summary>
        [Input("endTimeOffset")]
        public Input<double>? EndTimeOffset { get; set; }

        [Input("headTailLists")]
        private InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListHeadTailListGetArgs>? _headTailLists;

        /// <summary>
        /// List of video opening/closing credits configuration template IDs. You can enter up to 10 IDs.
        /// </summary>
        public InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListHeadTailListGetArgs> HeadTailLists
        {
            get => _headTailLists ?? (_headTailLists = new InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListHeadTailListGetArgs>());
            set => _headTailLists = value;
        }

        [Input("mosaicLists")]
        private InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListGetArgs>? _mosaicLists;

        /// <summary>
        /// List of blurs. Up to 10 ones can be supported.
        /// </summary>
        public InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListGetArgs> MosaicLists
        {
            get => _mosaicLists ?? (_mosaicLists = new InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListGetArgs>());
            set => _mosaicLists = value;
        }

        /// <summary>
        /// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
        /// </summary>
        [Input("startTimeOffset")]
        public Input<double>? StartTimeOffset { get; set; }

        /// <summary>
        /// Digital watermark.
        /// </summary>
        [Input("traceWatermark")]
        public Input<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListTraceWatermarkGetArgs>? TraceWatermark { get; set; }

        [Input("watermarkLists")]
        private InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListGetArgs>? _watermarkLists;

        /// <summary>
        /// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListGetArgs> WatermarkLists
        {
            get => _watermarkLists ?? (_watermarkLists = new InputList<Inputs.ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListGetArgs>());
            set => _watermarkLists = value;
        }

        public ProcedureTemplateMediaProcessTaskTranscodeTaskListGetArgs()
        {
        }
        public static new ProcedureTemplateMediaProcessTaskTranscodeTaskListGetArgs Empty => new ProcedureTemplateMediaProcessTaskTranscodeTaskListGetArgs();
    }
}
