// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vod
{
    public static class GetSuperPlayerConfigs
    {
        /// <summary>
        /// Use this data source to query detailed information of VOD super player configs.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooSuperPlayerConfig = new Tencentcloud.Vod.SuperPlayerConfig("fooSuperPlayerConfig", new Tencentcloud.Vod.SuperPlayerConfigArgs
        ///         {
        ///             DrmSwitch = true,
        ///             DrmStreamingInfo = new Tencentcloud.Vod.Inputs.SuperPlayerConfigDrmStreamingInfoArgs
        ///             {
        ///                 SimpleAesDefinition = tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id,
        ///             },
        ///             ImageSpriteDefinition = tencentcloud_vod_image_sprite_template.Foo.Id,
        ///             ResolutionNames = 
        ///             {
        ///                 new Tencentcloud.Vod.Inputs.SuperPlayerConfigResolutionNameArgs
        ///                 {
        ///                     MinEdgeLength = 889,
        ///                     Name = "test1",
        ///                 },
        ///                 new Tencentcloud.Vod.Inputs.SuperPlayerConfigResolutionNameArgs
        ///                 {
        ///                     MinEdgeLength = 890,
        ///                     Name = "test2",
        ///                 },
        ///             },
        ///             Domain = "Default",
        ///             Scheme = "Default",
        ///             Comment = "test",
        ///         });
        ///         var fooSuperPlayerConfigs = Output.Create(Tencentcloud.Vod.GetSuperPlayerConfigs.InvokeAsync(new Tencentcloud.Vod.GetSuperPlayerConfigsArgs
        ///         {
        ///             Type = "Custom",
        ///             Name = "tf-super-player",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSuperPlayerConfigsResult> InvokeAsync(GetSuperPlayerConfigsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSuperPlayerConfigsResult>("tencentcloud:Vod/getSuperPlayerConfigs:getSuperPlayerConfigs", args ?? new GetSuperPlayerConfigsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of VOD super player configs.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooSuperPlayerConfig = new Tencentcloud.Vod.SuperPlayerConfig("fooSuperPlayerConfig", new Tencentcloud.Vod.SuperPlayerConfigArgs
        ///         {
        ///             DrmSwitch = true,
        ///             DrmStreamingInfo = new Tencentcloud.Vod.Inputs.SuperPlayerConfigDrmStreamingInfoArgs
        ///             {
        ///                 SimpleAesDefinition = tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id,
        ///             },
        ///             ImageSpriteDefinition = tencentcloud_vod_image_sprite_template.Foo.Id,
        ///             ResolutionNames = 
        ///             {
        ///                 new Tencentcloud.Vod.Inputs.SuperPlayerConfigResolutionNameArgs
        ///                 {
        ///                     MinEdgeLength = 889,
        ///                     Name = "test1",
        ///                 },
        ///                 new Tencentcloud.Vod.Inputs.SuperPlayerConfigResolutionNameArgs
        ///                 {
        ///                     MinEdgeLength = 890,
        ///                     Name = "test2",
        ///                 },
        ///             },
        ///             Domain = "Default",
        ///             Scheme = "Default",
        ///             Comment = "test",
        ///         });
        ///         var fooSuperPlayerConfigs = Output.Create(Tencentcloud.Vod.GetSuperPlayerConfigs.InvokeAsync(new Tencentcloud.Vod.GetSuperPlayerConfigsArgs
        ///         {
        ///             Type = "Custom",
        ///             Name = "tf-super-player",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSuperPlayerConfigsResult> Invoke(GetSuperPlayerConfigsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSuperPlayerConfigsResult>("tencentcloud:Vod/getSuperPlayerConfigs:getSuperPlayerConfigs", args ?? new GetSuperPlayerConfigsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSuperPlayerConfigsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of super player config.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
        /// </summary>
        [Input("subAppId")]
        public int? SubAppId { get; set; }

        /// <summary>
        /// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetSuperPlayerConfigsArgs()
        {
        }
    }

    public sealed class GetSuperPlayerConfigsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of super player config.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
        /// </summary>
        [Input("subAppId")]
        public Input<int>? SubAppId { get; set; }

        /// <summary>
        /// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetSuperPlayerConfigsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSuperPlayerConfigsResult
    {
        /// <summary>
        /// A list of super player configs. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListResult> ConfigLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Display name.
        /// </summary>
        public readonly string? Name;
        public readonly string? ResultOutputFile;
        public readonly int? SubAppId;
        /// <summary>
        /// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetSuperPlayerConfigsResult(
            ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListResult> configLists,

            string id,

            string? name,

            string? resultOutputFile,

            int? subAppId,

            string? type)
        {
            ConfigLists = configLists;
            Id = id;
            Name = name;
            ResultOutputFile = resultOutputFile;
            SubAppId = subAppId;
            Type = type;
        }
    }
}
