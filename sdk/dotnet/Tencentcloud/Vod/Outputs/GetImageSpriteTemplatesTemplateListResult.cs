// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vod.Outputs
{

    [OutputType]
    public sealed class GetImageSpriteTemplatesTemplateListResult
    {
        /// <summary>
        /// Subimage column count of an image sprite.
        /// </summary>
        public readonly int ColumnCount;
        /// <summary>
        /// Template description.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// Creation time of template in ISO date format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Unique ID filter of image sprite template.
        /// </summary>
        public readonly string Definition;
        /// <summary>
        /// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.
        /// </summary>
        public readonly string FillType;
        /// <summary>
        /// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
        /// </summary>
        public readonly int Height;
        /// <summary>
        /// Name of a time point screen capturing template.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resolution adaption. Valid values: `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
        /// </summary>
        public readonly bool ResolutionAdaptive;
        /// <summary>
        /// Subimage row count of an image sprite.
        /// </summary>
        public readonly int RowCount;
        /// <summary>
        /// Sampling interval. If `sample_type` is `Percent`, sampling will be performed at an interval of the specified percentage. If `sample_type` is `Time`, sampling will be performed at the specified time interval in seconds.
        /// </summary>
        public readonly int SampleInterval;
        /// <summary>
        /// Sampling type. Valid values: `Percent`, `Time`. `Percent`: by percent. `Time`: by time interval.
        /// </summary>
        public readonly string SampleType;
        /// <summary>
        /// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Last modified time of template in ISO date format.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
        /// </summary>
        public readonly int Width;

        [OutputConstructor]
        private GetImageSpriteTemplatesTemplateListResult(
            int columnCount,

            string comment,

            string createTime,

            string definition,

            string fillType,

            int height,

            string name,

            bool resolutionAdaptive,

            int rowCount,

            int sampleInterval,

            string sampleType,

            string type,

            string updateTime,

            int width)
        {
            ColumnCount = columnCount;
            Comment = comment;
            CreateTime = createTime;
            Definition = definition;
            FillType = fillType;
            Height = height;
            Name = name;
            ResolutionAdaptive = resolutionAdaptive;
            RowCount = rowCount;
            SampleInterval = sampleInterval;
            SampleType = sampleType;
            Type = type;
            UpdateTime = updateTime;
            Width = width;
        }
    }
}
