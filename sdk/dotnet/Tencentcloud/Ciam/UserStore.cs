// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ciam
{
    /// <summary>
    /// Provides a resource to create a ciam user store
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var userStore = new Tencentcloud.Ciam.UserStore("userStore", new Tencentcloud.Ciam.UserStoreArgs
    ///         {
    ///             UserPoolDesc = "for terraform test 123",
    ///             UserPoolLogo = "https://ciam-prd-1302490086.cos.ap-guangzhou.myqcloud.com/temporary/92630252a2c5422d9663db5feafd619b.png",
    ///             UserPoolName = "tf_user_store",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ciam user_store can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Ciam/userStore:UserStore user_store userStoreId
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Ciam/userStore:UserStore")]
    public partial class UserStore : Pulumi.CustomResource
    {
        /// <summary>
        /// User Store Description.
        /// </summary>
        [Output("userPoolDesc")]
        public Output<string?> UserPoolDesc { get; private set; } = null!;

        /// <summary>
        /// User Store Logo.
        /// </summary>
        [Output("userPoolLogo")]
        public Output<string?> UserPoolLogo { get; private set; } = null!;

        /// <summary>
        /// User Store Name.
        /// </summary>
        [Output("userPoolName")]
        public Output<string> UserPoolName { get; private set; } = null!;


        /// <summary>
        /// Create a UserStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserStore(string name, UserStoreArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ciam/userStore:UserStore", name, args ?? new UserStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserStore(string name, Input<string> id, UserStoreState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ciam/userStore:UserStore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserStore Get(string name, Input<string> id, UserStoreState? state = null, CustomResourceOptions? options = null)
        {
            return new UserStore(name, id, state, options);
        }
    }

    public sealed class UserStoreArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// User Store Description.
        /// </summary>
        [Input("userPoolDesc")]
        public Input<string>? UserPoolDesc { get; set; }

        /// <summary>
        /// User Store Logo.
        /// </summary>
        [Input("userPoolLogo")]
        public Input<string>? UserPoolLogo { get; set; }

        /// <summary>
        /// User Store Name.
        /// </summary>
        [Input("userPoolName", required: true)]
        public Input<string> UserPoolName { get; set; } = null!;

        public UserStoreArgs()
        {
        }
    }

    public sealed class UserStoreState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// User Store Description.
        /// </summary>
        [Input("userPoolDesc")]
        public Input<string>? UserPoolDesc { get; set; }

        /// <summary>
        /// User Store Logo.
        /// </summary>
        [Input("userPoolLogo")]
        public Input<string>? UserPoolLogo { get; set; }

        /// <summary>
        /// User Store Name.
        /// </summary>
        [Input("userPoolName")]
        public Input<string>? UserPoolName { get; set; }

        public UserStoreState()
        {
        }
    }
}
