// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Lighthouse
{
    /// <summary>
    /// Provides a resource to create a lighthouse apply_disk_backup
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var applyDiskBackup = new Tencentcloud.Lighthouse.ApplyDiskBackup("applyDiskBackup", new Tencentcloud.Lighthouse.ApplyDiskBackupArgs
    ///         {
    ///             DiskBackupId = "lhbak-xxxxxx",
    ///             DiskId = "lhdisk-xxxxxx",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Lighthouse/applyDiskBackup:ApplyDiskBackup")]
    public partial class ApplyDiskBackup : Pulumi.CustomResource
    {
        /// <summary>
        /// Disk backup ID.
        /// </summary>
        [Output("diskBackupId")]
        public Output<string> DiskBackupId { get; private set; } = null!;

        /// <summary>
        /// Disk ID.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;


        /// <summary>
        /// Create a ApplyDiskBackup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplyDiskBackup(string name, ApplyDiskBackupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Lighthouse/applyDiskBackup:ApplyDiskBackup", name, args ?? new ApplyDiskBackupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplyDiskBackup(string name, Input<string> id, ApplyDiskBackupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Lighthouse/applyDiskBackup:ApplyDiskBackup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplyDiskBackup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplyDiskBackup Get(string name, Input<string> id, ApplyDiskBackupState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplyDiskBackup(name, id, state, options);
        }
    }

    public sealed class ApplyDiskBackupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disk backup ID.
        /// </summary>
        [Input("diskBackupId", required: true)]
        public Input<string> DiskBackupId { get; set; } = null!;

        /// <summary>
        /// Disk ID.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        public ApplyDiskBackupArgs()
        {
        }
    }

    public sealed class ApplyDiskBackupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disk backup ID.
        /// </summary>
        [Input("diskBackupId")]
        public Input<string>? DiskBackupId { get; set; }

        /// <summary>
        /// Disk ID.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        public ApplyDiskBackupState()
        {
        }
    }
}
