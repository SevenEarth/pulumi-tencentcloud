// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Lighthouse.Outputs
{

    [OutputType]
    public sealed class GetResetInstanceBlueprintResetInstanceBlueprintSetBlueprintInfoResult
    {
        /// <summary>
        /// Image ID, which is the unique identity of Blueprint.
        /// </summary>
        public readonly string BlueprintId;
        /// <summary>
        /// Mirror name.
        /// </summary>
        public readonly string BlueprintName;
        /// <summary>
        /// Mirror status.
        /// </summary>
        public readonly string BlueprintState;
        /// <summary>
        /// Image type, such as APP_OS, PURE_OS, PRIVATE.
        /// </summary>
        public readonly string BlueprintType;
        /// <summary>
        /// The official website Url.
        /// </summary>
        public readonly string CommunityUrl;
        /// <summary>
        /// Creation time. Expressed according to the ISO8601 standard, and using UTC time. The format is YYYY-MM-DDThh:mm:ssZ.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Mirror description information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The mirror image shows the title to the public.
        /// </summary>
        public readonly string DisplayTitle;
        /// <summary>
        /// The image shows the version to the public.
        /// </summary>
        public readonly string DisplayVersion;
        /// <summary>
        /// Docker version number.
        /// </summary>
        public readonly string DockerVersion;
        /// <summary>
        /// Guide article Url.
        /// </summary>
        public readonly string GuideUrl;
        /// <summary>
        /// CVM image ID after sharing the CVM image to the lightweight application server.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Mirror image URL.
        /// </summary>
        public readonly string ImageUrl;
        /// <summary>
        /// Operating system name.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Operating system platform.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// Operating system platform type, such as LINUX_UNIX, WINDOWS.
        /// </summary>
        public readonly string PlatformType;
        /// <summary>
        /// Memory required for mirroring (in GB).
        /// </summary>
        public readonly int RequiredMemorySize;
        /// <summary>
        /// The size of the system disk required for image (in GB).
        /// </summary>
        public readonly int RequiredSystemDiskSize;
        /// <summary>
        /// The mirror association uses the scene Id list.
        /// </summary>
        public readonly ImmutableArray<string> SceneIdSets;
        /// <summary>
        /// Whether the image supports automation helper.
        /// </summary>
        public readonly bool SupportAutomationTools;

        [OutputConstructor]
        private GetResetInstanceBlueprintResetInstanceBlueprintSetBlueprintInfoResult(
            string blueprintId,

            string blueprintName,

            string blueprintState,

            string blueprintType,

            string communityUrl,

            string createdTime,

            string description,

            string displayTitle,

            string displayVersion,

            string dockerVersion,

            string guideUrl,

            string imageId,

            string imageUrl,

            string osName,

            string platform,

            string platformType,

            int requiredMemorySize,

            int requiredSystemDiskSize,

            ImmutableArray<string> sceneIdSets,

            bool supportAutomationTools)
        {
            BlueprintId = blueprintId;
            BlueprintName = blueprintName;
            BlueprintState = blueprintState;
            BlueprintType = blueprintType;
            CommunityUrl = communityUrl;
            CreatedTime = createdTime;
            Description = description;
            DisplayTitle = displayTitle;
            DisplayVersion = displayVersion;
            DockerVersion = dockerVersion;
            GuideUrl = guideUrl;
            ImageId = imageId;
            ImageUrl = imageUrl;
            OsName = osName;
            Platform = platform;
            PlatformType = platformType;
            RequiredMemorySize = requiredMemorySize;
            RequiredSystemDiskSize = requiredSystemDiskSize;
            SceneIdSets = sceneIdSets;
            SupportAutomationTools = supportAutomationTools;
        }
    }
}
