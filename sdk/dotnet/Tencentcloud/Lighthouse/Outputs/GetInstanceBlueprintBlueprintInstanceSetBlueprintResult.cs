// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Lighthouse.Outputs
{

    [OutputType]
    public sealed class GetInstanceBlueprintBlueprintInstanceSetBlueprintResult
    {
        /// <summary>
        /// Blueprint ID, which is the unique identifier of Blueprint.
        /// </summary>
        public readonly string BlueprintId;
        /// <summary>
        /// Blueprint name.
        /// </summary>
        public readonly string BlueprintName;
        /// <summary>
        /// Blueprint status.
        /// </summary>
        public readonly string BlueprintState;
        /// <summary>
        /// Blueprint type, such as APP_OS, PURE_OS, and PRIVATE.
        /// </summary>
        public readonly string BlueprintType;
        /// <summary>
        /// URL of official website of the open-source project.
        /// </summary>
        public readonly string CommunityUrl;
        /// <summary>
        /// Creation time according to ISO 8601 standard. UTC time is used. Format is YYYY-MM-DDThh:mm:ssZ.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Image description information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Blueprint title to be displayed.
        /// </summary>
        public readonly string DisplayTitle;
        /// <summary>
        /// Blueprint version to be displayed.
        /// </summary>
        public readonly string DisplayVersion;
        /// <summary>
        /// Docker version.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string DockerVersion;
        /// <summary>
        /// Guide documentation URL.
        /// </summary>
        public readonly string GuideUrl;
        /// <summary>
        /// ID of the Lighthouse blueprint shared from a CVM imageNote: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Software picture URL.
        /// </summary>
        public readonly string ImageUrl;
        /// <summary>
        /// OS name.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// OS type.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// OS type, such as LINUX_UNIX and WINDOWS.
        /// </summary>
        public readonly string PlatformType;
        /// <summary>
        /// Memory size required by blueprint in GB.
        /// </summary>
        public readonly int RequiredMemorySize;
        /// <summary>
        /// System disk size required by blueprint in GB.
        /// </summary>
        public readonly int RequiredSystemDiskSize;
        /// <summary>
        /// Array of IDs of scenes associated with a blueprintNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<string> SceneIdSets;
        /// <summary>
        /// Whether the blueprint supports automation tools.
        /// </summary>
        public readonly bool SupportAutomationTools;

        [OutputConstructor]
        private GetInstanceBlueprintBlueprintInstanceSetBlueprintResult(
            string blueprintId,

            string blueprintName,

            string blueprintState,

            string blueprintType,

            string communityUrl,

            string createdTime,

            string description,

            string displayTitle,

            string displayVersion,

            string dockerVersion,

            string guideUrl,

            string imageId,

            string imageUrl,

            string osName,

            string platform,

            string platformType,

            int requiredMemorySize,

            int requiredSystemDiskSize,

            ImmutableArray<string> sceneIdSets,

            bool supportAutomationTools)
        {
            BlueprintId = blueprintId;
            BlueprintName = blueprintName;
            BlueprintState = blueprintState;
            BlueprintType = blueprintType;
            CommunityUrl = communityUrl;
            CreatedTime = createdTime;
            Description = description;
            DisplayTitle = displayTitle;
            DisplayVersion = displayVersion;
            DockerVersion = dockerVersion;
            GuideUrl = guideUrl;
            ImageId = imageId;
            ImageUrl = imageUrl;
            OsName = osName;
            Platform = platform;
            PlatformType = platformType;
            RequiredMemorySize = requiredMemorySize;
            RequiredSystemDiskSize = requiredSystemDiskSize;
            SceneIdSets = sceneIdSets;
            SupportAutomationTools = supportAutomationTools;
        }
    }
}
