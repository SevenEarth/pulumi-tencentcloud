// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Lighthouse.Outputs
{

    [OutputType]
    public sealed class GetBundleBundleSetResult
    {
        /// <summary>
        /// Package tag.Valid values:ACTIVITY: promotional packageNORMAL: regular packageCAREFREE: carefree package.
        /// </summary>
        public readonly string BundleDisplayLabel;
        /// <summary>
        /// Package ID.
        /// </summary>
        public readonly string BundleId;
        /// <summary>
        /// Package sale status. Valid values are AVAILABLE, SOLD_OUT.
        /// </summary>
        public readonly string BundleSalesState;
        /// <summary>
        /// Package type.Valid values:GENERAL_BUNDLE: generalSTORAGE_BUNDLE: Storage.
        /// </summary>
        public readonly string BundleType;
        /// <summary>
        /// CPU.
        /// </summary>
        public readonly int Cpu;
        /// <summary>
        /// Network billing mode.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// Peak bandwidth in Mbps.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// Memory size in GB.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// Monthly network traffic in Gb.
        /// </summary>
        public readonly int MonthlyTraffic;
        /// <summary>
        /// Current package unit price information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBundleBundleSetPriceResult> Prices;
        /// <summary>
        /// Whether Linux/Unix is supported.
        /// </summary>
        public readonly bool SupportLinuxUnixPlatform;
        /// <summary>
        /// Whether Windows is supported.
        /// </summary>
        public readonly bool SupportWindowsPlatform;
        /// <summary>
        /// System disk size.
        /// </summary>
        public readonly int SystemDiskSize;
        /// <summary>
        /// System disk type.
        /// </summary>
        public readonly string SystemDiskType;

        [OutputConstructor]
        private GetBundleBundleSetResult(
            string bundleDisplayLabel,

            string bundleId,

            string bundleSalesState,

            string bundleType,

            int cpu,

            string internetChargeType,

            int internetMaxBandwidthOut,

            int memory,

            int monthlyTraffic,

            ImmutableArray<Outputs.GetBundleBundleSetPriceResult> prices,

            bool supportLinuxUnixPlatform,

            bool supportWindowsPlatform,

            int systemDiskSize,

            string systemDiskType)
        {
            BundleDisplayLabel = bundleDisplayLabel;
            BundleId = bundleId;
            BundleSalesState = bundleSalesState;
            BundleType = bundleType;
            Cpu = cpu;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            Memory = memory;
            MonthlyTraffic = monthlyTraffic;
            Prices = prices;
            SupportLinuxUnixPlatform = supportLinuxUnixPlatform;
            SupportWindowsPlatform = supportWindowsPlatform;
            SystemDiskSize = systemDiskSize;
            SystemDiskType = systemDiskType;
        }
    }
}
