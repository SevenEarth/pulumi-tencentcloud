// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain
{
    public static class GetTopSpaceSchemas
    {
        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_schemas
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceSchemas = Tencentcloud.Dbbrain.GetTopSpaceSchemas.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "DataLength",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTopSpaceSchemasResult> InvokeAsync(GetTopSpaceSchemasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopSpaceSchemasResult>("tencentcloud:Dbbrain/getTopSpaceSchemas:getTopSpaceSchemas", args ?? new GetTopSpaceSchemasArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_schemas
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceSchemas = Tencentcloud.Dbbrain.GetTopSpaceSchemas.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "DataLength",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTopSpaceSchemasResult> Invoke(GetTopSpaceSchemasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopSpaceSchemasResult>("tencentcloud:Dbbrain/getTopSpaceSchemas:getTopSpaceSchemas", args ?? new GetTopSpaceSchemasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopSpaceSchemasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top libraries to return, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public string? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top library. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        public GetTopSpaceSchemasArgs()
        {
        }
        public static new GetTopSpaceSchemasArgs Empty => new GetTopSpaceSchemasArgs();
    }

    public sealed class GetTopSpaceSchemasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top libraries to return, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top library. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        public GetTopSpaceSchemasInvokeArgs()
        {
        }
        public static new GetTopSpaceSchemasInvokeArgs Empty => new GetTopSpaceSchemasInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopSpaceSchemasResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly int? Limit;
        public readonly string? Product;
        public readonly string? ResultOutputFile;
        public readonly string? SortBy;
        /// <summary>
        /// Timestamp (in seconds) when library space data is collected.
        /// </summary>
        public readonly int Timestamp;
        /// <summary>
        /// The returned list of top library space statistics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTopSpaceSchemasTopSpaceSchemaResult> DbbrainTopSpaceSchemas;

        [OutputConstructor]
        private GetTopSpaceSchemasResult(
            string id,

            string instanceId,

            int? limit,

            string? product,

            string? resultOutputFile,

            string? sortBy,

            int timestamp,

            ImmutableArray<Outputs.GetTopSpaceSchemasTopSpaceSchemaResult> topSpaceSchemas)
        {
            Id = id;
            InstanceId = instanceId;
            Limit = limit;
            Product = product;
            ResultOutputFile = resultOutputFile;
            SortBy = sortBy;
            Timestamp = timestamp;
            DbbrainTopSpaceSchemas = topSpaceSchemas;
        }
    }
}
