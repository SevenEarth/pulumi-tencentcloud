// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain
{
    public static class GetTopSpaceTableTimeSeries
    {
        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_table_time_series
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTableTimeSeries = Tencentcloud.Dbbrain.GetTopSpaceTableTimeSeries.Invoke(new()
        ///     {
        ///         EndDate = "%s",
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "DataLength",
        ///         StartDate = "%s",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTopSpaceTableTimeSeriesResult> InvokeAsync(GetTopSpaceTableTimeSeriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopSpaceTableTimeSeriesResult>("tencentcloud:Dbbrain/getTopSpaceTableTimeSeries:getTopSpaceTableTimeSeries", args ?? new GetTopSpaceTableTimeSeriesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_table_time_series
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTableTimeSeries = Tencentcloud.Dbbrain.GetTopSpaceTableTimeSeries.Invoke(new()
        ///     {
        ///         EndDate = "%s",
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "DataLength",
        ///         StartDate = "%s",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTopSpaceTableTimeSeriesResult> Invoke(GetTopSpaceTableTimeSeriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopSpaceTableTimeSeriesResult>("tencentcloud:Dbbrain/getTopSpaceTableTimeSeries:getTopSpaceTableTimeSeries", args ?? new GetTopSpaceTableTimeSeriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopSpaceTableTimeSeriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The deadline, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the current day.
        /// </summary>
        [Input("endDate")]
        public string? EndDate { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top tables returned, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public string? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize. The default is PhysicalFileSize.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        /// <summary>
        /// The start date, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the 6th day before the deadline.
        /// </summary>
        [Input("startDate")]
        public string? StartDate { get; set; }

        public GetTopSpaceTableTimeSeriesArgs()
        {
        }
        public static new GetTopSpaceTableTimeSeriesArgs Empty => new GetTopSpaceTableTimeSeriesArgs();
    }

    public sealed class GetTopSpaceTableTimeSeriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The deadline, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the current day.
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top tables returned, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize. The default is PhysicalFileSize.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        /// <summary>
        /// The start date, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the 6th day before the deadline.
        /// </summary>
        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        public GetTopSpaceTableTimeSeriesInvokeArgs()
        {
        }
        public static new GetTopSpaceTableTimeSeriesInvokeArgs Empty => new GetTopSpaceTableTimeSeriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopSpaceTableTimeSeriesResult
    {
        public readonly string? EndDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly int? Limit;
        public readonly string? Product;
        public readonly string? ResultOutputFile;
        public readonly string? SortBy;
        public readonly string? StartDate;
        /// <summary>
        /// The time-series data list of the returned Top tablespace statistics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTopSpaceTableTimeSeriesTopSpaceTableTimeSeriesResult> DbbrainTopSpaceTableTimeSeries;

        [OutputConstructor]
        private GetTopSpaceTableTimeSeriesResult(
            string? endDate,

            string id,

            string instanceId,

            int? limit,

            string? product,

            string? resultOutputFile,

            string? sortBy,

            string? startDate,

            ImmutableArray<Outputs.GetTopSpaceTableTimeSeriesTopSpaceTableTimeSeriesResult> topSpaceTableTimeSeries)
        {
            EndDate = endDate;
            Id = id;
            InstanceId = instanceId;
            Limit = limit;
            Product = product;
            ResultOutputFile = resultOutputFile;
            SortBy = sortBy;
            StartDate = startDate;
            DbbrainTopSpaceTableTimeSeries = topSpaceTableTimeSeries;
        }
    }
}
