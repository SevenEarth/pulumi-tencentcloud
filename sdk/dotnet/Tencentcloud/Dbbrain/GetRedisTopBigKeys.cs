// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain
{
    public static class GetRedisTopBigKeys
    {
        /// <summary>
        /// Use this data source to query detailed information of dbbrain redis_top_big_keys
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var redisTopBigKeys = Tencentcloud.Dbbrain.GetRedisTopBigKeys.Invoke(new()
        ///     {
        ///         InstanceId = local.Redis_id,
        ///         Date = "%s",
        ///         Product = "redis",
        ///         SortBy = "Capacity",
        ///         KeyType = "string",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetRedisTopBigKeysResult> InvokeAsync(GetRedisTopBigKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRedisTopBigKeysResult>("tencentcloud:Dbbrain/getRedisTopBigKeys:getRedisTopBigKeys", args ?? new GetRedisTopBigKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of dbbrain redis_top_big_keys
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var redisTopBigKeys = Tencentcloud.Dbbrain.GetRedisTopBigKeys.Invoke(new()
        ///     {
        ///         InstanceId = local.Redis_id,
        ///         Date = "%s",
        ///         Product = "redis",
        ///         SortBy = "Capacity",
        ///         KeyType = "string",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetRedisTopBigKeysResult> Invoke(GetRedisTopBigKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRedisTopBigKeysResult>("tencentcloud:Dbbrain/getRedisTopBigKeys:getRedisTopBigKeys", args ?? new GetRedisTopBigKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRedisTopBigKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Query date, such as 2021-05-27, the earliest date can be the previous 30 days.
        /// </summary>
        [Input("date", required: true)]
        public string Date { get; set; } = null!;

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Key type filter condition, the default is no filter, the value includes `string`, `list`, `set`, `hash`, `sortedset`, `stream`.
        /// </summary>
        [Input("keyType")]
        public string? KeyType { get; set; }

        /// <summary>
        /// Service product type, supported values include `redis` - cloud database Redis.
        /// </summary>
        [Input("product", required: true)]
        public string Product { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Sorting field, the value includes `Capacity` - memory, `ItemCount` - number of elements, the default is `Capacity`.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        public GetRedisTopBigKeysArgs()
        {
        }
        public static new GetRedisTopBigKeysArgs Empty => new GetRedisTopBigKeysArgs();
    }

    public sealed class GetRedisTopBigKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Query date, such as 2021-05-27, the earliest date can be the previous 30 days.
        /// </summary>
        [Input("date", required: true)]
        public Input<string> Date { get; set; } = null!;

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Key type filter condition, the default is no filter, the value includes `string`, `list`, `set`, `hash`, `sortedset`, `stream`.
        /// </summary>
        [Input("keyType")]
        public Input<string>? KeyType { get; set; }

        /// <summary>
        /// Service product type, supported values include `redis` - cloud database Redis.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Sorting field, the value includes `Capacity` - memory, `ItemCount` - number of elements, the default is `Capacity`.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        public GetRedisTopBigKeysInvokeArgs()
        {
        }
        public static new GetRedisTopBigKeysInvokeArgs Empty => new GetRedisTopBigKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetRedisTopBigKeysResult
    {
        public readonly string Date;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? KeyType;
        public readonly string Product;
        public readonly string? ResultOutputFile;
        public readonly string? SortBy;
        /// <summary>
        /// list of top keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRedisTopBigKeysTopKeyResult> TopKeys;

        [OutputConstructor]
        private GetRedisTopBigKeysResult(
            string date,

            string id,

            string instanceId,

            string? keyType,

            string product,

            string? resultOutputFile,

            string? sortBy,

            ImmutableArray<Outputs.GetRedisTopBigKeysTopKeyResult> topKeys)
        {
            Date = date;
            Id = id;
            InstanceId = instanceId;
            KeyType = keyType;
            Product = product;
            ResultOutputFile = resultOutputFile;
            SortBy = sortBy;
            TopKeys = topKeys;
        }
    }
}
