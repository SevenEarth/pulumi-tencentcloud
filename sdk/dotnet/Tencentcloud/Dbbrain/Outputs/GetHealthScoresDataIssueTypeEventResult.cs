// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain.Outputs
{

    [OutputType]
    public sealed class GetHealthScoresDataIssueTypeEventResult
    {
        /// <summary>
        /// Number of alerts.
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// Diagnostic type.
        /// </summary>
        public readonly string DiagType;
        /// <summary>
        /// End Time.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Event ID.
        /// </summary>
        public readonly int EventId;
        /// <summary>
        /// reserved text.
        /// </summary>
        public readonly string Metric;
        /// <summary>
        /// overview.
        /// </summary>
        public readonly string Outline;
        /// <summary>
        /// Points deducted.
        /// </summary>
        public readonly int ScoreLost;
        /// <summary>
        /// severity. The severity is divided into 5 levels, according to the degree of impact from high to low: 1: Fatal, 2: Serious, 3: Warning, 4: Prompt, 5: Healthy.
        /// </summary>
        public readonly int Severity;
        /// <summary>
        /// Starting time.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private GetHealthScoresDataIssueTypeEventResult(
            int count,

            string diagType,

            string endTime,

            int eventId,

            string metric,

            string outline,

            int scoreLost,

            int severity,

            string startTime)
        {
            Count = count;
            DiagType = diagType;
            EndTime = endTime;
            EventId = eventId;
            Metric = metric;
            Outline = outline;
            ScoreLost = scoreLost;
            Severity = severity;
            StartTime = startTime;
        }
    }
}
