// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain.Outputs
{

    [OutputType]
    public sealed class GetSecurityAuditLogExportTasksListResult
    {
        /// <summary>
        /// async request id.
        /// </summary>
        public readonly int AsyncRequestId;
        /// <summary>
        /// create time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// danger level list.
        /// </summary>
        public readonly ImmutableArray<int> DangerLevels;
        /// <summary>
        /// end time.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// log end time.
        /// </summary>
        public readonly string LogEndTime;
        /// <summary>
        /// log start time.
        /// </summary>
        public readonly string LogStartTime;
        /// <summary>
        /// task progress.
        /// </summary>
        public readonly int Progress;
        /// <summary>
        /// start time.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// the total size of log.
        /// </summary>
        public readonly int TotalSize;

        [OutputConstructor]
        private GetSecurityAuditLogExportTasksListResult(
            int asyncRequestId,

            string createTime,

            ImmutableArray<int> dangerLevels,

            string endTime,

            string logEndTime,

            string logStartTime,

            int progress,

            string startTime,

            string status,

            int totalSize)
        {
            AsyncRequestId = asyncRequestId;
            CreateTime = createTime;
            DangerLevels = dangerLevels;
            EndTime = endTime;
            LogEndTime = logEndTime;
            LogStartTime = logStartTime;
            Progress = progress;
            StartTime = startTime;
            Status = status;
            TotalSize = totalSize;
        }
    }
}
