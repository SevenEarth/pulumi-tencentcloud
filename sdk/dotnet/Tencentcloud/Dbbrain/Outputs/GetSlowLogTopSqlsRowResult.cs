// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain.Outputs
{

    [OutputType]
    public sealed class GetSlowLogTopSqlsRowResult
    {
        /// <summary>
        /// Execution times.
        /// </summary>
        public readonly int ExecTimes;
        /// <summary>
        /// SQL total lock waiting time, in seconds.
        /// </summary>
        public readonly double LockTime;
        /// <summary>
        /// Average lock waiting time, in seconds.
        /// </summary>
        public readonly double LockTimeAvg;
        /// <summary>
        /// Maximum lock waiting time, in seconds.
        /// </summary>
        public readonly double LockTimeMax;
        /// <summary>
        /// Minimum lock waiting time, in seconds.
        /// </summary>
        public readonly double LockTimeMin;
        /// <summary>
        /// The ratio of the total lock waiting time of SQL, in %.
        /// </summary>
        public readonly double LockTimeRatio;
        /// <summary>
        /// MD5 value of SOL template.
        /// </summary>
        public readonly string Md5;
        /// <summary>
        /// Total time, in seconds.
        /// </summary>
        public readonly double QueryTime;
        /// <summary>
        /// Average execution time, in seconds.
        /// </summary>
        public readonly double QueryTimeAvg;
        /// <summary>
        /// The maximum execution time, in seconds.
        /// </summary>
        public readonly double QueryTimeMax;
        /// <summary>
        /// The minimum execution time, in seconds.
        /// </summary>
        public readonly double QueryTimeMin;
        /// <summary>
        /// Total time-consuming ratio, unit %.
        /// </summary>
        public readonly double QueryTimeRatio;
        /// <summary>
        /// total scan lines.
        /// </summary>
        public readonly int RowsExamined;
        /// <summary>
        /// average number of lines scanned.
        /// </summary>
        public readonly double RowsExaminedAvg;
        /// <summary>
        /// Maximum number of scan lines.
        /// </summary>
        public readonly int RowsExaminedMax;
        /// <summary>
        /// Minimum number of scan lines.
        /// </summary>
        public readonly int RowsExaminedMin;
        /// <summary>
        /// The proportion of the total number of scanned lines, unit %.
        /// </summary>
        public readonly double RowsExaminedRatio;
        /// <summary>
        /// total number of rows returned.
        /// </summary>
        public readonly int RowsSent;
        /// <summary>
        /// average number of rows returned.
        /// </summary>
        public readonly double RowsSentAvg;
        /// <summary>
        /// Maximum number of rows returned.
        /// </summary>
        public readonly int RowsSentMax;
        /// <summary>
        /// Minimum number of rows returned.
        /// </summary>
        public readonly int RowsSentMin;
        /// <summary>
        /// The proportion of the total number of rows returned, in %.
        /// </summary>
        public readonly double RowsSentRatio;
        /// <summary>
        /// DB name.
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// sql template.
        /// </summary>
        public readonly string SqlTemplate;
        /// <summary>
        /// SQL with parameters (random).
        /// </summary>
        public readonly string SqlText;

        [OutputConstructor]
        private GetSlowLogTopSqlsRowResult(
            int execTimes,

            double lockTime,

            double lockTimeAvg,

            double lockTimeMax,

            double lockTimeMin,

            double lockTimeRatio,

            string md5,

            double queryTime,

            double queryTimeAvg,

            double queryTimeMax,

            double queryTimeMin,

            double queryTimeRatio,

            int rowsExamined,

            double rowsExaminedAvg,

            int rowsExaminedMax,

            int rowsExaminedMin,

            double rowsExaminedRatio,

            int rowsSent,

            double rowsSentAvg,

            int rowsSentMax,

            int rowsSentMin,

            double rowsSentRatio,

            string schema,

            string sqlTemplate,

            string sqlText)
        {
            ExecTimes = execTimes;
            LockTime = lockTime;
            LockTimeAvg = lockTimeAvg;
            LockTimeMax = lockTimeMax;
            LockTimeMin = lockTimeMin;
            LockTimeRatio = lockTimeRatio;
            Md5 = md5;
            QueryTime = queryTime;
            QueryTimeAvg = queryTimeAvg;
            QueryTimeMax = queryTimeMax;
            QueryTimeMin = queryTimeMin;
            QueryTimeRatio = queryTimeRatio;
            RowsExamined = rowsExamined;
            RowsExaminedAvg = rowsExaminedAvg;
            RowsExaminedMax = rowsExaminedMax;
            RowsExaminedMin = rowsExaminedMin;
            RowsExaminedRatio = rowsExaminedRatio;
            RowsSent = rowsSent;
            RowsSentAvg = rowsSentAvg;
            RowsSentMax = rowsSentMax;
            RowsSentMin = rowsSentMin;
            RowsSentRatio = rowsSentRatio;
            Schema = schema;
            SqlTemplate = sqlTemplate;
            SqlText = sqlText;
        }
    }
}
