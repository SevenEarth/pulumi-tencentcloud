// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dbbrain
{
    public static class GetTopSpaceTables
    {
        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_tables
        /// 
        /// ## Example Usage
        /// 
        /// ### Sort by PhysicalFileSize
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTables = Tencentcloud.Dbbrain.GetTopSpaceTables.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "PhysicalFileSize",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Sort by TotalLength
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTables = Tencentcloud.Dbbrain.GetTopSpaceTables.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "PhysicalFileSize",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTopSpaceTablesResult> InvokeAsync(GetTopSpaceTablesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopSpaceTablesResult>("tencentcloud:Dbbrain/getTopSpaceTables:getTopSpaceTables", args ?? new GetTopSpaceTablesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of dbbrain top_space_tables
        /// 
        /// ## Example Usage
        /// 
        /// ### Sort by PhysicalFileSize
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTables = Tencentcloud.Dbbrain.GetTopSpaceTables.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "PhysicalFileSize",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Sort by TotalLength
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var topSpaceTables = Tencentcloud.Dbbrain.GetTopSpaceTables.Invoke(new()
        ///     {
        ///         InstanceId = "%s",
        ///         Product = "mysql",
        ///         SortBy = "PhysicalFileSize",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTopSpaceTablesResult> Invoke(GetTopSpaceTablesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopSpaceTablesResult>("tencentcloud:Dbbrain/getTopSpaceTables:getTopSpaceTables", args ?? new GetTopSpaceTablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopSpaceTablesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top tables returned, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public string? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        public GetTopSpaceTablesArgs()
        {
        }
        public static new GetTopSpaceTablesArgs Empty => new GetTopSpaceTablesArgs();
    }

    public sealed class GetTopSpaceTablesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The number of Top tables returned, the maximum value is 100, and the default is 20.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        public GetTopSpaceTablesInvokeArgs()
        {
        }
        public static new GetTopSpaceTablesInvokeArgs Empty => new GetTopSpaceTablesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopSpaceTablesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly int? Limit;
        public readonly string? Product;
        public readonly string? ResultOutputFile;
        public readonly string? SortBy;
        /// <summary>
        /// The timestamp (in seconds) of collecting tablespace data.
        /// </summary>
        public readonly int Timestamp;
        /// <summary>
        /// The list of Top tablespace statistics returned.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTopSpaceTablesTopSpaceTableResult> DbbrainTopSpaceTables;

        [OutputConstructor]
        private GetTopSpaceTablesResult(
            string id,

            string instanceId,

            int? limit,

            string? product,

            string? resultOutputFile,

            string? sortBy,

            int timestamp,

            ImmutableArray<Outputs.GetTopSpaceTablesTopSpaceTableResult> topSpaceTables)
        {
            Id = id;
            InstanceId = instanceId;
            Limit = limit;
            Product = product;
            ResultOutputFile = resultOutputFile;
            SortBy = sortBy;
            Timestamp = timestamp;
            DbbrainTopSpaceTables = topSpaceTables;
        }
    }
}
