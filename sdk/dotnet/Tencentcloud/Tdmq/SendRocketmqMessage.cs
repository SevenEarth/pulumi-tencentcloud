// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tdmq
{
    /// <summary>
    /// Provides a resource to create a tdmq send_rocketmq_message
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var sendRocketmqMessage = new Tencentcloud.Tdmq.SendRocketmqMessage("sendRocketmqMessage", new Tencentcloud.Tdmq.SendRocketmqMessageArgs
    ///         {
    ///             ClusterId = "rocketmq-7k45z9dkpnne",
    ///             MsgBody = "msg key",
    ///             MsgKey = "msg tag",
    ///             MsgTag = "msg value",
    ///             NamespaceId = "test_ns",
    ///             TopicName = "test_topic",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Tdmq/sendRocketmqMessage:SendRocketmqMessage")]
    public partial class SendRocketmqMessage : Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster id.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Information.
        /// </summary>
        [Output("msgBody")]
        public Output<string> MsgBody { get; private set; } = null!;

        /// <summary>
        /// Message key information.
        /// </summary>
        [Output("msgKey")]
        public Output<string?> MsgKey { get; private set; } = null!;

        /// <summary>
        /// Message tag information.
        /// </summary>
        [Output("msgTag")]
        public Output<string?> MsgTag { get; private set; } = null!;

        /// <summary>
        /// Namespaces.
        /// </summary>
        [Output("namespaceId")]
        public Output<string> NamespaceId { get; private set; } = null!;

        /// <summary>
        /// topic name.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;


        /// <summary>
        /// Create a SendRocketmqMessage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SendRocketmqMessage(string name, SendRocketmqMessageArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/sendRocketmqMessage:SendRocketmqMessage", name, args ?? new SendRocketmqMessageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SendRocketmqMessage(string name, Input<string> id, SendRocketmqMessageState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/sendRocketmqMessage:SendRocketmqMessage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SendRocketmqMessage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SendRocketmqMessage Get(string name, Input<string> id, SendRocketmqMessageState? state = null, CustomResourceOptions? options = null)
        {
            return new SendRocketmqMessage(name, id, state, options);
        }
    }

    public sealed class SendRocketmqMessageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster id.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Information.
        /// </summary>
        [Input("msgBody", required: true)]
        public Input<string> MsgBody { get; set; } = null!;

        /// <summary>
        /// Message key information.
        /// </summary>
        [Input("msgKey")]
        public Input<string>? MsgKey { get; set; }

        /// <summary>
        /// Message tag information.
        /// </summary>
        [Input("msgTag")]
        public Input<string>? MsgTag { get; set; }

        /// <summary>
        /// Namespaces.
        /// </summary>
        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        /// <summary>
        /// topic name.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public SendRocketmqMessageArgs()
        {
        }
    }

    public sealed class SendRocketmqMessageState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Information.
        /// </summary>
        [Input("msgBody")]
        public Input<string>? MsgBody { get; set; }

        /// <summary>
        /// Message key information.
        /// </summary>
        [Input("msgKey")]
        public Input<string>? MsgKey { get; set; }

        /// <summary>
        /// Message tag information.
        /// </summary>
        [Input("msgTag")]
        public Input<string>? MsgTag { get; set; }

        /// <summary>
        /// Namespaces.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// topic name.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public SendRocketmqMessageState()
        {
        }
    }
}
