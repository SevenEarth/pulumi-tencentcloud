// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tdmq
{
    /// <summary>
    /// Provide a resource to create a TDMQ topic with full id.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleInstance = new Tencentcloud.Tdmq.Instance("exampleInstance", new()
    ///     {
    ///         ClusterName = "tf_example",
    ///         Remark = "remark.",
    ///         Tags = 
    ///         {
    ///             { "createdBy", "terraform" },
    ///         },
    ///     });
    /// 
    ///     var exampleNamespace = new Tencentcloud.Tdmq.Namespace("exampleNamespace", new()
    ///     {
    ///         EnvironName = "tf_example",
    ///         MsgTtl = 300,
    ///         ClusterId = exampleInstance.Id,
    ///         RetentionPolicy = new Tencentcloud.Tdmq.Inputs.NamespaceRetentionPolicyArgs
    ///         {
    ///             TimeInMinutes = 60,
    ///             SizeInMb = 10,
    ///         },
    ///         Remark = "remark.",
    ///     });
    /// 
    ///     var exampleTopicWithFullId = new Tencentcloud.Tdmq.TopicWithFullId("exampleTopicWithFullId", new()
    ///     {
    ///         EnvironId = exampleNamespace.EnvironName,
    ///         ClusterId = exampleInstance.Id,
    ///         TopicName = "tf-example-topic",
    ///         Partitions = 6,
    ///         PulsarTopicType = 3,
    ///         Remark = "remark.",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Tdmq Topic can be imported, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Tdmq/topicWithFullId:TopicWithFullId test ${cluster_id}#${environ_id}#${topic_name}
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Tdmq/topicWithFullId:TopicWithFullId")]
    public partial class TopicWithFullId : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Dedicated Cluster Id.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The name of tdmq namespace.
        /// </summary>
        [Output("environId")]
        public Output<string> EnvironId { get; private set; } = null!;

        /// <summary>
        /// The partitions of topic.
        /// </summary>
        [Output("partitions")]
        public Output<int> Partitions { get; private set; } = null!;

        /// <summary>
        /// Pulsar Topic Type 0: Non-persistent non-partitioned 1: Non-persistent partitioned 2: Persistent non-partitioned 3: Persistent partitioned.
        /// </summary>
        [Output("pulsarTopicType")]
        public Output<int> PulsarTopicType { get; private set; } = null!;

        /// <summary>
        /// Description of the namespace.
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        /// <summary>
        /// The name of topic to be created.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;

        /// <summary>
        /// This input will be gradually discarded and can be switched to PulsarTopicType parameter 0: Normal message; 1: Global sequential messages; 2: Local sequential messages; 3: Retrying queue; 4: Dead letter queue. The type of topic.
        /// </summary>
        [Output("topicType")]
        public Output<int> TopicType { get; private set; } = null!;


        /// <summary>
        /// Create a TopicWithFullId resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TopicWithFullId(string name, TopicWithFullIdArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/topicWithFullId:TopicWithFullId", name, args ?? new TopicWithFullIdArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TopicWithFullId(string name, Input<string> id, TopicWithFullIdState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/topicWithFullId:TopicWithFullId", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TopicWithFullId resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TopicWithFullId Get(string name, Input<string> id, TopicWithFullIdState? state = null, CustomResourceOptions? options = null)
        {
            return new TopicWithFullId(name, id, state, options);
        }
    }

    public sealed class TopicWithFullIdArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dedicated Cluster Id.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of tdmq namespace.
        /// </summary>
        [Input("environId", required: true)]
        public Input<string> EnvironId { get; set; } = null!;

        /// <summary>
        /// The partitions of topic.
        /// </summary>
        [Input("partitions", required: true)]
        public Input<int> Partitions { get; set; } = null!;

        /// <summary>
        /// Pulsar Topic Type 0: Non-persistent non-partitioned 1: Non-persistent partitioned 2: Persistent non-partitioned 3: Persistent partitioned.
        /// </summary>
        [Input("pulsarTopicType")]
        public Input<int>? PulsarTopicType { get; set; }

        /// <summary>
        /// Description of the namespace.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The name of topic to be created.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        /// <summary>
        /// This input will be gradually discarded and can be switched to PulsarTopicType parameter 0: Normal message; 1: Global sequential messages; 2: Local sequential messages; 3: Retrying queue; 4: Dead letter queue. The type of topic.
        /// </summary>
        [Input("topicType")]
        public Input<int>? TopicType { get; set; }

        public TopicWithFullIdArgs()
        {
        }
        public static new TopicWithFullIdArgs Empty => new TopicWithFullIdArgs();
    }

    public sealed class TopicWithFullIdState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dedicated Cluster Id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The name of tdmq namespace.
        /// </summary>
        [Input("environId")]
        public Input<string>? EnvironId { get; set; }

        /// <summary>
        /// The partitions of topic.
        /// </summary>
        [Input("partitions")]
        public Input<int>? Partitions { get; set; }

        /// <summary>
        /// Pulsar Topic Type 0: Non-persistent non-partitioned 1: Non-persistent partitioned 2: Persistent non-partitioned 3: Persistent partitioned.
        /// </summary>
        [Input("pulsarTopicType")]
        public Input<int>? PulsarTopicType { get; set; }

        /// <summary>
        /// Description of the namespace.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The name of topic to be created.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        /// <summary>
        /// This input will be gradually discarded and can be switched to PulsarTopicType parameter 0: Normal message; 1: Global sequential messages; 2: Local sequential messages; 3: Retrying queue; 4: Dead letter queue. The type of topic.
        /// </summary>
        [Input("topicType")]
        public Input<int>? TopicType { get; set; }

        public TopicWithFullIdState()
        {
        }
        public static new TopicWithFullIdState Empty => new TopicWithFullIdState();
    }
}
