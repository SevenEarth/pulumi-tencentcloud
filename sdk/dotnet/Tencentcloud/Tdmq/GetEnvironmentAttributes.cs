// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tdmq
{
    public static class GetEnvironmentAttributes
    {
        /// <summary>
        /// Use this data source to query detailed information of tdmq environment_attributes
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var environmentAttributes = Output.Create(Tencentcloud.Tdmq.GetEnvironmentAttributes.InvokeAsync(new Tencentcloud.Tdmq.GetEnvironmentAttributesArgs
        ///         {
        ///             ClusterId = "pulsar-9n95ax58b9vn",
        ///             EnvironmentId = "keep-ns",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEnvironmentAttributesResult> InvokeAsync(GetEnvironmentAttributesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentAttributesResult>("tencentcloud:Tdmq/getEnvironmentAttributes:getEnvironmentAttributes", args ?? new GetEnvironmentAttributesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tdmq environment_attributes
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var environmentAttributes = Output.Create(Tencentcloud.Tdmq.GetEnvironmentAttributes.InvokeAsync(new Tencentcloud.Tdmq.GetEnvironmentAttributesArgs
        ///         {
        ///             ClusterId = "pulsar-9n95ax58b9vn",
        ///             EnvironmentId = "keep-ns",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEnvironmentAttributesResult> Invoke(GetEnvironmentAttributesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEnvironmentAttributesResult>("tencentcloud:Tdmq/getEnvironmentAttributes:getEnvironmentAttributes", args ?? new GetEnvironmentAttributesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentAttributesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Pulsar cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// Environment (namespace) name.
        /// </summary>
        [Input("environmentId", required: true)]
        public string EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetEnvironmentAttributesArgs()
        {
        }
    }

    public sealed class GetEnvironmentAttributesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Pulsar cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Environment (namespace) name.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetEnvironmentAttributesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEnvironmentAttributesResult
    {
        public readonly string? ClusterId;
        public readonly string EnvironmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Expiration time of unconsumed messages, unit second, maximum 1296000 (15 days).
        /// </summary>
        public readonly int MsgTtl;
        /// <summary>
        /// Consumption rate limit, unit byte/second, 0 unlimited rate.
        /// </summary>
        public readonly int RateInByte;
        /// <summary>
        /// Consumption rate limit, unit number/second, 0 is unlimited.
        /// </summary>
        public readonly int RateInSize;
        /// <summary>
        /// Remark.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// Duplicate number.
        /// </summary>
        public readonly int Replicas;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// Consumed message storage policy, unit hour, 0 will be deleted immediately after consumption.
        /// </summary>
        public readonly int RetentionHours;
        /// <summary>
        /// Consumed message storage strategy, unit G, 0 Delete immediately after consumption.
        /// </summary>
        public readonly int RetentionSize;

        [OutputConstructor]
        private GetEnvironmentAttributesResult(
            string? clusterId,

            string environmentId,

            string id,

            int msgTtl,

            int rateInByte,

            int rateInSize,

            string remark,

            int replicas,

            string? resultOutputFile,

            int retentionHours,

            int retentionSize)
        {
            ClusterId = clusterId;
            EnvironmentId = environmentId;
            Id = id;
            MsgTtl = msgTtl;
            RateInByte = rateInByte;
            RateInSize = rateInSize;
            Remark = remark;
            Replicas = replicas;
            ResultOutputFile = resultOutputFile;
            RetentionHours = retentionHours;
            RetentionSize = retentionSize;
        }
    }
}
