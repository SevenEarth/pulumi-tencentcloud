// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dts
{
    /// <summary>
    /// Provides a resource to create a dts migrate_service
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var migrateService = new Tencentcloud.Dts.MigrateService("migrateService", new Tencentcloud.Dts.MigrateServiceArgs
    ///         {
    ///             DstDatabaseType = "cynosdbmysql",
    ///             DstRegion = "ap-guangzhou",
    ///             InstanceClass = "small",
    ///             JobName = "tf_test_migration_job",
    ///             SrcDatabaseType = "mysql",
    ///             SrcRegion = "ap-guangzhou",
    ///             Tags = 
    ///             {
    ///                 new Tencentcloud.Dts.Inputs.MigrateServiceTagArgs
    ///                 {
    ///                     TagKey = "aaa",
    ///                     TagValue = "bbb",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// dts migrate_service can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Dts/migrateService:MigrateService migrate_service migrateService_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Dts/migrateService:MigrateService")]
    public partial class MigrateService : Pulumi.CustomResource
    {
        /// <summary>
        /// destination database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Output("dstDatabaseType")]
        public Output<string> DstDatabaseType { get; private set; } = null!;

        /// <summary>
        /// destination region.
        /// </summary>
        [Output("dstRegion")]
        public Output<string> DstRegion { get; private set; } = null!;

        /// <summary>
        /// instance class, optional value is small/medium/large/xlarge/2xlarge.
        /// </summary>
        [Output("instanceClass")]
        public Output<string> InstanceClass { get; private set; } = null!;

        /// <summary>
        /// job name.
        /// </summary>
        [Output("jobName")]
        public Output<string?> JobName { get; private set; } = null!;

        /// <summary>
        /// source database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Output("srcDatabaseType")]
        public Output<string> SrcDatabaseType { get; private set; } = null!;

        /// <summary>
        /// source region.
        /// </summary>
        [Output("srcRegion")]
        public Output<string> SrcRegion { get; private set; } = null!;

        /// <summary>
        /// tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.MigrateServiceTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a MigrateService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MigrateService(string name, MigrateServiceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dts/migrateService:MigrateService", name, args ?? new MigrateServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MigrateService(string name, Input<string> id, MigrateServiceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dts/migrateService:MigrateService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MigrateService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MigrateService Get(string name, Input<string> id, MigrateServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new MigrateService(name, id, state, options);
        }
    }

    public sealed class MigrateServiceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// destination database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Input("dstDatabaseType", required: true)]
        public Input<string> DstDatabaseType { get; set; } = null!;

        /// <summary>
        /// destination region.
        /// </summary>
        [Input("dstRegion", required: true)]
        public Input<string> DstRegion { get; set; } = null!;

        /// <summary>
        /// instance class, optional value is small/medium/large/xlarge/2xlarge.
        /// </summary>
        [Input("instanceClass", required: true)]
        public Input<string> InstanceClass { get; set; } = null!;

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// source database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Input("srcDatabaseType", required: true)]
        public Input<string> SrcDatabaseType { get; set; } = null!;

        /// <summary>
        /// source region.
        /// </summary>
        [Input("srcRegion", required: true)]
        public Input<string> SrcRegion { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.MigrateServiceTagArgs>? _tags;

        /// <summary>
        /// tags.
        /// </summary>
        public InputList<Inputs.MigrateServiceTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MigrateServiceTagArgs>());
            set => _tags = value;
        }

        public MigrateServiceArgs()
        {
        }
    }

    public sealed class MigrateServiceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// destination database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Input("dstDatabaseType")]
        public Input<string>? DstDatabaseType { get; set; }

        /// <summary>
        /// destination region.
        /// </summary>
        [Input("dstRegion")]
        public Input<string>? DstRegion { get; set; }

        /// <summary>
        /// instance class, optional value is small/medium/large/xlarge/2xlarge.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// source database type, optional value is mysql/redis/percona/mongodb/postgresql/sqlserver/mariadb.
        /// </summary>
        [Input("srcDatabaseType")]
        public Input<string>? SrcDatabaseType { get; set; }

        /// <summary>
        /// source region.
        /// </summary>
        [Input("srcRegion")]
        public Input<string>? SrcRegion { get; set; }

        [Input("tags")]
        private InputList<Inputs.MigrateServiceTagGetArgs>? _tags;

        /// <summary>
        /// tags.
        /// </summary>
        public InputList<Inputs.MigrateServiceTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MigrateServiceTagGetArgs>());
            set => _tags = value;
        }

        public MigrateServiceState()
        {
        }
    }
}
