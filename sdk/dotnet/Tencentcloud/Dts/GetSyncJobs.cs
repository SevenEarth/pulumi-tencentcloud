// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dts
{
    public static class GetSyncJobs
    {
        /// <summary>
        /// Use this data source to query detailed information of dts syncJobs
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var job = new Tencentcloud.Dts.SyncJob("job", new()
        ///     {
        ///         JobName = "tf_dts_test",
        ///         PayMode = "PostPay",
        ///         SrcDatabaseType = "mysql",
        ///         SrcRegion = "ap-guangzhou",
        ///         DstDatabaseType = "cynosdbmysql",
        ///         DstRegion = "ap-guangzhou",
        ///         Tags = new[]
        ///         {
        ///             new Tencentcloud.Dts.Inputs.SyncJobTagArgs
        ///             {
        ///                 TagKey = "aaa",
        ///                 TagValue = "bbb",
        ///             },
        ///         },
        ///         AutoRenew = 0,
        ///         InstanceClass = "micro",
        ///     });
        /// 
        ///     var syncJobs = Tencentcloud.Dts.GetSyncJobs.Invoke(new()
        ///     {
        ///         JobId = job.Id,
        ///         JobName = "tf_dts_test",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSyncJobsResult> InvokeAsync(GetSyncJobsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSyncJobsResult>("tencentcloud:Dts/getSyncJobs:getSyncJobs", args ?? new GetSyncJobsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of dts syncJobs
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var job = new Tencentcloud.Dts.SyncJob("job", new()
        ///     {
        ///         JobName = "tf_dts_test",
        ///         PayMode = "PostPay",
        ///         SrcDatabaseType = "mysql",
        ///         SrcRegion = "ap-guangzhou",
        ///         DstDatabaseType = "cynosdbmysql",
        ///         DstRegion = "ap-guangzhou",
        ///         Tags = new[]
        ///         {
        ///             new Tencentcloud.Dts.Inputs.SyncJobTagArgs
        ///             {
        ///                 TagKey = "aaa",
        ///                 TagValue = "bbb",
        ///             },
        ///         },
        ///         AutoRenew = 0,
        ///         InstanceClass = "micro",
        ///     });
        /// 
        ///     var syncJobs = Tencentcloud.Dts.GetSyncJobs.Invoke(new()
        ///     {
        ///         JobId = job.Id,
        ///         JobName = "tf_dts_test",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSyncJobsResult> Invoke(GetSyncJobsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyncJobsResult>("tencentcloud:Dts/getSyncJobs:getSyncJobs", args ?? new GetSyncJobsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSyncJobsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// job id.
        /// </summary>
        [Input("jobId")]
        public string? JobId { get; set; }

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public string? JobName { get; set; }

        /// <summary>
        /// job type.
        /// </summary>
        [Input("jobType")]
        public string? JobType { get; set; }

        /// <summary>
        /// order field.
        /// </summary>
        [Input("order")]
        public string? Order { get; set; }

        /// <summary>
        /// order way, optional value is DESC or ASC.
        /// </summary>
        [Input("orderSeq")]
        public string? OrderSeq { get; set; }

        /// <summary>
        /// pay mode, optional value is PrePay or PostPay.
        /// </summary>
        [Input("payMode")]
        public string? PayMode { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// run mode, optional value is mmediate or Timed.
        /// </summary>
        [Input("runMode")]
        public string? RunMode { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// status.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        [Input("tagFilters")]
        private List<Inputs.GetSyncJobsTagFilterArgs>? _tagFilters;

        /// <summary>
        /// tag filters.
        /// </summary>
        public List<Inputs.GetSyncJobsTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new List<Inputs.GetSyncJobsTagFilterArgs>());
            set => _tagFilters = value;
        }

        public GetSyncJobsArgs()
        {
        }
        public static new GetSyncJobsArgs Empty => new GetSyncJobsArgs();
    }

    public sealed class GetSyncJobsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// job id.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// job type.
        /// </summary>
        [Input("jobType")]
        public Input<string>? JobType { get; set; }

        /// <summary>
        /// order field.
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// order way, optional value is DESC or ASC.
        /// </summary>
        [Input("orderSeq")]
        public Input<string>? OrderSeq { get; set; }

        /// <summary>
        /// pay mode, optional value is PrePay or PostPay.
        /// </summary>
        [Input("payMode")]
        public Input<string>? PayMode { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// run mode, optional value is mmediate or Timed.
        /// </summary>
        [Input("runMode")]
        public Input<string>? RunMode { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// status.
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.GetSyncJobsTagFilterInputArgs>? _tagFilters;

        /// <summary>
        /// tag filters.
        /// </summary>
        public InputList<Inputs.GetSyncJobsTagFilterInputArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.GetSyncJobsTagFilterInputArgs>());
            set => _tagFilters = value;
        }

        public GetSyncJobsInvokeArgs()
        {
        }
        public static new GetSyncJobsInvokeArgs Empty => new GetSyncJobsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSyncJobsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// job id.
        /// </summary>
        public readonly string? JobId;
        /// <summary>
        /// job name.
        /// </summary>
        public readonly string? JobName;
        public readonly string? JobType;
        /// <summary>
        /// sync job list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSyncJobsListResult> Lists;
        public readonly string? Order;
        public readonly string? OrderSeq;
        /// <summary>
        /// pay mode.
        /// </summary>
        public readonly string? PayMode;
        public readonly string? ResultOutputFile;
        /// <summary>
        /// run mode.
        /// </summary>
        public readonly string? RunMode;
        /// <summary>
        /// status.
        /// </summary>
        public readonly ImmutableArray<string> Statuses;
        public readonly ImmutableArray<Outputs.GetSyncJobsTagFilterResult> TagFilters;

        [OutputConstructor]
        private GetSyncJobsResult(
            string id,

            string? jobId,

            string? jobName,

            string? jobType,

            ImmutableArray<Outputs.GetSyncJobsListResult> lists,

            string? order,

            string? orderSeq,

            string? payMode,

            string? resultOutputFile,

            string? runMode,

            ImmutableArray<string> statuses,

            ImmutableArray<Outputs.GetSyncJobsTagFilterResult> tagFilters)
        {
            Id = id;
            JobId = jobId;
            JobName = jobName;
            JobType = jobType;
            Lists = lists;
            Order = order;
            OrderSeq = orderSeq;
            PayMode = payMode;
            ResultOutputFile = resultOutputFile;
            RunMode = runMode;
            Statuses = statuses;
            TagFilters = tagFilters;
        }
    }
}
