// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dts.Inputs
{

    public sealed class SyncConfigObjectsDatabaseGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DB selection mode: All (for all objects under the current object), Partial (for some objects), when the Mode is Partial, this item is required. Note that synchronization of advanced objects does not depend on this value. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("dbMode")]
        public Input<string>? DbMode { get; set; }

        /// <summary>
        /// The name of the library that needs to be migrated or synchronized. This item is required when the ObjectMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        /// <summary>
        /// Event migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("eventMode")]
        public Input<string>? EventMode { get; set; }

        [Input("events")]
        private InputList<string>? _events;

        /// <summary>
        /// When EventMode is partial, specify the name of the event to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        /// <summary>
        /// Select the mode to be synchronized, Partial is a part, all is an entire selection. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("functionMode")]
        public Input<string>? FunctionMode { get; set; }

        [Input("functions")]
        private InputList<string>? _functions;

        /// <summary>
        /// Required when the FunctionMode value is Partial. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<string> Functions
        {
            get => _functions ?? (_functions = new InputList<string>());
            set => _functions = value;
        }

        /// <summary>
        /// The name of the library after migration or synchronization, which is the same as the source library by default. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("newDbName")]
        public Input<string>? NewDbName { get; set; }

        /// <summary>
        /// Schema name after migration or synchronization. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("newSchemaName")]
        public Input<string>? NewSchemaName { get; set; }

        /// <summary>
        /// Select the mode to be synchronized, Partial is part, All is the whole selection. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("procedureMode")]
        public Input<string>? ProcedureMode { get; set; }

        [Input("procedures")]
        private InputList<string>? _procedures;

        /// <summary>
        /// Required when the value of ProcedureMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<string> Procedures
        {
            get => _procedures ?? (_procedures = new InputList<string>());
            set => _procedures = value;
        }

        /// <summary>
        /// Migrated or synchronized schemaNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("schemaName")]
        public Input<string>? SchemaName { get; set; }

        /// <summary>
        /// Table selection mode: All (for all objects under the current object), Partial (for some objects), this item is required when the DBMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("tableMode")]
        public Input<string>? TableMode { get; set; }

        [Input("tables")]
        private InputList<Inputs.SyncConfigObjectsDatabaseTableGetArgs>? _tables;

        /// <summary>
        /// A collection of table graph objects, when TableMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<Inputs.SyncConfigObjectsDatabaseTableGetArgs> Tables
        {
            get => _tables ?? (_tables = new InputList<Inputs.SyncConfigObjectsDatabaseTableGetArgs>());
            set => _tables = value;
        }

        /// <summary>
        /// Trigger migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("triggerMode")]
        public Input<string>? TriggerMode { get; set; }

        [Input("triggers")]
        private InputList<string>? _triggers;

        /// <summary>
        /// When TriggerMode is partial, specify the name of the trigger to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<string>());
            set => _triggers = value;
        }

        /// <summary>
        /// View selection mode: All is all view objects under the current object, Partial is part of the view objects. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("viewMode")]
        public Input<string>? ViewMode { get; set; }

        [Input("views")]
        private InputList<Inputs.SyncConfigObjectsDatabaseViewGetArgs>? _views;

        /// <summary>
        /// View object collection, when ViewMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<Inputs.SyncConfigObjectsDatabaseViewGetArgs> Views
        {
            get => _views ?? (_views = new InputList<Inputs.SyncConfigObjectsDatabaseViewGetArgs>());
            set => _views = value;
        }

        public SyncConfigObjectsDatabaseGetArgs()
        {
        }
        public static new SyncConfigObjectsDatabaseGetArgs Empty => new SyncConfigObjectsDatabaseGetArgs();
    }
}
