// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dts.Inputs
{

    public sealed class SyncConfigOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to add additional columns. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("addAdditionalColumn")]
        public Input<bool>? AddAdditionalColumn { get; set; }

        /// <summary>
        /// Detailed options for conflict handling, such as conditional rows and conditional actions in conditional overrides. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("conflictHandleOption")]
        public Input<Inputs.SyncConfigOptionsConflictHandleOptionGetArgs>? ConflictHandleOption { get; set; }

        /// <summary>
        /// Conflict handling options, ReportError (error report, the default value), Ignore (ignore), Cover (cover), ConditionCover (condition coverage). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("conflictHandleType")]
        public Input<string>? ConflictHandleType { get; set; }

        [Input("ddlOptions")]
        private InputList<Inputs.SyncConfigOptionsDdlOptionGetArgs>? _ddlOptions;

        /// <summary>
        /// DDL synchronization options, specifically describe which DDLs to synchronize. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<Inputs.SyncConfigOptionsDdlOptionGetArgs> DdlOptions
        {
            get => _ddlOptions ?? (_ddlOptions = new InputList<Inputs.SyncConfigOptionsDdlOptionGetArgs>());
            set => _ddlOptions = value;
        }

        /// <summary>
        /// The processing of the table with the same name, ReportErrorAfterCheck (pre-check and report error, default), InitializeAfterDelete (delete and re-initialize), ExecuteAfterIgnore (ignore and continue to execute). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("dealOfExistSameTable")]
        public Input<string>? DealOfExistSameTable { get; set; }

        /// <summary>
        /// Synchronous initialization options, Data (full data initialization), Structure (structure initialization), Full (full data and structure initialization, default), None (incremental only). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("initType")]
        public Input<string>? InitType { get; set; }

        [Input("opTypes")]
        private InputList<string>? _opTypes;

        /// <summary>
        /// DML and DDL options to be synchronized, Insert (insert operation), Update (update operation), Delete (delete operation), DDL (structure synchronization), leave blank (not selected), PartialDDL (custom, work with DdlOptions). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<string> OpTypes
        {
            get => _opTypes ?? (_opTypes = new InputList<string>());
            set => _opTypes = value;
        }

        public SyncConfigOptionsGetArgs()
        {
        }
    }
}
