// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dts.Outputs
{

    [OutputType]
    public sealed class SyncConfigOptions
    {
        /// <summary>
        /// Whether to add additional columns. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly bool? AddAdditionalColumn;
        /// <summary>
        /// Detailed options for conflict handling, such as conditional rows and conditional actions in conditional overrides. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly Outputs.SyncConfigOptionsConflictHandleOption? ConflictHandleOption;
        /// <summary>
        /// Conflict handling options, ReportError (error report, the default value), Ignore (ignore), Cover (cover), ConditionCover (condition coverage). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string? ConflictHandleType;
        /// <summary>
        /// DDL synchronization options, specifically describe which DDLs to synchronize. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.SyncConfigOptionsDdlOption> DdlOptions;
        /// <summary>
        /// The processing of the table with the same name, ReportErrorAfterCheck (pre-check and report error, default), InitializeAfterDelete (delete and re-initialize), ExecuteAfterIgnore (ignore and continue to execute). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string? DealOfExistSameTable;
        /// <summary>
        /// Synchronous initialization options, Data (full data initialization), Structure (structure initialization), Full (full data and structure initialization, default), None (incremental only). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string? InitType;
        /// <summary>
        /// DML and DDL options to be synchronized, Insert (insert operation), Update (update operation), Delete (delete operation), DDL (structure synchronization), leave blank (not selected), PartialDDL (custom, work with DdlOptions). Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly ImmutableArray<string> OpTypes;

        [OutputConstructor]
        private SyncConfigOptions(
            bool? addAdditionalColumn,

            Outputs.SyncConfigOptionsConflictHandleOption? conflictHandleOption,

            string? conflictHandleType,

            ImmutableArray<Outputs.SyncConfigOptionsDdlOption> ddlOptions,

            string? dealOfExistSameTable,

            string? initType,

            ImmutableArray<string> opTypes)
        {
            AddAdditionalColumn = addAdditionalColumn;
            ConflictHandleOption = conflictHandleOption;
            ConflictHandleType = conflictHandleType;
            DdlOptions = ddlOptions;
            DealOfExistSameTable = dealOfExistSameTable;
            InitType = initType;
            OpTypes = opTypes;
        }
    }
}
