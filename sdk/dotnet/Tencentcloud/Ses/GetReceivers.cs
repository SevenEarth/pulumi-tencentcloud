// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ses
{
    public static class GetReceivers
    {
        /// <summary>
        /// Use this data source to query detailed information of ses receivers
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var receivers = Tencentcloud.Ses.GetReceivers.Invoke(new()
        ///     {
        ///         KeyWord = "keep",
        ///         Status = 3,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetReceiversResult> InvokeAsync(GetReceiversArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReceiversResult>("tencentcloud:Ses/getReceivers:getReceivers", args ?? new GetReceiversArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ses receivers
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var receivers = Tencentcloud.Ses.GetReceivers.Invoke(new()
        ///     {
        ///         KeyWord = "keep",
        ///         Status = 3,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetReceiversResult> Invoke(GetReceiversInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReceiversResult>("tencentcloud:Ses/getReceivers:getReceivers", args ?? new GetReceiversInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReceiversArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group name keyword for fuzzy query.
        /// </summary>
        [Input("keyWord")]
        public string? KeyWord { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Group status (`1`: to be uploaded; `2`: uploading; `3`: uploaded). To query groups in all states, do not pass in this parameter.
        /// </summary>
        [Input("status")]
        public int? Status { get; set; }

        public GetReceiversArgs()
        {
        }
        public static new GetReceiversArgs Empty => new GetReceiversArgs();
    }

    public sealed class GetReceiversInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group name keyword for fuzzy query.
        /// </summary>
        [Input("keyWord")]
        public Input<string>? KeyWord { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Group status (`1`: to be uploaded; `2`: uploading; `3`: uploaded). To query groups in all states, do not pass in this parameter.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public GetReceiversInvokeArgs()
        {
        }
        public static new GetReceiversInvokeArgs Empty => new GetReceiversInvokeArgs();
    }


    [OutputType]
    public sealed class GetReceiversResult
    {
        /// <summary>
        /// Data record.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReceiversDataResult> Datas;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? KeyWord;
        public readonly string? ResultOutputFile;
        public readonly int? Status;

        [OutputConstructor]
        private GetReceiversResult(
            ImmutableArray<Outputs.GetReceiversDataResult> datas,

            string id,

            string? keyWord,

            string? resultOutputFile,

            int? status)
        {
            Datas = datas;
            Id = id;
            KeyWord = keyWord;
            ResultOutputFile = resultOutputFile;
            Status = status;
        }
    }
}
