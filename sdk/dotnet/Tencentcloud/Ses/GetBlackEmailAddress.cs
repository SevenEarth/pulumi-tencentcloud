// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ses
{
    public static class GetBlackEmailAddress
    {
        /// <summary>
        /// Use this data source to query detailed information of ses black_email_address
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var blackEmailAddress = Output.Create(Tencentcloud.Ses.GetBlackEmailAddress.InvokeAsync(new Tencentcloud.Ses.GetBlackEmailAddressArgs
        ///         {
        ///             EmailAddress = "xxx@mail.qcloud.com",
        ///             EndDate = "2020-09-23",
        ///             StartDate = "2020-09-22",
        ///             TaskId = "7000",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlackEmailAddressResult> InvokeAsync(GetBlackEmailAddressArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBlackEmailAddressResult>("tencentcloud:Ses/getBlackEmailAddress:getBlackEmailAddress", args ?? new GetBlackEmailAddressArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ses black_email_address
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var blackEmailAddress = Output.Create(Tencentcloud.Ses.GetBlackEmailAddress.InvokeAsync(new Tencentcloud.Ses.GetBlackEmailAddressArgs
        ///         {
        ///             EmailAddress = "xxx@mail.qcloud.com",
        ///             EndDate = "2020-09-23",
        ///             StartDate = "2020-09-22",
        ///             TaskId = "7000",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBlackEmailAddressResult> Invoke(GetBlackEmailAddressInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBlackEmailAddressResult>("tencentcloud:Ses/getBlackEmailAddress:getBlackEmailAddress", args ?? new GetBlackEmailAddressInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlackEmailAddressArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// You can specify an email address to query.
        /// </summary>
        [Input("emailAddress")]
        public string? EmailAddress { get; set; }

        /// <summary>
        /// End date in the format of `YYYY-MM-DD`.
        /// </summary>
        [Input("endDate", required: true)]
        public string EndDate { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Start date in the format of `YYYY-MM-DD`.
        /// </summary>
        [Input("startDate", required: true)]
        public string StartDate { get; set; } = null!;

        /// <summary>
        /// You can specify a task ID to query.
        /// </summary>
        [Input("taskId")]
        public string? TaskId { get; set; }

        public GetBlackEmailAddressArgs()
        {
        }
    }

    public sealed class GetBlackEmailAddressInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// You can specify an email address to query.
        /// </summary>
        [Input("emailAddress")]
        public Input<string>? EmailAddress { get; set; }

        /// <summary>
        /// End date in the format of `YYYY-MM-DD`.
        /// </summary>
        [Input("endDate", required: true)]
        public Input<string> EndDate { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Start date in the format of `YYYY-MM-DD`.
        /// </summary>
        [Input("startDate", required: true)]
        public Input<string> StartDate { get; set; } = null!;

        /// <summary>
        /// You can specify a task ID to query.
        /// </summary>
        [Input("taskId")]
        public Input<string>? TaskId { get; set; }

        public GetBlackEmailAddressInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBlackEmailAddressResult
    {
        /// <summary>
        /// List of blocklisted addresses.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlackEmailAddressBlackListResult> BlackLists;
        /// <summary>
        /// Blocklisted email address.
        /// </summary>
        public readonly string? EmailAddress;
        public readonly string EndDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly string StartDate;
        public readonly string? TaskId;

        [OutputConstructor]
        private GetBlackEmailAddressResult(
            ImmutableArray<Outputs.GetBlackEmailAddressBlackListResult> blackLists,

            string? emailAddress,

            string endDate,

            string id,

            string? resultOutputFile,

            string startDate,

            string? taskId)
        {
            BlackLists = blackLists;
            EmailAddress = emailAddress;
            EndDate = endDate;
            Id = id;
            ResultOutputFile = resultOutputFile;
            StartDate = startDate;
            TaskId = taskId;
        }
    }
}
