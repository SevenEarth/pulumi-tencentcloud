// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ses.Outputs
{

    [OutputType]
    public sealed class GetSendTasksDataResult
    {
        /// <summary>
        /// Number of emails cached.
        /// </summary>
        public readonly int CacheCount;
        /// <summary>
        /// Task creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Parameters of a recurring taskNote: This field may return `null`, indicating that no valid value can be found.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSendTasksDataCycleParamResult> CycleParams;
        /// <summary>
        /// Task exception informationNote: This field may return `null`, indicating that no valid value can be found.
        /// </summary>
        public readonly string ErrMsg;
        /// <summary>
        /// Sender address.
        /// </summary>
        public readonly string FromEmailAddress;
        /// <summary>
        /// Recipient group ID.
        /// </summary>
        public readonly int ReceiverId;
        /// <summary>
        /// Recipient group name.
        /// </summary>
        public readonly string ReceiversName;
        /// <summary>
        /// Number of emails requested to be sent.
        /// </summary>
        public readonly int RequestCount;
        /// <summary>
        /// Number of emails sent.
        /// </summary>
        public readonly int SendCount;
        /// <summary>
        /// Email subject.
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// Task ID.
        /// </summary>
        public readonly int TaskId;
        /// <summary>
        /// Task status. `1`: to start; `5`: sending; `6`: sending suspended today; `7`: sending error; `10`: sent.
        /// </summary>
        public readonly int TaskStatus;
        /// <summary>
        /// Task type. `1`: immediate; `2`: scheduled; `3`: recurring. To query tasks of all types, do not pass in this parameter.
        /// </summary>
        public readonly int TaskType;
        /// <summary>
        /// Template and template dataNote: This field may return `null`, indicating that no valid value can be found.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSendTasksDataTemplateResult> Templates;
        /// <summary>
        /// Parameters of a scheduled taskNote: This field may return `null`, indicating that no valid value can be found.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSendTasksDataTimedParamResult> TimedParams;
        /// <summary>
        /// Task update time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSendTasksDataResult(
            int cacheCount,

            string createTime,

            ImmutableArray<Outputs.GetSendTasksDataCycleParamResult> cycleParams,

            string errMsg,

            string fromEmailAddress,

            int receiverId,

            string receiversName,

            int requestCount,

            int sendCount,

            string subject,

            int taskId,

            int taskStatus,

            int taskType,

            ImmutableArray<Outputs.GetSendTasksDataTemplateResult> templates,

            ImmutableArray<Outputs.GetSendTasksDataTimedParamResult> timedParams,

            string updateTime)
        {
            CacheCount = cacheCount;
            CreateTime = createTime;
            CycleParams = cycleParams;
            ErrMsg = errMsg;
            FromEmailAddress = fromEmailAddress;
            ReceiverId = receiverId;
            ReceiversName = receiversName;
            RequestCount = requestCount;
            SendCount = sendCount;
            Subject = subject;
            TaskId = taskId;
            TaskStatus = taskStatus;
            TaskType = taskType;
            Templates = templates;
            TimedParams = timedParams;
            UpdateTime = updateTime;
        }
    }
}
