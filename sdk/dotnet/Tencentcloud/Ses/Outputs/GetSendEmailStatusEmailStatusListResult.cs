// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ses.Outputs
{

    [OutputType]
    public sealed class GetSendEmailStatusEmailStatusListResult
    {
        /// <summary>
        /// Description of the recipient processing status.
        /// </summary>
        public readonly string DeliverMessage;
        /// <summary>
        /// Recipient processing status0: Tencent Cloud has accepted the request and added it to the send queue.1: The email is delivered successfully. DeliverTime indicates the time when the email is delivered successfully.2: The email is discarded. DeliverMessage indicates the reason for discarding.3: The recipient&amp;amp;#39;s ESP rejects the email, probably because the email address does not exist or due to other reasons.8: The email is delayed by the ESP. DeliverMessage indicates the reason for delay.
        /// </summary>
        public readonly int DeliverStatus;
        /// <summary>
        /// Timestamp when Tencent Cloud delivers the email.
        /// </summary>
        public readonly int DeliverTime;
        /// <summary>
        /// Sender email address.
        /// </summary>
        public readonly string FromEmailAddress;
        /// <summary>
        /// The MessageId field returned by the SendMail API.
        /// </summary>
        public readonly string MessageId;
        /// <summary>
        /// Timestamp when the request arrives at Tencent Cloud.
        /// </summary>
        public readonly int RequestTime;
        /// <summary>
        /// Tencent Cloud processing status: `0`: Successful. `1001`: Internal system exception. `1002`: Internal system exception. `1003`: Internal system exception. `1003`: Internal system exception. `1004`: Email sending timed out. `1005`: Internal system exception. `1006`: You have sent too many emails to the same address in a short period. `1007`: The email address is in the blocklist. `1008`: The sender domain is rejected by the recipient. `1009`: Internal system exception. `1010`: The daily email sending limit is exceeded. `1011`: You have no permission to send custom content. Use a template. `1013`: The sender domain is unsubscribed from by the recipient. `2001`: No results were found. `3007`: The template ID is invalid or the template is unavailable. `3008`: The sender domain is temporarily blocked by the recipient domain. `3009`: You have no permission to use this template. `3010`: The format of the TemplateData field is incorrect. `3014`: The email cannot be sent because the sender domain is not verified. `3020`: The recipient email address is in the blocklist. `3024`: Failed to precheck the email address format. `3030`: Email sending is restricted temporarily due to a high bounce rate. `3033`: The account has insufficient balance or overdue payment.
        /// </summary>
        public readonly int SendStatus;
        /// <summary>
        /// Recipient email address.
        /// </summary>
        public readonly string ToEmailAddress;
        /// <summary>
        /// Whether the recipient has clicked the links in the email.
        /// </summary>
        public readonly bool UserClicked;
        /// <summary>
        /// Whether the recipient has reported the sender.
        /// </summary>
        public readonly bool UserComplainted;
        /// <summary>
        /// Whether the recipient has opened the email.
        /// </summary>
        public readonly bool UserOpened;
        /// <summary>
        /// Whether the recipient has unsubscribed from the email sent by the sender.
        /// </summary>
        public readonly bool UserUnsubscribed;

        [OutputConstructor]
        private GetSendEmailStatusEmailStatusListResult(
            string deliverMessage,

            int deliverStatus,

            int deliverTime,

            string fromEmailAddress,

            string messageId,

            int requestTime,

            int sendStatus,

            string toEmailAddress,

            bool userClicked,

            bool userComplainted,

            bool userOpened,

            bool userUnsubscribed)
        {
            DeliverMessage = deliverMessage;
            DeliverStatus = deliverStatus;
            DeliverTime = deliverTime;
            FromEmailAddress = fromEmailAddress;
            MessageId = messageId;
            RequestTime = requestTime;
            SendStatus = sendStatus;
            ToEmailAddress = toEmailAddress;
            UserClicked = userClicked;
            UserComplainted = userComplainted;
            UserOpened = userOpened;
            UserUnsubscribed = userUnsubscribed;
        }
    }
}
