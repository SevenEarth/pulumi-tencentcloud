// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Clb.Outputs
{

    [OutputType]
    public sealed class ReplaceCertForLbsCertificate
    {
        /// <summary>
        /// Content of the uploaded client certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
        /// </summary>
        public readonly string? CertCaContent;
        /// <summary>
        /// ID of a client certificate. When the listener adopts mutual authentication (i.e., SSLMode = mutual), if you leave this parameter empty, you must upload the client certificate, including CertCaContent and CertCaName.
        /// </summary>
        public readonly string? CertCaId;
        /// <summary>
        /// Name of the uploaded client CA certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
        /// </summary>
        public readonly string? CertCaName;
        /// <summary>
        /// Content of the uploaded server certificate. If there is no CertId, this parameter is required.
        /// </summary>
        public readonly string? CertContent;
        /// <summary>
        /// ID of a server certificate. If you leave this parameter empty, you must upload the certificate, including CertContent, CertKey, and CertName.
        /// </summary>
        public readonly string? CertId;
        /// <summary>
        /// Key of the uploaded server certificate. If there is no CertId, this parameter is required.
        /// </summary>
        public readonly string? CertKey;
        /// <summary>
        /// Name of the uploaded server certificate. If there is no CertId, this parameter is required.
        /// </summary>
        public readonly string? CertName;
        /// <summary>
        /// Authentication type. Value range: UNIDIRECTIONAL (unidirectional authentication), MUTUAL (mutual authentication).
        /// </summary>
        public readonly string? SslMode;

        [OutputConstructor]
        private ReplaceCertForLbsCertificate(
            string? certCaContent,

            string? certCaId,

            string? certCaName,

            string? certContent,

            string? certId,

            string? certKey,

            string? certName,

            string? sslMode)
        {
            CertCaContent = certCaContent;
            CertCaId = certCaId;
            CertCaName = certCaName;
            CertContent = certContent;
            CertId = certId;
            CertKey = certKey;
            CertName = certName;
            SslMode = sslMode;
        }
    }
}
