// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Clb
{
    public static class GetExclusiveClusters
    {
        /// <summary>
        /// Use this data source to query detailed information of clb exclusive_clusters
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exclusiveClusters = Tencentcloud.Clb.GetExclusiveClusters.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Tencentcloud.Clb.Inputs.GetExclusiveClustersFilterInputArgs
        ///             {
        ///                 Name = "zone",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-guangzhou-1",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetExclusiveClustersResult> InvokeAsync(GetExclusiveClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExclusiveClustersResult>("tencentcloud:Clb/getExclusiveClusters:getExclusiveClusters", args ?? new GetExclusiveClustersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of clb exclusive_clusters
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exclusiveClusters = Tencentcloud.Clb.GetExclusiveClusters.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Tencentcloud.Clb.Inputs.GetExclusiveClustersFilterInputArgs
        ///             {
        ///                 Name = "zone",
        ///                 Values = new[]
        ///                 {
        ///                     "ap-guangzhou-1",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetExclusiveClustersResult> Invoke(GetExclusiveClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExclusiveClustersResult>("tencentcloud:Clb/getExclusiveClusters:getExclusiveClusters", args ?? new GetExclusiveClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExclusiveClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetExclusiveClustersFilterArgs>? _filters;

        /// <summary>
        /// Filter to query the list of AZ resources as detailed below: cluster-type - String - Required: No - (Filter condition) Filter by cluster type, such as TGW. cluster-id - String - Required: No - (Filter condition) Filter by cluster ID, such as tgw-xxxxxxxx. cluster-name - String - Required: No - (Filter condition) Filter by cluster name, such as test-xxxxxx. cluster-tag - String - Required: No - (Filter condition) Filter by cluster tag, such as TAG-xxxxx. vip - String - Required: No - (Filter condition) Filter by vip in the cluster, such as x.x.x.x. network - String - Required: No - (Filter condition) Filter by cluster network type, such as Public or Private. zone - String - Required: No - (Filter condition) Filter by cluster zone, such as ap-guangzhou-1. isp - String - Required: No - (Filter condition) Filter by TGW cluster isp type, such as BGP. loadblancer-id - String - Required: No - (Filter condition) Filter by loadblancer-id in the cluste, such as lb-xxxxxxxx.
        /// </summary>
        public List<Inputs.GetExclusiveClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetExclusiveClustersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetExclusiveClustersArgs()
        {
        }
        public static new GetExclusiveClustersArgs Empty => new GetExclusiveClustersArgs();
    }

    public sealed class GetExclusiveClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetExclusiveClustersFilterInputArgs>? _filters;

        /// <summary>
        /// Filter to query the list of AZ resources as detailed below: cluster-type - String - Required: No - (Filter condition) Filter by cluster type, such as TGW. cluster-id - String - Required: No - (Filter condition) Filter by cluster ID, such as tgw-xxxxxxxx. cluster-name - String - Required: No - (Filter condition) Filter by cluster name, such as test-xxxxxx. cluster-tag - String - Required: No - (Filter condition) Filter by cluster tag, such as TAG-xxxxx. vip - String - Required: No - (Filter condition) Filter by vip in the cluster, such as x.x.x.x. network - String - Required: No - (Filter condition) Filter by cluster network type, such as Public or Private. zone - String - Required: No - (Filter condition) Filter by cluster zone, such as ap-guangzhou-1. isp - String - Required: No - (Filter condition) Filter by TGW cluster isp type, such as BGP. loadblancer-id - String - Required: No - (Filter condition) Filter by loadblancer-id in the cluste, such as lb-xxxxxxxx.
        /// </summary>
        public InputList<Inputs.GetExclusiveClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetExclusiveClustersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetExclusiveClustersInvokeArgs()
        {
        }
        public static new GetExclusiveClustersInvokeArgs Empty => new GetExclusiveClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetExclusiveClustersResult
    {
        /// <summary>
        /// cluster list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExclusiveClustersClusterSetResult> ClusterSets;
        public readonly ImmutableArray<Outputs.GetExclusiveClustersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetExclusiveClustersResult(
            ImmutableArray<Outputs.GetExclusiveClustersClusterSetResult> clusterSets,

            ImmutableArray<Outputs.GetExclusiveClustersFilterResult> filters,

            string id,

            string? resultOutputFile)
        {
            ClusterSets = clusterSets;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
