// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dcdb.Outputs
{

    [OutputType]
    public sealed class GetInstancesListResult
    {
        /// <summary>
        /// app id.
        /// </summary>
        public readonly int AppId;
        /// <summary>
        /// auto renew flag.
        /// </summary>
        public readonly int AutoRenewFlag;
        /// <summary>
        /// create time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// db engine.
        /// </summary>
        public readonly string DbEngine;
        /// <summary>
        /// db engine version.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// instance id.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// instance name.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// instance type.
        /// </summary>
        public readonly int InstanceType;
        /// <summary>
        /// aduit support, 0:support, 1:unsupport.
        /// </summary>
        public readonly int IsAuditSupported;
        /// <summary>
        /// tmp instance mark.
        /// </summary>
        public readonly int IsTmp;
        /// <summary>
        /// isolated time.
        /// </summary>
        public readonly string IsolatedTimestamp;
        /// <summary>
        /// memory.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// node count.
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// pay mode.
        /// </summary>
        public readonly string Paymode;
        /// <summary>
        /// expired time.
        /// </summary>
        public readonly string PeriodEndTime;
        /// <summary>
        /// project id.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// resource tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesListResourceTagResult> ResourceTags;
        /// <summary>
        /// shard count.
        /// </summary>
        public readonly int ShardCount;
        /// <summary>
        /// shard detail.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesListShardDetailResult> ShardDetails;
        /// <summary>
        /// status.
        /// </summary>
        public readonly int Status;
        /// <summary>
        /// status description.
        /// </summary>
        public readonly string StatusDesc;
        /// <summary>
        /// memory, the unit is GB.
        /// </summary>
        public readonly int Storage;
        /// <summary>
        /// subnet id, valid when IsFilterVpc is true.
        /// </summary>
        public readonly int SubnetId;
        /// <summary>
        /// account uin.
        /// </summary>
        public readonly string Uin;
        /// <summary>
        /// update time.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// vip.
        /// </summary>
        public readonly string Vip;
        /// <summary>
        /// vpc id, valid when IsFilterVpc is true.
        /// </summary>
        public readonly int VpcId;
        /// <summary>
        /// vport.
        /// </summary>
        public readonly int Vport;
        /// <summary>
        /// wan domain.
        /// </summary>
        public readonly string WanDomain;
        /// <summary>
        /// wan port.
        /// </summary>
        public readonly int WanPort;
        /// <summary>
        /// wan status, 0:nonactivated, 1:activated, 2:closed, 3:activating.
        /// </summary>
        public readonly int WanStatus;
        /// <summary>
        /// wan vip.
        /// </summary>
        public readonly string WanVip;

        [OutputConstructor]
        private GetInstancesListResult(
            int appId,

            int autoRenewFlag,

            string createTime,

            string dbEngine,

            string dbVersion,

            string instanceId,

            string instanceName,

            int instanceType,

            int isAuditSupported,

            int isTmp,

            string isolatedTimestamp,

            int memory,

            int nodeCount,

            string paymode,

            string periodEndTime,

            int projectId,

            string region,

            ImmutableArray<Outputs.GetInstancesListResourceTagResult> resourceTags,

            int shardCount,

            ImmutableArray<Outputs.GetInstancesListShardDetailResult> shardDetails,

            int status,

            string statusDesc,

            int storage,

            int subnetId,

            string uin,

            string updateTime,

            string vip,

            int vpcId,

            int vport,

            string wanDomain,

            int wanPort,

            int wanStatus,

            string wanVip)
        {
            AppId = appId;
            AutoRenewFlag = autoRenewFlag;
            CreateTime = createTime;
            DbEngine = dbEngine;
            DbVersion = dbVersion;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceType = instanceType;
            IsAuditSupported = isAuditSupported;
            IsTmp = isTmp;
            IsolatedTimestamp = isolatedTimestamp;
            Memory = memory;
            NodeCount = nodeCount;
            Paymode = paymode;
            PeriodEndTime = periodEndTime;
            ProjectId = projectId;
            Region = region;
            ResourceTags = resourceTags;
            ShardCount = shardCount;
            ShardDetails = shardDetails;
            Status = status;
            StatusDesc = statusDesc;
            Storage = storage;
            SubnetId = subnetId;
            Uin = uin;
            UpdateTime = updateTime;
            Vip = vip;
            VpcId = vpcId;
            Vport = vport;
            WanDomain = wanDomain;
            WanPort = wanPort;
            WanStatus = wanStatus;
            WanVip = wanVip;
        }
    }
}
