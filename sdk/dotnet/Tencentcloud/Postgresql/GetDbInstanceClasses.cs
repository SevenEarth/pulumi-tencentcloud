// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Postgresql
{
    public static class GetDbInstanceClasses
    {
        /// <summary>
        /// Use this data source to query detailed information of postgresql db_instance_classes
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var dbInstanceClasses = Output.Create(Tencentcloud.Postgresql.GetDbInstanceClasses.InvokeAsync(new Tencentcloud.Postgresql.GetDbInstanceClassesArgs
        ///         {
        ///             DbEngine = "postgresql",
        ///             DbMajorVersion = "13",
        ///             Zone = "ap-guangzhou-7",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDbInstanceClassesResult> InvokeAsync(GetDbInstanceClassesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDbInstanceClassesResult>("tencentcloud:Postgresql/getDbInstanceClasses:getDbInstanceClasses", args ?? new GetDbInstanceClassesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of postgresql db_instance_classes
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var dbInstanceClasses = Output.Create(Tencentcloud.Postgresql.GetDbInstanceClasses.InvokeAsync(new Tencentcloud.Postgresql.GetDbInstanceClassesArgs
        ///         {
        ///             DbEngine = "postgresql",
        ///             DbMajorVersion = "13",
        ///             Zone = "ap-guangzhou-7",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDbInstanceClassesResult> Invoke(GetDbInstanceClassesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDbInstanceClassesResult>("tencentcloud:Postgresql/getDbInstanceClasses:getDbInstanceClasses", args ?? new GetDbInstanceClassesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbInstanceClassesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Database engines. Valid values: 1. `postgresql` (TencentDB for PostgreSQL) 2. `mssql_compatible` (MSSQL compatible-TencentDB for PostgreSQL).
        /// </summary>
        [Input("dbEngine", required: true)]
        public string DbEngine { get; set; } = null!;

        /// <summary>
        /// Major version of a database, such as 12 or 13, which can be obtained through the `DescribeDBVersions` API.
        /// </summary>
        [Input("dbMajorVersion", required: true)]
        public string DbMajorVersion { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// AZ ID, which can be obtained through the `DescribeZones` API.
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetDbInstanceClassesArgs()
        {
        }
    }

    public sealed class GetDbInstanceClassesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Database engines. Valid values: 1. `postgresql` (TencentDB for PostgreSQL) 2. `mssql_compatible` (MSSQL compatible-TencentDB for PostgreSQL).
        /// </summary>
        [Input("dbEngine", required: true)]
        public Input<string> DbEngine { get; set; } = null!;

        /// <summary>
        /// Major version of a database, such as 12 or 13, which can be obtained through the `DescribeDBVersions` API.
        /// </summary>
        [Input("dbMajorVersion", required: true)]
        public Input<string> DbMajorVersion { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// AZ ID, which can be obtained through the `DescribeZones` API.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetDbInstanceClassesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDbInstanceClassesResult
    {
        /// <summary>
        /// List of database specifications.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbInstanceClassesClassInfoSetResult> ClassInfoSets;
        public readonly string DbEngine;
        public readonly string DbMajorVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly string Zone;

        [OutputConstructor]
        private GetDbInstanceClassesResult(
            ImmutableArray<Outputs.GetDbInstanceClassesClassInfoSetResult> classInfoSets,

            string dbEngine,

            string dbMajorVersion,

            string id,

            string? resultOutputFile,

            string zone)
        {
            ClassInfoSets = classInfoSets;
            DbEngine = dbEngine;
            DbMajorVersion = dbMajorVersion;
            Id = id;
            ResultOutputFile = resultOutputFile;
            Zone = zone;
        }
    }
}
