// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Postgresql
{
    /// <summary>
    /// Provides a resource to create a postgres backup_plan_config
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var backupPlanConfig = new Tencentcloud.Postgresql.BackupPlanConfig("backupPlanConfig", new Tencentcloud.Postgresql.BackupPlanConfigArgs
    ///         {
    ///             DbInstanceId = local.Pgsql_id,
    ///             MinBackupStartTime = "01:00:00",
    ///             MaxBackupStartTime = "02:00:00",
    ///             BaseBackupRetentionPeriod = 7,
    ///             BackupPeriods = 
    ///             {
    ///                 "monday",
    ///                 "wednesday",
    ///                 "friday",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// postgres backup_plan_config can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig backup_plan_config backup_plan_config_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig")]
    public partial class BackupPlanConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
        /// </summary>
        [Output("backupPeriods")]
        public Output<ImmutableArray<string>> BackupPeriods { get; private set; } = null!;

        /// <summary>
        /// Backup retention period in days. Value range:3-7.
        /// </summary>
        [Output("baseBackupRetentionPeriod")]
        public Output<int?> BaseBackupRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// instance id.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The latest time to start a backup.
        /// </summary>
        [Output("maxBackupStartTime")]
        public Output<string?> MaxBackupStartTime { get; private set; } = null!;

        /// <summary>
        /// The earliest time to start a backup.
        /// </summary>
        [Output("minBackupStartTime")]
        public Output<string?> MinBackupStartTime { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPlanConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPlanConfig(string name, BackupPlanConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig", name, args ?? new BackupPlanConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPlanConfig(string name, Input<string> id, BackupPlanConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPlanConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPlanConfig Get(string name, Input<string> id, BackupPlanConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupPlanConfig(name, id, state, options);
        }
    }

    public sealed class BackupPlanConfigArgs : Pulumi.ResourceArgs
    {
        [Input("backupPeriods")]
        private InputList<string>? _backupPeriods;

        /// <summary>
        /// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
        /// </summary>
        public InputList<string> BackupPeriods
        {
            get => _backupPeriods ?? (_backupPeriods = new InputList<string>());
            set => _backupPeriods = value;
        }

        /// <summary>
        /// Backup retention period in days. Value range:3-7.
        /// </summary>
        [Input("baseBackupRetentionPeriod")]
        public Input<int>? BaseBackupRetentionPeriod { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The latest time to start a backup.
        /// </summary>
        [Input("maxBackupStartTime")]
        public Input<string>? MaxBackupStartTime { get; set; }

        /// <summary>
        /// The earliest time to start a backup.
        /// </summary>
        [Input("minBackupStartTime")]
        public Input<string>? MinBackupStartTime { get; set; }

        public BackupPlanConfigArgs()
        {
        }
    }

    public sealed class BackupPlanConfigState : Pulumi.ResourceArgs
    {
        [Input("backupPeriods")]
        private InputList<string>? _backupPeriods;

        /// <summary>
        /// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
        /// </summary>
        public InputList<string> BackupPeriods
        {
            get => _backupPeriods ?? (_backupPeriods = new InputList<string>());
            set => _backupPeriods = value;
        }

        /// <summary>
        /// Backup retention period in days. Value range:3-7.
        /// </summary>
        [Input("baseBackupRetentionPeriod")]
        public Input<int>? BaseBackupRetentionPeriod { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The latest time to start a backup.
        /// </summary>
        [Input("maxBackupStartTime")]
        public Input<string>? MaxBackupStartTime { get; set; }

        /// <summary>
        /// The earliest time to start a backup.
        /// </summary>
        [Input("minBackupStartTime")]
        public Input<string>? MinBackupStartTime { get; set; }

        public BackupPlanConfigState()
        {
        }
    }
}
