// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Postgresql.Outputs
{

    [OutputType]
    public sealed class GetDefaultParametersParamInfoSetResult
    {
        /// <summary>
        /// Whether it is a key parameter. Valid values: `true` (yes, and modifying it may affect instance performance), `false` (no)Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly bool Advanced;
        /// <summary>
        /// Parameter category in ChineseNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ClassificationCn;
        /// <summary>
        /// Parameter category in EnglishNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ClassificationEn;
        /// <summary>
        /// Current value of the parameter, which is returned as a stringNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string CurrentValue;
        /// <summary>
        /// Default value of the parameter, which is returned as a stringNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string DefaultValue;
        /// <summary>
        /// Value range of the enum parameterNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<string> EnumValues;
        /// <summary>
        /// Parameter IDNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The last modified time of the parameterNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string LastModifyTime;
        /// <summary>
        /// The maximum value of the `integer` or `real` parameterNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly double Max;
        /// <summary>
        /// The minimum value of the `integer` or `real` parameterNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly double Min;
        /// <summary>
        /// Parameter nameNote: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Whether to restart the instance for the modified parameter to take effect. Valid values: `true` (yes), `false` (no)Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly bool NeedReboot;
        /// <summary>
        /// Parameter description in ChineseNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ParamDescriptionCh;
        /// <summary>
        /// Parameter description in EnglishNote: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ParamDescriptionEn;
        /// <summary>
        /// Value type of the parameter. Valid values: `integer`, `real` (floating-point), `bool`, `enum`, `mutil_enum` (this type of parameter can be set to multiple enumerated values).For an `integer` or `real` parameter, the `Min` field represents the minimum value and the `Max` field the maximum value. For a `bool` parameter, the valid values include `true` and `false`; For an `enum` or `mutil_enum` parameter, the `EnumValue` field represents the valid values.Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string ParamValueType;
        /// <summary>
        /// Whether the parameter is related to specifications. Valid values: `true` (yes), `false` (no)Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        public readonly bool SpecRelated;
        /// <summary>
        /// Associated parameter specification information, which refers to the detailed parameter information of the specifications.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDefaultParametersParamInfoSetSpecRelationSetResult> SpecRelationSets;
        /// <summary>
        /// Primary-standby constraint. Valid values: `0` (no constraint), `1` (The parameter value of the standby server must be greater than that of the primary server), `2` (The parameter value of the primary server must be greater than that of the standby server.)Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly int StandbyRelated;
        /// <summary>
        /// Unit of the parameter value. If the parameter has no unit, this field will return null.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly string Unit;
        /// <summary>
        /// Associated parameter version information, which refers to the detailed parameter information of the kernel version.Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDefaultParametersParamInfoSetVersionRelationSetResult> VersionRelationSets;

        [OutputConstructor]
        private GetDefaultParametersParamInfoSetResult(
            bool advanced,

            string classificationCn,

            string classificationEn,

            string currentValue,

            string defaultValue,

            ImmutableArray<string> enumValues,

            int id,

            string lastModifyTime,

            double max,

            double min,

            string name,

            bool needReboot,

            string paramDescriptionCh,

            string paramDescriptionEn,

            string paramValueType,

            bool specRelated,

            ImmutableArray<Outputs.GetDefaultParametersParamInfoSetSpecRelationSetResult> specRelationSets,

            int standbyRelated,

            string unit,

            ImmutableArray<Outputs.GetDefaultParametersParamInfoSetVersionRelationSetResult> versionRelationSets)
        {
            Advanced = advanced;
            ClassificationCn = classificationCn;
            ClassificationEn = classificationEn;
            CurrentValue = currentValue;
            DefaultValue = defaultValue;
            EnumValues = enumValues;
            Id = id;
            LastModifyTime = lastModifyTime;
            Max = max;
            Min = min;
            Name = name;
            NeedReboot = needReboot;
            ParamDescriptionCh = paramDescriptionCh;
            ParamDescriptionEn = paramDescriptionEn;
            ParamValueType = paramValueType;
            SpecRelated = specRelated;
            SpecRelationSets = specRelationSets;
            StandbyRelated = standbyRelated;
            Unit = unit;
            VersionRelationSets = versionRelationSets;
        }
    }
}
