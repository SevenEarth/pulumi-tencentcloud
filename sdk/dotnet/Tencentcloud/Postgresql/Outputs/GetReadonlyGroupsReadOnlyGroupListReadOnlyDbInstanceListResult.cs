// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Postgresql.Outputs
{

    [OutputType]
    public sealed class GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListResult
    {
        /// <summary>
        /// user&amp;#39;s AppId.
        /// </summary>
        public readonly int AppId;
        /// <summary>
        /// auto-renew, 1: auto-renew, 0: no auto-renew.
        /// </summary>
        public readonly int AutoRenew;
        /// <summary>
        /// instance creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// instance DB character set.
        /// </summary>
        public readonly string DbCharset;
        /// <summary>
        /// Database engine that supports:1. postgresql (cloud database PostgreSQL);2. mssql_compatible (MSSQL compatible - cloud database PostgreSQL);Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string DbEngine;
        /// <summary>
        /// Configuration information for the database engineNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string DbEngineConfig;
        /// <summary>
        /// sales specification ID.
        /// </summary>
        public readonly string DbInstanceClass;
        /// <summary>
        /// the number of CPUs allocated by the instance.
        /// </summary>
        public readonly int DbInstanceCpu;
        /// <summary>
        /// instance ID.
        /// </summary>
        public readonly string DbInstanceId;
        /// <summary>
        /// the memory size allocated by the instance, unit: GB.
        /// </summary>
        public readonly int DbInstanceMemory;
        /// <summary>
        /// instance name.
        /// </summary>
        public readonly string DbInstanceName;
        /// <summary>
        /// instance network connection information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListDbInstanceNetInfoResult> DbInstanceNetInfos;
        /// <summary>
        /// Instance status, respectively: applying (applying), init (to be initialized), initing (initializing), running (running), limited run (limited run), isolated (isolated), recycling (recycling ), recycled (recycled), job running (task execution), offline (offline), migrating (migration), expanding (expanding), waitSwitch (waiting for switching), switching (switching), readonly (read-only ), restarting (restarting), network changing (network changing), upgrading (kernel version upgrade).
        /// </summary>
        public readonly string DbInstanceStatus;
        /// <summary>
        /// the size of the storage space allocated by the instance, unit: GB.
        /// </summary>
        public readonly int DbInstanceStorage;
        /// <summary>
        /// instance type, the types are: 1. primary (primary instance); 2. readonly (read-only instance); 3. guard (disaster recovery instance); 4. temp (temporary instance).
        /// </summary>
        public readonly string DbInstanceType;
        /// <summary>
        /// instance version, currently only supports standard (dual machine high availability version, one master and one slave).
        /// </summary>
        public readonly string DbInstanceVersion;
        /// <summary>
        /// Database kernel versionNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string DbKernelVersion;
        /// <summary>
        /// PostgreSQL major versionNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string DbMajorVersion;
        /// <summary>
        /// Instance node informationNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListDbNodeSetResult> DbNodeSets;
        /// <summary>
        /// PostgreSQL version.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// instance expiration time.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// Whether the instance supports TDE data encryption 0: not supported, 1: supportedNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly int IsSupportTDE;
        /// <summary>
        /// instance isolation time.
        /// </summary>
        public readonly string IsolatedTime;
        /// <summary>
        /// Master instance information, only returned when the instance is read-onlyNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string MasterDbInstanceId;
        /// <summary>
        /// Instance network information list (this field is obsolete)Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListNetworkAccessListResult> NetworkAccessLists;
        /// <summary>
        /// offline timeNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string OfflineTime;
        /// <summary>
        /// billing mode, 1. prepaid (subscription, prepaid); 2. postpaid (billing by volume, postpaid).
        /// </summary>
        public readonly string PayType;
        /// <summary>
        /// project ID.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Number of read-only instancesNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly int ReadOnlyInstanceNum;
        /// <summary>
        /// region id.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Status of the read-only instance in the read-only groupNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string StatusInReadonlyGroup;
        /// <summary>
        /// subnet-idNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Whether the instance supports Ipv6, 1: support, 0: not support.
        /// </summary>
        public readonly int SupportIpv6;
        /// <summary>
        /// Label information bound to the instanceNote: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListTagListResult> TagLists;
        /// <summary>
        /// machine type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Uid of the instance.
        /// </summary>
        public readonly int Uid;
        /// <summary>
        /// The time when the instance performed the last update.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// virtual network id.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// region id.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListResult(
            int appId,

            int autoRenew,

            string createTime,

            string dbCharset,

            string dbEngine,

            string dbEngineConfig,

            string dbInstanceClass,

            int dbInstanceCpu,

            string dbInstanceId,

            int dbInstanceMemory,

            string dbInstanceName,

            ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListDbInstanceNetInfoResult> dbInstanceNetInfos,

            string dbInstanceStatus,

            int dbInstanceStorage,

            string dbInstanceType,

            string dbInstanceVersion,

            string dbKernelVersion,

            string dbMajorVersion,

            ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListDbNodeSetResult> dbNodeSets,

            string dbVersion,

            string expireTime,

            int isSupportTDE,

            string isolatedTime,

            string masterDbInstanceId,

            ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListNetworkAccessListResult> networkAccessLists,

            string offlineTime,

            string payType,

            int projectId,

            int readOnlyInstanceNum,

            string region,

            string statusInReadonlyGroup,

            string subnetId,

            int supportIpv6,

            ImmutableArray<Outputs.GetReadonlyGroupsReadOnlyGroupListReadOnlyDbInstanceListTagListResult> tagLists,

            string type,

            int uid,

            string updateTime,

            string vpcId,

            string zone)
        {
            AppId = appId;
            AutoRenew = autoRenew;
            CreateTime = createTime;
            DbCharset = dbCharset;
            DbEngine = dbEngine;
            DbEngineConfig = dbEngineConfig;
            DbInstanceClass = dbInstanceClass;
            DbInstanceCpu = dbInstanceCpu;
            DbInstanceId = dbInstanceId;
            DbInstanceMemory = dbInstanceMemory;
            DbInstanceName = dbInstanceName;
            DbInstanceNetInfos = dbInstanceNetInfos;
            DbInstanceStatus = dbInstanceStatus;
            DbInstanceStorage = dbInstanceStorage;
            DbInstanceType = dbInstanceType;
            DbInstanceVersion = dbInstanceVersion;
            DbKernelVersion = dbKernelVersion;
            DbMajorVersion = dbMajorVersion;
            DbNodeSets = dbNodeSets;
            DbVersion = dbVersion;
            ExpireTime = expireTime;
            IsSupportTDE = isSupportTDE;
            IsolatedTime = isolatedTime;
            MasterDbInstanceId = masterDbInstanceId;
            NetworkAccessLists = networkAccessLists;
            OfflineTime = offlineTime;
            PayType = payType;
            ProjectId = projectId;
            ReadOnlyInstanceNum = readOnlyInstanceNum;
            Region = region;
            StatusInReadonlyGroup = statusInReadonlyGroup;
            SubnetId = subnetId;
            SupportIpv6 = supportIpv6;
            TagLists = tagLists;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
            VpcId = vpcId;
            Zone = zone;
        }
    }
}
