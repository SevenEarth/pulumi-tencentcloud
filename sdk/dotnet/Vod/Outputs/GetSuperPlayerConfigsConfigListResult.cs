// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vod.Outputs
{

    [OutputType]
    public sealed class GetSuperPlayerConfigsConfigListResult
    {
        /// <summary>
        /// ID of the unencrypted adaptive bitrate streaming template that allows output, which is required if `drm_switch` is `false`.
        /// </summary>
        public readonly string AdaptiveDynamicStreamingDefinition;
        /// <summary>
        /// Template description.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// Creation time of template in ISO date format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Content of the DRM-protected adaptive bitrate streaming template that allows output, which is required if `drm_switch` is `true`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListDrmStreamingInfoResult> DrmStreamingInfos;
        /// <summary>
        /// Switch of DRM-protected adaptive bitstream playback: `true`: enabled, indicating to play back only output adaptive bitstreams protected by DRM; `false`: disabled, indicating to play back unencrypted output adaptive bitstreams.
        /// </summary>
        public readonly bool DrmSwitch;
        /// <summary>
        /// ID of the image sprite template that allows output.
        /// </summary>
        public readonly string ImageSpriteDefinition;
        /// <summary>
        /// Name of super player config.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Display name of player for substreams with different resolutions. If this parameter is left empty or an empty array, the default configuration will be used: `min_edge_length: 240, name: LD`; `min_edge_length: 480, name: SD`; `min_edge_length: 720, name: HD`; `min_edge_length: 1080, name: FHD`; `min_edge_length: 1440, name: 2K`; `min_edge_length: 2160, name: 4K`; `min_edge_length: 4320, name: 8K`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListResolutionNameResult> ResolutionNames;
        /// <summary>
        /// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used. Other valid values: `HTTP`; `HTTPS`.
        /// </summary>
        public readonly string Scheme;
        /// <summary>
        /// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Last modified time of template in ISO date format.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSuperPlayerConfigsConfigListResult(
            string adaptiveDynamicStreamingDefinition,

            string comment,

            string createTime,

            string domain,

            ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListDrmStreamingInfoResult> drmStreamingInfos,

            bool drmSwitch,

            string imageSpriteDefinition,

            string name,

            ImmutableArray<Outputs.GetSuperPlayerConfigsConfigListResolutionNameResult> resolutionNames,

            string scheme,

            string type,

            string updateTime)
        {
            AdaptiveDynamicStreamingDefinition = adaptiveDynamicStreamingDefinition;
            Comment = comment;
            CreateTime = createTime;
            Domain = domain;
            DrmStreamingInfos = drmStreamingInfos;
            DrmSwitch = drmSwitch;
            ImageSpriteDefinition = imageSpriteDefinition;
            Name = name;
            ResolutionNames = resolutionNames;
            Scheme = scheme;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
